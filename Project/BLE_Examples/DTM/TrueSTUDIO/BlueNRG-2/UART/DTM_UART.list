
DTM_UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   00000000  10040000  10040000  00040dc0  2**0
                  CONTENTS
  1 .intvec       000000c0  10040000  10040000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000200e4  100400c0  100400c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         000000a8  20000d18  100601d0  00040d18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .ram_preamble 0000002c  20000008  100601a4  00040008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .ram_preamble_noinit 00000008  20000000  20000000  00050000  2**2
                  ALLOC
  6 .ram_preamble_noinit2 00000028  20000034  20000034  00050000  2**0
                  ALLOC
  7 .bss.blueRAM  0000020c  200000c0  200000c0  00050000  2**2
                  ALLOC
  8 .bss          00000a4c  200002cc  200002cc  00050000  2**2
                  ALLOC
  9 .noinit       0000465c  20000dc0  10060278  00040dc0  2**2
                  ALLOC
 10 BLOCK_STACKLIB_FLASH_DATA 00000838  1007f000  1007f000  0004f000  2**2
                  ALLOC
 11 CSTACK        00000000  20005400  20005400  00040dc0  2**0
                  CONTENTS
 12 .rom_info     00000000  10000000  10000000  00040dc0  2**0
                  CONTENTS
 13 .ARM.attributes 0000002f  00000000  00000000  00040dc0  2**0
                  CONTENTS, READONLY
 14 .debug_line   00007562  00000000  00000000  00040def  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_info   0002e15e  00000000  00000000  00048351  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_abbrev 00003cad  00000000  00000000  000764af  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_aranges 000010e8  00000000  00000000  0007a160  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc    00013940  00000000  00000000  0007b248  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00001418  00000000  00000000  0008eb88  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_str    0000d896  00000000  00000000  0008ffa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .comment      000160d2  00000000  00000000  0009d836  2**0
                  CONTENTS, READONLY
 22 .arm_vfe_header 000000dc  00000000  00000000  000b3908  2**2
                  CONTENTS, READONLY
 23 .debug_frame  00003658  00000000  00000000  000b39e4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

100400c0 <CS_contextSave>:
                 __IMPORT__ savedMSP
                 __IMPORT__ savedICSR
                 __IMPORT__ savedSHCSR
                 __IMPORT__ savedNVIC_ISPR
EXPORT_FUNC(CS_contextSave)
                 MRS    R2, CONTROL             /* load the CONTROL register into R2 */
100400c0:	f3ef 8214 	mrs	r2, CONTROL
                 MRS    R1, PSP                 /* load the process stack pointer into R1 */
100400c4:	f3ef 8109 	mrs	r1, PSP
                 LDR    R0, =0
100400c8:	2000      	movs	r0, #0
                 MSR    CONTROL, R0             /* Switch to Main Stack Pointer */
100400ca:	f380 8814 	msr	CONTROL, r0
                 ISB
100400ce:	f3bf 8f6f 	isb	sy
                 SUB    SP, #0x44			    /* Move stack pointer in order to be sure that after wake up the __low_level_init()
                                                   will not corrupt data saved in the stack by CS_contextSave routine.
                                                   WARNING: this instruction breaks backward compatibility with previous CS_contextRestore. */ 
#endif

                 PUSH   { r4 - r7, lr }         /* store R4-R7 and LR (5 words) onto the stack */
100400d2:	b5f0      	push	{r4, r5, r6, r7, lr}
                 MOV    R3, R8                  /* move {r8 - r12} to {r3 - r7} */    
100400d4:	4643      	mov	r3, r8
                 MOV    R4, R9
100400d6:	464c      	mov	r4, r9
                 MOV    R5, R10
100400d8:	4655      	mov	r5, sl
                 MOV    R6, R11        
100400da:	465e      	mov	r6, fp
                 MOV    R7, R12        
100400dc:	4667      	mov	r7, ip
                 PUSH   {R3-R7}                 /* store R8-R12 (5 words) onto the stack */
100400de:	b4f8      	push	{r3, r4, r5, r6, r7}
                 
                 LDR    R4, =savedMSP           /* load address of savedMSP into R4 */
100400e0:	4c16      	ldr	r4, [pc, #88]	; (1004013c <CS_contextRestore+0x2a>)
                 MRS    R3, MSP                 /* load the stack pointer into R3 */
100400e2:	f3ef 8308 	mrs	r3, MSP
                 STR    R3, [R4]                /* store the MSP into savedMSP */
100400e6:	6023      	str	r3, [r4, #0]

                 PUSH   { r1, r2 }               /*  store PSP, CONTROL */
100400e8:	b406      	push	{r1, r2}
                 
                 LDR    R4, =0xE000ED04         /* load address of ICSR register into R4 */
100400ea:	4c15      	ldr	r4, [pc, #84]	; (10040140 <CS_contextRestore+0x2e>)
                 LDR    R0, [R4]                /* load the ICSR register value into R0 */
100400ec:	6820      	ldr	r0, [r4, #0]
                 LDR    R4, =savedICSR          /* load address of savedICSR into R4 */
100400ee:	4c15      	ldr	r4, [pc, #84]	; (10040144 <CS_contextRestore+0x32>)
                 STR    R0, [R4]                /* store the ICSR register value into savedICSR */
100400f0:	6020      	str	r0, [r4, #0]

                 LDR    R4, =0xE000ED24         /* load address of SHCSR register into R4 */
100400f2:	4c15      	ldr	r4, [pc, #84]	; (10040148 <CS_contextRestore+0x36>)
                 LDR    R0, [R4]                /* load the SHCSR register value into R0 */
100400f4:	6820      	ldr	r0, [r4, #0]
                 LDR    R4, =savedSHCSR         /* load address of savedSHCSR into R4 */
100400f6:	4c15      	ldr	r4, [pc, #84]	; (1004014c <CS_contextRestore+0x3a>)
                 STR    R0, [R4]                /* store the SHCSR register value into savedSHCSR */
100400f8:	6020      	str	r0, [r4, #0]

                 LDR    R4, =0xE000E200         /* load address of NVIC_ISPR register into R4 */
100400fa:	4c15      	ldr	r4, [pc, #84]	; (10040150 <CS_contextRestore+0x3e>)
                 LDR    R0, [R4]                /* load the NVIC_ISPR register value into R0 */
100400fc:	6820      	ldr	r0, [r4, #0]
                 LDR    R4, =savedNVIC_ISPR     /* load address of savedNVIC_ISPR into R4 */
100400fe:	4c15      	ldr	r4, [pc, #84]	; (10040154 <CS_contextRestore+0x42>)
                 STR    R0, [R4]                /* store the NVIC_ISPR register value into savedNVIC_ISPR */
10040100:	6020      	str	r0, [r4, #0]

                 LDR    R4, =0x40200008         /* setup the  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 0 */
10040102:	4c15      	ldr	r4, [pc, #84]	; (10040158 <CS_contextRestore+0x46>)
                 LDR    R7, [R4]
10040104:	6827      	ldr	r7, [r4, #0]
                 MOVS   R0, #0                 
10040106:	2000      	movs	r0, #0
                 STR    R0, [R4]
10040108:	6020      	str	r0, [r4, #0]

                 DSB
1004010a:	f3bf 8f4f 	dsb	sy
                 WFI                            /* all saved, trigger deep sleep */
1004010e:	bf30      	wfi
                 
                 STR    R7, [R4]                /* if WFI will be skipped restore the content of the 
10040110:	6027      	str	r7, [r4, #0]

10040112 <CS_contextRestore>:
EXPORT_FUNC(CS_contextRestore)
                /* Even if we fall through the WFI instruction, we will immediately
                 * execute a context restore and end up where we left off with no
                 * ill effects.  Normally at this point the core will either be
                 * powered off or reset (depending on the deep sleep level). */
                LDR    R4, =savedMSP            /* load address of savedMSP into R4 */
10040112:	4c0a      	ldr	r4, [pc, #40]	; (1004013c <CS_contextRestore+0x2a>)
                LDR    R4, [R4]                 /* load the MSP from savedMSP */
10040114:	6824      	ldr	r4, [r4, #0]
                MSR    MSP, R4                  /* restore the MSP from R4 */
10040116:	f384 8808 	msr	MSP, r4
              
                SUB    SP, #0x8               
1004011a:	b082      	sub	sp, #8
                POP    { R0, R1 }               /* load PSP from the stack in R0, and  load CONTROL register from the stack in R1 */
1004011c:	bc03      	pop	{r0, r1}
                
                POP    { R3-R7 }                /* load R8-R12 (5 words) from the stack */
1004011e:	bcf8      	pop	{r3, r4, r5, r6, r7}
                MOV    R8, R3                   /* mov {r3 - r7} to {r8 - r12} */
10040120:	4698      	mov	r8, r3
                MOV    R9, R4
10040122:	46a1      	mov	r9, r4
                MOV    R10, R5
10040124:	46aa      	mov	sl, r5
                MOV    R11, R6
10040126:	46b3      	mov	fp, r6
                MOV    R12, R7
10040128:	46bc      	mov	ip, r7
                POP    { R4 - R7 }              /* load R4-R7 (4 words) from the stack */
1004012a:	bcf0      	pop	{r4, r5, r6, r7}
                POP    { R2 }                   /* load LR from the stack */
1004012c:	bc04      	pop	{r2}
#ifdef CONTEXT_SAVE_V2
                ADD	   SP, #0x44                /* Restore MSP to the point where it was before pushing data to the stack in CS_contextSave */
#endif
                
                MSR    PSP, R0                   /* restore PSP from R0 */
1004012e:	f380 8809 	msr	PSP, r0
                MSR    CONTROL , R1              /* restore CONTROL register from R1 */
10040132:	f381 8814 	msr	CONTROL, r1
                ISB
10040136:	f3bf 8f6f 	isb	sy
 
                BX  R2                          /*load PC (1 words) from the stack */
1004013a:	4710      	bx	r2
                 LDR    R4, =savedMSP           /* load address of savedMSP into R4 */
1004013c:	20000008 	.word	0x20000008
                 LDR    R4, =0xE000ED04         /* load address of ICSR register into R4 */
10040140:	e000ed04 	.word	0xe000ed04
                 LDR    R4, =savedICSR          /* load address of savedICSR into R4 */
10040144:	200004c4 	.word	0x200004c4
                 LDR    R4, =0xE000ED24         /* load address of SHCSR register into R4 */
10040148:	e000ed24 	.word	0xe000ed24
                 LDR    R4, =savedSHCSR         /* load address of savedSHCSR into R4 */
1004014c:	200004c0 	.word	0x200004c0
                 LDR    R4, =0xE000E200         /* load address of NVIC_ISPR register into R4 */
10040150:	e000e200 	.word	0xe000e200
                 LDR    R4, =savedNVIC_ISPR     /* load address of savedNVIC_ISPR into R4 */
10040154:	200004c8 	.word	0x200004c8
                 LDR    R4, =0x40200008         /* setup the  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 0 */
10040158:	40200008 	.word	0x40200008

1004015c <__udivsi3>:
1004015c:	2200      	movs	r2, #0
1004015e:	0843      	lsrs	r3, r0, #1
10040160:	428b      	cmp	r3, r1
10040162:	d374      	bcc.n	1004024e <__udivsi3+0xf2>
10040164:	0903      	lsrs	r3, r0, #4
10040166:	428b      	cmp	r3, r1
10040168:	d35f      	bcc.n	1004022a <__udivsi3+0xce>
1004016a:	0a03      	lsrs	r3, r0, #8
1004016c:	428b      	cmp	r3, r1
1004016e:	d344      	bcc.n	100401fa <__udivsi3+0x9e>
10040170:	0b03      	lsrs	r3, r0, #12
10040172:	428b      	cmp	r3, r1
10040174:	d328      	bcc.n	100401c8 <__udivsi3+0x6c>
10040176:	0c03      	lsrs	r3, r0, #16
10040178:	428b      	cmp	r3, r1
1004017a:	d30d      	bcc.n	10040198 <__udivsi3+0x3c>
1004017c:	22ff      	movs	r2, #255	; 0xff
1004017e:	0209      	lsls	r1, r1, #8
10040180:	ba12      	rev	r2, r2
10040182:	0c03      	lsrs	r3, r0, #16
10040184:	428b      	cmp	r3, r1
10040186:	d302      	bcc.n	1004018e <__udivsi3+0x32>
10040188:	1212      	asrs	r2, r2, #8
1004018a:	0209      	lsls	r1, r1, #8
1004018c:	d065      	beq.n	1004025a <__udivsi3+0xfe>
1004018e:	0b03      	lsrs	r3, r0, #12
10040190:	428b      	cmp	r3, r1
10040192:	d319      	bcc.n	100401c8 <__udivsi3+0x6c>
10040194:	e000      	b.n	10040198 <__udivsi3+0x3c>
10040196:	0a09      	lsrs	r1, r1, #8
10040198:	0bc3      	lsrs	r3, r0, #15
1004019a:	428b      	cmp	r3, r1
1004019c:	d301      	bcc.n	100401a2 <__udivsi3+0x46>
1004019e:	03cb      	lsls	r3, r1, #15
100401a0:	1ac0      	subs	r0, r0, r3
100401a2:	4152      	adcs	r2, r2
100401a4:	0b83      	lsrs	r3, r0, #14
100401a6:	428b      	cmp	r3, r1
100401a8:	d301      	bcc.n	100401ae <__udivsi3+0x52>
100401aa:	038b      	lsls	r3, r1, #14
100401ac:	1ac0      	subs	r0, r0, r3
100401ae:	4152      	adcs	r2, r2
100401b0:	0b43      	lsrs	r3, r0, #13
100401b2:	428b      	cmp	r3, r1
100401b4:	d301      	bcc.n	100401ba <__udivsi3+0x5e>
100401b6:	034b      	lsls	r3, r1, #13
100401b8:	1ac0      	subs	r0, r0, r3
100401ba:	4152      	adcs	r2, r2
100401bc:	0b03      	lsrs	r3, r0, #12
100401be:	428b      	cmp	r3, r1
100401c0:	d301      	bcc.n	100401c6 <__udivsi3+0x6a>
100401c2:	030b      	lsls	r3, r1, #12
100401c4:	1ac0      	subs	r0, r0, r3
100401c6:	4152      	adcs	r2, r2
100401c8:	0ac3      	lsrs	r3, r0, #11
100401ca:	428b      	cmp	r3, r1
100401cc:	d301      	bcc.n	100401d2 <__udivsi3+0x76>
100401ce:	02cb      	lsls	r3, r1, #11
100401d0:	1ac0      	subs	r0, r0, r3
100401d2:	4152      	adcs	r2, r2
100401d4:	0a83      	lsrs	r3, r0, #10
100401d6:	428b      	cmp	r3, r1
100401d8:	d301      	bcc.n	100401de <__udivsi3+0x82>
100401da:	028b      	lsls	r3, r1, #10
100401dc:	1ac0      	subs	r0, r0, r3
100401de:	4152      	adcs	r2, r2
100401e0:	0a43      	lsrs	r3, r0, #9
100401e2:	428b      	cmp	r3, r1
100401e4:	d301      	bcc.n	100401ea <__udivsi3+0x8e>
100401e6:	024b      	lsls	r3, r1, #9
100401e8:	1ac0      	subs	r0, r0, r3
100401ea:	4152      	adcs	r2, r2
100401ec:	0a03      	lsrs	r3, r0, #8
100401ee:	428b      	cmp	r3, r1
100401f0:	d301      	bcc.n	100401f6 <__udivsi3+0x9a>
100401f2:	020b      	lsls	r3, r1, #8
100401f4:	1ac0      	subs	r0, r0, r3
100401f6:	4152      	adcs	r2, r2
100401f8:	d2cd      	bcs.n	10040196 <__udivsi3+0x3a>
100401fa:	09c3      	lsrs	r3, r0, #7
100401fc:	428b      	cmp	r3, r1
100401fe:	d301      	bcc.n	10040204 <__udivsi3+0xa8>
10040200:	01cb      	lsls	r3, r1, #7
10040202:	1ac0      	subs	r0, r0, r3
10040204:	4152      	adcs	r2, r2
10040206:	0983      	lsrs	r3, r0, #6
10040208:	428b      	cmp	r3, r1
1004020a:	d301      	bcc.n	10040210 <__udivsi3+0xb4>
1004020c:	018b      	lsls	r3, r1, #6
1004020e:	1ac0      	subs	r0, r0, r3
10040210:	4152      	adcs	r2, r2
10040212:	0943      	lsrs	r3, r0, #5
10040214:	428b      	cmp	r3, r1
10040216:	d301      	bcc.n	1004021c <__udivsi3+0xc0>
10040218:	014b      	lsls	r3, r1, #5
1004021a:	1ac0      	subs	r0, r0, r3
1004021c:	4152      	adcs	r2, r2
1004021e:	0903      	lsrs	r3, r0, #4
10040220:	428b      	cmp	r3, r1
10040222:	d301      	bcc.n	10040228 <__udivsi3+0xcc>
10040224:	010b      	lsls	r3, r1, #4
10040226:	1ac0      	subs	r0, r0, r3
10040228:	4152      	adcs	r2, r2
1004022a:	08c3      	lsrs	r3, r0, #3
1004022c:	428b      	cmp	r3, r1
1004022e:	d301      	bcc.n	10040234 <__udivsi3+0xd8>
10040230:	00cb      	lsls	r3, r1, #3
10040232:	1ac0      	subs	r0, r0, r3
10040234:	4152      	adcs	r2, r2
10040236:	0883      	lsrs	r3, r0, #2
10040238:	428b      	cmp	r3, r1
1004023a:	d301      	bcc.n	10040240 <__udivsi3+0xe4>
1004023c:	008b      	lsls	r3, r1, #2
1004023e:	1ac0      	subs	r0, r0, r3
10040240:	4152      	adcs	r2, r2
10040242:	0843      	lsrs	r3, r0, #1
10040244:	428b      	cmp	r3, r1
10040246:	d301      	bcc.n	1004024c <__udivsi3+0xf0>
10040248:	004b      	lsls	r3, r1, #1
1004024a:	1ac0      	subs	r0, r0, r3
1004024c:	4152      	adcs	r2, r2
1004024e:	1a41      	subs	r1, r0, r1
10040250:	d200      	bcs.n	10040254 <__udivsi3+0xf8>
10040252:	4601      	mov	r1, r0
10040254:	4152      	adcs	r2, r2
10040256:	4610      	mov	r0, r2
10040258:	4770      	bx	lr
1004025a:	e7ff      	b.n	1004025c <__udivsi3+0x100>
1004025c:	b501      	push	{r0, lr}
1004025e:	2000      	movs	r0, #0
10040260:	f000 f8f0 	bl	10040444 <__aeabi_idiv0>
10040264:	bd02      	pop	{r1, pc}
10040266:	46c0      	nop			; (mov r8, r8)

10040268 <__aeabi_uidivmod>:
10040268:	2900      	cmp	r1, #0
1004026a:	d0f7      	beq.n	1004025c <__udivsi3+0x100>
1004026c:	e776      	b.n	1004015c <__udivsi3>
1004026e:	4770      	bx	lr

10040270 <__divsi3>:
10040270:	4603      	mov	r3, r0
10040272:	430b      	orrs	r3, r1
10040274:	d47f      	bmi.n	10040376 <__divsi3+0x106>
10040276:	2200      	movs	r2, #0
10040278:	0843      	lsrs	r3, r0, #1
1004027a:	428b      	cmp	r3, r1
1004027c:	d374      	bcc.n	10040368 <__divsi3+0xf8>
1004027e:	0903      	lsrs	r3, r0, #4
10040280:	428b      	cmp	r3, r1
10040282:	d35f      	bcc.n	10040344 <__divsi3+0xd4>
10040284:	0a03      	lsrs	r3, r0, #8
10040286:	428b      	cmp	r3, r1
10040288:	d344      	bcc.n	10040314 <__divsi3+0xa4>
1004028a:	0b03      	lsrs	r3, r0, #12
1004028c:	428b      	cmp	r3, r1
1004028e:	d328      	bcc.n	100402e2 <__divsi3+0x72>
10040290:	0c03      	lsrs	r3, r0, #16
10040292:	428b      	cmp	r3, r1
10040294:	d30d      	bcc.n	100402b2 <__divsi3+0x42>
10040296:	22ff      	movs	r2, #255	; 0xff
10040298:	0209      	lsls	r1, r1, #8
1004029a:	ba12      	rev	r2, r2
1004029c:	0c03      	lsrs	r3, r0, #16
1004029e:	428b      	cmp	r3, r1
100402a0:	d302      	bcc.n	100402a8 <__divsi3+0x38>
100402a2:	1212      	asrs	r2, r2, #8
100402a4:	0209      	lsls	r1, r1, #8
100402a6:	d065      	beq.n	10040374 <__divsi3+0x104>
100402a8:	0b03      	lsrs	r3, r0, #12
100402aa:	428b      	cmp	r3, r1
100402ac:	d319      	bcc.n	100402e2 <__divsi3+0x72>
100402ae:	e000      	b.n	100402b2 <__divsi3+0x42>
100402b0:	0a09      	lsrs	r1, r1, #8
100402b2:	0bc3      	lsrs	r3, r0, #15
100402b4:	428b      	cmp	r3, r1
100402b6:	d301      	bcc.n	100402bc <__divsi3+0x4c>
100402b8:	03cb      	lsls	r3, r1, #15
100402ba:	1ac0      	subs	r0, r0, r3
100402bc:	4152      	adcs	r2, r2
100402be:	0b83      	lsrs	r3, r0, #14
100402c0:	428b      	cmp	r3, r1
100402c2:	d301      	bcc.n	100402c8 <__divsi3+0x58>
100402c4:	038b      	lsls	r3, r1, #14
100402c6:	1ac0      	subs	r0, r0, r3
100402c8:	4152      	adcs	r2, r2
100402ca:	0b43      	lsrs	r3, r0, #13
100402cc:	428b      	cmp	r3, r1
100402ce:	d301      	bcc.n	100402d4 <__divsi3+0x64>
100402d0:	034b      	lsls	r3, r1, #13
100402d2:	1ac0      	subs	r0, r0, r3
100402d4:	4152      	adcs	r2, r2
100402d6:	0b03      	lsrs	r3, r0, #12
100402d8:	428b      	cmp	r3, r1
100402da:	d301      	bcc.n	100402e0 <__divsi3+0x70>
100402dc:	030b      	lsls	r3, r1, #12
100402de:	1ac0      	subs	r0, r0, r3
100402e0:	4152      	adcs	r2, r2
100402e2:	0ac3      	lsrs	r3, r0, #11
100402e4:	428b      	cmp	r3, r1
100402e6:	d301      	bcc.n	100402ec <__divsi3+0x7c>
100402e8:	02cb      	lsls	r3, r1, #11
100402ea:	1ac0      	subs	r0, r0, r3
100402ec:	4152      	adcs	r2, r2
100402ee:	0a83      	lsrs	r3, r0, #10
100402f0:	428b      	cmp	r3, r1
100402f2:	d301      	bcc.n	100402f8 <__divsi3+0x88>
100402f4:	028b      	lsls	r3, r1, #10
100402f6:	1ac0      	subs	r0, r0, r3
100402f8:	4152      	adcs	r2, r2
100402fa:	0a43      	lsrs	r3, r0, #9
100402fc:	428b      	cmp	r3, r1
100402fe:	d301      	bcc.n	10040304 <__divsi3+0x94>
10040300:	024b      	lsls	r3, r1, #9
10040302:	1ac0      	subs	r0, r0, r3
10040304:	4152      	adcs	r2, r2
10040306:	0a03      	lsrs	r3, r0, #8
10040308:	428b      	cmp	r3, r1
1004030a:	d301      	bcc.n	10040310 <__divsi3+0xa0>
1004030c:	020b      	lsls	r3, r1, #8
1004030e:	1ac0      	subs	r0, r0, r3
10040310:	4152      	adcs	r2, r2
10040312:	d2cd      	bcs.n	100402b0 <__divsi3+0x40>
10040314:	09c3      	lsrs	r3, r0, #7
10040316:	428b      	cmp	r3, r1
10040318:	d301      	bcc.n	1004031e <__divsi3+0xae>
1004031a:	01cb      	lsls	r3, r1, #7
1004031c:	1ac0      	subs	r0, r0, r3
1004031e:	4152      	adcs	r2, r2
10040320:	0983      	lsrs	r3, r0, #6
10040322:	428b      	cmp	r3, r1
10040324:	d301      	bcc.n	1004032a <__divsi3+0xba>
10040326:	018b      	lsls	r3, r1, #6
10040328:	1ac0      	subs	r0, r0, r3
1004032a:	4152      	adcs	r2, r2
1004032c:	0943      	lsrs	r3, r0, #5
1004032e:	428b      	cmp	r3, r1
10040330:	d301      	bcc.n	10040336 <__divsi3+0xc6>
10040332:	014b      	lsls	r3, r1, #5
10040334:	1ac0      	subs	r0, r0, r3
10040336:	4152      	adcs	r2, r2
10040338:	0903      	lsrs	r3, r0, #4
1004033a:	428b      	cmp	r3, r1
1004033c:	d301      	bcc.n	10040342 <__divsi3+0xd2>
1004033e:	010b      	lsls	r3, r1, #4
10040340:	1ac0      	subs	r0, r0, r3
10040342:	4152      	adcs	r2, r2
10040344:	08c3      	lsrs	r3, r0, #3
10040346:	428b      	cmp	r3, r1
10040348:	d301      	bcc.n	1004034e <__divsi3+0xde>
1004034a:	00cb      	lsls	r3, r1, #3
1004034c:	1ac0      	subs	r0, r0, r3
1004034e:	4152      	adcs	r2, r2
10040350:	0883      	lsrs	r3, r0, #2
10040352:	428b      	cmp	r3, r1
10040354:	d301      	bcc.n	1004035a <__divsi3+0xea>
10040356:	008b      	lsls	r3, r1, #2
10040358:	1ac0      	subs	r0, r0, r3
1004035a:	4152      	adcs	r2, r2
1004035c:	0843      	lsrs	r3, r0, #1
1004035e:	428b      	cmp	r3, r1
10040360:	d301      	bcc.n	10040366 <__divsi3+0xf6>
10040362:	004b      	lsls	r3, r1, #1
10040364:	1ac0      	subs	r0, r0, r3
10040366:	4152      	adcs	r2, r2
10040368:	1a41      	subs	r1, r0, r1
1004036a:	d200      	bcs.n	1004036e <__divsi3+0xfe>
1004036c:	4601      	mov	r1, r0
1004036e:	4152      	adcs	r2, r2
10040370:	4610      	mov	r0, r2
10040372:	4770      	bx	lr
10040374:	e05d      	b.n	10040432 <__divsi3+0x1c2>
10040376:	0fca      	lsrs	r2, r1, #31
10040378:	d000      	beq.n	1004037c <__divsi3+0x10c>
1004037a:	4249      	negs	r1, r1
1004037c:	1003      	asrs	r3, r0, #32
1004037e:	d300      	bcc.n	10040382 <__divsi3+0x112>
10040380:	4240      	negs	r0, r0
10040382:	4053      	eors	r3, r2
10040384:	2200      	movs	r2, #0
10040386:	469c      	mov	ip, r3
10040388:	0903      	lsrs	r3, r0, #4
1004038a:	428b      	cmp	r3, r1
1004038c:	d32d      	bcc.n	100403ea <__divsi3+0x17a>
1004038e:	0a03      	lsrs	r3, r0, #8
10040390:	428b      	cmp	r3, r1
10040392:	d312      	bcc.n	100403ba <__divsi3+0x14a>
10040394:	22fc      	movs	r2, #252	; 0xfc
10040396:	0189      	lsls	r1, r1, #6
10040398:	ba12      	rev	r2, r2
1004039a:	0a03      	lsrs	r3, r0, #8
1004039c:	428b      	cmp	r3, r1
1004039e:	d30c      	bcc.n	100403ba <__divsi3+0x14a>
100403a0:	0189      	lsls	r1, r1, #6
100403a2:	1192      	asrs	r2, r2, #6
100403a4:	428b      	cmp	r3, r1
100403a6:	d308      	bcc.n	100403ba <__divsi3+0x14a>
100403a8:	0189      	lsls	r1, r1, #6
100403aa:	1192      	asrs	r2, r2, #6
100403ac:	428b      	cmp	r3, r1
100403ae:	d304      	bcc.n	100403ba <__divsi3+0x14a>
100403b0:	0189      	lsls	r1, r1, #6
100403b2:	d03a      	beq.n	1004042a <__divsi3+0x1ba>
100403b4:	1192      	asrs	r2, r2, #6
100403b6:	e000      	b.n	100403ba <__divsi3+0x14a>
100403b8:	0989      	lsrs	r1, r1, #6
100403ba:	09c3      	lsrs	r3, r0, #7
100403bc:	428b      	cmp	r3, r1
100403be:	d301      	bcc.n	100403c4 <__divsi3+0x154>
100403c0:	01cb      	lsls	r3, r1, #7
100403c2:	1ac0      	subs	r0, r0, r3
100403c4:	4152      	adcs	r2, r2
100403c6:	0983      	lsrs	r3, r0, #6
100403c8:	428b      	cmp	r3, r1
100403ca:	d301      	bcc.n	100403d0 <__divsi3+0x160>
100403cc:	018b      	lsls	r3, r1, #6
100403ce:	1ac0      	subs	r0, r0, r3
100403d0:	4152      	adcs	r2, r2
100403d2:	0943      	lsrs	r3, r0, #5
100403d4:	428b      	cmp	r3, r1
100403d6:	d301      	bcc.n	100403dc <__divsi3+0x16c>
100403d8:	014b      	lsls	r3, r1, #5
100403da:	1ac0      	subs	r0, r0, r3
100403dc:	4152      	adcs	r2, r2
100403de:	0903      	lsrs	r3, r0, #4
100403e0:	428b      	cmp	r3, r1
100403e2:	d301      	bcc.n	100403e8 <__divsi3+0x178>
100403e4:	010b      	lsls	r3, r1, #4
100403e6:	1ac0      	subs	r0, r0, r3
100403e8:	4152      	adcs	r2, r2
100403ea:	08c3      	lsrs	r3, r0, #3
100403ec:	428b      	cmp	r3, r1
100403ee:	d301      	bcc.n	100403f4 <__divsi3+0x184>
100403f0:	00cb      	lsls	r3, r1, #3
100403f2:	1ac0      	subs	r0, r0, r3
100403f4:	4152      	adcs	r2, r2
100403f6:	0883      	lsrs	r3, r0, #2
100403f8:	428b      	cmp	r3, r1
100403fa:	d301      	bcc.n	10040400 <__divsi3+0x190>
100403fc:	008b      	lsls	r3, r1, #2
100403fe:	1ac0      	subs	r0, r0, r3
10040400:	4152      	adcs	r2, r2
10040402:	d2d9      	bcs.n	100403b8 <__divsi3+0x148>
10040404:	0843      	lsrs	r3, r0, #1
10040406:	428b      	cmp	r3, r1
10040408:	d301      	bcc.n	1004040e <__divsi3+0x19e>
1004040a:	004b      	lsls	r3, r1, #1
1004040c:	1ac0      	subs	r0, r0, r3
1004040e:	4152      	adcs	r2, r2
10040410:	1a41      	subs	r1, r0, r1
10040412:	d200      	bcs.n	10040416 <__divsi3+0x1a6>
10040414:	4601      	mov	r1, r0
10040416:	4663      	mov	r3, ip
10040418:	4152      	adcs	r2, r2
1004041a:	105b      	asrs	r3, r3, #1
1004041c:	4610      	mov	r0, r2
1004041e:	d301      	bcc.n	10040424 <__divsi3+0x1b4>
10040420:	4240      	negs	r0, r0
10040422:	2b00      	cmp	r3, #0
10040424:	d500      	bpl.n	10040428 <__divsi3+0x1b8>
10040426:	4249      	negs	r1, r1
10040428:	4770      	bx	lr
1004042a:	4663      	mov	r3, ip
1004042c:	105b      	asrs	r3, r3, #1
1004042e:	d300      	bcc.n	10040432 <__divsi3+0x1c2>
10040430:	4240      	negs	r0, r0
10040432:	b501      	push	{r0, lr}
10040434:	2000      	movs	r0, #0
10040436:	f000 f805 	bl	10040444 <__aeabi_idiv0>
1004043a:	bd02      	pop	{r1, pc}

1004043c <__aeabi_idivmod>:
1004043c:	2900      	cmp	r1, #0
1004043e:	d0f8      	beq.n	10040432 <__divsi3+0x1c2>
10040440:	e716      	b.n	10040270 <__divsi3>
10040442:	4770      	bx	lr

10040444 <__aeabi_idiv0>:
10040444:	4770      	bx	lr
10040446:	46c0      	nop			; (mov r8, r8)

10040448 <__aeabi_uread4>:
10040448:	7843      	ldrb	r3, [r0, #1]
1004044a:	7802      	ldrb	r2, [r0, #0]
1004044c:	021b      	lsls	r3, r3, #8
1004044e:	431a      	orrs	r2, r3
10040450:	7883      	ldrb	r3, [r0, #2]
10040452:	78c0      	ldrb	r0, [r0, #3]
10040454:	041b      	lsls	r3, r3, #16
10040456:	4313      	orrs	r3, r2
10040458:	0600      	lsls	r0, r0, #24
1004045a:	4318      	orrs	r0, r3
1004045c:	4770      	bx	lr
1004045e:	46c0      	nop			; (mov r8, r8)

10040460 <__aeabi_uwrite4>:
10040460:	0a03      	lsrs	r3, r0, #8
10040462:	704b      	strb	r3, [r1, #1]
10040464:	0c03      	lsrs	r3, r0, #16
10040466:	708b      	strb	r3, [r1, #2]
10040468:	0e03      	lsrs	r3, r0, #24
1004046a:	7008      	strb	r0, [r1, #0]
1004046c:	70cb      	strb	r3, [r1, #3]
1004046e:	4770      	bx	lr

10040470 <__aeabi_uread8>:
10040470:	0003      	movs	r3, r0
10040472:	785a      	ldrb	r2, [r3, #1]
10040474:	7800      	ldrb	r0, [r0, #0]
10040476:	0212      	lsls	r2, r2, #8
10040478:	4302      	orrs	r2, r0
1004047a:	7898      	ldrb	r0, [r3, #2]
1004047c:	7919      	ldrb	r1, [r3, #4]
1004047e:	0400      	lsls	r0, r0, #16
10040480:	4302      	orrs	r2, r0
10040482:	78d8      	ldrb	r0, [r3, #3]
10040484:	0600      	lsls	r0, r0, #24
10040486:	4310      	orrs	r0, r2
10040488:	795a      	ldrb	r2, [r3, #5]
1004048a:	0212      	lsls	r2, r2, #8
1004048c:	430a      	orrs	r2, r1
1004048e:	7999      	ldrb	r1, [r3, #6]
10040490:	0409      	lsls	r1, r1, #16
10040492:	430a      	orrs	r2, r1
10040494:	79d9      	ldrb	r1, [r3, #7]
10040496:	0609      	lsls	r1, r1, #24
10040498:	4311      	orrs	r1, r2
1004049a:	4770      	bx	lr

1004049c <__aeabi_uwrite8>:
1004049c:	0a03      	lsrs	r3, r0, #8
1004049e:	7053      	strb	r3, [r2, #1]
100404a0:	0c03      	lsrs	r3, r0, #16
100404a2:	7093      	strb	r3, [r2, #2]
100404a4:	0e03      	lsrs	r3, r0, #24
100404a6:	70d3      	strb	r3, [r2, #3]
100404a8:	0a0b      	lsrs	r3, r1, #8
100404aa:	7153      	strb	r3, [r2, #5]
100404ac:	0c0b      	lsrs	r3, r1, #16
100404ae:	7193      	strb	r3, [r2, #6]
100404b0:	0e0b      	lsrs	r3, r1, #24
100404b2:	7010      	strb	r0, [r2, #0]
100404b4:	7111      	strb	r1, [r2, #4]
100404b6:	71d3      	strb	r3, [r2, #7]
100404b8:	4770      	bx	lr
100404ba:	46c0      	nop			; (mov r8, r8)

100404bc <_fifo_get>:
{
  return (_fifo_put(fifo, size, buffer, fifo->tail));
}

static uint8_t _fifo_get(circular_fifo_t *fifo, uint16_t size, uint8_t  *buffer, uint16_t index)
{
100404bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100404be:	0005      	movs	r5, r0
100404c0:	0016      	movs	r6, r2
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
100404c2:	7b02      	ldrb	r2, [r0, #12]
100404c4:	1e4c      	subs	r4, r1, #1
100404c6:	1914      	adds	r4, r2, r4
100404c8:	4252      	negs	r2, r2
100404ca:	4014      	ands	r4, r2
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100404cc:	8800      	ldrh	r0, [r0, #0]
100404ce:	886a      	ldrh	r2, [r5, #2]
{
100404d0:	000f      	movs	r7, r1
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
100404d2:	b2a4      	uxth	r4, r4
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100404d4:	4290      	cmp	r0, r2
100404d6:	d311      	bcc.n	100404fc <_fifo_get+0x40>
100404d8:	1a82      	subs	r2, r0, r2
    Osal_MemCpy(buffer, &fifo->buffer[index], size);
    fifo->head = ADVANCE_QUEUE(fifo->head, size_aligned, fifo->max_size);

    return 0;
  }
  return 1;
100404da:	2001      	movs	r0, #1
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100404dc:	42a2      	cmp	r2, r4
100404de:	db0c      	blt.n	100404fa <_fifo_get+0x3e>
    Osal_MemCpy(buffer, &fifo->buffer[index], size);
100404e0:	68aa      	ldr	r2, [r5, #8]
100404e2:	0030      	movs	r0, r6
100404e4:	18d1      	adds	r1, r2, r3
100404e6:	003a      	movs	r2, r7
100404e8:	f000 f94b 	bl	10040782 <Osal_MemCpy>
    fifo->head = ADVANCE_QUEUE(fifo->head, size_aligned, fifo->max_size);
100404ec:	8868      	ldrh	r0, [r5, #2]
100404ee:	88a9      	ldrh	r1, [r5, #4]
100404f0:	1900      	adds	r0, r0, r4
100404f2:	f7ff ffa3 	bl	1004043c <__aeabi_idivmod>
    return 0;
100404f6:	2000      	movs	r0, #0
    fifo->head = ADVANCE_QUEUE(fifo->head, size_aligned, fifo->max_size);
100404f8:	8069      	strh	r1, [r5, #2]
}
100404fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100404fc:	88a9      	ldrh	r1, [r5, #4]
100404fe:	1a12      	subs	r2, r2, r0
10040500:	1a8a      	subs	r2, r1, r2
10040502:	e7ea      	b.n	100404da <_fifo_get+0x1e>

10040504 <fifo_init>:
{
10040504:	b510      	push	{r4, lr}
  fifo->tail = fifo->head = 0;
10040506:	2400      	movs	r4, #0
  fifo->max_size = max_size;
10040508:	8081      	strh	r1, [r0, #4]
  fifo->tail = fifo->head = 0;
1004050a:	8044      	strh	r4, [r0, #2]
1004050c:	8004      	strh	r4, [r0, #0]
  fifo->buffer = buffer;
1004050e:	6082      	str	r2, [r0, #8]
  fifo->alignment = alignment;
10040510:	7303      	strb	r3, [r0, #12]
}
10040512:	bd10      	pop	{r4, pc}

10040514 <fifo_size>:
  return FIFO_GET_SIZE(fifo);
10040514:	8803      	ldrh	r3, [r0, #0]
10040516:	8842      	ldrh	r2, [r0, #2]
10040518:	4293      	cmp	r3, r2
1004051a:	d302      	bcc.n	10040522 <fifo_size+0xe>
1004051c:	1a98      	subs	r0, r3, r2
1004051e:	b280      	uxth	r0, r0
}
10040520:	4770      	bx	lr
  return FIFO_GET_SIZE(fifo);
10040522:	8880      	ldrh	r0, [r0, #4]
10040524:	1818      	adds	r0, r3, r0
10040526:	1a80      	subs	r0, r0, r2
10040528:	e7f9      	b.n	1004051e <fifo_size+0xa>

1004052a <fifo_flush>:
  fifo->tail = fifo->head = 0;
1004052a:	2300      	movs	r3, #0
1004052c:	8043      	strh	r3, [r0, #2]
1004052e:	8003      	strh	r3, [r0, #0]
}
10040530:	4770      	bx	lr

10040532 <fifo_get>:
  uint16_t index = (fifo->head == 0) ? fifo->max_size : fifo->head;
  return (_fifo_get(fifo, size, buffer, index));
}

uint8_t fifo_get(circular_fifo_t *fifo, uint16_t size, uint8_t  *buffer)
{
10040532:	b510      	push	{r4, lr}
  return (_fifo_get(fifo, size, buffer, fifo->head));
10040534:	8843      	ldrh	r3, [r0, #2]
10040536:	f7ff ffc1 	bl	100404bc <_fifo_get>
}
1004053a:	bd10      	pop	{r4, pc}

1004053c <fifo_put_var_len_item>:

uint8_t fifo_put_var_len_item(circular_fifo_t *fifo, uint16_t size, uint8_t  *buffer)
{
1004053c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004053e:	466b      	mov	r3, sp
10040540:	1d9e      	adds	r6, r3, #6
10040542:	9200      	str	r2, [sp, #0]
10040544:	8031      	strh	r1, [r6, #0]
  uint8_t ret_val = 0;
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
10040546:	7b03      	ldrb	r3, [r0, #12]
10040548:	3901      	subs	r1, #1
1004054a:	b29a      	uxth	r2, r3
1004054c:	1851      	adds	r1, r2, r1
1004054e:	4252      	negs	r2, r2
10040550:	400a      	ands	r2, r1
  uint8_t  length_size_aligned = FIFO_ALIGN(VAR_LEN_ITEM_SIZE_LENGTH, FIFO_ALIGNMENT);
10040552:	1c5c      	adds	r4, r3, #1
10040554:	425b      	negs	r3, r3
10040556:	401c      	ands	r4, r3
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
10040558:	b297      	uxth	r7, r2
  
  if ((FIFO_GET_SIZE(fifo) + size_aligned + length_size_aligned) < fifo->max_size) {
1004055a:	8843      	ldrh	r3, [r0, #2]
1004055c:	8802      	ldrh	r2, [r0, #0]
{
1004055e:	0005      	movs	r5, r0
  uint8_t  length_size_aligned = FIFO_ALIGN(VAR_LEN_ITEM_SIZE_LENGTH, FIFO_ALIGNMENT);
10040560:	b2e4      	uxtb	r4, r4
10040562:	8881      	ldrh	r1, [r0, #4]
  if ((FIFO_GET_SIZE(fifo) + size_aligned + length_size_aligned) < fifo->max_size) {
10040564:	429a      	cmp	r2, r3
10040566:	d31c      	bcc.n	100405a2 <fifo_put_var_len_item+0x66>
10040568:	1ad3      	subs	r3, r2, r3
1004056a:	19db      	adds	r3, r3, r7
1004056c:	191b      	adds	r3, r3, r4
    Osal_MemCpy(&fifo->buffer[fifo->tail + length_size_aligned], buffer, size);
    
    fifo->tail = ADVANCE_QUEUE(fifo->tail, size_aligned + length_size_aligned, fifo->max_size);
    
  } else {
    ret_val = 1;
1004056e:	2001      	movs	r0, #1
  if ((FIFO_GET_SIZE(fifo) + size_aligned + length_size_aligned) < fifo->max_size) {
10040570:	428b      	cmp	r3, r1
10040572:	da15      	bge.n	100405a0 <fifo_put_var_len_item+0x64>
    Osal_MemCpy(&fifo->buffer[fifo->tail], &size, VAR_LEN_ITEM_SIZE_LENGTH);  
10040574:	68ab      	ldr	r3, [r5, #8]
10040576:	0031      	movs	r1, r6
10040578:	1898      	adds	r0, r3, r2
1004057a:	2202      	movs	r2, #2
1004057c:	f000 f901 	bl	10040782 <Osal_MemCpy>
    Osal_MemCpy(&fifo->buffer[fifo->tail + length_size_aligned], buffer, size);
10040580:	8828      	ldrh	r0, [r5, #0]
10040582:	68ab      	ldr	r3, [r5, #8]
10040584:	1900      	adds	r0, r0, r4
10040586:	8832      	ldrh	r2, [r6, #0]
10040588:	1818      	adds	r0, r3, r0
1004058a:	9900      	ldr	r1, [sp, #0]
1004058c:	f000 f8f9 	bl	10040782 <Osal_MemCpy>
    fifo->tail = ADVANCE_QUEUE(fifo->tail, size_aligned + length_size_aligned, fifo->max_size);
10040590:	8828      	ldrh	r0, [r5, #0]
10040592:	88a9      	ldrh	r1, [r5, #4]
10040594:	19c0      	adds	r0, r0, r7
10040596:	1900      	adds	r0, r0, r4
10040598:	f7ff ff50 	bl	1004043c <__aeabi_idivmod>
  uint8_t ret_val = 0;
1004059c:	2000      	movs	r0, #0
    fifo->tail = ADVANCE_QUEUE(fifo->tail, size_aligned + length_size_aligned, fifo->max_size);
1004059e:	8029      	strh	r1, [r5, #0]
  }
  return ret_val;
}
100405a0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if ((FIFO_GET_SIZE(fifo) + size_aligned + length_size_aligned) < fifo->max_size) {
100405a2:	1a9b      	subs	r3, r3, r2
100405a4:	1acb      	subs	r3, r1, r3
100405a6:	e7e0      	b.n	1004056a <fifo_put_var_len_item+0x2e>

100405a8 <fifo_discard>:


uint8_t fifo_discard(circular_fifo_t *fifo, uint16_t size)
{
100405a8:	b510      	push	{r4, lr}
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
100405aa:	7b03      	ldrb	r3, [r0, #12]
100405ac:	3901      	subs	r1, #1
100405ae:	1859      	adds	r1, r3, r1
100405b0:	425b      	negs	r3, r3
100405b2:	4019      	ands	r1, r3
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405b4:	8802      	ldrh	r2, [r0, #0]
100405b6:	8843      	ldrh	r3, [r0, #2]
{
100405b8:	0004      	movs	r4, r0
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
100405ba:	b289      	uxth	r1, r1
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405bc:	429a      	cmp	r2, r3
100405be:	d30a      	bcc.n	100405d6 <fifo_discard+0x2e>
100405c0:	1ad2      	subs	r2, r2, r3
    fifo->head = ADVANCE_QUEUE(fifo->head, size_aligned, fifo->max_size);
    return 0;
  }
  return 1;
100405c2:	2001      	movs	r0, #1
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405c4:	428a      	cmp	r2, r1
100405c6:	db05      	blt.n	100405d4 <fifo_discard+0x2c>
    fifo->head = ADVANCE_QUEUE(fifo->head, size_aligned, fifo->max_size);
100405c8:	1858      	adds	r0, r3, r1
100405ca:	88a1      	ldrh	r1, [r4, #4]
100405cc:	f7ff ff36 	bl	1004043c <__aeabi_idivmod>
    return 0;
100405d0:	2000      	movs	r0, #0
    fifo->head = ADVANCE_QUEUE(fifo->head, size_aligned, fifo->max_size);
100405d2:	8061      	strh	r1, [r4, #2]
}
100405d4:	bd10      	pop	{r4, pc}
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405d6:	8880      	ldrh	r0, [r0, #4]
100405d8:	1a9a      	subs	r2, r3, r2
100405da:	1a82      	subs	r2, r0, r2
100405dc:	e7f1      	b.n	100405c2 <fifo_discard+0x1a>

100405de <fifo_get_ptr>:

uint8_t fifo_get_ptr(circular_fifo_t *fifo, uint16_t size, uint8_t **ptr)
{
100405de:	b530      	push	{r4, r5, lr}
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
100405e0:	7b03      	ldrb	r3, [r0, #12]
100405e2:	3901      	subs	r1, #1
100405e4:	1859      	adds	r1, r3, r1
100405e6:	425b      	negs	r3, r3
100405e8:	400b      	ands	r3, r1
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405ea:	8844      	ldrh	r4, [r0, #2]
100405ec:	8801      	ldrh	r1, [r0, #0]
  uint16_t size_aligned = FIFO_ALIGN(size, FIFO_ALIGNMENT);
100405ee:	b29b      	uxth	r3, r3
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405f0:	42a1      	cmp	r1, r4
100405f2:	d309      	bcc.n	10040608 <fifo_get_ptr+0x2a>
100405f4:	1b09      	subs	r1, r1, r4
    *ptr = &fifo->buffer[fifo->head];
    return 0;
  }
  return 1;
100405f6:	2501      	movs	r5, #1
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
100405f8:	4299      	cmp	r1, r3
100405fa:	db03      	blt.n	10040604 <fifo_get_ptr+0x26>
    return 0;
100405fc:	2500      	movs	r5, #0
    *ptr = &fifo->buffer[fifo->head];
100405fe:	6883      	ldr	r3, [r0, #8]
10040600:	191c      	adds	r4, r3, r4
10040602:	6014      	str	r4, [r2, #0]
}
10040604:	0028      	movs	r0, r5
10040606:	bd30      	pop	{r4, r5, pc}
  if (FIFO_GET_SIZE(fifo) >= size_aligned) {
10040608:	8885      	ldrh	r5, [r0, #4]
1004060a:	1a61      	subs	r1, r4, r1
1004060c:	1a69      	subs	r1, r5, r1
1004060e:	e7f2      	b.n	100405f6 <fifo_get_ptr+0x18>

10040610 <fifo_get_var_len_item>:

uint8_t fifo_get_var_len_item(circular_fifo_t *fifo, uint16_t *size, uint8_t  *buffer)
{
10040610:	b570      	push	{r4, r5, r6, lr}
10040612:	000d      	movs	r5, r1
10040614:	0016      	movs	r6, r2
  uint8_t ret_val = fifo_get(fifo, VAR_LEN_ITEM_SIZE_LENGTH, (uint8_t *) size);
10040616:	000a      	movs	r2, r1
10040618:	2102      	movs	r1, #2
{
1004061a:	0004      	movs	r4, r0
  uint8_t ret_val = fifo_get(fifo, VAR_LEN_ITEM_SIZE_LENGTH, (uint8_t *) size);
1004061c:	f7ff ff89 	bl	10040532 <fifo_get>
  if (ret_val == 0) {
10040620:	2800      	cmp	r0, #0
10040622:	d108      	bne.n	10040636 <fifo_get_var_len_item+0x26>
  uint16_t index = (fifo->head == 0) ? fifo->max_size : fifo->head;
10040624:	8863      	ldrh	r3, [r4, #2]
    ret_val = fifo_get_no_wrap(fifo, *size, buffer);
10040626:	8829      	ldrh	r1, [r5, #0]
  uint16_t index = (fifo->head == 0) ? fifo->max_size : fifo->head;
10040628:	2b00      	cmp	r3, #0
1004062a:	d100      	bne.n	1004062e <fifo_get_var_len_item+0x1e>
1004062c:	88a3      	ldrh	r3, [r4, #4]
  return (_fifo_get(fifo, size, buffer, index));
1004062e:	0032      	movs	r2, r6
10040630:	0020      	movs	r0, r4
10040632:	f7ff ff43 	bl	100404bc <_fifo_get>
  }
  return ret_val;
}
10040636:	bd70      	pop	{r4, r5, r6, pc}

10040638 <fifo_get_ptr_var_len_item>:

uint8_t fifo_get_ptr_var_len_item(circular_fifo_t *fifo, uint16_t *size, uint8_t  **ptr)
{
10040638:	b570      	push	{r4, r5, r6, lr}
1004063a:	000d      	movs	r5, r1
  uint8_t ret_val = fifo_get_ptr(fifo, VAR_LEN_ITEM_SIZE_LENGTH, ptr);
1004063c:	2102      	movs	r1, #2
{
1004063e:	0014      	movs	r4, r2
  uint8_t ret_val = fifo_get_ptr(fifo, VAR_LEN_ITEM_SIZE_LENGTH, ptr);
10040640:	f7ff ffcd 	bl	100405de <fifo_get_ptr>
  if (ret_val == 0)  {
10040644:	2800      	cmp	r0, #0
10040646:	d102      	bne.n	1004064e <fifo_get_ptr_var_len_item+0x16>
    *size = *((uint16_t *) *ptr);
10040648:	6823      	ldr	r3, [r4, #0]
1004064a:	881b      	ldrh	r3, [r3, #0]
1004064c:	802b      	strh	r3, [r5, #0]
  }
  return ret_val;
}
1004064e:	bd70      	pop	{r4, r5, r6, pc}

10040650 <fifo_discard_var_len_item>:
uint8_t fifo_discard_var_len_item(circular_fifo_t *fifo)
{
10040650:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint16_t size;
  uint8_t ret_val = fifo_get(fifo, VAR_LEN_ITEM_SIZE_LENGTH, (uint8_t *) &size);
10040652:	466b      	mov	r3, sp
10040654:	1d9d      	adds	r5, r3, #6
10040656:	002a      	movs	r2, r5
10040658:	2102      	movs	r1, #2
{
1004065a:	0004      	movs	r4, r0
  uint8_t ret_val = fifo_get(fifo, VAR_LEN_ITEM_SIZE_LENGTH, (uint8_t *) &size);
1004065c:	f7ff ff69 	bl	10040532 <fifo_get>
  if (ret_val == 0) {
10040660:	2800      	cmp	r0, #0
10040662:	d103      	bne.n	1004066c <fifo_discard_var_len_item+0x1c>
    ret_val = fifo_discard(fifo, size);
10040664:	8829      	ldrh	r1, [r5, #0]
10040666:	0020      	movs	r0, r4
10040668:	f7ff ff9e 	bl	100405a8 <fifo_discard>
  }
  return ret_val;
}
1004066c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

10040670 <HAL_GetPartInfo>:
void HAL_GetPartInfo(PartInfoType *partInfo)
{
  volatile uint32_t *ptr = (volatile uint32_t *)(CKGEN_SOC_BASE + 0x28);
  volatile uint32_t *ptr_2n = (volatile uint32_t *)(BLUENRG2N_ID_BASE); 

  partInfo->die_major    = CKGEN_SOC->DIE_ID_b.VERSION;
10040670:	4a12      	ldr	r2, [pc, #72]	; (100406bc <HAL_GetPartInfo+0x4c>)
10040672:	69d3      	ldr	r3, [r2, #28]
10040674:	061b      	lsls	r3, r3, #24
10040676:	0f1b      	lsrs	r3, r3, #28
10040678:	7043      	strb	r3, [r0, #1]
1004067a:	b2d9      	uxtb	r1, r3
  partInfo->die_cut      = CKGEN_SOC->DIE_ID_b.REV;
1004067c:	69d3      	ldr	r3, [r2, #28]

  partInfo->jtag_id_code = *ptr;
  if (partInfo->jtag_id_code == BLUENRG2_IDCODE) {
1004067e:	4a10      	ldr	r2, [pc, #64]	; (100406c0 <HAL_GetPartInfo+0x50>)
  partInfo->die_cut      = CKGEN_SOC->DIE_ID_b.REV;
10040680:	071b      	lsls	r3, r3, #28
10040682:	0f1b      	lsrs	r3, r3, #28
10040684:	7083      	strb	r3, [r0, #2]
  partInfo->jtag_id_code = *ptr;
10040686:	4b0f      	ldr	r3, [pc, #60]	; (100406c4 <HAL_GetPartInfo+0x54>)
10040688:	681b      	ldr	r3, [r3, #0]
1004068a:	6043      	str	r3, [r0, #4]
  if (partInfo->jtag_id_code == BLUENRG2_IDCODE) {
1004068c:	4293      	cmp	r3, r2
1004068e:	d112      	bne.n	100406b6 <HAL_GetPartInfo+0x46>
    
    if  (*ptr_2n == BLUENRG2N_IDCODE) 
10040690:	4b0d      	ldr	r3, [pc, #52]	; (100406c8 <HAL_GetPartInfo+0x58>)
10040692:	681a      	ldr	r2, [r3, #0]
10040694:	4b0d      	ldr	r3, [pc, #52]	; (100406cc <HAL_GetPartInfo+0x5c>)
10040696:	429a      	cmp	r2, r3
10040698:	d10b      	bne.n	100406b2 <HAL_GetPartInfo+0x42>
    {
      /* BlueNRG-2N id */
      partInfo->die_id = DIE_SW_ID_BLUENRG2N;
1004069a:	2304      	movs	r3, #4
      /* BlueNRG-2 id is conventionally 2 */
      partInfo->die_id = DIE_ID_BLUENRG2;
    }
  } else {
    /* BlueNRG-1 id is conventionally 1 */
    partInfo->die_id = DIE_ID_BLUENRG1;
1004069c:	7003      	strb	r3, [r0, #0]
 }

  /* Patch for early samples */
  if (partInfo->die_major == 0)
1004069e:	2900      	cmp	r1, #0
100406a0:	d101      	bne.n	100406a6 <HAL_GetPartInfo+0x36>
    partInfo->die_major = 1;
100406a2:	2301      	movs	r3, #1
100406a4:	7043      	strb	r3, [r0, #1]

  partInfo->flash_size = (FLASH->SIZE + 1) * 4;
100406a6:	4b0a      	ldr	r3, [pc, #40]	; (100406d0 <HAL_GetPartInfo+0x60>)
100406a8:	8a9b      	ldrh	r3, [r3, #20]
100406aa:	3301      	adds	r3, #1
100406ac:	009b      	lsls	r3, r3, #2
100406ae:	6083      	str	r3, [r0, #8]
}
100406b0:	4770      	bx	lr
      partInfo->die_id = DIE_ID_BLUENRG2;
100406b2:	2302      	movs	r3, #2
100406b4:	e7f2      	b.n	1004069c <HAL_GetPartInfo+0x2c>
    partInfo->die_id = DIE_ID_BLUENRG1;
100406b6:	2301      	movs	r3, #1
100406b8:	e7f0      	b.n	1004069c <HAL_GetPartInfo+0x2c>
100406ba:	46c0      	nop			; (mov r8, r8)
100406bc:	40900000 	.word	0x40900000
100406c0:	0200a041 	.word	0x0200a041
100406c4:	40900028 	.word	0x40900028
100406c8:	1000001c 	.word	0x1000001c
100406cc:	f200a044 	.word	0xf200a044
100406d0:	40100000 	.word	0x40100000

100406d4 <HAL_GetCrashInfo>:

/**
 * @brief Get Crash Information utility
 */
void HAL_GetCrashInfo(crash_info_t *crashInfo)
{
100406d4:	b510      	push	{r4, lr}
  *crashInfo = crash_info_ram;
100406d6:	4c05      	ldr	r4, [pc, #20]	; (100406ec <HAL_GetCrashInfo+0x18>)
100406d8:	2228      	movs	r2, #40	; 0x28
100406da:	0021      	movs	r1, r4
100406dc:	f006 f863 	bl	100467a6 <memcpy>
  /* Reset crash info value */
  crash_info_ram.signature = 0;
100406e0:	2300      	movs	r3, #0
100406e2:	7023      	strb	r3, [r4, #0]
100406e4:	7063      	strb	r3, [r4, #1]
100406e6:	70a3      	strb	r3, [r4, #2]
100406e8:	70e3      	strb	r3, [r4, #3]
}
100406ea:	bd10      	pop	{r4, pc}
100406ec:	20000034 	.word	0x20000034

100406f0 <HAL_CrashHandler>:
void HAL_CrashHandler(uint32_t msp, uint32_t signature)
{
100406f0:	2200      	movs	r2, #0
100406f2:	b570      	push	{r4, r5, r6, lr}
  volatile uint32_t * crash_info = (volatile uint32_t *)&crash_info_ram;
  register uint32_t reg_content;
  /* Init to zero the crash_info RAM locations */
  for (reg_content=0; reg_content<NMB_OF_EXCEP_RAM_WORD; reg_content++) {
    crash_info[reg_content] = 0;
100406f4:	0015      	movs	r5, r2
100406f6:	4b16      	ldr	r3, [pc, #88]	; (10040750 <HAL_CrashHandler+0x60>)
100406f8:	189c      	adds	r4, r3, r2
100406fa:	3204      	adds	r2, #4
100406fc:	6025      	str	r5, [r4, #0]
  for (reg_content=0; reg_content<NMB_OF_EXCEP_RAM_WORD; reg_content++) {
100406fe:	2a28      	cmp	r2, #40	; 0x28
10040700:	d1fa      	bne.n	100406f8 <HAL_CrashHandler+0x8>
  }
  /* Store Crash Signature */
  crash_info_ram.signature = signature;
10040702:	0a0a      	lsrs	r2, r1, #8
10040704:	705a      	strb	r2, [r3, #1]
10040706:	0c0a      	lsrs	r2, r1, #16
10040708:	709a      	strb	r2, [r3, #2]
  /* Store SP register */
  crash_info_ram.SP = msp;
1004070a:	0a02      	lsrs	r2, r0, #8
1004070c:	715a      	strb	r2, [r3, #5]
1004070e:	0c02      	lsrs	r2, r0, #16
10040710:	719a      	strb	r2, [r3, #6]
10040712:	0e02      	lsrs	r2, r0, #24
10040714:	71da      	strb	r2, [r3, #7]
10040716:	0004      	movs	r4, r0
10040718:	2208      	movs	r2, #8
  crash_info_ram.signature = signature;
1004071a:	7019      	strb	r1, [r3, #0]
  for (reg_content=2; reg_content<NMB_OF_EXCEP_RAM_WORD; reg_content++) {
    uint32_t *ptr = ((uint32_t *)msp)+(reg_content-2);
    if ((ptr >= ((uint32_t *)  _MEMORY_RAM_BEGIN_)) && 
1004071c:	4d0d      	ldr	r5, [pc, #52]	; (10040754 <HAL_CrashHandler+0x64>)
  crash_info_ram.signature = signature;
1004071e:	0e09      	lsrs	r1, r1, #24
10040720:	70d9      	strb	r1, [r3, #3]
  crash_info_ram.SP = msp;
10040722:	7118      	strb	r0, [r3, #4]
10040724:	3420      	adds	r4, #32
10040726:	1a12      	subs	r2, r2, r0
    if ((ptr >= ((uint32_t *)  _MEMORY_RAM_BEGIN_)) && 
10040728:	21e0      	movs	r1, #224	; 0xe0
1004072a:	0609      	lsls	r1, r1, #24
1004072c:	1841      	adds	r1, r0, r1
1004072e:	42a9      	cmp	r1, r5
10040730:	d803      	bhi.n	1004073a <HAL_CrashHandler+0x4a>
10040732:	1811      	adds	r1, r2, r0
        (ptr <= ((uint32_t *) _MEMORY_RAM_END_)))
      crash_info[reg_content] = *ptr;
10040734:	6806      	ldr	r6, [r0, #0]
10040736:	1859      	adds	r1, r3, r1
10040738:	600e      	str	r6, [r1, #0]
1004073a:	3004      	adds	r0, #4
  for (reg_content=2; reg_content<NMB_OF_EXCEP_RAM_WORD; reg_content++) {
1004073c:	42a0      	cmp	r0, r4
1004073e:	d1f3      	bne.n	10040728 <HAL_CrashHandler+0x38>
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
10040740:	f3bf 8f4f 	dsb	sy
 */
__STATIC_INLINE void NVIC_SystemReset(void)
{
  __DSB();                                                     /* Ensure all outstanding memory accesses included
                                                                  buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
10040744:	4a04      	ldr	r2, [pc, #16]	; (10040758 <HAL_CrashHandler+0x68>)
10040746:	4b05      	ldr	r3, [pc, #20]	; (1004075c <HAL_CrashHandler+0x6c>)
10040748:	60da      	str	r2, [r3, #12]
1004074a:	f3bf 8f4f 	dsb	sy
1004074e:	e7fe      	b.n	1004074e <HAL_CrashHandler+0x5e>
10040750:	20000034 	.word	0x20000034
10040754:	00005fff 	.word	0x00005fff
10040758:	05fa0004 	.word	0x05fa0004
1004075c:	e000ed00 	.word	0xe000ed00

10040760 <BLEPLAT_get_part_info>:

/**
 * @brief Get Device ID, Version and Revision numbers
 */
void BLEPLAT_get_part_info(uint8_t *device_id, uint8_t *major_cut, uint8_t *minor_cut)
{
10040760:	b5f0      	push	{r4, r5, r6, r7, lr}
10040762:	0007      	movs	r7, r0
10040764:	b085      	sub	sp, #20
   PartInfoType partInfo;
   
   /* get partInfo */
   HAL_GetPartInfo(&partInfo);
10040766:	ac01      	add	r4, sp, #4
{
10040768:	000e      	movs	r6, r1
   HAL_GetPartInfo(&partInfo);
1004076a:	0020      	movs	r0, r4
{
1004076c:	0015      	movs	r5, r2
   HAL_GetPartInfo(&partInfo);
1004076e:	f7ff ff7f 	bl	10040670 <HAL_GetPartInfo>
  
  /* Set device ID */
  *device_id  = partInfo.die_id;
10040772:	7823      	ldrb	r3, [r4, #0]
10040774:	703b      	strb	r3, [r7, #0]
  
  /* Set major cut  */
  *major_cut = partInfo.die_major; 
10040776:	7863      	ldrb	r3, [r4, #1]
10040778:	7033      	strb	r3, [r6, #0]
 
  /* Set minor cut */
  *minor_cut = partInfo.die_cut;
1004077a:	78a3      	ldrb	r3, [r4, #2]
1004077c:	702b      	strb	r3, [r5, #0]
}
1004077e:	b005      	add	sp, #20
10040780:	bdf0      	pop	{r4, r5, r6, r7, pc}

10040782 <Osal_MemCpy>:
 * Osal_MemCpy
 * 
 */
 
void* Osal_MemCpy(void *dest,const void *src,unsigned int size)
{
10040782:	b510      	push	{r4, lr}
    return(memcpy(dest,src,size)); 
10040784:	f006 f80f 	bl	100467a6 <memcpy>
}
10040788:	bd10      	pop	{r4, pc}

1004078a <Osal_MemSet>:
 * Osal_MemSet
 * 
 */
 
void* Osal_MemSet(void *ptr, int value,unsigned int size)
{
1004078a:	b510      	push	{r4, lr}
    return(memset(ptr,value,size));
1004078c:	f006 f826 	bl	100467dc <memset>
}
10040790:	bd10      	pop	{r4, pc}

10040792 <Osal_MemCmp>:
/**
 * Osal_MemCmp
 * 
 */
int Osal_MemCmp(void *s1,void *s2,unsigned int size)
{
10040792:	b510      	push	{r4, lr}
    return(memcmp(s1,s2,size));
10040794:	f005 fff8 	bl	10046788 <memcmp>
}
10040798:	bd10      	pop	{r4, pc}

1004079a <HAL_VTIMER_TimerSleepCheck>:
  return SLEEPMODE_NOTIMER;
}
WEAK_FUNCTION(SleepModes HAL_VTIMER_TimerSleepCheck(SleepModes sleepMode))
{
  return SLEEPMODE_NOTIMER;
}
1004079a:	2003      	movs	r0, #3
1004079c:	4770      	bx	lr
	...

100407a0 <BlueNRG_Sleep>:
}

uint8_t BlueNRG_Sleep(SleepModes sleepMode, 
                      uint8_t gpioWakeBitMask, 
                      uint8_t gpioWakeLevelMask)
{
100407a0:	b5f0      	push	{r4, r5, r6, r7, lr}
100407a2:	4c20      	ldr	r4, [pc, #128]	; (10040824 <BlueNRG_Sleep+0x84>)
100407a4:	0016      	movs	r6, r2
100407a6:	44a5      	add	sp, r4
100407a8:	910e      	str	r1, [sp, #56]	; 0x38
100407aa:	0004      	movs	r4, r0
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
100407ac:	f3ef 8310 	mrs	r3, PRIMASK
100407b0:	9307      	str	r3, [sp, #28]
  __ASM volatile ("cpsid i");
100407b2:	b672      	cpsid	i
  
  /* Mask all the interrupt */
  ATOMIC_SECTION_BEGIN();

  /* Flag to signal if a wakeup from standby or sleep occurred */
  wakeupFromSleepFlag = 0; 
100407b4:	2200      	movs	r2, #0
100407b6:	4b1c      	ldr	r3, [pc, #112]	; (10040828 <BlueNRG_Sleep+0x88>)
100407b8:	701a      	strb	r2, [r3, #0]

  ble_sleepMode = (SleepModes)BlueNRG_Stack_Perform_Deep_Sleep_Check();
100407ba:	f01e f923 	bl	1005ea04 <BlueNRG_Stack_Perform_Deep_Sleep_Check>
100407be:	0007      	movs	r7, r0
  timer_sleepMode = HAL_VTIMER_TimerSleepCheck(sleepMode);
100407c0:	0020      	movs	r0, r4
100407c2:	f7ff ffea 	bl	1004079a <HAL_VTIMER_TimerSleepCheck>
100407c6:	0005      	movs	r5, r0
  app_sleepMode = App_SleepMode_Check(sleepMode);
100407c8:	0020      	movs	r0, r4
100407ca:	f005 fe1b 	bl	10046404 <App_SleepMode_Check>
  sleepMode_allowed = (SleepModes)MIN(app_sleepMode, sleepMode);
  sleepMode_allowed = (SleepModes)MIN(timer_sleepMode, sleepMode_allowed);
  sleepMode_allowed = (SleepModes)MIN(ble_sleepMode, sleepMode_allowed);
100407ce:	1c3b      	adds	r3, r7, #0
100407d0:	42af      	cmp	r7, r5
100407d2:	d900      	bls.n	100407d6 <BlueNRG_Sleep+0x36>
100407d4:	1c2b      	adds	r3, r5, #0
100407d6:	b2da      	uxtb	r2, r3
100407d8:	42a2      	cmp	r2, r4
100407da:	d900      	bls.n	100407de <BlueNRG_Sleep+0x3e>
100407dc:	1c23      	adds	r3, r4, #0
100407de:	b2d9      	uxtb	r1, r3
100407e0:	b2c2      	uxtb	r2, r0
100407e2:	4291      	cmp	r1, r2
100407e4:	d900      	bls.n	100407e8 <BlueNRG_Sleep+0x48>
100407e6:	1c03      	adds	r3, r0, #0
100407e8:	b2db      	uxtb	r3, r3

#ifdef DEBUG_SLEEP_MODE
  sleepMode_selected[sleepMode_allowed]++;
100407ea:	4a10      	ldr	r2, [pc, #64]	; (1004082c <BlueNRG_Sleep+0x8c>)
100407ec:	0099      	lsls	r1, r3, #2
  sleepMode_allowed = (SleepModes)MIN(ble_sleepMode, sleepMode_allowed);
100407ee:	9301      	str	r3, [sp, #4]
  sleepMode_selected[sleepMode_allowed]++;
100407f0:	588b      	ldr	r3, [r1, r2]
100407f2:	3301      	adds	r3, #1
100407f4:	508b      	str	r3, [r1, r2]
#endif

  if (sleepMode_allowed == SLEEPMODE_RUNNING) {
100407f6:	9b01      	ldr	r3, [sp, #4]
100407f8:	2b00      	cmp	r3, #0
100407fa:	d107      	bne.n	1004080c <BlueNRG_Sleep+0x6c>

    \param [in]    priMask  Priority Mask
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) );
100407fc:	9b07      	ldr	r3, [sp, #28]
100407fe:	f383 8810 	msr	PRIMASK, r3
  BlueNRG_InternalSleep(sleepMode_allowed, gpioWakeBitMask);
  
  ATOMIC_SECTION_END();
  
  return SUCCESS;
}
10040802:	2000      	movs	r0, #0
10040804:	23a9      	movs	r3, #169	; 0xa9
10040806:	009b      	lsls	r3, r3, #2
10040808:	449d      	add	sp, r3
1004080a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (sleepMode_allowed == SLEEPMODE_CPU_HALT) {
1004080c:	9b01      	ldr	r3, [sp, #4]
1004080e:	2b01      	cmp	r3, #1
10040810:	d110      	bne.n	10040834 <BlueNRG_Sleep+0x94>
    WDG->CR = 0;
10040812:	2100      	movs	r1, #0
    uint32_t WDG_CR_saved = WDG->CR;
10040814:	4b06      	ldr	r3, [pc, #24]	; (10040830 <BlueNRG_Sleep+0x90>)
10040816:	7a1a      	ldrb	r2, [r3, #8]
    WDG->CR = 0;
10040818:	7219      	strb	r1, [r3, #8]
    uint32_t WDG_CR_saved = WDG->CR;
1004081a:	b2d2      	uxtb	r2, r2
  __ASM volatile ("wfi");
1004081c:	bf30      	wfi
    WDG->CR= WDG_CR_saved;
1004081e:	721a      	strb	r2, [r3, #8]
10040820:	e7ec      	b.n	100407fc <BlueNRG_Sleep+0x5c>
10040822:	46c0      	nop			; (mov r8, r8)
10040824:	fffffd5c 	.word	0xfffffd5c
10040828:	2000000c 	.word	0x2000000c
1004082c:	20000310 	.word	0x20000310
10040830:	40700000 	.word	0x40700000
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
10040834:	2238      	movs	r2, #56	; 0x38
10040836:	466b      	mov	r3, sp
  SYSTEM_CTRL->WKP_IO_IS = gpioWakeLevelMask;
10040838:	4ce1      	ldr	r4, [pc, #900]	; (10040bc0 <BlueNRG_Sleep+0x420>)
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
1004083a:	189b      	adds	r3, r3, r2
  SYSTEM_CTRL->WKP_IO_IS = gpioWakeLevelMask;
1004083c:	7026      	strb	r6, [r4, #0]
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
1004083e:	781b      	ldrb	r3, [r3, #0]
  HAL_GetPartInfo(&partInfo);
10040840:	a87d      	add	r0, sp, #500	; 0x1f4
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
10040842:	7123      	strb	r3, [r4, #4]
  HAL_GetPartInfo(&partInfo);
10040844:	f7ff ff14 	bl	10040670 <HAL_GetPartInfo>
  SYS_Ctrl_saved = SYSTEM_CTRL->CTRL;
10040848:	7a23      	ldrb	r3, [r4, #8]
  FLASH_CONFIG_saved = FLASH->CONFIG;
1004084a:	49de      	ldr	r1, [pc, #888]	; (10040bc4 <BlueNRG_Sleep+0x424>)
  SYS_Ctrl_saved = SYSTEM_CTRL->CTRL;
1004084c:	b2db      	uxtb	r3, r3
1004084e:	930b      	str	r3, [sp, #44]	; 0x2c
  FLASH_CONFIG_saved = FLASH->CONFIG;
10040850:	888b      	ldrh	r3, [r1, #4]
  NVIC_ISER_saved = NVIC->ISER[0];
10040852:	4add      	ldr	r2, [pc, #884]	; (10040bc8 <BlueNRG_Sleep+0x428>)
  FLASH_CONFIG_saved = FLASH->CONFIG;
10040854:	b29b      	uxth	r3, r3
10040856:	9310      	str	r3, [sp, #64]	; 0x40
  NVIC_ISER_saved = NVIC->ISER[0];
10040858:	6813      	ldr	r3, [r2, #0]
1004085a:	915c      	str	r1, [sp, #368]	; 0x170
1004085c:	9311      	str	r3, [sp, #68]	; 0x44
1004085e:	2300      	movs	r3, #0
10040860:	9409      	str	r4, [sp, #36]	; 0x24
10040862:	9206      	str	r2, [sp, #24]
  	NVIC_IPR_saved[i] = NVIC->IP[i];
10040864:	a980      	add	r1, sp, #512	; 0x200
10040866:	001a      	movs	r2, r3
10040868:	9806      	ldr	r0, [sp, #24]
1004086a:	32c0      	adds	r2, #192	; 0xc0
1004086c:	0092      	lsls	r2, r2, #2
1004086e:	5880      	ldr	r0, [r0, r2]
10040870:	009a      	lsls	r2, r3, #2
10040872:	3301      	adds	r3, #1
10040874:	5050      	str	r0, [r2, r1]
  for (i=0; i<8; i++) {
10040876:	2b08      	cmp	r3, #8
10040878:	d1f5      	bne.n	10040866 <BlueNRG_Sleep+0xc6>
  PENDSV_SYSTICK_IPR_saved = *(volatile uint32_t *)SHPR3_REG;
1004087a:	4cd4      	ldr	r4, [pc, #848]	; (10040bcc <BlueNRG_Sleep+0x42c>)
  CLOCK_EN_saved = CKGEN_SOC->CLOCK_EN;
1004087c:	48d4      	ldr	r0, [pc, #848]	; (10040bd0 <BlueNRG_Sleep+0x430>)
  PENDSV_SYSTICK_IPR_saved = *(volatile uint32_t *)SHPR3_REG;
1004087e:	6823      	ldr	r3, [r4, #0]
  UART_TIMEOUT_saved = UART->TIMEOUT;
10040880:	49d4      	ldr	r1, [pc, #848]	; (10040bd4 <BlueNRG_Sleep+0x434>)
  PENDSV_SYSTICK_IPR_saved = *(volatile uint32_t *)SHPR3_REG;
10040882:	9312      	str	r3, [sp, #72]	; 0x48
  CLOCK_EN_saved = CKGEN_SOC->CLOCK_EN;
10040884:	6a03      	ldr	r3, [r0, #32]
  UART_XON1_saved = UART->XON1;
10040886:	4fd4      	ldr	r7, [pc, #848]	; (10040bd8 <BlueNRG_Sleep+0x438>)
  CLOCK_EN_saved = CKGEN_SOC->CLOCK_EN;
10040888:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_DATA_saved = GPIO->DATA;
1004088a:	2380      	movs	r3, #128	; 0x80
1004088c:	05db      	lsls	r3, r3, #23
1004088e:	681a      	ldr	r2, [r3, #0]
  UART_XON2_saved = UART->XON2;
10040890:	4ed2      	ldr	r6, [pc, #840]	; (10040bdc <BlueNRG_Sleep+0x43c>)
  GPIO_DATA_saved = GPIO->DATA;
10040892:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_OEN_saved = GPIO->OEN;
10040894:	685a      	ldr	r2, [r3, #4]
  UART_XOFF1_saved = UART->XOFF1;
10040896:	4dd2      	ldr	r5, [pc, #840]	; (10040be0 <BlueNRG_Sleep+0x440>)
  GPIO_OEN_saved = GPIO->OEN;
10040898:	9215      	str	r2, [sp, #84]	; 0x54
  GPIO_PE_saved = GPIO->PE;
1004089a:	689a      	ldr	r2, [r3, #8]
1004089c:	9216      	str	r2, [sp, #88]	; 0x58
  GPIO_DS_saved = GPIO->DS;
1004089e:	68da      	ldr	r2, [r3, #12]
100408a0:	9217      	str	r2, [sp, #92]	; 0x5c
  GPIO_IS_saved = GPIO->IS;
100408a2:	691a      	ldr	r2, [r3, #16]
100408a4:	9218      	str	r2, [sp, #96]	; 0x60
  GPIO_IBE_saved = GPIO->IBE;
100408a6:	695a      	ldr	r2, [r3, #20]
100408a8:	9219      	str	r2, [sp, #100]	; 0x64
  GPIO_IEV_saved = GPIO->IEV;
100408aa:	699a      	ldr	r2, [r3, #24]
100408ac:	921a      	str	r2, [sp, #104]	; 0x68
  GPIO_IE_saved = GPIO->IE;
100408ae:	69da      	ldr	r2, [r3, #28]
100408b0:	920c      	str	r2, [sp, #48]	; 0x30
  GPIO_MODE0_saved = GPIO->MODE0;
100408b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100408b4:	921b      	str	r2, [sp, #108]	; 0x6c
  GPIO_MODE1_saved = GPIO->MODE1;
100408b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
100408b8:	921c      	str	r2, [sp, #112]	; 0x70
  GPIO_MODE2_saved = GPIO->MODE2;
100408ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
100408bc:	921d      	str	r2, [sp, #116]	; 0x74
  GPIO_MODE3_saved = GPIO->MODE3;
100408be:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
100408c0:	b292      	uxth	r2, r2
100408c2:	921e      	str	r2, [sp, #120]	; 0x78
  GPIO_IOSEL_MFTX_saved = GPIO->MFTX;
100408c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
  SPI_CR0_saved = SPI->CR0; 
100408c6:	4ac7      	ldr	r2, [pc, #796]	; (10040be4 <BlueNRG_Sleep+0x444>)
  GPIO_IOSEL_MFTX_saved = GPIO->MFTX;
100408c8:	931f      	str	r3, [sp, #124]	; 0x7c
  UART_TIMEOUT_saved = UART->TIMEOUT;
100408ca:	68cb      	ldr	r3, [r1, #12]
100408cc:	9320      	str	r3, [sp, #128]	; 0x80
  UART_LCRH_RX_saved = UART->LCRH_RX;
100408ce:	7f0b      	ldrb	r3, [r1, #28]
100408d0:	b2db      	uxtb	r3, r3
100408d2:	9321      	str	r3, [sp, #132]	; 0x84
  UART_IBRD_saved = UART->IBRD;
100408d4:	8c8b      	ldrh	r3, [r1, #36]	; 0x24
100408d6:	b29b      	uxth	r3, r3
100408d8:	9322      	str	r3, [sp, #136]	; 0x88
  UART_FBRD_saved = UART->FBRD;
100408da:	4bc3      	ldr	r3, [pc, #780]	; (10040be8 <BlueNRG_Sleep+0x448>)
100408dc:	781b      	ldrb	r3, [r3, #0]
100408de:	b2db      	uxtb	r3, r3
100408e0:	9323      	str	r3, [sp, #140]	; 0x8c
  UART_LCRH_TX_saved =  UART->LCRH_TX;
100408e2:	4bc2      	ldr	r3, [pc, #776]	; (10040bec <BlueNRG_Sleep+0x44c>)
100408e4:	781b      	ldrb	r3, [r3, #0]
100408e6:	b2db      	uxtb	r3, r3
100408e8:	9324      	str	r3, [sp, #144]	; 0x90
  UART_CR_saved = UART->CR;
100408ea:	6b0b      	ldr	r3, [r1, #48]	; 0x30
100408ec:	9325      	str	r3, [sp, #148]	; 0x94
  UART_IFLS_saved = UART->IFLS;
100408ee:	4bc0      	ldr	r3, [pc, #768]	; (10040bf0 <BlueNRG_Sleep+0x450>)
100408f0:	781b      	ldrb	r3, [r3, #0]
100408f2:	b2db      	uxtb	r3, r3
100408f4:	9326      	str	r3, [sp, #152]	; 0x98
  UART_IMSC_saved = UART->IMSC;
100408f6:	8f0b      	ldrh	r3, [r1, #56]	; 0x38
100408f8:	b29b      	uxth	r3, r3
100408fa:	9327      	str	r3, [sp, #156]	; 0x9c
  UART_DMACR_saved = UART->DMACR;
100408fc:	4bbd      	ldr	r3, [pc, #756]	; (10040bf4 <BlueNRG_Sleep+0x454>)
100408fe:	781b      	ldrb	r3, [r3, #0]
10040900:	b2db      	uxtb	r3, r3
10040902:	9328      	str	r3, [sp, #160]	; 0xa0
  UART_XFCR_saved = UART->XFCR;
10040904:	4bbc      	ldr	r3, [pc, #752]	; (10040bf8 <BlueNRG_Sleep+0x458>)
10040906:	469c      	mov	ip, r3
10040908:	781b      	ldrb	r3, [r3, #0]
1004090a:	b2db      	uxtb	r3, r3
1004090c:	9329      	str	r3, [sp, #164]	; 0xa4
  UART_XON1_saved = UART->XON1;
1004090e:	783b      	ldrb	r3, [r7, #0]
10040910:	b2db      	uxtb	r3, r3
10040912:	932a      	str	r3, [sp, #168]	; 0xa8
  UART_XON2_saved = UART->XON2;
10040914:	7833      	ldrb	r3, [r6, #0]
10040916:	b2db      	uxtb	r3, r3
10040918:	932b      	str	r3, [sp, #172]	; 0xac
  UART_XOFF1_saved = UART->XOFF1;
1004091a:	782b      	ldrb	r3, [r5, #0]
1004091c:	b2db      	uxtb	r3, r3
1004091e:	932c      	str	r3, [sp, #176]	; 0xb0
  UART_XOFF2_saved = UART->XOFF2;
10040920:	4bb6      	ldr	r3, [pc, #728]	; (10040bfc <BlueNRG_Sleep+0x45c>)
10040922:	781b      	ldrb	r3, [r3, #0]
10040924:	b2db      	uxtb	r3, r3
10040926:	932d      	str	r3, [sp, #180]	; 0xb4
  SPI_CR0_saved = SPI->CR0; 
10040928:	6813      	ldr	r3, [r2, #0]
1004092a:	932e      	str	r3, [sp, #184]	; 0xb8
  SPI_CR1_saved = SPI->CR1;
1004092c:	6853      	ldr	r3, [r2, #4]
1004092e:	932f      	str	r3, [sp, #188]	; 0xbc
  SPI_CPSR_saved = SPI->CPSR;
10040930:	7c13      	ldrb	r3, [r2, #16]
10040932:	b2db      	uxtb	r3, r3
10040934:	9330      	str	r3, [sp, #192]	; 0xc0
  SPI_IMSC_saved = SPI->IMSC;
10040936:	7d13      	ldrb	r3, [r2, #20]
10040938:	b2db      	uxtb	r3, r3
1004093a:	9331      	str	r3, [sp, #196]	; 0xc4
  SPI_DMACR_saved = SPI->DMACR;
1004093c:	4bb0      	ldr	r3, [pc, #704]	; (10040c00 <BlueNRG_Sleep+0x460>)
1004093e:	7fdb      	ldrb	r3, [r3, #31]
10040940:	b2db      	uxtb	r3, r3
10040942:	9332      	str	r3, [sp, #200]	; 0xc8
  SPI_RXFRM_saved = SPI->RXFRM;
10040944:	8d13      	ldrh	r3, [r2, #40]	; 0x28
10040946:	b29b      	uxth	r3, r3
10040948:	9333      	str	r3, [sp, #204]	; 0xcc
  SPI_CHN_saved = SPI->CHN;
1004094a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
1004094c:	9334      	str	r3, [sp, #208]	; 0xd0
  SPI_WDTXF_saved = SPI->WDTXF;
1004094e:	8e13      	ldrh	r3, [r2, #48]	; 0x30
10040950:	9105      	str	r1, [sp, #20]
10040952:	49a5      	ldr	r1, [pc, #660]	; (10040be8 <BlueNRG_Sleep+0x448>)
10040954:	b29b      	uxth	r3, r3
10040956:	915e      	str	r1, [sp, #376]	; 0x178
10040958:	49a4      	ldr	r1, [pc, #656]	; (10040bec <BlueNRG_Sleep+0x44c>)
1004095a:	9335      	str	r3, [sp, #212]	; 0xd4
1004095c:	915f      	str	r1, [sp, #380]	; 0x17c
1004095e:	49a4      	ldr	r1, [pc, #656]	; (10040bf0 <BlueNRG_Sleep+0x450>)
10040960:	2300      	movs	r3, #0
10040962:	9160      	str	r1, [sp, #384]	; 0x180
10040964:	49a3      	ldr	r1, [pc, #652]	; (10040bf4 <BlueNRG_Sleep+0x454>)
10040966:	9202      	str	r2, [sp, #8]
10040968:	9161      	str	r1, [sp, #388]	; 0x184
1004096a:	4661      	mov	r1, ip
1004096c:	4aa4      	ldr	r2, [pc, #656]	; (10040c00 <BlueNRG_Sleep+0x460>)
1004096e:	9162      	str	r1, [sp, #392]	; 0x188
10040970:	49a2      	ldr	r1, [pc, #648]	; (10040bfc <BlueNRG_Sleep+0x45c>)
10040972:	945d      	str	r4, [sp, #372]	; 0x174
10040974:	9763      	str	r7, [sp, #396]	; 0x18c
10040976:	9664      	str	r6, [sp, #400]	; 0x190
10040978:	9565      	str	r5, [sp, #404]	; 0x194
1004097a:	900f      	str	r0, [sp, #60]	; 0x3c
1004097c:	9166      	str	r1, [sp, #408]	; 0x198
1004097e:	9267      	str	r2, [sp, #412]	; 0x19c
    I2C_CR_saved[i] = I2Cx->CR;
10040980:	af69      	add	r7, sp, #420	; 0x1a4
    I2C_SCR_saved[i] = I2Cx->SCR;
10040982:	ae6b      	add	r6, sp, #428	; 0x1ac
    I2C_TFTR_saved[i] = I2Cx->TFTR;
10040984:	ad6d      	add	r5, sp, #436	; 0x1b4
    I2C_RFTR_saved[i] = I2Cx->RFTR;
10040986:	ac6f      	add	r4, sp, #444	; 0x1bc
10040988:	4a9e      	ldr	r2, [pc, #632]	; (10040c04 <BlueNRG_Sleep+0x464>)
1004098a:	189a      	adds	r2, r3, r2
1004098c:	0492      	lsls	r2, r2, #18
    I2C_CR_saved[i] = I2Cx->CR;
1004098e:	6811      	ldr	r1, [r2, #0]
10040990:	51d9      	str	r1, [r3, r7]
    I2C_SCR_saved[i] = I2Cx->SCR;
10040992:	6851      	ldr	r1, [r2, #4]
10040994:	5199      	str	r1, [r3, r6]
    I2C_TFTR_saved[i] = I2Cx->TFTR;
10040996:	8b91      	ldrh	r1, [r2, #28]
10040998:	50e9      	str	r1, [r5, r3]
    I2C_RFTR_saved[i] = I2Cx->RFTR;
1004099a:	8c11      	ldrh	r1, [r2, #32]
1004099c:	50e1      	str	r1, [r4, r3]
    I2C_DMAR_saved[i] = I2Cx->DMAR;
1004099e:	8c90      	ldrh	r0, [r2, #36]	; 0x24
100409a0:	a971      	add	r1, sp, #452	; 0x1c4
100409a2:	50c8      	str	r0, [r1, r3]
    I2C_BRCR_saved[i] = I2Cx->BRCR;
100409a4:	8d10      	ldrh	r0, [r2, #40]	; 0x28
100409a6:	a973      	add	r1, sp, #460	; 0x1cc
100409a8:	50c8      	str	r0, [r1, r3]
    I2C_IMSCR_saved[i] = I2Cx->IMSCR;
100409aa:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
100409ac:	a975      	add	r1, sp, #468	; 0x1d4
100409ae:	5058      	str	r0, [r3, r1]
    I2C_THDDAT_saved[i] = I2Cx->THDDAT;
100409b0:	0011      	movs	r1, r2
100409b2:	314c      	adds	r1, #76	; 0x4c
100409b4:	8808      	ldrh	r0, [r1, #0]
100409b6:	a977      	add	r1, sp, #476	; 0x1dc
100409b8:	50c8      	str	r0, [r1, r3]
    I2C_THDSTA_FST_STD_saved[i] = I2Cx->THDSTA_FST_STD;
100409ba:	6d10      	ldr	r0, [r2, #80]	; 0x50
100409bc:	a979      	add	r1, sp, #484	; 0x1e4
100409be:	5058      	str	r0, [r3, r1]
    I2C_TSUSTA_FST_STD_saved[i] = I2Cx->TSUSTA_FST_STD;
100409c0:	6d91      	ldr	r1, [r2, #88]	; 0x58
100409c2:	aa7b      	add	r2, sp, #492	; 0x1ec
100409c4:	5099      	str	r1, [r3, r2]
100409c6:	3304      	adds	r3, #4
  for (i=0; i<2; i++) {
100409c8:	2b08      	cmp	r3, #8
100409ca:	d1dd      	bne.n	10040988 <BlueNRG_Sleep+0x1e8>
  RNG_CR_saved = RNG->CR;
100409cc:	23b0      	movs	r3, #176	; 0xb0
100409ce:	061b      	lsls	r3, r3, #24
100409d0:	681b      	ldr	r3, [r3, #0]
  RTC_CWDMR_saved = RTC->CWDMR;
100409d2:	4c8d      	ldr	r4, [pc, #564]	; (10040c08 <BlueNRG_Sleep+0x468>)
  RNG_CR_saved = RNG->CR;
100409d4:	9336      	str	r3, [sp, #216]	; 0xd8
  RTC_CWDMR_saved = RTC->CWDMR;
100409d6:	6863      	ldr	r3, [r4, #4]
  T1CRA_saved = MFT1->TNCRA;
100409d8:	4a8c      	ldr	r2, [pc, #560]	; (10040c0c <BlueNRG_Sleep+0x46c>)
  RTC_CWDMR_saved = RTC->CWDMR;
100409da:	9337      	str	r3, [sp, #220]	; 0xdc
  RTC_CWDLR_saved = RTC->CWDLR;
100409dc:	68a3      	ldr	r3, [r4, #8]
  SYST_CSR_saved = SysTick->CTRL;
100409de:	4e8c      	ldr	r6, [pc, #560]	; (10040c10 <BlueNRG_Sleep+0x470>)
  RTC_CWDLR_saved = RTC->CWDLR;
100409e0:	9338      	str	r3, [sp, #224]	; 0xe0
  RTC_CWYMR_saved = RTC->CWYMR;
100409e2:	8a23      	ldrh	r3, [r4, #16]
  WDG_LR_saved = WDG->LR;
100409e4:	4d8b      	ldr	r5, [pc, #556]	; (10040c14 <BlueNRG_Sleep+0x474>)
  RTC_CWYMR_saved = RTC->CWYMR;
100409e6:	b29b      	uxth	r3, r3
100409e8:	9339      	str	r3, [sp, #228]	; 0xe4
  RTC_CWYLR_saved = RTC->CWYLR;
100409ea:	8aa3      	ldrh	r3, [r4, #20]
100409ec:	b29b      	uxth	r3, r3
100409ee:	933a      	str	r3, [sp, #232]	; 0xe8
  RTC_CTCR_saved = RTC->CTCR;
100409f0:	69a3      	ldr	r3, [r4, #24]
100409f2:	933b      	str	r3, [sp, #236]	; 0xec
  RTC_IMSC_saved = RTC->IMSC;
100409f4:	7f23      	ldrb	r3, [r4, #28]
100409f6:	b2db      	uxtb	r3, r3
100409f8:	933c      	str	r3, [sp, #240]	; 0xf0
  RTC_TCR_saved = RTC->TCR;
100409fa:	8e23      	ldrh	r3, [r4, #48]	; 0x30
100409fc:	b29b      	uxth	r3, r3
100409fe:	933d      	str	r3, [sp, #244]	; 0xf4
  RTC_TLR1_saved = RTC->TLR1;
10040a00:	6b63      	ldr	r3, [r4, #52]	; 0x34
10040a02:	933e      	str	r3, [sp, #248]	; 0xf8
  RTC_TLR2_saved = RTC->TLR2;
10040a04:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10040a06:	933f      	str	r3, [sp, #252]	; 0xfc
  RTC_TPR1_saved = RTC->TPR1;
10040a08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
10040a0a:	9340      	str	r3, [sp, #256]	; 0x100
  RTC_TPR2_saved = RTC->TPR2;
10040a0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
10040a0e:	9341      	str	r3, [sp, #260]	; 0x104
  RTC_TPR3_saved = RTC->TPR3;
10040a10:	6c63      	ldr	r3, [r4, #68]	; 0x44
10040a12:	9342      	str	r3, [sp, #264]	; 0x108
  RTC_TPR4_saved = RTC->TPR4; 
10040a14:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10040a16:	9343      	str	r3, [sp, #268]	; 0x10c
  T1CRA_saved = MFT1->TNCRA;
10040a18:	8893      	ldrh	r3, [r2, #4]
10040a1a:	b29b      	uxth	r3, r3
10040a1c:	9344      	str	r3, [sp, #272]	; 0x110
  T1CRB_saved = MFT1->TNCRB;
10040a1e:	8913      	ldrh	r3, [r2, #8]
10040a20:	b29b      	uxth	r3, r3
10040a22:	9345      	str	r3, [sp, #276]	; 0x114
  T1PRSC_saved = MFT1->TNPRSC;
10040a24:	7c13      	ldrb	r3, [r2, #16]
10040a26:	b2db      	uxtb	r3, r3
10040a28:	9346      	str	r3, [sp, #280]	; 0x118
  T1CKC_saved = MFT1->TNCKC;
10040a2a:	7d13      	ldrb	r3, [r2, #20]
10040a2c:	b2db      	uxtb	r3, r3
10040a2e:	9347      	str	r3, [sp, #284]	; 0x11c
  T1MCTRL_saved = MFT1->TNMCTRL;
10040a30:	8b13      	ldrh	r3, [r2, #24]
10040a32:	b29b      	uxth	r3, r3
10040a34:	9348      	str	r3, [sp, #288]	; 0x120
  T1ICTRL_saved = MFT1->TNICTRL;
10040a36:	7f13      	ldrb	r3, [r2, #28]
10040a38:	b2db      	uxtb	r3, r3
10040a3a:	9349      	str	r3, [sp, #292]	; 0x124
  T2CRA_saved = MFT2->TNCRA;
10040a3c:	4b76      	ldr	r3, [pc, #472]	; (10040c18 <BlueNRG_Sleep+0x478>)
10040a3e:	8899      	ldrh	r1, [r3, #4]
10040a40:	b289      	uxth	r1, r1
10040a42:	914a      	str	r1, [sp, #296]	; 0x128
  T2CRB_saved = MFT2->TNCRB;
10040a44:	8919      	ldrh	r1, [r3, #8]
10040a46:	b289      	uxth	r1, r1
10040a48:	914b      	str	r1, [sp, #300]	; 0x12c
  T2PRSC_saved = MFT2->TNPRSC;
10040a4a:	7c19      	ldrb	r1, [r3, #16]
10040a4c:	b2c9      	uxtb	r1, r1
10040a4e:	914c      	str	r1, [sp, #304]	; 0x130
  T2CKC_saved = MFT2->TNCKC;
10040a50:	7d19      	ldrb	r1, [r3, #20]
10040a52:	b2c9      	uxtb	r1, r1
10040a54:	914d      	str	r1, [sp, #308]	; 0x134
  T2MCTRL_saved = MFT2->TNMCTRL;
10040a56:	8b19      	ldrh	r1, [r3, #24]
10040a58:	b289      	uxth	r1, r1
10040a5a:	914e      	str	r1, [sp, #312]	; 0x138
  T2ICTRL_saved = MFT2->TNICTRL;
10040a5c:	7f19      	ldrb	r1, [r3, #28]
10040a5e:	b2c9      	uxtb	r1, r1
10040a60:	914f      	str	r1, [sp, #316]	; 0x13c
  SYST_CSR_saved = SysTick->CTRL;
10040a62:	6831      	ldr	r1, [r6, #0]
10040a64:	9150      	str	r1, [sp, #320]	; 0x140
  SYST_RVR_saved = SysTick->LOAD;
10040a66:	6871      	ldr	r1, [r6, #4]
10040a68:	9151      	str	r1, [sp, #324]	; 0x144
  WDG_LR_saved = WDG->LR;
10040a6a:	6829      	ldr	r1, [r5, #0]
10040a6c:	9152      	str	r1, [sp, #328]	; 0x148
  WDG_CR_saved = WDG->CR;
10040a6e:	7a28      	ldrb	r0, [r5, #8]
10040a70:	b2c1      	uxtb	r1, r0
  if(WDG->LOCK == 0) {
10040a72:	20c0      	movs	r0, #192	; 0xc0
  WDG_CR_saved = WDG->CR;
10040a74:	9153      	str	r1, [sp, #332]	; 0x14c
  if(WDG->LOCK == 0) {
10040a76:	0100      	lsls	r0, r0, #4
10040a78:	5828      	ldr	r0, [r5, r0]
10040a7a:	9304      	str	r3, [sp, #16]
10040a7c:	950a      	str	r5, [sp, #40]	; 0x28
10040a7e:	9203      	str	r2, [sp, #12]
    WDG_LOCK_saved = 0;
10040a80:	2300      	movs	r3, #0
  if(WDG->LOCK == 0) {
10040a82:	2800      	cmp	r0, #0
10040a84:	d100      	bne.n	10040a88 <BlueNRG_Sleep+0x2e8>
    WDG_LOCK_saved = 0x1ACCE551;
10040a86:	4b65      	ldr	r3, [pc, #404]	; (10040c1c <BlueNRG_Sleep+0x47c>)
10040a88:	2205      	movs	r2, #5
10040a8a:	930d      	str	r3, [sp, #52]	; 0x34
10040a8c:	4694      	mov	ip, r2
    WDG_LOCK_saved = 0;
10040a8e:	2300      	movs	r3, #0
    DMA_CNDTR_saved[i] = DMAx->CNDTR;
10040a90:	ad90      	add	r5, sp, #576	; 0x240
    DMA_CCR_saved[i] = DMAx->CCR;
10040a92:	a888      	add	r0, sp, #544	; 0x220
    DMA_CPAR_saved[i] = DMAx->CPAR;
10040a94:	a998      	add	r1, sp, #608	; 0x260
10040a96:	4662      	mov	r2, ip
10040a98:	435a      	muls	r2, r3
10040a9a:	4f61      	ldr	r7, [pc, #388]	; (10040c20 <BlueNRG_Sleep+0x480>)
10040a9c:	19d2      	adds	r2, r2, r7
    DMA_CNDTR_saved[i] = DMAx->CNDTR;
10040a9e:	6857      	ldr	r7, [r2, #4]
10040aa0:	515f      	str	r7, [r3, r5]
    DMA_CCR_saved[i] = DMAx->CCR;
10040aa2:	6817      	ldr	r7, [r2, #0]
10040aa4:	501f      	str	r7, [r3, r0]
    DMA_CPAR_saved[i] = DMAx->CPAR;
10040aa6:	6897      	ldr	r7, [r2, #8]
10040aa8:	505f      	str	r7, [r3, r1]
    DMA_CMAR[i] = DMAx->CMAR;
10040aaa:	68d7      	ldr	r7, [r2, #12]
10040aac:	aaa0      	add	r2, sp, #640	; 0x280
10040aae:	509f      	str	r7, [r3, r2]
10040ab0:	3304      	adds	r3, #4
  for (i=0; i<8; i++) {
10040ab2:	2b20      	cmp	r3, #32
10040ab4:	d1ef      	bne.n	10040a96 <BlueNRG_Sleep+0x2f6>
  ADC_CONF_saved = ADC->CONF;
10040ab6:	2381      	movs	r3, #129	; 0x81
10040ab8:	05db      	lsls	r3, r3, #23
10040aba:	685a      	ldr	r2, [r3, #4]
10040abc:	9254      	str	r2, [sp, #336]	; 0x150
  ADC_IRQMASK_saved = ADC->IRQMASK;
10040abe:	7b1a      	ldrb	r2, [r3, #12]
10040ac0:	b2d2      	uxtb	r2, r2
10040ac2:	9255      	str	r2, [sp, #340]	; 0x154
  ADC_OFFSET_MSB_saved = ADC->OFFSET_MSB;
10040ac4:	8b5a      	ldrh	r2, [r3, #26]
10040ac6:	b292      	uxth	r2, r2
10040ac8:	9256      	str	r2, [sp, #344]	; 0x158
  ADC_OFFSET_LSB_saved = ADC->OFFSET_LSB;
10040aca:	8b1a      	ldrh	r2, [r3, #24]
10040acc:	b292      	uxth	r2, r2
10040ace:	9257      	str	r2, [sp, #348]	; 0x15c
  ADC_THRESHOLD_HI_saved = ADC->THRESHOLD_HI;
10040ad0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
10040ad2:	9258      	str	r2, [sp, #352]	; 0x160
  ADC_THRESHOLD_LO_saved = ADC->THRESHOLD_LO;
10040ad4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  ADC_CTRL_saved = ADC->CTRL;
10040ad6:	881b      	ldrh	r3, [r3, #0]
  ADC_THRESHOLD_LO_saved = ADC->THRESHOLD_LO;
10040ad8:	9259      	str	r2, [sp, #356]	; 0x164
  ADC_CTRL_saved = ADC->CTRL;
10040ada:	b29b      	uxth	r3, r3
10040adc:	935a      	str	r3, [sp, #360]	; 0x168
  PKA_IEN_saved = PKA->IEN;
10040ade:	23c0      	movs	r3, #192	; 0xc0
10040ae0:	061b      	lsls	r3, r3, #24
10040ae2:	689b      	ldr	r3, [r3, #8]
10040ae4:	935b      	str	r3, [sp, #364]	; 0x16c
  if (sleepMode == SLEEPMODE_NOTIMER) {
10040ae6:	9b01      	ldr	r3, [sp, #4]
10040ae8:	2b03      	cmp	r3, #3
10040aea:	d106      	bne.n	10040afa <BlueNRG_Sleep+0x35a>
    BLUE_CTRL->TIMEOUT |= LOW_POWER_STANDBY<<28;
10040aec:	2290      	movs	r2, #144	; 0x90
10040aee:	23c0      	movs	r3, #192	; 0xc0
10040af0:	05d2      	lsls	r2, r2, #23
10040af2:	6851      	ldr	r1, [r2, #4]
10040af4:	059b      	lsls	r3, r3, #22
10040af6:	430b      	orrs	r3, r1
10040af8:	6053      	str	r3, [r2, #4]
  ptr = __vector_table[0].__ptr ;
10040afa:	4b4a      	ldr	r3, [pc, #296]	; (10040c24 <BlueNRG_Sleep+0x484>)
    cStackPreamble[i] = *ptr;
10040afc:	4a4a      	ldr	r2, [pc, #296]	; (10040c28 <BlueNRG_Sleep+0x488>)
  ptr = __vector_table[0].__ptr ;
10040afe:	681b      	ldr	r3, [r3, #0]
  ptr -= CSTACK_PREAMBLE_NUMBER;
10040b00:	001d      	movs	r5, r3
  ptr = __vector_table[0].__ptr ;
10040b02:	9308      	str	r3, [sp, #32]
  ptr -= CSTACK_PREAMBLE_NUMBER;
10040b04:	2300      	movs	r3, #0
10040b06:	3d50      	subs	r5, #80	; 0x50
10040b08:	18e9      	adds	r1, r5, r3
    cStackPreamble[i] = *ptr;
10040b0a:	6809      	ldr	r1, [r1, #0]
10040b0c:	50d1      	str	r1, [r2, r3]
10040b0e:	3304      	adds	r3, #4
  } while (i < CSTACK_PREAMBLE_NUMBER); 
10040b10:	2b50      	cmp	r3, #80	; 0x50
10040b12:	d1f9      	bne.n	10040b08 <BlueNRG_Sleep+0x368>
10040b14:	4b45      	ldr	r3, [pc, #276]	; (10040c2c <BlueNRG_Sleep+0x48c>)
10040b16:	9a08      	ldr	r2, [sp, #32]
10040b18:	601a      	str	r2, [r3, #0]
  ioEnabled = SYSTEM_CTRL->WKP_IO_IE;
10040b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
10040b1c:	7918      	ldrb	r0, [r3, #4]
  ioLevel = SYSTEM_CTRL->WKP_IO_IS;
10040b1e:	781a      	ldrb	r2, [r3, #0]
  ioValue = (~((GPIO->DATA>>9) ^ ioLevel)) & ioEnabled;
10040b20:	2380      	movs	r3, #128	; 0x80
10040b22:	05db      	lsls	r3, r3, #23
10040b24:	681b      	ldr	r3, [r3, #0]
10040b26:	0a5b      	lsrs	r3, r3, #9
10040b28:	4053      	eors	r3, r2
10040b2a:	4398      	bics	r0, r3
  if (ioValue){
10040b2c:	d000      	beq.n	10040b30 <BlueNRG_Sleep+0x390>
10040b2e:	e665      	b.n	100407fc <BlueNRG_Sleep+0x5c>
  if (((partInfo.die_major<<4)|(partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10040b30:	aa7d      	add	r2, sp, #500	; 0x1f4
10040b32:	7853      	ldrb	r3, [r2, #1]
10040b34:	7892      	ldrb	r2, [r2, #2]
10040b36:	011b      	lsls	r3, r3, #4
10040b38:	4313      	orrs	r3, r2
10040b3a:	2b11      	cmp	r3, #17
10040b3c:	dd03      	ble.n	10040b46 <BlueNRG_Sleep+0x3a6>
    flash_sw_lock = FLASH_LOCK_WORD;
10040b3e:	4b3c      	ldr	r3, [pc, #240]	; (10040c30 <BlueNRG_Sleep+0x490>)
10040b40:	6018      	str	r0, [r3, #0]
    SET_BORconfigStatus(FALSE);
10040b42:	f001 f8df 	bl	10041d04 <SET_BORconfigStatus>
  rfTimeout = BLUE_CTRL->TIMEOUT;
10040b46:	2390      	movs	r3, #144	; 0x90
10040b48:	05db      	lsls	r3, r3, #23
10040b4a:	685a      	ldr	r2, [r3, #4]
10040b4c:	4b39      	ldr	r3, [pc, #228]	; (10040c34 <BlueNRG_Sleep+0x494>)
  SystemSleepCmd(ENABLE);
10040b4e:	2001      	movs	r0, #1
  rfTimeout = BLUE_CTRL->TIMEOUT;
10040b50:	601a      	str	r2, [r3, #0]
  SystemSleepCmd(ENABLE);
10040b52:	f000 fe51 	bl	100417f8 <SystemSleepCmd>
  CS_contextSave();
10040b56:	f7ff fab3 	bl	100400c0 <CS_contextSave>
  SystemSleepCmd(DISABLE);
10040b5a:	2000      	movs	r0, #0
10040b5c:	f000 fe4c 	bl	100417f8 <SystemSleepCmd>
  if (!wakeupFromSleepFlag) {
10040b60:	4b35      	ldr	r3, [pc, #212]	; (10040c38 <BlueNRG_Sleep+0x498>)
10040b62:	781b      	ldrb	r3, [r3, #0]
10040b64:	2b00      	cmp	r3, #0
10040b66:	d000      	beq.n	10040b6a <BlueNRG_Sleep+0x3ca>
10040b68:	e0a2      	b.n	10040cb0 <BlueNRG_Sleep+0x510>
    if((NVIC->ISPR[0]&(1<<BLUE_CTRL_IRQn)) == 0) { //At this stage the Blue Control Interrupt shall not be pending.
10040b6a:	4934      	ldr	r1, [pc, #208]	; (10040c3c <BlueNRG_Sleep+0x49c>)
10040b6c:	684b      	ldr	r3, [r1, #4]
10040b6e:	065b      	lsls	r3, r3, #25
10040b70:	d476      	bmi.n	10040c60 <BlueNRG_Sleep+0x4c0>
      if ((savedSHCSR != SCB->SHCSR)  ||                                                                //Verified if a SVCall Interrupt is pending
10040b72:	4b33      	ldr	r3, [pc, #204]	; (10040c40 <BlueNRG_Sleep+0x4a0>)
10040b74:	4833      	ldr	r0, [pc, #204]	; (10040c44 <BlueNRG_Sleep+0x4a4>)
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
10040b76:	684a      	ldr	r2, [r1, #4]
      if ((savedSHCSR != SCB->SHCSR)  ||                                                                //Verified if a SVCall Interrupt is pending
10040b78:	6800      	ldr	r0, [r0, #0]
10040b7a:	6a5c      	ldr	r4, [r3, #36]	; 0x24
10040b7c:	4284      	cmp	r4, r0
10040b7e:	d116      	bne.n	10040bae <BlueNRG_Sleep+0x40e>
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
10040b80:	4831      	ldr	r0, [pc, #196]	; (10040c48 <BlueNRG_Sleep+0x4a8>)
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
10040b82:	6849      	ldr	r1, [r1, #4]
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
10040b84:	6800      	ldr	r0, [r0, #0]
      if ((savedSHCSR != SCB->SHCSR)  ||                                                                //Verified if a SVCall Interrupt is pending
10040b86:	4288      	cmp	r0, r1
10040b88:	d004      	beq.n	10040b94 <BlueNRG_Sleep+0x3f4>
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
10040b8a:	9906      	ldr	r1, [sp, #24]
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
10040b8c:	4042      	eors	r2, r0
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
10040b8e:	6809      	ldr	r1, [r1, #0]
10040b90:	4211      	tst	r1, r2
10040b92:	d10c      	bne.n	10040bae <BlueNRG_Sleep+0x40e>
          ((savedICSR & 0x10000000) != (SCB->ICSR & 0x10000000)) ||                                   // Verified if a PendSV interrupt is pending
10040b94:	4a2d      	ldr	r2, [pc, #180]	; (10040c4c <BlueNRG_Sleep+0x4ac>)
10040b96:	6859      	ldr	r1, [r3, #4]
10040b98:	6812      	ldr	r2, [r2, #0]
10040b9a:	4051      	eors	r1, r2
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
10040b9c:	00c9      	lsls	r1, r1, #3
10040b9e:	d406      	bmi.n	10040bae <BlueNRG_Sleep+0x40e>
          (((savedICSR & 0x4000000) != (SCB->ICSR & 0x4000000)) && (SysTick->CTRL & 0x02))) {       // Verified if a SysTick interrupt is pending
10040ba0:	685b      	ldr	r3, [r3, #4]
10040ba2:	405a      	eors	r2, r3
          ((savedICSR & 0x10000000) != (SCB->ICSR & 0x10000000)) ||                                   // Verified if a PendSV interrupt is pending
10040ba4:	0153      	lsls	r3, r2, #5
10040ba6:	d55b      	bpl.n	10040c60 <BlueNRG_Sleep+0x4c0>
          (((savedICSR & 0x4000000) != (SCB->ICSR & 0x4000000)) && (SysTick->CTRL & 0x02))) {       // Verified if a SysTick interrupt is pending
10040ba8:	6833      	ldr	r3, [r6, #0]
10040baa:	079b      	lsls	r3, r3, #30
10040bac:	d558      	bpl.n	10040c60 <BlueNRG_Sleep+0x4c0>
        savedCurrentTime = (*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4;
10040bae:	4a28      	ldr	r2, [pc, #160]	; (10040c50 <BlueNRG_Sleep+0x4b0>)
        if (0xFFFFF >= (savedCurrentTime+3)) { //Check if the counter are wrapping
10040bb0:	4828      	ldr	r0, [pc, #160]	; (10040c54 <BlueNRG_Sleep+0x4b4>)
        savedCurrentTime = (*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4;
10040bb2:	6813      	ldr	r3, [r2, #0]
10040bb4:	091b      	lsrs	r3, r3, #4
        if (0xFFFFF >= (savedCurrentTime+3)) { //Check if the counter are wrapping
10040bb6:	1cd9      	adds	r1, r3, #3
10040bb8:	4281      	cmp	r1, r0
10040bba:	d869      	bhi.n	10040c90 <BlueNRG_Sleep+0x4f0>
10040bbc:	e04c      	b.n	10040c58 <BlueNRG_Sleep+0x4b8>
10040bbe:	46c0      	nop			; (mov r8, r8)
10040bc0:	40200000 	.word	0x40200000
10040bc4:	40100000 	.word	0x40100000
10040bc8:	e000e100 	.word	0xe000e100
10040bcc:	e000ed20 	.word	0xe000ed20
10040bd0:	40900000 	.word	0x40900000
10040bd4:	40300000 	.word	0x40300000
10040bd8:	40300054 	.word	0x40300054
10040bdc:	40300058 	.word	0x40300058
10040be0:	4030005c 	.word	0x4030005c
10040be4:	40400000 	.word	0x40400000
10040be8:	40300028 	.word	0x40300028
10040bec:	4030002c 	.word	0x4030002c
10040bf0:	40300034 	.word	0x40300034
10040bf4:	40300048 	.word	0x40300048
10040bf8:	40300050 	.word	0x40300050
10040bfc:	40300060 	.word	0x40300060
10040c00:	40400005 	.word	0x40400005
10040c04:	00001028 	.word	0x00001028
10040c08:	40f00000 	.word	0x40f00000
10040c0c:	40d00000 	.word	0x40d00000
10040c10:	e000e010 	.word	0xe000e010
10040c14:	40700000 	.word	0x40700000
10040c18:	40e00000 	.word	0x40e00000
10040c1c:	1acce551 	.word	0x1acce551
10040c20:	a0000008 	.word	0xa0000008
10040c24:	10040000 	.word	0x10040000
10040c28:	20000470 	.word	0x20000470
10040c2c:	2000046c 	.word	0x2000046c
10040c30:	20000014 	.word	0x20000014
10040c34:	20000018 	.word	0x20000018
10040c38:	2000000c 	.word	0x2000000c
10040c3c:	e000e1fc 	.word	0xe000e1fc
10040c40:	e000ed00 	.word	0xe000ed00
10040c44:	200004c0 	.word	0x200004c0
10040c48:	200004c8 	.word	0x200004c8
10040c4c:	200004c4 	.word	0x200004c4
10040c50:	48000010 	.word	0x48000010
10040c54:	000fffff 	.word	0x000fffff
          while ((savedCurrentTime+3) > ((*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4)); //Not Wrap
10040c58:	6813      	ldr	r3, [r2, #0]
10040c5a:	091b      	lsrs	r3, r3, #4
10040c5c:	4299      	cmp	r1, r3
10040c5e:	d8fb      	bhi.n	10040c58 <BlueNRG_Sleep+0x4b8>
    if (((partInfo.die_major<<4)|(partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10040c60:	aa7d      	add	r2, sp, #500	; 0x1f4
10040c62:	7853      	ldrb	r3, [r2, #1]
10040c64:	7892      	ldrb	r2, [r2, #2]
10040c66:	011b      	lsls	r3, r3, #4
10040c68:	4313      	orrs	r3, r2
10040c6a:	2b11      	cmp	r3, #17
10040c6c:	dd05      	ble.n	10040c7a <BlueNRG_Sleep+0x4da>
      SET_BORconfigStatus(TRUE);
10040c6e:	2001      	movs	r0, #1
10040c70:	f001 f848 	bl	10041d04 <SET_BORconfigStatus>
      flash_sw_lock = FLASH_UNLOCK_WORD;
10040c74:	4a0a      	ldr	r2, [pc, #40]	; (10040ca0 <BlueNRG_Sleep+0x500>)
10040c76:	4b0b      	ldr	r3, [pc, #44]	; (10040ca4 <BlueNRG_Sleep+0x504>)
10040c78:	601a      	str	r2, [r3, #0]
    if (sleepMode == SLEEPMODE_NOTIMER) {
10040c7a:	9b01      	ldr	r3, [sp, #4]
10040c7c:	2b03      	cmp	r3, #3
10040c7e:	d000      	beq.n	10040c82 <BlueNRG_Sleep+0x4e2>
10040c80:	e5bc      	b.n	100407fc <BlueNRG_Sleep+0x5c>
      BLUE_CTRL->TIMEOUT &= ~(LOW_POWER_STANDBY<<28);
10040c82:	2290      	movs	r2, #144	; 0x90
10040c84:	05d2      	lsls	r2, r2, #23
10040c86:	6853      	ldr	r3, [r2, #4]
10040c88:	4907      	ldr	r1, [pc, #28]	; (10040ca8 <BlueNRG_Sleep+0x508>)
10040c8a:	400b      	ands	r3, r1
10040c8c:	6053      	str	r3, [r2, #4]
10040c8e:	e5b5      	b.n	100407fc <BlueNRG_Sleep+0x5c>
          while (((*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4) != (savedCurrentTime + 3 - 0xFFFFF)); //Wrap
10040c90:	4906      	ldr	r1, [pc, #24]	; (10040cac <BlueNRG_Sleep+0x50c>)
10040c92:	185b      	adds	r3, r3, r1
10040c94:	6811      	ldr	r1, [r2, #0]
10040c96:	0909      	lsrs	r1, r1, #4
10040c98:	4299      	cmp	r1, r3
10040c9a:	d1fb      	bne.n	10040c94 <BlueNRG_Sleep+0x4f4>
10040c9c:	e7e0      	b.n	10040c60 <BlueNRG_Sleep+0x4c0>
10040c9e:	46c0      	nop			; (mov r8, r8)
10040ca0:	fcecbccc 	.word	0xfcecbccc
10040ca4:	20000014 	.word	0x20000014
10040ca8:	cfffffff 	.word	0xcfffffff
10040cac:	fff00004 	.word	0xfff00004
    CKGEN_BLE->CLK32K_IT = 1;
10040cb0:	2301      	movs	r3, #1
10040cb2:	4fe4      	ldr	r7, [pc, #912]	; (10041044 <BlueNRG_Sleep+0x8a4>)
      *ptr = cStackPreamble[i];
10040cb4:	49e4      	ldr	r1, [pc, #912]	; (10041048 <BlueNRG_Sleep+0x8a8>)
    CKGEN_BLE->CLK32K_IT = 1;
10040cb6:	833b      	strh	r3, [r7, #24]
    CKGEN_BLE->CLK32K_COUNT = 0;
10040cb8:	2300      	movs	r3, #0
10040cba:	81bb      	strh	r3, [r7, #12]
    CKGEN_BLE->CLK32K_PERIOD = 0;
10040cbc:	613b      	str	r3, [r7, #16]
      *ptr = cStackPreamble[i];
10040cbe:	58c8      	ldr	r0, [r1, r3]
10040cc0:	18ea      	adds	r2, r5, r3
10040cc2:	3304      	adds	r3, #4
10040cc4:	6010      	str	r0, [r2, #0]
    } while (i < CSTACK_PREAMBLE_NUMBER); 
10040cc6:	2b50      	cmp	r3, #80	; 0x50
10040cc8:	d1f9      	bne.n	10040cbe <BlueNRG_Sleep+0x51e>
10040cca:	9a08      	ldr	r2, [sp, #32]
10040ccc:	4bdf      	ldr	r3, [pc, #892]	; (1004104c <BlueNRG_Sleep+0x8ac>)
    FLASH->CONFIG = FLASH_CONFIG_saved;
10040cce:	2140      	movs	r1, #64	; 0x40
10040cd0:	601a      	str	r2, [r3, #0]
10040cd2:	466a      	mov	r2, sp
10040cd4:	1852      	adds	r2, r2, r1
10040cd6:	9b5c      	ldr	r3, [sp, #368]	; 0x170
10040cd8:	8812      	ldrh	r2, [r2, #0]
    	NVIC->IP[i] = NVIC_IPR_saved[i];
10040cda:	a880      	add	r0, sp, #512	; 0x200
    FLASH->CONFIG = FLASH_CONFIG_saved;
10040cdc:	809a      	strh	r2, [r3, #4]
    NVIC->ISER[0] = NVIC_ISER_saved;
10040cde:	9b06      	ldr	r3, [sp, #24]
10040ce0:	9a11      	ldr	r2, [sp, #68]	; 0x44
10040ce2:	601a      	str	r2, [r3, #0]
10040ce4:	2300      	movs	r3, #0
    	NVIC->IP[i] = NVIC_IPR_saved[i];
10040ce6:	009a      	lsls	r2, r3, #2
10040ce8:	5811      	ldr	r1, [r2, r0]
10040cea:	001a      	movs	r2, r3
10040cec:	9d06      	ldr	r5, [sp, #24]
10040cee:	32c0      	adds	r2, #192	; 0xc0
10040cf0:	0092      	lsls	r2, r2, #2
10040cf2:	3301      	adds	r3, #1
10040cf4:	50a9      	str	r1, [r5, r2]
    for (i=0; i<8; i++) {
10040cf6:	2b08      	cmp	r3, #8
10040cf8:	d1f5      	bne.n	10040ce6 <BlueNRG_Sleep+0x546>
    *(volatile uint32_t *)SHPR3_REG = PENDSV_SYSTICK_IPR_saved;
10040cfa:	9b5d      	ldr	r3, [sp, #372]	; 0x174
10040cfc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    GPIO->MODE3 = GPIO_MODE3_saved;
10040cfe:	2178      	movs	r1, #120	; 0x78
    *(volatile uint32_t *)SHPR3_REG = PENDSV_SYSTICK_IPR_saved;
10040d00:	601a      	str	r2, [r3, #0]
    CKGEN_SOC->CLOCK_EN = CLOCK_EN_saved;
10040d02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10040d04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
      I2Cx->RFTR = I2C_RFTR_saved[i];
10040d06:	ad6f      	add	r5, sp, #444	; 0x1bc
    CKGEN_SOC->CLOCK_EN = CLOCK_EN_saved;
10040d08:	621a      	str	r2, [r3, #32]
    GPIO->DATA = GPIO_DATA_saved;
10040d0a:	2380      	movs	r3, #128	; 0x80
10040d0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
10040d0e:	05db      	lsls	r3, r3, #23
10040d10:	601a      	str	r2, [r3, #0]
    GPIO->OEN = GPIO_OEN_saved;
10040d12:	9a15      	ldr	r2, [sp, #84]	; 0x54
10040d14:	605a      	str	r2, [r3, #4]
    GPIO->PE = GPIO_PE_saved;
10040d16:	9a16      	ldr	r2, [sp, #88]	; 0x58
10040d18:	609a      	str	r2, [r3, #8]
    GPIO->DS = GPIO_DS_saved;
10040d1a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
10040d1c:	60da      	str	r2, [r3, #12]
    GPIO->IEV = GPIO_IEV_saved;
10040d1e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
10040d20:	619a      	str	r2, [r3, #24]
    GPIO->IBE = GPIO_IBE_saved;
10040d22:	9a19      	ldr	r2, [sp, #100]	; 0x64
10040d24:	615a      	str	r2, [r3, #20]
    GPIO->IS = GPIO_IS_saved;
10040d26:	9a18      	ldr	r2, [sp, #96]	; 0x60
10040d28:	611a      	str	r2, [r3, #16]
    GPIO->IC = GPIO_IE_saved; 
10040d2a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10040d2c:	629a      	str	r2, [r3, #40]	; 0x28
    GPIO->IE = GPIO_IE_saved;
10040d2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10040d30:	61da      	str	r2, [r3, #28]
    GPIO->MODE0 = GPIO_MODE0_saved;
10040d32:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
10040d34:	62da      	str	r2, [r3, #44]	; 0x2c
    GPIO->MODE1 = GPIO_MODE1_saved;
10040d36:	9a1c      	ldr	r2, [sp, #112]	; 0x70
10040d38:	631a      	str	r2, [r3, #48]	; 0x30
    GPIO->MODE2 = GPIO_MODE2_saved;
10040d3a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
10040d3c:	635a      	str	r2, [r3, #52]	; 0x34
    GPIO->MODE3 = GPIO_MODE3_saved;
10040d3e:	466a      	mov	r2, sp
10040d40:	1852      	adds	r2, r2, r1
10040d42:	8812      	ldrh	r2, [r2, #0]
    UART->LCRH_RX = UART_LCRH_RX_saved;
10040d44:	310c      	adds	r1, #12
    GPIO->MODE3 = GPIO_MODE3_saved;
10040d46:	871a      	strh	r2, [r3, #56]	; 0x38
    GPIO->MFTX = GPIO_IOSEL_MFTX_saved;
10040d48:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
10040d4a:	645a      	str	r2, [r3, #68]	; 0x44
    UART->TIMEOUT = UART_TIMEOUT_saved;
10040d4c:	9b05      	ldr	r3, [sp, #20]
10040d4e:	9a20      	ldr	r2, [sp, #128]	; 0x80
10040d50:	60da      	str	r2, [r3, #12]
    UART->LCRH_RX = UART_LCRH_RX_saved;
10040d52:	466a      	mov	r2, sp
10040d54:	1852      	adds	r2, r2, r1
10040d56:	9b05      	ldr	r3, [sp, #20]
10040d58:	7812      	ldrb	r2, [r2, #0]
    UART->IBRD = UART_IBRD_saved;
10040d5a:	3104      	adds	r1, #4
    UART->LCRH_RX = UART_LCRH_RX_saved;
10040d5c:	771a      	strb	r2, [r3, #28]
    UART->IBRD = UART_IBRD_saved;
10040d5e:	466a      	mov	r2, sp
10040d60:	1852      	adds	r2, r2, r1
10040d62:	9b05      	ldr	r3, [sp, #20]
10040d64:	8812      	ldrh	r2, [r2, #0]
    UART->FBRD = UART_FBRD_saved;
10040d66:	3104      	adds	r1, #4
    UART->IBRD = UART_IBRD_saved;
10040d68:	849a      	strh	r2, [r3, #36]	; 0x24
    UART->FBRD = UART_FBRD_saved;
10040d6a:	466a      	mov	r2, sp
10040d6c:	1852      	adds	r2, r2, r1
10040d6e:	9b5e      	ldr	r3, [sp, #376]	; 0x178
10040d70:	7812      	ldrb	r2, [r2, #0]
    UART->LCRH_TX = UART_LCRH_TX_saved;
10040d72:	3104      	adds	r1, #4
    UART->FBRD = UART_FBRD_saved;
10040d74:	701a      	strb	r2, [r3, #0]
    UART->LCRH_TX = UART_LCRH_TX_saved;
10040d76:	466a      	mov	r2, sp
10040d78:	1852      	adds	r2, r2, r1
10040d7a:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
10040d7c:	7812      	ldrb	r2, [r2, #0]
    UART->IFLS = UART_IFLS_saved;
10040d7e:	3108      	adds	r1, #8
    UART->LCRH_TX = UART_LCRH_TX_saved;
10040d80:	701a      	strb	r2, [r3, #0]
    UART->CR = UART_CR_saved;
10040d82:	9b05      	ldr	r3, [sp, #20]
10040d84:	9a25      	ldr	r2, [sp, #148]	; 0x94
10040d86:	631a      	str	r2, [r3, #48]	; 0x30
    UART->IFLS = UART_IFLS_saved;
10040d88:	466a      	mov	r2, sp
10040d8a:	1852      	adds	r2, r2, r1
10040d8c:	9b60      	ldr	r3, [sp, #384]	; 0x180
10040d8e:	7812      	ldrb	r2, [r2, #0]
    UART->IMSC = UART_IMSC_saved;
10040d90:	3104      	adds	r1, #4
    UART->IFLS = UART_IFLS_saved;
10040d92:	701a      	strb	r2, [r3, #0]
    UART->IMSC = UART_IMSC_saved;
10040d94:	466a      	mov	r2, sp
10040d96:	1852      	adds	r2, r2, r1
10040d98:	9b05      	ldr	r3, [sp, #20]
10040d9a:	8812      	ldrh	r2, [r2, #0]
    UART->DMACR = UART_DMACR_saved;
10040d9c:	3104      	adds	r1, #4
    UART->IMSC = UART_IMSC_saved;
10040d9e:	871a      	strh	r2, [r3, #56]	; 0x38
    UART->DMACR = UART_DMACR_saved;
10040da0:	466a      	mov	r2, sp
10040da2:	1852      	adds	r2, r2, r1
10040da4:	9b61      	ldr	r3, [sp, #388]	; 0x184
10040da6:	7812      	ldrb	r2, [r2, #0]
    UART->XFCR = UART_XFCR_saved;
10040da8:	3104      	adds	r1, #4
    UART->DMACR = UART_DMACR_saved;
10040daa:	701a      	strb	r2, [r3, #0]
    UART->XFCR = UART_XFCR_saved;
10040dac:	466a      	mov	r2, sp
10040dae:	1852      	adds	r2, r2, r1
10040db0:	7812      	ldrb	r2, [r2, #0]
10040db2:	9b62      	ldr	r3, [sp, #392]	; 0x188
    UART->XON1 = UART_XON1_saved;
10040db4:	3104      	adds	r1, #4
    UART->XFCR = UART_XFCR_saved;
10040db6:	701a      	strb	r2, [r3, #0]
    UART->XON1 = UART_XON1_saved;
10040db8:	466a      	mov	r2, sp
10040dba:	1852      	adds	r2, r2, r1
10040dbc:	9b63      	ldr	r3, [sp, #396]	; 0x18c
10040dbe:	7812      	ldrb	r2, [r2, #0]
    UART->XON2 = UART_XON2_saved;
10040dc0:	3104      	adds	r1, #4
    UART->XON1 = UART_XON1_saved;
10040dc2:	701a      	strb	r2, [r3, #0]
    UART->XON2 = UART_XON2_saved;
10040dc4:	466a      	mov	r2, sp
10040dc6:	1852      	adds	r2, r2, r1
10040dc8:	9b64      	ldr	r3, [sp, #400]	; 0x190
10040dca:	7812      	ldrb	r2, [r2, #0]
    UART->XOFF1 = UART_XOFF1_saved;
10040dcc:	3104      	adds	r1, #4
    UART->XON2 = UART_XON2_saved;
10040dce:	701a      	strb	r2, [r3, #0]
    UART->XOFF1 = UART_XOFF1_saved;
10040dd0:	466a      	mov	r2, sp
10040dd2:	1852      	adds	r2, r2, r1
10040dd4:	9b65      	ldr	r3, [sp, #404]	; 0x194
10040dd6:	7812      	ldrb	r2, [r2, #0]
    UART->XOFF2 = UART_XOFF2_saved;
10040dd8:	3104      	adds	r1, #4
    UART->XOFF1 = UART_XOFF1_saved;
10040dda:	701a      	strb	r2, [r3, #0]
    UART->XOFF2 = UART_XOFF2_saved;
10040ddc:	466a      	mov	r2, sp
10040dde:	1852      	adds	r2, r2, r1
10040de0:	9b66      	ldr	r3, [sp, #408]	; 0x198
10040de2:	7812      	ldrb	r2, [r2, #0]
    SPI->CPSR = SPI_CPSR_saved;
10040de4:	310c      	adds	r1, #12
    UART->XOFF2 = UART_XOFF2_saved;
10040de6:	701a      	strb	r2, [r3, #0]
    SPI->CR0 = SPI_CR0_saved; 
10040de8:	9b02      	ldr	r3, [sp, #8]
10040dea:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
10040dec:	601a      	str	r2, [r3, #0]
    SPI->CR1 = SPI_CR1_saved;
10040dee:	9b02      	ldr	r3, [sp, #8]
10040df0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
10040df2:	605a      	str	r2, [r3, #4]
    SPI->CPSR = SPI_CPSR_saved;
10040df4:	466a      	mov	r2, sp
10040df6:	1852      	adds	r2, r2, r1
10040df8:	9b02      	ldr	r3, [sp, #8]
10040dfa:	7812      	ldrb	r2, [r2, #0]
    SPI->IMSC = SPI_IMSC_saved;
10040dfc:	3104      	adds	r1, #4
    SPI->CPSR = SPI_CPSR_saved;
10040dfe:	741a      	strb	r2, [r3, #16]
    SPI->IMSC = SPI_IMSC_saved;
10040e00:	466a      	mov	r2, sp
10040e02:	1852      	adds	r2, r2, r1
10040e04:	9b02      	ldr	r3, [sp, #8]
10040e06:	7812      	ldrb	r2, [r2, #0]
    SPI->DMACR = SPI_DMACR_saved;
10040e08:	3104      	adds	r1, #4
    SPI->IMSC = SPI_IMSC_saved;
10040e0a:	751a      	strb	r2, [r3, #20]
    SPI->DMACR = SPI_DMACR_saved;
10040e0c:	466a      	mov	r2, sp
10040e0e:	1852      	adds	r2, r2, r1
10040e10:	9b67      	ldr	r3, [sp, #412]	; 0x19c
10040e12:	7812      	ldrb	r2, [r2, #0]
    SPI->RXFRM = SPI_RXFRM_saved;
10040e14:	3104      	adds	r1, #4
    SPI->DMACR = SPI_DMACR_saved;
10040e16:	77da      	strb	r2, [r3, #31]
    SPI->RXFRM = SPI_RXFRM_saved;
10040e18:	466a      	mov	r2, sp
10040e1a:	1852      	adds	r2, r2, r1
10040e1c:	9b02      	ldr	r3, [sp, #8]
10040e1e:	8812      	ldrh	r2, [r2, #0]
    SPI->WDTXF = SPI_WDTXF_saved;
10040e20:	3108      	adds	r1, #8
    SPI->RXFRM = SPI_RXFRM_saved;
10040e22:	851a      	strh	r2, [r3, #40]	; 0x28
    SPI->CHN = SPI_CHN_saved;
10040e24:	9b02      	ldr	r3, [sp, #8]
10040e26:	9a34      	ldr	r2, [sp, #208]	; 0xd0
10040e28:	62da      	str	r2, [r3, #44]	; 0x2c
    SPI->WDTXF = SPI_WDTXF_saved;
10040e2a:	466a      	mov	r2, sp
10040e2c:	1852      	adds	r2, r2, r1
10040e2e:	9b02      	ldr	r3, [sp, #8]
10040e30:	8812      	ldrh	r2, [r2, #0]
10040e32:	861a      	strh	r2, [r3, #48]	; 0x30
      I2Cx->CR = I2C_CR_saved[i];
10040e34:	aa69      	add	r2, sp, #420	; 0x1a4
    SPI->WDTXF = SPI_WDTXF_saved;
10040e36:	2300      	movs	r3, #0
      I2Cx->CR = I2C_CR_saved[i];
10040e38:	4694      	mov	ip, r2
10040e3a:	4661      	mov	r1, ip
      I2Cx->SCR = I2C_SCR_saved[i];
10040e3c:	200c      	movs	r0, #12
10040e3e:	4a84      	ldr	r2, [pc, #528]	; (10041050 <BlueNRG_Sleep+0x8b0>)
      I2Cx->CR = I2C_CR_saved[i];
10040e40:	5859      	ldr	r1, [r3, r1]
10040e42:	189a      	adds	r2, r3, r2
10040e44:	0492      	lsls	r2, r2, #18
10040e46:	6011      	str	r1, [r2, #0]
      I2Cx->SCR = I2C_SCR_saved[i];
10040e48:	a968      	add	r1, sp, #416	; 0x1a0
10040e4a:	1809      	adds	r1, r1, r0
10040e4c:	58c9      	ldr	r1, [r1, r3]
      I2Cx->TFTR = I2C_TFTR_saved[i];
10040e4e:	3008      	adds	r0, #8
      I2Cx->SCR = I2C_SCR_saved[i];
10040e50:	6051      	str	r1, [r2, #4]
10040e52:	9102      	str	r1, [sp, #8]
      I2Cx->TFTR = I2C_TFTR_saved[i];
10040e54:	a968      	add	r1, sp, #416	; 0x1a0
10040e56:	1809      	adds	r1, r1, r0
10040e58:	5ac9      	ldrh	r1, [r1, r3]
10040e5a:	8391      	strh	r1, [r2, #28]
      I2Cx->RFTR = I2C_RFTR_saved[i];
10040e5c:	5b59      	ldrh	r1, [r3, r5]
10040e5e:	8411      	strh	r1, [r2, #32]
      I2Cx->DMAR = I2C_DMAR_saved[i];
10040e60:	a971      	add	r1, sp, #452	; 0x1c4
10040e62:	5859      	ldr	r1, [r3, r1]
10040e64:	b289      	uxth	r1, r1
10040e66:	8491      	strh	r1, [r2, #36]	; 0x24
      I2Cx->BRCR = I2C_BRCR_saved[i];
10040e68:	a973      	add	r1, sp, #460	; 0x1cc
10040e6a:	5859      	ldr	r1, [r3, r1]
10040e6c:	b289      	uxth	r1, r1
10040e6e:	8511      	strh	r1, [r2, #40]	; 0x28
      I2Cx->IMSCR = I2C_IMSCR_saved[i];
10040e70:	a975      	add	r1, sp, #468	; 0x1d4
10040e72:	5859      	ldr	r1, [r3, r1]
10040e74:	62d1      	str	r1, [r2, #44]	; 0x2c
      I2Cx->THDDAT = I2C_THDDAT_saved[i];
10040e76:	a977      	add	r1, sp, #476	; 0x1dc
10040e78:	5859      	ldr	r1, [r3, r1]
10040e7a:	b288      	uxth	r0, r1
10040e7c:	0011      	movs	r1, r2
10040e7e:	314c      	adds	r1, #76	; 0x4c
10040e80:	8008      	strh	r0, [r1, #0]
      I2Cx->THDSTA_FST_STD = I2C_THDSTA_FST_STD_saved[i];
10040e82:	a979      	add	r1, sp, #484	; 0x1e4
10040e84:	5859      	ldr	r1, [r3, r1]
10040e86:	6511      	str	r1, [r2, #80]	; 0x50
      I2Cx->TSUSTA_FST_STD = I2C_TSUSTA_FST_STD_saved[i];
10040e88:	a97b      	add	r1, sp, #492	; 0x1ec
10040e8a:	5859      	ldr	r1, [r3, r1]
10040e8c:	3304      	adds	r3, #4
10040e8e:	6591      	str	r1, [r2, #88]	; 0x58
    for (i=0; i<2; i++) {
10040e90:	2b08      	cmp	r3, #8
10040e92:	d1d2      	bne.n	10040e3a <BlueNRG_Sleep+0x69a>
    RNG->CR = RNG_CR_saved;  
10040e94:	23b0      	movs	r3, #176	; 0xb0
10040e96:	9a36      	ldr	r2, [sp, #216]	; 0xd8
10040e98:	061b      	lsls	r3, r3, #24
10040e9a:	601a      	str	r2, [r3, #0]
    SysTick->LOAD = SYST_RVR_saved;
10040e9c:	9b51      	ldr	r3, [sp, #324]	; 0x144
    SysTick->CTRL = SYST_CSR_saved;
10040e9e:	9a50      	ldr	r2, [sp, #320]	; 0x140
    SysTick->LOAD = SYST_RVR_saved;
10040ea0:	6073      	str	r3, [r6, #4]
    SysTick->VAL = 0;
10040ea2:	2300      	movs	r3, #0
10040ea4:	60b3      	str	r3, [r6, #8]
    SysTick->CTRL = SYST_CSR_saved;
10040ea6:	6032      	str	r2, [r6, #0]
    RTC->CWDMR = RTC_CWDMR_saved;
10040ea8:	9a37      	ldr	r2, [sp, #220]	; 0xdc
    RTC->CWYMR = RTC_CWYMR_saved;
10040eaa:	21e4      	movs	r1, #228	; 0xe4
    RTC->CWDMR = RTC_CWDMR_saved;
10040eac:	6062      	str	r2, [r4, #4]
    RTC->CWDLR = RTC_CWDLR_saved;
10040eae:	9a38      	ldr	r2, [sp, #224]	; 0xe0
    MFT1->TNCRA = T1CRA_saved;
10040eb0:	2088      	movs	r0, #136	; 0x88
    RTC->CWDLR = RTC_CWDLR_saved;
10040eb2:	60a2      	str	r2, [r4, #8]
    RTC->CWYMR = RTC_CWYMR_saved;
10040eb4:	466a      	mov	r2, sp
10040eb6:	1852      	adds	r2, r2, r1
10040eb8:	8812      	ldrh	r2, [r2, #0]
    RTC->CWYLR = RTC_CWYLR_saved;
10040eba:	3104      	adds	r1, #4
    RTC->CWYMR = RTC_CWYMR_saved;
10040ebc:	8222      	strh	r2, [r4, #16]
    RTC->CWYLR = RTC_CWYLR_saved;
10040ebe:	466a      	mov	r2, sp
10040ec0:	1852      	adds	r2, r2, r1
10040ec2:	8812      	ldrh	r2, [r2, #0]
    RTC->IMSC = RTC_IMSC_saved;
10040ec4:	3108      	adds	r1, #8
    RTC->CWYLR = RTC_CWYLR_saved;
10040ec6:	82a2      	strh	r2, [r4, #20]
    RTC->CTCR = RTC_CTCR_saved;
10040ec8:	9a3b      	ldr	r2, [sp, #236]	; 0xec
    MFT1->TNCRA = T1CRA_saved;
10040eca:	0040      	lsls	r0, r0, #1
    RTC->CTCR = RTC_CTCR_saved;
10040ecc:	61a2      	str	r2, [r4, #24]
    RTC->IMSC = RTC_IMSC_saved;
10040ece:	466a      	mov	r2, sp
10040ed0:	1852      	adds	r2, r2, r1
10040ed2:	7812      	ldrb	r2, [r2, #0]
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10040ed4:	3104      	adds	r1, #4
    RTC->IMSC = RTC_IMSC_saved;
10040ed6:	7722      	strb	r2, [r4, #28]
    RTC->TLR1 = RTC_TLR1_saved;
10040ed8:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
10040eda:	2605      	movs	r6, #5
10040edc:	6362      	str	r2, [r4, #52]	; 0x34
    RTC->TLR2 = RTC_TLR2_saved;
10040ede:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
      DMAx->CNDTR = DMA_CNDTR_saved[i];
10040ee0:	ad90      	add	r5, sp, #576	; 0x240
    RTC->TLR2 = RTC_TLR2_saved;
10040ee2:	63a2      	str	r2, [r4, #56]	; 0x38
    RTC->TPR1 = RTC_TPR1_saved;
10040ee4:	9a40      	ldr	r2, [sp, #256]	; 0x100
10040ee6:	63e2      	str	r2, [r4, #60]	; 0x3c
    RTC->TPR2 = RTC_TPR2_saved;
10040ee8:	9a41      	ldr	r2, [sp, #260]	; 0x104
10040eea:	6422      	str	r2, [r4, #64]	; 0x40
    RTC->TPR3 = RTC_TPR3_saved;
10040eec:	9a42      	ldr	r2, [sp, #264]	; 0x108
10040eee:	6462      	str	r2, [r4, #68]	; 0x44
    RTC->TPR4 = RTC_TPR4_saved; 
10040ef0:	9a43      	ldr	r2, [sp, #268]	; 0x10c
10040ef2:	64a2      	str	r2, [r4, #72]	; 0x48
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10040ef4:	466a      	mov	r2, sp
10040ef6:	1852      	adds	r2, r2, r1
    MFT1->TNCRA = T1CRA_saved;
10040ef8:	4669      	mov	r1, sp
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10040efa:	8812      	ldrh	r2, [r2, #0]
    MFT1->TNCRA = T1CRA_saved;
10040efc:	1809      	adds	r1, r1, r0
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10040efe:	8622      	strh	r2, [r4, #48]	; 0x30
    MFT1->TNCRA = T1CRA_saved;
10040f00:	9a03      	ldr	r2, [sp, #12]
10040f02:	8809      	ldrh	r1, [r1, #0]
    MFT1->TNCRB = T1CRB_saved;
10040f04:	3004      	adds	r0, #4
    MFT1->TNCRA = T1CRA_saved;
10040f06:	8091      	strh	r1, [r2, #4]
    MFT1->TNCRB = T1CRB_saved;
10040f08:	4669      	mov	r1, sp
10040f0a:	1809      	adds	r1, r1, r0
10040f0c:	9a03      	ldr	r2, [sp, #12]
10040f0e:	8809      	ldrh	r1, [r1, #0]
    MFT1->TNPRSC = T1PRSC_saved;
10040f10:	3004      	adds	r0, #4
    MFT1->TNCRB = T1CRB_saved;
10040f12:	8111      	strh	r1, [r2, #8]
    MFT1->TNPRSC = T1PRSC_saved;
10040f14:	4669      	mov	r1, sp
10040f16:	1809      	adds	r1, r1, r0
10040f18:	9a03      	ldr	r2, [sp, #12]
10040f1a:	7809      	ldrb	r1, [r1, #0]
    MFT1->TNCKC = T1CKC_saved;
10040f1c:	3004      	adds	r0, #4
    MFT1->TNPRSC = T1PRSC_saved;
10040f1e:	7411      	strb	r1, [r2, #16]
    MFT1->TNCKC = T1CKC_saved;
10040f20:	4669      	mov	r1, sp
10040f22:	1809      	adds	r1, r1, r0
10040f24:	9a03      	ldr	r2, [sp, #12]
10040f26:	7809      	ldrb	r1, [r1, #0]
    MFT1->TNICTRL = T1ICTRL_saved;
10040f28:	2492      	movs	r4, #146	; 0x92
    MFT1->TNCKC = T1CKC_saved;
10040f2a:	7511      	strb	r1, [r2, #20]
    MFT1->TNMCTRL = T1MCTRL_saved & ~((uint32_t)(1<<6));
10040f2c:	2140      	movs	r1, #64	; 0x40
10040f2e:	9a48      	ldr	r2, [sp, #288]	; 0x120
10040f30:	9803      	ldr	r0, [sp, #12]
10040f32:	438a      	bics	r2, r1
10040f34:	8302      	strh	r2, [r0, #24]
    MFT1->TNICTRL = T1ICTRL_saved;
10040f36:	4668      	mov	r0, sp
10040f38:	0064      	lsls	r4, r4, #1
10040f3a:	1900      	adds	r0, r0, r4
10040f3c:	9a03      	ldr	r2, [sp, #12]
10040f3e:	7800      	ldrb	r0, [r0, #0]
    MFT2->TNCRA = T2CRA_saved;
10040f40:	3404      	adds	r4, #4
    MFT1->TNICTRL = T1ICTRL_saved;
10040f42:	7710      	strb	r0, [r2, #28]
    MFT2->TNCRA = T2CRA_saved;
10040f44:	4668      	mov	r0, sp
10040f46:	1900      	adds	r0, r0, r4
10040f48:	9a04      	ldr	r2, [sp, #16]
10040f4a:	8800      	ldrh	r0, [r0, #0]
    MFT2->TNCRB = T2CRB_saved;
10040f4c:	3404      	adds	r4, #4
    MFT2->TNCRA = T2CRA_saved;
10040f4e:	8090      	strh	r0, [r2, #4]
    MFT2->TNCRB = T2CRB_saved;
10040f50:	4668      	mov	r0, sp
10040f52:	1900      	adds	r0, r0, r4
10040f54:	9a04      	ldr	r2, [sp, #16]
10040f56:	8800      	ldrh	r0, [r0, #0]
    MFT2->TNPRSC = T2PRSC_saved;
10040f58:	3404      	adds	r4, #4
    MFT2->TNCRB = T2CRB_saved;
10040f5a:	8110      	strh	r0, [r2, #8]
    MFT2->TNPRSC = T2PRSC_saved;
10040f5c:	4668      	mov	r0, sp
10040f5e:	1900      	adds	r0, r0, r4
10040f60:	9a04      	ldr	r2, [sp, #16]
10040f62:	7800      	ldrb	r0, [r0, #0]
    MFT2->TNCKC = T2CKC_saved;
10040f64:	3404      	adds	r4, #4
    MFT2->TNPRSC = T2PRSC_saved;
10040f66:	7410      	strb	r0, [r2, #16]
    MFT2->TNCKC = T2CKC_saved;
10040f68:	4668      	mov	r0, sp
10040f6a:	1900      	adds	r0, r0, r4
10040f6c:	9a04      	ldr	r2, [sp, #16]
10040f6e:	7800      	ldrb	r0, [r0, #0]
      DMAx->CCR = DMA_CCR_saved[i] ;
10040f70:	ac88      	add	r4, sp, #544	; 0x220
    MFT2->TNCKC = T2CKC_saved;
10040f72:	7510      	strb	r0, [r2, #20]
    MFT2->TNMCTRL = T2MCTRL_saved & ~((uint32_t)(1<<6));
10040f74:	9a4e      	ldr	r2, [sp, #312]	; 0x138
    MFT2->TNICTRL = T2ICTRL_saved;
10040f76:	209e      	movs	r0, #158	; 0x9e
    MFT2->TNMCTRL = T2MCTRL_saved & ~((uint32_t)(1<<6));
10040f78:	438a      	bics	r2, r1
10040f7a:	9904      	ldr	r1, [sp, #16]
    MFT2->TNICTRL = T2ICTRL_saved;
10040f7c:	0040      	lsls	r0, r0, #1
    MFT2->TNMCTRL = T2MCTRL_saved & ~((uint32_t)(1<<6));
10040f7e:	830a      	strh	r2, [r1, #24]
    MFT2->TNICTRL = T2ICTRL_saved;
10040f80:	4669      	mov	r1, sp
10040f82:	1809      	adds	r1, r1, r0
10040f84:	9a04      	ldr	r2, [sp, #16]
10040f86:	7809      	ldrb	r1, [r1, #0]
    WDG->CR = WDG_CR_saved;
10040f88:	3010      	adds	r0, #16
    MFT2->TNICTRL = T2ICTRL_saved;
10040f8a:	7711      	strb	r1, [r2, #28]
    WDG->LR = WDG_LR_saved;
10040f8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10040f8e:	9952      	ldr	r1, [sp, #328]	; 0x148
10040f90:	6011      	str	r1, [r2, #0]
    WDG->CR = WDG_CR_saved;
10040f92:	4669      	mov	r1, sp
10040f94:	1809      	adds	r1, r1, r0
10040f96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10040f98:	7809      	ldrb	r1, [r1, #0]
10040f9a:	7211      	strb	r1, [r2, #8]
    WDG->LOCK = WDG_LOCK_saved;
10040f9c:	22c0      	movs	r2, #192	; 0xc0
10040f9e:	980d      	ldr	r0, [sp, #52]	; 0x34
10040fa0:	990a      	ldr	r1, [sp, #40]	; 0x28
10040fa2:	0112      	lsls	r2, r2, #4
10040fa4:	5088      	str	r0, [r1, r2]
      DMAx->CPAR = DMA_CPAR_saved[i];
10040fa6:	a898      	add	r0, sp, #608	; 0x260
10040fa8:	0032      	movs	r2, r6
10040faa:	435a      	muls	r2, r3
10040fac:	4929      	ldr	r1, [pc, #164]	; (10041054 <BlueNRG_Sleep+0x8b4>)
10040fae:	1852      	adds	r2, r2, r1
      DMAx->CNDTR = DMA_CNDTR_saved[i];
10040fb0:	5959      	ldr	r1, [r3, r5]
10040fb2:	6051      	str	r1, [r2, #4]
      DMAx->CCR = DMA_CCR_saved[i] ;
10040fb4:	5919      	ldr	r1, [r3, r4]
10040fb6:	6011      	str	r1, [r2, #0]
      DMAx->CPAR = DMA_CPAR_saved[i];
10040fb8:	5819      	ldr	r1, [r3, r0]
10040fba:	6091      	str	r1, [r2, #8]
      DMAx->CMAR = DMA_CMAR[i];
10040fbc:	a9a0      	add	r1, sp, #640	; 0x280
10040fbe:	5859      	ldr	r1, [r3, r1]
10040fc0:	3304      	adds	r3, #4
10040fc2:	60d1      	str	r1, [r2, #12]
    for (i=0; i<8; i++) {
10040fc4:	2b20      	cmp	r3, #32
10040fc6:	d1ef      	bne.n	10040fa8 <BlueNRG_Sleep+0x808>
    ADC->CONF = ADC_CONF_saved;
10040fc8:	2381      	movs	r3, #129	; 0x81
10040fca:	9a54      	ldr	r2, [sp, #336]	; 0x150
10040fcc:	05db      	lsls	r3, r3, #23
    ADC->IRQMASK = ADC_IRQMASK_saved;
10040fce:	21aa      	movs	r1, #170	; 0xaa
    ADC->CONF = ADC_CONF_saved;
10040fd0:	605a      	str	r2, [r3, #4]
    ADC->IRQMASK = ADC_IRQMASK_saved;
10040fd2:	466a      	mov	r2, sp
10040fd4:	0049      	lsls	r1, r1, #1
10040fd6:	1852      	adds	r2, r2, r1
10040fd8:	7812      	ldrb	r2, [r2, #0]
    ADC->OFFSET_MSB = ADC_OFFSET_MSB_saved;
10040fda:	3104      	adds	r1, #4
    ADC->IRQMASK = ADC_IRQMASK_saved;
10040fdc:	731a      	strb	r2, [r3, #12]
    ADC->OFFSET_MSB = ADC_OFFSET_MSB_saved;
10040fde:	466a      	mov	r2, sp
10040fe0:	1852      	adds	r2, r2, r1
10040fe2:	8812      	ldrh	r2, [r2, #0]
    ADC->OFFSET_LSB = ADC_OFFSET_LSB_saved;
10040fe4:	3104      	adds	r1, #4
    ADC->OFFSET_MSB = ADC_OFFSET_MSB_saved;
10040fe6:	835a      	strh	r2, [r3, #26]
    ADC->OFFSET_LSB = ADC_OFFSET_LSB_saved;
10040fe8:	466a      	mov	r2, sp
10040fea:	1852      	adds	r2, r2, r1
10040fec:	8812      	ldrh	r2, [r2, #0]
    ADC->CTRL = ADC_CTRL_saved;
10040fee:	310c      	adds	r1, #12
    ADC->OFFSET_LSB = ADC_OFFSET_LSB_saved;
10040ff0:	831a      	strh	r2, [r3, #24]
    ADC->THRESHOLD_HI = ADC_THRESHOLD_HI_saved;
10040ff2:	9a58      	ldr	r2, [sp, #352]	; 0x160
10040ff4:	625a      	str	r2, [r3, #36]	; 0x24
    ADC->THRESHOLD_LO = ADC_THRESHOLD_LO_saved;
10040ff6:	9a59      	ldr	r2, [sp, #356]	; 0x164
10040ff8:	629a      	str	r2, [r3, #40]	; 0x28
    ADC->CTRL = ADC_CTRL_saved;
10040ffa:	466a      	mov	r2, sp
10040ffc:	1852      	adds	r2, r2, r1
10040ffe:	8812      	ldrh	r2, [r2, #0]
10041000:	801a      	strh	r2, [r3, #0]
    PKA->IEN = PKA_IEN_saved;
10041002:	23c0      	movs	r3, #192	; 0xc0
10041004:	9a5b      	ldr	r2, [sp, #364]	; 0x16c
10041006:	061b      	lsls	r3, r3, #24
10041008:	609a      	str	r2, [r3, #8]
    if ((CKGEN_SOC->REASON_RST == 0) && gpioWakeBitMask) {
1004100a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1004100c:	7a1b      	ldrb	r3, [r3, #8]
1004100e:	2b00      	cmp	r3, #0
10041010:	d143      	bne.n	1004109a <BlueNRG_Sleep+0x8fa>
10041012:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10041014:	2b00      	cmp	r3, #0
10041016:	d040      	beq.n	1004109a <BlueNRG_Sleep+0x8fa>
      if ((((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO9) == WAKENED_FROM_IO9) && (GPIO->IE & GPIO_Pin_9))   ||
10041018:	2209      	movs	r2, #9
1004101a:	893b      	ldrh	r3, [r7, #8]
1004101c:	4013      	ands	r3, r2
1004101e:	4293      	cmp	r3, r2
10041020:	d104      	bne.n	1004102c <BlueNRG_Sleep+0x88c>
10041022:	2380      	movs	r3, #128	; 0x80
10041024:	05db      	lsls	r3, r3, #23
10041026:	69db      	ldr	r3, [r3, #28]
10041028:	059b      	lsls	r3, r3, #22
1004102a:	d433      	bmi.n	10041094 <BlueNRG_Sleep+0x8f4>
1004102c:	2211      	movs	r2, #17
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO10) == WAKENED_FROM_IO10) && (GPIO->IE & GPIO_Pin_10)) ||
1004102e:	893b      	ldrh	r3, [r7, #8]
      if ((((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO9) == WAKENED_FROM_IO9) && (GPIO->IE & GPIO_Pin_9))   ||
10041030:	4013      	ands	r3, r2
10041032:	4293      	cmp	r3, r2
10041034:	d110      	bne.n	10041058 <BlueNRG_Sleep+0x8b8>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO10) == WAKENED_FROM_IO10) && (GPIO->IE & GPIO_Pin_10)) ||
10041036:	2380      	movs	r3, #128	; 0x80
10041038:	05db      	lsls	r3, r3, #23
1004103a:	69db      	ldr	r3, [r3, #28]
1004103c:	055b      	lsls	r3, r3, #21
1004103e:	d429      	bmi.n	10041094 <BlueNRG_Sleep+0x8f4>
10041040:	e00a      	b.n	10041058 <BlueNRG_Sleep+0x8b8>
10041042:	46c0      	nop			; (mov r8, r8)
10041044:	48100000 	.word	0x48100000
10041048:	20000470 	.word	0x20000470
1004104c:	2000046c 	.word	0x2000046c
10041050:	00001028 	.word	0x00001028
10041054:	a0000008 	.word	0xa0000008
10041058:	2221      	movs	r2, #33	; 0x21
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO11) == WAKENED_FROM_IO11) && (GPIO->IE & GPIO_Pin_11)) ||
1004105a:	893b      	ldrh	r3, [r7, #8]
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO10) == WAKENED_FROM_IO10) && (GPIO->IE & GPIO_Pin_10)) ||
1004105c:	4013      	ands	r3, r2
1004105e:	4293      	cmp	r3, r2
10041060:	d104      	bne.n	1004106c <BlueNRG_Sleep+0x8cc>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO11) == WAKENED_FROM_IO11) && (GPIO->IE & GPIO_Pin_11)) ||
10041062:	2380      	movs	r3, #128	; 0x80
10041064:	05db      	lsls	r3, r3, #23
10041066:	69db      	ldr	r3, [r3, #28]
10041068:	051b      	lsls	r3, r3, #20
1004106a:	d413      	bmi.n	10041094 <BlueNRG_Sleep+0x8f4>
1004106c:	2241      	movs	r2, #65	; 0x41
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO12) == WAKENED_FROM_IO12) && (GPIO->IE & GPIO_Pin_12)) ||
1004106e:	893b      	ldrh	r3, [r7, #8]
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO11) == WAKENED_FROM_IO11) && (GPIO->IE & GPIO_Pin_11)) ||
10041070:	4013      	ands	r3, r2
10041072:	4293      	cmp	r3, r2
10041074:	d104      	bne.n	10041080 <BlueNRG_Sleep+0x8e0>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO12) == WAKENED_FROM_IO12) && (GPIO->IE & GPIO_Pin_12)) ||
10041076:	2380      	movs	r3, #128	; 0x80
10041078:	05db      	lsls	r3, r3, #23
1004107a:	69db      	ldr	r3, [r3, #28]
1004107c:	04db      	lsls	r3, r3, #19
1004107e:	d409      	bmi.n	10041094 <BlueNRG_Sleep+0x8f4>
10041080:	2281      	movs	r2, #129	; 0x81
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO13) == WAKENED_FROM_IO13) && (GPIO->IE & GPIO_Pin_13))) {
10041082:	893b      	ldrh	r3, [r7, #8]
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO12) == WAKENED_FROM_IO12) && (GPIO->IE & GPIO_Pin_12)) ||
10041084:	4013      	ands	r3, r2
10041086:	4293      	cmp	r3, r2
10041088:	d107      	bne.n	1004109a <BlueNRG_Sleep+0x8fa>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO13) == WAKENED_FROM_IO13) && (GPIO->IE & GPIO_Pin_13))) {
1004108a:	2380      	movs	r3, #128	; 0x80
1004108c:	05db      	lsls	r3, r3, #23
1004108e:	69db      	ldr	r3, [r3, #28]
10041090:	049b      	lsls	r3, r3, #18
10041092:	d502      	bpl.n	1004109a <BlueNRG_Sleep+0x8fa>
        NVIC->ISPR[0] = 1<<GPIO_IRQn;
10041094:	2201      	movs	r2, #1
10041096:	4b21      	ldr	r3, [pc, #132]	; (1004111c <BlueNRG_Sleep+0x97c>)
10041098:	605a      	str	r2, [r3, #4]
    if (sleepMode == SLEEPMODE_NOTIMER) {
1004109a:	9b01      	ldr	r3, [sp, #4]
1004109c:	2b03      	cmp	r3, #3
1004109e:	d105      	bne.n	100410ac <BlueNRG_Sleep+0x90c>
      BLUE_CTRL->TIMEOUT &= ~(LOW_POWER_STANDBY<<28);
100410a0:	2290      	movs	r2, #144	; 0x90
100410a2:	05d2      	lsls	r2, r2, #23
100410a4:	6853      	ldr	r3, [r2, #4]
100410a6:	491e      	ldr	r1, [pc, #120]	; (10041120 <BlueNRG_Sleep+0x980>)
100410a8:	400b      	ands	r3, r1
100410aa:	6053      	str	r3, [r2, #4]
    SYSTEM_CTRL->CTRL = SYS_Ctrl_saved;
100410ac:	466a      	mov	r2, sp
100410ae:	212c      	movs	r1, #44	; 0x2c
100410b0:	1852      	adds	r2, r2, r1
100410b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
100410b4:	7812      	ldrb	r2, [r2, #0]
100410b6:	721a      	strb	r2, [r3, #8]
    if (sleepMode == SLEEPMODE_NOTIMER) {
100410b8:	9b01      	ldr	r3, [sp, #4]
100410ba:	2b03      	cmp	r3, #3
100410bc:	d12b      	bne.n	10041116 <BlueNRG_Sleep+0x976>
      DeviceConfiguration(FALSE, TRUE);
100410be:	2000      	movs	r0, #0
100410c0:	392b      	subs	r1, #43	; 0x2b
      DeviceConfiguration(FALSE, FALSE);
100410c2:	f000 fee7 	bl	10041e94 <DeviceConfiguration>
    if (SYS_Ctrl_saved & 1) {
100410c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100410c8:	07db      	lsls	r3, r3, #31
100410ca:	d401      	bmi.n	100410d0 <BlueNRG_Sleep+0x930>
100410cc:	f7ff fb96 	bl	100407fc <BlueNRG_Sleep+0x5c>
  reset_reason = SysCtrl_GetWakeupResetReason();
100410d0:	f000 f9e2 	bl	10041498 <SysCtrl_GetWakeupResetReason>
100410d4:	ab68      	add	r3, sp, #416	; 0x1a0
100410d6:	8058      	strh	r0, [r3, #2]
100410d8:	3302      	adds	r3, #2
  if (!((reset_reason &  RESET_BLE_WAKEUP_FROM_TIMER1) || ((__blue_RAM.BlueGlobVar.Config & 8U) == 0))) { //    ((*(volatile uint32_t*)0x200000C0 & 8U) == 0U))) {
100410da:	881b      	ldrh	r3, [r3, #0]
100410dc:	055b      	lsls	r3, r3, #21
100410de:	d415      	bmi.n	1004110c <BlueNRG_Sleep+0x96c>
100410e0:	4b10      	ldr	r3, [pc, #64]	; (10041124 <BlueNRG_Sleep+0x984>)
100410e2:	881b      	ldrh	r3, [r3, #0]
100410e4:	071b      	lsls	r3, r3, #28
100410e6:	d511      	bpl.n	1004110c <BlueNRG_Sleep+0x96c>
    currTimeTHR = BLUE_CTRL->CURRENT_TIME;
100410e8:	2290      	movs	r2, #144	; 0x90
    time_diff = abs(TIME24_DIFF(rfTimeout, currTimeTHR));
100410ea:	4b0f      	ldr	r3, [pc, #60]	; (10041128 <BlueNRG_Sleep+0x988>)
    currTimeTHR = BLUE_CTRL->CURRENT_TIME;
100410ec:	05d2      	lsls	r2, r2, #23
100410ee:	6911      	ldr	r1, [r2, #16]
    time_diff = abs(TIME24_DIFF(rfTimeout, currTimeTHR));
100410f0:	681b      	ldr	r3, [r3, #0]
100410f2:	1a5b      	subs	r3, r3, r1
100410f4:	021b      	lsls	r3, r3, #8
100410f6:	121b      	asrs	r3, r3, #8
100410f8:	17d9      	asrs	r1, r3, #31
100410fa:	185b      	adds	r3, r3, r1
100410fc:	404b      	eors	r3, r1
    if (time_diff <= 32) { 
100410fe:	2b20      	cmp	r3, #32
10041100:	dc04      	bgt.n	1004110c <BlueNRG_Sleep+0x96c>
      currTimeTHR = BLUE_CTRL->CURRENT_TIME + 45;
10041102:	6913      	ldr	r3, [r2, #16]
10041104:	332d      	adds	r3, #45	; 0x2d
      while (BLUE_CTRL->CURRENT_TIME <= currTimeTHR);
10041106:	6911      	ldr	r1, [r2, #16]
10041108:	428b      	cmp	r3, r1
1004110a:	d2fc      	bcs.n	10041106 <BlueNRG_Sleep+0x966>
  AHBUPCONV->COMMAND = 0x15;
1004110c:	2215      	movs	r2, #21
1004110e:	4b07      	ldr	r3, [pc, #28]	; (1004112c <BlueNRG_Sleep+0x98c>)
10041110:	701a      	strb	r2, [r3, #0]
10041112:	f7ff fb73 	bl	100407fc <BlueNRG_Sleep+0x5c>
      DeviceConfiguration(FALSE, FALSE);
10041116:	2100      	movs	r1, #0
10041118:	0008      	movs	r0, r1
1004111a:	e7d2      	b.n	100410c2 <BlueNRG_Sleep+0x922>
1004111c:	e000e1fc 	.word	0xe000e1fc
10041120:	cfffffff 	.word	0xcfffffff
10041124:	200000c0 	.word	0x200000c0
10041128:	20000018 	.word	0x20000018
1004112c:	40c00000 	.word	0x40c00000

10041130 <DMA_Init>:
  assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
  assert_param(IS_DMA_M2M_STATE(DMA_InitStruct->DMA_M2M));

/*--------------------------- DMAy Channelx CCR Configuration -----------------*/
  /* Get the DMAy_Channelx CCR value */
  tmpreg = DMAy_Channelx->CCR;
10041130:	6802      	ldr	r2, [r0, #0]
  /* Clear MEM2MEM, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
  tmpreg &= CCR_CLEAR_MASK;
10041132:	4b0d      	ldr	r3, [pc, #52]	; (10041168 <DMA_Init+0x38>)
{
10041134:	b510      	push	{r4, lr}
  tmpreg &= CCR_CLEAR_MASK;
10041136:	401a      	ands	r2, r3
  /* Set MINC bit according to DMA_MemoryInc value */
  /* Set PSIZE bits according to DMA_PeripheralDataSize value */
  /* Set MSIZE bits according to DMA_MemoryDataSize value */
  /* Set PL bits according to DMA_Priority value */
  /* Set the MEM2MEM bit according to DMA_M2M value */
  tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
10041138:	6a0c      	ldr	r4, [r1, #32]
1004113a:	688b      	ldr	r3, [r1, #8]
1004113c:	4323      	orrs	r3, r4
1004113e:	690c      	ldr	r4, [r1, #16]
10041140:	4323      	orrs	r3, r4
            DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
10041142:	694c      	ldr	r4, [r1, #20]
10041144:	4323      	orrs	r3, r4
10041146:	698c      	ldr	r4, [r1, #24]
10041148:	4323      	orrs	r3, r4
            DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
1004114a:	69cc      	ldr	r4, [r1, #28]
1004114c:	4323      	orrs	r3, r4
1004114e:	6a4c      	ldr	r4, [r1, #36]	; 0x24
10041150:	4323      	orrs	r3, r4
            DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
10041152:	6a8c      	ldr	r4, [r1, #40]	; 0x28
10041154:	4323      	orrs	r3, r4
  tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
10041156:	4313      	orrs	r3, r2

  /* Write to DMAy Channelx CCR */
  DMAy_Channelx->CCR = tmpreg;
10041158:	6003      	str	r3, [r0, #0]

/*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
  /* Write to DMAy Channelx CNDTR */
  DMAy_Channelx->CNDTR = DMA_InitStruct->DMA_BufferSize;
1004115a:	68cb      	ldr	r3, [r1, #12]
1004115c:	6043      	str	r3, [r0, #4]

/*--------------------------- DMAy Channelx CPAR Configuration ----------------*/
  /* Write to DMAy Channelx CPAR */
  DMAy_Channelx->CPAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
1004115e:	680b      	ldr	r3, [r1, #0]
10041160:	6083      	str	r3, [r0, #8]

/*--------------------------- DMAy Channelx CMAR Configuration ----------------*/
  /* Write to DMAy Channelx CMAR */
  DMAy_Channelx->CMAR = DMA_InitStruct->DMA_MemoryBaseAddr;
10041162:	684b      	ldr	r3, [r1, #4]
10041164:	60c3      	str	r3, [r0, #12]
}
10041166:	bd10      	pop	{r4, pc}
10041168:	ffff800f 	.word	0xffff800f

1004116c <DMA_StructInit>:
  */
void DMA_StructInit(DMA_InitType* DMA_InitStruct)
{
/*-------------- Reset DMA init structure parameters values ------------------*/
  /* Initialize the DMA_PeripheralBaseAddr member */
  DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
1004116c:	2300      	movs	r3, #0
1004116e:	6003      	str	r3, [r0, #0]
  /* Initialize the DMA_MemoryBaseAddr member */
  DMA_InitStruct->DMA_MemoryBaseAddr = 0;
10041170:	6043      	str	r3, [r0, #4]
  /* Initialize the DMA_DIR member */
  DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
10041172:	6083      	str	r3, [r0, #8]
  /* Initialize the DMA_BufferSize member */
  DMA_InitStruct->DMA_BufferSize = 0;
10041174:	60c3      	str	r3, [r0, #12]
  /* Initialize the DMA_PeripheralInc member */
  DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
10041176:	6103      	str	r3, [r0, #16]
  /* Initialize the DMA_MemoryInc member */
  DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
10041178:	6143      	str	r3, [r0, #20]
  /* Initialize the DMA_PeripheralDataSize member */
  DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
1004117a:	6183      	str	r3, [r0, #24]
  /* Initialize the DMA_MemoryDataSize member */
  DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
1004117c:	61c3      	str	r3, [r0, #28]
  /* Initialize the DMA_Mode member */
  DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
1004117e:	6203      	str	r3, [r0, #32]
  /* Initialize the DMA_Priority member */
  DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
10041180:	6243      	str	r3, [r0, #36]	; 0x24
  /* Initialize the DMA_M2M member */
  DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
10041182:	6283      	str	r3, [r0, #40]	; 0x28
}
10041184:	4770      	bx	lr

10041186 <DMA_Cmd>:
  * @param  NewState: new state of the DMAy Channelx. 
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void DMA_Cmd(DMA_CH_Type* DMAy_Channelx, FunctionalState NewState)
{
10041186:	2301      	movs	r3, #1
  assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE) {
    /* Enable the selected DMAy Channelx */
    DMAy_Channelx->CCR_b.EN = SET;
10041188:	6802      	ldr	r2, [r0, #0]
  if (NewState != DISABLE) {
1004118a:	2900      	cmp	r1, #0
1004118c:	d002      	beq.n	10041194 <DMA_Cmd+0xe>
    DMAy_Channelx->CCR_b.EN = SET;
1004118e:	4313      	orrs	r3, r2
10041190:	6003      	str	r3, [r0, #0]
  }
  else {
    /* Disable the selected DMAy Channelx */
    DMAy_Channelx->CCR_b.EN = RESET;
  }
}
10041192:	4770      	bx	lr
    DMAy_Channelx->CCR_b.EN = RESET;
10041194:	439a      	bics	r2, r3
10041196:	6002      	str	r2, [r0, #0]
}
10041198:	e7fb      	b.n	10041192 <DMA_Cmd+0xc>

1004119a <DMA_FlagConfig>:
  assert_param(IS_DMA_CONFIG_FLAG(DMA_Flag));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE) {
    /* Enable the selected DMA interrupts */
    SET_BIT(DMAy_Channelx->CCR, DMA_Flag);
1004119a:	6803      	ldr	r3, [r0, #0]
  if (NewState != DISABLE) {
1004119c:	2a00      	cmp	r2, #0
1004119e:	d002      	beq.n	100411a6 <DMA_FlagConfig+0xc>
    SET_BIT(DMAy_Channelx->CCR, DMA_Flag);
100411a0:	4319      	orrs	r1, r3
100411a2:	6001      	str	r1, [r0, #0]
  }
  else {
    /* Disable the selected DMA interrupts */
    CLEAR_BIT(DMAy_Channelx->CCR, DMA_Flag);
  }
}
100411a4:	4770      	bx	lr
    CLEAR_BIT(DMAy_Channelx->CCR, DMA_Flag);
100411a6:	438b      	bics	r3, r1
100411a8:	6003      	str	r3, [r0, #0]
}
100411aa:	e7fb      	b.n	100411a4 <DMA_FlagConfig+0xa>

100411ac <DMA_GetFlagStatus>:

  /* Check the parameters */
  assert_param(IS_DMA_CH_FLAG(DMA_Flag));

  /* Get DMA ISR register value */
  tmpreg = DMA->ISR;
100411ac:	23a0      	movs	r3, #160	; 0xa0
100411ae:	061b      	lsls	r3, r3, #24
100411b0:	681b      	ldr	r3, [r3, #0]

  /* Check the status of the specified DMA flag */
  if ((tmpreg & DMA_Flag) != (uint32_t)RESET)
100411b2:	4018      	ands	r0, r3
100411b4:	1e43      	subs	r3, r0, #1
100411b6:	4198      	sbcs	r0, r3
100411b8:	b2c0      	uxtb	r0, r0
  {
    /* DMA_Flag is reset */
    return RESET;
  }
  
}
100411ba:	4770      	bx	lr

100411bc <DMA_ClearFlag>:
{
  /* Check the parameters */
  assert_param(IS_DMA_CH_FLAG(DMA_Flag));

  /* Clear the selected DMA flags */
  DMA->IFCR = DMA_Flag;
100411bc:	23a0      	movs	r3, #160	; 0xa0
100411be:	061b      	lsls	r3, r3, #24
100411c0:	6058      	str	r0, [r3, #4]

}
100411c2:	4770      	bx	lr

100411c4 <FLASH_WaitCmdDone>:
* @retval None
*/
void FLASH_WaitCmdDone(void)
{
  /* Waits for Command Done */
  while(FLASH->IRQRAW_b.CMDDONE != SET);
100411c4:	4a02      	ldr	r2, [pc, #8]	; (100411d0 <FLASH_WaitCmdDone+0xc>)
100411c6:	8a13      	ldrh	r3, [r2, #16]
100411c8:	07db      	lsls	r3, r3, #31
100411ca:	d5fc      	bpl.n	100411c6 <FLASH_WaitCmdDone+0x2>
}
100411cc:	4770      	bx	lr
100411ce:	46c0      	nop			; (mov r8, r8)
100411d0:	40100000 	.word	0x40100000

100411d4 <FLASH_ErasePage>:
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
100411d4:	4b08      	ldr	r3, [pc, #32]	; (100411f8 <FLASH_ErasePage+0x24>)
{
100411d6:	b510      	push	{r4, lr}
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
100411d8:	681a      	ldr	r2, [r3, #0]
100411da:	4b08      	ldr	r3, [pc, #32]	; (100411fc <FLASH_ErasePage+0x28>)
100411dc:	429a      	cmp	r2, r3
100411de:	d109      	bne.n	100411f4 <FLASH_ErasePage+0x20>
  FLASH->IRQSTAT = 0x3F;
100411e0:	223f      	movs	r2, #63	; 0x3f
100411e2:	4b07      	ldr	r3, [pc, #28]	; (10041200 <FLASH_ErasePage+0x2c>)
  FLASH->ADDRESS = pageAddress;
100411e4:	0640      	lsls	r0, r0, #25
  FLASH->IRQSTAT = 0x3F;
100411e6:	811a      	strh	r2, [r3, #8]
  FLASH->ADDRESS = pageAddress;
100411e8:	0c00      	lsrs	r0, r0, #16
  FLASH->COMMAND = FLASH_ERASE;
100411ea:	3a2e      	subs	r2, #46	; 0x2e
  FLASH->ADDRESS = pageAddress;
100411ec:	6198      	str	r0, [r3, #24]
  FLASH->COMMAND = FLASH_ERASE;
100411ee:	801a      	strh	r2, [r3, #0]
  FLASH_WaitCmdDone();
100411f0:	f7ff ffe8 	bl	100411c4 <FLASH_WaitCmdDone>
}
100411f4:	bd10      	pop	{r4, pc}
100411f6:	46c0      	nop			; (mov r8, r8)
100411f8:	20000014 	.word	0x20000014
100411fc:	fcecbccc 	.word	0xfcecbccc
10041200:	40100000 	.word	0x40100000

10041204 <FLASH_ProgramWord>:
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
10041204:	4b08      	ldr	r3, [pc, #32]	; (10041228 <FLASH_ProgramWord+0x24>)
{
10041206:	b510      	push	{r4, lr}
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
10041208:	681a      	ldr	r2, [r3, #0]
1004120a:	4b08      	ldr	r3, [pc, #32]	; (1004122c <FLASH_ProgramWord+0x28>)
1004120c:	429a      	cmp	r2, r3
1004120e:	d109      	bne.n	10041224 <FLASH_ProgramWord+0x20>
  FLASH->IRQSTAT = 0x3F;
10041210:	223f      	movs	r2, #63	; 0x3f
10041212:	4b07      	ldr	r3, [pc, #28]	; (10041230 <FLASH_ProgramWord+0x2c>)
  FLASH->ADDRESS = Address>>2;
10041214:	0880      	lsrs	r0, r0, #2
  FLASH->IRQSTAT = 0x3F;
10041216:	811a      	strh	r2, [r3, #8]
  FLASH->COMMAND = FLASH_WRITE;
10041218:	3a0c      	subs	r2, #12
  FLASH->ADDRESS = Address>>2;
1004121a:	6198      	str	r0, [r3, #24]
  FLASH->DATA0 = Data;
1004121c:	6419      	str	r1, [r3, #64]	; 0x40
  FLASH->COMMAND = FLASH_WRITE;
1004121e:	801a      	strh	r2, [r3, #0]
  FLASH_WaitCmdDone();
10041220:	f7ff ffd0 	bl	100411c4 <FLASH_WaitCmdDone>
}
10041224:	bd10      	pop	{r4, pc}
10041226:	46c0      	nop			; (mov r8, r8)
10041228:	20000014 	.word	0x20000014
1004122c:	fcecbccc 	.word	0xfcecbccc
10041230:	40100000 	.word	0x40100000

10041234 <GPIO_Init>:
* @param  GPIO_InitStruct: pointer to a @ref GPIO_InitType structure that
*         contains the configuration information for the specified GPIO peripheral.
* @retval None
*/
void GPIO_Init(GPIO_InitType* GPIO_InitStruct)
{
10041234:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10041236:	9001      	str	r0, [sp, #4]
  
  /* IO12 and IO13 cannot be programmed in output mode */
  assert_param( ((GPIO_InitStruct->GPIO_Pin & GPIO_Pin_12) != GPIO_Pin_12) || (GPIO_InitStruct->GPIO_Mode != GPIO_Output));
  assert_param( ((GPIO_InitStruct->GPIO_Pin & GPIO_Pin_13) != GPIO_Pin_13) || (GPIO_InitStruct->GPIO_Mode != GPIO_Output));
  
  gpio_mode = GPIO_InitStruct->GPIO_Mode;
10041238:	7901      	ldrb	r1, [r0, #4]
1004123a:	6804      	ldr	r4, [r0, #0]
  
  /* Configure the IO mode */
  if(GPIO_InitStruct->GPIO_Mode == GPIO_Input) {
1004123c:	2900      	cmp	r1, #0
1004123e:	d131      	bne.n	100412a4 <GPIO_Init+0x70>
    CLEAR_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
10041240:	2280      	movs	r2, #128	; 0x80
10041242:	05d2      	lsls	r2, r2, #23
10041244:	6853      	ldr	r3, [r2, #4]
10041246:	43a3      	bics	r3, r4
10041248:	6053      	str	r3, [r2, #4]
    gpio_mode = GPIO_Input;
    SET_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
  }
  
  for(uint8_t i = 0; i < GPIO_PIN_COUNT; i++) {
    tmp = (uint8_t)((GPIO_InitStruct->GPIO_Pin>>i) & 0x01);
1004124a:	9b01      	ldr	r3, [sp, #4]
1004124c:	2520      	movs	r5, #32
1004124e:	681e      	ldr	r6, [r3, #0]
10041250:	2380      	movs	r3, #128	; 0x80
10041252:	2200      	movs	r2, #0
10041254:	426d      	negs	r5, r5
10041256:	05db      	lsls	r3, r3, #23
10041258:	0034      	movs	r4, r6
    if(tmp!=0) {
1004125a:	2001      	movs	r0, #1
    tmp = (uint8_t)((GPIO_InitStruct->GPIO_Pin>>i) & 0x01);
1004125c:	40d4      	lsrs	r4, r2
    if(tmp!=0) {
1004125e:	4204      	tst	r4, r0
10041260:	d00b      	beq.n	1004127a <GPIO_Init+0x46>
10041262:	b2d4      	uxtb	r4, r2

      if(i < 8) {
10041264:	2a07      	cmp	r2, #7
10041266:	d826      	bhi.n	100412b6 <GPIO_Init+0x82>
10041268:	0097      	lsls	r7, r2, #2
        MODIFY_REG(GPIO->MODE0, (0xF<<(i*4)), (gpio_mode << (i*4)) );
1004126a:	300e      	adds	r0, #14
1004126c:	40b8      	lsls	r0, r7
1004126e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
10041270:	4384      	bics	r4, r0
10041272:	0008      	movs	r0, r1
10041274:	40b8      	lsls	r0, r7
10041276:	4304      	orrs	r4, r0
10041278:	62dc      	str	r4, [r3, #44]	; 0x2c
1004127a:	3201      	adds	r2, #1
1004127c:	3504      	adds	r5, #4
  for(uint8_t i = 0; i < GPIO_PIN_COUNT; i++) {
1004127e:	2a1a      	cmp	r2, #26
10041280:	d1ea      	bne.n	10041258 <GPIO_Init+0x24>
#endif
    }
  }

  /* Set the current mode */
  if(GPIO_InitStruct->GPIO_HighPwr == ENABLE) {
10041282:	9b01      	ldr	r3, [sp, #4]
10041284:	795a      	ldrb	r2, [r3, #5]
10041286:	2380      	movs	r3, #128	; 0x80
10041288:	05db      	lsls	r3, r3, #23
1004128a:	2a01      	cmp	r2, #1
1004128c:	d13a      	bne.n	10041304 <GPIO_Init+0xd0>
    SET_BIT(GPIO->DS, GPIO_InitStruct->GPIO_Pin);
1004128e:	68da      	ldr	r2, [r3, #12]
10041290:	4332      	orrs	r2, r6
  }
  else {
    CLEAR_BIT(GPIO->DS, GPIO_InitStruct->GPIO_Pin);
10041292:	60da      	str	r2, [r3, #12]
  }

  /* Set the pull on IO */
  if(GPIO_InitStruct->GPIO_Pull == ENABLE) {
10041294:	9a01      	ldr	r2, [sp, #4]
10041296:	7992      	ldrb	r2, [r2, #6]
10041298:	2a01      	cmp	r2, #1
1004129a:	d136      	bne.n	1004130a <GPIO_Init+0xd6>
    SET_BIT(GPIO->PE, GPIO_InitStruct->GPIO_Pin);
1004129c:	689a      	ldr	r2, [r3, #8]
1004129e:	4316      	orrs	r6, r2
100412a0:	609e      	str	r6, [r3, #8]
  }
  else {
    CLEAR_BIT(GPIO->PE, GPIO_InitStruct->GPIO_Pin);
  }

}
100412a2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
  else if(GPIO_InitStruct->GPIO_Mode == GPIO_Output) {
100412a4:	2906      	cmp	r1, #6
100412a6:	d1d0      	bne.n	1004124a <GPIO_Init+0x16>
    SET_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
100412a8:	2280      	movs	r2, #128	; 0x80
100412aa:	05d2      	lsls	r2, r2, #23
100412ac:	6853      	ldr	r3, [r2, #4]
    gpio_mode = GPIO_Input;
100412ae:	2100      	movs	r1, #0
    SET_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
100412b0:	4323      	orrs	r3, r4
100412b2:	6053      	str	r3, [r2, #4]
100412b4:	e7c9      	b.n	1004124a <GPIO_Init+0x16>
      else if((i > 7) && (i < 16)) {
100412b6:	0027      	movs	r7, r4
100412b8:	3f08      	subs	r7, #8
100412ba:	2f07      	cmp	r7, #7
100412bc:	d808      	bhi.n	100412d0 <GPIO_Init+0x9c>
        MODIFY_REG(GPIO->MODE1, (0xF<<((i-8)*4)), (gpio_mode << ((i-8)*4)) );
100412be:	270f      	movs	r7, #15
100412c0:	40af      	lsls	r7, r5
100412c2:	6b1c      	ldr	r4, [r3, #48]	; 0x30
100412c4:	43bc      	bics	r4, r7
100412c6:	000f      	movs	r7, r1
100412c8:	40af      	lsls	r7, r5
100412ca:	433c      	orrs	r4, r7
100412cc:	631c      	str	r4, [r3, #48]	; 0x30
100412ce:	e7d4      	b.n	1004127a <GPIO_Init+0x46>
      else if((i > 15) && (i < 24)) {
100412d0:	3c10      	subs	r4, #16
100412d2:	2c07      	cmp	r4, #7
100412d4:	d80a      	bhi.n	100412ec <GPIO_Init+0xb8>
100412d6:	002f      	movs	r7, r5
        MODIFY_REG(GPIO->MODE2, (0xF<<((i-16)*4)), (gpio_mode << ((i-16)*4)) );
100412d8:	200f      	movs	r0, #15
100412da:	3f20      	subs	r7, #32
100412dc:	40b8      	lsls	r0, r7
100412de:	6b5c      	ldr	r4, [r3, #52]	; 0x34
100412e0:	4384      	bics	r4, r0
100412e2:	0008      	movs	r0, r1
100412e4:	40b8      	lsls	r0, r7
100412e6:	4304      	orrs	r4, r0
100412e8:	635c      	str	r4, [r3, #52]	; 0x34
100412ea:	e7c6      	b.n	1004127a <GPIO_Init+0x46>
100412ec:	002f      	movs	r7, r5
        MODIFY_REG(GPIO->MODE3, (0xF<<((i-24)*4)), (gpio_mode << ((i-24)*4)) );
100412ee:	200f      	movs	r0, #15
100412f0:	3f40      	subs	r7, #64	; 0x40
100412f2:	40b8      	lsls	r0, r7
100412f4:	8f1c      	ldrh	r4, [r3, #56]	; 0x38
100412f6:	4384      	bics	r4, r0
100412f8:	0008      	movs	r0, r1
100412fa:	40b8      	lsls	r0, r7
100412fc:	4304      	orrs	r4, r0
100412fe:	b2a4      	uxth	r4, r4
10041300:	871c      	strh	r4, [r3, #56]	; 0x38
10041302:	e7ba      	b.n	1004127a <GPIO_Init+0x46>
    CLEAR_BIT(GPIO->DS, GPIO_InitStruct->GPIO_Pin);
10041304:	68da      	ldr	r2, [r3, #12]
10041306:	43b2      	bics	r2, r6
10041308:	e7c3      	b.n	10041292 <GPIO_Init+0x5e>
    CLEAR_BIT(GPIO->PE, GPIO_InitStruct->GPIO_Pin);
1004130a:	689a      	ldr	r2, [r3, #8]
1004130c:	43b2      	bics	r2, r6
1004130e:	609a      	str	r2, [r3, #8]
}
10041310:	e7c7      	b.n	100412a2 <GPIO_Init+0x6e>

10041312 <GPIO_StructInit>:
* @retval None
*/
void GPIO_StructInit(GPIO_InitType* GPIO_InitStruct)
{
  /* Reset GPIO init structure parameters values */
  GPIO_InitStruct->GPIO_Pin  = 0x00000000;
10041312:	2300      	movs	r3, #0
10041314:	6003      	str	r3, [r0, #0]
  GPIO_InitStruct->GPIO_Mode = GPIO_Input;
10041316:	7103      	strb	r3, [r0, #4]
  GPIO_InitStruct->GPIO_Pull = DISABLE;
10041318:	7183      	strb	r3, [r0, #6]
  GPIO_InitStruct->GPIO_HighPwr = DISABLE;
1004131a:	7143      	strb	r3, [r0, #5]
}
1004131c:	4770      	bx	lr

1004131e <rev_memcmp.constprop.0>:
*         bufferSize: key size
* @retval check result 
*/
static int rev_memcmp(uint8_t *a, const uint8_t *b, uint8_t  bufferSize)
{
    uint_fast8_t i = bufferSize;
1004131e:	2320      	movs	r3, #32
static int rev_memcmp(uint8_t *a, const uint8_t *b, uint8_t  bufferSize)
10041320:	b510      	push	{r4, lr}
    int retval = 0;

    do
    {
        i--;
10041322:	3b01      	subs	r3, #1
        retval = (int)a[i] - (int)b[i];
10041324:	5cc2      	ldrb	r2, [r0, r3]
10041326:	5ccc      	ldrb	r4, [r1, r3]
10041328:	1b12      	subs	r2, r2, r4
        if (retval !=0)
1004132a:	d101      	bne.n	10041330 <rev_memcmp.constprop.0+0x12>
        {
            break;
        }
    } while (i != 0U);
1004132c:	2b00      	cmp	r3, #0
1004132e:	d1f8      	bne.n	10041322 <rev_memcmp.constprop.0+0x4>

   return retval;
}
10041330:	0010      	movs	r0, r2
10041332:	bd10      	pop	{r4, pc}

10041334 <PKA_Reset>:
  PKA->CSR_b.SFT_RST = SET;
10041334:	23c0      	movs	r3, #192	; 0xc0
10041336:	2180      	movs	r1, #128	; 0x80
10041338:	061b      	lsls	r3, r3, #24
1004133a:	681a      	ldr	r2, [r3, #0]
1004133c:	430a      	orrs	r2, r1
1004133e:	601a      	str	r2, [r3, #0]
  PKA->CSR_b.SFT_RST = RESET;
10041340:	681a      	ldr	r2, [r3, #0]
10041342:	438a      	bics	r2, r1
10041344:	601a      	str	r2, [r3, #0]
}
10041346:	4770      	bx	lr

10041348 <PKA_StartProcessing>:
  PKA->CSR_b.GO = SET;
10041348:	23c0      	movs	r3, #192	; 0xc0
1004134a:	2101      	movs	r1, #1
1004134c:	061b      	lsls	r3, r3, #24
1004134e:	681a      	ldr	r2, [r3, #0]
10041350:	430a      	orrs	r2, r1
10041352:	601a      	str	r2, [r3, #0]
  PKA->CSR_b.GO = RESET;
10041354:	681a      	ldr	r2, [r3, #0]
10041356:	438a      	bics	r2, r1
10041358:	601a      	str	r2, [r3, #0]
}
1004135a:	4770      	bx	lr

1004135c <PKA_GetProcessStatus>:
  return (FlagStatus)(PKA->CSR_b.READY);
1004135c:	23c0      	movs	r3, #192	; 0xc0
1004135e:	061b      	lsls	r3, r3, #24
10041360:	6818      	ldr	r0, [r3, #0]
10041362:	0780      	lsls	r0, r0, #30
10041364:	0fc0      	lsrs	r0, r0, #31
}
10041366:	4770      	bx	lr

10041368 <PKA_VerifyProcess>:
  if(PKA_SetDataError != 0x00) 
10041368:	4b05      	ldr	r3, [pc, #20]	; (10041380 <PKA_VerifyProcess+0x18>)
1004136a:	2001      	movs	r0, #1
1004136c:	781b      	ldrb	r3, [r3, #0]
1004136e:	2b00      	cmp	r3, #0
10041370:	d104      	bne.n	1004137c <PKA_VerifyProcess+0x14>
  errorCode = *(uint32_t *)(PKA_RAM_ECC_ADDR_KP_ERROR);
10041372:	4b04      	ldr	r3, [pc, #16]	; (10041384 <PKA_VerifyProcess+0x1c>)
  if (errorCode == 0) {
10041374:	6818      	ldr	r0, [r3, #0]
10041376:	1e43      	subs	r3, r0, #1
10041378:	4198      	sbcs	r0, r3
1004137a:	b2c0      	uxtb	r0, r0
}
1004137c:	4770      	bx	lr
1004137e:	46c0      	nop			; (mov r8, r8)
10041380:	20000320 	.word	0x20000320
10041384:	c0000400 	.word	0xc0000400

10041388 <PKA_SetData>:
*         @arg PKA_DATA_PCX is the point X coordinate
*         @arg PKA_DATA_PCY is the point Y coordinate
* @retval ErrorStatus
*/
ErrorStatus PKA_SetData(uint8_t dataType, uint32_t* srcData)
{
10041388:	b570      	push	{r4, r5, r6, lr}
  const uint8_t P256_P_LE[32] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xff,0xff,0xff,0xff}; 
1004138a:	4c29      	ldr	r4, [pc, #164]	; (10041430 <PKA_SetData+0xa8>)
{
1004138c:	b090      	sub	sp, #64	; 0x40
1004138e:	0006      	movs	r6, r0
  const uint8_t P256_P_LE[32] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xff,0xff,0xff,0xff}; 
10041390:	2220      	movs	r2, #32
{
10041392:	000d      	movs	r5, r1
  const uint8_t P256_P_LE[32] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xff,0xff,0xff,0xff}; 
10041394:	4668      	mov	r0, sp
10041396:	0021      	movs	r1, r4
10041398:	f005 fa05 	bl	100467a6 <memcpy>
  const uint8_t BLE_P256_ABELIAN_ORDER_R_LE[32] = {0x51,0x25,0x63,0xFC,0xC2,0xCA,0xB9,0xF3,0x84,0x9E,0x17,0xA7,0xAD,0xFA,0xE6,0xBC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF};
1004139c:	0021      	movs	r1, r4
1004139e:	2220      	movs	r2, #32
100413a0:	3120      	adds	r1, #32
100413a2:	a808      	add	r0, sp, #32
100413a4:	f005 f9ff 	bl	100467a6 <memcpy>
  uint8_t idx;
  
  /* Check the parameters */
  assert_param(IS_PKA_CMD(dataType));
  
  if (dataType == PKA_DATA_SK) {
100413a8:	2e01      	cmp	r6, #1
100413aa:	d11d      	bne.n	100413e8 <PKA_SetData+0x60>
    if (rev_memcmp((uint8_t *) srcData, (uint8_t *)BLE_P256_ABELIAN_ORDER_R_LE, 32) >= 0) {
100413ac:	a908      	add	r1, sp, #32
100413ae:	0028      	movs	r0, r5
100413b0:	f7ff ffb5 	bl	1004131e <rev_memcmp.constprop.0>
100413b4:	4b1f      	ldr	r3, [pc, #124]	; (10041434 <PKA_SetData+0xac>)
100413b6:	2204      	movs	r2, #4
      PKA_SetDataError |= 0x04;
100413b8:	7819      	ldrb	r1, [r3, #0]
    if (rev_memcmp((uint8_t *) srcData, (uint8_t *)BLE_P256_ABELIAN_ORDER_R_LE, 32) >= 0) {
100413ba:	2800      	cmp	r0, #0
100413bc:	db05      	blt.n	100413ca <PKA_SetData+0x42>
      return ERROR;
100413be:	0034      	movs	r4, r6
      PKA_SetDataError |= 0x04;
100413c0:	430a      	orrs	r2, r1
100413c2:	701a      	strb	r2, [r3, #0]
  
  /* A 9th word of zeros must be added */
  *(uint32_t *)(StartAddress + 32UL) = 0x00000000;
  
  return SUCCESS;
}
100413c4:	0020      	movs	r0, r4
100413c6:	b010      	add	sp, #64	; 0x40
100413c8:	bd70      	pop	{r4, r5, r6, pc}
      PKA_SetDataError &= ~0x04;
100413ca:	4391      	bics	r1, r2
    StartAddress = PKA_RAM_ECC_ADDR_K;
100413cc:	4a1a      	ldr	r2, [pc, #104]	; (10041438 <PKA_SetData+0xb0>)
      PKA_SetDataError &= ~0x04;
100413ce:	7019      	strb	r1, [r3, #0]
100413d0:	0029      	movs	r1, r5
    StartAddress = PKA_RAM_ECC_ADDR_PY;
100413d2:	002b      	movs	r3, r5
100413d4:	3120      	adds	r1, #32
    *(uint32_t *)(StartAddress + 4*idx) = srcData[idx];
100413d6:	681c      	ldr	r4, [r3, #0]
100413d8:	1b58      	subs	r0, r3, r5
100413da:	3304      	adds	r3, #4
100413dc:	5084      	str	r4, [r0, r2]
  for (idx = 0; idx<8; idx++)
100413de:	428b      	cmp	r3, r1
100413e0:	d1f9      	bne.n	100413d6 <PKA_SetData+0x4e>
  *(uint32_t *)(StartAddress + 32UL) = 0x00000000;
100413e2:	2400      	movs	r4, #0
100413e4:	6214      	str	r4, [r2, #32]
  return SUCCESS;
100413e6:	e7ed      	b.n	100413c4 <PKA_SetData+0x3c>
  else if (dataType == PKA_DATA_PCX) {
100413e8:	2e02      	cmp	r6, #2
100413ea:	d10f      	bne.n	1004140c <PKA_SetData+0x84>
    if (rev_memcmp((uint8_t *) srcData, (uint8_t *)P256_P_LE, 32) >= 0) {
100413ec:	4669      	mov	r1, sp
100413ee:	0028      	movs	r0, r5
100413f0:	f7ff ff95 	bl	1004131e <rev_memcmp.constprop.0>
100413f4:	4b0f      	ldr	r3, [pc, #60]	; (10041434 <PKA_SetData+0xac>)
100413f6:	2401      	movs	r4, #1
      PKA_SetDataError |= 0x01;
100413f8:	781a      	ldrb	r2, [r3, #0]
    if (rev_memcmp((uint8_t *) srcData, (uint8_t *)P256_P_LE, 32) >= 0) {
100413fa:	2800      	cmp	r0, #0
100413fc:	db02      	blt.n	10041404 <PKA_SetData+0x7c>
      PKA_SetDataError |= 0x01;
100413fe:	4322      	orrs	r2, r4
      PKA_SetDataError |= 0x02;
10041400:	701a      	strb	r2, [r3, #0]
      return ERROR;
10041402:	e7df      	b.n	100413c4 <PKA_SetData+0x3c>
      PKA_SetDataError &= ~0x01;
10041404:	43a2      	bics	r2, r4
10041406:	701a      	strb	r2, [r3, #0]
    StartAddress = PKA_RAM_ECC_ADDR_PX;
10041408:	4a0c      	ldr	r2, [pc, #48]	; (1004143c <PKA_SetData+0xb4>)
1004140a:	e7e1      	b.n	100413d0 <PKA_SetData+0x48>
    return ERROR;
1004140c:	2401      	movs	r4, #1
  else if (dataType == PKA_DATA_PCY) {
1004140e:	2e03      	cmp	r6, #3
10041410:	d1d8      	bne.n	100413c4 <PKA_SetData+0x3c>
    if (rev_memcmp((uint8_t *) srcData, (uint8_t *)P256_P_LE, 32) >= 0) {
10041412:	4669      	mov	r1, sp
10041414:	0028      	movs	r0, r5
10041416:	f7ff ff82 	bl	1004131e <rev_memcmp.constprop.0>
1004141a:	4b06      	ldr	r3, [pc, #24]	; (10041434 <PKA_SetData+0xac>)
1004141c:	2202      	movs	r2, #2
      PKA_SetDataError |= 0x02;
1004141e:	7819      	ldrb	r1, [r3, #0]
    if (rev_memcmp((uint8_t *) srcData, (uint8_t *)P256_P_LE, 32) >= 0) {
10041420:	2800      	cmp	r0, #0
10041422:	db01      	blt.n	10041428 <PKA_SetData+0xa0>
      PKA_SetDataError |= 0x02;
10041424:	430a      	orrs	r2, r1
10041426:	e7eb      	b.n	10041400 <PKA_SetData+0x78>
      PKA_SetDataError &= ~0x02;
10041428:	4391      	bics	r1, r2
1004142a:	7019      	strb	r1, [r3, #0]
    StartAddress = PKA_RAM_ECC_ADDR_PY;
1004142c:	4a04      	ldr	r2, [pc, #16]	; (10041440 <PKA_SetData+0xb8>)
1004142e:	e7cf      	b.n	100413d0 <PKA_SetData+0x48>
10041430:	1005f914 	.word	0x1005f914
10041434:	20000320 	.word	0x20000320
10041438:	c000046c 	.word	0xc000046c
1004143c:	c0000490 	.word	0xc0000490
10041440:	c00004b4 	.word	0xc00004b4

10041444 <PKA_GetData>:
*         @arg PKA_DATA_PCX is the point X coordinate
*         @arg PKA_DATA_PCY is the point Y coordinate
* @retval ErrorStatus
*/
ErrorStatus PKA_GetData(uint8_t dataType, uint8_t* dataTarget)
{
10041444:	0003      	movs	r3, r0
  uint32_t StartAddress;
  
  /* Check the parameters */
  assert_param(IS_PKA_CMD(dataType));
  
  if (dataType == PKA_DATA_SK)
10041446:	2801      	cmp	r0, #1
10041448:	d00f      	beq.n	1004146a <PKA_GetData+0x26>
    StartAddress = PKA_RAM_ECC_ADDR_K;
  else if (dataType == PKA_DATA_PCX)
1004144a:	2802      	cmp	r0, #2
1004144c:	d00f      	beq.n	1004146e <PKA_GetData+0x2a>
    StartAddress = PKA_RAM_ECC_ADDR_PX;
  else if (dataType == PKA_DATA_PCY)
    StartAddress = PKA_RAM_ECC_ADDR_PY;
  else return ERROR;
1004144e:	2001      	movs	r0, #1
  else if (dataType == PKA_DATA_PCY)
10041450:	2b03      	cmp	r3, #3
10041452:	d109      	bne.n	10041468 <PKA_GetData+0x24>
    StartAddress = PKA_RAM_ECC_ADDR_PY;
10041454:	4b07      	ldr	r3, [pc, #28]	; (10041474 <PKA_GetData+0x30>)
10041456:	001a      	movs	r2, r3
  
  /* Read the data to target PKA RAM address. */
  for(uint8_t i=0;i<32;i++) {
    dataTarget[i] = ((uint8_t *)StartAddress)[i];
10041458:	1ac9      	subs	r1, r1, r3
1004145a:	3220      	adds	r2, #32
1004145c:	7818      	ldrb	r0, [r3, #0]
1004145e:	54c8      	strb	r0, [r1, r3]
10041460:	3301      	adds	r3, #1
  for(uint8_t i=0;i<32;i++) {
10041462:	4293      	cmp	r3, r2
10041464:	d1fa      	bne.n	1004145c <PKA_GetData+0x18>
  }
  
  return SUCCESS;
10041466:	2000      	movs	r0, #0
}
10041468:	4770      	bx	lr
    StartAddress = PKA_RAM_ECC_ADDR_K;
1004146a:	4b03      	ldr	r3, [pc, #12]	; (10041478 <PKA_GetData+0x34>)
1004146c:	e7f3      	b.n	10041456 <PKA_GetData+0x12>
    StartAddress = PKA_RAM_ECC_ADDR_PX;
1004146e:	4b03      	ldr	r3, [pc, #12]	; (1004147c <PKA_GetData+0x38>)
10041470:	e7f1      	b.n	10041456 <PKA_GetData+0x12>
10041472:	46c0      	nop			; (mov r8, r8)
10041474:	c00004b4 	.word	0xc00004b4
10041478:	c000046c 	.word	0xc000046c
1004147c:	c0000490 	.word	0xc0000490

10041480 <SysCtrl_PeripheralClockCmd>:
  * @param NewState: New state of the peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void SysCtrl_PeripheralClockCmd(uint32_t PeriphClock, FunctionalState NewState)
{
10041480:	4b04      	ldr	r3, [pc, #16]	; (10041494 <SysCtrl_PeripheralClockCmd+0x14>)
  /* Check the parameters */
  assert_param(IS_CLOCK_PERIPH(PeriphClock));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState == ENABLE) {
    SET_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
10041482:	6a1a      	ldr	r2, [r3, #32]
  if (NewState == ENABLE) {
10041484:	2901      	cmp	r1, #1
10041486:	d102      	bne.n	1004148e <SysCtrl_PeripheralClockCmd+0xe>
    SET_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
10041488:	4310      	orrs	r0, r2
1004148a:	6218      	str	r0, [r3, #32]
  }
  else {
    CLEAR_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
  }
}
1004148c:	4770      	bx	lr
    CLEAR_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
1004148e:	4382      	bics	r2, r0
10041490:	621a      	str	r2, [r3, #32]
}
10041492:	e7fb      	b.n	1004148c <SysCtrl_PeripheralClockCmd+0xc>
10041494:	40900000 	.word	0x40900000

10041498 <SysCtrl_GetWakeupResetReason>:
uint16_t SysCtrl_GetWakeupResetReason(void)
{
  uint32_t tmpSoc, tmpBle;
  uint16_t wakeup_src;
  
  tmpSoc = CKGEN_SOC->REASON_RST;
10041498:	4b27      	ldr	r3, [pc, #156]	; (10041538 <SysCtrl_GetWakeupResetReason+0xa0>)
1004149a:	7a1a      	ldrb	r2, [r3, #8]
  tmpBle = CKGEN_BLE->REASON_RST;
1004149c:	4b27      	ldr	r3, [pc, #156]	; (1004153c <SysCtrl_GetWakeupResetReason+0xa4>)
  tmpSoc = CKGEN_SOC->REASON_RST;
1004149e:	b2d2      	uxtb	r2, r2
  tmpBle = CKGEN_BLE->REASON_RST;
100414a0:	891b      	ldrh	r3, [r3, #8]
100414a2:	b29b      	uxth	r3, r3

  wakeup_src = RESET_NONE;

  if ((tmpSoc == 0) &&
100414a4:	2a00      	cmp	r2, #0
100414a6:	d13c      	bne.n	10041522 <SysCtrl_GetWakeupResetReason+0x8a>
100414a8:	2009      	movs	r0, #9
100414aa:	4018      	ands	r0, r3
  wakeup_src = RESET_NONE;
100414ac:	3809      	subs	r0, #9
100414ae:	4242      	negs	r2, r0
100414b0:	4150      	adcs	r0, r2
      ((tmpBle & BLE_REASON_FROM_IO9) == BLE_REASON_FROM_IO9)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO9;
  }
  if ((tmpSoc == 0) &&
100414b2:	2211      	movs	r2, #17
  wakeup_src = RESET_NONE;
100414b4:	0140      	lsls	r0, r0, #5
  if ((tmpSoc == 0) &&
100414b6:	401a      	ands	r2, r3
100414b8:	2a11      	cmp	r2, #17
100414ba:	d101      	bne.n	100414c0 <SysCtrl_GetWakeupResetReason+0x28>
      ((tmpBle & BLE_REASON_FROM_IO10) == BLE_REASON_FROM_IO10)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO10;
100414bc:	322f      	adds	r2, #47	; 0x2f
100414be:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
100414c0:	2221      	movs	r2, #33	; 0x21
100414c2:	401a      	ands	r2, r3
100414c4:	2a21      	cmp	r2, #33	; 0x21
100414c6:	d101      	bne.n	100414cc <SysCtrl_GetWakeupResetReason+0x34>
      ((tmpBle & BLE_REASON_FROM_IO11) == BLE_REASON_FROM_IO11)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO11;
100414c8:	2280      	movs	r2, #128	; 0x80
100414ca:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
100414cc:	2241      	movs	r2, #65	; 0x41
100414ce:	401a      	ands	r2, r3
100414d0:	2a41      	cmp	r2, #65	; 0x41
100414d2:	d102      	bne.n	100414da <SysCtrl_GetWakeupResetReason+0x42>
      ((tmpBle & BLE_REASON_FROM_IO12) == BLE_REASON_FROM_IO12)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO12;
100414d4:	2280      	movs	r2, #128	; 0x80
100414d6:	0052      	lsls	r2, r2, #1
100414d8:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
100414da:	2281      	movs	r2, #129	; 0x81
100414dc:	401a      	ands	r2, r3
100414de:	2a81      	cmp	r2, #129	; 0x81
100414e0:	d102      	bne.n	100414e8 <SysCtrl_GetWakeupResetReason+0x50>
      ((tmpBle & BLE_REASON_FROM_IO13) == BLE_REASON_FROM_IO13)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO13;
100414e2:	2280      	movs	r2, #128	; 0x80
100414e4:	0092      	lsls	r2, r2, #2
100414e6:	4310      	orrs	r0, r2
  }

  if ((tmpSoc == 0) &&
100414e8:	2202      	movs	r2, #2
100414ea:	0019      	movs	r1, r3
100414ec:	32ff      	adds	r2, #255	; 0xff
100414ee:	4011      	ands	r1, r2
100414f0:	4291      	cmp	r1, r2
100414f2:	d102      	bne.n	100414fa <SysCtrl_GetWakeupResetReason+0x62>
      ((tmpBle & BLE_REASON_FROM_TIMER1) == BLE_REASON_FROM_TIMER1)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_TIMER1;
100414f4:	2280      	movs	r2, #128	; 0x80
100414f6:	00d2      	lsls	r2, r2, #3
100414f8:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
100414fa:	0019      	movs	r1, r3
100414fc:	4a10      	ldr	r2, [pc, #64]	; (10041540 <SysCtrl_GetWakeupResetReason+0xa8>)
100414fe:	4011      	ands	r1, r2
10041500:	4291      	cmp	r1, r2
10041502:	d102      	bne.n	1004150a <SysCtrl_GetWakeupResetReason+0x72>
      ((tmpBle & BLE_REASON_FROM_TIMER2) == BLE_REASON_FROM_TIMER2)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_TIMER2;
10041504:	2280      	movs	r2, #128	; 0x80
10041506:	0112      	lsls	r2, r2, #4
10041508:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
1004150a:	2205      	movs	r2, #5
1004150c:	401a      	ands	r2, r3
1004150e:	2a05      	cmp	r2, #5
10041510:	d101      	bne.n	10041516 <SysCtrl_GetWakeupResetReason+0x7e>
      ((tmpBle & BLE_REASON_POR_RST) == BLE_REASON_POR_RST)) {
    wakeup_src |= RESET_BLE_POR;
10041512:	2210      	movs	r2, #16
10041514:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
10041516:	43db      	mvns	r3, r3
10041518:	079b      	lsls	r3, r3, #30
1004151a:	d101      	bne.n	10041520 <SysCtrl_GetWakeupResetReason+0x88>
      ((tmpBle & BLE_REASON_BOR_RST) == BLE_REASON_BOR_RST)) {
    wakeup_src |= RESET_BLE_BOR;
1004151c:	2308      	movs	r3, #8
1004151e:	4318      	orrs	r0, r3
  if((tmpSoc == SOC_REASON_LOCKUP)) {
    wakeup_src |= RESET_LOCKUP;
  }

  return wakeup_src;
}
10041520:	4770      	bx	lr
    wakeup_src |= RESET_SYSREQ;
10041522:	2001      	movs	r0, #1
  if (tmpSoc == SOC_REASON_SYSREQ) {
10041524:	2a02      	cmp	r2, #2
10041526:	d0fb      	beq.n	10041520 <SysCtrl_GetWakeupResetReason+0x88>
    wakeup_src |= RESET_WDG;
10041528:	1800      	adds	r0, r0, r0
  if (tmpSoc == SOC_REASON_WDG) {
1004152a:	2a04      	cmp	r2, #4
1004152c:	d0f8      	beq.n	10041520 <SysCtrl_GetWakeupResetReason+0x88>
  wakeup_src = RESET_NONE;
1004152e:	3a08      	subs	r2, #8
10041530:	4250      	negs	r0, r2
10041532:	4150      	adcs	r0, r2
10041534:	0080      	lsls	r0, r0, #2
10041536:	e7f3      	b.n	10041520 <SysCtrl_GetWakeupResetReason+0x88>
10041538:	40900000 	.word	0x40900000
1004153c:	48100000 	.word	0x48100000
10041540:	00000401 	.word	0x00000401

10041544 <UART_Cmd>:
  * @param  NewState: functional state @ref FunctionalState
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void UART_Cmd(FunctionalState NewState)
{
10041544:	4b05      	ldr	r3, [pc, #20]	; (1004155c <UART_Cmd+0x18>)
10041546:	2201      	movs	r2, #1
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE) {
    /* Enable the selected UART by setting the UARTEN bit in the UARTCR register */
    UART->CR_b.EN = SET;
10041548:	6b19      	ldr	r1, [r3, #48]	; 0x30
  if (NewState != DISABLE) {
1004154a:	2800      	cmp	r0, #0
1004154c:	d002      	beq.n	10041554 <UART_Cmd+0x10>
    UART->CR_b.EN = SET;
1004154e:	430a      	orrs	r2, r1
10041550:	631a      	str	r2, [r3, #48]	; 0x30
  }
  else {
    /* Disable the selected UART by clearing the UARTEN bit in the UARTCR register */
    UART->CR_b.EN = RESET;
  }
}
10041552:	4770      	bx	lr
    UART->CR_b.EN = RESET;
10041554:	4391      	bics	r1, r2
10041556:	6319      	str	r1, [r3, #48]	; 0x30
}
10041558:	e7fb      	b.n	10041552 <UART_Cmd+0xe>
1004155a:	46c0      	nop			; (mov r8, r8)
1004155c:	40300000 	.word	0x40300000

10041560 <UART_Init>:
  * @param  UART_InitStruct: pointer to a @ref UART_InitType structure
  *         that contains the configuration information for the specified UART.
  * @retval None
  */
void UART_Init(UART_InitType* UART_InitStruct)
{
10041560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_UART_HW_FLOW_CONTROL(UART_InitStruct->UART_HardwareFlowControl));
  assert_param(IS_FUNCTIONAL_STATE(UART_InitStruct->UART_FifoEnable));
  
  /*---------------------------- UART BaudRate Configuration -----------------------*/
  
  if (UART->CR_b.OVSFACT == 0)
10041562:	4c4a      	ldr	r4, [pc, #296]	; (1004168c <UART_Init+0x12c>)
{
10041564:	0005      	movs	r5, r0
  if (UART->CR_b.OVSFACT == 0)
10041566:	6b23      	ldr	r3, [r4, #48]	; 0x30
10041568:	6801      	ldr	r1, [r0, #0]
1004156a:	071b      	lsls	r3, r3, #28
1004156c:	d500      	bpl.n	10041570 <UART_Init+0x10>
1004156e:	e06d      	b.n	1004164c <UART_Init+0xec>
    divider = (UART_CLOCK<<7) / (UART_CLOCK_CYCLE16 * UART_InitStruct->UART_BaudRate);
10041570:	0109      	lsls	r1, r1, #4
  else
    divider = (UART_CLOCK<<7) / (UART_CLOCK_CYCLE8 * UART_InitStruct->UART_BaudRate);
10041572:	4847      	ldr	r0, [pc, #284]	; (10041690 <UART_Init+0x130>)
10041574:	f7fe fdf2 	bl	1004015c <__udivsi3>
  
  ibrd = divider >> 7;
10041578:	09c3      	lsrs	r3, r0, #7
1004157a:	b29a      	uxth	r2, r3
  UART->IBRD = ibrd;
1004157c:	84a2      	strh	r2, [r4, #36]	; 0x24
  fbrd = ((divider - (ibrd <<7) + 1) >> 1);
1004157e:	4a45      	ldr	r2, [pc, #276]	; (10041694 <UART_Init+0x134>)
10041580:	01db      	lsls	r3, r3, #7
10041582:	3001      	adds	r0, #1
10041584:	4013      	ands	r3, r2
10041586:	1ac0      	subs	r0, r0, r3
10041588:	0840      	lsrs	r0, r0, #1
1004158a:	b280      	uxth	r0, r0
  if (fbrd > 0x3f) {
1004158c:	283f      	cmp	r0, #63	; 0x3f
1004158e:	d902      	bls.n	10041596 <UART_Init+0x36>
    ibrd++;
    fbrd = (fbrd - 0x3F) & 0x3F;
10041590:	233f      	movs	r3, #63	; 0x3f
10041592:	383f      	subs	r0, #63	; 0x3f
10041594:	4018      	ands	r0, r3
  }
  UART->FBRD = fbrd;
  
  /*---------------------------- UART Word Length Configuration -----------------------*/
  UART->LCRH_TX_b.WLEN_TX = UART_InitStruct->UART_WordLengthTransmit;
10041596:	2703      	movs	r7, #3
10041598:	2660      	movs	r6, #96	; 0x60
  UART->FBRD = fbrd;
1004159a:	4b3f      	ldr	r3, [pc, #252]	; (10041698 <UART_Init+0x138>)
1004159c:	b2c0      	uxtb	r0, r0
1004159e:	7018      	strb	r0, [r3, #0]
  UART->LCRH_TX_b.WLEN_TX = UART_InitStruct->UART_WordLengthTransmit;
100415a0:	4b3e      	ldr	r3, [pc, #248]	; (1004169c <UART_Init+0x13c>)
100415a2:	792a      	ldrb	r2, [r5, #4]
100415a4:	7818      	ldrb	r0, [r3, #0]
100415a6:	403a      	ands	r2, r7
100415a8:	0152      	lsls	r2, r2, #5
100415aa:	43b0      	bics	r0, r6
100415ac:	4310      	orrs	r0, r2
100415ae:	7018      	strb	r0, [r3, #0]
  UART->LCRH_RX_b.WLEN_RX = UART_InitStruct->UART_WordLengthReceive;
  
  /*---------------------------- UART Stop Bits Configuration -----------------------*/
  UART->LCRH_TX_b.STP2_TX = UART_InitStruct->UART_StopBits;
100415b0:	2001      	movs	r0, #1
  UART->LCRH_RX_b.WLEN_RX = UART_InitStruct->UART_WordLengthReceive;
100415b2:	7969      	ldrb	r1, [r5, #5]
100415b4:	7f22      	ldrb	r2, [r4, #28]
100415b6:	4039      	ands	r1, r7
100415b8:	0149      	lsls	r1, r1, #5
100415ba:	43b2      	bics	r2, r6
100415bc:	430a      	orrs	r2, r1
100415be:	7722      	strb	r2, [r4, #28]
  UART->LCRH_TX_b.STP2_TX = UART_InitStruct->UART_StopBits;
100415c0:	79aa      	ldrb	r2, [r5, #6]
100415c2:	7819      	ldrb	r1, [r3, #0]
100415c4:	4002      	ands	r2, r0
100415c6:	40ba      	lsls	r2, r7
100415c8:	3007      	adds	r0, #7
100415ca:	4381      	bics	r1, r0
100415cc:	4311      	orrs	r1, r2
100415ce:	7019      	strb	r1, [r3, #0]
  UART->LCRH_RX_b.STP2_RX = UART_InitStruct->UART_StopBits;
100415d0:	7f21      	ldrb	r1, [r4, #28]
100415d2:	4381      	bics	r1, r0
100415d4:	430a      	orrs	r2, r1
100415d6:	7722      	strb	r2, [r4, #28]
  
  /*---------------------------- UART Parity Configuration -----------------------*/
  if(UART_InitStruct->UART_Parity == UART_Parity_No) {
100415d8:	79ea      	ldrb	r2, [r5, #7]
100415da:	2a00      	cmp	r2, #0
100415dc:	d138      	bne.n	10041650 <UART_Init+0xf0>
    UART->LCRH_TX_b.PEN_TX = RESET;
100415de:	2102      	movs	r1, #2
100415e0:	781a      	ldrb	r2, [r3, #0]
100415e2:	438a      	bics	r2, r1
100415e4:	701a      	strb	r2, [r3, #0]
    UART->LCRH_RX_b.PEN_RX = RESET;
100415e6:	7f22      	ldrb	r2, [r4, #28]
100415e8:	438a      	bics	r2, r1
    UART->LCRH_RX_b.PEN_RX = SET;
    UART->LCRH_RX_b.EPS_RX = SET;    
  }

  /*---------------------------- UART Mode Configuration -----------------------*/
  UART->CR_b.RXE = UART_InitStruct->UART_Mode&1;
100415ea:	2001      	movs	r0, #1
    UART->LCRH_RX_b.EPS_RX = SET;    
100415ec:	7722      	strb	r2, [r4, #28]
  UART->CR_b.RXE = UART_InitStruct->UART_Mode&1;
100415ee:	7a2a      	ldrb	r2, [r5, #8]
100415f0:	6b21      	ldr	r1, [r4, #48]	; 0x30
100415f2:	0016      	movs	r6, r2
  UART->CR_b.TXE = (UART_InitStruct->UART_Mode>>1)&1;
100415f4:	40c2      	lsrs	r2, r0
  UART->CR_b.RXE = UART_InitStruct->UART_Mode&1;
100415f6:	4f2a      	ldr	r7, [pc, #168]	; (100416a0 <UART_Init+0x140>)
100415f8:	4006      	ands	r6, r0
100415fa:	0276      	lsls	r6, r6, #9
100415fc:	4039      	ands	r1, r7
100415fe:	4331      	orrs	r1, r6
10041600:	6321      	str	r1, [r4, #48]	; 0x30
  UART->CR_b.TXE = (UART_InitStruct->UART_Mode>>1)&1;
10041602:	6b21      	ldr	r1, [r4, #48]	; 0x30
10041604:	4e27      	ldr	r6, [pc, #156]	; (100416a4 <UART_Init+0x144>)
10041606:	4002      	ands	r2, r0
10041608:	4031      	ands	r1, r6
1004160a:	0212      	lsls	r2, r2, #8
1004160c:	430a      	orrs	r2, r1
1004160e:	6322      	str	r2, [r4, #48]	; 0x30

  /*---------------------------- UART Hardware flow control Configuration -----------------------*/
  UART->CR_b.RTSEN = UART_InitStruct->UART_HardwareFlowControl&1;
10041610:	7a69      	ldrb	r1, [r5, #9]
10041612:	6b22      	ldr	r2, [r4, #48]	; 0x30
10041614:	000e      	movs	r6, r1
  UART->CR_b.CTSEN = (UART_InitStruct->UART_HardwareFlowControl>>1)&1;
10041616:	40c1      	lsrs	r1, r0
  UART->CR_b.RTSEN = UART_InitStruct->UART_HardwareFlowControl&1;
10041618:	4f23      	ldr	r7, [pc, #140]	; (100416a8 <UART_Init+0x148>)
1004161a:	4006      	ands	r6, r0
1004161c:	403a      	ands	r2, r7
1004161e:	03b6      	lsls	r6, r6, #14
10041620:	4332      	orrs	r2, r6
10041622:	6322      	str	r2, [r4, #48]	; 0x30
  UART->CR_b.CTSEN = (UART_InitStruct->UART_HardwareFlowControl>>1)&1;
10041624:	6b22      	ldr	r2, [r4, #48]	; 0x30
10041626:	4e21      	ldr	r6, [pc, #132]	; (100416ac <UART_Init+0x14c>)
10041628:	4001      	ands	r1, r0
1004162a:	4032      	ands	r2, r6
1004162c:	03c9      	lsls	r1, r1, #15
1004162e:	4311      	orrs	r1, r2
10041630:	6321      	str	r1, [r4, #48]	; 0x30

  /*---------------------------- UART Fifo Configuration -----------------------*/
  UART->LCRH_TX_b.FEN_TX = (uint8_t)UART_InitStruct->UART_FifoEnable;
10041632:	7aaa      	ldrb	r2, [r5, #10]
10041634:	7819      	ldrb	r1, [r3, #0]
10041636:	4002      	ands	r2, r0
10041638:	300f      	adds	r0, #15
1004163a:	0112      	lsls	r2, r2, #4
1004163c:	4381      	bics	r1, r0
1004163e:	4311      	orrs	r1, r2
10041640:	7019      	strb	r1, [r3, #0]
  UART->LCRH_RX_b.FEN_RX = (uint8_t)UART_InitStruct->UART_FifoEnable;
10041642:	7f23      	ldrb	r3, [r4, #28]
10041644:	4383      	bics	r3, r0
10041646:	431a      	orrs	r2, r3
10041648:	7722      	strb	r2, [r4, #28]

}
1004164a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    divider = (UART_CLOCK<<7) / (UART_CLOCK_CYCLE8 * UART_InitStruct->UART_BaudRate);
1004164c:	00c9      	lsls	r1, r1, #3
1004164e:	e790      	b.n	10041572 <UART_Init+0x12>
  else if(UART_InitStruct->UART_Parity == UART_Parity_Odd) {
10041650:	2a02      	cmp	r2, #2
10041652:	d10c      	bne.n	1004166e <UART_Init+0x10e>
    UART->LCRH_TX_b.EPS_TX = RESET;
10041654:	2004      	movs	r0, #4
    UART->LCRH_TX_b.PEN_TX = SET;
10041656:	7819      	ldrb	r1, [r3, #0]
10041658:	4311      	orrs	r1, r2
1004165a:	7019      	strb	r1, [r3, #0]
    UART->LCRH_TX_b.EPS_TX = RESET;
1004165c:	7819      	ldrb	r1, [r3, #0]
1004165e:	4381      	bics	r1, r0
10041660:	7019      	strb	r1, [r3, #0]
    UART->LCRH_RX_b.PEN_RX = SET;
10041662:	7f21      	ldrb	r1, [r4, #28]
10041664:	430a      	orrs	r2, r1
10041666:	7722      	strb	r2, [r4, #28]
    UART->LCRH_RX_b.EPS_RX = RESET;
10041668:	7f22      	ldrb	r2, [r4, #28]
1004166a:	4382      	bics	r2, r0
1004166c:	e7bd      	b.n	100415ea <UART_Init+0x8a>
    UART->LCRH_TX_b.PEN_TX = SET;
1004166e:	2102      	movs	r1, #2
10041670:	781a      	ldrb	r2, [r3, #0]
10041672:	430a      	orrs	r2, r1
10041674:	701a      	strb	r2, [r3, #0]
    UART->LCRH_TX_b.EPS_TX = SET;    
10041676:	2204      	movs	r2, #4
10041678:	7818      	ldrb	r0, [r3, #0]
1004167a:	4310      	orrs	r0, r2
1004167c:	7018      	strb	r0, [r3, #0]
    UART->LCRH_RX_b.PEN_RX = SET;
1004167e:	7f20      	ldrb	r0, [r4, #28]
10041680:	4301      	orrs	r1, r0
10041682:	7721      	strb	r1, [r4, #28]
    UART->LCRH_RX_b.EPS_RX = SET;    
10041684:	7f21      	ldrb	r1, [r4, #28]
10041686:	430a      	orrs	r2, r1
10041688:	e7af      	b.n	100415ea <UART_Init+0x8a>
1004168a:	46c0      	nop			; (mov r8, r8)
1004168c:	40300000 	.word	0x40300000
10041690:	7a120000 	.word	0x7a120000
10041694:	007fff80 	.word	0x007fff80
10041698:	40300028 	.word	0x40300028
1004169c:	4030002c 	.word	0x4030002c
100416a0:	fffffdff 	.word	0xfffffdff
100416a4:	fffffeff 	.word	0xfffffeff
100416a8:	ffffbfff 	.word	0xffffbfff
100416ac:	ffff7fff 	.word	0xffff7fff

100416b0 <UART_StructInit>:
  * @retval None
  */
void UART_StructInit(UART_InitType* UART_InitStruct)
{
  /* UART_InitStruct members default value */
  UART_InitStruct->UART_BaudRate = 115200;
100416b0:	23e1      	movs	r3, #225	; 0xe1
100416b2:	025b      	lsls	r3, r3, #9
  UART_InitStruct->UART_WordLengthTransmit = UART_WordLength_8b;
100416b4:	2203      	movs	r2, #3
  UART_InitStruct->UART_BaudRate = 115200;
100416b6:	6003      	str	r3, [r0, #0]
  UART_InitStruct->UART_WordLengthReceive = UART_WordLength_8b;
  UART_InitStruct->UART_StopBits = UART_StopBits_1;
100416b8:	2300      	movs	r3, #0
  UART_InitStruct->UART_WordLengthTransmit = UART_WordLength_8b;
100416ba:	7102      	strb	r2, [r0, #4]
  UART_InitStruct->UART_WordLengthReceive = UART_WordLength_8b;
100416bc:	7142      	strb	r2, [r0, #5]
  UART_InitStruct->UART_StopBits = UART_StopBits_1;
100416be:	7183      	strb	r3, [r0, #6]
  UART_InitStruct->UART_Parity = UART_Parity_No;
100416c0:	71c3      	strb	r3, [r0, #7]
  UART_InitStruct->UART_Mode = UART_Mode_Rx | UART_Mode_Tx;
100416c2:	7202      	strb	r2, [r0, #8]
  UART_InitStruct->UART_HardwareFlowControl = UART_HardwareFlowControl_None; 
100416c4:	7243      	strb	r3, [r0, #9]
  UART_InitStruct->UART_FifoEnable = DISABLE;
100416c6:	7283      	strb	r3, [r0, #10]
}
100416c8:	4770      	bx	lr
	...

100416cc <UART_ITConfig>:
  * @param  NewState: functional state @ref FunctionalState
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void UART_ITConfig(uint16_t UART_IT, FunctionalState NewState)
{
100416cc:	4b04      	ldr	r3, [pc, #16]	; (100416e0 <UART_ITConfig+0x14>)
  assert_param(IS_UART_CONFIG_IT(UART_IT));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE) {
    /* Enable specified interrupts */
    SET_BIT(UART->IMSC, UART_IT);
100416ce:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
  if (NewState != DISABLE) {
100416d0:	2900      	cmp	r1, #0
100416d2:	d002      	beq.n	100416da <UART_ITConfig+0xe>
    SET_BIT(UART->IMSC, UART_IT);
100416d4:	4310      	orrs	r0, r2
100416d6:	8718      	strh	r0, [r3, #56]	; 0x38
  }
  else {
    /* Disable specified interrupts */
    CLEAR_BIT(UART->IMSC, UART_IT);
  }
}
100416d8:	4770      	bx	lr
    CLEAR_BIT(UART->IMSC, UART_IT);
100416da:	4382      	bics	r2, r0
100416dc:	871a      	strh	r2, [r3, #56]	; 0x38
}
100416de:	e7fb      	b.n	100416d8 <UART_ITConfig+0xc>
100416e0:	40300000 	.word	0x40300000

100416e4 <UART_ReceiveData>:
uint16_t UART_ReceiveData(void)
{
  /* Check the parameters */
  
  /* Receive Data */
  return (uint16_t)(UART->DR & 0x00FF);
100416e4:	4b01      	ldr	r3, [pc, #4]	; (100416ec <UART_ReceiveData+0x8>)
100416e6:	8818      	ldrh	r0, [r3, #0]
100416e8:	b2c0      	uxtb	r0, r0
}
100416ea:	4770      	bx	lr
100416ec:	40300000 	.word	0x40300000

100416f0 <UART_GetFlagStatus>:
  *     @arg UART_FLAG_OE:    Overrun error.
* @retval FlagStatus: functional state @ref FlagStatus
*         This parameter can be: SET or RESET.
  */
FlagStatus UART_GetFlagStatus(uint32_t UART_FLAG)
{
100416f0:	4b05      	ldr	r3, [pc, #20]	; (10041708 <UART_GetFlagStatus+0x18>)
  /* Check the parameters */
  assert_param(IS_UART_FLAG(UART_FLAG));
  
  if (UART_FLAG & 0x80000000) {
100416f2:	2800      	cmp	r0, #0
100416f4:	da05      	bge.n	10041702 <UART_GetFlagStatus+0x12>
    if (UART->RSR & UART_FLAG) {
100416f6:	685b      	ldr	r3, [r3, #4]
    else {
      return RESET;
    }
  }
  else {
    if (UART->FR & UART_FLAG) {
100416f8:	4018      	ands	r0, r3
100416fa:	1e43      	subs	r3, r0, #1
100416fc:	4198      	sbcs	r0, r3
      return SET;
100416fe:	b2c0      	uxtb	r0, r0
    else {
      return RESET;
    }  
  }
  
}
10041700:	4770      	bx	lr
    if (UART->FR & UART_FLAG) {
10041702:	8b1b      	ldrh	r3, [r3, #24]
10041704:	e7f8      	b.n	100416f8 <UART_GetFlagStatus+0x8>
10041706:	46c0      	nop			; (mov r8, r8)
10041708:	40300000 	.word	0x40300000

1004170c <UART_GetITStatus>:
ITStatus UART_GetITStatus(uint16_t UART_IT)
{
  /* Check the parameters */
  assert_param(IS_UART_CONFIG_IT(UART_IT));
   
  if ((UART->RIS & UART_IT) != (uint16_t)RESET) {
1004170c:	4b03      	ldr	r3, [pc, #12]	; (1004171c <UART_GetITStatus+0x10>)
1004170e:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
10041710:	4018      	ands	r0, r3
10041712:	1e43      	subs	r3, r0, #1
10041714:	4198      	sbcs	r0, r3
10041716:	b2c0      	uxtb	r0, r0
    return SET;
  }
  else {
    return RESET;
  }  
}
10041718:	4770      	bx	lr
1004171a:	46c0      	nop			; (mov r8, r8)
1004171c:	40300000 	.word	0x40300000

10041720 <UART_ClearITPendingBit>:
void UART_ClearITPendingBit(uint16_t UART_IT)
{
  /* Check the parameters */
  assert_param(IS_UART_CONFIG_IT(UART_IT));
  
  UART->ICR = UART_IT;
10041720:	4b01      	ldr	r3, [pc, #4]	; (10041728 <UART_ClearITPendingBit+0x8>)
10041722:	87d8      	strh	r0, [r3, #62]	; 0x3e
}
10041724:	4770      	bx	lr
10041726:	46c0      	nop			; (mov r8, r8)
10041728:	40300006 	.word	0x40300006

1004172c <UART_DMACmd>:
  * @param  NewState: functional state @ref FunctionalState
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void UART_DMACmd(uint8_t UART_DMAReq, FunctionalState NewState)
{
1004172c:	4b04      	ldr	r3, [pc, #16]	; (10041740 <UART_DMACmd+0x14>)

  if (NewState == ENABLE)
  {
    /* Enable the DMA transfer for selected requests by setting the DMAT and/or
       DMAR bits in the UART CR3 register */
    UART->DMACR |= UART_DMAReq;
1004172e:	781a      	ldrb	r2, [r3, #0]
  if (NewState == ENABLE)
10041730:	2901      	cmp	r1, #1
10041732:	d102      	bne.n	1004173a <UART_DMACmd+0xe>
    UART->DMACR |= UART_DMAReq;
10041734:	4310      	orrs	r0, r2
10041736:	7018      	strb	r0, [r3, #0]
  {
    /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
       DMAR bits in the UART CR3 register */
    UART->DMACR &= (uint8_t)~UART_DMAReq;
  }
}
10041738:	4770      	bx	lr
    UART->DMACR &= (uint8_t)~UART_DMAReq;
1004173a:	4382      	bics	r2, r0
1004173c:	701a      	strb	r2, [r3, #0]
}
1004173e:	e7fb      	b.n	10041738 <UART_DMACmd+0xc>
10041740:	40300048 	.word	0x40300048

10041744 <WDG_SetReload>:
  */
void WDG_SetReload(uint32_t WDG_Reload)
{
  /* Check the parameters */
  assert_param(WDG_Reload > 0);
  WDG->LR = WDG_Reload;
10041744:	4b01      	ldr	r3, [pc, #4]	; (1004174c <WDG_SetReload+0x8>)
10041746:	6018      	str	r0, [r3, #0]
}
10041748:	4770      	bx	lr
1004174a:	46c0      	nop			; (mov r8, r8)
1004174c:	40700000 	.word	0x40700000

10041750 <WDG_Enable>:
  * @param  None
  * @retval None
  */
void WDG_Enable(void)
{
  WDG->CR_b.INTEN = SET;
10041750:	2201      	movs	r2, #1
10041752:	4b04      	ldr	r3, [pc, #16]	; (10041764 <WDG_Enable+0x14>)
10041754:	7a19      	ldrb	r1, [r3, #8]
10041756:	430a      	orrs	r2, r1
10041758:	721a      	strb	r2, [r3, #8]
  WDG->CR_b.RESEN = SET;
1004175a:	2202      	movs	r2, #2
1004175c:	7a19      	ldrb	r1, [r3, #8]
1004175e:	430a      	orrs	r2, r1
10041760:	721a      	strb	r2, [r3, #8]
}
10041762:	4770      	bx	lr
10041764:	40700000 	.word	0x40700000

10041768 <NVIC_Init>:
  * @param  NVIC_InitStruct: pointer to a @ref NVIC_InitTypeDef structure that contains
  *         the configuration information for the specified NVIC peripheral.
  * @retval None
  */
void NVIC_Init(NVIC_InitType* NVIC_InitStruct)
{ 
10041768:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
1004176a:	7883      	ldrb	r3, [r0, #2]
1004176c:	7801      	ldrb	r1, [r0, #0]
1004176e:	2b00      	cmp	r3, #0
10041770:	d033      	beq.n	100417da <NVIC_Init+0x72>
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    NVIC_SetPriority((IRQn_Type)NVIC_InitStruct->NVIC_IRQChannel, NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority);
10041772:	7840      	ldrb	r0, [r0, #1]
10041774:	b24a      	sxtb	r2, r1
10041776:	0180      	lsls	r0, r0, #6
  if(IRQn < 0) {
10041778:	2a00      	cmp	r2, #0
1004177a:	da1b      	bge.n	100417b4 <NVIC_Init+0x4c>
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
1004177c:	230f      	movs	r3, #15
1004177e:	400b      	ands	r3, r1
10041780:	3b08      	subs	r3, #8
10041782:	4a1b      	ldr	r2, [pc, #108]	; (100417f0 <NVIC_Init+0x88>)
10041784:	089b      	lsrs	r3, r3, #2
10041786:	009b      	lsls	r3, r3, #2
10041788:	189b      	adds	r3, r3, r2
1004178a:	22ff      	movs	r2, #255	; 0xff
1004178c:	2503      	movs	r5, #3
1004178e:	0017      	movs	r7, r2
10041790:	400d      	ands	r5, r1
10041792:	00ed      	lsls	r5, r5, #3
10041794:	40af      	lsls	r7, r5
        (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
10041796:	4002      	ands	r2, r0
10041798:	40aa      	lsls	r2, r5
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
1004179a:	69de      	ldr	r6, [r3, #28]
1004179c:	43be      	bics	r6, r7
1004179e:	4332      	orrs	r2, r6
100417a0:	61da      	str	r2, [r3, #28]
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
100417a2:	221f      	movs	r2, #31
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
100417a4:	094b      	lsrs	r3, r1, #5
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
100417a6:	4011      	ands	r1, r2
100417a8:	3a1e      	subs	r2, #30
100417aa:	408a      	lsls	r2, r1
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
100417ac:	4911      	ldr	r1, [pc, #68]	; (100417f4 <NVIC_Init+0x8c>)
100417ae:	009b      	lsls	r3, r3, #2
100417b0:	50ca      	str	r2, [r1, r3]
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
  }
}
100417b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100417b4:	27ff      	movs	r7, #255	; 0xff
100417b6:	4b0f      	ldr	r3, [pc, #60]	; (100417f4 <NVIC_Init+0x8c>)
100417b8:	0892      	lsrs	r2, r2, #2
100417ba:	0092      	lsls	r2, r2, #2
100417bc:	18d2      	adds	r2, r2, r3
100417be:	2303      	movs	r3, #3
100417c0:	003c      	movs	r4, r7
100417c2:	25c0      	movs	r5, #192	; 0xc0
100417c4:	400b      	ands	r3, r1
100417c6:	00db      	lsls	r3, r3, #3
100417c8:	409c      	lsls	r4, r3
        (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
100417ca:	4038      	ands	r0, r7
100417cc:	4098      	lsls	r0, r3
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100417ce:	00ad      	lsls	r5, r5, #2
100417d0:	5956      	ldr	r6, [r2, r5]
100417d2:	43a6      	bics	r6, r4
100417d4:	4330      	orrs	r0, r6
100417d6:	5150      	str	r0, [r2, r5]
100417d8:	e7e3      	b.n	100417a2 <NVIC_Init+0x3a>
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
100417da:	231f      	movs	r3, #31
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
100417dc:	094a      	lsrs	r2, r1, #5
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
100417de:	400b      	ands	r3, r1
100417e0:	2101      	movs	r1, #1
100417e2:	4099      	lsls	r1, r3
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
100417e4:	0013      	movs	r3, r2
100417e6:	4a03      	ldr	r2, [pc, #12]	; (100417f4 <NVIC_Init+0x8c>)
100417e8:	3320      	adds	r3, #32
100417ea:	009b      	lsls	r3, r3, #2
100417ec:	50d1      	str	r1, [r2, r3]
}
100417ee:	e7e0      	b.n	100417b2 <NVIC_Init+0x4a>
100417f0:	e000ed00 	.word	0xe000ed00
100417f4:	e000e100 	.word	0xe000e100

100417f8 <SystemSleepCmd>:
  * @param  NewState: functional state @ref FunctionalState
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void SystemSleepCmd(FunctionalState NewState)
{
100417f8:	4b05      	ldr	r3, [pc, #20]	; (10041810 <SystemSleepCmd+0x18>)
100417fa:	2204      	movs	r2, #4
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE) {
    /** Enable Sleep/Stop mode entry on system level */
    SCB->SCR |= 1<<SCB_SCR_SLEEPDEEP_Pos;
100417fc:	6919      	ldr	r1, [r3, #16]
  if (NewState != DISABLE) {
100417fe:	2800      	cmp	r0, #0
10041800:	d002      	beq.n	10041808 <SystemSleepCmd+0x10>
    SCB->SCR |= 1<<SCB_SCR_SLEEPDEEP_Pos;
10041802:	430a      	orrs	r2, r1
10041804:	611a      	str	r2, [r3, #16]
  }
  else {
    /** Disable Sleep/Stop mode entry on system level */
    SCB->SCR &= ~(1<<SCB_SCR_SLEEPDEEP_Pos);
  }
}
10041806:	4770      	bx	lr
    SCB->SCR &= ~(1<<SCB_SCR_SLEEPDEEP_Pos);
10041808:	4391      	bics	r1, r2
1004180a:	6119      	str	r1, [r3, #16]
}
1004180c:	e7fb      	b.n	10041806 <SystemSleepCmd+0xe>
1004180e:	46c0      	nop			; (mov r8, r8)
10041810:	e000ed00 	.word	0xe000ed00

10041814 <SysTick_State>:

void SysTick_State(FunctionalState NewState)
{
10041814:	4b05      	ldr	r3, [pc, #20]	; (1004182c <SysTick_State+0x18>)
10041816:	2201      	movs	r2, #1
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE) {
    SysTick->CTRL  |= SysTick_CTRL_ENABLE_Msk;
10041818:	6819      	ldr	r1, [r3, #0]
  if (NewState != DISABLE) {
1004181a:	2800      	cmp	r0, #0
1004181c:	d002      	beq.n	10041824 <SysTick_State+0x10>
    SysTick->CTRL  |= SysTick_CTRL_ENABLE_Msk;
1004181e:	430a      	orrs	r2, r1
10041820:	601a      	str	r2, [r3, #0]
  }
  else {
    SysTick->CTRL  &= ~SysTick_CTRL_ENABLE_Msk;
  }
}
10041822:	4770      	bx	lr
    SysTick->CTRL  &= ~SysTick_CTRL_ENABLE_Msk;
10041824:	4391      	bics	r1, r2
10041826:	6019      	str	r1, [r3, #0]
}
10041828:	e7fb      	b.n	10041822 <SysTick_State+0xe>
1004182a:	46c0      	nop			; (mov r8, r8)
1004182c:	e000e010 	.word	0xe000e010

10041830 <aci_gap_add_devices_to_resolving_list>:
tBleStatus GAP_enable_controller_privacy(uint8_t *gapRole, uint8_t *numServiceRec);
tBleStatus LL_Encrypt_Plain_Data(uint8_t *key, uint8_t *textData, uint8_t *textDataOut, BOOL inISR);

/* APIs definitions */
tBleStatus aci_gap_add_devices_to_resolving_list(uint8_t Num_of_Resolving_list_Entries, Whitelist_Identity_Entry_t Whitelist_Identity_Entry[], uint8_t Clear_Resolving_List)
{
10041830:	b510      	push	{r4, lr}
    return aci_gap_add_devices_to_resolving_list_api(Num_of_Resolving_list_Entries, Whitelist_Identity_Entry, Clear_Resolving_List);
10041832:	f013 fe63 	bl	100554fc <aci_gap_add_devices_to_resolving_list_api>
}
10041836:	bd10      	pop	{r4, pc}

10041838 <hci_le_remove_device_from_resolving_list>:

tBleStatus hci_le_remove_device_from_resolving_list(uint8_t Peer_Identity_Address_Type, uint8_t Peer_Identity_Address[6])
{
10041838:	b510      	push	{r4, lr}
    return hci_le_remove_device_from_resolving_list_api(Peer_Identity_Address_Type, Peer_Identity_Address);
1004183a:	f00b ff17 	bl	1004d66c <hci_le_remove_device_from_resolving_list_api>
}
1004183e:	bd10      	pop	{r4, pc}

10041840 <hci_le_add_device_to_resolving_list>:

tBleStatus hci_le_add_device_to_resolving_list(uint8_t Peer_Identity_Address_Type, uint8_t Peer_Identity_Address[6], uint8_t Peer_IRK[16], uint8_t Local_IRK[16])
{
10041840:	b510      	push	{r4, lr}
    return hci_le_add_device_to_resolving_list_api(Peer_Identity_Address_Type, Peer_Identity_Address, Peer_IRK, Local_IRK);
10041842:	f00b febf 	bl	1004d5c4 <hci_le_add_device_to_resolving_list_api>
}
10041846:	bd10      	pop	{r4, pc}

10041848 <hci_le_set_resolvable_private_address_timeout>:

tBleStatus hci_le_set_resolvable_private_address_timeout(uint16_t RpaTimeout)
{
10041848:	b510      	push	{r4, lr}
    return hci_le_set_resolvable_private_address_timeout_api(RpaTimeout);
1004184a:	f00b ff25 	bl	1004d698 <hci_le_set_resolvable_private_address_timeout_api>
}
1004184e:	bd10      	pop	{r4, pc}

10041850 <hci_le_set_address_resolution_enable>:

tBleStatus hci_le_set_address_resolution_enable(uint8_t AddressResolutionEnable)
{
10041850:	b510      	push	{r4, lr}
    return hci_le_set_address_resolution_enable_api(AddressResolutionEnable);
10041852:	f00b ff17 	bl	1004d684 <hci_le_set_address_resolution_enable_api>
}
10041856:	bd10      	pop	{r4, pc}

10041858 <hci_le_read_peer_resolvable_address>:

tBleStatus hci_le_read_peer_resolvable_address(uint8_t Peer_Identity_Address_Type, uint8_t Peer_Identity_Address[6], uint8_t Peer_Resolvable_Address[6])
{
10041858:	b510      	push	{r4, lr}
    return hci_le_read_peer_resolvable_address_api(Peer_Identity_Address_Type, Peer_Identity_Address, Peer_Resolvable_Address);
1004185a:	f00b feec 	bl	1004d636 <hci_le_read_peer_resolvable_address_api>
}
1004185e:	bd10      	pop	{r4, pc}

10041860 <hci_le_read_local_resolvable_address>:

tBleStatus hci_le_read_local_resolvable_address(uint8_t Peer_Identity_Address_Type, uint8_t Peer_Identity_Address[6], uint8_t Local_Resolvable_Address[6])
{
10041860:	b510      	push	{r4, lr}
    return hci_le_read_local_resolvable_address_api(Peer_Identity_Address_Type, Peer_Identity_Address, Local_Resolvable_Address);
10041862:	f00b fed4 	bl	1004d60e <hci_le_read_local_resolvable_address_api>
}
10041866:	bd10      	pop	{r4, pc}

10041868 <hci_le_read_resolving_list_size>:

tBleStatus hci_le_read_resolving_list_size(uint8_t *resolving_List_Size)
{
10041868:	b510      	push	{r4, lr}
    return hci_le_read_resolving_list_size_api(resolving_List_Size);
1004186a:	f00b fef8 	bl	1004d65e <hci_le_read_resolving_list_size_api>
}
1004186e:	bd10      	pop	{r4, pc}

10041870 <hci_le_clear_resolving_list>:

tBleStatus hci_le_clear_resolving_list(void)
{
10041870:	b510      	push	{r4, lr}
    return hci_le_clear_resolving_list_api();
10041872:	f00b fec8 	bl	1004d606 <hci_le_clear_resolving_list_api>
}
10041876:	bd10      	pop	{r4, pc}

10041878 <PRIV_vGeneratePrivateAddress_ucfg>:
    return hci_le_set_privacy_mode_api(Peer_Identity_Address_Type, Peer_Identity_Address, Privacy_Mode);
}

/* Internal core function definitions */
void PRIV_vGeneratePrivateAddress_ucfg(uint8_t *IRK, uint8_t *PrivateAddress)
{
10041878:	b510      	push	{r4, lr}
    PRIV_vGeneratePrivateAddress(IRK, PrivateAddress);
1004187a:	f00f fcff 	bl	1005127c <PRIV_vGeneratePrivateAddress>
}
1004187e:	bd10      	pop	{r4, pc}

10041880 <PRIV_u32ProcessAdvPacket_ucfg>:
{
    return LL_SetAddressResolutionEnable(enable);
}

uint8_t PRIV_u32ProcessAdvPacket_ucfg(void *params)
{
10041880:	b510      	push	{r4, lr}
    return PRIV_u32ProcessAdvPacket(params);
10041882:	f00f f8f7 	bl	10050a74 <PRIV_u32ProcessAdvPacket>
}
10041886:	bd10      	pop	{r4, pc}

10041888 <PRIV_u8OfflineProcessing_ucfg>:

uint8_t PRIV_u8OfflineProcessing_ucfg(void)
{
10041888:	b510      	push	{r4, lr}
    return PRIV_u8OfflineProcessing();
1004188a:	f00f fbc9 	bl	10051020 <PRIV_u8OfflineProcessing>
}
1004188e:	bd10      	pop	{r4, pc}

10041890 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event_ucfg>:

void PRIV_vGenerate_hci_le_enhanced_connection_complete_event_ucfg(uint8_t role,          uint32_t *peer_addr,
																   uint8_t status,        uint16_t connHandle,
																   uint16_t interval,     uint16_t latency,
																   uint32_t supertimeout, uint16_t CONN_Sca)
{
10041890:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10041892:	ae0b      	add	r6, sp, #44	; 0x2c
10041894:	8836      	ldrh	r6, [r6, #0]
10041896:	ac08      	add	r4, sp, #32
10041898:	ad09      	add	r5, sp, #36	; 0x24
1004189a:	882d      	ldrh	r5, [r5, #0]
1004189c:	8824      	ldrh	r4, [r4, #0]
    PRIV_vGenerate_hci_le_enhanced_connection_complete_event(role,
1004189e:	9603      	str	r6, [sp, #12]
100418a0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
100418a2:	9501      	str	r5, [sp, #4]
100418a4:	9602      	str	r6, [sp, #8]
100418a6:	9400      	str	r4, [sp, #0]
100418a8:	f00f fdd8 	bl	1005145c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event>
                                                             connHandle,
                                                             interval,
                                                             latency,
                                                             supertimeout,
                                                             CONN_Sca);
}
100418ac:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

100418ae <PRIV_vGenerate_hci_le_direct_advertising_report_event_ucfg>:
                                                                uint8_t scantype,
                                                                uint8_t peer_addr_type,
                                                                uint8_t* p1,
                                                                uint8_t rssi,
                                                                uint8_t length)
{
100418ae:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
100418b0:	ac08      	add	r4, sp, #32
100418b2:	cc20      	ldmia	r4!, {r5}
100418b4:	ae0a      	add	r6, sp, #40	; 0x28
100418b6:	7824      	ldrb	r4, [r4, #0]
100418b8:	7836      	ldrb	r6, [r6, #0]
    return PRIV_vGenerate_hci_le_direct_advertising_report_event(scanFilterPolicy,
100418ba:	9401      	str	r4, [sp, #4]
100418bc:	9602      	str	r6, [sp, #8]
100418be:	9500      	str	r5, [sp, #0]
100418c0:	f00f fd0e 	bl	100512e0 <PRIV_vGenerate_hci_le_direct_advertising_report_event>
                                                                 scantype,
                                                                 peer_addr_type,
                                                                 p1,
                                                                 rssi,
                                                                 length);
}
100418c4:	b004      	add	sp, #16
100418c6:	bd70      	pop	{r4, r5, r6, pc}

100418c8 <GAP_enable_controller_privacy_ucfg>:

tBleStatus GAP_enable_controller_privacy_ucfg(uint8_t *gapRole, uint8_t *numServiceRec)
{
100418c8:	b510      	push	{r4, lr}
    return GAP_enable_controller_privacy(gapRole, numServiceRec);
100418ca:	f006 fbdd 	bl	10048088 <GAP_enable_controller_privacy>
}
100418ce:	bd10      	pop	{r4, pc}

100418d0 <LL_Encrypt_Plain_Data_ucfg>:

tBleStatus LL_Encrypt_Plain_Data_ucfg(uint8_t *key, uint8_t *textData, uint8_t *textDataOut, BOOL inISR)
{
100418d0:	b510      	push	{r4, lr}
    return LL_Encrypt_Plain_Data(key, textData, textDataOut, inISR);
100418d2:	f011 fbb3 	bl	1005303c <LL_Encrypt_Plain_Data>
}
100418d6:	bd10      	pop	{r4, pc}

100418d8 <PRIV_controller_privacy_csr_ucfg>:
100418d8:	2001      	movs	r0, #1
100418da:	4770      	bx	lr

100418dc <aci_gap_start_auto_connection_establish_proc>:
                                                        uint16_t Supervision_Timeout,
                                                        uint16_t Minimum_CE_Length,
                                                        uint16_t Maximum_CE_Length,
                                                        uint8_t Num_of_Whitelist_Entries,
                                                        Whitelist_Entry_t Whitelist_Entry[])
{
100418dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100418de:	b08b      	sub	sp, #44	; 0x2c
100418e0:	9308      	str	r3, [sp, #32]
100418e2:	ab15      	add	r3, sp, #84	; 0x54
100418e4:	781b      	ldrb	r3, [r3, #0]
100418e6:	ac10      	add	r4, sp, #64	; 0x40
100418e8:	469c      	mov	ip, r3
100418ea:	8824      	ldrh	r4, [r4, #0]
    return aci_gap_start_auto_connection_establish_proc_api(LE_Scan_Interval,
100418ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
{
100418ee:	9409      	str	r4, [sp, #36]	; 0x24
100418f0:	ad12      	add	r5, sp, #72	; 0x48
100418f2:	ac11      	add	r4, sp, #68	; 0x44
100418f4:	ae13      	add	r6, sp, #76	; 0x4c
100418f6:	af14      	add	r7, sp, #80	; 0x50
100418f8:	8824      	ldrh	r4, [r4, #0]
100418fa:	882d      	ldrh	r5, [r5, #0]
100418fc:	8836      	ldrh	r6, [r6, #0]
100418fe:	883f      	ldrh	r7, [r7, #0]
    return aci_gap_start_auto_connection_establish_proc_api(LE_Scan_Interval,
10041900:	9306      	str	r3, [sp, #24]
10041902:	4663      	mov	r3, ip
10041904:	9305      	str	r3, [sp, #20]
10041906:	9b09      	ldr	r3, [sp, #36]	; 0x24
10041908:	9704      	str	r7, [sp, #16]
1004190a:	9300      	str	r3, [sp, #0]
1004190c:	9603      	str	r6, [sp, #12]
1004190e:	9502      	str	r5, [sp, #8]
10041910:	9401      	str	r4, [sp, #4]
10041912:	9b08      	ldr	r3, [sp, #32]
10041914:	f005 f971 	bl	10046bfa <aci_gap_start_auto_connection_establish_proc_api>
                                                            Supervision_Timeout,
                                                            Minimum_CE_Length,
                                                            Maximum_CE_Length,
                                                            Num_of_Whitelist_Entries,
                                                            Whitelist_Entry);
}
10041918:	b00b      	add	sp, #44	; 0x2c
1004191a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004191c <aci_gap_start_general_connection_establish_proc>:
                                                           uint16_t LE_Scan_Interval,
                                                           uint16_t LE_Scan_Window,
                                                           uint8_t Own_Address_Type,
                                                           uint8_t Scan_Filter_Policy,
                                                           uint8_t Filter_Duplicates)
{
1004191c:	b537      	push	{r0, r1, r2, r4, r5, lr}
1004191e:	ac06      	add	r4, sp, #24
10041920:	ad07      	add	r5, sp, #28
10041922:	782d      	ldrb	r5, [r5, #0]
10041924:	7824      	ldrb	r4, [r4, #0]
    return aci_gap_start_general_connection_establish_proc_api(LE_Scan_Type,
10041926:	9501      	str	r5, [sp, #4]
10041928:	9400      	str	r4, [sp, #0]
1004192a:	f005 f991 	bl	10046c50 <aci_gap_start_general_connection_establish_proc_api>
                                                               LE_Scan_Interval,
                                                               LE_Scan_Window,
                                                               Own_Address_Type,
                                                               Scan_Filter_Policy,
                                                               Filter_Duplicates);
}
1004192e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10041930 <aci_gap_start_selective_connection_establish_proc>:
                                                             uint8_t Own_Address_Type,
                                                             uint8_t Scan_Filter_Policy,
                                                             uint8_t Filter_Duplicates,
                                                             uint8_t Num_of_Whitelist_Entries,
                                                             Whitelist_Entry_t Whitelist_Entry[])
{
10041930:	b5f0      	push	{r4, r5, r6, r7, lr}
10041932:	b085      	sub	sp, #20
10041934:	ac0a      	add	r4, sp, #40	; 0x28
10041936:	ad0b      	add	r5, sp, #44	; 0x2c
10041938:	ae0c      	add	r6, sp, #48	; 0x30
1004193a:	7824      	ldrb	r4, [r4, #0]
1004193c:	782d      	ldrb	r5, [r5, #0]
1004193e:	7836      	ldrb	r6, [r6, #0]
    return aci_gap_start_selective_connection_establish_proc_api(LE_Scan_Type,
10041940:	9f0d      	ldr	r7, [sp, #52]	; 0x34
10041942:	9602      	str	r6, [sp, #8]
10041944:	9703      	str	r7, [sp, #12]
10041946:	9501      	str	r5, [sp, #4]
10041948:	9400      	str	r4, [sp, #0]
1004194a:	f005 f9d6 	bl	10046cfa <aci_gap_start_selective_connection_establish_proc_api>
                                                                 Own_Address_Type,
                                                                 Scan_Filter_Policy,
                                                                 Filter_Duplicates,
                                                                 Num_of_Whitelist_Entries,
                                                                 Whitelist_Entry);
}
1004194e:	b005      	add	sp, #20
10041950:	bdf0      	pop	{r4, r5, r6, r7, pc}

10041952 <aci_gap_create_connection>:
                                     uint16_t Conn_Interval_Max,
                                     uint16_t Conn_Latency,
                                     uint16_t Supervision_Timeout,
                                     uint16_t Minimum_CE_Length,
                                     uint16_t Maximum_CE_Length)
{
10041952:	b5f0      	push	{r4, r5, r6, r7, lr}
10041954:	b08d      	sub	sp, #52	; 0x34
10041956:	ac12      	add	r4, sp, #72	; 0x48
10041958:	7824      	ldrb	r4, [r4, #0]
1004195a:	9309      	str	r3, [sp, #36]	; 0x24
1004195c:	940a      	str	r4, [sp, #40]	; 0x28
1004195e:	ac13      	add	r4, sp, #76	; 0x4c
10041960:	8824      	ldrh	r4, [r4, #0]
10041962:	ab18      	add	r3, sp, #96	; 0x60
10041964:	881b      	ldrh	r3, [r3, #0]
10041966:	940b      	str	r4, [sp, #44]	; 0x2c
10041968:	ad15      	add	r5, sp, #84	; 0x54
1004196a:	ac14      	add	r4, sp, #80	; 0x50
1004196c:	ae16      	add	r6, sp, #88	; 0x58
1004196e:	af17      	add	r7, sp, #92	; 0x5c
10041970:	8824      	ldrh	r4, [r4, #0]
10041972:	882d      	ldrh	r5, [r5, #0]
10041974:	8836      	ldrh	r6, [r6, #0]
10041976:	883f      	ldrh	r7, [r7, #0]
    return aci_gap_create_connection_api(LE_Scan_Interval,
10041978:	9306      	str	r3, [sp, #24]
1004197a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1004197c:	9705      	str	r7, [sp, #20]
1004197e:	9301      	str	r3, [sp, #4]
10041980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
10041982:	9604      	str	r6, [sp, #16]
10041984:	9300      	str	r3, [sp, #0]
10041986:	9503      	str	r5, [sp, #12]
10041988:	9402      	str	r4, [sp, #8]
1004198a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1004198c:	f004 ff72 	bl	10046874 <aci_gap_create_connection_api>
                                         Conn_Interval_Max,
                                         Conn_Latency,
                                         Supervision_Timeout,
                                         Minimum_CE_Length,
                                         Maximum_CE_Length);
}
10041990:	b00d      	add	sp, #52	; 0x34
10041992:	bdf0      	pop	{r4, r5, r6, r7, pc}

10041994 <aci_gap_start_connection_update>:
                                           uint16_t Conn_Interval_Max,
                                           uint16_t Conn_Latency,
                                           uint16_t Supervision_Timeout,
                                           uint16_t Minimum_CE_Length,
                                           uint16_t Maximum_CE_Length)
{
10041994:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10041996:	ac08      	add	r4, sp, #32
10041998:	ad09      	add	r5, sp, #36	; 0x24
1004199a:	ae0a      	add	r6, sp, #40	; 0x28
1004199c:	8824      	ldrh	r4, [r4, #0]
1004199e:	882d      	ldrh	r5, [r5, #0]
100419a0:	8836      	ldrh	r6, [r6, #0]
    return aci_gap_start_connection_update_api(Connection_Handle,
100419a2:	9501      	str	r5, [sp, #4]
100419a4:	9602      	str	r6, [sp, #8]
100419a6:	9400      	str	r4, [sp, #0]
100419a8:	f005 f941 	bl	10046c2e <aci_gap_start_connection_update_api>
                                               Conn_Interval_Max,
                                               Conn_Latency,
                                               Supervision_Timeout,
                                               Minimum_CE_Length,
                                               Maximum_CE_Length);
}
100419ac:	b004      	add	sp, #16
100419ae:	bd70      	pop	{r4, r5, r6, pc}

100419b0 <aci_gap_terminate_gap_proc>:

tBleStatus aci_gap_terminate_gap_proc(uint8_t Procedure_Code)
{
100419b0:	b510      	push	{r4, lr}
    return aci_gap_terminate_gap_proc_api(Procedure_Code);
100419b2:	f005 f9bf 	bl	10046d34 <aci_gap_terminate_gap_proc_api>
}
100419b6:	bd10      	pop	{r4, pc}

100419b8 <aci_gap_start_limited_discovery_proc>:

tBleStatus aci_gap_start_limited_discovery_proc(uint16_t LE_Scan_Interval,
                                                uint16_t LE_Scan_Window,
                                                uint8_t Own_Address_Type,
                                                uint8_t Filter_Duplicates)
{
100419b8:	b510      	push	{r4, lr}
    return aci_gap_start_limited_discovery_proc_api(LE_Scan_Interval,
100419ba:	f005 f962 	bl	10046c82 <aci_gap_start_limited_discovery_proc_api>
                                                    LE_Scan_Window,
                                                    Own_Address_Type,
                                                    Filter_Duplicates);
}
100419be:	bd10      	pop	{r4, pc}

100419c0 <aci_gap_start_general_discovery_proc>:

tBleStatus aci_gap_start_general_discovery_proc(uint16_t LE_Scan_Interval,
                                                uint16_t LE_Scan_Window,
                                                uint8_t Own_Address_Type,
                                                uint8_t Filter_Duplicates)
{
100419c0:	b510      	push	{r4, lr}
    return aci_gap_start_general_discovery_proc_api(LE_Scan_Interval,
100419c2:	f005 f95a 	bl	10046c7a <aci_gap_start_general_discovery_proc_api>
                                                    LE_Scan_Window,
                                                    Own_Address_Type,
                                                    Filter_Duplicates);
}
100419c6:	bd10      	pop	{r4, pc}

100419c8 <aci_gap_start_name_discovery_proc>:
                                             uint16_t Conn_Interval_Max,
                                             uint16_t Conn_Latency,
                                             uint16_t Supervision_Timeout,
                                             uint16_t Minimum_CE_Length,
                                             uint16_t Maximum_CE_Length)
{
100419c8:	b5f0      	push	{r4, r5, r6, r7, lr}
100419ca:	b08d      	sub	sp, #52	; 0x34
100419cc:	ac12      	add	r4, sp, #72	; 0x48
100419ce:	7824      	ldrb	r4, [r4, #0]
100419d0:	9309      	str	r3, [sp, #36]	; 0x24
100419d2:	940a      	str	r4, [sp, #40]	; 0x28
100419d4:	ac13      	add	r4, sp, #76	; 0x4c
100419d6:	8824      	ldrh	r4, [r4, #0]
100419d8:	ab18      	add	r3, sp, #96	; 0x60
100419da:	881b      	ldrh	r3, [r3, #0]
100419dc:	940b      	str	r4, [sp, #44]	; 0x2c
100419de:	ad15      	add	r5, sp, #84	; 0x54
100419e0:	ac14      	add	r4, sp, #80	; 0x50
100419e2:	ae16      	add	r6, sp, #88	; 0x58
100419e4:	af17      	add	r7, sp, #92	; 0x5c
100419e6:	8824      	ldrh	r4, [r4, #0]
100419e8:	882d      	ldrh	r5, [r5, #0]
100419ea:	8836      	ldrh	r6, [r6, #0]
100419ec:	883f      	ldrh	r7, [r7, #0]
    return aci_gap_start_name_discovery_proc_api(LE_Scan_Interval,
100419ee:	9306      	str	r3, [sp, #24]
100419f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100419f2:	9705      	str	r7, [sp, #20]
100419f4:	9301      	str	r3, [sp, #4]
100419f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
100419f8:	9604      	str	r6, [sp, #16]
100419fa:	9300      	str	r3, [sp, #0]
100419fc:	9503      	str	r5, [sp, #12]
100419fe:	9402      	str	r4, [sp, #8]
10041a00:	9b09      	ldr	r3, [sp, #36]	; 0x24
10041a02:	f005 f942 	bl	10046c8a <aci_gap_start_name_discovery_proc_api>
                                                 Conn_Interval_Max,
                                                 Conn_Latency,
                                                 Supervision_Timeout,
                                                 Minimum_CE_Length,
                                                 Maximum_CE_Length);
}
10041a06:	b00d      	add	sp, #52	; 0x34
10041a08:	bdf0      	pop	{r4, r5, r6, r7, pc}

10041a0a <aci_gap_start_observation_proc>:
                                          uint16_t LE_Scan_Window,
                                          uint8_t LE_Scan_Type,
                                          uint8_t Own_Address_Type,
                                          uint8_t Filter_Duplicates,
                                          uint8_t scanFilterPolicy)
{
10041a0a:	b537      	push	{r0, r1, r2, r4, r5, lr}
10041a0c:	ac06      	add	r4, sp, #24
10041a0e:	ad07      	add	r5, sp, #28
10041a10:	782d      	ldrb	r5, [r5, #0]
10041a12:	7824      	ldrb	r4, [r4, #0]
    return aci_gap_start_observation_proc_api(LE_Scan_Interval,
10041a14:	9501      	str	r5, [sp, #4]
10041a16:	9400      	str	r4, [sp, #0]
10041a18:	f005 f961 	bl	10046cde <aci_gap_start_observation_proc_api>
                                              LE_Scan_Window,
                                              LE_Scan_Type,
                                              Own_Address_Type,
                                              Filter_Duplicates,
                                              scanFilterPolicy);
}
10041a1c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10041a1e <aci_gap_send_pairing_req>:

tBleStatus aci_gap_send_pairing_req(uint16_t Connection_Handle, uint8_t Force_Rebond)
{
10041a1e:	b510      	push	{r4, lr}
    return aci_gap_send_pairing_req_api(Connection_Handle, Force_Rebond);
10041a20:	f004 ffce 	bl	100469c0 <aci_gap_send_pairing_req_api>
}
10041a24:	bd10      	pop	{r4, pc}

10041a26 <aci_l2cap_connection_parameter_update_resp>:
                                                      uint16_t Minimum_CE_Length,
                                                      uint16_t Maximum_CE_Length,
                                                      uint8_t Identifier,
                                                      uint8_t Accept)

{
10041a26:	b5f0      	push	{r4, r5, r6, r7, lr}
10041a28:	b089      	sub	sp, #36	; 0x24
10041a2a:	9307      	str	r3, [sp, #28]
10041a2c:	ac0e      	add	r4, sp, #56	; 0x38
10041a2e:	ad0f      	add	r5, sp, #60	; 0x3c
10041a30:	ae10      	add	r6, sp, #64	; 0x40
10041a32:	af11      	add	r7, sp, #68	; 0x44
10041a34:	ab12      	add	r3, sp, #72	; 0x48
10041a36:	8824      	ldrh	r4, [r4, #0]
10041a38:	882d      	ldrh	r5, [r5, #0]
10041a3a:	8836      	ldrh	r6, [r6, #0]
10041a3c:	783f      	ldrb	r7, [r7, #0]
10041a3e:	781b      	ldrb	r3, [r3, #0]
    return aci_l2cap_connection_parameter_update_resp_api(Connection_Handle,
10041a40:	9703      	str	r7, [sp, #12]
10041a42:	9304      	str	r3, [sp, #16]
10041a44:	9602      	str	r6, [sp, #8]
10041a46:	9501      	str	r5, [sp, #4]
10041a48:	9400      	str	r4, [sp, #0]
10041a4a:	9b07      	ldr	r3, [sp, #28]
10041a4c:	f005 fc6c 	bl	10047328 <aci_l2cap_connection_parameter_update_resp_api>
                                                          Timeout_Multiplier,
                                                          Minimum_CE_Length,
                                                          Maximum_CE_Length,
                                                          Identifier,
                                                          Accept);
}
10041a50:	b009      	add	sp, #36	; 0x24
10041a52:	bdf0      	pop	{r4, r5, r6, r7, pc}

10041a54 <hci_le_create_connection>:
                                    uint16_t Conn_Interval_Max,
                                    uint16_t Conn_Latency,
                                    uint16_t Supervision_Timeout,
                                    uint16_t Minimum_CE_Length,
                                    uint16_t Maximum_CE_Length)
{
10041a54:	b5f0      	push	{r4, r5, r6, r7, lr}
10041a56:	b08d      	sub	sp, #52	; 0x34
10041a58:	ac12      	add	r4, sp, #72	; 0x48
10041a5a:	cc20      	ldmia	r4!, {r5}
10041a5c:	9308      	str	r3, [sp, #32]
10041a5e:	7824      	ldrb	r4, [r4, #0]
10041a60:	ab19      	add	r3, sp, #100	; 0x64
10041a62:	940a      	str	r4, [sp, #40]	; 0x28
10041a64:	ac14      	add	r4, sp, #80	; 0x50
10041a66:	8824      	ldrh	r4, [r4, #0]
10041a68:	881b      	ldrh	r3, [r3, #0]
10041a6a:	9509      	str	r5, [sp, #36]	; 0x24
10041a6c:	940b      	str	r4, [sp, #44]	; 0x2c
10041a6e:	ad16      	add	r5, sp, #88	; 0x58
10041a70:	ac15      	add	r4, sp, #84	; 0x54
10041a72:	ae17      	add	r6, sp, #92	; 0x5c
10041a74:	af18      	add	r7, sp, #96	; 0x60
10041a76:	8824      	ldrh	r4, [r4, #0]
10041a78:	882d      	ldrh	r5, [r5, #0]
10041a7a:	8836      	ldrh	r6, [r6, #0]
10041a7c:	883f      	ldrh	r7, [r7, #0]
    return hci_le_create_connection_api(LE_Scan_Interval,
10041a7e:	9307      	str	r3, [sp, #28]
10041a80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10041a82:	9706      	str	r7, [sp, #24]
10041a84:	9302      	str	r3, [sp, #8]
10041a86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
10041a88:	9605      	str	r6, [sp, #20]
10041a8a:	9301      	str	r3, [sp, #4]
10041a8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
10041a8e:	9504      	str	r5, [sp, #16]
10041a90:	9300      	str	r3, [sp, #0]
10041a92:	9403      	str	r4, [sp, #12]
10041a94:	9b08      	ldr	r3, [sp, #32]
10041a96:	f00b f973 	bl	1004cd80 <hci_le_create_connection_api>
                                        Conn_Interval_Max,
                                        Conn_Latency,
                                        Supervision_Timeout,
                                        Minimum_CE_Length,
                                        Maximum_CE_Length);
}
10041a9a:	b00d      	add	sp, #52	; 0x34
10041a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

10041a9e <hci_le_create_connection_cancel>:

tBleStatus hci_le_create_connection_cancel(void)
{
10041a9e:	b510      	push	{r4, lr}
    return hci_le_create_connection_cancel_api();
10041aa0:	f00b f9b7 	bl	1004ce12 <hci_le_create_connection_cancel_api>
}
10041aa4:	bd10      	pop	{r4, pc}

10041aa6 <hci_le_connection_update>:
                                    uint16_t Conn_Interval_Max,
                                    uint16_t Conn_Latency,
                                    uint16_t Supervision_Timeout,
                                    uint16_t Minimum_CE_Length,
                                    uint16_t Maximum_CE_Length)
{
10041aa6:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10041aa8:	ac08      	add	r4, sp, #32
10041aaa:	ad09      	add	r5, sp, #36	; 0x24
10041aac:	ae0a      	add	r6, sp, #40	; 0x28
10041aae:	8824      	ldrh	r4, [r4, #0]
10041ab0:	882d      	ldrh	r5, [r5, #0]
10041ab2:	8836      	ldrh	r6, [r6, #0]
    return hci_le_connection_update_api(Connection_Handle,
10041ab4:	9501      	str	r5, [sp, #4]
10041ab6:	9602      	str	r6, [sp, #8]
10041ab8:	9400      	str	r4, [sp, #0]
10041aba:	f00b f924 	bl	1004cd06 <hci_le_connection_update_api>
                                        Conn_Interval_Max,
                                        Conn_Latency,
                                        Supervision_Timeout,
                                        Minimum_CE_Length,
                                        Maximum_CE_Length);
}
10041abe:	b004      	add	sp, #16
10041ac0:	bd70      	pop	{r4, r5, r6, pc}

10041ac2 <hci_le_set_scan_parameters>:
tBleStatus hci_le_set_scan_parameters(uint8_t LE_Scan_Type,
                                      uint16_t LE_Scan_Interval,
                                      uint16_t LE_Scan_Window,
                                      uint8_t Own_Address_Type,
                                      uint8_t Scanning_Filter_Policy)
{
10041ac2:	b513      	push	{r0, r1, r4, lr}
10041ac4:	ac04      	add	r4, sp, #16
10041ac6:	7824      	ldrb	r4, [r4, #0]
    return hci_le_set_scan_parameters_api(LE_Scan_Type,
10041ac8:	9400      	str	r4, [sp, #0]
10041aca:	f00b fb89 	bl	1004d1e0 <hci_le_set_scan_parameters_api>
                                          LE_Scan_Interval,
                                          LE_Scan_Window,
                                          Own_Address_Type,
                                          Scanning_Filter_Policy);
}
10041ace:	bd16      	pop	{r1, r2, r4, pc}

10041ad0 <hci_le_set_scan_enable>:

tBleStatus hci_le_set_scan_enable(uint8_t LE_Scan_Enable, uint8_t Filter_Duplicates)
{
10041ad0:	b510      	push	{r4, lr}
    return hci_le_set_scan_enable_api(LE_Scan_Enable, Filter_Duplicates);
10041ad2:	f00b fb5f 	bl	1004d194 <hci_le_set_scan_enable_api>
}
10041ad6:	bd10      	pop	{r4, pc}

10041ad8 <hci_le_start_encryption>:

tBleStatus hci_le_start_encryption(uint16_t Connection_Handle,
                                   uint8_t Random_Number[8],
                                   uint16_t Encrypted_Diversifier,
                                   uint8_t Long_Term_Key[16])
{
10041ad8:	b510      	push	{r4, lr}
    return hci_le_start_encryption_api(Connection_Handle,
10041ada:	f00b fbb9 	bl	1004d250 <hci_le_start_encryption_api>
                                       Random_Number,
                                       Encrypted_Diversifier,
                                       Long_Term_Key);
}
10041ade:	bd10      	pop	{r4, pc}

10041ae0 <hci_le_set_host_channel_classification>:

tBleStatus hci_le_set_host_channel_classification(uint8_t LE_Channel_Map[5])
{
10041ae0:	b510      	push	{r4, lr}
    return hci_le_set_host_channel_classification_api(LE_Channel_Map);
10041ae2:	f00b fb27 	bl	1004d134 <hci_le_set_host_channel_classification_api>
}
10041ae6:	bd10      	pop	{r4, pc}

10041ae8 <GAP_DiscProcTimeoutcb_ucfg>:

/* Internal core function definitions */
void GAP_DiscProcTimeoutcb_ucfg(void)
{
10041ae8:	b510      	push	{r4, lr}
    GAP_DiscProcTimeoutcb();
10041aea:	f005 fe93 	bl	10047814 <GAP_DiscProcTimeoutcb>
}
10041aee:	bd10      	pop	{r4, pc}

10041af0 <cancel_connect_master_ucfg>:


uint32_t cancel_connect_master_ucfg(uint8_t slaveno)
{
10041af0:	b510      	push	{r4, lr}
    return cancel_connect_master(slaveno);
10041af2:	f014 f801 	bl	10055af8 <cancel_connect_master>
}
10041af6:	bd10      	pop	{r4, pc}

10041af8 <isr_event_handler_scan_data_ucfg>:

void isr_event_handler_scan_data_ucfg(void *params)
{
10041af8:	b510      	push	{r4, lr}
    isr_event_handler_scan_data(params);
10041afa:	f011 f963 	bl	10052dc4 <isr_event_handler_scan_data>
}
10041afe:	bd10      	pop	{r4, pc}

10041b00 <Reclassify_All_Channels_ucfg>:

void Reclassify_All_Channels_ucfg(uint8_t slot_no)
{
10041b00:	b510      	push	{r4, lr}
    Reclassify_All_Channels(slot_no);
10041b02:	f010 fc6f 	bl	100523e4 <Reclassify_All_Channels>
}
10041b06:	bd10      	pop	{r4, pc}

10041b08 <GAP_check_and_set_role_ucfg>:
{
    return LL_Start_Encryption(connHandle, randNum, ediv, ltk);
}

tBleStatus GAP_check_and_set_role_ucfg(uint8_t *gapRole, uint8_t role)
{
10041b08:	b510      	push	{r4, lr}
    return GAP_check_and_set_role(gapRole, role);
10041b0a:	f006 fa93 	bl	10048034 <GAP_check_and_set_role>
}
10041b0e:	bd10      	pop	{r4, pc}

10041b10 <GAP_discover_peer_name_ucfg>:

void GAP_discover_peer_name_ucfg(void)
{
10041b10:	b510      	push	{r4, lr}
    GAP_discover_peer_name();
10041b12:	f006 fa97 	bl	10048044 <GAP_discover_peer_name>
}
10041b16:	bd10      	pop	{r4, pc}

10041b18 <state_func_call_init_csr_ucfg>:

void state_func_call_init_csr_ucfg(void)
{
10041b18:	b510      	push	{r4, lr}
  full_state_func_call_init();
10041b1a:	f00c fe11 	bl	1004e740 <full_state_func_call_init>
}
10041b1e:	bd10      	pop	{r4, pc}

10041b20 <master_csr_ucfg>:
10041b20:	2001      	movs	r0, #1
10041b22:	4770      	bx	lr

10041b24 <smp_MI_Start_Encryption_ucfg>:
  return 1U;
}

/* SMP_MASTER functionalities */
tBleStatus smp_MI_Start_Encryption_ucfg(void *params)
{
10041b24:	b510      	push	{r4, lr}
    return smp_MI_Start_Encryption(params);
10041b26:	f017 fc77 	bl	10059418 <smp_MI_Start_Encryption>
}
10041b2a:	bd10      	pop	{r4, pc}

10041b2c <smp_Execute_Actions_wrt_Current_State_MI_excerpt_ucfg>:
void       smp_Execute_Actions_wrt_Current_State_MI_excerpt_ucfg(void *params)
{
10041b2c:	b510      	push	{r4, lr}
    smp_Execute_Actions_wrt_Current_State_MI_excerpt(params);
10041b2e:	f017 f987 	bl	10058e40 <smp_Execute_Actions_wrt_Current_State_MI_excerpt>
}
10041b32:	bd10      	pop	{r4, pc}

10041b34 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt_ucfg>:
tBleStatus smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt_ucfg(void *params)
{
10041b34:	b510      	push	{r4, lr}
    return smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt(params);
10041b36:	f017 fd8f 	bl	10059658 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt>
}
10041b3a:	bd10      	pop	{r4, pc}

10041b3c <smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2_ucfg>:

/* ---------------------------------------------------------------------------------------------------------- */
#if ((CONTROLLER_MASTER_ENABLED == 1) || (SECURE_CONNECTIONS_ENABLED == 1))
void       smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2(void *params);
void       smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2_ucfg(void *params)
{
10041b3c:	b510      	push	{r4, lr}
    smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2(params);
10041b3e:	f017 f9a6 	bl	10058e8e <smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2>
}
10041b42:	bd10      	pop	{r4, pc}

10041b44 <hci_le_set_data_length>:
BOOL LL_Data_Length_Change_Event(void *params);
tBleStatus LL_Send_Length_Resp(uint16_t connHandle);

/* APIs definitions */
tBleStatus hci_le_set_data_length(uint16_t Connection_Handle, uint16_t TxOctets, uint16_t TxTime)
{
10041b44:	b510      	push	{r4, lr}
    return hci_le_set_data_length_api(Connection_Handle, TxOctets, TxTime);
10041b46:	f00b fac5 	bl	1004d0d4 <hci_le_set_data_length_api>
}
10041b4a:	bd10      	pop	{r4, pc}

10041b4c <hci_le_read_suggested_default_data_length>:

tBleStatus hci_le_read_suggested_default_data_length(uint16_t *SuggestedMaxTxOctets, uint16_t *SuggestedMaxTxTime)
{
10041b4c:	b510      	push	{r4, lr}
    return hci_le_read_suggested_default_data_length_api(SuggestedMaxTxOctets, SuggestedMaxTxTime);
10041b4e:	f00b fa11 	bl	1004cf74 <hci_le_read_suggested_default_data_length_api>
}
10041b52:	bd10      	pop	{r4, pc}

10041b54 <hci_le_write_suggested_default_data_length>:

tBleStatus hci_le_write_suggested_default_data_length(uint16_t SuggestedMaxTxOctets, uint16_t SuggestedMaxTxTime)
{
10041b54:	b510      	push	{r4, lr}
    return hci_le_write_suggested_default_data_length_api(SuggestedMaxTxOctets, SuggestedMaxTxTime);
10041b56:	f00b fbc1 	bl	1004d2dc <hci_le_write_suggested_default_data_length_api>
}
10041b5a:	bd10      	pop	{r4, pc}

10041b5c <hci_le_read_maximum_data_length>:

tBleStatus hci_le_read_maximum_data_length(uint16_t *supportedMaxTxOctets, uint16_t *supportedMaxTxTime,
                                           uint16_t *supportedMaxRxOctets, uint16_t *supportedMaxRxTime)
{
10041b5c:	b510      	push	{r4, lr}
    return hci_le_read_maximum_data_length_api(supportedMaxTxOctets, supportedMaxTxTime,
10041b5e:	f00b f9f8 	bl	1004cf52 <hci_le_read_maximum_data_length_api>
                                               supportedMaxRxOctets, supportedMaxRxTime);
}
10041b62:	bd10      	pop	{r4, pc}

10041b64 <Data_Len_Update_Offline_Processing_ucfg>:

/* Internal core function definitions */
void Data_Len_Update_Offline_Processing_ucfg(void)
{
10041b64:	b510      	push	{r4, lr}
    Data_Len_Update_Offline_Processing();
10041b66:	f00f fdc1 	bl	100516ec <Data_Len_Update_Offline_Processing>
}
10041b6a:	bd10      	pop	{r4, pc}

10041b6c <Data_Length_Update_Control_ISR_ucfg>:

BOOL Data_Length_Update_Control_ISR_ucfg(BOOL is_slave_flag, uint8_t opcode_temp, uint8_t *RcvData_temp_p, volatile uint32_t *sent_event_temp_p)
{
10041b6c:	b510      	push	{r4, lr}
    return Data_Length_Update_Control_ISR(is_slave_flag, opcode_temp, RcvData_temp_p, sent_event_temp_p);
10041b6e:	f00c fbc1 	bl	1004e2f4 <Data_Length_Update_Control_ISR>
}
10041b72:	bd10      	pop	{r4, pc}

10041b74 <ll_write_supported_data_ucfg>:

tBleStatus ll_write_supported_data_ucfg(uint16_t Supported_Max_Tx_Octets, uint16_t Supported_Max_Tx_Time,
                                        uint16_t Supported_Max_Rx_Octets, uint16_t Supported_Max_Rx_Time)
{
10041b74:	b510      	push	{r4, lr}
    return ll_write_supported_data(Supported_Max_Tx_Octets, Supported_Max_Tx_Time,
10041b76:	f010 f8a5 	bl	10051cc4 <ll_write_supported_data>
                                   Supported_Max_Rx_Octets, Supported_Max_Rx_Time);
}
10041b7a:	bd10      	pop	{r4, pc}

10041b7c <LL_Data_Length_Change_Event_ucfg>:

BOOL LL_Data_Length_Change_Event_ucfg(void *params)
{
10041b7c:	b510      	push	{r4, lr}
    return LL_Data_Length_Change_Event(params);
10041b7e:	f00f fe03 	bl	10051788 <LL_Data_Length_Change_Event>
}
10041b82:	bd10      	pop	{r4, pc}

10041b84 <LL_Send_Length_Resp_ucfg>:

tBleStatus LL_Send_Length_Resp_ucfg(uint16_t connHandle)
{
10041b84:	b510      	push	{r4, lr}
    return LL_Send_Length_Resp(connHandle);
10041b86:	f00f ffb9 	bl	10051afc <LL_Send_Length_Resp>
}
10041b8a:	bd10      	pop	{r4, pc}

10041b8c <data_length_extension_csr_ucfg>:
10041b8c:	2001      	movs	r0, #1
10041b8e:	4770      	bx	lr

10041b90 <aci_gap_passkey_input>:
/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
 * BLE Stack API functions "_api" wrapping implementation
 */
/* ------------------------------------------------ from bluenrg1_api.h ----- */
tBleStatus aci_gap_passkey_input(uint16_t Connection_Handle, uint8_t Input_Type)
{
10041b90:	b510      	push	{r4, lr}
    return aci_gap_passkey_input_api(Connection_Handle, Input_Type);
10041b92:	f004 feff 	bl	10046994 <aci_gap_passkey_input_api>
}
10041b96:	bd10      	pop	{r4, pc}

10041b98 <aci_gap_numeric_comparison_value_confirm_yesno>:

tBleStatus aci_gap_numeric_comparison_value_confirm_yesno(uint16_t Connection_Handle, uint8_t Confirm_Yes_No)     
{
10041b98:	b510      	push	{r4, lr}
    return aci_gap_numeric_comparison_value_confirm_yesno_api(Connection_Handle, Confirm_Yes_No);
10041b9a:	f004 fee5 	bl	10046968 <aci_gap_numeric_comparison_value_confirm_yesno_api>
}
10041b9e:	bd10      	pop	{r4, pc}

10041ba0 <hci_le_read_local_p256_public_key>:

tBleStatus hci_le_read_local_p256_public_key(void)
{
10041ba0:	b510      	push	{r4, lr}
    return hci_le_read_local_p256_public_key_api();
10041ba2:	f00b f9b3 	bl	1004cf0c <hci_le_read_local_p256_public_key_api>
}
10041ba6:	bd10      	pop	{r4, pc}

10041ba8 <hci_le_generate_dhkey>:

tBleStatus hci_le_generate_dhkey(uint8_t Remote_P256_Public_Key[64])
{
10041ba8:	b510      	push	{r4, lr}
    return hci_le_generate_dhkey_api(Remote_P256_Public_Key);
10041baa:	f00b f93b 	bl	1004ce24 <hci_le_generate_dhkey_api>
}
10041bae:	bd10      	pop	{r4, pc}

10041bb0 <PKA_Offline_Processing_ucfg>:
/* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
 * BLE Stack INTERNAL core functions' "ucfg" wrapping implementation
 */
/* ----------------------------------------------- from hci.c ----- */
void PKA_Offline_Processing_ucfg(void)
{
10041bb0:	b510      	push	{r4, lr}
    PKA_Offline_Processing();
10041bb2:	f00a ff9b 	bl	1004caec <PKA_Offline_Processing>
}
10041bb6:	bd10      	pop	{r4, pc}

10041bb8 <smp_sc_init_ucfg>:

/* ----------------------------------------------- from smp_scv42_caf.h ----- */
void        smp_sc_init_ucfg(BOOL useDebugKey)
{
10041bb8:	b510      	push	{r4, lr}
    smp_sc_init(useDebugKey);
10041bba:	f019 fe5f 	bl	1005b87c <smp_sc_init>
}
10041bbe:	bd10      	pop	{r4, pc}

10041bc0 <smp_sc_continue_on_exclusive_sc_pairing_ucfg>:
tBleStatus  smp_sc_continue_on_exclusive_sc_pairing_ucfg(void *params)
{
10041bc0:	b510      	push	{r4, lr}
    return smp_sc_continue_on_exclusive_sc_pairing(params);
10041bc2:	f019 fe01 	bl	1005b7c8 <smp_sc_continue_on_exclusive_sc_pairing>
}
10041bc6:	bd10      	pop	{r4, pc}

10041bc8 <smp_sc_check_for_ecc_pk_generation_request_ucfg>:
void        smp_sc_check_for_ecc_pk_generation_request_ucfg(void)
{
10041bc8:	b510      	push	{r4, lr}
    smp_sc_check_for_ecc_pk_generation_request();
10041bca:	f019 fde5 	bl	1005b798 <smp_sc_check_for_ecc_pk_generation_request>
}
10041bce:	bd10      	pop	{r4, pc}

10041bd0 <smp_sc_generate_new_local_oob_data_ucfg>:
tBleStatus  smp_sc_generate_new_local_oob_data_ucfg(void)
{
10041bd0:	b510      	push	{r4, lr}
    return smp_sc_generate_new_local_oob_data();
10041bd2:	f019 fe25 	bl	1005b820 <smp_sc_generate_new_local_oob_data>
}
10041bd6:	bd10      	pop	{r4, pc}

10041bd8 <smp_sc_update_statistics_on_pairing_complete_ucfg>:
void        smp_sc_update_statistics_on_pairing_complete_ucfg(void *params)
{
10041bd8:	b510      	push	{r4, lr}
    smp_sc_update_statistics_on_pairing_complete(params);
10041bda:	f019 fffb 	bl	1005bbd4 <smp_sc_update_statistics_on_pairing_complete>
}
10041bde:	bd10      	pop	{r4, pc}

10041be0 <secure_connections_csr_ucfg>:

/* ----------------------------------------------- from smp_scv42_sap.h ----- */
uint32_t secure_connections_csr_ucfg(void)
{
  return 1U;
}
10041be0:	2001      	movs	r0, #1
10041be2:	4770      	bx	lr

10041be4 <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg>:

void        smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg(void *params)
{
10041be4:	b510      	push	{r4, lr}
    smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl(params);
10041be6:	f01a f87b 	bl	1005bce0 <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl>
}
10041bea:	bd10      	pop	{r4, pc}

10041bec <smp_sc_hci_le_generate_dhkey_complete_evt_hndl_ucfg>:
void        smp_sc_hci_le_generate_dhkey_complete_evt_hndl_ucfg(void *params)
{
10041bec:	b510      	push	{r4, lr}
    smp_sc_hci_le_generate_dhkey_complete_evt_hndl(params);
10041bee:	f01a f83d 	bl	1005bc6c <smp_sc_hci_le_generate_dhkey_complete_evt_hndl>
}
10041bf2:	bd10      	pop	{r4, pc}

10041bf4 <smp_sc_MI_PairingResponse_Receive_sc_excerpt_ucfg>:

/* ------------------------------------------------- from securitymgr.h ----- */
tBleStatus smp_sc_MI_PairingResponse_Receive_sc_excerpt_ucfg(void *params)
{
10041bf4:	b510      	push	{r4, lr}
    return smp_sc_MI_PairingResponse_Receive_sc_excerpt(params);
10041bf6:	f018 f8fd 	bl	10059df4 <smp_sc_MI_PairingResponse_Receive_sc_excerpt>
}
10041bfa:	bd10      	pop	{r4, pc}

10041bfc <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg>:
void       smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg(void *params)
{
10041bfc:	b510      	push	{r4, lr}
    smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt(params);
10041bfe:	f018 f913 	bl	10059e28 <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt>
}
10041c02:	bd10      	pop	{r4, pc}

10041c04 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg>:
void       smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg(void *params)
{
10041c04:	b510      	push	{r4, lr}
    smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt(params);
10041c06:	f018 f98d 	bl	10059f24 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt>
}
10041c0a:	bd10      	pop	{r4, pc}

10041c0c <smp_sc_MI_PairingConfirm_Send_sc_excerpt_ucfg>:

void       smp_sc_MI_PairingConfirm_Send_sc_excerpt_ucfg(void *params)
{
10041c0c:	b510      	push	{r4, lr}
    smp_sc_MI_PairingConfirm_Send_sc_excerpt(params);
10041c0e:	f018 f883 	bl	10059d18 <smp_sc_MI_PairingConfirm_Send_sc_excerpt>
}
10041c12:	bd10      	pop	{r4, pc}

10041c14 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1_ucfg>:
tBleStatus smp_sc_MI_PairingRandom_Receive_sc_excerpt1_ucfg(void *params)
{
10041c14:	b510      	push	{r4, lr}
    return smp_sc_MI_PairingRandom_Receive_sc_excerpt1(params);
10041c16:	f018 f897 	bl	10059d48 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1>
}
10041c1a:	bd10      	pop	{r4, pc}

10041c1c <smp_sc_MI_PairingRandom_Receive_sc_excerpt2_ucfg>:
void       smp_sc_MI_PairingRandom_Receive_sc_excerpt2_ucfg(void *params)
{
10041c1c:	b510      	push	{r4, lr}
    smp_sc_MI_PairingRandom_Receive_sc_excerpt2(params);
10041c1e:	f018 f8b5 	bl	10059d8c <smp_sc_MI_PairingRandom_Receive_sc_excerpt2>
}
10041c22:	bd10      	pop	{r4, pc}

10041c24 <smp_sc_SR_PairingConfirm_Receive_sc_excerpt_ucfg>:

void       smp_sc_SR_PairingConfirm_Receive_sc_excerpt_ucfg(void *params)
{
10041c24:	b510      	push	{r4, lr}
    smp_sc_SR_PairingConfirm_Receive_sc_excerpt(params);
10041c26:	f018 f915 	bl	10059e54 <smp_sc_SR_PairingConfirm_Receive_sc_excerpt>
}
10041c2a:	bd10      	pop	{r4, pc}

10041c2c <smp_sc_SR_PairingRandom_Receive_sc_excerpt_ucfg>:
void       smp_sc_SR_PairingRandom_Receive_sc_excerpt_ucfg(void *params)
{
10041c2c:	b510      	push	{r4, lr}
    smp_sc_SR_PairingRandom_Receive_sc_excerpt(params);
10041c2e:	f018 f92b 	bl	10059e88 <smp_sc_SR_PairingRandom_Receive_sc_excerpt>
}
10041c32:	bd10      	pop	{r4, pc}

10041c34 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2_ucfg>:

BOOL       smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2_ucfg(void *params)
{
10041c34:	b510      	push	{r4, lr}
    return smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2(params);
10041c36:	f017 f95f 	bl	10058ef8 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2>
}
10041c3a:	bd10      	pop	{r4, pc}

10041c3c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2_ucfg>:
void       smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2_ucfg(void *params)
{
10041c3c:	b510      	push	{r4, lr}
    smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2(params);
10041c3e:	f017 f92f 	bl	10058ea0 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2>
}
10041c42:	bd10      	pop	{r4, pc}

10041c44 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt_ucfg>:
tBleStatus smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt_ucfg(void *params)
{
10041c44:	b510      	push	{r4, lr}
    return smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt(params);
10041c46:	f017 fd30 	bl	100596aa <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt>
}
10041c4a:	bd10      	pop	{r4, pc}

10041c4c <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt_ucfg>:
tBleStatus smp_Process_Rx_Packet_Exception_Cases_sc_excerpt_ucfg(void *params)
{
10041c4c:	b510      	push	{r4, lr}
    return smp_Process_Rx_Packet_Exception_Cases_sc_excerpt(params);
10041c4e:	f017 fc27 	bl	100594a0 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt>
}
10041c52:	bd10      	pop	{r4, pc}

10041c54 <PKA_Handler>:
WEAK_FUNCTION(void WDG_Handler(void) {});
WEAK_FUNCTION(void ADC_Handler(void) {});
WEAK_FUNCTION(void I2C2_Handler(void) {});
WEAK_FUNCTION(void I2C1_Handler(void) {});
WEAK_FUNCTION(void DMA_Handler(void) {});
WEAK_FUNCTION(void PKA_Handler(void) {});
10041c54:	4770      	bx	lr

10041c56 <PendSV_Handler>:
10041c56:	4770      	bx	lr

10041c58 <GPIO_Handler>:
10041c58:	4770      	bx	lr

10041c5a <NVM_Handler>:
10041c5a:	4770      	bx	lr

10041c5c <SPI_Handler>:
10041c5c:	4770      	bx	lr

10041c5e <MFT1A_Handler>:
10041c5e:	4770      	bx	lr

10041c60 <MFT1B_Handler>:
10041c60:	4770      	bx	lr

10041c62 <MFT2A_Handler>:
10041c62:	4770      	bx	lr

10041c64 <MFT2B_Handler>:
10041c64:	4770      	bx	lr

10041c66 <RTC_Handler>:
10041c66:	4770      	bx	lr

10041c68 <WDG_Handler>:
10041c68:	4770      	bx	lr

10041c6a <ADC_Handler>:
10041c6a:	4770      	bx	lr

10041c6c <I2C2_Handler>:
10041c6c:	4770      	bx	lr

10041c6e <I2C1_Handler>:
10041c6e:	4770      	bx	lr

10041c70 <Set_RF_FrontEnd>:
}

/* Configure RF FrontEnd */
void Set_RF_FrontEnd(void)
{
  uint8_t i=0;
10041c70:	2200      	movs	r2, #0
{
10041c72:	b510      	push	{r4, lr}

  /* Hot table already populated, search the first free location */
  while (hot_table_radio_config[i] != 0)
10041c74:	4b10      	ldr	r3, [pc, #64]	; (10041cb8 <Set_RF_FrontEnd+0x48>)
10041c76:	5c99      	ldrb	r1, [r3, r2]
10041c78:	b2c9      	uxtb	r1, r1
10041c7a:	2900      	cmp	r1, #0
10041c7c:	d117      	bne.n	10041cae <Set_RF_FrontEnd+0x3e>
    i += (hot_table_radio_config[i] + 1);

  if ((i+3) < HOT_TABLE_RADIO_SIZE) {
10041c7e:	2a1c      	cmp	r2, #28
10041c80:	dc14      	bgt.n	10041cac <Set_RF_FrontEnd+0x3c>
    /* Hot table configuraiton used only for smart power management */
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10041c82:	2002      	movs	r0, #2
    hot_table_radio_config[i+1] = MOD_ANA_ENG_REG;
10041c84:	2421      	movs	r4, #33	; 0x21
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10041c86:	5498      	strb	r0, [r3, r2]
    hot_table_radio_config[i+1] = MOD_ANA_ENG_REG;
10041c88:	1c50      	adds	r0, r2, #1
10041c8a:	541c      	strb	r4, [r3, r0]
    hot_table_radio_config[i+2] = CENTRAL_FREQ_MOD;
10041c8c:	1c90      	adds	r0, r2, #2
10041c8e:	3c19      	subs	r4, #25
10041c90:	541c      	strb	r4, [r3, r0]
    hot_table_radio_config[i+3] = END_CONFIG;
10041c92:	1cd0      	adds	r0, r2, #3
10041c94:	5419      	strb	r1, [r3, r0]

    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)(&hot_table_radio_config[i]) & 0x0000FFFFU);
10041c96:	189b      	adds	r3, r3, r2
10041c98:	2280      	movs	r2, #128	; 0x80
10041c9a:	2190      	movs	r1, #144	; 0x90
10041c9c:	b29b      	uxth	r3, r3
10041c9e:	0252      	lsls	r2, r2, #9
10041ca0:	4313      	orrs	r3, r2
10041ca2:	05c9      	lsls	r1, r1, #23
10041ca4:	60cb      	str	r3, [r1, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10041ca6:	68cb      	ldr	r3, [r1, #12]
10041ca8:	4213      	tst	r3, r2
10041caa:	d1fc      	bne.n	10041ca6 <Set_RF_FrontEnd+0x36>
  }
}
10041cac:	bd10      	pop	{r4, pc}
    i += (hot_table_radio_config[i] + 1);
10041cae:	5c99      	ldrb	r1, [r3, r2]
10041cb0:	3101      	adds	r1, #1
10041cb2:	1852      	adds	r2, r2, r1
10041cb4:	b2d2      	uxtb	r2, r2
10041cb6:	e7de      	b.n	10041c76 <Set_RF_FrontEnd+0x6>
10041cb8:	20000321 	.word	0x20000321

10041cbc <BOR_ConfigSave>:

/* Function to store the BOR configuration and to populate the hot radio configuration table */
void BOR_ConfigSave(uint8_t pmu_ana_user_conf)
{
  uint8_t i=0;
10041cbc:	2300      	movs	r3, #0
{
10041cbe:	b530      	push	{r4, r5, lr}

  /* Hot table already populated, search the first free location */
  while (hot_table_radio_config[i] != 0)
10041cc0:	4a0e      	ldr	r2, [pc, #56]	; (10041cfc <BOR_ConfigSave+0x40>)
10041cc2:	5cd1      	ldrb	r1, [r2, r3]
10041cc4:	b2c9      	uxtb	r1, r1
10041cc6:	2900      	cmp	r1, #0
10041cc8:	d113      	bne.n	10041cf2 <BOR_ConfigSave+0x36>
    i += (hot_table_radio_config[i] + 1);

  if ((i+3) < HOT_TABLE_RADIO_SIZE) {
10041cca:	2b1c      	cmp	r3, #28
10041ccc:	dc08      	bgt.n	10041ce0 <BOR_ConfigSave+0x24>
    /* BOR configuration storage inside hot table used only for smart power managment */
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10041cce:	2402      	movs	r4, #2
    hot_table_radio_config[i+1] = PMU_ANA_USER_REG;
10041cd0:	2535      	movs	r5, #53	; 0x35
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10041cd2:	54d4      	strb	r4, [r2, r3]
    hot_table_radio_config[i+1] = PMU_ANA_USER_REG;
10041cd4:	1c5c      	adds	r4, r3, #1
10041cd6:	5515      	strb	r5, [r2, r4]
    hot_table_radio_config[i+2] = pmu_ana_user_conf;
10041cd8:	1c9c      	adds	r4, r3, #2
    hot_table_radio_config[i+3] = END_CONFIG;
10041cda:	3303      	adds	r3, #3
    hot_table_radio_config[i+2] = pmu_ana_user_conf;
10041cdc:	5510      	strb	r0, [r2, r4]
    hot_table_radio_config[i+3] = END_CONFIG;
10041cde:	54d1      	strb	r1, [r2, r3]
  }
    
  /* BOR configuration storage used only for smart power managment */
  BOR_config[0] = NUMBER_CONFIG_BYTE;
10041ce0:	2202      	movs	r2, #2
10041ce2:	4b07      	ldr	r3, [pc, #28]	; (10041d00 <BOR_ConfigSave+0x44>)
10041ce4:	701a      	strb	r2, [r3, #0]
  BOR_config[1] = PMU_ANA_USER_REG;
10041ce6:	3233      	adds	r2, #51	; 0x33
10041ce8:	705a      	strb	r2, [r3, #1]
  BOR_config[2] = pmu_ana_user_conf;
  BOR_config[3] = END_CONFIG;
10041cea:	2200      	movs	r2, #0
  BOR_config[2] = pmu_ana_user_conf;
10041cec:	7098      	strb	r0, [r3, #2]
  BOR_config[3] = END_CONFIG;
10041cee:	70da      	strb	r2, [r3, #3]
}
10041cf0:	bd30      	pop	{r4, r5, pc}
    i += (hot_table_radio_config[i] + 1);
10041cf2:	5cd1      	ldrb	r1, [r2, r3]
10041cf4:	3101      	adds	r1, #1
10041cf6:	185b      	adds	r3, r3, r1
10041cf8:	b2db      	uxtb	r3, r3
10041cfa:	e7e2      	b.n	10041cc2 <BOR_ConfigSave+0x6>
10041cfc:	20000321 	.word	0x20000321
10041d00:	2000001c 	.word	0x2000001c

10041d04 <SET_BORconfigStatus>:

/* Function to access the BLUE SPI registers to disable and restore the BOR configuration */
void SET_BORconfigStatus(uint8_t enabled)
{
10041d04:	b510      	push	{r4, lr}
10041d06:	4b10      	ldr	r3, [pc, #64]	; (10041d48 <SET_BORconfigStatus+0x44>)
  uint8_t pmu_ana_conf;
  
  if (enabled) {
10041d08:	2800      	cmp	r0, #0
10041d0a:	d00a      	beq.n	10041d22 <SET_BORconfigStatus+0x1e>
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10041d0c:	2280      	movs	r2, #128	; 0x80
10041d0e:	2190      	movs	r1, #144	; 0x90
10041d10:	b29b      	uxth	r3, r3
10041d12:	0252      	lsls	r2, r2, #9
10041d14:	4313      	orrs	r3, r2
10041d16:	05c9      	lsls	r1, r1, #23
10041d18:	60cb      	str	r3, [r1, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10041d1a:	68cb      	ldr	r3, [r1, #12]
10041d1c:	4213      	tst	r3, r2
10041d1e:	d1fc      	bne.n	10041d1a <SET_BORconfigStatus+0x16>
    BOR_config[2] &= ~(1<<2);
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
    BOR_config[2] = pmu_ana_conf;
  }
}
10041d20:	bd10      	pop	{r4, pc}
    BOR_config[2] &= ~(1<<2);
10041d22:	2104      	movs	r1, #4
    pmu_ana_conf = BOR_config[2];
10041d24:	7898      	ldrb	r0, [r3, #2]
    BOR_config[2] &= ~(1<<2);
10041d26:	789a      	ldrb	r2, [r3, #2]
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10041d28:	b29c      	uxth	r4, r3
    BOR_config[2] &= ~(1<<2);
10041d2a:	438a      	bics	r2, r1
10041d2c:	709a      	strb	r2, [r3, #2]
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10041d2e:	2280      	movs	r2, #128	; 0x80
10041d30:	2190      	movs	r1, #144	; 0x90
10041d32:	0252      	lsls	r2, r2, #9
10041d34:	4314      	orrs	r4, r2
10041d36:	05c9      	lsls	r1, r1, #23
    pmu_ana_conf = BOR_config[2];
10041d38:	b2c0      	uxtb	r0, r0
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10041d3a:	60cc      	str	r4, [r1, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10041d3c:	68cc      	ldr	r4, [r1, #12]
10041d3e:	4214      	tst	r4, r2
10041d40:	d1fc      	bne.n	10041d3c <SET_BORconfigStatus+0x38>
    BOR_config[2] = pmu_ana_conf;
10041d42:	7098      	strb	r0, [r3, #2]
}
10041d44:	e7ec      	b.n	10041d20 <SET_BORconfigStatus+0x1c>
10041d46:	46c0      	nop			; (mov r8, r8)
10041d48:	2000001c 	.word	0x2000001c

10041d4c <__low_level_init>:
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10041d4c:	2301      	movs	r3, #1
{
10041d4e:	b530      	push	{r4, r5, lr}
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10041d50:	4a26      	ldr	r2, [pc, #152]	; (10041dec <__low_level_init+0xa0>)
  flash_sw_lock = FLASH_LOCK_WORD;
10041d52:	2403      	movs	r4, #3
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10041d54:	7a11      	ldrb	r1, [r2, #8]
{
10041d56:	b085      	sub	sp, #20
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10041d58:	430b      	orrs	r3, r1
10041d5a:	7213      	strb	r3, [r2, #8]
  flash_sw_lock = FLASH_LOCK_WORD;
10041d5c:	2200      	movs	r2, #0
10041d5e:	4b24      	ldr	r3, [pc, #144]	; (10041df0 <__low_level_init+0xa4>)
10041d60:	601a      	str	r2, [r3, #0]
    reset_reason = SysCtrl_GetWakeupResetReason();
10041d62:	f7ff fb99 	bl	10041498 <SysCtrl_GetWakeupResetReason>
10041d66:	466b      	mov	r3, sp
10041d68:	3302      	adds	r3, #2
10041d6a:	8018      	strh	r0, [r3, #0]
    if (reset_reason != RESET_NONE)
10041d6c:	881a      	ldrh	r2, [r3, #0]
10041d6e:	2a00      	cmp	r2, #0
10041d70:	d103      	bne.n	10041d7a <__low_level_init+0x2e>
10041d72:	3c01      	subs	r4, #1
10041d74:	b2e4      	uxtb	r4, r4
  for (i=0; i<3;  i++) {
10041d76:	2c00      	cmp	r4, #0
10041d78:	d1f3      	bne.n	10041d62 <__low_level_init+0x16>
  if (reset_reason >= RESET_BLE_WAKEUP_FROM_IO9) { 
10041d7a:	881a      	ldrh	r2, [r3, #0]
10041d7c:	2a1f      	cmp	r2, #31
10041d7e:	d932      	bls.n	10041de6 <__low_level_init+0x9a>
    nextRF_transaction(reset_reason);
10041d80:	881b      	ldrh	r3, [r3, #0]
  int32_t time_diff = -1;
  PartInfoType Device_partInfo;
  uint8_t load_hot_table = 1;

  /* Wakeup from radio transaction. So, nothing to do */
  if (reset_reason &  RESET_BLE_WAKEUP_FROM_TIMER1) {
10041d82:	055b      	lsls	r3, r3, #21
10041d84:	d410      	bmi.n	10041da8 <__low_level_init+0x5c>
    return;
  }

  /* Verify device version */
  HAL_GetPartInfo(&Device_partInfo);
10041d86:	ac01      	add	r4, sp, #4
10041d88:	0020      	movs	r0, r4
10041d8a:	f7fe fc71 	bl	10040670 <HAL_GetPartInfo>
  if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) < WA_DEVICE_VERSION) {
10041d8e:	7862      	ldrb	r2, [r4, #1]
10041d90:	78a3      	ldrb	r3, [r4, #2]
10041d92:	0112      	lsls	r2, r2, #4
10041d94:	431a      	orrs	r2, r3
    load_hot_table = 0;
  }
    
  /* Verify if the BLE radio is NOT active */
  if((*(volatile uint32_t*)0x200000C0 & 8U) == 0U) {
10041d96:	4b17      	ldr	r3, [pc, #92]	; (10041df4 <__low_level_init+0xa8>)
10041d98:	681b      	ldr	r3, [r3, #0]
10041d9a:	071b      	lsls	r3, r3, #28
10041d9c:	d411      	bmi.n	10041dc2 <__low_level_init+0x76>
    if (load_hot_table)
10041d9e:	2a11      	cmp	r2, #17
10041da0:	dd02      	ble.n	10041da8 <__low_level_init+0x5c>
      SET_BORconfigStatus(TRUE);
10041da2:	2001      	movs	r0, #1
10041da4:	f7ff ffae 	bl	10041d04 <SET_BORconfigStatus>
    wakeupFromSleepFlag = 1; /* A wakeup from Standby or Sleep occurred */
10041da8:	2201      	movs	r2, #1
10041daa:	4b13      	ldr	r3, [pc, #76]	; (10041df8 <__low_level_init+0xac>)
10041dac:	701a      	strb	r2, [r3, #0]
    CS_contextRestore();     /* Restore the context */
10041dae:	f7fe f9b0 	bl	10040112 <CS_contextRestore>
  __ASM volatile ("dsb");
10041db2:	f3bf 8f4f 	dsb	sy
  SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
10041db6:	4a11      	ldr	r2, [pc, #68]	; (10041dfc <__low_level_init+0xb0>)
10041db8:	4b11      	ldr	r3, [pc, #68]	; (10041e00 <__low_level_init+0xb4>)
10041dba:	60da      	str	r2, [r3, #12]
10041dbc:	f3bf 8f4f 	dsb	sy
10041dc0:	e7fe      	b.n	10041dc0 <__low_level_init+0x74>
    return;
  }
  
  /* Check if the next transaction is enough in the future */
  currTimeTHR = BLUE_CTRL->CURRENT_TIME + TIMEOUT_THRESHOLD;
10041dc2:	2590      	movs	r5, #144	; 0x90
  time_diff = TIME24_DIFF(rfTimeout, currTimeTHR);
10041dc4:	4c0f      	ldr	r4, [pc, #60]	; (10041e04 <__low_level_init+0xb8>)
  currTimeTHR = BLUE_CTRL->CURRENT_TIME + TIMEOUT_THRESHOLD;
10041dc6:	05ed      	lsls	r5, r5, #23
10041dc8:	6928      	ldr	r0, [r5, #16]
  time_diff = TIME24_DIFF(rfTimeout, currTimeTHR);
10041dca:	6823      	ldr	r3, [r4, #0]
10041dcc:	3b28      	subs	r3, #40	; 0x28
10041dce:	1a1b      	subs	r3, r3, r0
10041dd0:	021b      	lsls	r3, r3, #8
  if (time_diff > 0) {
10041dd2:	2b00      	cmp	r3, #0
10041dd4:	dde8      	ble.n	10041da8 <__low_level_init+0x5c>
    /* There is enough time to load the hot table */
    if (load_hot_table)
10041dd6:	2a11      	cmp	r2, #17
10041dd8:	dd02      	ble.n	10041de0 <__low_level_init+0x94>
      SET_BORconfigStatus(TRUE);
10041dda:	2001      	movs	r0, #1
10041ddc:	f7ff ff92 	bl	10041d04 <SET_BORconfigStatus>
    /* Restore the Timeout register content after wakeup */
    BLUE_CTRL->TIMEOUT = rfTimeout;    
10041de0:	6823      	ldr	r3, [r4, #0]
10041de2:	606b      	str	r3, [r5, #4]
10041de4:	e7e0      	b.n	10041da8 <__low_level_init+0x5c>
}
10041de6:	2001      	movs	r0, #1
10041de8:	b005      	add	sp, #20
10041dea:	bd30      	pop	{r4, r5, pc}
10041dec:	40200000 	.word	0x40200000
10041df0:	20000014 	.word	0x20000014
10041df4:	200000c0 	.word	0x200000c0
10041df8:	2000000c 	.word	0x2000000c
10041dfc:	05fa0004 	.word	0x05fa0004
10041e00:	e000ed00 	.word	0xe000ed00
10041e04:	20000018 	.word	0x20000018

10041e08 <RESET_HANDLER>:
{
10041e08:	b570      	push	{r4, r5, r6, lr}
  if(__low_level_init()==1)	{
10041e0a:	f7ff ff9f 	bl	10041d4c <__low_level_init>
10041e0e:	2801      	cmp	r0, #1
10041e10:	d117      	bne.n	10041e42 <RESET_HANDLER+0x3a>
10041e12:	2300      	movs	r3, #0
    for(pulDest = &_sdata; pulDest < &_edata; )
10041e14:	4814      	ldr	r0, [pc, #80]	; (10041e68 <RESET_HANDLER+0x60>)
10041e16:	4915      	ldr	r1, [pc, #84]	; (10041e6c <RESET_HANDLER+0x64>)
      *(pulDest++) = *(pulSrc++);
10041e18:	4c15      	ldr	r4, [pc, #84]	; (10041e70 <RESET_HANDLER+0x68>)
    for(pulDest = &_sdata; pulDest < &_edata; )
10041e1a:	181a      	adds	r2, r3, r0
10041e1c:	428a      	cmp	r2, r1
10041e1e:	d316      	bcc.n	10041e4e <RESET_HANDLER+0x46>
10041e20:	2300      	movs	r3, #0
    for(pulDest = &_sdata2; pulDest < &_edata2; )
10041e22:	4814      	ldr	r0, [pc, #80]	; (10041e74 <RESET_HANDLER+0x6c>)
10041e24:	4914      	ldr	r1, [pc, #80]	; (10041e78 <RESET_HANDLER+0x70>)
      *(pulDest++) = *(pulSrc++);
10041e26:	4c15      	ldr	r4, [pc, #84]	; (10041e7c <RESET_HANDLER+0x74>)
    for(pulDest = &_sdata2; pulDest < &_edata2; )
10041e28:	181a      	adds	r2, r3, r0
10041e2a:	428a      	cmp	r2, r1
10041e2c:	d313      	bcc.n	10041e56 <RESET_HANDLER+0x4e>
      *(pulDest++) = 0;
10041e2e:	2100      	movs	r1, #0
10041e30:	4b13      	ldr	r3, [pc, #76]	; (10041e80 <RESET_HANDLER+0x78>)
    for(pulDest = &_sbssblue; pulDest < &_ebssblue; )
10041e32:	4a14      	ldr	r2, [pc, #80]	; (10041e84 <RESET_HANDLER+0x7c>)
10041e34:	4293      	cmp	r3, r2
10041e36:	d312      	bcc.n	10041e5e <RESET_HANDLER+0x56>
      *(pulDest++) = 0;
10041e38:	2100      	movs	r1, #0
10041e3a:	4b13      	ldr	r3, [pc, #76]	; (10041e88 <RESET_HANDLER+0x80>)
    for(pulDest = &_sbss; pulDest < &_ebss; )
10041e3c:	4a13      	ldr	r2, [pc, #76]	; (10041e8c <RESET_HANDLER+0x84>)
10041e3e:	4293      	cmp	r3, r2
10041e40:	d30f      	bcc.n	10041e62 <RESET_HANDLER+0x5a>
  __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
10041e42:	4b13      	ldr	r3, [pc, #76]	; (10041e90 <RESET_HANDLER+0x88>)
10041e44:	f383 8808 	msr	MSP, r3
  main();
10041e48:	f004 f910 	bl	1004606c <main>
}
10041e4c:	bd70      	pop	{r4, r5, r6, pc}
      *(pulDest++) = *(pulSrc++);
10041e4e:	58e5      	ldr	r5, [r4, r3]
10041e50:	3304      	adds	r3, #4
10041e52:	6015      	str	r5, [r2, #0]
10041e54:	e7e1      	b.n	10041e1a <RESET_HANDLER+0x12>
      *(pulDest++) = *(pulSrc++);
10041e56:	58e5      	ldr	r5, [r4, r3]
10041e58:	3304      	adds	r3, #4
10041e5a:	6015      	str	r5, [r2, #0]
10041e5c:	e7e4      	b.n	10041e28 <RESET_HANDLER+0x20>
      *(pulDest++) = 0;
10041e5e:	c302      	stmia	r3!, {r1}
10041e60:	e7e8      	b.n	10041e34 <RESET_HANDLER+0x2c>
      *(pulDest++) = 0;
10041e62:	c302      	stmia	r3!, {r1}
10041e64:	e7eb      	b.n	10041e3e <RESET_HANDLER+0x36>
10041e66:	46c0      	nop			; (mov r8, r8)
10041e68:	20000d18 	.word	0x20000d18
10041e6c:	20000dc0 	.word	0x20000dc0
10041e70:	100601d0 	.word	0x100601d0
10041e74:	20000008 	.word	0x20000008
10041e78:	20000034 	.word	0x20000034
10041e7c:	100601a4 	.word	0x100601a4
10041e80:	200000c0 	.word	0x200000c0
10041e84:	200002cc 	.word	0x200002cc
10041e88:	200002cc 	.word	0x200002cc
10041e8c:	20000d18 	.word	0x20000d18
10041e90:	20006000 	.word	0x20006000

10041e94 <DeviceConfiguration>:
  
}
#endif

void DeviceConfiguration(BOOL coldStart, BOOL waitLS_Ready)
{
10041e94:	b570      	push	{r4, r5, r6, lr}
10041e96:	b08a      	sub	sp, #40	; 0x28
  uint32_t current_time;
  uint32_t Trimm_config;
  uint8_t pmu_ana_user;
  PartInfoType Device_partInfo;
  volatile uint8_t cold_start_config[] = COLD_START_CONFIGURATION;
10041e98:	ac03      	add	r4, sp, #12
{
10041e9a:	0005      	movs	r5, r0
10041e9c:	000e      	movs	r6, r1
  volatile uint8_t cold_start_config[] = COLD_START_CONFIGURATION;
10041e9e:	2219      	movs	r2, #25
10041ea0:	493f      	ldr	r1, [pc, #252]	; (10041fa0 <DeviceConfiguration+0x10c>)
10041ea2:	0020      	movs	r0, r4
10041ea4:	f004 fc7f 	bl	100467a6 <memcpy>

  /* Get partInfo */
  HAL_GetPartInfo(&Device_partInfo);
10041ea8:	4668      	mov	r0, sp
10041eaa:	f7fe fbe1 	bl	10040670 <HAL_GetPartInfo>
  
  if (coldStart) {    
10041eae:	2d00      	cmp	r5, #0
10041eb0:	d058      	beq.n	10041f64 <DeviceConfiguration+0xd0>
    /* High Speed Crystal Configuration */
#if (HS_SPEED_XTAL == HS_SPEED_XTAL_32MHZ)
    cold_start_config[14] = HIGH_FREQ_32M;
10041eb2:	2344      	movs	r3, #68	; 0x44
    /* Set 32MHz_SEL bit in the System controller register */
    SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10041eb4:	4a3b      	ldr	r2, [pc, #236]	; (10041fa4 <DeviceConfiguration+0x110>)
    cold_start_config[14] = HIGH_FREQ_32M;
10041eb6:	73a3      	strb	r3, [r4, #14]
    SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10041eb8:	7a11      	ldrb	r1, [r2, #8]
10041eba:	3b43      	subs	r3, #67	; 0x43
10041ebc:	430b      	orrs	r3, r1
10041ebe:	7213      	strb	r3, [r2, #8]
#else
#warning "No definition for Low Speed Crystal Source"
#endif

    /* Setup RCO32K trimming value in PMU_ANA_USER_REG  */
    Trimm_config = *(volatile uint32_t*)RCO32K_TRIMMING_FLASH_ADDR;
10041ec0:	4b39      	ldr	r3, [pc, #228]	; (10041fa8 <DeviceConfiguration+0x114>)
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10041ec2:	4a3a      	ldr	r2, [pc, #232]	; (10041fac <DeviceConfiguration+0x118>)
    Trimm_config = *(volatile uint32_t*)RCO32K_TRIMMING_FLASH_ADDR;
10041ec4:	681b      	ldr	r3, [r3, #0]
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10041ec6:	0c19      	lsrs	r1, r3, #16
10041ec8:	4291      	cmp	r1, r2
10041eca:	d108      	bne.n	10041ede <DeviceConfiguration+0x4a>
      cold_start_config[23] &= ~0x70;                  // Clear the register content bit 4-5-6
10041ecc:	2070      	movs	r0, #112	; 0x70
10041ece:	7de1      	ldrb	r1, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x7)<<4;  // Store the RCO32K trimming value in bit 4-5-6
10041ed0:	011b      	lsls	r3, r3, #4
      cold_start_config[23] &= ~0x70;                  // Clear the register content bit 4-5-6
10041ed2:	4381      	bics	r1, r0
10041ed4:	75e1      	strb	r1, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x7)<<4;  // Store the RCO32K trimming value in bit 4-5-6
10041ed6:	7de1      	ldrb	r1, [r4, #23]
10041ed8:	4003      	ands	r3, r0
10041eda:	430b      	orrs	r3, r1
10041edc:	75e3      	strb	r3, [r4, #23]
    }
 
    /* Setup LDO1V2 trimming value in ATB1_ANA_ENG_REG  */
    Trimm_config = *(volatile uint32_t*)LDO1V2_TRIMMING_FLASH_ADDR;
10041ede:	4b34      	ldr	r3, [pc, #208]	; (10041fb0 <DeviceConfiguration+0x11c>)
10041ee0:	681b      	ldr	r3, [r3, #0]
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10041ee2:	0c19      	lsrs	r1, r3, #16
10041ee4:	4291      	cmp	r1, r2
10041ee6:	d108      	bne.n	10041efa <DeviceConfiguration+0x66>
      cold_start_config[5] &= ~0x30;                 // Clear the register content of bit 4 and 5
10041ee8:	2030      	movs	r0, #48	; 0x30
10041eea:	7961      	ldrb	r1, [r4, #5]
      cold_start_config[5] |= (Trimm_config&0x3)<<4; // Store the LDO1V2 trimming value in bit 4 and 5
10041eec:	011b      	lsls	r3, r3, #4
      cold_start_config[5] &= ~0x30;                 // Clear the register content of bit 4 and 5
10041eee:	4381      	bics	r1, r0
10041ef0:	7161      	strb	r1, [r4, #5]
      cold_start_config[5] |= (Trimm_config&0x3)<<4; // Store the LDO1V2 trimming value in bit 4 and 5
10041ef2:	7961      	ldrb	r1, [r4, #5]
10041ef4:	4003      	ands	r3, r0
10041ef6:	430b      	orrs	r3, r1
10041ef8:	7163      	strb	r3, [r4, #5]
    }

    /* Setup Battery Level Detector Threshold value in PMU_ANA_USER_REG  */
    Trimm_config = *(volatile uint32_t*)SET_BLD_LVL_TRIMMING_FLASH_ADDR;
10041efa:	4b2e      	ldr	r3, [pc, #184]	; (10041fb4 <DeviceConfiguration+0x120>)
10041efc:	681b      	ldr	r3, [r3, #0]
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10041efe:	0c19      	lsrs	r1, r3, #16
10041f00:	4291      	cmp	r1, r2
10041f02:	d107      	bne.n	10041f14 <DeviceConfiguration+0x80>
      cold_start_config[23] &= ~0x03;              // Clear the register content of bit 0 and 1
10041f04:	2103      	movs	r1, #3
10041f06:	7de2      	ldrb	r2, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x3); // Store the BLD_LVL trimming value in bit 0 and 1
10041f08:	400b      	ands	r3, r1
      cold_start_config[23] &= ~0x03;              // Clear the register content of bit 0 and 1
10041f0a:	438a      	bics	r2, r1
10041f0c:	75e2      	strb	r2, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x3); // Store the BLD_LVL trimming value in bit 0 and 1
10041f0e:	7de2      	ldrb	r2, [r4, #23]
10041f10:	4313      	orrs	r3, r2
10041f12:	75e3      	strb	r3, [r4, #23]
    }

    /* BOR configuration. Note: this setup shall be executed after the SMPS configuration*/
#if (BOR_CONFIG == BOR_ON)
    /* Clear the 3 bit of the CLOCK_LOW_ENG_REG register */
    cold_start_config[11] &= ~(1<<2);
10041f14:	2204      	movs	r2, #4
10041f16:	7ae3      	ldrb	r3, [r4, #11]
    if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10041f18:	4669      	mov	r1, sp
    cold_start_config[11] &= ~(1<<2);
10041f1a:	4393      	bics	r3, r2
10041f1c:	72e3      	strb	r3, [r4, #11]
    if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10041f1e:	466b      	mov	r3, sp
10041f20:	785b      	ldrb	r3, [r3, #1]
10041f22:	7889      	ldrb	r1, [r1, #2]
10041f24:	4093      	lsls	r3, r2
10041f26:	430b      	orrs	r3, r1
10041f28:	2b11      	cmp	r3, #17
10041f2a:	dd06      	ble.n	10041f3a <DeviceConfiguration+0xa6>
      /* Set the 3 bit of the PMU_ANA_USER register */
      cold_start_config[23] |= (1<<2);    
10041f2c:	7de3      	ldrb	r3, [r4, #23]
10041f2e:	431a      	orrs	r2, r3
10041f30:	75e2      	strb	r2, [r4, #23]
      pmu_ana_user = cold_start_config[23];
10041f32:	7de0      	ldrb	r0, [r4, #23]
10041f34:	b2c0      	uxtb	r0, r0
      BOR_ConfigSave(pmu_ana_user);
10041f36:	f7ff fec1 	bl	10041cbc <BOR_ConfigSave>
#else
#error "No definition for BOR Configuration"
#endif

    /* Cold start configuration device */
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)cold_start_config & 0x0000FFFFU);
10041f3a:	2380      	movs	r3, #128	; 0x80
10041f3c:	2290      	movs	r2, #144	; 0x90
10041f3e:	0424      	lsls	r4, r4, #16
10041f40:	0c24      	lsrs	r4, r4, #16
10041f42:	025b      	lsls	r3, r3, #9
10041f44:	431c      	orrs	r4, r3
10041f46:	05d2      	lsls	r2, r2, #23
10041f48:	60d4      	str	r4, [r2, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10041f4a:	68d1      	ldr	r1, [r2, #12]
10041f4c:	4219      	tst	r1, r3
10041f4e:	d1fc      	bne.n	10041f4a <DeviceConfiguration+0xb6>

    /* Configure RF FrontEnd */
    if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10041f50:	466b      	mov	r3, sp
10041f52:	466a      	mov	r2, sp
10041f54:	785b      	ldrb	r3, [r3, #1]
10041f56:	7892      	ldrb	r2, [r2, #2]
10041f58:	011b      	lsls	r3, r3, #4
10041f5a:	4313      	orrs	r3, r2
10041f5c:	2b11      	cmp	r3, #17
10041f5e:	dd01      	ble.n	10041f64 <DeviceConfiguration+0xd0>
      Set_RF_FrontEnd();
10041f60:	f7ff fe86 	bl	10041c70 <Set_RF_FrontEnd>
  /* Wait until HS is ready. The slow clock period 
  * measurement is done automatically each time the
  * device enters in active2 state and the HS is ready.
  * The interrupt signals that a measurement is done.
  */
  while(CKGEN_BLE->CLK32K_IT == 0);
10041f64:	4b14      	ldr	r3, [pc, #80]	; (10041fb8 <DeviceConfiguration+0x124>)
10041f66:	8b1a      	ldrh	r2, [r3, #24]
10041f68:	2a00      	cmp	r2, #0
10041f6a:	d0fc      	beq.n	10041f66 <DeviceConfiguration+0xd2>
  CKGEN_BLE->CLK32K_IT = 1;
10041f6c:	2201      	movs	r2, #1
10041f6e:	831a      	strh	r2, [r3, #24]
  CKGEN_BLE->CLK32K_COUNT = 23; //Restore the window length for slow clock measurement.
10041f70:	3216      	adds	r2, #22
10041f72:	819a      	strh	r2, [r3, #12]
  CKGEN_BLE->CLK32K_PERIOD = 0;
10041f74:	2200      	movs	r2, #0
10041f76:	611a      	str	r2, [r3, #16]
  
  
  /* Wait until the RO or 32KHz is ready */
  if (waitLS_Ready) {
10041f78:	4296      	cmp	r6, r2
10041f7a:	d007      	beq.n	10041f8c <DeviceConfiguration+0xf8>
    current_time = BLUE_CTRL->CURRENT_TIME;
10041f7c:	2390      	movs	r3, #144	; 0x90
    while(((BLUE_CTRL->CURRENT_TIME)&0x10) == (current_time&0x10));
10041f7e:	2110      	movs	r1, #16
    current_time = BLUE_CTRL->CURRENT_TIME;
10041f80:	05db      	lsls	r3, r3, #23
10041f82:	6918      	ldr	r0, [r3, #16]
    while(((BLUE_CTRL->CURRENT_TIME)&0x10) == (current_time&0x10));
10041f84:	691a      	ldr	r2, [r3, #16]
10041f86:	4042      	eors	r2, r0
10041f88:	420a      	tst	r2, r1
10041f8a:	d0fb      	beq.n	10041f84 <DeviceConfiguration+0xf0>
    /* Wait the LS stabilization */
    Wait_LS_Stabilization();
#endif
  }

  if (coldStart) {
10041f8c:	2d00      	cmp	r5, #0
10041f8e:	d002      	beq.n	10041f96 <DeviceConfiguration+0x102>
#if (HS_SPEED_XTAL == HS_SPEED_XTAL_32MHZ)
#ifndef FORCE_CORE_TO_16MHZ
    /* AHB up converter command register write*/
    AHBUPCONV->COMMAND = 0x15;
10041f90:	2215      	movs	r2, #21
10041f92:	4b0a      	ldr	r3, [pc, #40]	; (10041fbc <DeviceConfiguration+0x128>)
10041f94:	701a      	strb	r2, [r3, #0]
#endif
#endif
  }
  
  /* Unlock the Flash */
  flash_sw_lock = FLASH_UNLOCK_WORD;
10041f96:	4a0a      	ldr	r2, [pc, #40]	; (10041fc0 <DeviceConfiguration+0x12c>)
10041f98:	4b0a      	ldr	r3, [pc, #40]	; (10041fc4 <DeviceConfiguration+0x130>)
10041f9a:	601a      	str	r2, [r3, #0]
}
10041f9c:	b00a      	add	sp, #40	; 0x28
10041f9e:	bd70      	pop	{r4, r5, r6, pc}
10041fa0:	1005f954 	.word	0x1005f954
10041fa4:	40200000 	.word	0x40200000
10041fa8:	100007e8 	.word	0x100007e8
10041fac:	0000aa55 	.word	0x0000aa55
10041fb0:	100007e4 	.word	0x100007e4
10041fb4:	100007b0 	.word	0x100007b0
10041fb8:	48100000 	.word	0x48100000
10041fbc:	40c00000 	.word	0x40c00000
10041fc0:	fcecbccc 	.word	0xfcecbccc
10041fc4:	20000014 	.word	0x20000014

10041fc8 <NMI_Handler>:
  __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
10041fc8:	f3ef 8008 	mrs	r0, MSP

/**
 * @brief  This function handles NMI exception.
 */
NOSTACK_FUNCTION(NORETURN_FUNCTION(void NMI_Handler(void))) {
	HAL_CrashHandler(__get_MSP(), NMI_SIGNATURE);
10041fcc:	4901      	ldr	r1, [pc, #4]	; (10041fd4 <NMI_Handler+0xc>)
10041fce:	f7fe fb8f 	bl	100406f0 <HAL_CrashHandler>
10041fd2:	e7fe      	b.n	10041fd2 <NMI_Handler+0xa>
10041fd4:	bcec0001 	.word	0xbcec0001

10041fd8 <HardFault_Handler>:
10041fd8:	f3ef 8008 	mrs	r0, MSP

/**
 * @brief  This function handles Hard Fault exception.
 */
NOSTACK_FUNCTION(NORETURN_FUNCTION(void HardFault_Handler(void))) {
	HAL_CrashHandler(__get_MSP(), HARD_FAULT_SIGNATURE);
10041fdc:	4901      	ldr	r1, [pc, #4]	; (10041fe4 <HardFault_Handler+0xc>)
10041fde:	f7fe fb87 	bl	100406f0 <HAL_CrashHandler>
10041fe2:	e7fe      	b.n	10041fe2 <HardFault_Handler+0xa>
10041fe4:	bcec0002 	.word	0xbcec0002

10041fe8 <SVC_Handler>:

/**
 * @brief  This function handles SVCall exception.
 */
void SVC_Handler(void) {
}
10041fe8:	4770      	bx	lr
	...

10041fec <SysTick_Handler>:
/**
 * @brief  This function handles SysTick Handler.
 */
extern volatile uint32_t systick_counter;
void SysTick_Handler(void) {
	systick_counter++;
10041fec:	4a02      	ldr	r2, [pc, #8]	; (10041ff8 <SysTick_Handler+0xc>)
10041fee:	6813      	ldr	r3, [r2, #0]
10041ff0:	3301      	adds	r3, #1
10041ff2:	6013      	str	r3, [r2, #0]
}
10041ff4:	4770      	bx	lr
10041ff6:	46c0      	nop			; (mov r8, r8)
10041ff8:	20000468 	.word	0x20000468

10041ffc <UART_Handler>:
		}

	}
}
#endif
void UART_Handler(void) {
10041ffc:	b507      	push	{r0, r1, r2, lr}
	uint8_t data;

	while (UART_GetITStatus(UART_IT_RX) != RESET) {
10041ffe:	2010      	movs	r0, #16
10042000:	f7ff fb84 	bl	1004170c <UART_GetITStatus>
10042004:	2800      	cmp	r0, #0
10042006:	d108      	bne.n	1004201a <UART_Handler+0x1e>
		/* The Interrupt flag is cleared from the FIFO manager */
		data = UART_ReceiveData() & 0xFF;
		hci_input(&data, 1);
	}

	if (UART_GetITStatus(UART_IT_TX) != RESET) {
10042008:	3020      	adds	r0, #32
1004200a:	f7ff fb7f 	bl	1004170c <UART_GetITStatus>
1004200e:	2800      	cmp	r0, #0
10042010:	d002      	beq.n	10042018 <UART_Handler+0x1c>
		/* Clear the interrupt */
		UART_ClearITPendingBit(UART_IT_TX);
10042012:	2020      	movs	r0, #32
10042014:	f7ff fb84 	bl	10041720 <UART_ClearITPendingBit>
	}
}
10042018:	bd07      	pop	{r0, r1, r2, pc}
		data = UART_ReceiveData() & 0xFF;
1004201a:	f7ff fb63 	bl	100416e4 <UART_ReceiveData>
1004201e:	466b      	mov	r3, sp
10042020:	71d8      	strb	r0, [r3, #7]
10042022:	3307      	adds	r3, #7
		hci_input(&data, 1);
10042024:	2101      	movs	r1, #1
10042026:	0018      	movs	r0, r3
10042028:	f004 f8c8 	bl	100461bc <hci_input>
1004202c:	e7e7      	b.n	10041ffe <UART_Handler+0x2>
	...

10042030 <DMA_Handler>:

/**
 * @brief  This function handles DMA Handler.
 */
void DMA_Handler(void) {
10042030:	b510      	push	{r4, lr}
	/* Check DMA_CH_UART_TX Transfer Complete interrupt */
	if (DMA_GetFlagStatus(DMA_FLAG_TC_UART_TX)) {
10042032:	2020      	movs	r0, #32
10042034:	f7ff f8ba 	bl	100411ac <DMA_GetFlagStatus>
10042038:	2800      	cmp	r0, #0
1004203a:	d00c      	beq.n	10042056 <DMA_Handler+0x26>
		DMA_ClearFlag(DMA_FLAG_TC_UART_TX);
1004203c:	2020      	movs	r0, #32
1004203e:	f7ff f8bd 	bl	100411bc <DMA_ClearFlag>

		/* DMA1 finished the transfer of SrcBuffer */
		dma_state = DMA_IDLE;
10042042:	2200      	movs	r2, #0

		/* DMA_CH disable */
		DMA_CH_UART_TX->CCR_b.EN = RESET;
10042044:	2101      	movs	r1, #1
		dma_state = DMA_IDLE;
10042046:	4b04      	ldr	r3, [pc, #16]	; (10042058 <DMA_Handler+0x28>)
10042048:	701a      	strb	r2, [r3, #0]
		DMA_CH_UART_TX->CCR_b.EN = RESET;
1004204a:	4a04      	ldr	r2, [pc, #16]	; (1004205c <DMA_Handler+0x2c>)
1004204c:	6813      	ldr	r3, [r2, #0]
1004204e:	438b      	bics	r3, r1
10042050:	6013      	str	r3, [r2, #0]
		GPIO_CTS_Input();
		GPIO_CTS_Irq(DISABLE);
		while(GPIO_ReadBit(UART_CTS_PIN) == Bit_RESET);// wait for CTS high
		GPIO_CTS_Irq(ENABLE);
#endif
		advance_dma();
10042052:	f004 fb5f 	bl	10046714 <advance_dma>
	}
}
10042056:	bd10      	pop	{r4, pc}
10042058:	20000455 	.word	0x20000455
1004205c:	a000001c 	.word	0xa000001c

10042060 <Blue_Handler>:
#endif

/* irq_count used for the aci_hal_transmitter_test_packets_process() command implementation */
uint32_t irq_count = 0;

void Blue_Handler(void) {
10042060:	b510      	push	{r4, lr}
	// Call RAL_Isr
	RAL_Isr();
10042062:	f00c f9db 	bl	1004e41c <RAL_Isr>
	irq_count++;
10042066:	4a02      	ldr	r2, [pc, #8]	; (10042070 <Blue_Handler+0x10>)
10042068:	6813      	ldr	r3, [r2, #0]
1004206a:	3301      	adds	r3, #1
1004206c:	6013      	str	r3, [r2, #0]
}
1004206e:	bd10      	pop	{r4, pc}
10042070:	20000344 	.word	0x20000344

10042074 <DTM_SystemInit>:
#endif

}

#define FLASH_ADDRESS_STACK_DEV_ID_DATA   (FLASH_END - N_BYTES_PAGE + 1)
void DTM_SystemInit(void) {
10042074:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	uint32_t current_time;
	uint8_t *dev_config_addr;
	PartInfoType Device_partInfo;

	/* Remap the vector table */
	FLASH->CONFIG = FLASH_PREMAP_MAIN;
10042076:	2208      	movs	r2, #8
10042078:	4b66      	ldr	r3, [pc, #408]	; (10042214 <DTM_SystemInit+0x1a0>)

	/* Load device configuration from FLASH memory */
	/* The first 256 bytes are for stacklib_stored_device_id_data */
	dev_config_addr = (uint8_t *) (FLASH_ADDRESS_STACK_DEV_ID_DATA + 0x100);
	memcpy(&deviceConfig, dev_config_addr, sizeof(deviceConfig));
1004207a:	4d67      	ldr	r5, [pc, #412]	; (10042218 <DTM_SystemInit+0x1a4>)
	FLASH->CONFIG = FLASH_PREMAP_MAIN;
1004207c:	809a      	strh	r2, [r3, #4]
	memcpy(&deviceConfig, dev_config_addr, sizeof(deviceConfig));
1004207e:	4967      	ldr	r1, [pc, #412]	; (1004221c <DTM_SystemInit+0x1a8>)
10042080:	3206      	adds	r2, #6
10042082:	0028      	movs	r0, r5
10042084:	f004 fb8f 	bl	100467a6 <memcpy>
		tmp32[2] = ((((uint32_t)deviceConfig.max_conn_event_length)&0x00FFFFFF)<<8) | (((uint32_t)deviceConfig.MasterSCA)<<0);
		tmp32[3] = (((uint32_t)0xFF)<<24) | (((uint32_t)0xFF)<<16) | (((uint32_t)deviceConfig.Test_mode)<<8) | ((((uint32_t)deviceConfig.max_conn_event_length)&0xFF000000)>>24);
		FLASH_ProgramWordBurst(FLASH_ADDRESS_STACK_DEV_ID_DATA + 0x100, tmp32);
	}
#elif (HS_SPEED_XTAL==HS_SPEED_XTAL_32MHZ)
	if (deviceConfig.HS_crystal == HS_CRYSTAL_16MHZ) {
10042088:	782b      	ldrb	r3, [r5, #0]
1004208a:	2bff      	cmp	r3, #255	; 0xff
1004208c:	d10c      	bne.n	100420a8 <DTM_SystemInit+0x34>
		uint32_t tmp32 = (((uint32_t) deviceConfig.Reserved) << 24) | (((uint32_t) deviceConfig.SMPS_management) << 16) | (((uint32_t) deviceConfig.LS_source) << 8) | (((uint32_t) 0x00) << 0);
1004208e:	78e9      	ldrb	r1, [r5, #3]
10042090:	78ab      	ldrb	r3, [r5, #2]
10042092:	0609      	lsls	r1, r1, #24
10042094:	041b      	lsls	r3, r3, #16
10042096:	4319      	orrs	r1, r3
10042098:	786b      	ldrb	r3, [r5, #1]
		deviceConfig.HS_crystal = 0x00; // Set HS_CRYSTAL_32MHZ
		FLASH_ProgramWord(FLASH_ADDRESS_STACK_DEV_ID_DATA + 0x100, tmp32);
1004209a:	4860      	ldr	r0, [pc, #384]	; (1004221c <DTM_SystemInit+0x1a8>)
		uint32_t tmp32 = (((uint32_t) deviceConfig.Reserved) << 24) | (((uint32_t) deviceConfig.SMPS_management) << 16) | (((uint32_t) deviceConfig.LS_source) << 8) | (((uint32_t) 0x00) << 0);
1004209c:	021b      	lsls	r3, r3, #8
1004209e:	4319      	orrs	r1, r3
		deviceConfig.HS_crystal = 0x00; // Set HS_CRYSTAL_32MHZ
100420a0:	2300      	movs	r3, #0
100420a2:	702b      	strb	r3, [r5, #0]
		FLASH_ProgramWord(FLASH_ADDRESS_STACK_DEV_ID_DATA + 0x100, tmp32);
100420a4:	f7ff f8ae 	bl	10041204 <FLASH_ProgramWord>
	HAL_GetPartInfo(&Device_partInfo);
100420a8:	ae01      	add	r6, sp, #4
100420aa:	0030      	movs	r0, r6
100420ac:	f7fe fae0 	bl	10040670 <HAL_GetPartInfo>
	if (deviceConfig.HS_crystal == HS_CRYSTAL_32MHZ) {
100420b0:	782b      	ldrb	r3, [r5, #0]
100420b2:	4c5b      	ldr	r4, [pc, #364]	; (10042220 <DTM_SystemInit+0x1ac>)
100420b4:	2b00      	cmp	r3, #0
100420b6:	d111      	bne.n	100420dc <DTM_SystemInit+0x68>
		cold_start_config[14] = HIGH_FREQ_32M;
100420b8:	3344      	adds	r3, #68	; 0x44
		cold_start_config[14] = HIGH_FREQ_16M;
100420ba:	73a3      	strb	r3, [r4, #14]
	if (deviceConfig.LS_source == LS_SOURCE_32KHZ) {
100420bc:	786b      	ldrb	r3, [r5, #1]
100420be:	2b00      	cmp	r3, #0
100420c0:	d10e      	bne.n	100420e0 <DTM_SystemInit+0x6c>
		cold_start_config[20] = LOW_FREQ_XO;
100420c2:	335b      	adds	r3, #91	; 0x5b
		cold_start_config[20] = LOW_FREQ_RO;
100420c4:	7523      	strb	r3, [r4, #20]
	switch (deviceConfig.SMPS_management) {
100420c6:	78ab      	ldrb	r3, [r5, #2]
100420c8:	2b00      	cmp	r3, #0
100420ca:	d00b      	beq.n	100420e4 <DTM_SystemInit+0x70>
100420cc:	2b01      	cmp	r3, #1
100420ce:	d010      	beq.n	100420f2 <DTM_SystemInit+0x7e>
		cold_start_config[11] = SMPS_ON;
100420d0:	234c      	movs	r3, #76	; 0x4c
100420d2:	72e3      	strb	r3, [r4, #11]
		cold_start_config[8] = SMPS_10uH_RM1;
100420d4:	3b2c      	subs	r3, #44	; 0x2c
100420d6:	7223      	strb	r3, [r4, #8]
		cold_start_config[17] = SMPS_10uH_PMU;
100420d8:	3392      	adds	r3, #146	; 0x92
100420da:	e008      	b.n	100420ee <DTM_SystemInit+0x7a>
		cold_start_config[14] = HIGH_FREQ_16M;
100420dc:	2340      	movs	r3, #64	; 0x40
100420de:	e7ec      	b.n	100420ba <DTM_SystemInit+0x46>
		cold_start_config[20] = LOW_FREQ_RO;
100420e0:	231b      	movs	r3, #27
100420e2:	e7ef      	b.n	100420c4 <DTM_SystemInit+0x50>
		cold_start_config[11] = SMPS_ON;
100420e4:	234c      	movs	r3, #76	; 0x4c
100420e6:	72e3      	strb	r3, [r4, #11]
		cold_start_config[8] = SMPS_4_7uH_RM1;
100420e8:	3b0c      	subs	r3, #12
100420ea:	7223      	strb	r3, [r4, #8]
		cold_start_config[17] = SMPS_4_7uH_PMU;
100420ec:	337e      	adds	r3, #126	; 0x7e
		cold_start_config[17] = SMPS_10uH_PMU;
100420ee:	7463      	strb	r3, [r4, #17]
100420f0:	e001      	b.n	100420f6 <DTM_SystemInit+0x82>
		cold_start_config[11] = SMPS_OFF;
100420f2:	236c      	movs	r3, #108	; 0x6c
100420f4:	72e3      	strb	r3, [r4, #11]
	switch (deviceConfig.Test_mode) {
100420f6:	7b6b      	ldrb	r3, [r5, #13]
100420f8:	2b02      	cmp	r3, #2
100420fa:	d100      	bne.n	100420fe <DTM_SystemInit+0x8a>
100420fc:	e080      	b.n	10042200 <DTM_SystemInit+0x18c>
100420fe:	2b03      	cmp	r3, #3
10042100:	d100      	bne.n	10042104 <DTM_SystemInit+0x90>
10042102:	e081      	b.n	10042208 <DTM_SystemInit+0x194>
10042104:	2b01      	cmp	r3, #1
10042106:	d000      	beq.n	1004210a <DTM_SystemInit+0x96>
10042108:	e082      	b.n	10042210 <DTM_SystemInit+0x19c>
		cold_start_config[2] = LS_XTAL_MEAS_ATB0;
1004210a:	3336      	adds	r3, #54	; 0x36
1004210c:	70a3      	strb	r3, [r4, #2]
		cold_start_config[5] = LS_XTAL_MEAS_ATB1;
1004210e:	3b03      	subs	r3, #3
		cold_start_config[5] = USER_MODE_ATB1;
10042110:	7163      	strb	r3, [r4, #5]
	Trimm_config = *(volatile uint32_t*) RCO32K_TRIMMING_FLASH_ADDR;
10042112:	4b44      	ldr	r3, [pc, #272]	; (10042224 <DTM_SystemInit+0x1b0>)
	if ((Trimm_config >> 16) == CHECK_BYTES) {
10042114:	4a44      	ldr	r2, [pc, #272]	; (10042228 <DTM_SystemInit+0x1b4>)
	Trimm_config = *(volatile uint32_t*) RCO32K_TRIMMING_FLASH_ADDR;
10042116:	681b      	ldr	r3, [r3, #0]
	if ((Trimm_config >> 16) == CHECK_BYTES) {
10042118:	0c19      	lsrs	r1, r3, #16
1004211a:	4291      	cmp	r1, r2
1004211c:	d108      	bne.n	10042130 <DTM_SystemInit+0xbc>
		cold_start_config[23] &= ~0x70;                  // Clear the register content bit 4-5-6
1004211e:	2070      	movs	r0, #112	; 0x70
10042120:	7de1      	ldrb	r1, [r4, #23]
		cold_start_config[23] |= (Trimm_config & 0x7) << 4;  // Store the RCO32K trimming value in bit 4-5-6
10042122:	011b      	lsls	r3, r3, #4
		cold_start_config[23] &= ~0x70;                  // Clear the register content bit 4-5-6
10042124:	4381      	bics	r1, r0
10042126:	75e1      	strb	r1, [r4, #23]
		cold_start_config[23] |= (Trimm_config & 0x7) << 4;  // Store the RCO32K trimming value in bit 4-5-6
10042128:	7de1      	ldrb	r1, [r4, #23]
1004212a:	4003      	ands	r3, r0
1004212c:	430b      	orrs	r3, r1
1004212e:	75e3      	strb	r3, [r4, #23]
	Trimm_config = *(volatile uint32_t*) LDO1V2_TRIMMING_FLASH_ADDR;
10042130:	4b3e      	ldr	r3, [pc, #248]	; (1004222c <DTM_SystemInit+0x1b8>)
10042132:	681b      	ldr	r3, [r3, #0]
	if ((Trimm_config >> 16) == CHECK_BYTES) {
10042134:	0c19      	lsrs	r1, r3, #16
10042136:	4291      	cmp	r1, r2
10042138:	d108      	bne.n	1004214c <DTM_SystemInit+0xd8>
		cold_start_config[5] &= ~0x30;                 // Clear the register content of bit 4 and 5
1004213a:	2030      	movs	r0, #48	; 0x30
1004213c:	7961      	ldrb	r1, [r4, #5]
		cold_start_config[5] |= (Trimm_config & 0x3) << 4; // Store the LDO1V2 trimming value in bit 4 and 5
1004213e:	011b      	lsls	r3, r3, #4
		cold_start_config[5] &= ~0x30;                 // Clear the register content of bit 4 and 5
10042140:	4381      	bics	r1, r0
10042142:	7161      	strb	r1, [r4, #5]
		cold_start_config[5] |= (Trimm_config & 0x3) << 4; // Store the LDO1V2 trimming value in bit 4 and 5
10042144:	7961      	ldrb	r1, [r4, #5]
10042146:	4003      	ands	r3, r0
10042148:	430b      	orrs	r3, r1
1004214a:	7163      	strb	r3, [r4, #5]
	Trimm_config = *(volatile uint32_t*) SET_BLD_LVL_TRIMMING_FLASH_ADDR;
1004214c:	4b38      	ldr	r3, [pc, #224]	; (10042230 <DTM_SystemInit+0x1bc>)
1004214e:	681b      	ldr	r3, [r3, #0]
	if ((Trimm_config >> 16) == CHECK_BYTES) {
10042150:	0c19      	lsrs	r1, r3, #16
10042152:	4291      	cmp	r1, r2
10042154:	d107      	bne.n	10042166 <DTM_SystemInit+0xf2>
		cold_start_config[23] &= ~0x03;              // Clear the register content of bit 0 and 1
10042156:	2103      	movs	r1, #3
10042158:	7de2      	ldrb	r2, [r4, #23]
		cold_start_config[23] |= (Trimm_config & 0x3); // Store the BLD_LVL trimming value in bit 0 and 1
1004215a:	400b      	ands	r3, r1
		cold_start_config[23] &= ~0x03;              // Clear the register content of bit 0 and 1
1004215c:	438a      	bics	r2, r1
1004215e:	75e2      	strb	r2, [r4, #23]
		cold_start_config[23] |= (Trimm_config & 0x3); // Store the BLD_LVL trimming value in bit 0 and 1
10042160:	7de2      	ldrb	r2, [r4, #23]
10042162:	4313      	orrs	r3, r2
10042164:	75e3      	strb	r3, [r4, #23]
	cold_start_config[11] &= ~(1 << 2);
10042166:	2204      	movs	r2, #4
10042168:	7ae3      	ldrb	r3, [r4, #11]
1004216a:	4393      	bics	r3, r2
1004216c:	72e3      	strb	r3, [r4, #11]
	if (((Device_partInfo.die_major << 4) | (Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
1004216e:	7873      	ldrb	r3, [r6, #1]
10042170:	78b1      	ldrb	r1, [r6, #2]
10042172:	4093      	lsls	r3, r2
10042174:	430b      	orrs	r3, r1
10042176:	2b11      	cmp	r3, #17
10042178:	dd06      	ble.n	10042188 <DTM_SystemInit+0x114>
		cold_start_config[23] |= (1 << 2);
1004217a:	7de3      	ldrb	r3, [r4, #23]
1004217c:	431a      	orrs	r2, r3
1004217e:	75e2      	strb	r2, [r4, #23]
		pmu_ana_user = cold_start_config[23];
10042180:	7de0      	ldrb	r0, [r4, #23]
10042182:	b2c0      	uxtb	r0, r0
		BOR_ConfigSave(pmu_ana_user);
10042184:	f7ff fd9a 	bl	10041cbc <BOR_ConfigSave>
#endif 
#endif

	coldStartConfiguration();

	if (deviceConfig.HS_crystal == HS_CRYSTAL_32MHZ) {
10042188:	782b      	ldrb	r3, [r5, #0]
1004218a:	2b00      	cmp	r3, #0
1004218c:	d104      	bne.n	10042198 <DTM_SystemInit+0x124>
		/* Set 32MHz_SEL bit in the System controller register */
		SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
1004218e:	4a29      	ldr	r2, [pc, #164]	; (10042234 <DTM_SystemInit+0x1c0>)
10042190:	3301      	adds	r3, #1
10042192:	7a11      	ldrb	r1, [r2, #8]
10042194:	430b      	orrs	r3, r1
10042196:	7213      	strb	r3, [r2, #8]
	}

	/* Cold start configuration device */
	BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t) ((uint32_t) cold_start_config & 0x0000FFFFU);
10042198:	2380      	movs	r3, #128	; 0x80
1004219a:	2290      	movs	r2, #144	; 0x90
1004219c:	b2a4      	uxth	r4, r4
1004219e:	025b      	lsls	r3, r3, #9
100421a0:	431c      	orrs	r4, r3
100421a2:	05d2      	lsls	r2, r2, #23
100421a4:	60d4      	str	r4, [r2, #12]
	while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0)
100421a6:	68d1      	ldr	r1, [r2, #12]
100421a8:	4219      	tst	r1, r3
100421aa:	d1fc      	bne.n	100421a6 <DTM_SystemInit+0x132>
		;

	/* Configure RF FrontEnd */
	HAL_GetPartInfo(&Device_partInfo);
100421ac:	0030      	movs	r0, r6
100421ae:	f7fe fa5f 	bl	10040670 <HAL_GetPartInfo>
	if (((Device_partInfo.die_major << 4) | (Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
100421b2:	7873      	ldrb	r3, [r6, #1]
100421b4:	78b2      	ldrb	r2, [r6, #2]
100421b6:	011b      	lsls	r3, r3, #4
100421b8:	4313      	orrs	r3, r2
100421ba:	2b11      	cmp	r3, #17
100421bc:	dd01      	ble.n	100421c2 <DTM_SystemInit+0x14e>
		Set_RF_FrontEnd();
100421be:	f7ff fd57 	bl	10041c70 <Set_RF_FrontEnd>
	/* Wait until HS is ready. The slow clock period
	 * measurement is done automatically each time the
	 * device enters in active2 state and the HS is ready.
	 * The interrupt signals that a measurement is done.
	 */
	while (CKGEN_BLE->CLK32K_IT == 0)
100421c2:	4b1d      	ldr	r3, [pc, #116]	; (10042238 <DTM_SystemInit+0x1c4>)
100421c4:	8b1a      	ldrh	r2, [r3, #24]
100421c6:	2a00      	cmp	r2, #0
100421c8:	d0fc      	beq.n	100421c4 <DTM_SystemInit+0x150>
		;
	CKGEN_BLE->CLK32K_IT = 1;
100421ca:	2201      	movs	r2, #1
100421cc:	831a      	strh	r2, [r3, #24]
	CKGEN_BLE->CLK32K_COUNT = 23; //Restore the window length for slow clock measurement.
100421ce:	3216      	adds	r2, #22
100421d0:	819a      	strh	r2, [r3, #12]
	CKGEN_BLE->CLK32K_PERIOD = 0;
100421d2:	2200      	movs	r2, #0

	/* Wait until the RO or 32KHz is ready */
	current_time = *(volatile uint32_t *) 0x48000010;
	while (((*(volatile uint32_t *) 0x48000010) & 0x10) == (current_time & 0x10))
100421d4:	2110      	movs	r1, #16
	CKGEN_BLE->CLK32K_PERIOD = 0;
100421d6:	611a      	str	r2, [r3, #16]
	current_time = *(volatile uint32_t *) 0x48000010;
100421d8:	4b18      	ldr	r3, [pc, #96]	; (1004223c <DTM_SystemInit+0x1c8>)
100421da:	6818      	ldr	r0, [r3, #0]
	while (((*(volatile uint32_t *) 0x48000010) & 0x10) == (current_time & 0x10))
100421dc:	681a      	ldr	r2, [r3, #0]
100421de:	4042      	eors	r2, r0
100421e0:	420a      	tst	r2, r1
100421e2:	d0fb      	beq.n	100421dc <DTM_SystemInit+0x168>
		;

	if (deviceConfig.HS_crystal == HS_CRYSTAL_32MHZ) {
100421e4:	782b      	ldrb	r3, [r5, #0]
100421e6:	2b00      	cmp	r3, #0
100421e8:	d102      	bne.n	100421f0 <DTM_SystemInit+0x17c>
		/* AHB up converter command register write*/
		AHBUPCONV->COMMAND = 0x15;
100421ea:	2215      	movs	r2, #21
100421ec:	4b14      	ldr	r3, [pc, #80]	; (10042240 <DTM_SystemInit+0x1cc>)
100421ee:	701a      	strb	r2, [r3, #0]
	}

	/* Unlock the Flash */
	flash_sw_lock = FLASH_UNLOCK_WORD;
100421f0:	4b14      	ldr	r3, [pc, #80]	; (10042244 <DTM_SystemInit+0x1d0>)
100421f2:	4a15      	ldr	r2, [pc, #84]	; (10042248 <DTM_SystemInit+0x1d4>)
100421f4:	601a      	str	r2, [r3, #0]

	/* Disable all the peripherals clock except NVM, SYSCTR, PKA and RNG */
	CKGEN_SOC->CLOCK_EN = 0xE0066;
100421f6:	4a15      	ldr	r2, [pc, #84]	; (1004224c <DTM_SystemInit+0x1d8>)
100421f8:	4b15      	ldr	r3, [pc, #84]	; (10042250 <DTM_SystemInit+0x1dc>)
100421fa:	621a      	str	r2, [r3, #32]
  __ASM volatile ("cpsie i");
100421fc:	b662      	cpsie	i

	/* Enable the IRQs */
	__enable_irq();
}
100421fe:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
		cold_start_config[2] = HS_STARTUP_TIME_MEAS_ATB0;
10042200:	2304      	movs	r3, #4
		cold_start_config[2] = USER_MODE_ATB0;
10042202:	70a3      	strb	r3, [r4, #2]
		cold_start_config[5] = USER_MODE_ATB1;
10042204:	3330      	adds	r3, #48	; 0x30
10042206:	e783      	b.n	10042110 <DTM_SystemInit+0x9c>
		cold_start_config[2] = TX_RX_START_STOP_MEAS_ATB0;
10042208:	2338      	movs	r3, #56	; 0x38
1004220a:	70a3      	strb	r3, [r4, #2]
		cold_start_config[5] = TX_RX_START_STOP_MEAS_ATB1;
1004220c:	3b04      	subs	r3, #4
1004220e:	e77f      	b.n	10042110 <DTM_SystemInit+0x9c>
		cold_start_config[2] = USER_MODE_ATB0;
10042210:	2300      	movs	r3, #0
10042212:	e7f6      	b.n	10042202 <DTM_SystemInit+0x18e>
10042214:	40100000 	.word	0x40100000
10042218:	200004cc 	.word	0x200004cc
1004221c:	1007f900 	.word	0x1007f900
10042220:	20000da4 	.word	0x20000da4
10042224:	100007e8 	.word	0x100007e8
10042228:	0000aa55 	.word	0x0000aa55
1004222c:	100007e4 	.word	0x100007e4
10042230:	100007b0 	.word	0x100007b0
10042234:	40200000 	.word	0x40200000
10042238:	48100000 	.word	0x48100000
1004223c:	48000010 	.word	0x48000010
10042240:	40c00000 	.word	0x40c00000
10042244:	20000014 	.word	0x20000014
10042248:	fcecbccc 	.word	0xfcecbccc
1004224c:	000e0066 	.word	0x000e0066
10042250:	40900000 	.word	0x40900000

10042254 <DTM_StackInit>:

void DTM_StackInit(void) {
10042254:	b510      	push	{r4, lr}
	uint8_t ret;

	if (deviceConfig.max_conn_event_length > 1639344) {
10042256:	4b1e      	ldr	r3, [pc, #120]	; (100422d0 <DTM_StackInit+0x7c>)
10042258:	481e      	ldr	r0, [pc, #120]	; (100422d4 <DTM_StackInit+0x80>)
1004225a:	7a99      	ldrb	r1, [r3, #10]
1004225c:	7a5a      	ldrb	r2, [r3, #9]
1004225e:	0209      	lsls	r1, r1, #8
10042260:	4311      	orrs	r1, r2
10042262:	7ada      	ldrb	r2, [r3, #11]
10042264:	0412      	lsls	r2, r2, #16
10042266:	4311      	orrs	r1, r2
10042268:	7b1a      	ldrb	r2, [r3, #12]
1004226a:	0612      	lsls	r2, r2, #24
1004226c:	430a      	orrs	r2, r1
1004226e:	491a      	ldr	r1, [pc, #104]	; (100422d8 <DTM_StackInit+0x84>)
10042270:	428a      	cmp	r2, r1
10042272:	d901      	bls.n	10042278 <DTM_StackInit+0x24>
		BlueNRG_Stack_Init_params.hardware_config.max_conn_event_length = 0xFFFFFFFF;
10042274:	2201      	movs	r2, #1
10042276:	4252      	negs	r2, r2
	} else {
		BlueNRG_Stack_Init_params.hardware_config.max_conn_event_length = deviceConfig.max_conn_event_length;
10042278:	6282      	str	r2, [r0, #40]	; 0x28
	}
	if (deviceConfig.SlaveSCA == 0xFFFF) {
1004227a:	79da      	ldrb	r2, [r3, #7]
1004227c:	7999      	ldrb	r1, [r3, #6]
1004227e:	0212      	lsls	r2, r2, #8
10042280:	430a      	orrs	r2, r1
10042282:	4916      	ldr	r1, [pc, #88]	; (100422dc <DTM_StackInit+0x88>)
10042284:	428a      	cmp	r2, r1
10042286:	d101      	bne.n	1004228c <DTM_StackInit+0x38>
		BlueNRG_Stack_Init_params.hardware_config.slave_sca = 500;
10042288:	22fa      	movs	r2, #250	; 0xfa
1004228a:	0052      	lsls	r2, r2, #1
	} else {
		BlueNRG_Stack_Init_params.hardware_config.slave_sca = deviceConfig.SlaveSCA;
1004228c:	8582      	strh	r2, [r0, #44]	; 0x2c
	}
	if (deviceConfig.MasterSCA == 0xFF) {
1004228e:	7a1a      	ldrb	r2, [r3, #8]
10042290:	2aff      	cmp	r2, #255	; 0xff
10042292:	d115      	bne.n	100422c0 <DTM_StackInit+0x6c>
		BlueNRG_Stack_Init_params.hardware_config.master_sca = 0;
10042294:	0002      	movs	r2, r0
10042296:	2100      	movs	r1, #0
10042298:	322e      	adds	r2, #46	; 0x2e
1004229a:	7011      	strb	r1, [r2, #0]
	} else {
		BlueNRG_Stack_Init_params.hardware_config.master_sca = deviceConfig.MasterSCA;
	}
	BlueNRG_Stack_Init_params.hardware_config.ls_source = deviceConfig.LS_source;
1004229c:	0002      	movs	r2, r0
1004229e:	7859      	ldrb	r1, [r3, #1]
100422a0:	322f      	adds	r2, #47	; 0x2f
100422a2:	7011      	strb	r1, [r2, #0]
	if (deviceConfig.HS_startup_time > MAX_HS_STARTUP_TIME) {
100422a4:	791a      	ldrb	r2, [r3, #4]
100422a6:	795b      	ldrb	r3, [r3, #5]
100422a8:	021b      	lsls	r3, r3, #8
100422aa:	4313      	orrs	r3, r2
100422ac:	22c8      	movs	r2, #200	; 0xc8
100422ae:	0092      	lsls	r2, r2, #2
100422b0:	4293      	cmp	r3, r2
100422b2:	d909      	bls.n	100422c8 <DTM_StackInit+0x74>
		BlueNRG_Stack_Init_params.hardware_config.hs_startup_time = MAX_HS_STARTUP_TIME;
100422b4:	8602      	strh	r2, [r0, #48]	; 0x30
	} else {
		BlueNRG_Stack_Init_params.hardware_config.hs_startup_time = deviceConfig.HS_startup_time;
	}

	ret = BlueNRG_Stack_Initialization(&BlueNRG_Stack_Init_params);
100422b6:	f005 f88f 	bl	100473d8 <BlueNRG_Stack_Initialization>
	if (ret != 0) {
100422ba:	2800      	cmp	r0, #0
100422bc:	d006      	beq.n	100422cc <DTM_StackInit+0x78>
100422be:	e7fe      	b.n	100422be <DTM_StackInit+0x6a>
		BlueNRG_Stack_Init_params.hardware_config.master_sca = deviceConfig.MasterSCA;
100422c0:	0001      	movs	r1, r0
100422c2:	312e      	adds	r1, #46	; 0x2e
100422c4:	700a      	strb	r2, [r1, #0]
100422c6:	e7e9      	b.n	1004229c <DTM_StackInit+0x48>
		BlueNRG_Stack_Init_params.hardware_config.hs_startup_time = deviceConfig.HS_startup_time;
100422c8:	8603      	strh	r3, [r0, #48]	; 0x30
100422ca:	e7f4      	b.n	100422b6 <DTM_StackInit+0x62>
		while (1)
			;
	}
}
100422cc:	bd10      	pop	{r4, pc}
100422ce:	46c0      	nop			; (mov r8, r8)
100422d0:	200004cc 	.word	0x200004cc
100422d4:	20000d70 	.word	0x20000d70
100422d8:	001903b0 	.word	0x001903b0
100422dc:	0000ffff 	.word	0x0000ffff

100422e0 <hci_read_transmit_power_level_process>:
 uint8_t Type,
 uint8_t *Transmit_Power_Level);
 */
/* Command len: 2 + 1 */
/* Response len: 1 + 2 + 1 */
uint16_t hci_read_transmit_power_level_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100422e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100422e2:	0006      	movs	r6, r0
100422e4:	0014      	movs	r4, r2
	hci_read_transmit_power_level_cp0 *cp0 = (hci_read_transmit_power_level_cp0 *) (buffer_in + 1 + (0));

	int output_size = 1 + 2 + 1;
	/* Output params */
	hci_read_transmit_power_level_rp0 *rp0 = (hci_read_transmit_power_level_rp0 *) (buffer_out + 6);
	uint8_t Transmit_Power_Level = 0;
100422e6:	2000      	movs	r0, #0
100422e8:	466a      	mov	r2, sp
100422ea:	1dd5      	adds	r5, r2, #7
100422ec:	71d0      	strb	r0, [r2, #7]

	if (buffer_out_max_length < (1 + 2 + 1 + 6)) {
100422ee:	2b09      	cmp	r3, #9
100422f0:	d91e      	bls.n	10042330 <hci_read_transmit_power_level_process+0x50>
		return 0;
	}
	rp0->Status = hci_read_transmit_power_level(cp0->Connection_Handle /* 2 */, cp0->Type /* 1 */, &Transmit_Power_Level);
100422f2:	78b0      	ldrb	r0, [r6, #2]
100422f4:	7873      	ldrb	r3, [r6, #1]
100422f6:	0200      	lsls	r0, r0, #8
100422f8:	4318      	orrs	r0, r3
100422fa:	002a      	movs	r2, r5
100422fc:	78f1      	ldrb	r1, [r6, #3]
100422fe:	f00b f8e0 	bl	1004d4c2 <hci_read_transmit_power_level>
10042302:	71a0      	strb	r0, [r4, #6]
	rp0->Connection_Handle = cp0->Connection_Handle;
10042304:	78b3      	ldrb	r3, [r6, #2]
10042306:	7872      	ldrb	r2, [r6, #1]
10042308:	021b      	lsls	r3, r3, #8
1004230a:	4313      	orrs	r3, r2
1004230c:	71e3      	strb	r3, [r4, #7]
1004230e:	0a1b      	lsrs	r3, r3, #8
10042310:	7223      	strb	r3, [r4, #8]
	rp0->Transmit_Power_Level = Transmit_Power_Level;
10042312:	782b      	ldrb	r3, [r5, #0]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x2d;
	buffer_out[5] = 0x0c;
	return (output_size + 6);
10042314:	200a      	movs	r0, #10
	rp0->Transmit_Power_Level = Transmit_Power_Level;
10042316:	7263      	strb	r3, [r4, #9]
	buffer_out[0] = 0x04;
10042318:	2304      	movs	r3, #4
1004231a:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
1004231c:	330a      	adds	r3, #10
1004231e:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042320:	3b07      	subs	r3, #7
10042322:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042324:	3b06      	subs	r3, #6
10042326:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2d;
10042328:	332c      	adds	r3, #44	; 0x2c
1004232a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x0c;
1004232c:	3b21      	subs	r3, #33	; 0x21
1004232e:	7163      	strb	r3, [r4, #5]
}
10042330:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10042332 <hci_read_local_version_information_process>:
 uint16_t *Manufacturer_Name,
 uint16_t *LMP_PAL_Subversion);
 */
/* Command len: 0 */
/* Response len: 1 + 1 + 2 + 1 + 2 + 2 */
uint16_t hci_read_local_version_information_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042332:	b5f0      	push	{r4, r5, r6, r7, lr}
	hci_read_local_version_information_rp0 *rp0 = (hci_read_local_version_information_rp0 *) (buffer_out + 6);
	uint8_t HCI_Version = 0;
	uint16_t HCI_Revision = 0;
	uint8_t LMP_PAL_Version = 0;
	uint16_t Manufacturer_Name = 0;
	uint16_t LMP_PAL_Subversion = 0;
10042334:	2712      	movs	r7, #18
uint16_t hci_read_local_version_information_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042336:	b089      	sub	sp, #36	; 0x24
	uint8_t HCI_Version = 0;
10042338:	2000      	movs	r0, #0
uint16_t hci_read_local_version_information_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004233a:	0014      	movs	r4, r2
	uint8_t HCI_Version = 0;
1004233c:	466a      	mov	r2, sp
	uint16_t LMP_PAL_Subversion = 0;
1004233e:	446f      	add	r7, sp
	uint8_t HCI_Version = 0;
10042340:	7310      	strb	r0, [r2, #12]
	uint16_t HCI_Revision = 0;
10042342:	81d0      	strh	r0, [r2, #14]
	uint8_t LMP_PAL_Version = 0;
10042344:	7350      	strb	r0, [r2, #13]
	uint16_t Manufacturer_Name = 0;
10042346:	8210      	strh	r0, [r2, #16]
	uint16_t LMP_PAL_Subversion = 0;
10042348:	8038      	strh	r0, [r7, #0]

	if (buffer_out_max_length < (1 + 1 + 2 + 1 + 2 + 2 + 6)) {
1004234a:	2b0e      	cmp	r3, #14
1004234c:	d93e      	bls.n	100423cc <hci_read_local_version_information_process+0x9a>
		return 0;
	}
	rp0->Status = hci_read_local_version_information(&HCI_Version, &HCI_Revision, &LMP_PAL_Version, &Manufacturer_Name, &LMP_PAL_Subversion);
1004234e:	220d      	movs	r2, #13
10042350:	210e      	movs	r1, #14
10042352:	ab04      	add	r3, sp, #16
10042354:	446a      	add	r2, sp
10042356:	4469      	add	r1, sp
10042358:	9700      	str	r7, [sp, #0]
1004235a:	a803      	add	r0, sp, #12
1004235c:	f00b f85c 	bl	1004d418 <hci_read_local_version_information>
	{
		PartInfoType partInfo;
		/* get partInfo */
		HAL_GetPartInfo(&partInfo);
10042360:	ae05      	add	r6, sp, #20
	rp0->Status = hci_read_local_version_information(&HCI_Version, &HCI_Revision, &LMP_PAL_Version, &Manufacturer_Name, &LMP_PAL_Subversion);
10042362:	71a0      	strb	r0, [r4, #6]
		HAL_GetPartInfo(&partInfo);
10042364:	0030      	movs	r0, r6
10042366:	f7fe f983 	bl	10040670 <HAL_GetPartInfo>
		//  H[15:12]= Hardware cut major version
		//  h[11:8]= Hardware cut minor version
		//  C[7:4]= 0: BlueNRG/BlueNRG-MS, 1: BlueNRG-1; 2: BlueNRG-2;
		//  S[3:0]= Library major version
		/* Set HCI_Revision fields with information coming from HAL_GetPartInfo() */
		HCI_Revision = HCI_Revision & 0xF;
1004236a:	466b      	mov	r3, sp
1004236c:	200f      	movs	r0, #15
		HCI_Revision |= ((partInfo.die_major & 0xF) << 12) | ((partInfo.die_cut & 0xF) << 8) | ((partInfo.die_id & 0xF) << 4);
1004236e:	7871      	ldrb	r1, [r6, #1]
		HCI_Revision = HCI_Revision & 0xF;
10042370:	89db      	ldrh	r3, [r3, #14]
		HCI_Revision |= ((partInfo.die_major & 0xF) << 12) | ((partInfo.die_cut & 0xF) << 8) | ((partInfo.die_id & 0xF) << 4);
10042372:	0309      	lsls	r1, r1, #12
		HCI_Revision = HCI_Revision & 0xF;
10042374:	4003      	ands	r3, r0
		HCI_Revision |= ((partInfo.die_major & 0xF) << 12) | ((partInfo.die_cut & 0xF) << 8) | ((partInfo.die_id & 0xF) << 4);
10042376:	430b      	orrs	r3, r1
10042378:	21f0      	movs	r1, #240	; 0xf0
1004237a:	78b2      	ldrb	r2, [r6, #2]
1004237c:	0109      	lsls	r1, r1, #4
1004237e:	0212      	lsls	r2, r2, #8
10042380:	400a      	ands	r2, r1
10042382:	21ff      	movs	r1, #255	; 0xff
10042384:	4313      	orrs	r3, r2
10042386:	7832      	ldrb	r2, [r6, #0]
10042388:	0112      	lsls	r2, r2, #4
1004238a:	400a      	ands	r2, r1
1004238c:	4313      	orrs	r3, r2
1004238e:	b29b      	uxth	r3, r3
	}
	rp0->HCI_Version = HCI_Version;
	rp0->HCI_Revision = HCI_Revision;
10042390:	7223      	strb	r3, [r4, #8]
10042392:	0a1b      	lsrs	r3, r3, #8
10042394:	7263      	strb	r3, [r4, #9]
	rp0->LMP_PAL_Version = LMP_PAL_Version;
10042396:	466b      	mov	r3, sp
10042398:	7b5b      	ldrb	r3, [r3, #13]
	rp0->HCI_Version = HCI_Version;
1004239a:	466a      	mov	r2, sp
	rp0->LMP_PAL_Version = LMP_PAL_Version;
1004239c:	72a3      	strb	r3, [r4, #10]
	rp0->Manufacturer_Name = Manufacturer_Name;
1004239e:	466b      	mov	r3, sp
100423a0:	7c1b      	ldrb	r3, [r3, #16]
	rp0->HCI_Version = HCI_Version;
100423a2:	7b12      	ldrb	r2, [r2, #12]
	rp0->Manufacturer_Name = Manufacturer_Name;
100423a4:	72e3      	strb	r3, [r4, #11]
100423a6:	466b      	mov	r3, sp
100423a8:	7c5b      	ldrb	r3, [r3, #17]
	rp0->HCI_Version = HCI_Version;
100423aa:	71e2      	strb	r2, [r4, #7]
	rp0->Manufacturer_Name = Manufacturer_Name;
100423ac:	7323      	strb	r3, [r4, #12]
	rp0->LMP_PAL_Subversion = LMP_PAL_Subversion;
100423ae:	783b      	ldrb	r3, [r7, #0]
100423b0:	7363      	strb	r3, [r4, #13]
100423b2:	787b      	ldrb	r3, [r7, #1]
100423b4:	73a3      	strb	r3, [r4, #14]
	buffer_out[0] = 0x04;
100423b6:	2304      	movs	r3, #4
100423b8:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100423ba:	330a      	adds	r3, #10
100423bc:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100423be:	3b02      	subs	r3, #2
100423c0:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100423c2:	3b0b      	subs	r3, #11
100423c4:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x01;
100423c6:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x10;
100423c8:	181b      	adds	r3, r3, r0
100423ca:	7163      	strb	r3, [r4, #5]
	return (output_size + 6);
}
100423cc:	b009      	add	sp, #36	; 0x24
100423ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

100423d0 <hci_read_rssi_process>:
/* tBleStatus hci_read_rssi(uint16_t Connection_Handle,
 uint8_t *RSSI);
 */
/* Command len: 2 */
/* Response len: 1 + 2 + 1 */
uint16_t hci_read_rssi_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100423d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100423d2:	0006      	movs	r6, r0
100423d4:	0014      	movs	r4, r2
	hci_read_rssi_cp0 *cp0 = (hci_read_rssi_cp0 *) (buffer_in + 1 + (0));

	int output_size = 1 + 2 + 1;
	/* Output params */
	hci_read_rssi_rp0 *rp0 = (hci_read_rssi_rp0 *) (buffer_out + 6);
	uint8_t RSSI = 0;
100423d6:	2000      	movs	r0, #0
100423d8:	466a      	mov	r2, sp
100423da:	1dd5      	adds	r5, r2, #7
100423dc:	71d0      	strb	r0, [r2, #7]

	if (buffer_out_max_length < (1 + 2 + 1 + 6)) {
100423de:	2b09      	cmp	r3, #9
100423e0:	d91d      	bls.n	1004241e <hci_read_rssi_process+0x4e>
		return 0;
	}
	rp0->Status = hci_read_rssi(cp0->Connection_Handle /* 2 */, &RSSI);
100423e2:	78b0      	ldrb	r0, [r6, #2]
100423e4:	7873      	ldrb	r3, [r6, #1]
100423e6:	0200      	lsls	r0, r0, #8
100423e8:	4318      	orrs	r0, r3
100423ea:	0029      	movs	r1, r5
100423ec:	f00b f85e 	bl	1004d4ac <hci_read_rssi>
100423f0:	71a0      	strb	r0, [r4, #6]
	rp0->Connection_Handle = cp0->Connection_Handle;
100423f2:	78b3      	ldrb	r3, [r6, #2]
100423f4:	7872      	ldrb	r2, [r6, #1]
100423f6:	021b      	lsls	r3, r3, #8
100423f8:	4313      	orrs	r3, r2
100423fa:	71e3      	strb	r3, [r4, #7]
100423fc:	0a1b      	lsrs	r3, r3, #8
100423fe:	7223      	strb	r3, [r4, #8]
	rp0->RSSI = RSSI;
10042400:	782b      	ldrb	r3, [r5, #0]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x05;
	buffer_out[5] = 0x14;
	return (output_size + 6);
10042402:	200a      	movs	r0, #10
	rp0->RSSI = RSSI;
10042404:	7263      	strb	r3, [r4, #9]
	buffer_out[0] = 0x04;
10042406:	2304      	movs	r3, #4
10042408:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
1004240a:	330a      	adds	r3, #10
1004240c:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004240e:	3b07      	subs	r3, #7
10042410:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042412:	3b06      	subs	r3, #6
10042414:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x05;
10042416:	3304      	adds	r3, #4
10042418:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x14;
1004241a:	330f      	adds	r3, #15
1004241c:	7163      	strb	r3, [r4, #5]
}
1004241e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10042420 <hci_le_read_buffer_size_process>:
/* tBleStatus hci_le_read_buffer_size(uint16_t *HC_LE_ACL_Data_Packet_Length,
 uint8_t *HC_Total_Num_LE_ACL_Data_Packets);
 */
/* Command len: 0 */
/* Response len: 1 + 2 + 1 */
uint16_t hci_le_read_buffer_size_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042420:	b573      	push	{r0, r1, r4, r5, r6, lr}

	int output_size = 1 + 2 + 1;
	/* Output params */
	hci_le_read_buffer_size_rp0 *rp0 = (hci_le_read_buffer_size_rp0 *) (buffer_out + 6);
	uint16_t HC_LE_ACL_Data_Packet_Length = 0;
10042422:	2000      	movs	r0, #0
uint16_t hci_le_read_buffer_size_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042424:	0014      	movs	r4, r2
	uint16_t HC_LE_ACL_Data_Packet_Length = 0;
10042426:	466a      	mov	r2, sp
10042428:	1d95      	adds	r5, r2, #6
1004242a:	80d0      	strh	r0, [r2, #6]
	uint8_t HC_Total_Num_LE_ACL_Data_Packets = 0;
1004242c:	1d56      	adds	r6, r2, #5
1004242e:	7150      	strb	r0, [r2, #5]

	if (buffer_out_max_length < (1 + 2 + 1 + 6)) {
10042430:	2b09      	cmp	r3, #9
10042432:	d917      	bls.n	10042464 <hci_le_read_buffer_size_process+0x44>
		return 0;
	}
	rp0->Status = hci_le_read_buffer_size(&HC_LE_ACL_Data_Packet_Length, &HC_Total_Num_LE_ACL_Data_Packets);
10042434:	0031      	movs	r1, r6
10042436:	0028      	movs	r0, r5
10042438:	f00a fd48 	bl	1004cecc <hci_le_read_buffer_size>
	rp0->HC_LE_ACL_Data_Packet_Length = HC_LE_ACL_Data_Packet_Length;
1004243c:	782b      	ldrb	r3, [r5, #0]
	rp0->Status = hci_le_read_buffer_size(&HC_LE_ACL_Data_Packet_Length, &HC_Total_Num_LE_ACL_Data_Packets);
1004243e:	71a0      	strb	r0, [r4, #6]
	rp0->HC_LE_ACL_Data_Packet_Length = HC_LE_ACL_Data_Packet_Length;
10042440:	71e3      	strb	r3, [r4, #7]
10042442:	786b      	ldrb	r3, [r5, #1]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x02;
	buffer_out[5] = 0x20;
	return (output_size + 6);
10042444:	200a      	movs	r0, #10
	rp0->HC_LE_ACL_Data_Packet_Length = HC_LE_ACL_Data_Packet_Length;
10042446:	7223      	strb	r3, [r4, #8]
	rp0->HC_Total_Num_LE_ACL_Data_Packets = HC_Total_Num_LE_ACL_Data_Packets;
10042448:	7833      	ldrb	r3, [r6, #0]
1004244a:	7263      	strb	r3, [r4, #9]
	buffer_out[0] = 0x04;
1004244c:	2304      	movs	r3, #4
1004244e:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042450:	330a      	adds	r3, #10
10042452:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042454:	3b07      	subs	r3, #7
10042456:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042458:	3b06      	subs	r3, #6
1004245a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x02;
1004245c:	3301      	adds	r3, #1
1004245e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10042460:	331e      	adds	r3, #30
10042462:	7163      	strb	r3, [r4, #5]
}
10042464:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10042466 <hci_le_read_advertising_channel_tx_power_process>:
}
/* tBleStatus hci_le_read_advertising_channel_tx_power(uint8_t *Transmit_Power_Level);
 */
/* Command len: 0 */
/* Response len: 1 + 1 */
uint16_t hci_le_read_advertising_channel_tx_power_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042466:	b537      	push	{r0, r1, r2, r4, r5, lr}
10042468:	0014      	movs	r4, r2

	int output_size = 1 + 1;
	/* Output params */
	hci_le_read_advertising_channel_tx_power_rp0 *rp0 = (hci_le_read_advertising_channel_tx_power_rp0 *) (buffer_out + 6);
	uint8_t Transmit_Power_Level = 0;
1004246a:	2000      	movs	r0, #0
1004246c:	466a      	mov	r2, sp
1004246e:	1dd5      	adds	r5, r2, #7
10042470:	71d0      	strb	r0, [r2, #7]

	if (buffer_out_max_length < (1 + 1 + 6)) {
10042472:	2b07      	cmp	r3, #7
10042474:	d912      	bls.n	1004249c <hci_le_read_advertising_channel_tx_power_process+0x36>
		return 0;
	}
	rp0->Status = hci_le_read_advertising_channel_tx_power(&Transmit_Power_Level);
10042476:	0028      	movs	r0, r5
10042478:	f00a fd24 	bl	1004cec4 <hci_le_read_advertising_channel_tx_power>
	rp0->Transmit_Power_Level = Transmit_Power_Level;
1004247c:	782b      	ldrb	r3, [r5, #0]
	rp0->Status = hci_le_read_advertising_channel_tx_power(&Transmit_Power_Level);
1004247e:	71a0      	strb	r0, [r4, #6]
	rp0->Transmit_Power_Level = Transmit_Power_Level;
10042480:	71e3      	strb	r3, [r4, #7]
	buffer_out[0] = 0x04;
10042482:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x07;
	buffer_out[5] = 0x20;
	return (output_size + 6);
10042484:	2008      	movs	r0, #8
	buffer_out[0] = 0x04;
10042486:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042488:	330a      	adds	r3, #10
1004248a:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004248c:	3b09      	subs	r3, #9
1004248e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042490:	3b04      	subs	r3, #4
10042492:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x07;
10042494:	3306      	adds	r3, #6
10042496:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10042498:	3319      	adds	r3, #25
1004249a:	7163      	strb	r3, [r4, #5]
}
1004249c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

1004249e <hci_le_read_white_list_size_process>:
}
/* tBleStatus hci_le_read_white_list_size(uint8_t *White_List_Size);
 */
/* Command len: 0 */
/* Response len: 1 + 1 */
uint16_t hci_le_read_white_list_size_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004249e:	b537      	push	{r0, r1, r2, r4, r5, lr}
100424a0:	0014      	movs	r4, r2

	int output_size = 1 + 1;
	/* Output params */
	hci_le_read_white_list_size_rp0 *rp0 = (hci_le_read_white_list_size_rp0 *) (buffer_out + 6);
	uint8_t White_List_Size = 0;
100424a2:	2000      	movs	r0, #0
100424a4:	466a      	mov	r2, sp
100424a6:	1dd5      	adds	r5, r2, #7
100424a8:	71d0      	strb	r0, [r2, #7]

	if (buffer_out_max_length < (1 + 1 + 6)) {
100424aa:	2b07      	cmp	r3, #7
100424ac:	d912      	bls.n	100424d4 <hci_le_read_white_list_size_process+0x36>
		return 0;
	}
	rp0->Status = hci_le_read_white_list_size(&White_List_Size);
100424ae:	0028      	movs	r0, r5
100424b0:	f00a fd69 	bl	1004cf86 <hci_le_read_white_list_size>
	rp0->White_List_Size = White_List_Size;
100424b4:	782b      	ldrb	r3, [r5, #0]
	rp0->Status = hci_le_read_white_list_size(&White_List_Size);
100424b6:	71a0      	strb	r0, [r4, #6]
	rp0->White_List_Size = White_List_Size;
100424b8:	71e3      	strb	r3, [r4, #7]
	buffer_out[0] = 0x04;
100424ba:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x0f;
	buffer_out[5] = 0x20;
	return (output_size + 6);
100424bc:	2008      	movs	r0, #8
	buffer_out[0] = 0x04;
100424be:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100424c0:	330a      	adds	r3, #10
100424c2:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100424c4:	3b09      	subs	r3, #9
100424c6:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100424c8:	3b04      	subs	r3, #4
100424ca:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0f;
100424cc:	330e      	adds	r3, #14
100424ce:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100424d0:	3311      	adds	r3, #17
100424d2:	7163      	strb	r3, [r4, #5]
}
100424d4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

100424d6 <hci_le_test_end_process>:
}
/* tBleStatus hci_le_test_end(uint16_t *Number_Of_Packets);
 */
/* Command len: 0 */
/* Response len: 1 + 2 */
uint16_t hci_le_test_end_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100424d6:	b537      	push	{r0, r1, r2, r4, r5, lr}
100424d8:	0014      	movs	r4, r2

	int output_size = 1 + 2;
	/* Output params */
	hci_le_test_end_rp0 *rp0 = (hci_le_test_end_rp0 *) (buffer_out + 6);
	uint16_t Number_Of_Packets = 0;
100424da:	2000      	movs	r0, #0
100424dc:	466a      	mov	r2, sp
100424de:	1d95      	adds	r5, r2, #6
100424e0:	80d0      	strh	r0, [r2, #6]

	if (buffer_out_max_length < (1 + 2 + 6)) {
100424e2:	2b08      	cmp	r3, #8
100424e4:	d914      	bls.n	10042510 <hci_le_test_end_process+0x3a>
		return 0;
	}
	rp0->Status = hci_le_test_end(&Number_Of_Packets);
100424e6:	0028      	movs	r0, r5
100424e8:	f00a fec0 	bl	1004d26c <hci_le_test_end>
	rp0->Number_Of_Packets = Number_Of_Packets;
100424ec:	782b      	ldrb	r3, [r5, #0]
	rp0->Status = hci_le_test_end(&Number_Of_Packets);
100424ee:	71a0      	strb	r0, [r4, #6]
	rp0->Number_Of_Packets = Number_Of_Packets;
100424f0:	71e3      	strb	r3, [r4, #7]
100424f2:	786b      	ldrb	r3, [r5, #1]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x1f;
	buffer_out[5] = 0x20;
	return (output_size + 6);
100424f4:	2009      	movs	r0, #9
	rp0->Number_Of_Packets = Number_Of_Packets;
100424f6:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
100424f8:	2304      	movs	r3, #4
100424fa:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100424fc:	330a      	adds	r3, #10
100424fe:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042500:	3b08      	subs	r3, #8
10042502:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042504:	3b05      	subs	r3, #5
10042506:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1f;
10042508:	331e      	adds	r3, #30
1004250a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
1004250c:	3301      	adds	r3, #1
1004250e:	7163      	strb	r3, [r4, #5]
}
10042510:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10042512 <hci_le_read_suggested_default_data_length_process>:
/* tBleStatus hci_le_read_suggested_default_data_length(uint16_t *SuggestedMaxTxOctets,
 uint16_t *SuggestedMaxTxTime);
 */
/* Command len: 0 */
/* Response len: 1 + 2 + 2 */
uint16_t hci_le_read_suggested_default_data_length_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042512:	b573      	push	{r0, r1, r4, r5, r6, lr}

	int output_size = 1 + 2 + 2;
	/* Output params */
	hci_le_read_suggested_default_data_length_rp0 *rp0 = (hci_le_read_suggested_default_data_length_rp0 *) (buffer_out + 6);
	uint16_t SuggestedMaxTxOctets = 0;
10042514:	2000      	movs	r0, #0
uint16_t hci_le_read_suggested_default_data_length_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042516:	0014      	movs	r4, r2
	uint16_t SuggestedMaxTxTime = 0;
10042518:	466a      	mov	r2, sp
	uint16_t SuggestedMaxTxOctets = 0;
1004251a:	ae01      	add	r6, sp, #4
1004251c:	8030      	strh	r0, [r6, #0]
	uint16_t SuggestedMaxTxTime = 0;
1004251e:	1d95      	adds	r5, r2, #6
10042520:	80d0      	strh	r0, [r2, #6]

	if (buffer_out_max_length < (1 + 2 + 2 + 6)) {
10042522:	2b0a      	cmp	r3, #10
10042524:	d919      	bls.n	1004255a <hci_le_read_suggested_default_data_length_process+0x48>
		return 0;
	}
	rp0->Status = hci_le_read_suggested_default_data_length(&SuggestedMaxTxOctets, &SuggestedMaxTxTime);
10042526:	0029      	movs	r1, r5
10042528:	0030      	movs	r0, r6
1004252a:	f7ff fb0f 	bl	10041b4c <hci_le_read_suggested_default_data_length>
	rp0->SuggestedMaxTxOctets = SuggestedMaxTxOctets;
1004252e:	7833      	ldrb	r3, [r6, #0]
	rp0->Status = hci_le_read_suggested_default_data_length(&SuggestedMaxTxOctets, &SuggestedMaxTxTime);
10042530:	71a0      	strb	r0, [r4, #6]
	rp0->SuggestedMaxTxOctets = SuggestedMaxTxOctets;
10042532:	71e3      	strb	r3, [r4, #7]
10042534:	7873      	ldrb	r3, [r6, #1]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x23;
	buffer_out[5] = 0x20;
	return (output_size + 6);
10042536:	200b      	movs	r0, #11
	rp0->SuggestedMaxTxOctets = SuggestedMaxTxOctets;
10042538:	7223      	strb	r3, [r4, #8]
	rp0->SuggestedMaxTxTime = SuggestedMaxTxTime;
1004253a:	782b      	ldrb	r3, [r5, #0]
1004253c:	7263      	strb	r3, [r4, #9]
1004253e:	786b      	ldrb	r3, [r5, #1]
10042540:	72a3      	strb	r3, [r4, #10]
	buffer_out[0] = 0x04;
10042542:	2304      	movs	r3, #4
10042544:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042546:	330a      	adds	r3, #10
10042548:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004254a:	3b06      	subs	r3, #6
1004254c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004254e:	3b07      	subs	r3, #7
10042550:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x23;
10042552:	3322      	adds	r3, #34	; 0x22
10042554:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10042556:	3b03      	subs	r3, #3
10042558:	7163      	strb	r3, [r4, #5]
}
1004255a:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

1004255c <hci_le_read_resolving_list_size_process>:
}
/* tBleStatus hci_le_read_resolving_list_size(uint8_t *Resolving_List_Size);
 */
/* Command len: 0 */
/* Response len: 1 + 1 */
uint16_t hci_le_read_resolving_list_size_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004255c:	b537      	push	{r0, r1, r2, r4, r5, lr}
1004255e:	0014      	movs	r4, r2

	int output_size = 1 + 1;
	/* Output params */
	hci_le_read_resolving_list_size_rp0 *rp0 = (hci_le_read_resolving_list_size_rp0 *) (buffer_out + 6);
	uint8_t Resolving_List_Size = 0;
10042560:	2000      	movs	r0, #0
10042562:	466a      	mov	r2, sp
10042564:	1dd5      	adds	r5, r2, #7
10042566:	71d0      	strb	r0, [r2, #7]

	if (buffer_out_max_length < (1 + 1 + 6)) {
10042568:	2b07      	cmp	r3, #7
1004256a:	d912      	bls.n	10042592 <hci_le_read_resolving_list_size_process+0x36>
		return 0;
	}
	rp0->Status = hci_le_read_resolving_list_size(&Resolving_List_Size);
1004256c:	0028      	movs	r0, r5
1004256e:	f7ff f97b 	bl	10041868 <hci_le_read_resolving_list_size>
	rp0->Resolving_List_Size = Resolving_List_Size;
10042572:	782b      	ldrb	r3, [r5, #0]
	rp0->Status = hci_le_read_resolving_list_size(&Resolving_List_Size);
10042574:	71a0      	strb	r0, [r4, #6]
	rp0->Resolving_List_Size = Resolving_List_Size;
10042576:	71e3      	strb	r3, [r4, #7]
	buffer_out[0] = 0x04;
10042578:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x2a;
	buffer_out[5] = 0x20;
	return (output_size + 6);
1004257a:	2008      	movs	r0, #8
	buffer_out[0] = 0x04;
1004257c:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
1004257e:	330a      	adds	r3, #10
10042580:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042582:	3b09      	subs	r3, #9
10042584:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042586:	3b04      	subs	r3, #4
10042588:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2a;
1004258a:	3329      	adds	r3, #41	; 0x29
1004258c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
1004258e:	3b0a      	subs	r3, #10
10042590:	7163      	strb	r3, [r4, #5]
}
10042592:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10042594 <hci_le_read_maximum_data_length_process>:
 uint16_t *supportedMaxRxOctets,
 uint16_t *supportedMaxRxTime);
 */
/* Command len: 0 */
/* Response len: 1 + 2 + 2 + 2 + 2 */
uint16_t hci_le_read_maximum_data_length_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042594:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

	int output_size = 1 + 2 + 2 + 2 + 2;
	/* Output params */
	hci_le_read_maximum_data_length_rp0 *rp0 = (hci_le_read_maximum_data_length_rp0 *) (buffer_out + 6);
	uint16_t supportedMaxTxOctets = 0;
10042596:	2000      	movs	r0, #0
uint16_t hci_le_read_maximum_data_length_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042598:	0014      	movs	r4, r2
	uint16_t supportedMaxTxOctets = 0;
1004259a:	466a      	mov	r2, sp
	uint16_t supportedMaxTxTime = 0;
	uint16_t supportedMaxRxOctets = 0;
1004259c:	ae01      	add	r6, sp, #4
	uint16_t supportedMaxTxOctets = 0;
1004259e:	8010      	strh	r0, [r2, #0]
	uint16_t supportedMaxTxTime = 0;
100425a0:	1c97      	adds	r7, r2, #2
100425a2:	8050      	strh	r0, [r2, #2]
	uint16_t supportedMaxRxOctets = 0;
100425a4:	8030      	strh	r0, [r6, #0]
	uint16_t supportedMaxRxTime = 0;
100425a6:	1d95      	adds	r5, r2, #6
100425a8:	80d0      	strh	r0, [r2, #6]

	if (buffer_out_max_length < (1 + 2 + 2 + 2 + 2 + 6)) {
100425aa:	2b0e      	cmp	r3, #14
100425ac:	d925      	bls.n	100425fa <hci_le_read_maximum_data_length_process+0x66>
		return 0;
	}
	rp0->Status = hci_le_read_maximum_data_length(&supportedMaxTxOctets, &supportedMaxTxTime, &supportedMaxRxOctets, &supportedMaxRxTime);
100425ae:	002b      	movs	r3, r5
100425b0:	0032      	movs	r2, r6
100425b2:	0039      	movs	r1, r7
100425b4:	4668      	mov	r0, sp
100425b6:	f7ff fad1 	bl	10041b5c <hci_le_read_maximum_data_length>
	rp0->supportedMaxTxOctets = supportedMaxTxOctets;
100425ba:	466b      	mov	r3, sp
100425bc:	781b      	ldrb	r3, [r3, #0]
	rp0->Status = hci_le_read_maximum_data_length(&supportedMaxTxOctets, &supportedMaxTxTime, &supportedMaxRxOctets, &supportedMaxRxTime);
100425be:	71a0      	strb	r0, [r4, #6]
	rp0->supportedMaxTxOctets = supportedMaxTxOctets;
100425c0:	71e3      	strb	r3, [r4, #7]
100425c2:	466b      	mov	r3, sp
100425c4:	785b      	ldrb	r3, [r3, #1]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x2f;
	buffer_out[5] = 0x20;
	return (output_size + 6);
100425c6:	200f      	movs	r0, #15
	rp0->supportedMaxTxOctets = supportedMaxTxOctets;
100425c8:	7223      	strb	r3, [r4, #8]
	rp0->supportedMaxTxTime = supportedMaxTxTime;
100425ca:	783b      	ldrb	r3, [r7, #0]
100425cc:	7263      	strb	r3, [r4, #9]
100425ce:	787b      	ldrb	r3, [r7, #1]
100425d0:	72a3      	strb	r3, [r4, #10]
	rp0->supportedMaxRxOctets = supportedMaxRxOctets;
100425d2:	7833      	ldrb	r3, [r6, #0]
100425d4:	72e3      	strb	r3, [r4, #11]
100425d6:	7873      	ldrb	r3, [r6, #1]
100425d8:	7323      	strb	r3, [r4, #12]
	rp0->supportedMaxRxTime = supportedMaxRxTime;
100425da:	782b      	ldrb	r3, [r5, #0]
100425dc:	7363      	strb	r3, [r4, #13]
100425de:	786b      	ldrb	r3, [r5, #1]
100425e0:	73a3      	strb	r3, [r4, #14]
	buffer_out[0] = 0x04;
100425e2:	2304      	movs	r3, #4
100425e4:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100425e6:	330a      	adds	r3, #10
100425e8:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100425ea:	3b02      	subs	r3, #2
100425ec:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100425ee:	3b0b      	subs	r3, #11
100425f0:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2f;
100425f2:	332e      	adds	r3, #46	; 0x2e
100425f4:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100425f6:	3b0f      	subs	r3, #15
100425f8:	7163      	strb	r3, [r4, #5]
}
100425fa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100425fc <aci_hal_get_fw_build_number_process>:
/* tBleStatus aci_hal_get_fw_build_number(uint16_t *Build_Number);
 */
/* Command len: 0 */
/* Response len: 1 + 2 */
uint16_t aci_hal_get_fw_build_number_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100425fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
100425fe:	0014      	movs	r4, r2

	int output_size = 1 + 2;
	/* Output params */
	aci_hal_get_fw_build_number_rp0 *rp0 = (aci_hal_get_fw_build_number_rp0 *) (buffer_out + 6);
	uint16_t Build_Number = 0;
10042600:	2500      	movs	r5, #0
10042602:	466a      	mov	r2, sp
10042604:	1d96      	adds	r6, r2, #6
10042606:	80d5      	strh	r5, [r2, #6]

	if (buffer_out_max_length < (1 + 2 + 6)) {
10042608:	2b08      	cmp	r3, #8
1004260a:	d913      	bls.n	10042634 <aci_hal_get_fw_build_number_process+0x38>
		return 0;
	}
	rp0->Status = aci_hal_get_fw_build_number(&Build_Number);
1004260c:	0030      	movs	r0, r6
1004260e:	f004 fdbf 	bl	10047190 <aci_hal_get_fw_build_number>
	rp0->Build_Number = Build_Number;
10042612:	7833      	ldrb	r3, [r6, #0]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x00;
10042614:	7125      	strb	r5, [r4, #4]
	rp0->Build_Number = Build_Number;
10042616:	71e3      	strb	r3, [r4, #7]
10042618:	7873      	ldrb	r3, [r6, #1]
	rp0->Status = aci_hal_get_fw_build_number(&Build_Number);
1004261a:	71a0      	strb	r0, [r4, #6]
	rp0->Build_Number = Build_Number;
1004261c:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
1004261e:	2304      	movs	r3, #4
10042620:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042622:	330a      	adds	r3, #10
10042624:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042626:	3b08      	subs	r3, #8
10042628:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004262a:	3b05      	subs	r3, #5
1004262c:	70e3      	strb	r3, [r4, #3]
	buffer_out[5] = 0xfc;
1004262e:	33fb      	adds	r3, #251	; 0xfb
10042630:	7163      	strb	r3, [r4, #5]
	return (output_size + 6);
10042632:	3509      	adds	r5, #9
}
10042634:	0028      	movs	r0, r5
10042636:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10042638 <aci_hal_get_firmware_details_process>:
 uint16_t *BTLE_Stack_variant,
 uint16_t *BTLE_Stack_Build_Number);
 */
/* Command len: 0 */
/* Response len: 1 + 1 + 1 + 1 + 1 + 2 + 1 + 1 + 1 + 1 + 2 + 2 */
uint16_t aci_hal_get_firmware_details_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042638:	b5f0      	push	{r4, r5, r6, r7, lr}
1004263a:	b08d      	sub	sp, #52	; 0x34

	int output_size = 1 + 1 + 1 + 1 + 1 + 2 + 1 + 1 + 1 + 1 + 2 + 2;
	/* Output params */
	aci_hal_get_firmware_details_rp0 *rp0 = (aci_hal_get_firmware_details_rp0 *) (buffer_out + 6);
	uint8_t DTM_version_major = 0;
1004263c:	2122      	movs	r1, #34	; 0x22
uint16_t aci_hal_get_firmware_details_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004263e:	0017      	movs	r7, r2
	uint8_t DTM_version_major = 0;
10042640:	466a      	mov	r2, sp
10042642:	2000      	movs	r0, #0
10042644:	1852      	adds	r2, r2, r1
10042646:	7010      	strb	r0, [r2, #0]
	uint8_t DTM_version_minor = 0;
10042648:	466a      	mov	r2, sp
1004264a:	3101      	adds	r1, #1
1004264c:	1852      	adds	r2, r2, r1
1004264e:	7010      	strb	r0, [r2, #0]
	uint8_t DTM_version_patch = 0;
10042650:	466a      	mov	r2, sp
10042652:	3101      	adds	r1, #1
10042654:	1852      	adds	r2, r2, r1
10042656:	7010      	strb	r0, [r2, #0]
	uint8_t DTM_variant = 0;
10042658:	466a      	mov	r2, sp
1004265a:	3101      	adds	r1, #1
1004265c:	1852      	adds	r2, r2, r1
1004265e:	7010      	strb	r0, [r2, #0]
	uint16_t DTM_Build_Number = 0;
	uint8_t BTLE_Stack_version_major = 0;
10042660:	466a      	mov	r2, sp
10042662:	3101      	adds	r1, #1
10042664:	1852      	adds	r2, r2, r1
10042666:	7010      	strb	r0, [r2, #0]
	uint8_t BTLE_Stack_version_minor = 0;
10042668:	466a      	mov	r2, sp
1004266a:	3101      	adds	r1, #1
1004266c:	1852      	adds	r2, r2, r1
1004266e:	7010      	strb	r0, [r2, #0]
	uint8_t BTLE_Stack_version_patch = 0;
10042670:	466a      	mov	r2, sp
10042672:	3101      	adds	r1, #1
10042674:	1852      	adds	r2, r2, r1
10042676:	7010      	strb	r0, [r2, #0]
	uint16_t DTM_Build_Number = 0;
10042678:	262a      	movs	r6, #42	; 0x2a
	uint8_t BTLE_Stack_development = 0;
1004267a:	466a      	mov	r2, sp
	uint16_t BTLE_Stack_variant = 0;
	uint16_t BTLE_Stack_Build_Number = 0;
1004267c:	242e      	movs	r4, #46	; 0x2e
	uint8_t BTLE_Stack_development = 0;
1004267e:	3101      	adds	r1, #1
	uint16_t DTM_Build_Number = 0;
10042680:	446e      	add	r6, sp
	uint8_t BTLE_Stack_development = 0;
10042682:	1852      	adds	r2, r2, r1
	uint16_t BTLE_Stack_variant = 0;
10042684:	ad0b      	add	r5, sp, #44	; 0x2c
	uint16_t BTLE_Stack_Build_Number = 0;
10042686:	446c      	add	r4, sp
	uint16_t DTM_Build_Number = 0;
10042688:	8030      	strh	r0, [r6, #0]
	uint8_t BTLE_Stack_development = 0;
1004268a:	7010      	strb	r0, [r2, #0]
	uint16_t BTLE_Stack_variant = 0;
1004268c:	8028      	strh	r0, [r5, #0]
	uint16_t BTLE_Stack_Build_Number = 0;
1004268e:	8020      	strh	r0, [r4, #0]

	if (buffer_out_max_length < (1 + 1 + 1 + 1 + 1 + 2 + 1 + 1 + 1 + 1 + 2 + 2 + 6)) {
10042690:	2b14      	cmp	r3, #20
10042692:	d955      	bls.n	10042740 <aci_hal_get_firmware_details_process+0x108>
		return 0;
	}
	rp0->Status = aci_hal_get_firmware_details(&DTM_version_major, &DTM_version_minor, &DTM_version_patch, &DTM_variant, &DTM_Build_Number, &BTLE_Stack_version_major, &BTLE_Stack_version_minor, &BTLE_Stack_version_patch, &BTLE_Stack_development, &BTLE_Stack_variant, &BTLE_Stack_Build_Number);
10042694:	ab0a      	add	r3, sp, #40	; 0x28
10042696:	9303      	str	r3, [sp, #12]
10042698:	2327      	movs	r3, #39	; 0x27
1004269a:	446b      	add	r3, sp
1004269c:	9302      	str	r3, [sp, #8]
1004269e:	2326      	movs	r3, #38	; 0x26
100426a0:	446b      	add	r3, sp
100426a2:	9301      	str	r3, [sp, #4]
100426a4:	2325      	movs	r3, #37	; 0x25
100426a6:	3906      	subs	r1, #6
100426a8:	3022      	adds	r0, #34	; 0x22
100426aa:	9204      	str	r2, [sp, #16]
100426ac:	446b      	add	r3, sp
100426ae:	aa09      	add	r2, sp, #36	; 0x24
100426b0:	4469      	add	r1, sp
100426b2:	9406      	str	r4, [sp, #24]
100426b4:	9505      	str	r5, [sp, #20]
100426b6:	9600      	str	r6, [sp, #0]
100426b8:	4468      	add	r0, sp
100426ba:	f003 fc77 	bl	10045fac <aci_hal_get_firmware_details>
	rp0->DTM_version_major = DTM_version_major;
100426be:	2122      	movs	r1, #34	; 0x22
100426c0:	466a      	mov	r2, sp
100426c2:	1852      	adds	r2, r2, r1
100426c4:	7812      	ldrb	r2, [r2, #0]
	rp0->DTM_version_minor = DTM_version_minor;
100426c6:	3101      	adds	r1, #1
	rp0->DTM_version_major = DTM_version_major;
100426c8:	71fa      	strb	r2, [r7, #7]
	rp0->DTM_version_minor = DTM_version_minor;
100426ca:	466a      	mov	r2, sp
100426cc:	1852      	adds	r2, r2, r1
100426ce:	7812      	ldrb	r2, [r2, #0]
	rp0->DTM_version_patch = DTM_version_patch;
100426d0:	3101      	adds	r1, #1
	rp0->DTM_version_minor = DTM_version_minor;
100426d2:	723a      	strb	r2, [r7, #8]
	rp0->DTM_version_patch = DTM_version_patch;
100426d4:	466a      	mov	r2, sp
100426d6:	1852      	adds	r2, r2, r1
100426d8:	7812      	ldrb	r2, [r2, #0]
	rp0->DTM_variant = DTM_variant;
100426da:	3101      	adds	r1, #1
	rp0->DTM_version_patch = DTM_version_patch;
100426dc:	727a      	strb	r2, [r7, #9]
	rp0->DTM_variant = DTM_variant;
100426de:	466a      	mov	r2, sp
100426e0:	1852      	adds	r2, r2, r1
100426e2:	7812      	ldrb	r2, [r2, #0]
	rp0->DTM_Build_Number = DTM_Build_Number;
	rp0->BTLE_Stack_version_major = BTLE_Stack_version_major;
100426e4:	3101      	adds	r1, #1
	rp0->DTM_variant = DTM_variant;
100426e6:	72ba      	strb	r2, [r7, #10]
	rp0->DTM_Build_Number = DTM_Build_Number;
100426e8:	7832      	ldrb	r2, [r6, #0]
	rp0->BTLE_Stack_version_minor = BTLE_Stack_version_minor;
	rp0->BTLE_Stack_version_patch = BTLE_Stack_version_patch;
	rp0->BTLE_Stack_development = BTLE_Stack_development;
	rp0->BTLE_Stack_variant = BTLE_Stack_variant;
100426ea:	782b      	ldrb	r3, [r5, #0]
	rp0->DTM_Build_Number = DTM_Build_Number;
100426ec:	72fa      	strb	r2, [r7, #11]
100426ee:	7872      	ldrb	r2, [r6, #1]
	rp0->BTLE_Stack_variant = BTLE_Stack_variant;
100426f0:	747b      	strb	r3, [r7, #17]
	rp0->DTM_Build_Number = DTM_Build_Number;
100426f2:	733a      	strb	r2, [r7, #12]
	rp0->BTLE_Stack_version_major = BTLE_Stack_version_major;
100426f4:	466a      	mov	r2, sp
100426f6:	1852      	adds	r2, r2, r1
100426f8:	7812      	ldrb	r2, [r2, #0]
	rp0->BTLE_Stack_version_minor = BTLE_Stack_version_minor;
100426fa:	3101      	adds	r1, #1
	rp0->BTLE_Stack_version_major = BTLE_Stack_version_major;
100426fc:	737a      	strb	r2, [r7, #13]
	rp0->BTLE_Stack_version_minor = BTLE_Stack_version_minor;
100426fe:	466a      	mov	r2, sp
10042700:	1852      	adds	r2, r2, r1
10042702:	7812      	ldrb	r2, [r2, #0]
	rp0->BTLE_Stack_variant = BTLE_Stack_variant;
10042704:	786b      	ldrb	r3, [r5, #1]
	rp0->BTLE_Stack_version_minor = BTLE_Stack_version_minor;
10042706:	73ba      	strb	r2, [r7, #14]
	rp0->BTLE_Stack_version_patch = BTLE_Stack_version_patch;
10042708:	466a      	mov	r2, sp
1004270a:	3101      	adds	r1, #1
	rp0->BTLE_Stack_variant = BTLE_Stack_variant;
1004270c:	74bb      	strb	r3, [r7, #18]
	rp0->BTLE_Stack_Build_Number = BTLE_Stack_Build_Number;
1004270e:	7823      	ldrb	r3, [r4, #0]
	rp0->BTLE_Stack_version_patch = BTLE_Stack_version_patch;
10042710:	1852      	adds	r2, r2, r1
10042712:	7812      	ldrb	r2, [r2, #0]
	rp0->BTLE_Stack_Build_Number = BTLE_Stack_Build_Number;
10042714:	74fb      	strb	r3, [r7, #19]
10042716:	7863      	ldrb	r3, [r4, #1]
	rp0->BTLE_Stack_version_patch = BTLE_Stack_version_patch;
10042718:	73fa      	strb	r2, [r7, #15]
	rp0->BTLE_Stack_Build_Number = BTLE_Stack_Build_Number;
1004271a:	753b      	strb	r3, [r7, #20]
	rp0->BTLE_Stack_development = BTLE_Stack_development;
1004271c:	466a      	mov	r2, sp
	buffer_out[0] = 0x04;
1004271e:	2304      	movs	r3, #4
	rp0->Status = aci_hal_get_firmware_details(&DTM_version_major, &DTM_version_minor, &DTM_version_patch, &DTM_variant, &DTM_Build_Number, &BTLE_Stack_version_major, &BTLE_Stack_version_minor, &BTLE_Stack_version_patch, &BTLE_Stack_development, &BTLE_Stack_variant, &BTLE_Stack_Build_Number);
10042720:	71b8      	strb	r0, [r7, #6]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x01;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
10042722:	2015      	movs	r0, #21
	rp0->BTLE_Stack_development = BTLE_Stack_development;
10042724:	3101      	adds	r1, #1
	buffer_out[0] = 0x04;
10042726:	703b      	strb	r3, [r7, #0]
	rp0->BTLE_Stack_development = BTLE_Stack_development;
10042728:	1852      	adds	r2, r2, r1
	buffer_out[1] = 0x0E;
1004272a:	330a      	adds	r3, #10
	rp0->BTLE_Stack_development = BTLE_Stack_development;
1004272c:	7812      	ldrb	r2, [r2, #0]
	buffer_out[1] = 0x0E;
1004272e:	707b      	strb	r3, [r7, #1]
	buffer_out[2] = output_size + 3;
10042730:	3304      	adds	r3, #4
10042732:	70bb      	strb	r3, [r7, #2]
	buffer_out[3] = 0x01;
10042734:	3b11      	subs	r3, #17
	rp0->BTLE_Stack_development = BTLE_Stack_development;
10042736:	743a      	strb	r2, [r7, #16]
	buffer_out[3] = 0x01;
10042738:	70fb      	strb	r3, [r7, #3]
	buffer_out[4] = 0x01;
1004273a:	713b      	strb	r3, [r7, #4]
	buffer_out[5] = 0xfc;
1004273c:	33fb      	adds	r3, #251	; 0xfb
1004273e:	717b      	strb	r3, [r7, #5]
}
10042740:	b00d      	add	sp, #52	; 0x34
10042742:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042744 <aci_hal_read_config_data_process>:
 uint8_t *Data_Length,
 uint8_t Data[]);
 */
/* Command len: 1 */
/* Response len: 1 + 1 + rp0->Data_Length * (sizeof(uint8_t)) */
uint16_t aci_hal_read_config_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042744:	b5f0      	push	{r4, r5, r6, r7, lr}
10042746:	b0c3      	sub	sp, #268	; 0x10c
10042748:	001d      	movs	r5, r3
	aci_hal_read_config_data_cp0 *cp0 = (aci_hal_read_config_data_cp0 *) (buffer_in + 1 + (0));

	int output_size = 0;
	/* Output params */
	aci_hal_read_config_data_rp0 *rp0 = (aci_hal_read_config_data_rp0 *) (buffer_out + 6);
	uint8_t Data_Length = 0;
1004274a:	466b      	mov	r3, sp
1004274c:	1ddf      	adds	r7, r3, #7
1004274e:	2300      	movs	r3, #0
uint16_t aci_hal_read_config_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042750:	0014      	movs	r4, r2
	uint8_t Data_Length = 0;
10042752:	703b      	strb	r3, [r7, #0]
	uint8_t Data[HCI_MAX_PAYLOAD_SIZE / sizeof(uint8_t)];

	if (buffer_out_max_length < (1 + 6)) {
10042754:	2d06      	cmp	r5, #6
10042756:	d802      	bhi.n	1004275e <aci_hal_read_config_data_process+0x1a>
		return 0;
10042758:	2000      	movs	r0, #0
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x0d;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
}
1004275a:	b043      	add	sp, #268	; 0x10c
1004275c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	rp0->Status = aci_hal_read_config_data(cp0->Offset /* 1 */, &Data_Length, Data);
1004275e:	7840      	ldrb	r0, [r0, #1]
10042760:	aa02      	add	r2, sp, #8
10042762:	0039      	movs	r1, r7
10042764:	f004 fd26 	bl	100471b4 <aci_hal_read_config_data>
10042768:	71a0      	strb	r0, [r4, #6]
	if (buffer_out_max_length < (output_size + (1) + 6)) {
1004276a:	2d07      	cmp	r5, #7
1004276c:	d0f4      	beq.n	10042758 <aci_hal_read_config_data_process+0x14>
	rp0->Data_Length = Data_Length;
1004276e:	783a      	ldrb	r2, [r7, #0]
	if (buffer_out_max_length < (output_size + (rp0->Data_Length * (sizeof(uint8_t))) + 6)) {
10042770:	0013      	movs	r3, r2
10042772:	3308      	adds	r3, #8
	rp0->Data_Length = Data_Length;
10042774:	71e2      	strb	r2, [r4, #7]
	if (buffer_out_max_length < (output_size + (rp0->Data_Length * (sizeof(uint8_t))) + 6)) {
10042776:	429d      	cmp	r5, r3
10042778:	d3ee      	bcc.n	10042758 <aci_hal_read_config_data_process+0x14>
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, rp0->Data_Length * (sizeof(uint8_t)));
1004277a:	0020      	movs	r0, r4
1004277c:	a902      	add	r1, sp, #8
1004277e:	3008      	adds	r0, #8
10042780:	f7fd ffff 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10042784:	2304      	movs	r3, #4
	output_size += rp0->Data_Length * (sizeof(uint8_t));
10042786:	79e0      	ldrb	r0, [r4, #7]
	buffer_out[0] = 0x04;
10042788:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
1004278a:	330a      	adds	r3, #10
1004278c:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004278e:	1d43      	adds	r3, r0, #5
10042790:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042792:	2301      	movs	r3, #1
10042794:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0d;
10042796:	330c      	adds	r3, #12
10042798:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
1004279a:	33ef      	adds	r3, #239	; 0xef
1004279c:	7163      	strb	r3, [r4, #5]
	return (output_size + 6);
1004279e:	3008      	adds	r0, #8
100427a0:	e7db      	b.n	1004275a <aci_hal_read_config_data_process+0x16>

100427a2 <aci_hal_le_tx_test_packet_number_process>:
}
/* tBleStatus aci_hal_le_tx_test_packet_number(uint32_t *Number_Of_Packets);
 */
/* Command len: 0 */
/* Response len: 1 + 4 */
uint16_t aci_hal_le_tx_test_packet_number_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100427a2:	b537      	push	{r0, r1, r2, r4, r5, lr}

	int output_size = 1 + 4;
	/* Output params */
	aci_hal_le_tx_test_packet_number_rp0 *rp0 = (aci_hal_le_tx_test_packet_number_rp0 *) (buffer_out + 6);
	uint32_t Number_Of_Packets = 0;
100427a4:	2000      	movs	r0, #0
uint16_t aci_hal_le_tx_test_packet_number_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100427a6:	0014      	movs	r4, r2
	uint32_t Number_Of_Packets = 0;
100427a8:	9001      	str	r0, [sp, #4]

	if (buffer_out_max_length < (1 + 4 + 6)) {
100427aa:	2b0a      	cmp	r3, #10
100427ac:	d91f      	bls.n	100427ee <aci_hal_le_tx_test_packet_number_process+0x4c>
		return 0;
	}
	rp0->Status = aci_hal_le_tx_test_packet_number(&Number_Of_Packets);
100427ae:	ad01      	add	r5, sp, #4
100427b0:	0028      	movs	r0, r5
100427b2:	f004 fcf3 	bl	1004719c <aci_hal_le_tx_test_packet_number>
	rp0->Number_Of_Packets = Number_Of_Packets;
100427b6:	782a      	ldrb	r2, [r5, #0]
	buffer_out[0] = 0x04;
100427b8:	2304      	movs	r3, #4
	rp0->Number_Of_Packets = Number_Of_Packets;
100427ba:	71e2      	strb	r2, [r4, #7]
100427bc:	466a      	mov	r2, sp
100427be:	3205      	adds	r2, #5
100427c0:	7812      	ldrb	r2, [r2, #0]
	rp0->Status = aci_hal_le_tx_test_packet_number(&Number_Of_Packets);
100427c2:	71a0      	strb	r0, [r4, #6]
	rp0->Number_Of_Packets = Number_Of_Packets;
100427c4:	7222      	strb	r2, [r4, #8]
100427c6:	466a      	mov	r2, sp
100427c8:	3206      	adds	r2, #6
100427ca:	7812      	ldrb	r2, [r2, #0]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x14;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
100427cc:	200b      	movs	r0, #11
	rp0->Number_Of_Packets = Number_Of_Packets;
100427ce:	7262      	strb	r2, [r4, #9]
100427d0:	466a      	mov	r2, sp
	buffer_out[0] = 0x04;
100427d2:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100427d4:	330a      	adds	r3, #10
100427d6:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100427d8:	3b06      	subs	r3, #6
	rp0->Number_Of_Packets = Number_Of_Packets;
100427da:	3207      	adds	r2, #7
	buffer_out[2] = output_size + 3;
100427dc:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100427de:	3b07      	subs	r3, #7
	rp0->Number_Of_Packets = Number_Of_Packets;
100427e0:	7812      	ldrb	r2, [r2, #0]
	buffer_out[3] = 0x01;
100427e2:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x14;
100427e4:	3313      	adds	r3, #19
100427e6:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100427e8:	33e8      	adds	r3, #232	; 0xe8
	rp0->Number_Of_Packets = Number_Of_Packets;
100427ea:	72a2      	strb	r2, [r4, #10]
	buffer_out[5] = 0xfc;
100427ec:	7163      	strb	r3, [r4, #5]
}
100427ee:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

100427f0 <aci_hal_get_anchor_period_process>:
/* tBleStatus aci_hal_get_anchor_period(uint32_t *Anchor_Period,
 uint32_t *Max_Free_Slot);
 */
/* Command len: 0 */
/* Response len: 1 + 4 + 4 */
uint16_t aci_hal_get_anchor_period_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100427f0:	b537      	push	{r0, r1, r2, r4, r5, lr}

	int output_size = 1 + 4 + 4;
	/* Output params */
	aci_hal_get_anchor_period_rp0 *rp0 = (aci_hal_get_anchor_period_rp0 *) (buffer_out + 6);
	uint32_t Anchor_Period = 0;
100427f2:	2000      	movs	r0, #0
uint16_t aci_hal_get_anchor_period_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100427f4:	0014      	movs	r4, r2
	uint32_t Anchor_Period = 0;
100427f6:	9000      	str	r0, [sp, #0]
	uint32_t Max_Free_Slot = 0;
100427f8:	9001      	str	r0, [sp, #4]

	if (buffer_out_max_length < (1 + 4 + 4 + 6)) {
100427fa:	2b0e      	cmp	r3, #14
100427fc:	d92f      	bls.n	1004285e <aci_hal_get_anchor_period_process+0x6e>
		return 0;
	}
	rp0->Status = aci_hal_get_anchor_period(&Anchor_Period, &Max_Free_Slot);
100427fe:	ad01      	add	r5, sp, #4
10042800:	0029      	movs	r1, r5
10042802:	4668      	mov	r0, sp
10042804:	f00a fa24 	bl	1004cc50 <aci_hal_get_anchor_period>
	rp0->Anchor_Period = Anchor_Period;
10042808:	466a      	mov	r2, sp
1004280a:	7812      	ldrb	r2, [r2, #0]
	rp0->Max_Free_Slot = Max_Free_Slot;
	buffer_out[0] = 0x04;
1004280c:	2304      	movs	r3, #4
	rp0->Anchor_Period = Anchor_Period;
1004280e:	71e2      	strb	r2, [r4, #7]
10042810:	466a      	mov	r2, sp
10042812:	3201      	adds	r2, #1
10042814:	7812      	ldrb	r2, [r2, #0]
	rp0->Status = aci_hal_get_anchor_period(&Anchor_Period, &Max_Free_Slot);
10042816:	71a0      	strb	r0, [r4, #6]
	rp0->Anchor_Period = Anchor_Period;
10042818:	7222      	strb	r2, [r4, #8]
1004281a:	466a      	mov	r2, sp
1004281c:	3202      	adds	r2, #2
1004281e:	7812      	ldrb	r2, [r2, #0]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x19;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
10042820:	200f      	movs	r0, #15
	rp0->Anchor_Period = Anchor_Period;
10042822:	7262      	strb	r2, [r4, #9]
10042824:	466a      	mov	r2, sp
10042826:	3203      	adds	r2, #3
10042828:	7812      	ldrb	r2, [r2, #0]
	buffer_out[0] = 0x04;
1004282a:	7023      	strb	r3, [r4, #0]
	rp0->Anchor_Period = Anchor_Period;
1004282c:	72a2      	strb	r2, [r4, #10]
	rp0->Max_Free_Slot = Max_Free_Slot;
1004282e:	782a      	ldrb	r2, [r5, #0]
	buffer_out[1] = 0x0E;
10042830:	330a      	adds	r3, #10
	rp0->Max_Free_Slot = Max_Free_Slot;
10042832:	72e2      	strb	r2, [r4, #11]
10042834:	466a      	mov	r2, sp
10042836:	3205      	adds	r2, #5
10042838:	7812      	ldrb	r2, [r2, #0]
	buffer_out[1] = 0x0E;
1004283a:	7063      	strb	r3, [r4, #1]
	rp0->Max_Free_Slot = Max_Free_Slot;
1004283c:	7322      	strb	r2, [r4, #12]
1004283e:	466a      	mov	r2, sp
10042840:	3206      	adds	r2, #6
10042842:	7812      	ldrb	r2, [r2, #0]
	buffer_out[2] = output_size + 3;
10042844:	3b02      	subs	r3, #2
	rp0->Max_Free_Slot = Max_Free_Slot;
10042846:	7362      	strb	r2, [r4, #13]
10042848:	466a      	mov	r2, sp
	buffer_out[2] = output_size + 3;
1004284a:	70a3      	strb	r3, [r4, #2]
	rp0->Max_Free_Slot = Max_Free_Slot;
1004284c:	3207      	adds	r2, #7
	buffer_out[3] = 0x01;
1004284e:	3b0b      	subs	r3, #11
	rp0->Max_Free_Slot = Max_Free_Slot;
10042850:	7812      	ldrb	r2, [r2, #0]
	buffer_out[3] = 0x01;
10042852:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x19;
10042854:	3318      	adds	r3, #24
10042856:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10042858:	33e3      	adds	r3, #227	; 0xe3
	rp0->Max_Free_Slot = Max_Free_Slot;
1004285a:	73a2      	strb	r2, [r4, #14]
	buffer_out[5] = 0xfc;
1004285c:	7163      	strb	r3, [r4, #5]
}
1004285e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10042860 <aci_gap_set_limited_discoverable_process>:
 uint16_t Slave_Conn_Interval_Min,
 uint16_t Slave_Conn_Interval_Max);
 */
/* Command len: 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t)) + 2 + 2 */
/* Response len: 1 */
uint16_t aci_gap_set_limited_discoverable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042860:	b5f0      	push	{r4, r5, r6, r7, lr}
10042862:	0006      	movs	r6, r0
10042864:	b08d      	sub	sp, #52	; 0x34
10042866:	0014      	movs	r4, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 3);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10042868:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
1004286a:	2b06      	cmp	r3, #6
1004286c:	d93f      	bls.n	100428ee <aci_gap_set_limited_discoverable_process+0x8e>
	aci_gap_set_limited_discoverable_cp1 *cp1 = (aci_gap_set_limited_discoverable_cp1 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t))));
1004286e:	7a37      	ldrb	r7, [r6, #8]
	}
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
10042870:	7870      	ldrb	r0, [r6, #1]
	aci_gap_set_limited_discoverable_cp1 *cp1 = (aci_gap_set_limited_discoverable_cp1 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t))));
10042872:	003b      	movs	r3, r7
10042874:	3309      	adds	r3, #9
10042876:	18f3      	adds	r3, r6, r3
10042878:	9308      	str	r3, [sp, #32]
	aci_gap_set_limited_discoverable_cp2 *cp2 = (aci_gap_set_limited_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
1004287a:	781b      	ldrb	r3, [r3, #0]
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
1004287c:	79b2      	ldrb	r2, [r6, #6]
	aci_gap_set_limited_discoverable_cp2 *cp2 = (aci_gap_set_limited_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
1004287e:	469c      	mov	ip, r3
10042880:	003b      	movs	r3, r7
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
10042882:	9209      	str	r2, [sp, #36]	; 0x24
10042884:	7972      	ldrb	r2, [r6, #5]
10042886:	7931      	ldrb	r1, [r6, #4]
10042888:	0212      	lsls	r2, r2, #8
1004288a:	430a      	orrs	r2, r1
1004288c:	920a      	str	r2, [sp, #40]	; 0x28
1004288e:	78f1      	ldrb	r1, [r6, #3]
10042890:	78b2      	ldrb	r2, [r6, #2]
	aci_gap_set_limited_discoverable_cp2 *cp2 = (aci_gap_set_limited_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
10042892:	330a      	adds	r3, #10
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
10042894:	0209      	lsls	r1, r1, #8
10042896:	4311      	orrs	r1, r2
	aci_gap_set_limited_discoverable_cp2 *cp2 = (aci_gap_set_limited_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
10042898:	4463      	add	r3, ip
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
1004289a:	910b      	str	r1, [sp, #44]	; 0x2c
	aci_gap_set_limited_discoverable_cp2 *cp2 = (aci_gap_set_limited_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
1004289c:	18f3      	adds	r3, r6, r3
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
1004289e:	789a      	ldrb	r2, [r3, #2]
	aci_gap_set_limited_discoverable_cp1 *cp1 = (aci_gap_set_limited_discoverable_cp1 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t))));
100428a0:	1c75      	adds	r5, r6, #1
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
100428a2:	0011      	movs	r1, r2
100428a4:	78da      	ldrb	r2, [r3, #3]
100428a6:	3609      	adds	r6, #9
100428a8:	0212      	lsls	r2, r2, #8
100428aa:	430a      	orrs	r2, r1
100428ac:	9206      	str	r2, [sp, #24]
100428ae:	781a      	ldrb	r2, [r3, #0]
100428b0:	785b      	ldrb	r3, [r3, #1]
100428b2:	9602      	str	r6, [sp, #8]
100428b4:	021b      	lsls	r3, r3, #8
100428b6:	431a      	orrs	r2, r3
			cp1->Service_Uuid_length /* 1 */, cp1->Service_Uuid_List /* cp1->Service_Uuid_length * (sizeof(uint8_t)) */, cp2->Slave_Conn_Interval_Min /* 2 */, cp2->Slave_Conn_Interval_Max /* 2 */);
100428b8:	9b08      	ldr	r3, [sp, #32]
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
100428ba:	9205      	str	r2, [sp, #20]
			cp1->Service_Uuid_length /* 1 */, cp1->Service_Uuid_List /* cp1->Service_Uuid_length * (sizeof(uint8_t)) */, cp2->Slave_Conn_Interval_Min /* 2 */, cp2->Slave_Conn_Interval_Max /* 2 */);
100428bc:	3301      	adds	r3, #1
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
100428be:	9304      	str	r3, [sp, #16]
100428c0:	4663      	mov	r3, ip
100428c2:	9701      	str	r7, [sp, #4]
100428c4:	9303      	str	r3, [sp, #12]
100428c6:	79ab      	ldrb	r3, [r5, #6]
100428c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100428ca:	9300      	str	r3, [sp, #0]
100428cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
100428ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
100428d0:	f004 f93c 	bl	10046b4c <aci_gap_set_limited_discoverable>
	buffer_out[0] = 0x04;
100428d4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100428d6:	220f      	movs	r2, #15
	*status = aci_gap_set_limited_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */,
100428d8:	70e0      	strb	r0, [r4, #3]
	buffer_out[2] = output_size + 3;
	buffer_out[4] = 0x01;
	buffer_out[5] = 0x82;
	buffer_out[6] = 0xfc;
	return (output_size + 6);
100428da:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
100428dc:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100428de:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
100428e0:	3b03      	subs	r3, #3
100428e2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x82;
100428e4:	3381      	adds	r3, #129	; 0x81
100428e6:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
100428e8:	337a      	adds	r3, #122	; 0x7a
	buffer_out[1] = 0x0F;
100428ea:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfc;
100428ec:	71a3      	strb	r3, [r4, #6]
}
100428ee:	b00d      	add	sp, #52	; 0x34
100428f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

100428f2 <aci_gap_set_discoverable_process>:
 uint16_t Slave_Conn_Interval_Min,
 uint16_t Slave_Conn_Interval_Max);
 */
/* Command len: 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t)) + 2 + 2 */
/* Response len: 1 */
uint16_t aci_gap_set_discoverable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100428f2:	b5f0      	push	{r4, r5, r6, r7, lr}
100428f4:	0006      	movs	r6, r0
100428f6:	b08d      	sub	sp, #52	; 0x34
100428f8:	0014      	movs	r4, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
100428fa:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100428fc:	2b06      	cmp	r3, #6
100428fe:	d93f      	bls.n	10042980 <aci_gap_set_discoverable_process+0x8e>
	aci_gap_set_discoverable_cp1 *cp1 = (aci_gap_set_discoverable_cp1 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t))));
10042900:	7a37      	ldrb	r7, [r6, #8]
	}
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
10042902:	7870      	ldrb	r0, [r6, #1]
	aci_gap_set_discoverable_cp1 *cp1 = (aci_gap_set_discoverable_cp1 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t))));
10042904:	003b      	movs	r3, r7
10042906:	3309      	adds	r3, #9
10042908:	18f3      	adds	r3, r6, r3
1004290a:	9308      	str	r3, [sp, #32]
	aci_gap_set_discoverable_cp2 *cp2 = (aci_gap_set_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
1004290c:	781b      	ldrb	r3, [r3, #0]
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
1004290e:	79b2      	ldrb	r2, [r6, #6]
	aci_gap_set_discoverable_cp2 *cp2 = (aci_gap_set_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
10042910:	469c      	mov	ip, r3
10042912:	003b      	movs	r3, r7
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
10042914:	9209      	str	r2, [sp, #36]	; 0x24
10042916:	7972      	ldrb	r2, [r6, #5]
10042918:	7931      	ldrb	r1, [r6, #4]
1004291a:	0212      	lsls	r2, r2, #8
1004291c:	430a      	orrs	r2, r1
1004291e:	920a      	str	r2, [sp, #40]	; 0x28
10042920:	78f1      	ldrb	r1, [r6, #3]
10042922:	78b2      	ldrb	r2, [r6, #2]
	aci_gap_set_discoverable_cp2 *cp2 = (aci_gap_set_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
10042924:	330a      	adds	r3, #10
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
10042926:	0209      	lsls	r1, r1, #8
10042928:	4311      	orrs	r1, r2
	aci_gap_set_discoverable_cp2 *cp2 = (aci_gap_set_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
1004292a:	4463      	add	r3, ip
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
1004292c:	910b      	str	r1, [sp, #44]	; 0x2c
	aci_gap_set_discoverable_cp2 *cp2 = (aci_gap_set_discoverable_cp2 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t)) + 1 + cp1->Service_Uuid_length * (sizeof(uint8_t))));
1004292e:	18f3      	adds	r3, r6, r3
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
10042930:	789a      	ldrb	r2, [r3, #2]
	aci_gap_set_discoverable_cp1 *cp1 = (aci_gap_set_discoverable_cp1 *) (buffer_in + 1 + (0 + 1 + 2 + 2 + 1 + 1 + 1 + cp0->Local_Name_Length * (sizeof(uint8_t))));
10042932:	1c75      	adds	r5, r6, #1
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
10042934:	0011      	movs	r1, r2
10042936:	78da      	ldrb	r2, [r3, #3]
10042938:	3609      	adds	r6, #9
1004293a:	0212      	lsls	r2, r2, #8
1004293c:	430a      	orrs	r2, r1
1004293e:	9206      	str	r2, [sp, #24]
10042940:	781a      	ldrb	r2, [r3, #0]
10042942:	785b      	ldrb	r3, [r3, #1]
10042944:	9602      	str	r6, [sp, #8]
10042946:	021b      	lsls	r3, r3, #8
10042948:	431a      	orrs	r2, r3
			cp1->Service_Uuid_List /* cp1->Service_Uuid_length * (sizeof(uint8_t)) */, cp2->Slave_Conn_Interval_Min /* 2 */, cp2->Slave_Conn_Interval_Max /* 2 */);
1004294a:	9b08      	ldr	r3, [sp, #32]
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
1004294c:	9205      	str	r2, [sp, #20]
			cp1->Service_Uuid_List /* cp1->Service_Uuid_length * (sizeof(uint8_t)) */, cp2->Slave_Conn_Interval_Min /* 2 */, cp2->Slave_Conn_Interval_Max /* 2 */);
1004294e:	3301      	adds	r3, #1
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
10042950:	9304      	str	r3, [sp, #16]
10042952:	4663      	mov	r3, ip
10042954:	9701      	str	r7, [sp, #4]
10042956:	9303      	str	r3, [sp, #12]
10042958:	79ab      	ldrb	r3, [r5, #6]
1004295a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004295c:	9300      	str	r3, [sp, #0]
1004295e:	990b      	ldr	r1, [sp, #44]	; 0x2c
10042960:	9b09      	ldr	r3, [sp, #36]	; 0x24
10042962:	f004 f8b9 	bl	10046ad8 <aci_gap_set_discoverable>
	buffer_out[0] = 0x04;
10042966:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10042968:	220e      	movs	r2, #14
	*status = aci_gap_set_discoverable(cp0->Advertising_Type /* 1 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Advertising_Filter_Policy /* 1 */, cp0->Local_Name_Length /* 1 */, cp0->Local_Name /* cp0->Local_Name_Length * (sizeof(uint8_t)) */, cp1->Service_Uuid_length /* 1 */,
1004296a:	71a0      	strb	r0, [r4, #6]
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x83;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
1004296c:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
1004296e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042970:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042972:	3b03      	subs	r3, #3
10042974:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x83;
10042976:	3382      	adds	r3, #130	; 0x82
10042978:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
1004297a:	3379      	adds	r3, #121	; 0x79
	buffer_out[1] = 0x0E;
1004297c:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
1004297e:	7163      	strb	r3, [r4, #5]
}
10042980:	b00d      	add	sp, #52	; 0x34
10042982:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042984 <aci_gap_init_process>:
 uint16_t *Dev_Name_Char_Handle,
 uint16_t *Appearance_Char_Handle);
 */
/* Command len: 1 + 1 + 1 */
/* Response len: 1 + 2 + 2 + 2 */
uint16_t aci_gap_init_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042984:	b5f0      	push	{r4, r5, r6, r7, lr}
	aci_gap_init_cp0 *cp0 = (aci_gap_init_cp0 *) (buffer_in + 1 + (0));

	int output_size = 1 + 2 + 2 + 2;
	/* Output params */
	aci_gap_init_rp0 *rp0 = (aci_gap_init_rp0 *) (buffer_out + 6);
	uint16_t Service_Handle = 0;
10042986:	270a      	movs	r7, #10
	uint16_t Dev_Name_Char_Handle = 0;
	uint16_t Appearance_Char_Handle = 0;
10042988:	250e      	movs	r5, #14
uint16_t aci_gap_init_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004298a:	0014      	movs	r4, r2
	uint16_t Service_Handle = 0;
1004298c:	2200      	movs	r2, #0
uint16_t aci_gap_init_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004298e:	b085      	sub	sp, #20
	uint16_t Service_Handle = 0;
10042990:	446f      	add	r7, sp
	uint16_t Dev_Name_Char_Handle = 0;
10042992:	ae03      	add	r6, sp, #12
	uint16_t Appearance_Char_Handle = 0;
10042994:	446d      	add	r5, sp
	uint16_t Service_Handle = 0;
10042996:	803a      	strh	r2, [r7, #0]
	uint16_t Dev_Name_Char_Handle = 0;
10042998:	8032      	strh	r2, [r6, #0]
	uint16_t Appearance_Char_Handle = 0;
1004299a:	802a      	strh	r2, [r5, #0]

	if (buffer_out_max_length < (1 + 2 + 2 + 2 + 6)) {
1004299c:	2b0c      	cmp	r3, #12
1004299e:	d921      	bls.n	100429e4 <aci_gap_init_process+0x60>
		return 0;
	}
	rp0->Status = aci_gap_init(cp0->Role /* 1 */, cp0->privacy_enabled /* 1 */, cp0->device_name_char_len /* 1 */, &Service_Handle, &Dev_Name_Char_Handle, &Appearance_Char_Handle);
100429a0:	78c2      	ldrb	r2, [r0, #3]
100429a2:	7881      	ldrb	r1, [r0, #2]
100429a4:	003b      	movs	r3, r7
100429a6:	7840      	ldrb	r0, [r0, #1]
100429a8:	9501      	str	r5, [sp, #4]
100429aa:	9600      	str	r6, [sp, #0]
100429ac:	f003 ffb4 	bl	10046918 <aci_gap_init>
	rp0->Service_Handle = Service_Handle;
100429b0:	783b      	ldrb	r3, [r7, #0]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x8a;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
100429b2:	220d      	movs	r2, #13
	rp0->Service_Handle = Service_Handle;
100429b4:	71e3      	strb	r3, [r4, #7]
100429b6:	787b      	ldrb	r3, [r7, #1]
	rp0->Status = aci_gap_init(cp0->Role /* 1 */, cp0->privacy_enabled /* 1 */, cp0->device_name_char_len /* 1 */, &Service_Handle, &Dev_Name_Char_Handle, &Appearance_Char_Handle);
100429b8:	71a0      	strb	r0, [r4, #6]
	rp0->Service_Handle = Service_Handle;
100429ba:	7223      	strb	r3, [r4, #8]
	rp0->Dev_Name_Char_Handle = Dev_Name_Char_Handle;
100429bc:	7833      	ldrb	r3, [r6, #0]
100429be:	7263      	strb	r3, [r4, #9]
100429c0:	7873      	ldrb	r3, [r6, #1]
100429c2:	72a3      	strb	r3, [r4, #10]
	rp0->Appearance_Char_Handle = Appearance_Char_Handle;
100429c4:	782b      	ldrb	r3, [r5, #0]
100429c6:	72e3      	strb	r3, [r4, #11]
100429c8:	786b      	ldrb	r3, [r5, #1]
100429ca:	7323      	strb	r3, [r4, #12]
	buffer_out[0] = 0x04;
100429cc:	2304      	movs	r3, #4
100429ce:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100429d0:	330a      	adds	r3, #10
100429d2:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100429d4:	3b04      	subs	r3, #4
100429d6:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100429d8:	3b09      	subs	r3, #9
100429da:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x8a;
100429dc:	3389      	adds	r3, #137	; 0x89
100429de:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100429e0:	3372      	adds	r3, #114	; 0x72
100429e2:	7163      	strb	r3, [r4, #5]
}
100429e4:	0010      	movs	r0, r2
100429e6:	b005      	add	sp, #20
100429e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

100429ea <aci_gap_get_security_level_process>:
 uint8_t *Security_Mode,
 uint8_t *Security_Level);
 */
/* Command len: 2 */
/* Response len: 1 + 1 + 1 */
uint16_t aci_gap_get_security_level_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100429ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
100429ec:	0014      	movs	r4, r2
	aci_gap_get_security_level_cp0 *cp0 = (aci_gap_get_security_level_cp0 *) (buffer_in + 1 + (0));

	int output_size = 1 + 1 + 1;
	/* Output params */
	aci_gap_get_security_level_rp0 *rp0 = (aci_gap_get_security_level_rp0 *) (buffer_out + 6);
	uint8_t Security_Mode = 0;
100429ee:	466a      	mov	r2, sp
	uint8_t Security_Level = 0;
100429f0:	4669      	mov	r1, sp
	uint8_t Security_Mode = 0;
100429f2:	1d96      	adds	r6, r2, #6
100429f4:	2200      	movs	r2, #0
	uint8_t Security_Level = 0;
100429f6:	1dcd      	adds	r5, r1, #7
	uint8_t Security_Mode = 0;
100429f8:	7032      	strb	r2, [r6, #0]
	uint8_t Security_Level = 0;
100429fa:	71ca      	strb	r2, [r1, #7]

	if (buffer_out_max_length < (1 + 1 + 1 + 6)) {
100429fc:	2b08      	cmp	r3, #8
100429fe:	d919      	bls.n	10042a34 <aci_gap_get_security_level_process+0x4a>
		return 0;
	}
	rp0->Status = aci_gap_get_security_level(cp0->Connection_Handle /* 2 */, &Security_Mode, &Security_Level);
10042a00:	7843      	ldrb	r3, [r0, #1]
10042a02:	7880      	ldrb	r0, [r0, #2]
10042a04:	002a      	movs	r2, r5
10042a06:	0200      	lsls	r0, r0, #8
10042a08:	4318      	orrs	r0, r3
10042a0a:	0031      	movs	r1, r6
10042a0c:	f003 ff7f 	bl	1004690e <aci_gap_get_security_level>
	rp0->Security_Mode = Security_Mode;
	rp0->Security_Level = Security_Level;
	buffer_out[0] = 0x04;
10042a10:	2304      	movs	r3, #4
	rp0->Security_Mode = Security_Mode;
10042a12:	7832      	ldrb	r2, [r6, #0]
	buffer_out[0] = 0x04;
10042a14:	7023      	strb	r3, [r4, #0]
	rp0->Security_Mode = Security_Mode;
10042a16:	71e2      	strb	r2, [r4, #7]
	rp0->Security_Level = Security_Level;
10042a18:	782a      	ldrb	r2, [r5, #0]
	buffer_out[1] = 0x0E;
10042a1a:	330a      	adds	r3, #10
	rp0->Security_Level = Security_Level;
10042a1c:	7222      	strb	r2, [r4, #8]
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x90;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
10042a1e:	2209      	movs	r2, #9
	buffer_out[1] = 0x0E;
10042a20:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042a22:	3b08      	subs	r3, #8
10042a24:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042a26:	3b05      	subs	r3, #5
10042a28:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x90;
10042a2a:	338f      	adds	r3, #143	; 0x8f
10042a2c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10042a2e:	336c      	adds	r3, #108	; 0x6c
	rp0->Status = aci_gap_get_security_level(cp0->Connection_Handle /* 2 */, &Security_Mode, &Security_Level);
10042a30:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10042a32:	7163      	strb	r3, [r4, #5]
}
10042a34:	0010      	movs	r0, r2
10042a36:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10042a38 <aci_gap_set_broadcast_mode_process>:
 uint8_t Num_of_Whitelist_Entries,
 Whitelist_Entry_t Whitelist_Entry[]);
 */
/* Command len: 2 + 2 + 1 + 1 + 1 + cp0->Adv_Data_Length * (sizeof(uint8_t)) + 1 + cp1->Num_of_Whitelist_Entries * (sizeof(Whitelist_Entry_t)) */
/* Response len: 1 */
uint16_t aci_gap_set_broadcast_mode_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042a38:	b5f0      	push	{r4, r5, r6, r7, lr}
10042a3a:	0005      	movs	r5, r0
10042a3c:	b0c7      	sub	sp, #284	; 0x11c
10042a3e:	0014      	movs	r4, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10042a40:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10042a42:	2b06      	cmp	r3, #6
10042a44:	d934      	bls.n	10042ab0 <aci_gap_set_broadcast_mode_process+0x78>
10042a46:	2615      	movs	r6, #21
	aci_gap_set_broadcast_mode_cp1 *cp1 = (aci_gap_set_broadcast_mode_cp1 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + 1 + 1 + cp0->Adv_Data_Length * (sizeof(uint8_t))));
10042a48:	79eb      	ldrb	r3, [r5, #7]
10042a4a:	9004      	str	r0, [sp, #16]
10042a4c:	3308      	adds	r3, #8
10042a4e:	18eb      	adds	r3, r5, r3
10042a50:	9305      	str	r3, [sp, #20]
10042a52:	ab02      	add	r3, sp, #8
10042a54:	18f6      	adds	r6, r6, r3
10042a56:	9b05      	ldr	r3, [sp, #20]
10042a58:	1c9f      	adds	r7, r3, #2
	}
	{
		int i;
		for (i = 0; i < cp1->Num_of_Whitelist_Entries; i++) {
10042a5a:	9b05      	ldr	r3, [sp, #20]
10042a5c:	9a04      	ldr	r2, [sp, #16]
10042a5e:	781b      	ldrb	r3, [r3, #0]
10042a60:	429a      	cmp	r2, r3
10042a62:	db27      	blt.n	10042ab4 <aci_gap_set_broadcast_mode_process+0x7c>
			Whitelist_Entry[i].Peer_Address_Type = cp1->Whitelist_Entry[i].Peer_Address_Type;
			Osal_MemCpy((void *) &Whitelist_Entry[i].Peer_Address, (const void *) &cp1->Whitelist_Entry[i].Peer_Address, 6);
		}
	}
	*status = aci_gap_set_broadcast_mode(cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Advertising_Type /* 1 */, cp0->Own_Address_Type /* 1 */, cp0->Adv_Data_Length /* 1 */, cp0->Adv_Data /* cp0->Adv_Data_Length * (sizeof(uint8_t)) */, cp1->Num_of_Whitelist_Entries /* 1 */,
10042a64:	796a      	ldrb	r2, [r5, #5]
10042a66:	79af      	ldrb	r7, [r5, #6]
10042a68:	9204      	str	r2, [sp, #16]
10042a6a:	7929      	ldrb	r1, [r5, #4]
10042a6c:	78e8      	ldrb	r0, [r5, #3]
10042a6e:	0209      	lsls	r1, r1, #8
10042a70:	4301      	orrs	r1, r0
10042a72:	7868      	ldrb	r0, [r5, #1]
10042a74:	1c6e      	adds	r6, r5, #1
10042a76:	4684      	mov	ip, r0
10042a78:	4662      	mov	r2, ip
10042a7a:	78a8      	ldrb	r0, [r5, #2]
10042a7c:	3508      	adds	r5, #8
10042a7e:	0200      	lsls	r0, r0, #8
10042a80:	4310      	orrs	r0, r2
10042a82:	aa07      	add	r2, sp, #28
10042a84:	9203      	str	r2, [sp, #12]
10042a86:	9302      	str	r3, [sp, #8]
10042a88:	9501      	str	r5, [sp, #4]
10042a8a:	79b3      	ldrb	r3, [r6, #6]
10042a8c:	9a04      	ldr	r2, [sp, #16]
10042a8e:	9300      	str	r3, [sp, #0]
10042a90:	003b      	movs	r3, r7
10042a92:	f003 ffef 	bl	10046a74 <aci_gap_set_broadcast_mode>
			Whitelist_Entry /* cp1->Num_of_Whitelist_Entries * (sizeof(Whitelist_Entry_t)) */);
	buffer_out[0] = 0x04;
10042a96:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10042a98:	220e      	movs	r2, #14
	*status = aci_gap_set_broadcast_mode(cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Advertising_Type /* 1 */, cp0->Own_Address_Type /* 1 */, cp0->Adv_Data_Length /* 1 */, cp0->Adv_Data /* cp0->Adv_Data_Length * (sizeof(uint8_t)) */, cp1->Num_of_Whitelist_Entries /* 1 */,
10042a9a:	71a0      	strb	r0, [r4, #6]
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0xa1;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
10042a9c:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10042a9e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042aa0:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042aa2:	3b03      	subs	r3, #3
10042aa4:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa1;
10042aa6:	33a0      	adds	r3, #160	; 0xa0
10042aa8:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10042aaa:	335b      	adds	r3, #91	; 0x5b
	buffer_out[1] = 0x0E;
10042aac:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
10042aae:	7163      	strb	r3, [r4, #5]
}
10042ab0:	b047      	add	sp, #284	; 0x11c
10042ab2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			Whitelist_Entry[i].Peer_Address_Type = cp1->Whitelist_Entry[i].Peer_Address_Type;
10042ab4:	1e7a      	subs	r2, r7, #1
10042ab6:	7812      	ldrb	r2, [r2, #0]
10042ab8:	1e73      	subs	r3, r6, #1
10042aba:	701a      	strb	r2, [r3, #0]
			Osal_MemCpy((void *) &Whitelist_Entry[i].Peer_Address, (const void *) &cp1->Whitelist_Entry[i].Peer_Address, 6);
10042abc:	0039      	movs	r1, r7
10042abe:	0030      	movs	r0, r6
10042ac0:	2206      	movs	r2, #6
10042ac2:	f7fd fe5e 	bl	10040782 <Osal_MemCpy>
		for (i = 0; i < cp1->Num_of_Whitelist_Entries; i++) {
10042ac6:	9b04      	ldr	r3, [sp, #16]
10042ac8:	3607      	adds	r6, #7
10042aca:	3301      	adds	r3, #1
10042acc:	9304      	str	r3, [sp, #16]
10042ace:	3707      	adds	r7, #7
10042ad0:	e7c3      	b.n	10042a5a <aci_gap_set_broadcast_mode_process+0x22>

10042ad2 <aci_gap_get_bonded_devices_process>:
/* tBleStatus aci_gap_get_bonded_devices(uint8_t *Num_of_Addresses,
 Bonded_Device_Entry_t Bonded_Device_Entry[]);
 */
/* Command len: 0 */
/* Response len: 1 + 1 + rp0->Num_of_Addresses * (sizeof(Bonded_Device_Entry_t)) */
uint16_t aci_gap_get_bonded_devices_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042ad2:	b5f0      	push	{r4, r5, r6, r7, lr}

	int output_size = 0;
	/* Output params */
	aci_gap_get_bonded_devices_rp0 *rp0 = (aci_gap_get_bonded_devices_rp0 *) (buffer_out + 6);
	uint8_t Num_of_Addresses = 0;
10042ad4:	2700      	movs	r7, #0
uint16_t aci_gap_get_bonded_devices_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042ad6:	b0c3      	sub	sp, #268	; 0x10c
10042ad8:	001e      	movs	r6, r3
	uint8_t Num_of_Addresses = 0;
10042ada:	ab02      	add	r3, sp, #8
10042adc:	1cdd      	adds	r5, r3, #3
uint16_t aci_gap_get_bonded_devices_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042ade:	0014      	movs	r4, r2
	uint8_t Num_of_Addresses = 0;
10042ae0:	702f      	strb	r7, [r5, #0]
	Bonded_Device_Entry_t Bonded_Device_Entry[HCI_MAX_PAYLOAD_SIZE / sizeof(Bonded_Device_Entry_t)];

	if (buffer_out_max_length < (1 + 6)) {
10042ae2:	2e06      	cmp	r6, #6
10042ae4:	d802      	bhi.n	10042aec <aci_gap_get_bonded_devices_process+0x1a>
		return 0;
10042ae6:	2000      	movs	r0, #0
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0xa3;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
}
10042ae8:	b043      	add	sp, #268	; 0x10c
10042aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
	rp0->Status = aci_gap_get_bonded_devices(&Num_of_Addresses, Bonded_Device_Entry);
10042aec:	a903      	add	r1, sp, #12
10042aee:	0028      	movs	r0, r5
10042af0:	f003 fef9 	bl	100468e6 <aci_gap_get_bonded_devices>
10042af4:	71a0      	strb	r0, [r4, #6]
	if (buffer_out_max_length < (output_size + (1) + 6)) {
10042af6:	2e07      	cmp	r6, #7
10042af8:	d0f5      	beq.n	10042ae6 <aci_gap_get_bonded_devices_process+0x14>
		for (i = 0; i < Num_of_Addresses; i++) {
10042afa:	2002      	movs	r0, #2
	rp0->Num_of_Addresses = Num_of_Addresses;
10042afc:	782a      	ldrb	r2, [r5, #0]
10042afe:	71e2      	strb	r2, [r4, #7]
		for (i = 0; i < Num_of_Addresses; i++) {
10042b00:	782b      	ldrb	r3, [r5, #0]
10042b02:	429f      	cmp	r7, r3
10042b04:	db0e      	blt.n	10042b24 <aci_gap_get_bonded_devices_process+0x52>
	buffer_out[0] = 0x04;
10042b06:	2304      	movs	r3, #4
10042b08:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042b0a:	330a      	adds	r3, #10
10042b0c:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042b0e:	1cc3      	adds	r3, r0, #3
10042b10:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042b12:	2301      	movs	r3, #1
10042b14:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa3;
10042b16:	33a2      	adds	r3, #162	; 0xa2
10042b18:	7123      	strb	r3, [r4, #4]
	return (output_size + 6);
10042b1a:	3006      	adds	r0, #6
	buffer_out[5] = 0xfc;
10042b1c:	3359      	adds	r3, #89	; 0x59
10042b1e:	7163      	strb	r3, [r4, #5]
	return (output_size + 6);
10042b20:	b280      	uxth	r0, r0
10042b22:	e7e1      	b.n	10042ae8 <aci_gap_get_bonded_devices_process+0x16>
10042b24:	1dc3      	adds	r3, r0, #7
10042b26:	9301      	str	r3, [sp, #4]
			if (buffer_out_max_length < (output_size + (sizeof(uint8_t)) + 6)) {
10042b28:	429e      	cmp	r6, r3
10042b2a:	d3dc      	bcc.n	10042ae6 <aci_gap_get_bonded_devices_process+0x14>
			rp0->Bonded_Device_Entry[i].Address_Type = Bonded_Device_Entry[i].Address_Type;
10042b2c:	a903      	add	r1, sp, #12
10042b2e:	1e82      	subs	r2, r0, #2
10042b30:	5c8a      	ldrb	r2, [r1, r2]
10042b32:	1823      	adds	r3, r4, r0
10042b34:	719a      	strb	r2, [r3, #6]
			if (buffer_out_max_length < (output_size + (6) + 6)) {
10042b36:	0003      	movs	r3, r0
10042b38:	330c      	adds	r3, #12
10042b3a:	429e      	cmp	r6, r3
10042b3c:	ddd3      	ble.n	10042ae6 <aci_gap_get_bonded_devices_process+0x14>
			Osal_MemCpy((void *) &rp0->Bonded_Device_Entry[i].Address, (const void *) Bonded_Device_Entry[i].Address, 6);
10042b3e:	9b01      	ldr	r3, [sp, #4]
10042b40:	3801      	subs	r0, #1
10042b42:	1809      	adds	r1, r1, r0
10042b44:	2206      	movs	r2, #6
10042b46:	18e0      	adds	r0, r4, r3
10042b48:	f7fd fe1b 	bl	10040782 <Osal_MemCpy>
		for (i = 0; i < Num_of_Addresses; i++) {
10042b4c:	3701      	adds	r7, #1
10042b4e:	9801      	ldr	r0, [sp, #4]
10042b50:	e7d6      	b.n	10042b00 <aci_gap_get_bonded_devices_process+0x2e>

10042b52 <aci_gap_get_oob_data_process>:
 uint8_t *OOB_Data_Len,
 uint8_t OOB_Data[16]);
 */
/* Command len: 1 */
/* Response len: 1 + 1 + 6 + 1 + 1 + 16 */
uint16_t aci_gap_get_oob_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042b52:	b5f0      	push	{r4, r5, r6, r7, lr}
	aci_gap_get_oob_data_cp0 *cp0 = (aci_gap_get_oob_data_cp0 *) (buffer_in + 1 + (0));

	int output_size = 1 + 1 + 6 + 1 + 1 + 16;
	/* Output params */
	aci_gap_get_oob_data_rp0 *rp0 = (aci_gap_get_oob_data_rp0 *) (buffer_out + 6);
	uint8_t Address_Type = 0;
10042b54:	270e      	movs	r7, #14
uint16_t aci_gap_get_oob_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042b56:	b08d      	sub	sp, #52	; 0x34
	uint8_t Address[6];
	uint8_t OOB_Data_Len = 0;
10042b58:	260f      	movs	r6, #15
uint16_t aci_gap_get_oob_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042b5a:	9003      	str	r0, [sp, #12]
	uint8_t Address_Type = 0;
10042b5c:	2000      	movs	r0, #0
uint16_t aci_gap_get_oob_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042b5e:	0014      	movs	r4, r2
	uint8_t Address_Type = 0;
10042b60:	aa02      	add	r2, sp, #8
10042b62:	18bf      	adds	r7, r7, r2
	uint8_t OOB_Data_Len = 0;
10042b64:	18b6      	adds	r6, r6, r2
	uint8_t Address_Type = 0;
10042b66:	7038      	strb	r0, [r7, #0]
	uint8_t OOB_Data_Len = 0;
10042b68:	7030      	strb	r0, [r6, #0]
	uint8_t OOB_Data[16];

	if (buffer_out_max_length < (1 + 1 + 6 + 1 + 1 + 16 + 6)) {
10042b6a:	2b1f      	cmp	r3, #31
10042b6c:	d929      	bls.n	10042bc2 <aci_gap_get_oob_data_process+0x70>
		return 0;
	}
	rp0->Status = aci_gap_get_oob_data(cp0->OOB_Data_Type /* 1 */, &Address_Type, Address, &OOB_Data_Len, OOB_Data);
10042b6e:	9b03      	ldr	r3, [sp, #12]
10042b70:	aa06      	add	r2, sp, #24
10042b72:	7858      	ldrb	r0, [r3, #1]
10042b74:	ab08      	add	r3, sp, #32
10042b76:	9300      	str	r3, [sp, #0]
10042b78:	0039      	movs	r1, r7
10042b7a:	0033      	movs	r3, r6
10042b7c:	f003 febd 	bl	100468fa <aci_gap_get_oob_data>
10042b80:	71a0      	strb	r0, [r4, #6]
	rp0->Address_Type = Address_Type;
	Osal_MemCpy((void *) rp0->Address, (const void *) Address, 6);
10042b82:	0020      	movs	r0, r4
	rp0->Address_Type = Address_Type;
10042b84:	783b      	ldrb	r3, [r7, #0]
	Osal_MemCpy((void *) rp0->Address, (const void *) Address, 6);
10042b86:	2206      	movs	r2, #6
	rp0->Address_Type = Address_Type;
10042b88:	71e3      	strb	r3, [r4, #7]
	Osal_MemCpy((void *) rp0->Address, (const void *) Address, 6);
10042b8a:	a906      	add	r1, sp, #24
10042b8c:	3008      	adds	r0, #8
10042b8e:	f7fd fdf8 	bl	10040782 <Osal_MemCpy>
	rp0->OOB_Data_Type = cp0->OOB_Data_Type;
	rp0->OOB_Data_Len = OOB_Data_Len;
	Osal_MemCpy((void *) rp0->OOB_Data, (const void *) OOB_Data, 16);
10042b92:	0020      	movs	r0, r4
	rp0->OOB_Data_Type = cp0->OOB_Data_Type;
10042b94:	9b03      	ldr	r3, [sp, #12]
	Osal_MemCpy((void *) rp0->OOB_Data, (const void *) OOB_Data, 16);
10042b96:	3010      	adds	r0, #16
	rp0->OOB_Data_Type = cp0->OOB_Data_Type;
10042b98:	785b      	ldrb	r3, [r3, #1]
	Osal_MemCpy((void *) rp0->OOB_Data, (const void *) OOB_Data, 16);
10042b9a:	2210      	movs	r2, #16
	rp0->OOB_Data_Type = cp0->OOB_Data_Type;
10042b9c:	73a3      	strb	r3, [r4, #14]
	rp0->OOB_Data_Len = OOB_Data_Len;
10042b9e:	7833      	ldrb	r3, [r6, #0]
	Osal_MemCpy((void *) rp0->OOB_Data, (const void *) OOB_Data, 16);
10042ba0:	a908      	add	r1, sp, #32
	rp0->OOB_Data_Len = OOB_Data_Len;
10042ba2:	73e3      	strb	r3, [r4, #15]
	Osal_MemCpy((void *) rp0->OOB_Data, (const void *) OOB_Data, 16);
10042ba4:	f7fd fded 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10042ba8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0xa7;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
10042baa:	2020      	movs	r0, #32
	buffer_out[0] = 0x04;
10042bac:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042bae:	330a      	adds	r3, #10
10042bb0:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042bb2:	330f      	adds	r3, #15
10042bb4:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042bb6:	3b1c      	subs	r3, #28
10042bb8:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa7;
10042bba:	33a6      	adds	r3, #166	; 0xa6
10042bbc:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10042bbe:	3355      	adds	r3, #85	; 0x55
10042bc0:	7163      	strb	r3, [r4, #5]
}
10042bc2:	b00d      	add	sp, #52	; 0x34
10042bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042bc6 <aci_gap_add_devices_to_resolving_list_process>:
 Whitelist_Identity_Entry_t Whitelist_Identity_Entry[],
 uint8_t Clear_Resolving_List);
 */
/* Command len: 1 + cp0->Num_of_Resolving_list_Entries * (sizeof(Whitelist_Identity_Entry_t)) + 1 */
/* Response len: 1 */
uint16_t aci_gap_add_devices_to_resolving_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042bc6:	b5f0      	push	{r4, r5, r6, r7, lr}
10042bc8:	0005      	movs	r5, r0
10042bca:	b0c3      	sub	sp, #268	; 0x10c
10042bcc:	0014      	movs	r4, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10042bce:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10042bd0:	2b06      	cmp	r3, #6
10042bd2:	d91e      	bls.n	10042c12 <aci_gap_add_devices_to_resolving_list_process+0x4c>
	aci_gap_add_devices_to_resolving_list_cp1 *cp1 = (aci_gap_add_devices_to_resolving_list_cp1 *) (buffer_in + 1 + (0 + 1 + cp0->Num_of_Resolving_list_Entries * (sizeof(Whitelist_Identity_Entry_t))));
10042bd4:	786b      	ldrb	r3, [r5, #1]
10042bd6:	1cef      	adds	r7, r5, #3
10042bd8:	9301      	str	r3, [sp, #4]
10042bda:	ab02      	add	r3, sp, #8
10042bdc:	1d5e      	adds	r6, r3, #5
10042bde:	9000      	str	r0, [sp, #0]
	}
	{
		int i;
		for (i = 0; i < cp0->Num_of_Resolving_list_Entries; i++) {
10042be0:	7868      	ldrb	r0, [r5, #1]
10042be2:	9b00      	ldr	r3, [sp, #0]
10042be4:	4283      	cmp	r3, r0
10042be6:	db16      	blt.n	10042c16 <aci_gap_add_devices_to_resolving_list_process+0x50>
			Whitelist_Identity_Entry[i].Peer_Identity_Address_Type = cp0->Whitelist_Identity_Entry[i].Peer_Identity_Address_Type;
			Osal_MemCpy((void *) &Whitelist_Identity_Entry[i].Peer_Identity_Address, (const void *) &cp0->Whitelist_Identity_Entry[i].Peer_Identity_Address, 6);
		}
	}
	*status = aci_gap_add_devices_to_resolving_list(cp0->Num_of_Resolving_list_Entries /* 1 */, Whitelist_Identity_Entry /* cp0->Num_of_Resolving_list_Entries * (sizeof(Whitelist_Identity_Entry_t)) */, cp1->Clear_Resolving_List /* 1 */);
10042be8:	2607      	movs	r6, #7
10042bea:	9b01      	ldr	r3, [sp, #4]
10042bec:	a903      	add	r1, sp, #12
10042bee:	4373      	muls	r3, r6
10042bf0:	18ed      	adds	r5, r5, r3
10042bf2:	78aa      	ldrb	r2, [r5, #2]
10042bf4:	f7fe fe1c 	bl	10041830 <aci_gap_add_devices_to_resolving_list>
	buffer_out[0] = 0x04;
10042bf8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10042bfa:	220e      	movs	r2, #14
	*status = aci_gap_add_devices_to_resolving_list(cp0->Num_of_Resolving_list_Entries /* 1 */, Whitelist_Identity_Entry /* cp0->Num_of_Resolving_list_Entries * (sizeof(Whitelist_Identity_Entry_t)) */, cp1->Clear_Resolving_List /* 1 */);
10042bfc:	71a0      	strb	r0, [r4, #6]
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0xa9;
	buffer_out[5] = 0xfc;
	return (output_size + 6);
10042bfe:	0030      	movs	r0, r6
	buffer_out[0] = 0x04;
10042c00:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042c02:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042c04:	3b03      	subs	r3, #3
10042c06:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa9;
10042c08:	33a8      	adds	r3, #168	; 0xa8
10042c0a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10042c0c:	3353      	adds	r3, #83	; 0x53
	buffer_out[1] = 0x0E;
10042c0e:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
10042c10:	7163      	strb	r3, [r4, #5]
}
10042c12:	b043      	add	sp, #268	; 0x10c
10042c14:	bdf0      	pop	{r4, r5, r6, r7, pc}
			Whitelist_Identity_Entry[i].Peer_Identity_Address_Type = cp0->Whitelist_Identity_Entry[i].Peer_Identity_Address_Type;
10042c16:	1e7a      	subs	r2, r7, #1
10042c18:	7812      	ldrb	r2, [r2, #0]
10042c1a:	1e73      	subs	r3, r6, #1
10042c1c:	701a      	strb	r2, [r3, #0]
			Osal_MemCpy((void *) &Whitelist_Identity_Entry[i].Peer_Identity_Address, (const void *) &cp0->Whitelist_Identity_Entry[i].Peer_Identity_Address, 6);
10042c1e:	0039      	movs	r1, r7
10042c20:	0030      	movs	r0, r6
10042c22:	2206      	movs	r2, #6
10042c24:	f7fd fdad 	bl	10040782 <Osal_MemCpy>
		for (i = 0; i < cp0->Num_of_Resolving_list_Entries; i++) {
10042c28:	9b00      	ldr	r3, [sp, #0]
10042c2a:	3607      	adds	r6, #7
10042c2c:	3301      	adds	r3, #1
10042c2e:	9300      	str	r3, [sp, #0]
10042c30:	3707      	adds	r7, #7
10042c32:	e7d5      	b.n	10042be0 <aci_gap_add_devices_to_resolving_list_process+0x1a>

10042c34 <aci_gatt_add_service_process>:
 uint8_t Max_Attribute_Records,
 uint16_t *Service_Handle);
 */
/* Command len: 1 + (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0)) + 1 + 1 */
/* Response len: 1 + 2 */
uint16_t aci_gatt_add_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042c34:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Input params */
	aci_gatt_add_service_cp0 *cp0 = (aci_gatt_add_service_cp0 *) (buffer_in + 1 + (0));
	aci_gatt_add_service_cp1 *cp1 = (aci_gatt_add_service_cp1 *) (buffer_in + 1 + (0 + 1 + (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0))));
10042c36:	7845      	ldrb	r5, [r0, #1]
uint16_t aci_gatt_add_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042c38:	0014      	movs	r4, r2
10042c3a:	b089      	sub	sp, #36	; 0x24
10042c3c:	001a      	movs	r2, r3
10042c3e:	0007      	movs	r7, r0
	aci_gatt_add_service_cp1 *cp1 = (aci_gatt_add_service_cp1 *) (buffer_in + 1 + (0 + 1 + (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0))));
10042c40:	2304      	movs	r3, #4
10042c42:	2d01      	cmp	r5, #1
10042c44:	d003      	beq.n	10042c4e <aci_gatt_add_service_process+0x1a>
10042c46:	330e      	adds	r3, #14
10042c48:	2d02      	cmp	r5, #2
10042c4a:	d000      	beq.n	10042c4e <aci_gatt_add_service_process+0x1a>
10042c4c:	3b10      	subs	r3, #16
	Service_UUID_t Service_UUID;

	int output_size = 1 + 2;
	/* Output params */
	aci_gatt_add_service_rp0 *rp0 = (aci_gatt_add_service_rp0 *) (buffer_out + 6);
	uint16_t Service_Handle = 0;
10042c4e:	260e      	movs	r6, #14
10042c50:	2000      	movs	r0, #0
10042c52:	446e      	add	r6, sp
10042c54:	8030      	strh	r0, [r6, #0]

	if (buffer_out_max_length < (1 + 2 + 6)) {
10042c56:	2a08      	cmp	r2, #8
10042c58:	d924      	bls.n	10042ca4 <aci_gatt_add_service_process+0x70>
		return 0;
	}
	Osal_MemCpy((void *) &Service_UUID.Service_UUID_16, (const void *) &cp0->Service_UUID.Service_UUID_16, (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0)));
10042c5a:	1cb9      	adds	r1, r7, #2
10042c5c:	2202      	movs	r2, #2
10042c5e:	2d01      	cmp	r5, #1
10042c60:	d003      	beq.n	10042c6a <aci_gatt_add_service_process+0x36>
10042c62:	3d02      	subs	r5, #2
10042c64:	426a      	negs	r2, r5
10042c66:	416a      	adcs	r2, r5
10042c68:	0112      	lsls	r2, r2, #4
	aci_gatt_add_service_cp1 *cp1 = (aci_gatt_add_service_cp1 *) (buffer_in + 1 + (0 + 1 + (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0))));
10042c6a:	18fd      	adds	r5, r7, r3
	Osal_MemCpy((void *) &Service_UUID.Service_UUID_16, (const void *) &cp0->Service_UUID.Service_UUID_16, (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0)));
10042c6c:	a804      	add	r0, sp, #16
10042c6e:	f7fd fd88 	bl	10040782 <Osal_MemCpy>
	rp0->Status = aci_gatt_add_service(cp0->Service_UUID_Type /* 1 */, &Service_UUID /* (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0)) */, cp1->Service_Type /* 1 */, cp1->Max_Attribute_Records /* 1 */, &Service_Handle);
10042c72:	786b      	ldrb	r3, [r5, #1]
10042c74:	782a      	ldrb	r2, [r5, #0]
10042c76:	7878      	ldrb	r0, [r7, #1]
10042c78:	a904      	add	r1, sp, #16
10042c7a:	9600      	str	r6, [sp, #0]
10042c7c:	f004 f92e 	bl	10046edc <aci_gatt_add_service>
	rp0->Service_Handle = Service_Handle;
10042c80:	7833      	ldrb	r3, [r6, #0]
	rp0->Status = aci_gatt_add_service(cp0->Service_UUID_Type /* 1 */, &Service_UUID /* (cp0->Service_UUID_Type == 1 ? 2 : (cp0->Service_UUID_Type == 2 ? 16 : 0)) */, cp1->Service_Type /* 1 */, cp1->Max_Attribute_Records /* 1 */, &Service_Handle);
10042c82:	71a0      	strb	r0, [r4, #6]
	rp0->Service_Handle = Service_Handle;
10042c84:	71e3      	strb	r3, [r4, #7]
10042c86:	7873      	ldrb	r3, [r6, #1]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x02;
	buffer_out[5] = 0xfd;
	return (output_size + 6);
10042c88:	2009      	movs	r0, #9
	rp0->Service_Handle = Service_Handle;
10042c8a:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
10042c8c:	2304      	movs	r3, #4
10042c8e:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042c90:	330a      	adds	r3, #10
10042c92:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042c94:	3b08      	subs	r3, #8
10042c96:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042c98:	3b05      	subs	r3, #5
10042c9a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x02;
10042c9c:	3301      	adds	r3, #1
10042c9e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10042ca0:	33fb      	adds	r3, #251	; 0xfb
10042ca2:	7163      	strb	r3, [r4, #5]
}
10042ca4:	b009      	add	sp, #36	; 0x24
10042ca6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042ca8 <aci_gatt_include_service_process>:
 Include_UUID_t *Include_UUID,
 uint16_t *Include_Handle);
 */
/* Command len: 2 + 2 + 2 + 1 + (cp0->Include_UUID_Type == 1 ? 2 : (cp0->Include_UUID_Type == 2 ? 16 : 0)) */
/* Response len: 1 + 2 */
uint16_t aci_gatt_include_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042ca8:	b5f0      	push	{r4, r5, r6, r7, lr}
	Include_UUID_t Include_UUID;

	int output_size = 1 + 2;
	/* Output params */
	aci_gatt_include_service_rp0 *rp0 = (aci_gatt_include_service_rp0 *) (buffer_out + 6);
	uint16_t Include_Handle = 0;
10042caa:	250e      	movs	r5, #14
uint16_t aci_gatt_include_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042cac:	0006      	movs	r6, r0
	uint16_t Include_Handle = 0;
10042cae:	2000      	movs	r0, #0
uint16_t aci_gatt_include_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042cb0:	b08b      	sub	sp, #44	; 0x2c
10042cb2:	0014      	movs	r4, r2
	uint16_t Include_Handle = 0;
10042cb4:	aa02      	add	r2, sp, #8
10042cb6:	18ad      	adds	r5, r5, r2
10042cb8:	8028      	strh	r0, [r5, #0]

	if (buffer_out_max_length < (1 + 2 + 6)) {
10042cba:	2b08      	cmp	r3, #8
10042cbc:	d935      	bls.n	10042d2a <aci_gatt_include_service_process+0x82>
		return 0;
	}
	Osal_MemCpy((void *) &Include_UUID.Include_UUID_16, (const void *) &cp0->Include_UUID.Include_UUID_16, (cp0->Include_UUID_Type == 1 ? 2 : (cp0->Include_UUID_Type == 2 ? 16 : 0)));
10042cbe:	0031      	movs	r1, r6
10042cc0:	79f3      	ldrb	r3, [r6, #7]
10042cc2:	3108      	adds	r1, #8
10042cc4:	2202      	movs	r2, #2
10042cc6:	2b01      	cmp	r3, #1
10042cc8:	d003      	beq.n	10042cd2 <aci_gatt_include_service_process+0x2a>
10042cca:	3b02      	subs	r3, #2
10042ccc:	425a      	negs	r2, r3
10042cce:	415a      	adcs	r2, r3
10042cd0:	0112      	lsls	r2, r2, #4
10042cd2:	af06      	add	r7, sp, #24
10042cd4:	0038      	movs	r0, r7
10042cd6:	f7fd fd54 	bl	10040782 <Osal_MemCpy>
	rp0->Status = aci_gatt_include_service(cp0->Service_Handle /* 2 */, cp0->Include_Start_Handle /* 2 */, cp0->Include_End_Handle /* 2 */, cp0->Include_UUID_Type /* 1 */, &Include_UUID /* (cp0->Include_UUID_Type == 1 ? 2 : (cp0->Include_UUID_Type == 2 ? 16 : 0)) */, &Include_Handle);
10042cda:	79f3      	ldrb	r3, [r6, #7]
10042cdc:	1c70      	adds	r0, r6, #1
10042cde:	9303      	str	r3, [sp, #12]
10042ce0:	79b2      	ldrb	r2, [r6, #6]
10042ce2:	7971      	ldrb	r1, [r6, #5]
10042ce4:	0212      	lsls	r2, r2, #8
10042ce6:	430a      	orrs	r2, r1
10042ce8:	78f1      	ldrb	r1, [r6, #3]
10042cea:	7840      	ldrb	r0, [r0, #1]
10042cec:	468c      	mov	ip, r1
10042cee:	4663      	mov	r3, ip
10042cf0:	7931      	ldrb	r1, [r6, #4]
10042cf2:	7876      	ldrb	r6, [r6, #1]
10042cf4:	0209      	lsls	r1, r1, #8
10042cf6:	0200      	lsls	r0, r0, #8
10042cf8:	4319      	orrs	r1, r3
10042cfa:	4330      	orrs	r0, r6
10042cfc:	9b03      	ldr	r3, [sp, #12]
10042cfe:	9501      	str	r5, [sp, #4]
10042d00:	9700      	str	r7, [sp, #0]
10042d02:	f004 f95a 	bl	10046fba <aci_gatt_include_service>
	rp0->Include_Handle = Include_Handle;
10042d06:	782b      	ldrb	r3, [r5, #0]
	rp0->Status = aci_gatt_include_service(cp0->Service_Handle /* 2 */, cp0->Include_Start_Handle /* 2 */, cp0->Include_End_Handle /* 2 */, cp0->Include_UUID_Type /* 1 */, &Include_UUID /* (cp0->Include_UUID_Type == 1 ? 2 : (cp0->Include_UUID_Type == 2 ? 16 : 0)) */, &Include_Handle);
10042d08:	71a0      	strb	r0, [r4, #6]
	rp0->Include_Handle = Include_Handle;
10042d0a:	71e3      	strb	r3, [r4, #7]
10042d0c:	786b      	ldrb	r3, [r5, #1]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x03;
	buffer_out[5] = 0xfd;
	return (output_size + 6);
10042d0e:	2009      	movs	r0, #9
	rp0->Include_Handle = Include_Handle;
10042d10:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
10042d12:	2304      	movs	r3, #4
10042d14:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042d16:	330a      	adds	r3, #10
10042d18:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042d1a:	3b08      	subs	r3, #8
10042d1c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042d1e:	3b05      	subs	r3, #5
10042d20:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x03;
10042d22:	3302      	adds	r3, #2
10042d24:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10042d26:	33fa      	adds	r3, #250	; 0xfa
10042d28:	7163      	strb	r3, [r4, #5]
}
10042d2a:	b00b      	add	sp, #44	; 0x2c
10042d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042d2e <aci_gatt_add_char_process>:
 uint8_t Is_Variable,
 uint16_t *Char_Handle);
 */
/* Command len: 2 + 1 + (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0)) + 2 + 1 + 1 + 1 + 1 + 1 */
/* Response len: 1 + 2 */
uint16_t aci_gatt_add_char_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042d2e:	b5f0      	push	{r4, r5, r6, r7, lr}
10042d30:	0015      	movs	r5, r2
	/* Input params */
	aci_gatt_add_char_cp0 *cp0 = (aci_gatt_add_char_cp0 *) (buffer_in + 1 + (0));
	aci_gatt_add_char_cp1 *cp1 = (aci_gatt_add_char_cp1 *) (buffer_in + 1 + (0 + 2 + 1 + (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0))));
10042d32:	2206      	movs	r2, #6
10042d34:	1c47      	adds	r7, r0, #1
10042d36:	78bc      	ldrb	r4, [r7, #2]
uint16_t aci_gatt_add_char_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042d38:	b08d      	sub	sp, #52	; 0x34
10042d3a:	0006      	movs	r6, r0
	aci_gatt_add_char_cp1 *cp1 = (aci_gatt_add_char_cp1 *) (buffer_in + 1 + (0 + 2 + 1 + (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0))));
10042d3c:	4694      	mov	ip, r2
10042d3e:	2c01      	cmp	r4, #1
10042d40:	d005      	beq.n	10042d4e <aci_gatt_add_char_process+0x20>
10042d42:	320e      	adds	r2, #14
10042d44:	4694      	mov	ip, r2
10042d46:	2c02      	cmp	r4, #2
10042d48:	d001      	beq.n	10042d4e <aci_gatt_add_char_process+0x20>
10042d4a:	3a10      	subs	r2, #16
10042d4c:	4694      	mov	ip, r2
	Char_UUID_t Char_UUID;

	int output_size = 1 + 2;
	/* Output params */
	aci_gatt_add_char_rp0 *rp0 = (aci_gatt_add_char_rp0 *) (buffer_out + 6);
	uint16_t Char_Handle = 0;
10042d4e:	221e      	movs	r2, #30
10042d50:	2000      	movs	r0, #0
10042d52:	446a      	add	r2, sp
10042d54:	8010      	strh	r0, [r2, #0]

	if (buffer_out_max_length < (1 + 2 + 6)) {
10042d56:	2b08      	cmp	r3, #8
10042d58:	d936      	bls.n	10042dc8 <aci_gatt_add_char_process+0x9a>
		return 0;
	}
	Osal_MemCpy((void *) &Char_UUID.Char_UUID_16, (const void *) &cp0->Char_UUID.Char_UUID_16, (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0)));
10042d5a:	1d31      	adds	r1, r6, #4
10042d5c:	2202      	movs	r2, #2
10042d5e:	2c01      	cmp	r4, #1
10042d60:	d003      	beq.n	10042d6a <aci_gatt_add_char_process+0x3c>
10042d62:	3c02      	subs	r4, #2
10042d64:	4262      	negs	r2, r4
10042d66:	4162      	adcs	r2, r4
10042d68:	0112      	lsls	r2, r2, #4
	aci_gatt_add_char_cp1 *cp1 = (aci_gatt_add_char_cp1 *) (buffer_in + 1 + (0 + 2 + 1 + (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0))));
10042d6a:	4663      	mov	r3, ip
	Osal_MemCpy((void *) &Char_UUID.Char_UUID_16, (const void *) &cp0->Char_UUID.Char_UUID_16, (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0)));
10042d6c:	a808      	add	r0, sp, #32
	aci_gatt_add_char_cp1 *cp1 = (aci_gatt_add_char_cp1 *) (buffer_in + 1 + (0 + 2 + 1 + (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0))));
10042d6e:	18f4      	adds	r4, r6, r3
	Osal_MemCpy((void *) &Char_UUID.Char_UUID_16, (const void *) &cp0->Char_UUID.Char_UUID_16, (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0)));
10042d70:	f7fd fd07 	bl	10040782 <Osal_MemCpy>
	rp0->Status = aci_gatt_add_char(cp0->Service_Handle /* 2 */, cp0->Char_UUID_Type /* 1 */, &Char_UUID /* (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0)) */, cp1->Char_Value_Length /* 2 */, cp1->Char_Properties /* 1 */, cp1->Security_Permissions /* 1 */, cp1->GATT_Evt_Mask /* 1 */, cp1->Enc_Key_Size /* 1 */,
10042d74:	7863      	ldrb	r3, [r4, #1]
10042d76:	7822      	ldrb	r2, [r4, #0]
10042d78:	021b      	lsls	r3, r3, #8
10042d7a:	4313      	orrs	r3, r2
10042d7c:	7872      	ldrb	r2, [r6, #1]
10042d7e:	261e      	movs	r6, #30
10042d80:	7878      	ldrb	r0, [r7, #1]
10042d82:	446e      	add	r6, sp
10042d84:	78b9      	ldrb	r1, [r7, #2]
10042d86:	0200      	lsls	r0, r0, #8
10042d88:	9605      	str	r6, [sp, #20]
10042d8a:	4310      	orrs	r0, r2
10042d8c:	79a2      	ldrb	r2, [r4, #6]
10042d8e:	9204      	str	r2, [sp, #16]
10042d90:	7962      	ldrb	r2, [r4, #5]
10042d92:	9203      	str	r2, [sp, #12]
10042d94:	7922      	ldrb	r2, [r4, #4]
10042d96:	9202      	str	r2, [sp, #8]
10042d98:	78e2      	ldrb	r2, [r4, #3]
10042d9a:	9201      	str	r2, [sp, #4]
10042d9c:	78a2      	ldrb	r2, [r4, #2]
10042d9e:	9200      	str	r2, [sp, #0]
10042da0:	aa08      	add	r2, sp, #32
10042da2:	f004 f854 	bl	10046e4e <aci_gatt_add_char>
			cp1->Is_Variable /* 1 */, &Char_Handle);
	rp0->Char_Handle = Char_Handle;
10042da6:	7833      	ldrb	r3, [r6, #0]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0x0E;
10042da8:	220e      	movs	r2, #14
	rp0->Char_Handle = Char_Handle;
10042daa:	71eb      	strb	r3, [r5, #7]
10042dac:	7873      	ldrb	r3, [r6, #1]
	rp0->Status = aci_gatt_add_char(cp0->Service_Handle /* 2 */, cp0->Char_UUID_Type /* 1 */, &Char_UUID /* (cp0->Char_UUID_Type == 1 ? 2 : (cp0->Char_UUID_Type == 2 ? 16 : 0)) */, cp1->Char_Value_Length /* 2 */, cp1->Char_Properties /* 1 */, cp1->Security_Permissions /* 1 */, cp1->GATT_Evt_Mask /* 1 */, cp1->Enc_Key_Size /* 1 */,
10042dae:	71a8      	strb	r0, [r5, #6]
	rp0->Char_Handle = Char_Handle;
10042db0:	722b      	strb	r3, [r5, #8]
	buffer_out[0] = 0x04;
10042db2:	2304      	movs	r3, #4
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x04;
	buffer_out[5] = 0xfd;
	return (output_size + 6);
10042db4:	2009      	movs	r0, #9
	buffer_out[1] = 0x0E;
10042db6:	706a      	strb	r2, [r5, #1]
	buffer_out[2] = output_size + 3;
10042db8:	3a08      	subs	r2, #8
	buffer_out[0] = 0x04;
10042dba:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10042dbc:	70aa      	strb	r2, [r5, #2]
	buffer_out[4] = 0x04;
10042dbe:	712b      	strb	r3, [r5, #4]
	buffer_out[3] = 0x01;
10042dc0:	3a05      	subs	r2, #5
	buffer_out[5] = 0xfd;
10042dc2:	33f9      	adds	r3, #249	; 0xf9
	buffer_out[3] = 0x01;
10042dc4:	70ea      	strb	r2, [r5, #3]
	buffer_out[5] = 0xfd;
10042dc6:	716b      	strb	r3, [r5, #5]
}
10042dc8:	b00d      	add	sp, #52	; 0x34
10042dca:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042dcc <aci_gatt_add_char_desc_process>:
 uint8_t Is_Variable,
 uint16_t *Char_Desc_Handle);
 */
/* Command len: 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) + 1 + 1 + cp1->Char_Desc_Value_Length * (sizeof(uint8_t)) + 1 + 1 + 1 + 1 + 1 */
/* Response len: 1 + 2 */
uint16_t aci_gatt_add_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Input params */
	aci_gatt_add_char_desc_cp0 *cp0 = (aci_gatt_add_char_desc_cp0 *) (buffer_in + 1 + (0));
	aci_gatt_add_char_desc_cp1 *cp1 = (aci_gatt_add_char_desc_cp1 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0))));
10042dce:	7944      	ldrb	r4, [r0, #5]
uint16_t aci_gatt_add_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042dd0:	b093      	sub	sp, #76	; 0x4c
10042dd2:	0007      	movs	r7, r0
10042dd4:	0015      	movs	r5, r2
10042dd6:	0019      	movs	r1, r3
	aci_gatt_add_char_desc_cp1 *cp1 = (aci_gatt_add_char_desc_cp1 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0))));
10042dd8:	2608      	movs	r6, #8
10042dda:	2c01      	cmp	r4, #1
10042ddc:	d003      	beq.n	10042de6 <aci_gatt_add_char_desc_process+0x1a>
10042dde:	360e      	adds	r6, #14
10042de0:	2c02      	cmp	r4, #2
10042de2:	d000      	beq.n	10042de6 <aci_gatt_add_char_desc_process+0x1a>
10042de4:	3e10      	subs	r6, #16
10042de6:	19be      	adds	r6, r7, r6
	aci_gatt_add_char_desc_cp2 *cp2 = (aci_gatt_add_char_desc_cp2 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) + 1 + 1 + cp1->Char_Desc_Value_Length * (sizeof(uint8_t))));
10042de8:	2009      	movs	r0, #9
10042dea:	2c01      	cmp	r4, #1
10042dec:	d003      	beq.n	10042df6 <aci_gatt_add_char_desc_process+0x2a>
10042dee:	300e      	adds	r0, #14
10042df0:	2c02      	cmp	r4, #2
10042df2:	d000      	beq.n	10042df6 <aci_gatt_add_char_desc_process+0x2a>
10042df4:	3810      	subs	r0, #16
10042df6:	7873      	ldrb	r3, [r6, #1]
	Char_Desc_Uuid_t Char_Desc_Uuid;

	int output_size = 1 + 2;
	/* Output params */
	aci_gatt_add_char_desc_rp0 *rp0 = (aci_gatt_add_char_desc_rp0 *) (buffer_out + 6);
	uint16_t Char_Desc_Handle = 0;
10042df8:	aa02      	add	r2, sp, #8
	aci_gatt_add_char_desc_cp2 *cp2 = (aci_gatt_add_char_desc_cp2 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) + 1 + 1 + cp1->Char_Desc_Value_Length * (sizeof(uint8_t))));
10042dfa:	930b      	str	r3, [sp, #44]	; 0x2c
	uint16_t Char_Desc_Handle = 0;
10042dfc:	232e      	movs	r3, #46	; 0x2e
10042dfe:	189b      	adds	r3, r3, r2
10042e00:	2200      	movs	r2, #0
10042e02:	801a      	strh	r2, [r3, #0]

	if (buffer_out_max_length < (1 + 2 + 6)) {
		return 0;
10042e04:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 2 + 6)) {
10042e06:	2908      	cmp	r1, #8
10042e08:	d941      	bls.n	10042e8e <aci_gatt_add_char_desc_process+0xc2>
	}
	Osal_MemCpy((void *) &Char_Desc_Uuid.Char_UUID_16, (const void *) &cp0->Char_Desc_Uuid.Char_UUID_16, (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)));
10042e0a:	1db9      	adds	r1, r7, #6
10042e0c:	3202      	adds	r2, #2
10042e0e:	2c01      	cmp	r4, #1
10042e10:	d003      	beq.n	10042e1a <aci_gatt_add_char_desc_process+0x4e>
10042e12:	3c02      	subs	r4, #2
10042e14:	4262      	negs	r2, r4
10042e16:	4162      	adcs	r2, r4
10042e18:	0112      	lsls	r2, r2, #4
	aci_gatt_add_char_desc_cp2 *cp2 = (aci_gatt_add_char_desc_cp2 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) + 1 + 1 + cp1->Char_Desc_Value_Length * (sizeof(uint8_t))));
10042e1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
10042e1c:	3401      	adds	r4, #1
10042e1e:	1824      	adds	r4, r4, r0
	Osal_MemCpy((void *) &Char_Desc_Uuid.Char_UUID_16, (const void *) &cp0->Char_Desc_Uuid.Char_UUID_16, (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)));
10042e20:	a80e      	add	r0, sp, #56	; 0x38
10042e22:	f7fd fcae 	bl	10040782 <Osal_MemCpy>
	rp0->Status = aci_gatt_add_char_desc(cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Char_Desc_Uuid_Type /* 1 */, &Char_Desc_Uuid /* (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) */, cp1->Char_Desc_Value_Max_Len /* 1 */, cp1->Char_Desc_Value_Length /* 1 */,
10042e26:	7939      	ldrb	r1, [r7, #4]
10042e28:	78f8      	ldrb	r0, [r7, #3]
10042e2a:	1c7b      	adds	r3, r7, #1
10042e2c:	0209      	lsls	r1, r1, #8
10042e2e:	4301      	orrs	r1, r0
10042e30:	7858      	ldrb	r0, [r3, #1]
10042e32:	797a      	ldrb	r2, [r7, #5]
	aci_gatt_add_char_desc_cp2 *cp2 = (aci_gatt_add_char_desc_cp2 *) (buffer_in + 1 + (0 + 2 + 2 + 1 + (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) + 1 + 1 + cp1->Char_Desc_Value_Length * (sizeof(uint8_t))));
10042e34:	193c      	adds	r4, r7, r4
	rp0->Status = aci_gatt_add_char_desc(cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Char_Desc_Uuid_Type /* 1 */, &Char_Desc_Uuid /* (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) */, cp1->Char_Desc_Value_Max_Len /* 1 */, cp1->Char_Desc_Value_Length /* 1 */,
10042e36:	787f      	ldrb	r7, [r7, #1]
10042e38:	0200      	lsls	r0, r0, #8
10042e3a:	4338      	orrs	r0, r7
10042e3c:	272e      	movs	r7, #46	; 0x2e
10042e3e:	ab02      	add	r3, sp, #8
10042e40:	18ff      	adds	r7, r7, r3
10042e42:	9708      	str	r7, [sp, #32]
10042e44:	7923      	ldrb	r3, [r4, #4]
10042e46:	9307      	str	r3, [sp, #28]
10042e48:	78e3      	ldrb	r3, [r4, #3]
10042e4a:	9306      	str	r3, [sp, #24]
10042e4c:	78a3      	ldrb	r3, [r4, #2]
10042e4e:	9305      	str	r3, [sp, #20]
10042e50:	7863      	ldrb	r3, [r4, #1]
10042e52:	9304      	str	r3, [sp, #16]
10042e54:	7823      	ldrb	r3, [r4, #0]
10042e56:	9303      	str	r3, [sp, #12]
			cp1->Char_Desc_Value /* cp1->Char_Desc_Value_Length * (sizeof(uint8_t)) */, cp2->Security_Permissions /* 1 */, cp2->Access_Permissions /* 1 */, cp2->GATT_Evt_Mask /* 1 */, cp2->Enc_Key_Size /* 1 */, cp2->Is_Variable /* 1 */, &Char_Desc_Handle);
10042e58:	1cb3      	adds	r3, r6, #2
	rp0->Status = aci_gatt_add_char_desc(cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Char_Desc_Uuid_Type /* 1 */, &Char_Desc_Uuid /* (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) */, cp1->Char_Desc_Value_Max_Len /* 1 */, cp1->Char_Desc_Value_Length /* 1 */,
10042e5a:	9302      	str	r3, [sp, #8]
10042e5c:	7873      	ldrb	r3, [r6, #1]
10042e5e:	9301      	str	r3, [sp, #4]
10042e60:	7833      	ldrb	r3, [r6, #0]
10042e62:	9300      	str	r3, [sp, #0]
10042e64:	ab0e      	add	r3, sp, #56	; 0x38
10042e66:	f004 f811 	bl	10046e8c <aci_gatt_add_char_desc>
	rp0->Char_Desc_Handle = Char_Desc_Handle;
10042e6a:	783b      	ldrb	r3, [r7, #0]
	buffer_out[1] = 0x0E;
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x05;
	buffer_out[5] = 0xfd;
	return (output_size + 6);
10042e6c:	2209      	movs	r2, #9
	rp0->Char_Desc_Handle = Char_Desc_Handle;
10042e6e:	71eb      	strb	r3, [r5, #7]
10042e70:	787b      	ldrb	r3, [r7, #1]
	rp0->Status = aci_gatt_add_char_desc(cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Char_Desc_Uuid_Type /* 1 */, &Char_Desc_Uuid /* (cp0->Char_Desc_Uuid_Type == 1 ? 2 : (cp0->Char_Desc_Uuid_Type == 2 ? 16 : 0)) */, cp1->Char_Desc_Value_Max_Len /* 1 */, cp1->Char_Desc_Value_Length /* 1 */,
10042e72:	71a8      	strb	r0, [r5, #6]
	rp0->Char_Desc_Handle = Char_Desc_Handle;
10042e74:	722b      	strb	r3, [r5, #8]
	buffer_out[0] = 0x04;
10042e76:	2304      	movs	r3, #4
10042e78:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0x0E;
10042e7a:	330a      	adds	r3, #10
10042e7c:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = output_size + 3;
10042e7e:	3b08      	subs	r3, #8
10042e80:	70ab      	strb	r3, [r5, #2]
	buffer_out[3] = 0x01;
10042e82:	3b05      	subs	r3, #5
10042e84:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x05;
10042e86:	3304      	adds	r3, #4
10042e88:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0xfd;
10042e8a:	33f8      	adds	r3, #248	; 0xf8
10042e8c:	716b      	strb	r3, [r5, #5]
}
10042e8e:	0010      	movs	r0, r2
10042e90:	b013      	add	sp, #76	; 0x4c
10042e92:	bdf0      	pop	{r4, r5, r6, r7, pc}

10042e94 <aci_gatt_read_handle_value_process>:
 uint16_t *Value_Length,
 uint8_t Value[]);
 */
/* Command len: 2 + 2 + 2 */
/* Response len: 1 + 2 + 2 + rp0->Value_Length * (sizeof(uint8_t)) */
uint16_t aci_gatt_read_handle_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042e94:	b5f0      	push	{r4, r5, r6, r7, lr}
10042e96:	b0c5      	sub	sp, #276	; 0x114
10042e98:	0014      	movs	r4, r2
10042e9a:	001d      	movs	r5, r3

	int output_size = 0;
	/* Output params */
	aci_gatt_read_handle_value_rp0 *rp0 = (aci_gatt_read_handle_value_rp0 *) (buffer_out + 6);
	uint16_t Length = 0;
	uint16_t Value_Length = 0;
10042e9c:	466a      	mov	r2, sp
	uint16_t Length = 0;
10042e9e:	2300      	movs	r3, #0
10042ea0:	ae03      	add	r6, sp, #12
10042ea2:	8033      	strh	r3, [r6, #0]
	uint16_t Value_Length = 0;
10042ea4:	81d3      	strh	r3, [r2, #14]
	uint8_t Value[HCI_MAX_PAYLOAD_SIZE / sizeof(uint8_t)];

	if (buffer_out_max_length < (1 + 6)) {
10042ea6:	2d06      	cmp	r5, #6
10042ea8:	d802      	bhi.n	10042eb0 <aci_gatt_read_handle_value_process+0x1c>
		return 0;
10042eaa:	2000      	movs	r0, #0
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x2a;
	buffer_out[5] = 0xfd;
	return (output_size + 6);
}
10042eac:	b045      	add	sp, #276	; 0x114
10042eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
	rp0->Status = aci_gatt_read_handle_value(cp0->Attr_Handle /* 2 */, cp0->Offset /* 2 */, cp0->Value_Length_Requested /* 2 */, &Length, &Value_Length, Value);
10042eb0:	7982      	ldrb	r2, [r0, #6]
10042eb2:	7941      	ldrb	r1, [r0, #5]
10042eb4:	0212      	lsls	r2, r2, #8
10042eb6:	430a      	orrs	r2, r1
10042eb8:	7901      	ldrb	r1, [r0, #4]
10042eba:	78c7      	ldrb	r7, [r0, #3]
10042ebc:	ab04      	add	r3, sp, #16
10042ebe:	0209      	lsls	r1, r1, #8
10042ec0:	4339      	orrs	r1, r7
10042ec2:	7847      	ldrb	r7, [r0, #1]
10042ec4:	7880      	ldrb	r0, [r0, #2]
10042ec6:	9301      	str	r3, [sp, #4]
10042ec8:	230e      	movs	r3, #14
10042eca:	0200      	lsls	r0, r0, #8
10042ecc:	446b      	add	r3, sp
10042ece:	9300      	str	r3, [sp, #0]
10042ed0:	4338      	orrs	r0, r7
10042ed2:	0033      	movs	r3, r6
10042ed4:	f004 f894 	bl	10047000 <aci_gatt_read_handle_value>
10042ed8:	71a0      	strb	r0, [r4, #6]
	if (buffer_out_max_length < (output_size + (2) + 6)) {
10042eda:	2d08      	cmp	r5, #8
10042edc:	d9e5      	bls.n	10042eaa <aci_gatt_read_handle_value_process+0x16>
	rp0->Length = Length;
10042ede:	7833      	ldrb	r3, [r6, #0]
10042ee0:	71e3      	strb	r3, [r4, #7]
10042ee2:	7873      	ldrb	r3, [r6, #1]
10042ee4:	7223      	strb	r3, [r4, #8]
	if (buffer_out_max_length < (output_size + (2) + 6)) {
10042ee6:	2d0a      	cmp	r5, #10
10042ee8:	d9df      	bls.n	10042eaa <aci_gatt_read_handle_value_process+0x16>
	rp0->Value_Length = Value_Length;
10042eea:	466b      	mov	r3, sp
10042eec:	89da      	ldrh	r2, [r3, #14]
10042eee:	0a13      	lsrs	r3, r2, #8
10042ef0:	72a3      	strb	r3, [r4, #10]
	if (buffer_out_max_length < (output_size + (rp0->Value_Length * (sizeof(uint8_t))) + 6)) {
10042ef2:	0013      	movs	r3, r2
10042ef4:	330b      	adds	r3, #11
	rp0->Value_Length = Value_Length;
10042ef6:	7262      	strb	r2, [r4, #9]
	if (buffer_out_max_length < (output_size + (rp0->Value_Length * (sizeof(uint8_t))) + 6)) {
10042ef8:	429d      	cmp	r5, r3
10042efa:	d3d6      	bcc.n	10042eaa <aci_gatt_read_handle_value_process+0x16>
	Osal_MemCpy((void *) rp0->Value, (const void *) Value, rp0->Value_Length * (sizeof(uint8_t)));
10042efc:	0020      	movs	r0, r4
10042efe:	a904      	add	r1, sp, #16
10042f00:	300b      	adds	r0, #11
10042f02:	f7fd fc3e 	bl	10040782 <Osal_MemCpy>
	output_size += rp0->Value_Length * (sizeof(uint8_t));
10042f06:	7aa0      	ldrb	r0, [r4, #10]
10042f08:	7a63      	ldrb	r3, [r4, #9]
10042f0a:	0200      	lsls	r0, r0, #8
10042f0c:	4318      	orrs	r0, r3
	buffer_out[0] = 0x04;
10042f0e:	2304      	movs	r3, #4
10042f10:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10042f12:	330a      	adds	r3, #10
10042f14:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10042f16:	0003      	movs	r3, r0
10042f18:	3308      	adds	r3, #8
10042f1a:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042f1c:	2301      	movs	r3, #1
10042f1e:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2a;
10042f20:	3329      	adds	r3, #41	; 0x29
10042f22:	7123      	strb	r3, [r4, #4]
	return (output_size + 6);
10042f24:	300b      	adds	r0, #11
	buffer_out[5] = 0xfd;
10042f26:	33d3      	adds	r3, #211	; 0xd3
10042f28:	7163      	strb	r3, [r4, #5]
	return (output_size + 6);
10042f2a:	b280      	uxth	r0, r0
10042f2c:	e7be      	b.n	10042eac <aci_gatt_read_handle_value_process+0x18>

10042f2e <hci_disconnect_process>:
uint16_t hci_disconnect_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042f2e:	b510      	push	{r4, lr}
10042f30:	0014      	movs	r4, r2
		return 0;
10042f32:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10042f34:	2b06      	cmp	r3, #6
10042f36:	d912      	bls.n	10042f5e <hci_disconnect_process+0x30>
	*status = hci_disconnect(cp0->Connection_Handle /* 2 */, cp0->Reason /* 1 */);
10042f38:	7842      	ldrb	r2, [r0, #1]
10042f3a:	78c1      	ldrb	r1, [r0, #3]
10042f3c:	7880      	ldrb	r0, [r0, #2]
10042f3e:	0200      	lsls	r0, r0, #8
10042f40:	4310      	orrs	r0, r2
10042f42:	f009 febf 	bl	1004ccc4 <hci_disconnect>
	buffer_out[1] = 0x0F;
10042f46:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10042f48:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10042f4a:	7062      	strb	r2, [r4, #1]
	buffer_out[4] = 0x01;
10042f4c:	3a0e      	subs	r2, #14
10042f4e:	7122      	strb	r2, [r4, #4]
	buffer_out[5] = 0x06;
10042f50:	3205      	adds	r2, #5
10042f52:	7162      	strb	r2, [r4, #5]
	*status = hci_disconnect(cp0->Connection_Handle /* 2 */, cp0->Reason /* 1 */);
10042f54:	70e0      	strb	r0, [r4, #3]
	buffer_out[0] = 0x04;
10042f56:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042f58:	70a3      	strb	r3, [r4, #2]
	buffer_out[6] = 0x04;
10042f5a:	71a3      	strb	r3, [r4, #6]
10042f5c:	3201      	adds	r2, #1
}
10042f5e:	0010      	movs	r0, r2
10042f60:	bd10      	pop	{r4, pc}

10042f62 <hci_read_remote_version_information_process>:
uint16_t hci_read_remote_version_information_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042f62:	b510      	push	{r4, lr}
10042f64:	0014      	movs	r4, r2
		return 0;
10042f66:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10042f68:	2b06      	cmp	r3, #6
10042f6a:	d911      	bls.n	10042f90 <hci_read_remote_version_information_process+0x2e>
	*status = hci_read_remote_version_information(cp0->Connection_Handle /* 2 */);
10042f6c:	7843      	ldrb	r3, [r0, #1]
10042f6e:	7880      	ldrb	r0, [r0, #2]
10042f70:	0200      	lsls	r0, r0, #8
10042f72:	4318      	orrs	r0, r3
10042f74:	f00a fa62 	bl	1004d43c <hci_read_remote_version_information>
	buffer_out[1] = 0x0F;
10042f78:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10042f7a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10042f7c:	7062      	strb	r2, [r4, #1]
	buffer_out[4] = 0x01;
10042f7e:	3a0e      	subs	r2, #14
10042f80:	7122      	strb	r2, [r4, #4]
	buffer_out[5] = 0x1d;
10042f82:	321c      	adds	r2, #28
10042f84:	7162      	strb	r2, [r4, #5]
	*status = hci_read_remote_version_information(cp0->Connection_Handle /* 2 */);
10042f86:	70e0      	strb	r0, [r4, #3]
	buffer_out[0] = 0x04;
10042f88:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042f8a:	70a3      	strb	r3, [r4, #2]
	buffer_out[6] = 0x04;
10042f8c:	71a3      	strb	r3, [r4, #6]
10042f8e:	3a16      	subs	r2, #22
}
10042f90:	0010      	movs	r0, r2
10042f92:	bd10      	pop	{r4, pc}

10042f94 <hci_set_event_mask_process>:
uint16_t hci_set_event_mask_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042f94:	b510      	push	{r4, lr}
10042f96:	0014      	movs	r4, r2
		return 0;
10042f98:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10042f9a:	2b06      	cmp	r3, #6
10042f9c:	d90e      	bls.n	10042fbc <hci_set_event_mask_process+0x28>
	*status = hci_set_event_mask(cp0->Event_Mask /* 8 */);
10042f9e:	3001      	adds	r0, #1
10042fa0:	f00a fada 	bl	1004d558 <hci_set_event_mask>
	buffer_out[0] = 0x04;
10042fa4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10042fa6:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10042fa8:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042faa:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042fac:	3b03      	subs	r3, #3
10042fae:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x01;
10042fb0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x0c;
10042fb2:	330b      	adds	r3, #11
	buffer_out[1] = 0x0E;
10042fb4:	7062      	strb	r2, [r4, #1]
	*status = hci_set_event_mask(cp0->Event_Mask /* 8 */);
10042fb6:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x0c;
10042fb8:	7163      	strb	r3, [r4, #5]
10042fba:	3a07      	subs	r2, #7
}
10042fbc:	0010      	movs	r0, r2
10042fbe:	bd10      	pop	{r4, pc}

10042fc0 <hci_reset_process>:
uint16_t hci_reset_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042fc0:	b510      	push	{r4, lr}
		return 0;
10042fc2:	2000      	movs	r0, #0
uint16_t hci_reset_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042fc4:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10042fc6:	2b06      	cmp	r3, #6
10042fc8:	d90e      	bls.n	10042fe8 <hci_reset_process+0x28>
	*status = hci_reset();
10042fca:	f00a fa8a 	bl	1004d4e2 <hci_reset>
	buffer_out[0] = 0x04;
10042fce:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10042fd0:	220e      	movs	r2, #14
	*status = hci_reset();
10042fd2:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x0c;
10042fd4:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10042fd6:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10042fd8:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10042fda:	3b03      	subs	r3, #3
10042fdc:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x03;
10042fde:	3302      	adds	r3, #2
10042fe0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x0c;
10042fe2:	3309      	adds	r3, #9
	buffer_out[1] = 0x0E;
10042fe4:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0x0c;
10042fe6:	7163      	strb	r3, [r4, #5]
}
10042fe8:	bd10      	pop	{r4, pc}

10042fea <hci_read_local_supported_commands_process>:
uint16_t hci_read_local_supported_commands_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042fea:	b510      	push	{r4, lr}
		return 0;
10042fec:	2000      	movs	r0, #0
uint16_t hci_read_local_supported_commands_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10042fee:	b090      	sub	sp, #64	; 0x40
10042ff0:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 64 + 6)) {
10042ff2:	2b46      	cmp	r3, #70	; 0x46
10042ff4:	d915      	bls.n	10043022 <hci_read_local_supported_commands_process+0x38>
	rp0->Status = hci_read_local_supported_commands(Supported_Commands);
10042ff6:	4668      	mov	r0, sp
10042ff8:	f00a f9bc 	bl	1004d374 <hci_read_local_supported_commands>
	Osal_MemCpy((void *) rp0->Supported_Commands, (const void *) Supported_Commands, 64);
10042ffc:	2240      	movs	r2, #64	; 0x40
	rp0->Status = hci_read_local_supported_commands(Supported_Commands);
10042ffe:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Supported_Commands, (const void *) Supported_Commands, 64);
10043000:	4669      	mov	r1, sp
10043002:	1de0      	adds	r0, r4, #7
10043004:	f7fd fbbd 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10043008:	2304      	movs	r3, #4
1004300a:	2047      	movs	r0, #71	; 0x47
1004300c:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
1004300e:	330a      	adds	r3, #10
10043010:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043012:	3336      	adds	r3, #54	; 0x36
10043014:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043016:	3b43      	subs	r3, #67	; 0x43
10043018:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x02;
1004301a:	3301      	adds	r3, #1
1004301c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x10;
1004301e:	330e      	adds	r3, #14
10043020:	7163      	strb	r3, [r4, #5]
}
10043022:	b010      	add	sp, #64	; 0x40
10043024:	bd10      	pop	{r4, pc}

10043026 <hci_read_local_supported_features_process>:
uint16_t hci_read_local_supported_features_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043026:	b513      	push	{r0, r1, r4, lr}
10043028:	0014      	movs	r4, r2
		return 0;
1004302a:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 8 + 6)) {
1004302c:	2b0e      	cmp	r3, #14
1004302e:	d915      	bls.n	1004305c <hci_read_local_supported_features_process+0x36>
	rp0->Status = hci_read_local_supported_features(LMP_Features);
10043030:	4668      	mov	r0, sp
10043032:	f00a f9e6 	bl	1004d402 <hci_read_local_supported_features>
	Osal_MemCpy((void *) rp0->LMP_Features, (const void *) LMP_Features, 8);
10043036:	2208      	movs	r2, #8
	rp0->Status = hci_read_local_supported_features(LMP_Features);
10043038:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->LMP_Features, (const void *) LMP_Features, 8);
1004303a:	4669      	mov	r1, sp
1004303c:	1de0      	adds	r0, r4, #7
1004303e:	f7fd fba0 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10043042:	2304      	movs	r3, #4
10043044:	200f      	movs	r0, #15
10043046:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043048:	330a      	adds	r3, #10
1004304a:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004304c:	3b02      	subs	r3, #2
1004304e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043050:	3b0b      	subs	r3, #11
10043052:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x03;
10043054:	3302      	adds	r3, #2
10043056:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x10;
10043058:	330d      	adds	r3, #13
1004305a:	7163      	strb	r3, [r4, #5]
}
1004305c:	bd16      	pop	{r1, r2, r4, pc}

1004305e <hci_read_bd_addr_process>:
uint16_t hci_read_bd_addr_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004305e:	b513      	push	{r0, r1, r4, lr}
10043060:	0014      	movs	r4, r2
		return 0;
10043062:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6 + 6)) {
10043064:	2b0c      	cmp	r3, #12
10043066:	d915      	bls.n	10043094 <hci_read_bd_addr_process+0x36>
	rp0->Status = hci_read_bd_addr(BD_ADDR);
10043068:	4668      	mov	r0, sp
1004306a:	f00a f977 	bl	1004d35c <hci_read_bd_addr>
	Osal_MemCpy((void *) rp0->BD_ADDR, (const void *) BD_ADDR, 6);
1004306e:	2206      	movs	r2, #6
	rp0->Status = hci_read_bd_addr(BD_ADDR);
10043070:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->BD_ADDR, (const void *) BD_ADDR, 6);
10043072:	4669      	mov	r1, sp
10043074:	1de0      	adds	r0, r4, #7
10043076:	f7fd fb84 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004307a:	2304      	movs	r3, #4
1004307c:	200d      	movs	r0, #13
1004307e:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043080:	330a      	adds	r3, #10
10043082:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043084:	3b04      	subs	r3, #4
10043086:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043088:	3b09      	subs	r3, #9
1004308a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x09;
1004308c:	3308      	adds	r3, #8
1004308e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x10;
10043090:	3307      	adds	r3, #7
10043092:	7163      	strb	r3, [r4, #5]
}
10043094:	bd16      	pop	{r1, r2, r4, pc}

10043096 <hci_le_set_event_mask_process>:
uint16_t hci_le_set_event_mask_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043096:	b510      	push	{r4, lr}
10043098:	0014      	movs	r4, r2
		return 0;
1004309a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004309c:	2b06      	cmp	r3, #6
1004309e:	d90e      	bls.n	100430be <hci_le_set_event_mask_process+0x28>
	*status = hci_le_set_event_mask(cp0->LE_Event_Mask /* 8 */);
100430a0:	3001      	adds	r0, #1
100430a2:	f00a f827 	bl	1004d0f4 <hci_le_set_event_mask>
	buffer_out[0] = 0x04;
100430a6:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100430a8:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100430aa:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100430ac:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100430ae:	3b03      	subs	r3, #3
100430b0:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x01;
100430b2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100430b4:	331f      	adds	r3, #31
	buffer_out[1] = 0x0E;
100430b6:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_event_mask(cp0->LE_Event_Mask /* 8 */);
100430b8:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100430ba:	7163      	strb	r3, [r4, #5]
100430bc:	3a07      	subs	r2, #7
}
100430be:	0010      	movs	r0, r2
100430c0:	bd10      	pop	{r4, pc}

100430c2 <hci_le_read_local_supported_features_process>:
uint16_t hci_le_read_local_supported_features_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100430c2:	b513      	push	{r0, r1, r4, lr}
100430c4:	0014      	movs	r4, r2
		return 0;
100430c6:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 8 + 6)) {
100430c8:	2b0e      	cmp	r3, #14
100430ca:	d915      	bls.n	100430f8 <hci_le_read_local_supported_features_process+0x36>
	rp0->Status = hci_le_read_local_supported_features(LE_Features);
100430cc:	4668      	mov	r0, sp
100430ce:	f009 ff3b 	bl	1004cf48 <hci_le_read_local_supported_features>
	Osal_MemCpy((void *) rp0->LE_Features, (const void *) LE_Features, 8);
100430d2:	2208      	movs	r2, #8
	rp0->Status = hci_le_read_local_supported_features(LE_Features);
100430d4:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->LE_Features, (const void *) LE_Features, 8);
100430d6:	4669      	mov	r1, sp
100430d8:	1de0      	adds	r0, r4, #7
100430da:	f7fd fb52 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100430de:	2304      	movs	r3, #4
100430e0:	200f      	movs	r0, #15
100430e2:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100430e4:	330a      	adds	r3, #10
100430e6:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100430e8:	3b02      	subs	r3, #2
100430ea:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100430ec:	3b0b      	subs	r3, #11
100430ee:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x03;
100430f0:	3302      	adds	r3, #2
100430f2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100430f4:	331d      	adds	r3, #29
100430f6:	7163      	strb	r3, [r4, #5]
}
100430f8:	bd16      	pop	{r1, r2, r4, pc}

100430fa <hci_le_set_random_address_process>:
uint16_t hci_le_set_random_address_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100430fa:	b510      	push	{r4, lr}
100430fc:	0014      	movs	r4, r2
		return 0;
100430fe:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043100:	2b06      	cmp	r3, #6
10043102:	d90f      	bls.n	10043124 <hci_le_set_random_address_process+0x2a>
	*status = hci_le_set_random_address(cp0->Random_Address /* 6 */);
10043104:	3001      	adds	r0, #1
10043106:	f00a f819 	bl	1004d13c <hci_le_set_random_address>
	buffer_out[0] = 0x04;
1004310a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004310c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004310e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043110:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043112:	3b03      	subs	r3, #3
10043114:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x05;
10043116:	3304      	adds	r3, #4
10043118:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
1004311a:	331b      	adds	r3, #27
	buffer_out[1] = 0x0E;
1004311c:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_random_address(cp0->Random_Address /* 6 */);
1004311e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
10043120:	7163      	strb	r3, [r4, #5]
10043122:	3a07      	subs	r2, #7
}
10043124:	0010      	movs	r0, r2
10043126:	bd10      	pop	{r4, pc}

10043128 <hci_le_set_advertising_parameters_process>:
uint16_t hci_le_set_advertising_parameters_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043128:	b5f0      	push	{r4, r5, r6, r7, lr}
1004312a:	0007      	movs	r7, r0
1004312c:	b085      	sub	sp, #20
1004312e:	0015      	movs	r5, r2
		return 0;
10043130:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10043132:	2b06      	cmp	r3, #6
10043134:	d922      	bls.n	1004317c <hci_le_set_advertising_parameters_process+0x54>
	*status = hci_le_set_advertising_parameters(cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Advertising_Type /* 1 */, cp0->Own_Address_Type /* 1 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Advertising_Channel_Map /* 1 */, cp0->Advertising_Filter_Policy /* 1 */);
10043136:	7939      	ldrb	r1, [r7, #4]
10043138:	78f8      	ldrb	r0, [r7, #3]
1004313a:	78be      	ldrb	r6, [r7, #2]
1004313c:	0209      	lsls	r1, r1, #8
1004313e:	4301      	orrs	r1, r0
10043140:	7878      	ldrb	r0, [r7, #1]
10043142:	0236      	lsls	r6, r6, #8
10043144:	4306      	orrs	r6, r0
10043146:	7bf8      	ldrb	r0, [r7, #15]
10043148:	79bb      	ldrb	r3, [r7, #6]
1004314a:	797a      	ldrb	r2, [r7, #5]
1004314c:	9003      	str	r0, [sp, #12]
1004314e:	7bb8      	ldrb	r0, [r7, #14]
10043150:	1c7c      	adds	r4, r7, #1
10043152:	3708      	adds	r7, #8
10043154:	9002      	str	r0, [sp, #8]
10043156:	9701      	str	r7, [sp, #4]
10043158:	79a0      	ldrb	r0, [r4, #6]
1004315a:	9000      	str	r0, [sp, #0]
1004315c:	0030      	movs	r0, r6
1004315e:	f009 ff6d 	bl	1004d03c <hci_le_set_advertising_parameters>
	buffer_out[0] = 0x04;
10043162:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043164:	220e      	movs	r2, #14
	*status = hci_le_set_advertising_parameters(cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Advertising_Type /* 1 */, cp0->Own_Address_Type /* 1 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Advertising_Channel_Map /* 1 */, cp0->Advertising_Filter_Policy /* 1 */);
10043166:	71a8      	strb	r0, [r5, #6]
	buffer_out[5] = 0x20;
10043168:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
1004316a:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
1004316c:	70ab      	strb	r3, [r5, #2]
	buffer_out[3] = 0x01;
1004316e:	3b03      	subs	r3, #3
10043170:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x06;
10043172:	3305      	adds	r3, #5
10043174:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x20;
10043176:	331a      	adds	r3, #26
	buffer_out[1] = 0x0E;
10043178:	706a      	strb	r2, [r5, #1]
	buffer_out[5] = 0x20;
1004317a:	716b      	strb	r3, [r5, #5]
}
1004317c:	b005      	add	sp, #20
1004317e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10043180 <hci_le_set_advertising_data_process>:
uint16_t hci_le_set_advertising_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043180:	b510      	push	{r4, lr}
10043182:	0014      	movs	r4, r2
		return 0;
10043184:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043186:	2b06      	cmp	r3, #6
10043188:	d910      	bls.n	100431ac <hci_le_set_advertising_data_process+0x2c>
	*status = hci_le_set_advertising_data(cp0->Advertising_Data_Length /* 1 */, cp0->Advertising_Data /* 31 */);
1004318a:	1c81      	adds	r1, r0, #2
1004318c:	7840      	ldrb	r0, [r0, #1]
1004318e:	f009 ff49 	bl	1004d024 <hci_le_set_advertising_data>
	buffer_out[0] = 0x04;
10043192:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043194:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043196:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043198:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004319a:	3b03      	subs	r3, #3
1004319c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x08;
1004319e:	3307      	adds	r3, #7
100431a0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100431a2:	3318      	adds	r3, #24
	buffer_out[1] = 0x0E;
100431a4:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_advertising_data(cp0->Advertising_Data_Length /* 1 */, cp0->Advertising_Data /* 31 */);
100431a6:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100431a8:	7163      	strb	r3, [r4, #5]
100431aa:	3a07      	subs	r2, #7
}
100431ac:	0010      	movs	r0, r2
100431ae:	bd10      	pop	{r4, pc}

100431b0 <hci_le_set_scan_response_data_process>:
uint16_t hci_le_set_scan_response_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100431b0:	b510      	push	{r4, lr}
100431b2:	0014      	movs	r4, r2
		return 0;
100431b4:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100431b6:	2b06      	cmp	r3, #6
100431b8:	d910      	bls.n	100431dc <hci_le_set_scan_response_data_process+0x2c>
	*status = hci_le_set_scan_response_data(cp0->Scan_Response_Data_Length /* 1 */, cp0->Scan_Response_Data /* 31 */);
100431ba:	1c81      	adds	r1, r0, #2
100431bc:	7840      	ldrb	r0, [r0, #1]
100431be:	f00a f83b 	bl	1004d238 <hci_le_set_scan_response_data>
	buffer_out[0] = 0x04;
100431c2:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100431c4:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100431c6:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100431c8:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100431ca:	3b03      	subs	r3, #3
100431cc:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x09;
100431ce:	3308      	adds	r3, #8
100431d0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100431d2:	3317      	adds	r3, #23
	buffer_out[1] = 0x0E;
100431d4:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_scan_response_data(cp0->Scan_Response_Data_Length /* 1 */, cp0->Scan_Response_Data /* 31 */);
100431d6:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100431d8:	7163      	strb	r3, [r4, #5]
100431da:	3a07      	subs	r2, #7
}
100431dc:	0010      	movs	r0, r2
100431de:	bd10      	pop	{r4, pc}

100431e0 <hci_le_set_advertise_enable_process>:
uint16_t hci_le_set_advertise_enable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100431e0:	b510      	push	{r4, lr}
100431e2:	0014      	movs	r4, r2
		return 0;
100431e4:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100431e6:	2b06      	cmp	r3, #6
100431e8:	d90f      	bls.n	1004320a <hci_le_set_advertise_enable_process+0x2a>
	*status = hci_le_set_advertise_enable(cp0->Advertising_Enable /* 1 */);
100431ea:	7840      	ldrb	r0, [r0, #1]
100431ec:	f009 fefa 	bl	1004cfe4 <hci_le_set_advertise_enable>
	buffer_out[0] = 0x04;
100431f0:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100431f2:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100431f4:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100431f6:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100431f8:	3b03      	subs	r3, #3
100431fa:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0a;
100431fc:	3309      	adds	r3, #9
100431fe:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043200:	3316      	adds	r3, #22
	buffer_out[1] = 0x0E;
10043202:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_advertise_enable(cp0->Advertising_Enable /* 1 */);
10043204:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
10043206:	7163      	strb	r3, [r4, #5]
10043208:	3a07      	subs	r2, #7
}
1004320a:	0010      	movs	r0, r2
1004320c:	bd10      	pop	{r4, pc}

1004320e <hci_le_set_scan_parameters_process>:
uint16_t hci_le_set_scan_parameters_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004320e:	b573      	push	{r0, r1, r4, r5, r6, lr}
10043210:	0014      	movs	r4, r2
		return 0;
10043212:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043214:	2b06      	cmp	r3, #6
10043216:	d91b      	bls.n	10043250 <hci_le_set_scan_parameters_process+0x42>
	*status = hci_le_set_scan_parameters(cp0->LE_Scan_Type /* 1 */, cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Scanning_Filter_Policy /* 1 */);
10043218:	7942      	ldrb	r2, [r0, #5]
1004321a:	7901      	ldrb	r1, [r0, #4]
1004321c:	0212      	lsls	r2, r2, #8
1004321e:	430a      	orrs	r2, r1
10043220:	1c45      	adds	r5, r0, #1
10043222:	78c1      	ldrb	r1, [r0, #3]
10043224:	7886      	ldrb	r6, [r0, #2]
10043226:	79ad      	ldrb	r5, [r5, #6]
10043228:	0209      	lsls	r1, r1, #8
1004322a:	7983      	ldrb	r3, [r0, #6]
1004322c:	4331      	orrs	r1, r6
1004322e:	7840      	ldrb	r0, [r0, #1]
10043230:	9500      	str	r5, [sp, #0]
10043232:	f7fe fc46 	bl	10041ac2 <hci_le_set_scan_parameters>
	buffer_out[0] = 0x04;
10043236:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043238:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004323a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004323c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004323e:	3b03      	subs	r3, #3
10043240:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0b;
10043242:	330a      	adds	r3, #10
10043244:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043246:	3315      	adds	r3, #21
	buffer_out[1] = 0x0E;
10043248:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_scan_parameters(cp0->LE_Scan_Type /* 1 */, cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Scanning_Filter_Policy /* 1 */);
1004324a:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004324c:	7163      	strb	r3, [r4, #5]
1004324e:	3a07      	subs	r2, #7
}
10043250:	0010      	movs	r0, r2
10043252:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10043254 <hci_le_set_scan_enable_process>:
uint16_t hci_le_set_scan_enable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043254:	b510      	push	{r4, lr}
10043256:	0014      	movs	r4, r2
		return 0;
10043258:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004325a:	2b06      	cmp	r3, #6
1004325c:	d910      	bls.n	10043280 <hci_le_set_scan_enable_process+0x2c>
	*status = hci_le_set_scan_enable(cp0->LE_Scan_Enable /* 1 */, cp0->Filter_Duplicates /* 1 */);
1004325e:	7881      	ldrb	r1, [r0, #2]
10043260:	7840      	ldrb	r0, [r0, #1]
10043262:	f7fe fc35 	bl	10041ad0 <hci_le_set_scan_enable>
	buffer_out[0] = 0x04;
10043266:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043268:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004326a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004326c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004326e:	3b03      	subs	r3, #3
10043270:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0c;
10043272:	330b      	adds	r3, #11
10043274:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043276:	3314      	adds	r3, #20
	buffer_out[1] = 0x0E;
10043278:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_scan_enable(cp0->LE_Scan_Enable /* 1 */, cp0->Filter_Duplicates /* 1 */);
1004327a:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004327c:	7163      	strb	r3, [r4, #5]
1004327e:	3a07      	subs	r2, #7
}
10043280:	0010      	movs	r0, r2
10043282:	bd10      	pop	{r4, pc}

10043284 <hci_le_create_connection_process>:
uint16_t hci_le_create_connection_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043284:	b5f0      	push	{r4, r5, r6, r7, lr}
10043286:	0007      	movs	r7, r0
10043288:	b08b      	sub	sp, #44	; 0x2c
1004328a:	0015      	movs	r5, r2
		return 0;
1004328c:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
1004328e:	2b06      	cmp	r3, #6
10043290:	d940      	bls.n	10043314 <hci_le_create_connection_process+0x90>
	*status = hci_le_create_connection(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Initiator_Filter_Policy /* 1 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */,
10043292:	1c7c      	adds	r4, r7, #1
10043294:	7963      	ldrb	r3, [r4, #5]
10043296:	7866      	ldrb	r6, [r4, #1]
10043298:	9309      	str	r3, [sp, #36]	; 0x24
1004329a:	78e1      	ldrb	r1, [r4, #3]
1004329c:	78a0      	ldrb	r0, [r4, #2]
1004329e:	0209      	lsls	r1, r1, #8
100432a0:	4301      	orrs	r1, r0
100432a2:	7878      	ldrb	r0, [r7, #1]
100432a4:	0236      	lsls	r6, r6, #8
100432a6:	4306      	orrs	r6, r0
100432a8:	7de0      	ldrb	r0, [r4, #23]
100432aa:	7922      	ldrb	r2, [r4, #4]
100432ac:	4684      	mov	ip, r0
100432ae:	4663      	mov	r3, ip
100432b0:	7e20      	ldrb	r0, [r4, #24]
100432b2:	3707      	adds	r7, #7
100432b4:	0200      	lsls	r0, r0, #8
100432b6:	4318      	orrs	r0, r3
100432b8:	9007      	str	r0, [sp, #28]
100432ba:	7da0      	ldrb	r0, [r4, #22]
100432bc:	7d63      	ldrb	r3, [r4, #21]
100432be:	0200      	lsls	r0, r0, #8
100432c0:	4318      	orrs	r0, r3
100432c2:	9006      	str	r0, [sp, #24]
100432c4:	7d20      	ldrb	r0, [r4, #20]
100432c6:	7ce3      	ldrb	r3, [r4, #19]
100432c8:	0200      	lsls	r0, r0, #8
100432ca:	4318      	orrs	r0, r3
100432cc:	9005      	str	r0, [sp, #20]
100432ce:	7ca0      	ldrb	r0, [r4, #18]
100432d0:	7c63      	ldrb	r3, [r4, #17]
100432d2:	0200      	lsls	r0, r0, #8
100432d4:	4318      	orrs	r0, r3
100432d6:	9004      	str	r0, [sp, #16]
100432d8:	7c20      	ldrb	r0, [r4, #16]
100432da:	7be3      	ldrb	r3, [r4, #15]
100432dc:	0200      	lsls	r0, r0, #8
100432de:	4318      	orrs	r0, r3
100432e0:	9003      	str	r0, [sp, #12]
100432e2:	7ba0      	ldrb	r0, [r4, #14]
100432e4:	7b63      	ldrb	r3, [r4, #13]
100432e6:	0200      	lsls	r0, r0, #8
100432e8:	4318      	orrs	r0, r3
100432ea:	9002      	str	r0, [sp, #8]
100432ec:	7b20      	ldrb	r0, [r4, #12]
100432ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
100432f0:	9001      	str	r0, [sp, #4]
100432f2:	9700      	str	r7, [sp, #0]
100432f4:	0030      	movs	r0, r6
100432f6:	f7fe fbad 	bl	10041a54 <hci_le_create_connection>
	buffer_out[0] = 0x04;
100432fa:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100432fc:	220f      	movs	r2, #15
	*status = hci_le_create_connection(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Initiator_Filter_Policy /* 1 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */,
100432fe:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0x20;
10043300:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10043302:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10043304:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
10043306:	3b03      	subs	r3, #3
10043308:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x0d;
1004330a:	330c      	adds	r3, #12
1004330c:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0x20;
1004330e:	3313      	adds	r3, #19
	buffer_out[1] = 0x0F;
10043310:	706a      	strb	r2, [r5, #1]
	buffer_out[6] = 0x20;
10043312:	71ab      	strb	r3, [r5, #6]
}
10043314:	b00b      	add	sp, #44	; 0x2c
10043316:	bdf0      	pop	{r4, r5, r6, r7, pc}

10043318 <hci_le_create_connection_cancel_process>:
uint16_t hci_le_create_connection_cancel_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043318:	b510      	push	{r4, lr}
		return 0;
1004331a:	2000      	movs	r0, #0
uint16_t hci_le_create_connection_cancel_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004331c:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
1004331e:	2b06      	cmp	r3, #6
10043320:	d90d      	bls.n	1004333e <hci_le_create_connection_cancel_process+0x26>
	*status = hci_le_create_connection_cancel();
10043322:	f7fe fbbc 	bl	10041a9e <hci_le_create_connection_cancel>
	buffer_out[0] = 0x04;
10043326:	2204      	movs	r2, #4
	buffer_out[1] = 0x0E;
10043328:	230e      	movs	r3, #14
	*status = hci_le_create_connection_cancel();
1004332a:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004332c:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
1004332e:	7022      	strb	r2, [r4, #0]
	buffer_out[1] = 0x0E;
10043330:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043332:	70a2      	strb	r2, [r4, #2]
	buffer_out[4] = 0x0e;
10043334:	7123      	strb	r3, [r4, #4]
	buffer_out[3] = 0x01;
10043336:	3a03      	subs	r2, #3
	buffer_out[5] = 0x20;
10043338:	3312      	adds	r3, #18
	buffer_out[3] = 0x01;
1004333a:	70e2      	strb	r2, [r4, #3]
	buffer_out[5] = 0x20;
1004333c:	7163      	strb	r3, [r4, #5]
}
1004333e:	bd10      	pop	{r4, pc}

10043340 <hci_le_clear_white_list_process>:
uint16_t hci_le_clear_white_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043340:	b510      	push	{r4, lr}
		return 0;
10043342:	2000      	movs	r0, #0
uint16_t hci_le_clear_white_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043344:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10043346:	2b06      	cmp	r3, #6
10043348:	d90e      	bls.n	10043368 <hci_le_clear_white_list_process+0x28>
	*status = hci_le_clear_white_list();
1004334a:	f009 fcd8 	bl	1004ccfe <hci_le_clear_white_list>
	buffer_out[0] = 0x04;
1004334e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043350:	220e      	movs	r2, #14
	*status = hci_le_clear_white_list();
10043352:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
10043354:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10043356:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043358:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004335a:	3b03      	subs	r3, #3
1004335c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x10;
1004335e:	330f      	adds	r3, #15
10043360:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043362:	3310      	adds	r3, #16
	buffer_out[1] = 0x0E;
10043364:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0x20;
10043366:	7163      	strb	r3, [r4, #5]
}
10043368:	bd10      	pop	{r4, pc}

1004336a <hci_le_add_device_to_white_list_process>:
uint16_t hci_le_add_device_to_white_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004336a:	b510      	push	{r4, lr}
1004336c:	0014      	movs	r4, r2
		return 0;
1004336e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043370:	2b06      	cmp	r3, #6
10043372:	d910      	bls.n	10043396 <hci_le_add_device_to_white_list_process+0x2c>
	*status = hci_le_add_device_to_white_list(cp0->Address_Type /* 1 */, cp0->Address /* 6 */);
10043374:	1c81      	adds	r1, r0, #2
10043376:	7840      	ldrb	r0, [r0, #1]
10043378:	f009 fca8 	bl	1004cccc <hci_le_add_device_to_white_list>
	buffer_out[0] = 0x04;
1004337c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004337e:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043380:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043382:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043384:	3b03      	subs	r3, #3
10043386:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x11;
10043388:	3310      	adds	r3, #16
1004338a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
1004338c:	330f      	adds	r3, #15
	buffer_out[1] = 0x0E;
1004338e:	7062      	strb	r2, [r4, #1]
	*status = hci_le_add_device_to_white_list(cp0->Address_Type /* 1 */, cp0->Address /* 6 */);
10043390:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
10043392:	7163      	strb	r3, [r4, #5]
10043394:	3a07      	subs	r2, #7
}
10043396:	0010      	movs	r0, r2
10043398:	bd10      	pop	{r4, pc}

1004339a <hci_le_remove_device_from_white_list_process>:
uint16_t hci_le_remove_device_from_white_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004339a:	b510      	push	{r4, lr}
1004339c:	0014      	movs	r4, r2
		return 0;
1004339e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100433a0:	2b06      	cmp	r3, #6
100433a2:	d910      	bls.n	100433c6 <hci_le_remove_device_from_white_list_process+0x2c>
	*status = hci_le_remove_device_from_white_list(cp0->Address_Type /* 1 */, cp0->Address /* 6 */);
100433a4:	1c81      	adds	r1, r0, #2
100433a6:	7840      	ldrb	r0, [r0, #1]
100433a8:	f009 fe0a 	bl	1004cfc0 <hci_le_remove_device_from_white_list>
	buffer_out[0] = 0x04;
100433ac:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100433ae:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100433b0:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100433b2:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100433b4:	3b03      	subs	r3, #3
100433b6:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x12;
100433b8:	3311      	adds	r3, #17
100433ba:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100433bc:	189b      	adds	r3, r3, r2
	buffer_out[1] = 0x0E;
100433be:	7062      	strb	r2, [r4, #1]
	*status = hci_le_remove_device_from_white_list(cp0->Address_Type /* 1 */, cp0->Address /* 6 */);
100433c0:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100433c2:	7163      	strb	r3, [r4, #5]
100433c4:	3a07      	subs	r2, #7
}
100433c6:	0010      	movs	r0, r2
100433c8:	bd10      	pop	{r4, pc}

100433ca <hci_le_connection_update_process>:
uint16_t hci_le_connection_update_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100433ca:	b5f0      	push	{r4, r5, r6, r7, lr}
100433cc:	0015      	movs	r5, r2
100433ce:	b085      	sub	sp, #20
		return 0;
100433d0:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100433d2:	2b06      	cmp	r3, #6
100433d4:	d92e      	bls.n	10043434 <hci_le_connection_update_process+0x6a>
	*status = hci_le_connection_update(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */);
100433d6:	7a03      	ldrb	r3, [r0, #8]
100433d8:	79c2      	ldrb	r2, [r0, #7]
100433da:	021b      	lsls	r3, r3, #8
100433dc:	4313      	orrs	r3, r2
100433de:	7982      	ldrb	r2, [r0, #6]
100433e0:	7941      	ldrb	r1, [r0, #5]
100433e2:	0212      	lsls	r2, r2, #8
100433e4:	430a      	orrs	r2, r1
100433e6:	7901      	ldrb	r1, [r0, #4]
100433e8:	78c6      	ldrb	r6, [r0, #3]
100433ea:	0209      	lsls	r1, r1, #8
100433ec:	1c44      	adds	r4, r0, #1
100433ee:	4331      	orrs	r1, r6
100433f0:	7846      	ldrb	r6, [r0, #1]
100433f2:	7880      	ldrb	r0, [r0, #2]
100433f4:	7b27      	ldrb	r7, [r4, #12]
100433f6:	0200      	lsls	r0, r0, #8
100433f8:	4330      	orrs	r0, r6
100433fa:	7b66      	ldrb	r6, [r4, #13]
100433fc:	0236      	lsls	r6, r6, #8
100433fe:	433e      	orrs	r6, r7
10043400:	9602      	str	r6, [sp, #8]
10043402:	7ae6      	ldrb	r6, [r4, #11]
10043404:	7aa7      	ldrb	r7, [r4, #10]
10043406:	0236      	lsls	r6, r6, #8
10043408:	433e      	orrs	r6, r7
1004340a:	9601      	str	r6, [sp, #4]
1004340c:	7a26      	ldrb	r6, [r4, #8]
1004340e:	7a64      	ldrb	r4, [r4, #9]
10043410:	0224      	lsls	r4, r4, #8
10043412:	4334      	orrs	r4, r6
10043414:	9400      	str	r4, [sp, #0]
10043416:	f7fe fb46 	bl	10041aa6 <hci_le_connection_update>
	buffer_out[0] = 0x04;
1004341a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004341c:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
1004341e:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10043420:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
10043422:	3b03      	subs	r3, #3
10043424:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x13;
10043426:	3312      	adds	r3, #18
10043428:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0x20;
1004342a:	330d      	adds	r3, #13
	buffer_out[1] = 0x0F;
1004342c:	706a      	strb	r2, [r5, #1]
	*status = hci_le_connection_update(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */);
1004342e:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0x20;
10043430:	71ab      	strb	r3, [r5, #6]
10043432:	3a08      	subs	r2, #8
}
10043434:	0010      	movs	r0, r2
10043436:	b005      	add	sp, #20
10043438:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004343a <hci_le_set_host_channel_classification_process>:
uint16_t hci_le_set_host_channel_classification_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004343a:	b510      	push	{r4, lr}
1004343c:	0014      	movs	r4, r2
		return 0;
1004343e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043440:	2b06      	cmp	r3, #6
10043442:	d90f      	bls.n	10043464 <hci_le_set_host_channel_classification_process+0x2a>
	*status = hci_le_set_host_channel_classification(cp0->LE_Channel_Map /* 5 */);
10043444:	3001      	adds	r0, #1
10043446:	f7fe fb4b 	bl	10041ae0 <hci_le_set_host_channel_classification>
	buffer_out[0] = 0x04;
1004344a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004344c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004344e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043450:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043452:	3b03      	subs	r3, #3
10043454:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x14;
10043456:	3313      	adds	r3, #19
10043458:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
1004345a:	330c      	adds	r3, #12
	buffer_out[1] = 0x0E;
1004345c:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_host_channel_classification(cp0->LE_Channel_Map /* 5 */);
1004345e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
10043460:	7163      	strb	r3, [r4, #5]
10043462:	3a07      	subs	r2, #7
}
10043464:	0010      	movs	r0, r2
10043466:	bd10      	pop	{r4, pc}

10043468 <hci_le_read_channel_map_process>:
uint16_t hci_le_read_channel_map_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043468:	b573      	push	{r0, r1, r4, r5, r6, lr}
1004346a:	0005      	movs	r5, r0
1004346c:	0014      	movs	r4, r2
		return 0;
1004346e:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 2 + 5 + 6)) {
10043470:	2b0d      	cmp	r3, #13
10043472:	d920      	bls.n	100434b6 <hci_le_read_channel_map_process+0x4e>
	rp0->Status = hci_le_read_channel_map(cp0->Connection_Handle /* 2 */, LE_Channel_Map);
10043474:	78a8      	ldrb	r0, [r5, #2]
10043476:	786b      	ldrb	r3, [r5, #1]
10043478:	0200      	lsls	r0, r0, #8
1004347a:	4318      	orrs	r0, r3
1004347c:	4669      	mov	r1, sp
1004347e:	f009 fd41 	bl	1004cf04 <hci_le_read_channel_map>
10043482:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->LE_Channel_Map, (const void *) LE_Channel_Map, 5);
10043484:	0020      	movs	r0, r4
	rp0->Connection_Handle = cp0->Connection_Handle;
10043486:	78ab      	ldrb	r3, [r5, #2]
10043488:	786a      	ldrb	r2, [r5, #1]
1004348a:	021b      	lsls	r3, r3, #8
1004348c:	4313      	orrs	r3, r2
1004348e:	71e3      	strb	r3, [r4, #7]
10043490:	0a1b      	lsrs	r3, r3, #8
10043492:	7223      	strb	r3, [r4, #8]
	Osal_MemCpy((void *) rp0->LE_Channel_Map, (const void *) LE_Channel_Map, 5);
10043494:	3009      	adds	r0, #9
10043496:	2205      	movs	r2, #5
10043498:	4669      	mov	r1, sp
1004349a:	f7fd f972 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004349e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100434a0:	200e      	movs	r0, #14
	buffer_out[0] = 0x04;
100434a2:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100434a4:	3307      	adds	r3, #7
100434a6:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100434a8:	3b0a      	subs	r3, #10
100434aa:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x15;
100434ac:	3314      	adds	r3, #20
100434ae:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100434b0:	330b      	adds	r3, #11
	buffer_out[1] = 0x0E;
100434b2:	7060      	strb	r0, [r4, #1]
	buffer_out[5] = 0x20;
100434b4:	7163      	strb	r3, [r4, #5]
}
100434b6:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

100434b8 <hci_le_read_remote_used_features_process>:
uint16_t hci_le_read_remote_used_features_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100434b8:	b510      	push	{r4, lr}
100434ba:	0014      	movs	r4, r2
		return 0;
100434bc:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100434be:	2b06      	cmp	r3, #6
100434c0:	d912      	bls.n	100434e8 <hci_le_read_remote_used_features_process+0x30>
	*status = hci_le_read_remote_used_features(cp0->Connection_Handle /* 2 */);
100434c2:	7843      	ldrb	r3, [r0, #1]
100434c4:	7880      	ldrb	r0, [r0, #2]
100434c6:	0200      	lsls	r0, r0, #8
100434c8:	4318      	orrs	r0, r3
100434ca:	f009 fd47 	bl	1004cf5c <hci_le_read_remote_used_features>
	buffer_out[0] = 0x04;
100434ce:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100434d0:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
100434d2:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100434d4:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
100434d6:	3b03      	subs	r3, #3
100434d8:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x16;
100434da:	3315      	adds	r3, #21
100434dc:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0x20;
100434de:	330a      	adds	r3, #10
	buffer_out[1] = 0x0F;
100434e0:	7062      	strb	r2, [r4, #1]
	*status = hci_le_read_remote_used_features(cp0->Connection_Handle /* 2 */);
100434e2:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0x20;
100434e4:	71a3      	strb	r3, [r4, #6]
100434e6:	3a08      	subs	r2, #8
}
100434e8:	0010      	movs	r0, r2
100434ea:	bd10      	pop	{r4, pc}

100434ec <hci_le_encrypt_process>:
uint16_t hci_le_encrypt_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100434ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
100434ee:	0001      	movs	r1, r0
100434f0:	0014      	movs	r4, r2
		return 0;
100434f2:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 16 + 6)) {
100434f4:	2b16      	cmp	r3, #22
100434f6:	d916      	bls.n	10043526 <hci_le_encrypt_process+0x3a>
	rp0->Status = hci_le_encrypt(cp0->Key /* 16 */, cp0->Plaintext_Data /* 16 */, Encrypted_Data);
100434f8:	1c48      	adds	r0, r1, #1
100434fa:	466a      	mov	r2, sp
100434fc:	3111      	adds	r1, #17
100434fe:	f009 fc8c 	bl	1004ce1a <hci_le_encrypt>
	Osal_MemCpy((void *) rp0->Encrypted_Data, (const void *) Encrypted_Data, 16);
10043502:	2210      	movs	r2, #16
	rp0->Status = hci_le_encrypt(cp0->Key /* 16 */, cp0->Plaintext_Data /* 16 */, Encrypted_Data);
10043504:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Encrypted_Data, (const void *) Encrypted_Data, 16);
10043506:	4669      	mov	r1, sp
10043508:	1de0      	adds	r0, r4, #7
1004350a:	f7fd f93a 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004350e:	2304      	movs	r3, #4
	buffer_out[4] = 0x17;
10043510:	2017      	movs	r0, #23
	buffer_out[0] = 0x04;
10043512:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043514:	330a      	adds	r3, #10
10043516:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043518:	3306      	adds	r3, #6
1004351a:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004351c:	3b13      	subs	r3, #19
1004351e:	70e3      	strb	r3, [r4, #3]
	buffer_out[5] = 0x20;
10043520:	331f      	adds	r3, #31
	buffer_out[4] = 0x17;
10043522:	7120      	strb	r0, [r4, #4]
	buffer_out[5] = 0x20;
10043524:	7163      	strb	r3, [r4, #5]
}
10043526:	b004      	add	sp, #16
10043528:	bd10      	pop	{r4, pc}

1004352a <hci_le_rand_process>:
uint16_t hci_le_rand_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004352a:	b513      	push	{r0, r1, r4, lr}
1004352c:	0014      	movs	r4, r2
		return 0;
1004352e:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 8 + 6)) {
10043530:	2b0e      	cmp	r3, #14
10043532:	d915      	bls.n	10043560 <hci_le_rand_process+0x36>
	rp0->Status = hci_le_rand(Random_Number);
10043534:	4668      	mov	r0, sp
10043536:	f009 fcc1 	bl	1004cebc <hci_le_rand>
	Osal_MemCpy((void *) rp0->Random_Number, (const void *) Random_Number, 8);
1004353a:	2208      	movs	r2, #8
	rp0->Status = hci_le_rand(Random_Number);
1004353c:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Random_Number, (const void *) Random_Number, 8);
1004353e:	4669      	mov	r1, sp
10043540:	1de0      	adds	r0, r4, #7
10043542:	f7fd f91e 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10043546:	2304      	movs	r3, #4
10043548:	200f      	movs	r0, #15
1004354a:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
1004354c:	330a      	adds	r3, #10
1004354e:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043550:	3b02      	subs	r3, #2
10043552:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043554:	3b0b      	subs	r3, #11
10043556:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x18;
10043558:	3317      	adds	r3, #23
1004355a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
1004355c:	3308      	adds	r3, #8
1004355e:	7163      	strb	r3, [r4, #5]
}
10043560:	bd16      	pop	{r1, r2, r4, pc}

10043562 <hci_le_start_encryption_process>:
uint16_t hci_le_start_encryption_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043562:	b570      	push	{r4, r5, r6, lr}
10043564:	0014      	movs	r4, r2
		return 0;
10043566:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043568:	2b06      	cmp	r3, #6
1004356a:	d919      	bls.n	100435a0 <hci_le_start_encryption_process+0x3e>
	*status = hci_le_start_encryption(cp0->Connection_Handle /* 2 */, cp0->Random_Number /* 8 */, cp0->Encrypted_Diversifier /* 2 */, cp0->Long_Term_Key /* 16 */);
1004356c:	0003      	movs	r3, r0
1004356e:	7b02      	ldrb	r2, [r0, #12]
10043570:	7ac1      	ldrb	r1, [r0, #11]
10043572:	0212      	lsls	r2, r2, #8
10043574:	430a      	orrs	r2, r1
10043576:	7846      	ldrb	r6, [r0, #1]
10043578:	1cc1      	adds	r1, r0, #3
1004357a:	7880      	ldrb	r0, [r0, #2]
1004357c:	330d      	adds	r3, #13
1004357e:	0200      	lsls	r0, r0, #8
10043580:	4330      	orrs	r0, r6
10043582:	f7fe faa9 	bl	10041ad8 <hci_le_start_encryption>
	buffer_out[0] = 0x04;
10043586:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043588:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
1004358a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004358c:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
1004358e:	3b03      	subs	r3, #3
10043590:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x19;
10043592:	3318      	adds	r3, #24
10043594:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0x20;
10043596:	3307      	adds	r3, #7
	buffer_out[1] = 0x0F;
10043598:	7062      	strb	r2, [r4, #1]
	*status = hci_le_start_encryption(cp0->Connection_Handle /* 2 */, cp0->Random_Number /* 8 */, cp0->Encrypted_Diversifier /* 2 */, cp0->Long_Term_Key /* 16 */);
1004359a:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0x20;
1004359c:	71a3      	strb	r3, [r4, #6]
1004359e:	3a08      	subs	r2, #8
}
100435a0:	0010      	movs	r0, r2
100435a2:	bd70      	pop	{r4, r5, r6, pc}

100435a4 <hci_le_long_term_key_request_reply_process>:
uint16_t hci_le_long_term_key_request_reply_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100435a4:	b570      	push	{r4, r5, r6, lr}
100435a6:	0005      	movs	r5, r0
100435a8:	0014      	movs	r4, r2
		return 0;
100435aa:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 2 + 6)) {
100435ac:	2b08      	cmp	r3, #8
100435ae:	d91b      	bls.n	100435e8 <hci_le_long_term_key_request_reply_process+0x44>
	rp0->Status = hci_le_long_term_key_request_reply(cp0->Connection_Handle /* 2 */, cp0->Long_Term_Key /* 16 */);
100435b0:	78a8      	ldrb	r0, [r5, #2]
100435b2:	786b      	ldrb	r3, [r5, #1]
100435b4:	0200      	lsls	r0, r0, #8
100435b6:	4318      	orrs	r0, r3
100435b8:	1ce9      	adds	r1, r5, #3
100435ba:	f009 fc71 	bl	1004cea0 <hci_le_long_term_key_request_reply>
100435be:	71a0      	strb	r0, [r4, #6]
	rp0->Connection_Handle = cp0->Connection_Handle;
100435c0:	78ab      	ldrb	r3, [r5, #2]
100435c2:	786a      	ldrb	r2, [r5, #1]
100435c4:	021b      	lsls	r3, r3, #8
100435c6:	4313      	orrs	r3, r2
100435c8:	71e3      	strb	r3, [r4, #7]
100435ca:	0a1b      	lsrs	r3, r3, #8
100435cc:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
100435ce:	2304      	movs	r3, #4
	buffer_out[5] = 0x20;
100435d0:	2009      	movs	r0, #9
	buffer_out[0] = 0x04;
100435d2:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100435d4:	330a      	adds	r3, #10
100435d6:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100435d8:	3b08      	subs	r3, #8
100435da:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100435dc:	3b05      	subs	r3, #5
100435de:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1a;
100435e0:	3319      	adds	r3, #25
100435e2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100435e4:	3306      	adds	r3, #6
100435e6:	7163      	strb	r3, [r4, #5]
}
100435e8:	bd70      	pop	{r4, r5, r6, pc}

100435ea <hci_le_long_term_key_requested_negative_reply_process>:
uint16_t hci_le_long_term_key_requested_negative_reply_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100435ea:	b570      	push	{r4, r5, r6, lr}
100435ec:	0005      	movs	r5, r0
100435ee:	0014      	movs	r4, r2
		return 0;
100435f0:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 2 + 6)) {
100435f2:	2b08      	cmp	r3, #8
100435f4:	d91a      	bls.n	1004362c <hci_le_long_term_key_requested_negative_reply_process+0x42>
	rp0->Status = hci_le_long_term_key_requested_negative_reply(cp0->Connection_Handle /* 2 */);
100435f6:	78a8      	ldrb	r0, [r5, #2]
100435f8:	786b      	ldrb	r3, [r5, #1]
100435fa:	0200      	lsls	r0, r0, #8
100435fc:	4318      	orrs	r0, r3
100435fe:	f009 fc56 	bl	1004ceae <hci_le_long_term_key_requested_negative_reply>
10043602:	71a0      	strb	r0, [r4, #6]
	rp0->Connection_Handle = cp0->Connection_Handle;
10043604:	78ab      	ldrb	r3, [r5, #2]
10043606:	786a      	ldrb	r2, [r5, #1]
10043608:	021b      	lsls	r3, r3, #8
1004360a:	4313      	orrs	r3, r2
1004360c:	71e3      	strb	r3, [r4, #7]
1004360e:	0a1b      	lsrs	r3, r3, #8
10043610:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
10043612:	2304      	movs	r3, #4
	buffer_out[5] = 0x20;
10043614:	2009      	movs	r0, #9
	buffer_out[0] = 0x04;
10043616:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043618:	330a      	adds	r3, #10
1004361a:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004361c:	3b08      	subs	r3, #8
1004361e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043620:	3b05      	subs	r3, #5
10043622:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1b;
10043624:	331a      	adds	r3, #26
10043626:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043628:	3305      	adds	r3, #5
1004362a:	7163      	strb	r3, [r4, #5]
}
1004362c:	bd70      	pop	{r4, r5, r6, pc}

1004362e <hci_le_read_supported_states_process>:
uint16_t hci_le_read_supported_states_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004362e:	b513      	push	{r0, r1, r4, lr}
10043630:	0014      	movs	r4, r2
		return 0;
10043632:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 8 + 6)) {
10043634:	2b0e      	cmp	r3, #14
10043636:	d915      	bls.n	10043664 <hci_le_read_supported_states_process+0x36>
	rp0->Status = hci_le_read_supported_states(LE_States);
10043638:	4668      	mov	r0, sp
1004363a:	f009 fc9f 	bl	1004cf7c <hci_le_read_supported_states>
	Osal_MemCpy((void *) rp0->LE_States, (const void *) LE_States, 8);
1004363e:	2208      	movs	r2, #8
	rp0->Status = hci_le_read_supported_states(LE_States);
10043640:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->LE_States, (const void *) LE_States, 8);
10043642:	4669      	mov	r1, sp
10043644:	1de0      	adds	r0, r4, #7
10043646:	f7fd f89c 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004364a:	2304      	movs	r3, #4
1004364c:	200f      	movs	r0, #15
1004364e:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043650:	330a      	adds	r3, #10
10043652:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043654:	3b02      	subs	r3, #2
10043656:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043658:	3b0b      	subs	r3, #11
1004365a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1c;
1004365c:	331b      	adds	r3, #27
1004365e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043660:	3304      	adds	r3, #4
10043662:	7163      	strb	r3, [r4, #5]
}
10043664:	bd16      	pop	{r1, r2, r4, pc}

10043666 <hci_le_receiver_test_process>:
uint16_t hci_le_receiver_test_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043666:	b510      	push	{r4, lr}
10043668:	0014      	movs	r4, r2
		return 0;
1004366a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004366c:	2b06      	cmp	r3, #6
1004366e:	d90f      	bls.n	10043690 <hci_le_receiver_test_process+0x2a>
	*status = hci_le_receiver_test(cp0->RX_Frequency /* 1 */);
10043670:	7840      	ldrb	r0, [r0, #1]
10043672:	f009 fc8f 	bl	1004cf94 <hci_le_receiver_test>
	buffer_out[0] = 0x04;
10043676:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043678:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004367a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004367c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004367e:	3b03      	subs	r3, #3
10043680:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1d;
10043682:	331c      	adds	r3, #28
10043684:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043686:	3303      	adds	r3, #3
	buffer_out[1] = 0x0E;
10043688:	7062      	strb	r2, [r4, #1]
	*status = hci_le_receiver_test(cp0->RX_Frequency /* 1 */);
1004368a:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004368c:	7163      	strb	r3, [r4, #5]
1004368e:	3a07      	subs	r2, #7
}
10043690:	0010      	movs	r0, r2
10043692:	bd10      	pop	{r4, pc}

10043694 <hci_le_transmitter_test_process>:
uint16_t hci_le_transmitter_test_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043694:	b510      	push	{r4, lr}
10043696:	0014      	movs	r4, r2
		return 0;
10043698:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004369a:	2b06      	cmp	r3, #6
1004369c:	d911      	bls.n	100436c2 <hci_le_transmitter_test_process+0x2e>
	*status = hci_le_transmitter_test(cp0->TX_Frequency /* 1 */, cp0->Length_Of_Test_Data /* 1 */, cp0->Packet_Payload /* 1 */);
1004369e:	78c2      	ldrb	r2, [r0, #3]
100436a0:	7881      	ldrb	r1, [r0, #2]
100436a2:	7840      	ldrb	r0, [r0, #1]
100436a4:	f009 fdf4 	bl	1004d290 <hci_le_transmitter_test>
	buffer_out[0] = 0x04;
100436a8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100436aa:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100436ac:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100436ae:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100436b0:	3b03      	subs	r3, #3
100436b2:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1e;
100436b4:	331d      	adds	r3, #29
100436b6:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100436b8:	3302      	adds	r3, #2
	buffer_out[1] = 0x0E;
100436ba:	7062      	strb	r2, [r4, #1]
	*status = hci_le_transmitter_test(cp0->TX_Frequency /* 1 */, cp0->Length_Of_Test_Data /* 1 */, cp0->Packet_Payload /* 1 */);
100436bc:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100436be:	7163      	strb	r3, [r4, #5]
100436c0:	3a07      	subs	r2, #7
}
100436c2:	0010      	movs	r0, r2
100436c4:	bd10      	pop	{r4, pc}

100436c6 <hci_le_set_data_length_process>:
uint16_t hci_le_set_data_length_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100436c6:	b570      	push	{r4, r5, r6, lr}
100436c8:	0006      	movs	r6, r0
100436ca:	0014      	movs	r4, r2
		return 0;
100436cc:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 2 + 6)) {
100436ce:	2b08      	cmp	r3, #8
100436d0:	d922      	bls.n	10043718 <hci_le_set_data_length_process+0x52>
	rp0->Status = hci_le_set_data_length(cp0->Connection_Handle /* 2 */, cp0->TxOctets /* 2 */, cp0->TxTime /* 2 */);
100436d2:	79b2      	ldrb	r2, [r6, #6]
100436d4:	7973      	ldrb	r3, [r6, #5]
100436d6:	7931      	ldrb	r1, [r6, #4]
100436d8:	0212      	lsls	r2, r2, #8
100436da:	431a      	orrs	r2, r3
100436dc:	78f3      	ldrb	r3, [r6, #3]
100436de:	78b0      	ldrb	r0, [r6, #2]
100436e0:	0209      	lsls	r1, r1, #8
100436e2:	4319      	orrs	r1, r3
100436e4:	7873      	ldrb	r3, [r6, #1]
100436e6:	0200      	lsls	r0, r0, #8
100436e8:	4318      	orrs	r0, r3
100436ea:	f7fe fa2b 	bl	10041b44 <hci_le_set_data_length>
100436ee:	71a0      	strb	r0, [r4, #6]
	rp0->Connection_Handle = cp0->Connection_Handle;
100436f0:	78b3      	ldrb	r3, [r6, #2]
100436f2:	7872      	ldrb	r2, [r6, #1]
100436f4:	021b      	lsls	r3, r3, #8
100436f6:	4313      	orrs	r3, r2
100436f8:	71e3      	strb	r3, [r4, #7]
100436fa:	0a1b      	lsrs	r3, r3, #8
100436fc:	7223      	strb	r3, [r4, #8]
	buffer_out[0] = 0x04;
100436fe:	2304      	movs	r3, #4
	buffer_out[5] = 0x20;
10043700:	2009      	movs	r0, #9
	buffer_out[0] = 0x04;
10043702:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043704:	330a      	adds	r3, #10
10043706:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043708:	3b08      	subs	r3, #8
1004370a:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004370c:	3b05      	subs	r3, #5
1004370e:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x22;
10043710:	3321      	adds	r3, #33	; 0x21
10043712:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043714:	3b02      	subs	r3, #2
10043716:	7163      	strb	r3, [r4, #5]
}
10043718:	bd70      	pop	{r4, r5, r6, pc}

1004371a <hci_le_write_suggested_default_data_length_process>:
uint16_t hci_le_write_suggested_default_data_length_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004371a:	b510      	push	{r4, lr}
1004371c:	0014      	movs	r4, r2
		return 0;
1004371e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043720:	2b06      	cmp	r3, #6
10043722:	d916      	bls.n	10043752 <hci_le_write_suggested_default_data_length_process+0x38>
	*status = hci_le_write_suggested_default_data_length(cp0->SuggestedMaxTxOctets /* 2 */, cp0->SuggestedMaxTxTime /* 2 */);
10043724:	7901      	ldrb	r1, [r0, #4]
10043726:	78c2      	ldrb	r2, [r0, #3]
10043728:	0209      	lsls	r1, r1, #8
1004372a:	4311      	orrs	r1, r2
1004372c:	7842      	ldrb	r2, [r0, #1]
1004372e:	7880      	ldrb	r0, [r0, #2]
10043730:	0200      	lsls	r0, r0, #8
10043732:	4310      	orrs	r0, r2
10043734:	f7fe fa0e 	bl	10041b54 <hci_le_write_suggested_default_data_length>
	buffer_out[0] = 0x04;
10043738:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004373a:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004373c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004373e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043740:	3b03      	subs	r3, #3
10043742:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x24;
10043744:	3323      	adds	r3, #35	; 0x23
10043746:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043748:	3b04      	subs	r3, #4
	buffer_out[1] = 0x0E;
1004374a:	7062      	strb	r2, [r4, #1]
	*status = hci_le_write_suggested_default_data_length(cp0->SuggestedMaxTxOctets /* 2 */, cp0->SuggestedMaxTxTime /* 2 */);
1004374c:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004374e:	7163      	strb	r3, [r4, #5]
10043750:	3a07      	subs	r2, #7
}
10043752:	0010      	movs	r0, r2
10043754:	bd10      	pop	{r4, pc}

10043756 <hci_le_read_local_p256_public_key_process>:
uint16_t hci_le_read_local_p256_public_key_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043756:	b510      	push	{r4, lr}
		return 0;
10043758:	2000      	movs	r0, #0
uint16_t hci_le_read_local_p256_public_key_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004375a:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
1004375c:	2b06      	cmp	r3, #6
1004375e:	d90e      	bls.n	1004377e <hci_le_read_local_p256_public_key_process+0x28>
	*status = hci_le_read_local_p256_public_key();
10043760:	f7fe fa1e 	bl	10041ba0 <hci_le_read_local_p256_public_key>
	buffer_out[0] = 0x04;
10043764:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043766:	220f      	movs	r2, #15
	*status = hci_le_read_local_p256_public_key();
10043768:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0x20;
1004376a:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
1004376c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004376e:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10043770:	3b03      	subs	r3, #3
10043772:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x25;
10043774:	3324      	adds	r3, #36	; 0x24
10043776:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0x20;
10043778:	3b05      	subs	r3, #5
	buffer_out[1] = 0x0F;
1004377a:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0x20;
1004377c:	71a3      	strb	r3, [r4, #6]
}
1004377e:	bd10      	pop	{r4, pc}

10043780 <hci_le_generate_dhkey_process>:
uint16_t hci_le_generate_dhkey_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043780:	b510      	push	{r4, lr}
10043782:	0014      	movs	r4, r2
		return 0;
10043784:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043786:	2b06      	cmp	r3, #6
10043788:	d90f      	bls.n	100437aa <hci_le_generate_dhkey_process+0x2a>
	*status = hci_le_generate_dhkey(cp0->Remote_P256_Public_Key /* 64 */);
1004378a:	3001      	adds	r0, #1
1004378c:	f7fe fa0c 	bl	10041ba8 <hci_le_generate_dhkey>
	buffer_out[0] = 0x04;
10043790:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043792:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10043794:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043796:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10043798:	3b03      	subs	r3, #3
1004379a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x26;
1004379c:	3325      	adds	r3, #37	; 0x25
1004379e:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0x20;
100437a0:	3b06      	subs	r3, #6
	buffer_out[1] = 0x0F;
100437a2:	7062      	strb	r2, [r4, #1]
	*status = hci_le_generate_dhkey(cp0->Remote_P256_Public_Key /* 64 */);
100437a4:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0x20;
100437a6:	71a3      	strb	r3, [r4, #6]
100437a8:	3a08      	subs	r2, #8
}
100437aa:	0010      	movs	r0, r2
100437ac:	bd10      	pop	{r4, pc}

100437ae <hci_le_add_device_to_resolving_list_process>:
uint16_t hci_le_add_device_to_resolving_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100437ae:	b510      	push	{r4, lr}
100437b0:	0014      	movs	r4, r2
		return 0;
100437b2:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100437b4:	2b06      	cmp	r3, #6
100437b6:	d914      	bls.n	100437e2 <hci_le_add_device_to_resolving_list_process+0x34>
	*status = hci_le_add_device_to_resolving_list(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */, cp0->Peer_IRK /* 16 */, cp0->Local_IRK /* 16 */);
100437b8:	0003      	movs	r3, r0
100437ba:	0002      	movs	r2, r0
100437bc:	3318      	adds	r3, #24
100437be:	3208      	adds	r2, #8
100437c0:	1c81      	adds	r1, r0, #2
100437c2:	7840      	ldrb	r0, [r0, #1]
100437c4:	f7fe f83c 	bl	10041840 <hci_le_add_device_to_resolving_list>
	buffer_out[0] = 0x04;
100437c8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100437ca:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100437cc:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100437ce:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100437d0:	3b03      	subs	r3, #3
100437d2:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x27;
100437d4:	3326      	adds	r3, #38	; 0x26
100437d6:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100437d8:	3b07      	subs	r3, #7
	buffer_out[1] = 0x0E;
100437da:	7062      	strb	r2, [r4, #1]
	*status = hci_le_add_device_to_resolving_list(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */, cp0->Peer_IRK /* 16 */, cp0->Local_IRK /* 16 */);
100437dc:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100437de:	7163      	strb	r3, [r4, #5]
100437e0:	3a07      	subs	r2, #7
}
100437e2:	0010      	movs	r0, r2
100437e4:	bd10      	pop	{r4, pc}

100437e6 <hci_le_remove_device_from_resolving_list_process>:
uint16_t hci_le_remove_device_from_resolving_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100437e6:	b510      	push	{r4, lr}
100437e8:	0014      	movs	r4, r2
		return 0;
100437ea:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100437ec:	2b06      	cmp	r3, #6
100437ee:	d910      	bls.n	10043812 <hci_le_remove_device_from_resolving_list_process+0x2c>
	*status = hci_le_remove_device_from_resolving_list(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */);
100437f0:	1c81      	adds	r1, r0, #2
100437f2:	7840      	ldrb	r0, [r0, #1]
100437f4:	f7fe f820 	bl	10041838 <hci_le_remove_device_from_resolving_list>
	buffer_out[0] = 0x04;
100437f8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100437fa:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100437fc:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100437fe:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043800:	3b03      	subs	r3, #3
10043802:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x28;
10043804:	3327      	adds	r3, #39	; 0x27
10043806:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043808:	3b08      	subs	r3, #8
	buffer_out[1] = 0x0E;
1004380a:	7062      	strb	r2, [r4, #1]
	*status = hci_le_remove_device_from_resolving_list(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */);
1004380c:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004380e:	7163      	strb	r3, [r4, #5]
10043810:	3a07      	subs	r2, #7
}
10043812:	0010      	movs	r0, r2
10043814:	bd10      	pop	{r4, pc}

10043816 <hci_le_clear_resolving_list_process>:
uint16_t hci_le_clear_resolving_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043816:	b510      	push	{r4, lr}
		return 0;
10043818:	2000      	movs	r0, #0
uint16_t hci_le_clear_resolving_list_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004381a:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
1004381c:	2b06      	cmp	r3, #6
1004381e:	d90e      	bls.n	1004383e <hci_le_clear_resolving_list_process+0x28>
	*status = hci_le_clear_resolving_list();
10043820:	f7fe f826 	bl	10041870 <hci_le_clear_resolving_list>
	buffer_out[0] = 0x04;
10043824:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043826:	220e      	movs	r2, #14
	*status = hci_le_clear_resolving_list();
10043828:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
1004382a:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
1004382c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004382e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043830:	3b03      	subs	r3, #3
10043832:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x29;
10043834:	3328      	adds	r3, #40	; 0x28
10043836:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043838:	3b09      	subs	r3, #9
	buffer_out[1] = 0x0E;
1004383a:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0x20;
1004383c:	7163      	strb	r3, [r4, #5]
}
1004383e:	bd10      	pop	{r4, pc}

10043840 <hci_le_read_peer_resolvable_address_process>:
uint16_t hci_le_read_peer_resolvable_address_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043840:	b513      	push	{r0, r1, r4, lr}
10043842:	0014      	movs	r4, r2
		return 0;
10043844:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6 + 6)) {
10043846:	2b0c      	cmp	r3, #12
10043848:	d917      	bls.n	1004387a <hci_le_read_peer_resolvable_address_process+0x3a>
	rp0->Status = hci_le_read_peer_resolvable_address(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */, Peer_Resolvable_Address);
1004384a:	1c81      	adds	r1, r0, #2
1004384c:	466a      	mov	r2, sp
1004384e:	7840      	ldrb	r0, [r0, #1]
10043850:	f7fe f802 	bl	10041858 <hci_le_read_peer_resolvable_address>
	Osal_MemCpy((void *) rp0->Peer_Resolvable_Address, (const void *) Peer_Resolvable_Address, 6);
10043854:	2206      	movs	r2, #6
	rp0->Status = hci_le_read_peer_resolvable_address(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */, Peer_Resolvable_Address);
10043856:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Peer_Resolvable_Address, (const void *) Peer_Resolvable_Address, 6);
10043858:	4669      	mov	r1, sp
1004385a:	1de0      	adds	r0, r4, #7
1004385c:	f7fc ff91 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10043860:	2304      	movs	r3, #4
10043862:	220d      	movs	r2, #13
10043864:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043866:	330a      	adds	r3, #10
10043868:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004386a:	3b04      	subs	r3, #4
1004386c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004386e:	3b09      	subs	r3, #9
10043870:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2b;
10043872:	332a      	adds	r3, #42	; 0x2a
10043874:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043876:	3b0b      	subs	r3, #11
10043878:	7163      	strb	r3, [r4, #5]
}
1004387a:	0010      	movs	r0, r2
1004387c:	bd16      	pop	{r1, r2, r4, pc}

1004387e <hci_le_read_local_resolvable_address_process>:
uint16_t hci_le_read_local_resolvable_address_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004387e:	b513      	push	{r0, r1, r4, lr}
10043880:	0014      	movs	r4, r2
		return 0;
10043882:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6 + 6)) {
10043884:	2b0c      	cmp	r3, #12
10043886:	d917      	bls.n	100438b8 <hci_le_read_local_resolvable_address_process+0x3a>
	rp0->Status = hci_le_read_local_resolvable_address(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */, Local_Resolvable_Address);
10043888:	1c81      	adds	r1, r0, #2
1004388a:	466a      	mov	r2, sp
1004388c:	7840      	ldrb	r0, [r0, #1]
1004388e:	f7fd ffe7 	bl	10041860 <hci_le_read_local_resolvable_address>
	Osal_MemCpy((void *) rp0->Local_Resolvable_Address, (const void *) Local_Resolvable_Address, 6);
10043892:	2206      	movs	r2, #6
	rp0->Status = hci_le_read_local_resolvable_address(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */, Local_Resolvable_Address);
10043894:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Local_Resolvable_Address, (const void *) Local_Resolvable_Address, 6);
10043896:	4669      	mov	r1, sp
10043898:	1de0      	adds	r0, r4, #7
1004389a:	f7fc ff72 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004389e:	2304      	movs	r3, #4
100438a0:	220d      	movs	r2, #13
100438a2:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100438a4:	330a      	adds	r3, #10
100438a6:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100438a8:	3b04      	subs	r3, #4
100438aa:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100438ac:	3b09      	subs	r3, #9
100438ae:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2c;
100438b0:	332b      	adds	r3, #43	; 0x2b
100438b2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100438b4:	3b0c      	subs	r3, #12
100438b6:	7163      	strb	r3, [r4, #5]
}
100438b8:	0010      	movs	r0, r2
100438ba:	bd16      	pop	{r1, r2, r4, pc}

100438bc <hci_le_set_address_resolution_enable_process>:
uint16_t hci_le_set_address_resolution_enable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100438bc:	b510      	push	{r4, lr}
100438be:	0014      	movs	r4, r2
		return 0;
100438c0:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100438c2:	2b06      	cmp	r3, #6
100438c4:	d90f      	bls.n	100438e6 <hci_le_set_address_resolution_enable_process+0x2a>
	*status = hci_le_set_address_resolution_enable(cp0->Address_Resolution_Enable /* 1 */);
100438c6:	7840      	ldrb	r0, [r0, #1]
100438c8:	f7fd ffc2 	bl	10041850 <hci_le_set_address_resolution_enable>
	buffer_out[0] = 0x04;
100438cc:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100438ce:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100438d0:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100438d2:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100438d4:	3b03      	subs	r3, #3
100438d6:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2d;
100438d8:	332c      	adds	r3, #44	; 0x2c
100438da:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
100438dc:	3b0d      	subs	r3, #13
	buffer_out[1] = 0x0E;
100438de:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_address_resolution_enable(cp0->Address_Resolution_Enable /* 1 */);
100438e0:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
100438e2:	7163      	strb	r3, [r4, #5]
100438e4:	3a07      	subs	r2, #7
}
100438e6:	0010      	movs	r0, r2
100438e8:	bd10      	pop	{r4, pc}

100438ea <hci_le_set_resolvable_private_address_timeout_process>:
uint16_t hci_le_set_resolvable_private_address_timeout_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100438ea:	b510      	push	{r4, lr}
100438ec:	0014      	movs	r4, r2
		return 0;
100438ee:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100438f0:	2b06      	cmp	r3, #6
100438f2:	d912      	bls.n	1004391a <hci_le_set_resolvable_private_address_timeout_process+0x30>
	*status = hci_le_set_resolvable_private_address_timeout(cp0->RPA_Timeout /* 2 */);
100438f4:	7843      	ldrb	r3, [r0, #1]
100438f6:	7880      	ldrb	r0, [r0, #2]
100438f8:	0200      	lsls	r0, r0, #8
100438fa:	4318      	orrs	r0, r3
100438fc:	f7fd ffa4 	bl	10041848 <hci_le_set_resolvable_private_address_timeout>
	buffer_out[0] = 0x04;
10043900:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043902:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043904:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043906:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043908:	3b03      	subs	r3, #3
1004390a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2e;
1004390c:	332d      	adds	r3, #45	; 0x2d
1004390e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10043910:	3b0e      	subs	r3, #14
	buffer_out[1] = 0x0E;
10043912:	7062      	strb	r2, [r4, #1]
	*status = hci_le_set_resolvable_private_address_timeout(cp0->RPA_Timeout /* 2 */);
10043914:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0x20;
10043916:	7163      	strb	r3, [r4, #5]
10043918:	3a07      	subs	r2, #7
}
1004391a:	0010      	movs	r0, r2
1004391c:	bd10      	pop	{r4, pc}

1004391e <aci_hal_write_config_data_process>:
uint16_t aci_hal_write_config_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004391e:	b510      	push	{r4, lr}
10043920:	0014      	movs	r4, r2
		return 0;
10043922:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043924:	2b06      	cmp	r3, #6
10043926:	d911      	bls.n	1004394c <aci_hal_write_config_data_process+0x2e>
	*status = aci_hal_write_config_data(cp0->Offset /* 1 */, cp0->Length /* 1 */, cp0->Value /* cp0->Length * (sizeof(uint8_t)) */);
10043928:	1cc2      	adds	r2, r0, #3
1004392a:	7881      	ldrb	r1, [r0, #2]
1004392c:	7840      	ldrb	r0, [r0, #1]
1004392e:	f003 fceb 	bl	10047308 <aci_hal_write_config_data>
	buffer_out[0] = 0x04;
10043932:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043934:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043936:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043938:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004393a:	3b03      	subs	r3, #3
1004393c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0c;
1004393e:	330b      	adds	r3, #11
10043940:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043942:	33f0      	adds	r3, #240	; 0xf0
	buffer_out[1] = 0x0E;
10043944:	7062      	strb	r2, [r4, #1]
	*status = aci_hal_write_config_data(cp0->Offset /* 1 */, cp0->Length /* 1 */, cp0->Value /* cp0->Length * (sizeof(uint8_t)) */);
10043946:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043948:	7163      	strb	r3, [r4, #5]
1004394a:	3a07      	subs	r2, #7
}
1004394c:	0010      	movs	r0, r2
1004394e:	bd10      	pop	{r4, pc}

10043950 <aci_hal_set_tx_power_level_process>:
uint16_t aci_hal_set_tx_power_level_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043950:	b510      	push	{r4, lr}
10043952:	0014      	movs	r4, r2
		return 0;
10043954:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043956:	2b06      	cmp	r3, #6
10043958:	d910      	bls.n	1004397c <aci_hal_set_tx_power_level_process+0x2c>
	*status = aci_hal_set_tx_power_level(cp0->En_High_Power /* 1 */, cp0->PA_Level /* 1 */);
1004395a:	7881      	ldrb	r1, [r0, #2]
1004395c:	7840      	ldrb	r0, [r0, #1]
1004395e:	f003 fc3d 	bl	100471dc <aci_hal_set_tx_power_level>
	buffer_out[0] = 0x04;
10043962:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043964:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043966:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043968:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004396a:	3b03      	subs	r3, #3
1004396c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0f;
1004396e:	189b      	adds	r3, r3, r2
10043970:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043972:	33ed      	adds	r3, #237	; 0xed
	buffer_out[1] = 0x0E;
10043974:	7062      	strb	r2, [r4, #1]
	*status = aci_hal_set_tx_power_level(cp0->En_High_Power /* 1 */, cp0->PA_Level /* 1 */);
10043976:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043978:	7163      	strb	r3, [r4, #5]
1004397a:	3a07      	subs	r2, #7
}
1004397c:	0010      	movs	r0, r2
1004397e:	bd10      	pop	{r4, pc}

10043980 <aci_hal_tone_start_process>:
uint16_t aci_hal_tone_start_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043980:	b510      	push	{r4, lr}
10043982:	0014      	movs	r4, r2
		return 0;
10043984:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043986:	2b06      	cmp	r3, #6
10043988:	d910      	bls.n	100439ac <aci_hal_tone_start_process+0x2c>
	*status = aci_hal_tone_start(cp0->RF_Channel /* 1 */, cp0->Offset /* 1 */);
1004398a:	7881      	ldrb	r1, [r0, #2]
1004398c:	7840      	ldrb	r0, [r0, #1]
1004398e:	f003 fc29 	bl	100471e4 <aci_hal_tone_start>
	buffer_out[0] = 0x04;
10043992:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043994:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043996:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043998:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004399a:	3b03      	subs	r3, #3
1004399c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x15;
1004399e:	3314      	adds	r3, #20
100439a0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100439a2:	33e7      	adds	r3, #231	; 0xe7
	buffer_out[1] = 0x0E;
100439a4:	7062      	strb	r2, [r4, #1]
	*status = aci_hal_tone_start(cp0->RF_Channel /* 1 */, cp0->Offset /* 1 */);
100439a6:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
100439a8:	7163      	strb	r3, [r4, #5]
100439aa:	3a07      	subs	r2, #7
}
100439ac:	0010      	movs	r0, r2
100439ae:	bd10      	pop	{r4, pc}

100439b0 <aci_hal_tone_stop_process>:
uint16_t aci_hal_tone_stop_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100439b0:	b510      	push	{r4, lr}
		return 0;
100439b2:	2000      	movs	r0, #0
uint16_t aci_hal_tone_stop_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100439b4:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
100439b6:	2b06      	cmp	r3, #6
100439b8:	d90e      	bls.n	100439d8 <aci_hal_tone_stop_process+0x28>
	*status = aci_hal_tone_stop();
100439ba:	f003 fc83 	bl	100472c4 <aci_hal_tone_stop>
	buffer_out[0] = 0x04;
100439be:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100439c0:	220e      	movs	r2, #14
	*status = aci_hal_tone_stop();
100439c2:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
100439c4:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
100439c6:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100439c8:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100439ca:	3b03      	subs	r3, #3
100439cc:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x16;
100439ce:	3315      	adds	r3, #21
100439d0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100439d2:	33e6      	adds	r3, #230	; 0xe6
	buffer_out[1] = 0x0E;
100439d4:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
100439d6:	7163      	strb	r3, [r4, #5]
}
100439d8:	bd10      	pop	{r4, pc}

100439da <aci_hal_get_link_status_process>:
uint16_t aci_hal_get_link_status_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100439da:	b510      	push	{r4, lr}
		return 0;
100439dc:	2000      	movs	r0, #0
uint16_t aci_hal_get_link_status_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100439de:	b086      	sub	sp, #24
100439e0:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 8 + 16 + 6)) {
100439e2:	2b1e      	cmp	r3, #30
100439e4:	d91c      	bls.n	10043a20 <aci_hal_get_link_status_process+0x46>
	rp0->Status = aci_hal_get_link_status(Link_Status, Link_Connection_Handle);
100439e6:	a902      	add	r1, sp, #8
100439e8:	4668      	mov	r0, sp
100439ea:	f00f fbb9 	bl	10053160 <aci_hal_get_link_status>
	Osal_MemCpy((void *) rp0->Link_Status, (const void *) Link_Status, 8);
100439ee:	2208      	movs	r2, #8
	rp0->Status = aci_hal_get_link_status(Link_Status, Link_Connection_Handle);
100439f0:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Link_Status, (const void *) Link_Status, 8);
100439f2:	4669      	mov	r1, sp
100439f4:	1de0      	adds	r0, r4, #7
100439f6:	f7fc fec4 	bl	10040782 <Osal_MemCpy>
	Osal_MemCpy((void *) rp0->Link_Connection_Handle, (const void *) Link_Connection_Handle, 16);
100439fa:	0020      	movs	r0, r4
100439fc:	2210      	movs	r2, #16
100439fe:	300f      	adds	r0, #15
10043a00:	a902      	add	r1, sp, #8
10043a02:	f7fc febe 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10043a06:	2304      	movs	r3, #4
10043a08:	201f      	movs	r0, #31
10043a0a:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
10043a0c:	330a      	adds	r3, #10
10043a0e:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
10043a10:	330e      	adds	r3, #14
10043a12:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043a14:	3b1b      	subs	r3, #27
10043a16:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x17;
10043a18:	3316      	adds	r3, #22
10043a1a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043a1c:	33e5      	adds	r3, #229	; 0xe5
10043a1e:	7163      	strb	r3, [r4, #5]
}
10043a20:	b006      	add	sp, #24
10043a22:	bd10      	pop	{r4, pc}

10043a24 <aci_hal_set_radio_activity_mask_process>:
uint16_t aci_hal_set_radio_activity_mask_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043a24:	b510      	push	{r4, lr}
10043a26:	0014      	movs	r4, r2
		return 0;
10043a28:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043a2a:	2b06      	cmp	r3, #6
10043a2c:	d912      	bls.n	10043a54 <aci_hal_set_radio_activity_mask_process+0x30>
	*status = aci_hal_set_radio_activity_mask(cp0->Radio_Activity_Mask /* 2 */);
10043a2e:	7843      	ldrb	r3, [r0, #1]
10043a30:	7880      	ldrb	r0, [r0, #2]
10043a32:	0200      	lsls	r0, r0, #8
10043a34:	4318      	orrs	r0, r3
10043a36:	f008 ff8f 	bl	1004c958 <aci_hal_set_radio_activity_mask>
	buffer_out[0] = 0x04;
10043a3a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043a3c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043a3e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043a40:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043a42:	3b03      	subs	r3, #3
10043a44:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x18;
10043a46:	3317      	adds	r3, #23
10043a48:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043a4a:	33e4      	adds	r3, #228	; 0xe4
	buffer_out[1] = 0x0E;
10043a4c:	7062      	strb	r2, [r4, #1]
	*status = aci_hal_set_radio_activity_mask(cp0->Radio_Activity_Mask /* 2 */);
10043a4e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043a50:	7163      	strb	r3, [r4, #5]
10043a52:	3a07      	subs	r2, #7
}
10043a54:	0010      	movs	r0, r2
10043a56:	bd10      	pop	{r4, pc}

10043a58 <aci_hal_set_event_mask_process>:
uint16_t aci_hal_set_event_mask_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043a58:	b510      	push	{r4, lr}
10043a5a:	0014      	movs	r4, r2
		return 0;
10043a5c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043a5e:	2b06      	cmp	r3, #6
10043a60:	d919      	bls.n	10043a96 <aci_hal_set_event_mask_process+0x3e>
	*status = aci_hal_set_event_mask(cp0->Event_Mask /* 4 */);
10043a62:	1c42      	adds	r2, r0, #1
10043a64:	7853      	ldrb	r3, [r2, #1]
10043a66:	7840      	ldrb	r0, [r0, #1]
10043a68:	021b      	lsls	r3, r3, #8
10043a6a:	4303      	orrs	r3, r0
10043a6c:	7890      	ldrb	r0, [r2, #2]
10043a6e:	0400      	lsls	r0, r0, #16
10043a70:	4303      	orrs	r3, r0
10043a72:	78d0      	ldrb	r0, [r2, #3]
10043a74:	0600      	lsls	r0, r0, #24
10043a76:	4318      	orrs	r0, r3
10043a78:	f003 fba0 	bl	100471bc <aci_hal_set_event_mask>
	buffer_out[0] = 0x04;
10043a7c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043a7e:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043a80:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043a82:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043a84:	3b03      	subs	r3, #3
10043a86:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x1a;
10043a88:	3319      	adds	r3, #25
10043a8a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043a8c:	33e2      	adds	r3, #226	; 0xe2
	buffer_out[1] = 0x0E;
10043a8e:	7062      	strb	r2, [r4, #1]
	*status = aci_hal_set_event_mask(cp0->Event_Mask /* 4 */);
10043a90:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043a92:	7163      	strb	r3, [r4, #5]
10043a94:	3a07      	subs	r2, #7
}
10043a96:	0010      	movs	r0, r2
10043a98:	bd10      	pop	{r4, pc}

10043a9a <aci_hal_updater_start_process>:
uint16_t aci_hal_updater_start_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043a9a:	b510      	push	{r4, lr}
		return 0;
10043a9c:	2000      	movs	r0, #0
uint16_t aci_hal_updater_start_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043a9e:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10043aa0:	2b06      	cmp	r3, #6
10043aa2:	d90e      	bls.n	10043ac2 <aci_hal_updater_start_process+0x28>
	*status = aci_hal_updater_start();
10043aa4:	f002 fa74 	bl	10045f90 <aci_hal_updater_start>
	buffer_out[0] = 0x04;
10043aa8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043aaa:	220e      	movs	r2, #14
	*status = aci_hal_updater_start();
10043aac:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043aae:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10043ab0:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043ab2:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043ab4:	3b03      	subs	r3, #3
10043ab6:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x20;
10043ab8:	331f      	adds	r3, #31
10043aba:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043abc:	33dc      	adds	r3, #220	; 0xdc
	buffer_out[1] = 0x0E;
10043abe:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
10043ac0:	7163      	strb	r3, [r4, #5]
}
10043ac2:	bd10      	pop	{r4, pc}

10043ac4 <aci_hal_transmitter_test_packets_process>:
uint16_t aci_hal_transmitter_test_packets_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043ac4:	b510      	push	{r4, lr}
10043ac6:	0014      	movs	r4, r2
		return 0;
10043ac8:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043aca:	2b06      	cmp	r3, #6
10043acc:	d915      	bls.n	10043afa <aci_hal_transmitter_test_packets_process+0x36>
	*status = aci_hal_transmitter_test_packets(cp0->TX_Frequency /* 1 */, cp0->Length_Of_Test_Data /* 1 */, cp0->Packet_Payload /* 1 */, cp0->Number_Of_Packets /* 2 */);
10043ace:	7943      	ldrb	r3, [r0, #5]
10043ad0:	7902      	ldrb	r2, [r0, #4]
10043ad2:	021b      	lsls	r3, r3, #8
10043ad4:	4313      	orrs	r3, r2
10043ad6:	7881      	ldrb	r1, [r0, #2]
10043ad8:	78c2      	ldrb	r2, [r0, #3]
10043ada:	7840      	ldrb	r0, [r0, #1]
10043adc:	f002 faa8 	bl	10046030 <aci_hal_transmitter_test_packets>
	buffer_out[0] = 0x04;
10043ae0:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043ae2:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043ae4:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043ae6:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043ae8:	3b03      	subs	r3, #3
10043aea:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2b;
10043aec:	332a      	adds	r3, #42	; 0x2a
10043aee:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043af0:	33d1      	adds	r3, #209	; 0xd1
	buffer_out[1] = 0x0E;
10043af2:	7062      	strb	r2, [r4, #1]
	*status = aci_hal_transmitter_test_packets(cp0->TX_Frequency /* 1 */, cp0->Length_Of_Test_Data /* 1 */, cp0->Packet_Payload /* 1 */, cp0->Number_Of_Packets /* 2 */);
10043af4:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043af6:	7163      	strb	r3, [r4, #5]
10043af8:	3a07      	subs	r2, #7
}
10043afa:	0010      	movs	r0, r2
10043afc:	bd10      	pop	{r4, pc}

10043afe <aci_gap_set_non_discoverable_process>:
uint16_t aci_gap_set_non_discoverable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043afe:	b510      	push	{r4, lr}
		return 0;
10043b00:	2000      	movs	r0, #0
uint16_t aci_gap_set_non_discoverable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043b02:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10043b04:	2b06      	cmp	r3, #6
10043b06:	d90e      	bls.n	10043b26 <aci_gap_set_non_discoverable_process+0x28>
	*status = aci_gap_set_non_discoverable();
10043b08:	f003 f84b 	bl	10046ba2 <aci_gap_set_non_discoverable>
	buffer_out[0] = 0x04;
10043b0c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043b0e:	220e      	movs	r2, #14
	*status = aci_gap_set_non_discoverable();
10043b10:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043b12:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10043b14:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043b16:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043b18:	3b03      	subs	r3, #3
10043b1a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x81;
10043b1c:	3380      	adds	r3, #128	; 0x80
10043b1e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043b20:	337b      	adds	r3, #123	; 0x7b
	buffer_out[1] = 0x0E;
10043b22:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
10043b24:	7163      	strb	r3, [r4, #5]
}
10043b26:	bd10      	pop	{r4, pc}

10043b28 <aci_gap_set_direct_connectable_process>:
uint16_t aci_gap_set_direct_connectable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043b28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10043b2a:	0014      	movs	r4, r2
		return 0;
10043b2c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043b2e:	2b06      	cmp	r3, #6
10043b30:	d91d      	bls.n	10043b6e <aci_gap_set_direct_connectable_process+0x46>
	*status = aci_gap_set_direct_connectable(cp0->Own_Address_Type /* 1 */, cp0->Directed_Advertising_Type /* 1 */, cp0->Direct_Address_Type /* 1 */, cp0->Direct_Address /* 6 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */);
10043b32:	1c45      	adds	r5, r0, #1
10043b34:	7b2e      	ldrb	r6, [r5, #12]
10043b36:	7aef      	ldrb	r7, [r5, #11]
10043b38:	0236      	lsls	r6, r6, #8
10043b3a:	433e      	orrs	r6, r7
10043b3c:	78c2      	ldrb	r2, [r0, #3]
10043b3e:	7881      	ldrb	r1, [r0, #2]
10043b40:	1d03      	adds	r3, r0, #4
10043b42:	7840      	ldrb	r0, [r0, #1]
10043b44:	9601      	str	r6, [sp, #4]
10043b46:	7a6e      	ldrb	r6, [r5, #9]
10043b48:	7aad      	ldrb	r5, [r5, #10]
10043b4a:	022d      	lsls	r5, r5, #8
10043b4c:	4335      	orrs	r5, r6
10043b4e:	9500      	str	r5, [sp, #0]
10043b50:	f002 ffb0 	bl	10046ab4 <aci_gap_set_direct_connectable>
	buffer_out[0] = 0x04;
10043b54:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043b56:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043b58:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043b5a:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043b5c:	3b03      	subs	r3, #3
10043b5e:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x84;
10043b60:	3383      	adds	r3, #131	; 0x83
10043b62:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043b64:	3378      	adds	r3, #120	; 0x78
	buffer_out[1] = 0x0E;
10043b66:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_set_direct_connectable(cp0->Own_Address_Type /* 1 */, cp0->Directed_Advertising_Type /* 1 */, cp0->Direct_Address_Type /* 1 */, cp0->Direct_Address /* 6 */, cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */);
10043b68:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043b6a:	7163      	strb	r3, [r4, #5]
10043b6c:	3a07      	subs	r2, #7
}
10043b6e:	0010      	movs	r0, r2
10043b70:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10043b72 <aci_gap_set_io_capability_process>:
uint16_t aci_gap_set_io_capability_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043b72:	b510      	push	{r4, lr}
10043b74:	0014      	movs	r4, r2
		return 0;
10043b76:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043b78:	2b06      	cmp	r3, #6
10043b7a:	d90f      	bls.n	10043b9c <aci_gap_set_io_capability_process+0x2a>
	*status = aci_gap_set_io_capability(cp0->IO_Capability /* 1 */);
10043b7c:	7840      	ldrb	r0, [r0, #1]
10043b7e:	f002 ffdd 	bl	10046b3c <aci_gap_set_io_capability>
	buffer_out[0] = 0x04;
10043b82:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043b84:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043b86:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043b88:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043b8a:	3b03      	subs	r3, #3
10043b8c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x85;
10043b8e:	3384      	adds	r3, #132	; 0x84
10043b90:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043b92:	3377      	adds	r3, #119	; 0x77
	buffer_out[1] = 0x0E;
10043b94:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_set_io_capability(cp0->IO_Capability /* 1 */);
10043b96:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043b98:	7163      	strb	r3, [r4, #5]
10043b9a:	3a07      	subs	r2, #7
}
10043b9c:	0010      	movs	r0, r2
10043b9e:	bd10      	pop	{r4, pc}

10043ba0 <aci_gap_set_authentication_requirement_process>:
uint16_t aci_gap_set_authentication_requirement_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
10043ba2:	0015      	movs	r5, r2
10043ba4:	b087      	sub	sp, #28
		return 0;
10043ba6:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043ba8:	2b06      	cmp	r3, #6
10043baa:	d926      	bls.n	10043bfa <aci_gap_set_authentication_requirement_process+0x5a>
	*status = aci_gap_set_authentication_requirement(cp0->Bonding_Mode /* 1 */, cp0->MITM_Mode /* 1 */, cp0->SC_Support /* 1 */, cp0->KeyPress_Notification_Support /* 1 */, cp0->Min_Encryption_Key_Size /* 1 */, cp0->Max_Encryption_Key_Size /* 1 */, cp0->Use_Fixed_Pin /* 1 */, cp0->Fixed_Pin /* 4 */, cp0->Identity_Address_Type /* 1 */);
10043bac:	1c44      	adds	r4, r0, #1
10043bae:	7ae6      	ldrb	r6, [r4, #11]
10043bb0:	7903      	ldrb	r3, [r0, #4]
10043bb2:	78c2      	ldrb	r2, [r0, #3]
10043bb4:	7881      	ldrb	r1, [r0, #2]
10043bb6:	7840      	ldrb	r0, [r0, #1]
10043bb8:	9604      	str	r6, [sp, #16]
10043bba:	7a27      	ldrb	r7, [r4, #8]
10043bbc:	79e6      	ldrb	r6, [r4, #7]
10043bbe:	023f      	lsls	r7, r7, #8
10043bc0:	4337      	orrs	r7, r6
10043bc2:	7a66      	ldrb	r6, [r4, #9]
10043bc4:	0436      	lsls	r6, r6, #16
10043bc6:	4337      	orrs	r7, r6
10043bc8:	7aa6      	ldrb	r6, [r4, #10]
10043bca:	0636      	lsls	r6, r6, #24
10043bcc:	433e      	orrs	r6, r7
10043bce:	9603      	str	r6, [sp, #12]
10043bd0:	79a6      	ldrb	r6, [r4, #6]
10043bd2:	9602      	str	r6, [sp, #8]
10043bd4:	7966      	ldrb	r6, [r4, #5]
10043bd6:	9601      	str	r6, [sp, #4]
10043bd8:	7924      	ldrb	r4, [r4, #4]
10043bda:	9400      	str	r4, [sp, #0]
10043bdc:	f002 fef6 	bl	100469cc <aci_gap_set_authentication_requirement>
	buffer_out[0] = 0x04;
10043be0:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043be2:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043be4:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10043be6:	70ab      	strb	r3, [r5, #2]
	buffer_out[3] = 0x01;
10043be8:	3b03      	subs	r3, #3
10043bea:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x86;
10043bec:	3385      	adds	r3, #133	; 0x85
10043bee:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0xfc;
10043bf0:	3376      	adds	r3, #118	; 0x76
	buffer_out[1] = 0x0E;
10043bf2:	706a      	strb	r2, [r5, #1]
	*status = aci_gap_set_authentication_requirement(cp0->Bonding_Mode /* 1 */, cp0->MITM_Mode /* 1 */, cp0->SC_Support /* 1 */, cp0->KeyPress_Notification_Support /* 1 */, cp0->Min_Encryption_Key_Size /* 1 */, cp0->Max_Encryption_Key_Size /* 1 */, cp0->Use_Fixed_Pin /* 1 */, cp0->Fixed_Pin /* 4 */, cp0->Identity_Address_Type /* 1 */);
10043bf4:	71a8      	strb	r0, [r5, #6]
	buffer_out[5] = 0xfc;
10043bf6:	716b      	strb	r3, [r5, #5]
10043bf8:	3a07      	subs	r2, #7
}
10043bfa:	0010      	movs	r0, r2
10043bfc:	b007      	add	sp, #28
10043bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}

10043c00 <aci_gap_set_authorization_requirement_process>:
uint16_t aci_gap_set_authorization_requirement_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043c00:	b510      	push	{r4, lr}
10043c02:	0014      	movs	r4, r2
		return 0;
10043c04:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043c06:	2b06      	cmp	r3, #6
10043c08:	d913      	bls.n	10043c32 <aci_gap_set_authorization_requirement_process+0x32>
	*status = aci_gap_set_authorization_requirement(cp0->Connection_Handle /* 2 */, cp0->Authorization_Enable /* 1 */);
10043c0a:	7842      	ldrb	r2, [r0, #1]
10043c0c:	78c1      	ldrb	r1, [r0, #3]
10043c0e:	7880      	ldrb	r0, [r0, #2]
10043c10:	0200      	lsls	r0, r0, #8
10043c12:	4310      	orrs	r0, r2
10043c14:	f002 ff24 	bl	10046a60 <aci_gap_set_authorization_requirement>
	buffer_out[0] = 0x04;
10043c18:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043c1a:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043c1c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043c1e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043c20:	3b03      	subs	r3, #3
10043c22:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x87;
10043c24:	3386      	adds	r3, #134	; 0x86
10043c26:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043c28:	3375      	adds	r3, #117	; 0x75
	buffer_out[1] = 0x0E;
10043c2a:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_set_authorization_requirement(cp0->Connection_Handle /* 2 */, cp0->Authorization_Enable /* 1 */);
10043c2c:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043c2e:	7163      	strb	r3, [r4, #5]
10043c30:	3a07      	subs	r2, #7
}
10043c32:	0010      	movs	r0, r2
10043c34:	bd10      	pop	{r4, pc}

10043c36 <aci_gap_pass_key_resp_process>:
uint16_t aci_gap_pass_key_resp_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043c36:	b510      	push	{r4, lr}
10043c38:	0014      	movs	r4, r2
		return 0;
10043c3a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043c3c:	2b06      	cmp	r3, #6
10043c3e:	d91c      	bls.n	10043c7a <aci_gap_pass_key_resp_process+0x44>
	*status = aci_gap_pass_key_resp(cp0->Connection_Handle /* 2 */, cp0->Pass_Key /* 4 */);
10043c40:	7902      	ldrb	r2, [r0, #4]
10043c42:	78c1      	ldrb	r1, [r0, #3]
10043c44:	0212      	lsls	r2, r2, #8
10043c46:	430a      	orrs	r2, r1
10043c48:	7941      	ldrb	r1, [r0, #5]
10043c4a:	0409      	lsls	r1, r1, #16
10043c4c:	430a      	orrs	r2, r1
10043c4e:	7981      	ldrb	r1, [r0, #6]
10043c50:	0609      	lsls	r1, r1, #24
10043c52:	4311      	orrs	r1, r2
10043c54:	7842      	ldrb	r2, [r0, #1]
10043c56:	7880      	ldrb	r0, [r0, #2]
10043c58:	0200      	lsls	r0, r0, #8
10043c5a:	4310      	orrs	r0, r2
10043c5c:	f002 fe8e 	bl	1004697c <aci_gap_pass_key_resp>
	buffer_out[0] = 0x04;
10043c60:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043c62:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043c64:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043c66:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043c68:	3b03      	subs	r3, #3
10043c6a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x88;
10043c6c:	3387      	adds	r3, #135	; 0x87
10043c6e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043c70:	3374      	adds	r3, #116	; 0x74
	buffer_out[1] = 0x0E;
10043c72:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_pass_key_resp(cp0->Connection_Handle /* 2 */, cp0->Pass_Key /* 4 */);
10043c74:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043c76:	7163      	strb	r3, [r4, #5]
10043c78:	3a07      	subs	r2, #7
}
10043c7a:	0010      	movs	r0, r2
10043c7c:	bd10      	pop	{r4, pc}

10043c7e <aci_gap_authorization_resp_process>:
uint16_t aci_gap_authorization_resp_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043c7e:	b510      	push	{r4, lr}
10043c80:	0014      	movs	r4, r2
		return 0;
10043c82:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043c84:	2b06      	cmp	r3, #6
10043c86:	d913      	bls.n	10043cb0 <aci_gap_authorization_resp_process+0x32>
	*status = aci_gap_authorization_resp(cp0->Connection_Handle /* 2 */, cp0->Authorize /* 1 */);
10043c88:	7842      	ldrb	r2, [r0, #1]
10043c8a:	78c1      	ldrb	r1, [r0, #3]
10043c8c:	7880      	ldrb	r0, [r0, #2]
10043c8e:	0200      	lsls	r0, r0, #8
10043c90:	4310      	orrs	r0, r2
10043c92:	f002 fddd 	bl	10046850 <aci_gap_authorization_resp>
	buffer_out[0] = 0x04;
10043c96:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043c98:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043c9a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043c9c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043c9e:	3b03      	subs	r3, #3
10043ca0:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x89;
10043ca2:	3388      	adds	r3, #136	; 0x88
10043ca4:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043ca6:	3373      	adds	r3, #115	; 0x73
	buffer_out[1] = 0x0E;
10043ca8:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_authorization_resp(cp0->Connection_Handle /* 2 */, cp0->Authorize /* 1 */);
10043caa:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043cac:	7163      	strb	r3, [r4, #5]
10043cae:	3a07      	subs	r2, #7
}
10043cb0:	0010      	movs	r0, r2
10043cb2:	bd10      	pop	{r4, pc}

10043cb4 <aci_gap_set_non_connectable_process>:
uint16_t aci_gap_set_non_connectable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043cb4:	b510      	push	{r4, lr}
10043cb6:	0014      	movs	r4, r2
		return 0;
10043cb8:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043cba:	2b06      	cmp	r3, #6
10043cbc:	d910      	bls.n	10043ce0 <aci_gap_set_non_connectable_process+0x2c>
	*status = aci_gap_set_non_connectable(cp0->Advertising_Event_Type /* 1 */, cp0->Own_Address_Type /* 1 */);
10043cbe:	7881      	ldrb	r1, [r0, #2]
10043cc0:	7840      	ldrb	r0, [r0, #1]
10043cc2:	f002 ff64 	bl	10046b8e <aci_gap_set_non_connectable>
	buffer_out[0] = 0x04;
10043cc6:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043cc8:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043cca:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043ccc:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043cce:	3b03      	subs	r3, #3
10043cd0:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x8b;
10043cd2:	338a      	adds	r3, #138	; 0x8a
10043cd4:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043cd6:	3371      	adds	r3, #113	; 0x71
	buffer_out[1] = 0x0E;
10043cd8:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_set_non_connectable(cp0->Advertising_Event_Type /* 1 */, cp0->Own_Address_Type /* 1 */);
10043cda:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043cdc:	7163      	strb	r3, [r4, #5]
10043cde:	3a07      	subs	r2, #7
}
10043ce0:	0010      	movs	r0, r2
10043ce2:	bd10      	pop	{r4, pc}

10043ce4 <aci_gap_set_undirected_connectable_process>:
uint16_t aci_gap_set_undirected_connectable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043ce4:	b570      	push	{r4, r5, r6, lr}
10043ce6:	0014      	movs	r4, r2
		return 0;
10043ce8:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043cea:	2b06      	cmp	r3, #6
10043cec:	d918      	bls.n	10043d20 <aci_gap_set_undirected_connectable_process+0x3c>
	*status = aci_gap_set_undirected_connectable(cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Adv_Filter_Policy /* 1 */);
10043cee:	7901      	ldrb	r1, [r0, #4]
10043cf0:	78c6      	ldrb	r6, [r0, #3]
10043cf2:	0209      	lsls	r1, r1, #8
10043cf4:	7983      	ldrb	r3, [r0, #6]
10043cf6:	7942      	ldrb	r2, [r0, #5]
10043cf8:	4331      	orrs	r1, r6
10043cfa:	7846      	ldrb	r6, [r0, #1]
10043cfc:	7880      	ldrb	r0, [r0, #2]
10043cfe:	0200      	lsls	r0, r0, #8
10043d00:	4330      	orrs	r0, r6
10043d02:	f002 ff6c 	bl	10046bde <aci_gap_set_undirected_connectable>
	buffer_out[0] = 0x04;
10043d06:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043d08:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043d0a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043d0c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043d0e:	3b03      	subs	r3, #3
10043d10:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x8c;
10043d12:	338b      	adds	r3, #139	; 0x8b
10043d14:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043d16:	3370      	adds	r3, #112	; 0x70
	buffer_out[1] = 0x0E;
10043d18:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_set_undirected_connectable(cp0->Advertising_Interval_Min /* 2 */, cp0->Advertising_Interval_Max /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Adv_Filter_Policy /* 1 */);
10043d1a:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043d1c:	7163      	strb	r3, [r4, #5]
10043d1e:	3a07      	subs	r2, #7
}
10043d20:	0010      	movs	r0, r2
10043d22:	bd70      	pop	{r4, r5, r6, pc}

10043d24 <aci_gap_slave_security_req_process>:
uint16_t aci_gap_slave_security_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043d24:	b510      	push	{r4, lr}
10043d26:	0014      	movs	r4, r2
		return 0;
10043d28:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043d2a:	2b06      	cmp	r3, #6
10043d2c:	d912      	bls.n	10043d54 <aci_gap_slave_security_req_process+0x30>
	*status = aci_gap_slave_security_req(cp0->Connection_Handle /* 2 */);
10043d2e:	7843      	ldrb	r3, [r0, #1]
10043d30:	7880      	ldrb	r0, [r0, #2]
10043d32:	0200      	lsls	r0, r0, #8
10043d34:	4318      	orrs	r0, r3
10043d36:	f002 ff5c 	bl	10046bf2 <aci_gap_slave_security_req>
	buffer_out[0] = 0x04;
10043d3a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043d3c:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10043d3e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043d40:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10043d42:	3b03      	subs	r3, #3
10043d44:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x8d;
10043d46:	338c      	adds	r3, #140	; 0x8c
10043d48:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10043d4a:	336f      	adds	r3, #111	; 0x6f
	buffer_out[1] = 0x0F;
10043d4c:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_slave_security_req(cp0->Connection_Handle /* 2 */);
10043d4e:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
10043d50:	71a3      	strb	r3, [r4, #6]
10043d52:	3a08      	subs	r2, #8
}
10043d54:	0010      	movs	r0, r2
10043d56:	bd10      	pop	{r4, pc}

10043d58 <aci_gap_update_adv_data_process>:
uint16_t aci_gap_update_adv_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043d58:	b510      	push	{r4, lr}
10043d5a:	0014      	movs	r4, r2
		return 0;
10043d5c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043d5e:	2b06      	cmp	r3, #6
10043d60:	d910      	bls.n	10043d84 <aci_gap_update_adv_data_process+0x2c>
	*status = aci_gap_update_adv_data(cp0->AdvDataLen /* 1 */, cp0->AdvData /* cp0->AdvDataLen * (sizeof(uint8_t)) */);
10043d62:	1c81      	adds	r1, r0, #2
10043d64:	7840      	ldrb	r0, [r0, #1]
10043d66:	f002 ffe9 	bl	10046d3c <aci_gap_update_adv_data>
	buffer_out[0] = 0x04;
10043d6a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043d6c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043d6e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043d70:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043d72:	3b03      	subs	r3, #3
10043d74:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x8e;
10043d76:	338d      	adds	r3, #141	; 0x8d
10043d78:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043d7a:	336e      	adds	r3, #110	; 0x6e
	buffer_out[1] = 0x0E;
10043d7c:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_update_adv_data(cp0->AdvDataLen /* 1 */, cp0->AdvData /* cp0->AdvDataLen * (sizeof(uint8_t)) */);
10043d7e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043d80:	7163      	strb	r3, [r4, #5]
10043d82:	3a07      	subs	r2, #7
}
10043d84:	0010      	movs	r0, r2
10043d86:	bd10      	pop	{r4, pc}

10043d88 <aci_gap_delete_ad_type_process>:
uint16_t aci_gap_delete_ad_type_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043d88:	b510      	push	{r4, lr}
10043d8a:	0014      	movs	r4, r2
		return 0;
10043d8c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043d8e:	2b06      	cmp	r3, #6
10043d90:	d90f      	bls.n	10043db2 <aci_gap_delete_ad_type_process+0x2a>
	*status = aci_gap_delete_ad_type(cp0->ADType /* 1 */);
10043d92:	7840      	ldrb	r0, [r0, #1]
10043d94:	f002 fd9b 	bl	100468ce <aci_gap_delete_ad_type>
	buffer_out[0] = 0x04;
10043d98:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043d9a:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043d9c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043d9e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043da0:	3b03      	subs	r3, #3
10043da2:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x8f;
10043da4:	338e      	adds	r3, #142	; 0x8e
10043da6:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043da8:	336d      	adds	r3, #109	; 0x6d
	buffer_out[1] = 0x0E;
10043daa:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_delete_ad_type(cp0->ADType /* 1 */);
10043dac:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043dae:	7163      	strb	r3, [r4, #5]
10043db0:	3a07      	subs	r2, #7
}
10043db2:	0010      	movs	r0, r2
10043db4:	bd10      	pop	{r4, pc}

10043db6 <aci_gap_set_event_mask_process>:
uint16_t aci_gap_set_event_mask_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043db6:	b510      	push	{r4, lr}
10043db8:	0014      	movs	r4, r2
		return 0;
10043dba:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043dbc:	2b06      	cmp	r3, #6
10043dbe:	d912      	bls.n	10043de6 <aci_gap_set_event_mask_process+0x30>
	*status = aci_gap_set_event_mask(cp0->GAP_Evt_Mask /* 2 */);
10043dc0:	7843      	ldrb	r3, [r0, #1]
10043dc2:	7880      	ldrb	r0, [r0, #2]
10043dc4:	0200      	lsls	r0, r0, #8
10043dc6:	4318      	orrs	r0, r3
10043dc8:	f002 fea8 	bl	10046b1c <aci_gap_set_event_mask>
	buffer_out[0] = 0x04;
10043dcc:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043dce:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043dd0:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043dd2:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043dd4:	3b03      	subs	r3, #3
10043dd6:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x91;
10043dd8:	3390      	adds	r3, #144	; 0x90
10043dda:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043ddc:	336b      	adds	r3, #107	; 0x6b
	buffer_out[1] = 0x0E;
10043dde:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_set_event_mask(cp0->GAP_Evt_Mask /* 2 */);
10043de0:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043de2:	7163      	strb	r3, [r4, #5]
10043de4:	3a07      	subs	r2, #7
}
10043de6:	0010      	movs	r0, r2
10043de8:	bd10      	pop	{r4, pc}

10043dea <aci_gap_configure_whitelist_process>:
uint16_t aci_gap_configure_whitelist_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043dea:	b510      	push	{r4, lr}
		return 0;
10043dec:	2000      	movs	r0, #0
uint16_t aci_gap_configure_whitelist_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043dee:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10043df0:	2b06      	cmp	r3, #6
10043df2:	d90e      	bls.n	10043e12 <aci_gap_configure_whitelist_process+0x28>
	*status = aci_gap_configure_whitelist();
10043df4:	f002 fd3a 	bl	1004686c <aci_gap_configure_whitelist>
	buffer_out[0] = 0x04;
10043df8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043dfa:	220e      	movs	r2, #14
	*status = aci_gap_configure_whitelist();
10043dfc:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043dfe:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10043e00:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043e02:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043e04:	3b03      	subs	r3, #3
10043e06:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x92;
10043e08:	3391      	adds	r3, #145	; 0x91
10043e0a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043e0c:	336a      	adds	r3, #106	; 0x6a
	buffer_out[1] = 0x0E;
10043e0e:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
10043e10:	7163      	strb	r3, [r4, #5]
}
10043e12:	bd10      	pop	{r4, pc}

10043e14 <aci_gap_terminate_process>:
uint16_t aci_gap_terminate_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043e14:	b510      	push	{r4, lr}
10043e16:	0014      	movs	r4, r2
		return 0;
10043e18:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043e1a:	2b06      	cmp	r3, #6
10043e1c:	d913      	bls.n	10043e46 <aci_gap_terminate_process+0x32>
	*status = aci_gap_terminate(cp0->Connection_Handle /* 2 */, cp0->Reason /* 1 */);
10043e1e:	7842      	ldrb	r2, [r0, #1]
10043e20:	78c1      	ldrb	r1, [r0, #3]
10043e22:	7880      	ldrb	r0, [r0, #2]
10043e24:	0200      	lsls	r0, r0, #8
10043e26:	4310      	orrs	r0, r2
10043e28:	f002 ff80 	bl	10046d2c <aci_gap_terminate>
	buffer_out[0] = 0x04;
10043e2c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043e2e:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10043e30:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043e32:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10043e34:	3b03      	subs	r3, #3
10043e36:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x93;
10043e38:	3392      	adds	r3, #146	; 0x92
10043e3a:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10043e3c:	3369      	adds	r3, #105	; 0x69
	buffer_out[1] = 0x0F;
10043e3e:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_terminate(cp0->Connection_Handle /* 2 */, cp0->Reason /* 1 */);
10043e40:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
10043e42:	71a3      	strb	r3, [r4, #6]
10043e44:	3a08      	subs	r2, #8
}
10043e46:	0010      	movs	r0, r2
10043e48:	bd10      	pop	{r4, pc}

10043e4a <aci_gap_clear_security_db_process>:
uint16_t aci_gap_clear_security_db_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043e4a:	b510      	push	{r4, lr}
		return 0;
10043e4c:	2000      	movs	r0, #0
uint16_t aci_gap_clear_security_db_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043e4e:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10043e50:	2b06      	cmp	r3, #6
10043e52:	d90e      	bls.n	10043e72 <aci_gap_clear_security_db_process+0x28>
	*status = aci_gap_clear_security_db();
10043e54:	f002 fd06 	bl	10046864 <aci_gap_clear_security_db>
	buffer_out[0] = 0x04;
10043e58:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043e5a:	220e      	movs	r2, #14
	*status = aci_gap_clear_security_db();
10043e5c:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043e5e:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10043e60:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043e62:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043e64:	3b03      	subs	r3, #3
10043e66:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x94;
10043e68:	3393      	adds	r3, #147	; 0x93
10043e6a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043e6c:	3368      	adds	r3, #104	; 0x68
	buffer_out[1] = 0x0E;
10043e6e:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
10043e70:	7163      	strb	r3, [r4, #5]
}
10043e72:	bd10      	pop	{r4, pc}

10043e74 <aci_gap_allow_rebond_process>:
uint16_t aci_gap_allow_rebond_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043e74:	b510      	push	{r4, lr}
10043e76:	0014      	movs	r4, r2
		return 0;
10043e78:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043e7a:	2b06      	cmp	r3, #6
10043e7c:	d912      	bls.n	10043ea4 <aci_gap_allow_rebond_process+0x30>
	*status = aci_gap_allow_rebond(cp0->Connection_Handle /* 2 */);
10043e7e:	7843      	ldrb	r3, [r0, #1]
10043e80:	7880      	ldrb	r0, [r0, #2]
10043e82:	0200      	lsls	r0, r0, #8
10043e84:	4318      	orrs	r0, r3
10043e86:	f002 fcdf 	bl	10046848 <aci_gap_allow_rebond>
	buffer_out[0] = 0x04;
10043e8a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10043e8c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10043e8e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043e90:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10043e92:	3b03      	subs	r3, #3
10043e94:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x95;
10043e96:	3394      	adds	r3, #148	; 0x94
10043e98:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10043e9a:	3367      	adds	r3, #103	; 0x67
	buffer_out[1] = 0x0E;
10043e9c:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_allow_rebond(cp0->Connection_Handle /* 2 */);
10043e9e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10043ea0:	7163      	strb	r3, [r4, #5]
10043ea2:	3a07      	subs	r2, #7
}
10043ea4:	0010      	movs	r0, r2
10043ea6:	bd10      	pop	{r4, pc}

10043ea8 <aci_gap_start_limited_discovery_proc_process>:
uint16_t aci_gap_start_limited_discovery_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043ea8:	b570      	push	{r4, r5, r6, lr}
10043eaa:	0014      	movs	r4, r2
		return 0;
10043eac:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043eae:	2b06      	cmp	r3, #6
10043eb0:	d918      	bls.n	10043ee4 <aci_gap_start_limited_discovery_proc_process+0x3c>
	*status = aci_gap_start_limited_discovery_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Filter_Duplicates /* 1 */);
10043eb2:	7901      	ldrb	r1, [r0, #4]
10043eb4:	78c6      	ldrb	r6, [r0, #3]
10043eb6:	0209      	lsls	r1, r1, #8
10043eb8:	7983      	ldrb	r3, [r0, #6]
10043eba:	7942      	ldrb	r2, [r0, #5]
10043ebc:	4331      	orrs	r1, r6
10043ebe:	7846      	ldrb	r6, [r0, #1]
10043ec0:	7880      	ldrb	r0, [r0, #2]
10043ec2:	0200      	lsls	r0, r0, #8
10043ec4:	4330      	orrs	r0, r6
10043ec6:	f7fd fd77 	bl	100419b8 <aci_gap_start_limited_discovery_proc>
	buffer_out[0] = 0x04;
10043eca:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043ecc:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10043ece:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043ed0:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10043ed2:	3b03      	subs	r3, #3
10043ed4:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x96;
10043ed6:	3395      	adds	r3, #149	; 0x95
10043ed8:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10043eda:	3366      	adds	r3, #102	; 0x66
	buffer_out[1] = 0x0F;
10043edc:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_start_limited_discovery_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Filter_Duplicates /* 1 */);
10043ede:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
10043ee0:	71a3      	strb	r3, [r4, #6]
10043ee2:	3a08      	subs	r2, #8
}
10043ee4:	0010      	movs	r0, r2
10043ee6:	bd70      	pop	{r4, r5, r6, pc}

10043ee8 <aci_gap_start_general_discovery_proc_process>:
uint16_t aci_gap_start_general_discovery_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043ee8:	b570      	push	{r4, r5, r6, lr}
10043eea:	0014      	movs	r4, r2
		return 0;
10043eec:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043eee:	2b06      	cmp	r3, #6
10043ef0:	d918      	bls.n	10043f24 <aci_gap_start_general_discovery_proc_process+0x3c>
	*status = aci_gap_start_general_discovery_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Filter_Duplicates /* 1 */);
10043ef2:	7901      	ldrb	r1, [r0, #4]
10043ef4:	78c6      	ldrb	r6, [r0, #3]
10043ef6:	0209      	lsls	r1, r1, #8
10043ef8:	7983      	ldrb	r3, [r0, #6]
10043efa:	7942      	ldrb	r2, [r0, #5]
10043efc:	4331      	orrs	r1, r6
10043efe:	7846      	ldrb	r6, [r0, #1]
10043f00:	7880      	ldrb	r0, [r0, #2]
10043f02:	0200      	lsls	r0, r0, #8
10043f04:	4330      	orrs	r0, r6
10043f06:	f7fd fd5b 	bl	100419c0 <aci_gap_start_general_discovery_proc>
	buffer_out[0] = 0x04;
10043f0a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043f0c:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10043f0e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10043f10:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10043f12:	3b03      	subs	r3, #3
10043f14:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x97;
10043f16:	3396      	adds	r3, #150	; 0x96
10043f18:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10043f1a:	3365      	adds	r3, #101	; 0x65
	buffer_out[1] = 0x0F;
10043f1c:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_start_general_discovery_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Filter_Duplicates /* 1 */);
10043f1e:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
10043f20:	71a3      	strb	r3, [r4, #6]
10043f22:	3a08      	subs	r2, #8
}
10043f24:	0010      	movs	r0, r2
10043f26:	bd70      	pop	{r4, r5, r6, pc}

10043f28 <aci_gap_start_name_discovery_proc_process>:
uint16_t aci_gap_start_name_discovery_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043f28:	b5f0      	push	{r4, r5, r6, r7, lr}
10043f2a:	0015      	movs	r5, r2
10043f2c:	b089      	sub	sp, #36	; 0x24
		return 0;
10043f2e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10043f30:	2b06      	cmp	r3, #6
10043f32:	d939      	bls.n	10043fa8 <aci_gap_start_name_discovery_proc_process+0x80>
	*status = aci_gap_start_name_discovery_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */,
10043f34:	1c44      	adds	r4, r0, #1
10043f36:	78e1      	ldrb	r1, [r4, #3]
10043f38:	78a6      	ldrb	r6, [r4, #2]
10043f3a:	0209      	lsls	r1, r1, #8
10043f3c:	1d83      	adds	r3, r0, #6
10043f3e:	4331      	orrs	r1, r6
10043f40:	7846      	ldrb	r6, [r0, #1]
10043f42:	7860      	ldrb	r0, [r4, #1]
10043f44:	7da7      	ldrb	r7, [r4, #22]
10043f46:	0200      	lsls	r0, r0, #8
10043f48:	4330      	orrs	r0, r6
10043f4a:	7de6      	ldrb	r6, [r4, #23]
10043f4c:	7922      	ldrb	r2, [r4, #4]
10043f4e:	0236      	lsls	r6, r6, #8
10043f50:	433e      	orrs	r6, r7
10043f52:	9606      	str	r6, [sp, #24]
10043f54:	7d66      	ldrb	r6, [r4, #21]
10043f56:	7d27      	ldrb	r7, [r4, #20]
10043f58:	0236      	lsls	r6, r6, #8
10043f5a:	433e      	orrs	r6, r7
10043f5c:	9605      	str	r6, [sp, #20]
10043f5e:	7ce6      	ldrb	r6, [r4, #19]
10043f60:	7ca7      	ldrb	r7, [r4, #18]
10043f62:	0236      	lsls	r6, r6, #8
10043f64:	433e      	orrs	r6, r7
10043f66:	9604      	str	r6, [sp, #16]
10043f68:	7c66      	ldrb	r6, [r4, #17]
10043f6a:	7c27      	ldrb	r7, [r4, #16]
10043f6c:	0236      	lsls	r6, r6, #8
10043f6e:	433e      	orrs	r6, r7
10043f70:	9603      	str	r6, [sp, #12]
10043f72:	7be6      	ldrb	r6, [r4, #15]
10043f74:	7ba7      	ldrb	r7, [r4, #14]
10043f76:	0236      	lsls	r6, r6, #8
10043f78:	433e      	orrs	r6, r7
10043f7a:	9602      	str	r6, [sp, #8]
10043f7c:	7b66      	ldrb	r6, [r4, #13]
10043f7e:	7b27      	ldrb	r7, [r4, #12]
10043f80:	0236      	lsls	r6, r6, #8
10043f82:	433e      	orrs	r6, r7
10043f84:	9601      	str	r6, [sp, #4]
10043f86:	7ae4      	ldrb	r4, [r4, #11]
10043f88:	9400      	str	r4, [sp, #0]
10043f8a:	f7fd fd1d 	bl	100419c8 <aci_gap_start_name_discovery_proc>
	buffer_out[0] = 0x04;
10043f8e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10043f90:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10043f92:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10043f94:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
10043f96:	3b03      	subs	r3, #3
10043f98:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x98;
10043f9a:	3397      	adds	r3, #151	; 0x97
10043f9c:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0xfc;
10043f9e:	3364      	adds	r3, #100	; 0x64
	buffer_out[1] = 0x0F;
10043fa0:	706a      	strb	r2, [r5, #1]
	*status = aci_gap_start_name_discovery_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */,
10043fa2:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0xfc;
10043fa4:	71ab      	strb	r3, [r5, #6]
10043fa6:	3a08      	subs	r2, #8
}
10043fa8:	0010      	movs	r0, r2
10043faa:	b009      	add	sp, #36	; 0x24
10043fac:	bdf0      	pop	{r4, r5, r6, r7, pc}

10043fae <aci_gap_start_auto_connection_establish_proc_process>:
uint16_t aci_gap_start_auto_connection_establish_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10043fae:	b5f0      	push	{r4, r5, r6, r7, lr}
10043fb0:	b0cb      	sub	sp, #300	; 0x12c
10043fb2:	9009      	str	r0, [sp, #36]	; 0x24
10043fb4:	0014      	movs	r4, r2
		return 0;
10043fb6:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10043fb8:	2b06      	cmp	r3, #6
10043fba:	d945      	bls.n	10044048 <aci_gap_start_auto_connection_establish_proc_process+0x9a>
10043fbc:	2525      	movs	r5, #37	; 0x25
10043fbe:	0007      	movs	r7, r0
10043fc0:	9e09      	ldr	r6, [sp, #36]	; 0x24
10043fc2:	ab02      	add	r3, sp, #8
10043fc4:	18ed      	adds	r5, r5, r3
10043fc6:	3614      	adds	r6, #20
		for (i = 0; i < cp0->Num_of_Whitelist_Entries; i++) {
10043fc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
10043fca:	1c5a      	adds	r2, r3, #1
10043fcc:	7c53      	ldrb	r3, [r2, #17]
10043fce:	469c      	mov	ip, r3
10043fd0:	429f      	cmp	r7, r3
10043fd2:	db3b      	blt.n	1004404c <aci_gap_start_auto_connection_establish_proc_process+0x9e>
	*status = aci_gap_start_auto_connection_establish_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */,
10043fd4:	7993      	ldrb	r3, [r2, #6]
10043fd6:	7951      	ldrb	r1, [r2, #5]
10043fd8:	021b      	lsls	r3, r3, #8
10043fda:	430b      	orrs	r3, r1
10043fdc:	78d1      	ldrb	r1, [r2, #3]
10043fde:	7890      	ldrb	r0, [r2, #2]
10043fe0:	0209      	lsls	r1, r1, #8
10043fe2:	4301      	orrs	r1, r0
10043fe4:	7850      	ldrb	r0, [r2, #1]
10043fe6:	7815      	ldrb	r5, [r2, #0]
10043fe8:	0200      	lsls	r0, r0, #8
10043fea:	4328      	orrs	r0, r5
10043fec:	ad0b      	add	r5, sp, #44	; 0x2c
10043fee:	7916      	ldrb	r6, [r2, #4]
10043ff0:	9506      	str	r5, [sp, #24]
10043ff2:	4665      	mov	r5, ip
10043ff4:	9505      	str	r5, [sp, #20]
10043ff6:	7c15      	ldrb	r5, [r2, #16]
10043ff8:	7bd7      	ldrb	r7, [r2, #15]
10043ffa:	022d      	lsls	r5, r5, #8
10043ffc:	433d      	orrs	r5, r7
10043ffe:	9504      	str	r5, [sp, #16]
10044000:	7b95      	ldrb	r5, [r2, #14]
10044002:	7b57      	ldrb	r7, [r2, #13]
10044004:	022d      	lsls	r5, r5, #8
10044006:	433d      	orrs	r5, r7
10044008:	9503      	str	r5, [sp, #12]
1004400a:	7b15      	ldrb	r5, [r2, #12]
1004400c:	7ad7      	ldrb	r7, [r2, #11]
1004400e:	022d      	lsls	r5, r5, #8
10044010:	433d      	orrs	r5, r7
10044012:	9502      	str	r5, [sp, #8]
10044014:	7a95      	ldrb	r5, [r2, #10]
10044016:	7a57      	ldrb	r7, [r2, #9]
10044018:	022d      	lsls	r5, r5, #8
1004401a:	433d      	orrs	r5, r7
1004401c:	9501      	str	r5, [sp, #4]
1004401e:	7a15      	ldrb	r5, [r2, #8]
10044020:	79d7      	ldrb	r7, [r2, #7]
10044022:	022d      	lsls	r5, r5, #8
10044024:	433d      	orrs	r5, r7
10044026:	0032      	movs	r2, r6
10044028:	9500      	str	r5, [sp, #0]
1004402a:	f7fd fc57 	bl	100418dc <aci_gap_start_auto_connection_establish_proc>
	buffer_out[0] = 0x04;
1004402e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044030:	220f      	movs	r2, #15
	*status = aci_gap_start_auto_connection_establish_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */,
10044032:	70e0      	strb	r0, [r4, #3]
10044034:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044036:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044038:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
1004403a:	3b03      	subs	r3, #3
1004403c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x99;
1004403e:	3398      	adds	r3, #152	; 0x98
10044040:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10044042:	3363      	adds	r3, #99	; 0x63
	buffer_out[1] = 0x0F;
10044044:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfc;
10044046:	71a3      	strb	r3, [r4, #6]
}
10044048:	b04b      	add	sp, #300	; 0x12c
1004404a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			Whitelist_Entry[i].Peer_Address_Type = cp0->Whitelist_Entry[i].Peer_Address_Type;
1004404c:	1e72      	subs	r2, r6, #1
1004404e:	7812      	ldrb	r2, [r2, #0]
10044050:	1e6b      	subs	r3, r5, #1
10044052:	701a      	strb	r2, [r3, #0]
			Osal_MemCpy((void *) &Whitelist_Entry[i].Peer_Address, (const void *) &cp0->Whitelist_Entry[i].Peer_Address, 6);
10044054:	0031      	movs	r1, r6
10044056:	0028      	movs	r0, r5
10044058:	2206      	movs	r2, #6
1004405a:	f7fc fb92 	bl	10040782 <Osal_MemCpy>
		for (i = 0; i < cp0->Num_of_Whitelist_Entries; i++) {
1004405e:	3701      	adds	r7, #1
10044060:	3507      	adds	r5, #7
10044062:	3607      	adds	r6, #7
10044064:	e7b0      	b.n	10043fc8 <aci_gap_start_auto_connection_establish_proc_process+0x1a>

10044066 <aci_gap_start_general_connection_establish_proc_process>:
uint16_t aci_gap_start_general_connection_establish_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044066:	b573      	push	{r0, r1, r4, r5, r6, lr}
10044068:	0014      	movs	r4, r2
		return 0;
1004406a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004406c:	2b06      	cmp	r3, #6
1004406e:	d91d      	bls.n	100440ac <aci_gap_start_general_connection_establish_proc_process+0x46>
	*status = aci_gap_start_general_connection_establish_proc(cp0->LE_Scan_Type /* 1 */, cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Scanning_Filter_Policy /* 1 */, cp0->Filter_Duplicates /* 1 */);
10044070:	7942      	ldrb	r2, [r0, #5]
10044072:	7901      	ldrb	r1, [r0, #4]
10044074:	0212      	lsls	r2, r2, #8
10044076:	430a      	orrs	r2, r1
10044078:	78c1      	ldrb	r1, [r0, #3]
1004407a:	7886      	ldrb	r6, [r0, #2]
1004407c:	1c45      	adds	r5, r0, #1
1004407e:	0209      	lsls	r1, r1, #8
10044080:	4331      	orrs	r1, r6
10044082:	79ee      	ldrb	r6, [r5, #7]
10044084:	7983      	ldrb	r3, [r0, #6]
10044086:	7840      	ldrb	r0, [r0, #1]
10044088:	9601      	str	r6, [sp, #4]
1004408a:	79ad      	ldrb	r5, [r5, #6]
1004408c:	9500      	str	r5, [sp, #0]
1004408e:	f7fd fc45 	bl	1004191c <aci_gap_start_general_connection_establish_proc>
	buffer_out[0] = 0x04;
10044092:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044094:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044096:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044098:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
1004409a:	3b03      	subs	r3, #3
1004409c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x9a;
1004409e:	3399      	adds	r3, #153	; 0x99
100440a0:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
100440a2:	3362      	adds	r3, #98	; 0x62
	buffer_out[1] = 0x0F;
100440a4:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_start_general_connection_establish_proc(cp0->LE_Scan_Type /* 1 */, cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Scanning_Filter_Policy /* 1 */, cp0->Filter_Duplicates /* 1 */);
100440a6:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
100440a8:	71a3      	strb	r3, [r4, #6]
100440aa:	3a08      	subs	r2, #8
}
100440ac:	0010      	movs	r0, r2
100440ae:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

100440b0 <aci_gap_start_selective_connection_establish_proc_process>:
uint16_t aci_gap_start_selective_connection_establish_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100440b0:	b5f0      	push	{r4, r5, r6, r7, lr}
100440b2:	b0c7      	sub	sp, #284	; 0x11c
100440b4:	9005      	str	r0, [sp, #20]
100440b6:	0014      	movs	r4, r2
		return 0;
100440b8:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100440ba:	2b06      	cmp	r3, #6
100440bc:	d92c      	bls.n	10044118 <aci_gap_start_selective_connection_establish_proc_process+0x68>
100440be:	2515      	movs	r5, #21
100440c0:	0007      	movs	r7, r0
100440c2:	9e05      	ldr	r6, [sp, #20]
100440c4:	ab02      	add	r3, sp, #8
100440c6:	18ed      	adds	r5, r5, r3
100440c8:	360b      	adds	r6, #11
		for (i = 0; i < cp0->Num_of_Whitelist_Entries; i++) {
100440ca:	9b05      	ldr	r3, [sp, #20]
100440cc:	7a58      	ldrb	r0, [r3, #9]
100440ce:	3301      	adds	r3, #1
100440d0:	4287      	cmp	r7, r0
100440d2:	db23      	blt.n	1004411c <aci_gap_start_selective_connection_establish_proc_process+0x6c>
	*status = aci_gap_start_selective_connection_establish_proc(cp0->LE_Scan_Type /* 1 */, cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Scanning_Filter_Policy /* 1 */, cp0->Filter_Duplicates /* 1 */, cp0->Num_of_Whitelist_Entries /* 1 */,
100440d4:	791a      	ldrb	r2, [r3, #4]
100440d6:	78d9      	ldrb	r1, [r3, #3]
100440d8:	0212      	lsls	r2, r2, #8
100440da:	430a      	orrs	r2, r1
100440dc:	7899      	ldrb	r1, [r3, #2]
100440de:	785d      	ldrb	r5, [r3, #1]
100440e0:	0209      	lsls	r1, r1, #8
100440e2:	af07      	add	r7, sp, #28
100440e4:	795e      	ldrb	r6, [r3, #5]
100440e6:	4329      	orrs	r1, r5
100440e8:	781d      	ldrb	r5, [r3, #0]
100440ea:	9703      	str	r7, [sp, #12]
100440ec:	9002      	str	r0, [sp, #8]
100440ee:	79d8      	ldrb	r0, [r3, #7]
100440f0:	9001      	str	r0, [sp, #4]
100440f2:	799b      	ldrb	r3, [r3, #6]
100440f4:	0028      	movs	r0, r5
100440f6:	9300      	str	r3, [sp, #0]
100440f8:	0033      	movs	r3, r6
100440fa:	f7fd fc19 	bl	10041930 <aci_gap_start_selective_connection_establish_proc>
	buffer_out[0] = 0x04;
100440fe:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044100:	220f      	movs	r2, #15
	*status = aci_gap_start_selective_connection_establish_proc(cp0->LE_Scan_Type /* 1 */, cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Own_Address_Type /* 1 */, cp0->Scanning_Filter_Policy /* 1 */, cp0->Filter_Duplicates /* 1 */, cp0->Num_of_Whitelist_Entries /* 1 */,
10044102:	70e0      	strb	r0, [r4, #3]
10044104:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044106:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044108:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
1004410a:	3b03      	subs	r3, #3
1004410c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x9b;
1004410e:	339a      	adds	r3, #154	; 0x9a
10044110:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10044112:	3361      	adds	r3, #97	; 0x61
	buffer_out[1] = 0x0F;
10044114:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfc;
10044116:	71a3      	strb	r3, [r4, #6]
}
10044118:	b047      	add	sp, #284	; 0x11c
1004411a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			Whitelist_Entry[i].Peer_Address_Type = cp0->Whitelist_Entry[i].Peer_Address_Type;
1004411c:	1e72      	subs	r2, r6, #1
1004411e:	7812      	ldrb	r2, [r2, #0]
10044120:	1e6b      	subs	r3, r5, #1
10044122:	701a      	strb	r2, [r3, #0]
			Osal_MemCpy((void *) &Whitelist_Entry[i].Peer_Address, (const void *) &cp0->Whitelist_Entry[i].Peer_Address, 6);
10044124:	0031      	movs	r1, r6
10044126:	0028      	movs	r0, r5
10044128:	2206      	movs	r2, #6
1004412a:	f7fc fb2a 	bl	10040782 <Osal_MemCpy>
		for (i = 0; i < cp0->Num_of_Whitelist_Entries; i++) {
1004412e:	3701      	adds	r7, #1
10044130:	3507      	adds	r5, #7
10044132:	3607      	adds	r6, #7
10044134:	e7c9      	b.n	100440ca <aci_gap_start_selective_connection_establish_proc_process+0x1a>

10044136 <aci_gap_create_connection_process>:
uint16_t aci_gap_create_connection_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044136:	b5f0      	push	{r4, r5, r6, r7, lr}
10044138:	0015      	movs	r5, r2
1004413a:	b089      	sub	sp, #36	; 0x24
		return 0;
1004413c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004413e:	2b06      	cmp	r3, #6
10044140:	d939      	bls.n	100441b6 <aci_gap_create_connection_process+0x80>
	*status = aci_gap_create_connection(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */,
10044142:	1c44      	adds	r4, r0, #1
10044144:	78e1      	ldrb	r1, [r4, #3]
10044146:	78a6      	ldrb	r6, [r4, #2]
10044148:	0209      	lsls	r1, r1, #8
1004414a:	1d83      	adds	r3, r0, #6
1004414c:	4331      	orrs	r1, r6
1004414e:	7846      	ldrb	r6, [r0, #1]
10044150:	7860      	ldrb	r0, [r4, #1]
10044152:	7da7      	ldrb	r7, [r4, #22]
10044154:	0200      	lsls	r0, r0, #8
10044156:	4330      	orrs	r0, r6
10044158:	7de6      	ldrb	r6, [r4, #23]
1004415a:	7922      	ldrb	r2, [r4, #4]
1004415c:	0236      	lsls	r6, r6, #8
1004415e:	433e      	orrs	r6, r7
10044160:	9606      	str	r6, [sp, #24]
10044162:	7d66      	ldrb	r6, [r4, #21]
10044164:	7d27      	ldrb	r7, [r4, #20]
10044166:	0236      	lsls	r6, r6, #8
10044168:	433e      	orrs	r6, r7
1004416a:	9605      	str	r6, [sp, #20]
1004416c:	7ce6      	ldrb	r6, [r4, #19]
1004416e:	7ca7      	ldrb	r7, [r4, #18]
10044170:	0236      	lsls	r6, r6, #8
10044172:	433e      	orrs	r6, r7
10044174:	9604      	str	r6, [sp, #16]
10044176:	7c66      	ldrb	r6, [r4, #17]
10044178:	7c27      	ldrb	r7, [r4, #16]
1004417a:	0236      	lsls	r6, r6, #8
1004417c:	433e      	orrs	r6, r7
1004417e:	9603      	str	r6, [sp, #12]
10044180:	7be6      	ldrb	r6, [r4, #15]
10044182:	7ba7      	ldrb	r7, [r4, #14]
10044184:	0236      	lsls	r6, r6, #8
10044186:	433e      	orrs	r6, r7
10044188:	9602      	str	r6, [sp, #8]
1004418a:	7b66      	ldrb	r6, [r4, #13]
1004418c:	7b27      	ldrb	r7, [r4, #12]
1004418e:	0236      	lsls	r6, r6, #8
10044190:	433e      	orrs	r6, r7
10044192:	9601      	str	r6, [sp, #4]
10044194:	7ae4      	ldrb	r4, [r4, #11]
10044196:	9400      	str	r4, [sp, #0]
10044198:	f7fd fbdb 	bl	10041952 <aci_gap_create_connection>
	buffer_out[0] = 0x04;
1004419c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004419e:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
100441a0:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
100441a2:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
100441a4:	3b03      	subs	r3, #3
100441a6:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x9c;
100441a8:	339b      	adds	r3, #155	; 0x9b
100441aa:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0xfc;
100441ac:	3360      	adds	r3, #96	; 0x60
	buffer_out[1] = 0x0F;
100441ae:	706a      	strb	r2, [r5, #1]
	*status = aci_gap_create_connection(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */, cp0->Own_Address_Type /* 1 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */,
100441b0:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0xfc;
100441b2:	71ab      	strb	r3, [r5, #6]
100441b4:	3a08      	subs	r2, #8
}
100441b6:	0010      	movs	r0, r2
100441b8:	b009      	add	sp, #36	; 0x24
100441ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

100441bc <aci_gap_terminate_gap_proc_process>:
uint16_t aci_gap_terminate_gap_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100441bc:	b510      	push	{r4, lr}
100441be:	0014      	movs	r4, r2
		return 0;
100441c0:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100441c2:	2b06      	cmp	r3, #6
100441c4:	d90f      	bls.n	100441e6 <aci_gap_terminate_gap_proc_process+0x2a>
	*status = aci_gap_terminate_gap_proc(cp0->Procedure_Code /* 1 */);
100441c6:	7840      	ldrb	r0, [r0, #1]
100441c8:	f7fd fbf2 	bl	100419b0 <aci_gap_terminate_gap_proc>
	buffer_out[0] = 0x04;
100441cc:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100441ce:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100441d0:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100441d2:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100441d4:	3b03      	subs	r3, #3
100441d6:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x9d;
100441d8:	339c      	adds	r3, #156	; 0x9c
100441da:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100441dc:	335f      	adds	r3, #95	; 0x5f
	buffer_out[1] = 0x0E;
100441de:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_terminate_gap_proc(cp0->Procedure_Code /* 1 */);
100441e0:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
100441e2:	7163      	strb	r3, [r4, #5]
100441e4:	3a07      	subs	r2, #7
}
100441e6:	0010      	movs	r0, r2
100441e8:	bd10      	pop	{r4, pc}

100441ea <aci_gap_start_connection_update_process>:
uint16_t aci_gap_start_connection_update_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100441ea:	b5f0      	push	{r4, r5, r6, r7, lr}
100441ec:	0015      	movs	r5, r2
100441ee:	b085      	sub	sp, #20
		return 0;
100441f0:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100441f2:	2b06      	cmp	r3, #6
100441f4:	d92e      	bls.n	10044254 <aci_gap_start_connection_update_process+0x6a>
	*status = aci_gap_start_connection_update(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */);
100441f6:	7a03      	ldrb	r3, [r0, #8]
100441f8:	79c2      	ldrb	r2, [r0, #7]
100441fa:	021b      	lsls	r3, r3, #8
100441fc:	4313      	orrs	r3, r2
100441fe:	7982      	ldrb	r2, [r0, #6]
10044200:	7941      	ldrb	r1, [r0, #5]
10044202:	0212      	lsls	r2, r2, #8
10044204:	430a      	orrs	r2, r1
10044206:	7901      	ldrb	r1, [r0, #4]
10044208:	78c6      	ldrb	r6, [r0, #3]
1004420a:	0209      	lsls	r1, r1, #8
1004420c:	1c44      	adds	r4, r0, #1
1004420e:	4331      	orrs	r1, r6
10044210:	7846      	ldrb	r6, [r0, #1]
10044212:	7880      	ldrb	r0, [r0, #2]
10044214:	7b27      	ldrb	r7, [r4, #12]
10044216:	0200      	lsls	r0, r0, #8
10044218:	4330      	orrs	r0, r6
1004421a:	7b66      	ldrb	r6, [r4, #13]
1004421c:	0236      	lsls	r6, r6, #8
1004421e:	433e      	orrs	r6, r7
10044220:	9602      	str	r6, [sp, #8]
10044222:	7ae6      	ldrb	r6, [r4, #11]
10044224:	7aa7      	ldrb	r7, [r4, #10]
10044226:	0236      	lsls	r6, r6, #8
10044228:	433e      	orrs	r6, r7
1004422a:	9601      	str	r6, [sp, #4]
1004422c:	7a26      	ldrb	r6, [r4, #8]
1004422e:	7a64      	ldrb	r4, [r4, #9]
10044230:	0224      	lsls	r4, r4, #8
10044232:	4334      	orrs	r4, r6
10044234:	9400      	str	r4, [sp, #0]
10044236:	f7fd fbad 	bl	10041994 <aci_gap_start_connection_update>
	buffer_out[0] = 0x04;
1004423a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004423c:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
1004423e:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10044240:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
10044242:	3b03      	subs	r3, #3
10044244:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x9e;
10044246:	339d      	adds	r3, #157	; 0x9d
10044248:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0xfc;
1004424a:	335e      	adds	r3, #94	; 0x5e
	buffer_out[1] = 0x0F;
1004424c:	706a      	strb	r2, [r5, #1]
	*status = aci_gap_start_connection_update(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Conn_Latency /* 2 */, cp0->Supervision_Timeout /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */);
1004424e:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0xfc;
10044250:	71ab      	strb	r3, [r5, #6]
10044252:	3a08      	subs	r2, #8
}
10044254:	0010      	movs	r0, r2
10044256:	b005      	add	sp, #20
10044258:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004425a <aci_gap_send_pairing_req_process>:
uint16_t aci_gap_send_pairing_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004425a:	b510      	push	{r4, lr}
1004425c:	0014      	movs	r4, r2
		return 0;
1004425e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044260:	2b06      	cmp	r3, #6
10044262:	d913      	bls.n	1004428c <aci_gap_send_pairing_req_process+0x32>
	*status = aci_gap_send_pairing_req(cp0->Connection_Handle /* 2 */, cp0->Force_Rebond /* 1 */);
10044264:	7842      	ldrb	r2, [r0, #1]
10044266:	78c1      	ldrb	r1, [r0, #3]
10044268:	7880      	ldrb	r0, [r0, #2]
1004426a:	0200      	lsls	r0, r0, #8
1004426c:	4310      	orrs	r0, r2
1004426e:	f7fd fbd6 	bl	10041a1e <aci_gap_send_pairing_req>
	buffer_out[0] = 0x04;
10044272:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044274:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044276:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044278:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
1004427a:	3b03      	subs	r3, #3
1004427c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x9f;
1004427e:	339e      	adds	r3, #158	; 0x9e
10044280:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10044282:	335d      	adds	r3, #93	; 0x5d
	buffer_out[1] = 0x0F;
10044284:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_send_pairing_req(cp0->Connection_Handle /* 2 */, cp0->Force_Rebond /* 1 */);
10044286:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
10044288:	71a3      	strb	r3, [r4, #6]
1004428a:	3a08      	subs	r2, #8
}
1004428c:	0010      	movs	r0, r2
1004428e:	bd10      	pop	{r4, pc}

10044290 <aci_gap_resolve_private_addr_process>:
uint16_t aci_gap_resolve_private_addr_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044290:	b513      	push	{r0, r1, r4, lr}
10044292:	0014      	movs	r4, r2
		return 0;
10044294:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6 + 6)) {
10044296:	2b0c      	cmp	r3, #12
10044298:	d916      	bls.n	100442c8 <aci_gap_resolve_private_addr_process+0x38>
	rp0->Status = aci_gap_resolve_private_addr(cp0->Address /* 6 */, Actual_Address);
1004429a:	4669      	mov	r1, sp
1004429c:	3001      	adds	r0, #1
1004429e:	f002 fb8b 	bl	100469b8 <aci_gap_resolve_private_addr>
	Osal_MemCpy((void *) rp0->Actual_Address, (const void *) Actual_Address, 6);
100442a2:	2206      	movs	r2, #6
	rp0->Status = aci_gap_resolve_private_addr(cp0->Address /* 6 */, Actual_Address);
100442a4:	71a0      	strb	r0, [r4, #6]
	Osal_MemCpy((void *) rp0->Actual_Address, (const void *) Actual_Address, 6);
100442a6:	4669      	mov	r1, sp
100442a8:	1de0      	adds	r0, r4, #7
100442aa:	f7fc fa6a 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100442ae:	2304      	movs	r3, #4
100442b0:	220d      	movs	r2, #13
100442b2:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0E;
100442b4:	330a      	adds	r3, #10
100442b6:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
100442b8:	3b04      	subs	r3, #4
100442ba:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100442bc:	3b09      	subs	r3, #9
100442be:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa0;
100442c0:	339f      	adds	r3, #159	; 0x9f
100442c2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100442c4:	335c      	adds	r3, #92	; 0x5c
100442c6:	7163      	strb	r3, [r4, #5]
}
100442c8:	0010      	movs	r0, r2
100442ca:	bd16      	pop	{r1, r2, r4, pc}

100442cc <aci_gap_start_observation_proc_process>:
uint16_t aci_gap_start_observation_proc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100442cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
100442ce:	0014      	movs	r4, r2
		return 0;
100442d0:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100442d2:	2b06      	cmp	r3, #6
100442d4:	d91d      	bls.n	10044312 <aci_gap_start_observation_proc_process+0x46>
	*status = aci_gap_start_observation_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->LE_Scan_Type /* 1 */, cp0->Own_Address_Type /* 1 */, cp0->Filter_Duplicates /* 1 */, cp0->Scanning_Filter_Policy /* 1 */);
100442d6:	7901      	ldrb	r1, [r0, #4]
100442d8:	78c6      	ldrb	r6, [r0, #3]
100442da:	0209      	lsls	r1, r1, #8
100442dc:	7983      	ldrb	r3, [r0, #6]
100442de:	7942      	ldrb	r2, [r0, #5]
100442e0:	1c45      	adds	r5, r0, #1
100442e2:	4331      	orrs	r1, r6
100442e4:	7846      	ldrb	r6, [r0, #1]
100442e6:	7880      	ldrb	r0, [r0, #2]
100442e8:	0200      	lsls	r0, r0, #8
100442ea:	4330      	orrs	r0, r6
100442ec:	79ee      	ldrb	r6, [r5, #7]
100442ee:	9601      	str	r6, [sp, #4]
100442f0:	79ad      	ldrb	r5, [r5, #6]
100442f2:	9500      	str	r5, [sp, #0]
100442f4:	f7fd fb89 	bl	10041a0a <aci_gap_start_observation_proc>
	buffer_out[0] = 0x04;
100442f8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100442fa:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
100442fc:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100442fe:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044300:	3b03      	subs	r3, #3
10044302:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xa2;
10044304:	33a1      	adds	r3, #161	; 0xa1
10044306:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfc;
10044308:	335a      	adds	r3, #90	; 0x5a
	buffer_out[1] = 0x0F;
1004430a:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_start_observation_proc(cp0->LE_Scan_Interval /* 2 */, cp0->LE_Scan_Window /* 2 */, cp0->LE_Scan_Type /* 1 */, cp0->Own_Address_Type /* 1 */, cp0->Filter_Duplicates /* 1 */, cp0->Scanning_Filter_Policy /* 1 */);
1004430c:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfc;
1004430e:	71a3      	strb	r3, [r4, #6]
10044310:	3a08      	subs	r2, #8
}
10044312:	0010      	movs	r0, r2
10044314:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10044316 <aci_gap_is_device_bonded_process>:
uint16_t aci_gap_is_device_bonded_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044316:	b510      	push	{r4, lr}
10044318:	0014      	movs	r4, r2
		return 0;
1004431a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004431c:	2b06      	cmp	r3, #6
1004431e:	d910      	bls.n	10044342 <aci_gap_is_device_bonded_process+0x2c>
	*status = aci_gap_is_device_bonded(cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */);
10044320:	1c81      	adds	r1, r0, #2
10044322:	7840      	ldrb	r0, [r0, #1]
10044324:	f002 fb10 	bl	10046948 <aci_gap_is_device_bonded>
	buffer_out[0] = 0x04;
10044328:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004432a:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004432c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004432e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044330:	3b03      	subs	r3, #3
10044332:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa4;
10044334:	33a3      	adds	r3, #163	; 0xa3
10044336:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10044338:	3358      	adds	r3, #88	; 0x58
	buffer_out[1] = 0x0E;
1004433a:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_is_device_bonded(cp0->Peer_Address_Type /* 1 */, cp0->Peer_Address /* 6 */);
1004433c:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
1004433e:	7163      	strb	r3, [r4, #5]
10044340:	3a07      	subs	r2, #7
}
10044342:	0010      	movs	r0, r2
10044344:	bd10      	pop	{r4, pc}

10044346 <aci_gap_numeric_comparison_value_confirm_yesno_process>:
uint16_t aci_gap_numeric_comparison_value_confirm_yesno_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044346:	b510      	push	{r4, lr}
10044348:	0014      	movs	r4, r2
		return 0;
1004434a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004434c:	2b06      	cmp	r3, #6
1004434e:	d913      	bls.n	10044378 <aci_gap_numeric_comparison_value_confirm_yesno_process+0x32>
	*status = aci_gap_numeric_comparison_value_confirm_yesno(cp0->Connection_Handle /* 2 */, cp0->Confirm_Yes_No /* 1 */);
10044350:	7842      	ldrb	r2, [r0, #1]
10044352:	78c1      	ldrb	r1, [r0, #3]
10044354:	7880      	ldrb	r0, [r0, #2]
10044356:	0200      	lsls	r0, r0, #8
10044358:	4310      	orrs	r0, r2
1004435a:	f7fd fc1d 	bl	10041b98 <aci_gap_numeric_comparison_value_confirm_yesno>
	buffer_out[0] = 0x04;
1004435e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044360:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044362:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044364:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044366:	3b03      	subs	r3, #3
10044368:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa5;
1004436a:	33a4      	adds	r3, #164	; 0xa4
1004436c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
1004436e:	3357      	adds	r3, #87	; 0x57
	buffer_out[1] = 0x0E;
10044370:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_numeric_comparison_value_confirm_yesno(cp0->Connection_Handle /* 2 */, cp0->Confirm_Yes_No /* 1 */);
10044372:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10044374:	7163      	strb	r3, [r4, #5]
10044376:	3a07      	subs	r2, #7
}
10044378:	0010      	movs	r0, r2
1004437a:	bd10      	pop	{r4, pc}

1004437c <aci_gap_passkey_input_process>:
uint16_t aci_gap_passkey_input_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004437c:	b510      	push	{r4, lr}
1004437e:	0014      	movs	r4, r2
		return 0;
10044380:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044382:	2b06      	cmp	r3, #6
10044384:	d913      	bls.n	100443ae <aci_gap_passkey_input_process+0x32>
	*status = aci_gap_passkey_input(cp0->Connection_Handle /* 2 */, cp0->Input_Type /* 1 */);
10044386:	7842      	ldrb	r2, [r0, #1]
10044388:	78c1      	ldrb	r1, [r0, #3]
1004438a:	7880      	ldrb	r0, [r0, #2]
1004438c:	0200      	lsls	r0, r0, #8
1004438e:	4310      	orrs	r0, r2
10044390:	f7fd fbfe 	bl	10041b90 <aci_gap_passkey_input>
	buffer_out[0] = 0x04;
10044394:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044396:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044398:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
1004439a:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004439c:	3b03      	subs	r3, #3
1004439e:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa6;
100443a0:	33a5      	adds	r3, #165	; 0xa5
100443a2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100443a4:	3356      	adds	r3, #86	; 0x56
	buffer_out[1] = 0x0E;
100443a6:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_passkey_input(cp0->Connection_Handle /* 2 */, cp0->Input_Type /* 1 */);
100443a8:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
100443aa:	7163      	strb	r3, [r4, #5]
100443ac:	3a07      	subs	r2, #7
}
100443ae:	0010      	movs	r0, r2
100443b0:	bd10      	pop	{r4, pc}

100443b2 <aci_gap_set_oob_data_process>:
uint16_t aci_gap_set_oob_data_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100443b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
100443b4:	0005      	movs	r5, r0
100443b6:	0014      	movs	r4, r2
		return 0;
100443b8:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100443ba:	2b06      	cmp	r3, #6
100443bc:	d917      	bls.n	100443ee <aci_gap_set_oob_data_process+0x3c>
	*status = aci_gap_set_oob_data(cp0->Device_Type /* 1 */, cp0->Address_Type /* 1 */, cp0->Address /* 6 */, cp0->OOB_Data_Type /* 1 */, cp0->OOB_Data_Len /* 1 */, cp0->OOB_Data /* 16 */);
100443be:	7a6b      	ldrb	r3, [r5, #9]
100443c0:	78a9      	ldrb	r1, [r5, #2]
100443c2:	7868      	ldrb	r0, [r5, #1]
100443c4:	1cea      	adds	r2, r5, #3
100443c6:	1c6e      	adds	r6, r5, #1
100443c8:	350b      	adds	r5, #11
100443ca:	9501      	str	r5, [sp, #4]
100443cc:	7a75      	ldrb	r5, [r6, #9]
100443ce:	9500      	str	r5, [sp, #0]
100443d0:	f002 fbf1 	bl	10046bb6 <aci_gap_set_oob_data>
	buffer_out[0] = 0x04;
100443d4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100443d6:	220e      	movs	r2, #14
	*status = aci_gap_set_oob_data(cp0->Device_Type /* 1 */, cp0->Address_Type /* 1 */, cp0->Address /* 6 */, cp0->OOB_Data_Type /* 1 */, cp0->OOB_Data_Len /* 1 */, cp0->OOB_Data /* 16 */);
100443d8:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
100443da:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
100443dc:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100443de:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100443e0:	3b03      	subs	r3, #3
100443e2:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xa8;
100443e4:	33a7      	adds	r3, #167	; 0xa7
100443e6:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
100443e8:	3354      	adds	r3, #84	; 0x54
	buffer_out[1] = 0x0E;
100443ea:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfc;
100443ec:	7163      	strb	r3, [r4, #5]
}
100443ee:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

100443f0 <aci_gap_remove_bonded_device_process>:
uint16_t aci_gap_remove_bonded_device_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100443f0:	b510      	push	{r4, lr}
100443f2:	0014      	movs	r4, r2
		return 0;
100443f4:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100443f6:	2b06      	cmp	r3, #6
100443f8:	d910      	bls.n	1004441c <aci_gap_remove_bonded_device_process+0x2c>
	*status = aci_gap_remove_bonded_device(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */);
100443fa:	1c81      	adds	r1, r0, #2
100443fc:	7840      	ldrb	r0, [r0, #1]
100443fe:	f002 fad1 	bl	100469a4 <aci_gap_remove_bonded_device>
	buffer_out[0] = 0x04;
10044402:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044404:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044406:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044408:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004440a:	3b03      	subs	r3, #3
1004440c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0xaa;
1004440e:	33a9      	adds	r3, #169	; 0xa9
10044410:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfc;
10044412:	3352      	adds	r3, #82	; 0x52
	buffer_out[1] = 0x0E;
10044414:	7062      	strb	r2, [r4, #1]
	*status = aci_gap_remove_bonded_device(cp0->Peer_Identity_Address_Type /* 1 */, cp0->Peer_Identity_Address /* 6 */);
10044416:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfc;
10044418:	7163      	strb	r3, [r4, #5]
1004441a:	3a07      	subs	r2, #7
}
1004441c:	0010      	movs	r0, r2
1004441e:	bd10      	pop	{r4, pc}

10044420 <aci_gatt_init_process>:
uint16_t aci_gatt_init_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044420:	b510      	push	{r4, lr}
		return 0;
10044422:	2000      	movs	r0, #0
uint16_t aci_gatt_init_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044424:	0014      	movs	r4, r2
	if (buffer_out_max_length < (1 + 6)) {
10044426:	2b06      	cmp	r3, #6
10044428:	d90d      	bls.n	10044446 <aci_gatt_init_process+0x26>
	*status = aci_gatt_init();
1004442a:	f002 fddd 	bl	10046fe8 <aci_gatt_init>
	buffer_out[0] = 0x04;
1004442e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044430:	220e      	movs	r2, #14
	*status = aci_gatt_init();
10044432:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044434:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044436:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044438:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004443a:	3b03      	subs	r3, #3
1004443c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x01;
1004443e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044440:	33fc      	adds	r3, #252	; 0xfc
	buffer_out[1] = 0x0E;
10044442:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfd;
10044444:	7163      	strb	r3, [r4, #5]
}
10044446:	bd10      	pop	{r4, pc}

10044448 <aci_gatt_update_char_value_process>:
uint16_t aci_gatt_update_char_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044448:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004444a:	0014      	movs	r4, r2
		return 0;
1004444c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004444e:	2b06      	cmp	r3, #6
10044450:	d91b      	bls.n	1004448a <aci_gatt_update_char_value_process+0x42>
	*status = aci_gatt_update_char_value(cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Val_Offset /* 1 */, cp0->Char_Value_Length /* 1 */, cp0->Char_Value /* cp0->Char_Value_Length * (sizeof(uint8_t)) */);
10044452:	7901      	ldrb	r1, [r0, #4]
10044454:	78c5      	ldrb	r5, [r0, #3]
10044456:	0209      	lsls	r1, r1, #8
10044458:	4329      	orrs	r1, r5
1004445a:	7885      	ldrb	r5, [r0, #2]
1004445c:	7847      	ldrb	r7, [r0, #1]
1004445e:	022d      	lsls	r5, r5, #8
10044460:	7983      	ldrb	r3, [r0, #6]
10044462:	7942      	ldrb	r2, [r0, #5]
10044464:	433d      	orrs	r5, r7
10044466:	3007      	adds	r0, #7
10044468:	9000      	str	r0, [sp, #0]
1004446a:	0028      	movs	r0, r5
1004446c:	f002 fe3c 	bl	100470e8 <aci_gatt_update_char_value>
	buffer_out[0] = 0x04;
10044470:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044472:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044474:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044476:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044478:	3b03      	subs	r3, #3
1004447a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x06;
1004447c:	3305      	adds	r3, #5
1004447e:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044480:	33f7      	adds	r3, #247	; 0xf7
	buffer_out[1] = 0x0E;
10044482:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_update_char_value(cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Val_Offset /* 1 */, cp0->Char_Value_Length /* 1 */, cp0->Char_Value /* cp0->Char_Value_Length * (sizeof(uint8_t)) */);
10044484:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044486:	7163      	strb	r3, [r4, #5]
10044488:	3a07      	subs	r2, #7
}
1004448a:	0010      	movs	r0, r2
1004448c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004448e <aci_gatt_del_char_process>:
uint16_t aci_gatt_del_char_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004448e:	b570      	push	{r4, r5, r6, lr}
10044490:	0005      	movs	r5, r0
10044492:	0014      	movs	r4, r2
		return 0;
10044494:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044496:	2b06      	cmp	r3, #6
10044498:	d915      	bls.n	100444c6 <aci_gatt_del_char_process+0x38>
	*status = aci_gatt_del_char(cp0->Serv_Handle /* 2 */, cp0->Char_Handle /* 2 */);
1004449a:	7929      	ldrb	r1, [r5, #4]
1004449c:	78ea      	ldrb	r2, [r5, #3]
1004449e:	78a8      	ldrb	r0, [r5, #2]
100444a0:	0209      	lsls	r1, r1, #8
100444a2:	4311      	orrs	r1, r2
100444a4:	786a      	ldrb	r2, [r5, #1]
100444a6:	0200      	lsls	r0, r0, #8
100444a8:	4310      	orrs	r0, r2
100444aa:	f002 fd3c 	bl	10046f26 <aci_gatt_del_char>
	buffer_out[0] = 0x04;
100444ae:	2304      	movs	r3, #4
	*status = aci_gatt_del_char(cp0->Serv_Handle /* 2 */, cp0->Char_Handle /* 2 */);
100444b0:	71a0      	strb	r0, [r4, #6]
	buffer_out[1] = 0x0E;
100444b2:	220e      	movs	r2, #14
	buffer_out[4] = 0x07;
100444b4:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
100444b6:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100444b8:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100444ba:	3b03      	subs	r3, #3
100444bc:	70e3      	strb	r3, [r4, #3]
	buffer_out[5] = 0xfd;
100444be:	33fc      	adds	r3, #252	; 0xfc
	buffer_out[1] = 0x0E;
100444c0:	7062      	strb	r2, [r4, #1]
	buffer_out[4] = 0x07;
100444c2:	7120      	strb	r0, [r4, #4]
	buffer_out[5] = 0xfd;
100444c4:	7163      	strb	r3, [r4, #5]
}
100444c6:	bd70      	pop	{r4, r5, r6, pc}

100444c8 <aci_gatt_del_service_process>:
uint16_t aci_gatt_del_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100444c8:	b510      	push	{r4, lr}
100444ca:	0014      	movs	r4, r2
		return 0;
100444cc:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100444ce:	2b06      	cmp	r3, #6
100444d0:	d912      	bls.n	100444f8 <aci_gatt_del_service_process+0x30>
	*status = aci_gatt_del_service(cp0->Serv_Handle /* 2 */);
100444d2:	7843      	ldrb	r3, [r0, #1]
100444d4:	7880      	ldrb	r0, [r0, #2]
100444d6:	0200      	lsls	r0, r0, #8
100444d8:	4318      	orrs	r0, r3
100444da:	f002 fd2c 	bl	10046f36 <aci_gatt_del_service>
	buffer_out[0] = 0x04;
100444de:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
100444e0:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
100444e2:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100444e4:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
100444e6:	3b03      	subs	r3, #3
100444e8:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x08;
100444ea:	3307      	adds	r3, #7
100444ec:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
100444ee:	33f5      	adds	r3, #245	; 0xf5
	buffer_out[1] = 0x0E;
100444f0:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_del_service(cp0->Serv_Handle /* 2 */);
100444f2:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
100444f4:	7163      	strb	r3, [r4, #5]
100444f6:	3a07      	subs	r2, #7
}
100444f8:	0010      	movs	r0, r2
100444fa:	bd10      	pop	{r4, pc}

100444fc <aci_gatt_del_include_service_process>:
uint16_t aci_gatt_del_include_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100444fc:	b510      	push	{r4, lr}
100444fe:	0014      	movs	r4, r2
		return 0;
10044500:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044502:	2b06      	cmp	r3, #6
10044504:	d916      	bls.n	10044534 <aci_gatt_del_include_service_process+0x38>
	*status = aci_gatt_del_include_service(cp0->Serv_Handle /* 2 */, cp0->Include_Handle /* 2 */);
10044506:	7901      	ldrb	r1, [r0, #4]
10044508:	78c2      	ldrb	r2, [r0, #3]
1004450a:	0209      	lsls	r1, r1, #8
1004450c:	4311      	orrs	r1, r2
1004450e:	7842      	ldrb	r2, [r0, #1]
10044510:	7880      	ldrb	r0, [r0, #2]
10044512:	0200      	lsls	r0, r0, #8
10044514:	4310      	orrs	r0, r2
10044516:	f002 fd0a 	bl	10046f2e <aci_gatt_del_include_service>
	buffer_out[0] = 0x04;
1004451a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004451c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
1004451e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044520:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044522:	3b03      	subs	r3, #3
10044524:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x09;
10044526:	3308      	adds	r3, #8
10044528:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
1004452a:	33f4      	adds	r3, #244	; 0xf4
	buffer_out[1] = 0x0E;
1004452c:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_del_include_service(cp0->Serv_Handle /* 2 */, cp0->Include_Handle /* 2 */);
1004452e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044530:	7163      	strb	r3, [r4, #5]
10044532:	3a07      	subs	r2, #7
}
10044534:	0010      	movs	r0, r2
10044536:	bd10      	pop	{r4, pc}

10044538 <aci_gatt_set_event_mask_process>:
uint16_t aci_gatt_set_event_mask_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044538:	b510      	push	{r4, lr}
1004453a:	0014      	movs	r4, r2
		return 0;
1004453c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004453e:	2b06      	cmp	r3, #6
10044540:	d919      	bls.n	10044576 <aci_gatt_set_event_mask_process+0x3e>
	*status = aci_gatt_set_event_mask(cp0->GATT_Evt_Mask /* 4 */);
10044542:	1c42      	adds	r2, r0, #1
10044544:	7853      	ldrb	r3, [r2, #1]
10044546:	7840      	ldrb	r0, [r0, #1]
10044548:	021b      	lsls	r3, r3, #8
1004454a:	4303      	orrs	r3, r0
1004454c:	7890      	ldrb	r0, [r2, #2]
1004454e:	0400      	lsls	r0, r0, #16
10044550:	4303      	orrs	r3, r0
10044552:	78d0      	ldrb	r0, [r2, #3]
10044554:	0600      	lsls	r0, r0, #24
10044556:	4318      	orrs	r0, r3
10044558:	f002 fdae 	bl	100470b8 <aci_gatt_set_event_mask>
	buffer_out[0] = 0x04;
1004455c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
1004455e:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044560:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044562:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044564:	3b03      	subs	r3, #3
10044566:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0a;
10044568:	3309      	adds	r3, #9
1004456a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
1004456c:	33f3      	adds	r3, #243	; 0xf3
	buffer_out[1] = 0x0E;
1004456e:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_set_event_mask(cp0->GATT_Evt_Mask /* 4 */);
10044570:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044572:	7163      	strb	r3, [r4, #5]
10044574:	3a07      	subs	r2, #7
}
10044576:	0010      	movs	r0, r2
10044578:	bd10      	pop	{r4, pc}

1004457a <aci_gatt_exchange_config_process>:
uint16_t aci_gatt_exchange_config_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004457a:	b510      	push	{r4, lr}
1004457c:	0014      	movs	r4, r2
		return 0;
1004457e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044580:	2b06      	cmp	r3, #6
10044582:	d912      	bls.n	100445aa <aci_gatt_exchange_config_process+0x30>
	*status = aci_gatt_exchange_config(cp0->Connection_Handle /* 2 */);
10044584:	7843      	ldrb	r3, [r0, #1]
10044586:	7880      	ldrb	r0, [r0, #2]
10044588:	0200      	lsls	r0, r0, #8
1004458a:	4318      	orrs	r0, r3
1004458c:	f002 fd0d 	bl	10046faa <aci_gatt_exchange_config>
	buffer_out[0] = 0x04;
10044590:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044592:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044594:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044596:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044598:	3b03      	subs	r3, #3
1004459a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x0b;
1004459c:	330a      	adds	r3, #10
1004459e:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
100445a0:	33f2      	adds	r3, #242	; 0xf2
	buffer_out[1] = 0x0F;
100445a2:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_exchange_config(cp0->Connection_Handle /* 2 */);
100445a4:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
100445a6:	71a3      	strb	r3, [r4, #6]
100445a8:	3a08      	subs	r2, #8
}
100445aa:	0010      	movs	r0, r2
100445ac:	bd10      	pop	{r4, pc}

100445ae <aci_att_find_info_req_process>:
uint16_t aci_att_find_info_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100445ae:	b570      	push	{r4, r5, r6, lr}
100445b0:	0014      	movs	r4, r2
		return 0;
100445b2:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100445b4:	2b06      	cmp	r3, #6
100445b6:	d91a      	bls.n	100445ee <aci_att_find_info_req_process+0x40>
	*status = aci_att_find_info_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */);
100445b8:	7982      	ldrb	r2, [r0, #6]
100445ba:	7941      	ldrb	r1, [r0, #5]
100445bc:	0212      	lsls	r2, r2, #8
100445be:	430a      	orrs	r2, r1
100445c0:	7901      	ldrb	r1, [r0, #4]
100445c2:	78c5      	ldrb	r5, [r0, #3]
100445c4:	0209      	lsls	r1, r1, #8
100445c6:	4329      	orrs	r1, r5
100445c8:	7845      	ldrb	r5, [r0, #1]
100445ca:	7880      	ldrb	r0, [r0, #2]
100445cc:	0200      	lsls	r0, r0, #8
100445ce:	4328      	orrs	r0, r5
100445d0:	f002 fc07 	bl	10046de2 <aci_att_find_info_req>
	buffer_out[0] = 0x04;
100445d4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100445d6:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
100445d8:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100445da:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
100445dc:	3b03      	subs	r3, #3
100445de:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x0c;
100445e0:	330b      	adds	r3, #11
100445e2:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
100445e4:	33f1      	adds	r3, #241	; 0xf1
	buffer_out[1] = 0x0F;
100445e6:	7062      	strb	r2, [r4, #1]
	*status = aci_att_find_info_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */);
100445e8:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
100445ea:	71a3      	strb	r3, [r4, #6]
100445ec:	3a08      	subs	r2, #8
}
100445ee:	0010      	movs	r0, r2
100445f0:	bd70      	pop	{r4, r5, r6, pc}

100445f2 <aci_att_find_by_type_value_req_process>:
uint16_t aci_att_find_by_type_value_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100445f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100445f4:	0007      	movs	r7, r0
100445f6:	0015      	movs	r5, r2
		return 0;
100445f8:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100445fa:	2b06      	cmp	r3, #6
100445fc:	d924      	bls.n	10044648 <aci_att_find_by_type_value_req_process+0x56>
	*status = aci_att_find_by_type_value_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
100445fe:	7a3b      	ldrb	r3, [r7, #8]
10044600:	79fa      	ldrb	r2, [r7, #7]
10044602:	021b      	lsls	r3, r3, #8
10044604:	4313      	orrs	r3, r2
10044606:	79ba      	ldrb	r2, [r7, #6]
10044608:	7979      	ldrb	r1, [r7, #5]
1004460a:	0212      	lsls	r2, r2, #8
1004460c:	430a      	orrs	r2, r1
1004460e:	7939      	ldrb	r1, [r7, #4]
10044610:	78f8      	ldrb	r0, [r7, #3]
10044612:	78be      	ldrb	r6, [r7, #2]
10044614:	0209      	lsls	r1, r1, #8
10044616:	1c7c      	adds	r4, r7, #1
10044618:	4301      	orrs	r1, r0
1004461a:	7878      	ldrb	r0, [r7, #1]
1004461c:	370a      	adds	r7, #10
1004461e:	9701      	str	r7, [sp, #4]
10044620:	0236      	lsls	r6, r6, #8
10044622:	4306      	orrs	r6, r0
10044624:	7a20      	ldrb	r0, [r4, #8]
10044626:	9000      	str	r0, [sp, #0]
10044628:	0030      	movs	r0, r6
1004462a:	f002 fbcc 	bl	10046dc6 <aci_att_find_by_type_value_req>
	buffer_out[0] = 0x04;
1004462e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044630:	220f      	movs	r2, #15
	*status = aci_att_find_by_type_value_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044632:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0xfd;
10044634:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044636:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10044638:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
1004463a:	3b03      	subs	r3, #3
1004463c:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x0d;
1004463e:	330c      	adds	r3, #12
10044640:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0xfd;
10044642:	33f0      	adds	r3, #240	; 0xf0
	buffer_out[1] = 0x0F;
10044644:	706a      	strb	r2, [r5, #1]
	buffer_out[6] = 0xfd;
10044646:	71ab      	strb	r3, [r5, #6]
}
10044648:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004464a <aci_att_read_by_type_req_process>:
uint16_t aci_att_read_by_type_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004464a:	b5f0      	push	{r4, r5, r6, r7, lr}
1004464c:	0007      	movs	r7, r0
1004464e:	b087      	sub	sp, #28
10044650:	0014      	movs	r4, r2
		return 0;
10044652:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044654:	2b06      	cmp	r3, #6
10044656:	d92b      	bls.n	100446b0 <aci_att_read_by_type_req_process+0x66>
	Osal_MemCpy((void *) &UUID.UUID_16, (const void *) &cp0->UUID.UUID_16, (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)));
10044658:	0039      	movs	r1, r7
1004465a:	1c7d      	adds	r5, r7, #1
1004465c:	79ab      	ldrb	r3, [r5, #6]
1004465e:	3108      	adds	r1, #8
10044660:	2202      	movs	r2, #2
10044662:	2b01      	cmp	r3, #1
10044664:	d003      	beq.n	1004466e <aci_att_read_by_type_req_process+0x24>
10044666:	3b02      	subs	r3, #2
10044668:	425a      	negs	r2, r3
1004466a:	415a      	adcs	r2, r3
1004466c:	0112      	lsls	r2, r2, #4
1004466e:	ae02      	add	r6, sp, #8
10044670:	0030      	movs	r0, r6
10044672:	f7fc f886 	bl	10040782 <Osal_MemCpy>
	*status = aci_att_read_by_type_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
10044676:	796a      	ldrb	r2, [r5, #5]
10044678:	7929      	ldrb	r1, [r5, #4]
1004467a:	0212      	lsls	r2, r2, #8
1004467c:	430a      	orrs	r2, r1
1004467e:	78e9      	ldrb	r1, [r5, #3]
10044680:	78a8      	ldrb	r0, [r5, #2]
10044682:	0209      	lsls	r1, r1, #8
10044684:	4301      	orrs	r1, r0
10044686:	7868      	ldrb	r0, [r5, #1]
10044688:	787f      	ldrb	r7, [r7, #1]
1004468a:	0200      	lsls	r0, r0, #8
1004468c:	79ab      	ldrb	r3, [r5, #6]
1004468e:	4338      	orrs	r0, r7
10044690:	9600      	str	r6, [sp, #0]
10044692:	f002 fbc8 	bl	10046e26 <aci_att_read_by_type_req>
	buffer_out[0] = 0x04;
10044696:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044698:	220f      	movs	r2, #15
	*status = aci_att_read_by_type_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
1004469a:	70e0      	strb	r0, [r4, #3]
1004469c:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
1004469e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100446a0:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
100446a2:	3b03      	subs	r3, #3
100446a4:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x0e;
100446a6:	330d      	adds	r3, #13
100446a8:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
100446aa:	33ef      	adds	r3, #239	; 0xef
	buffer_out[1] = 0x0F;
100446ac:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
100446ae:	71a3      	strb	r3, [r4, #6]
}
100446b0:	b007      	add	sp, #28
100446b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100446b4 <aci_att_read_by_group_type_req_process>:
uint16_t aci_att_read_by_group_type_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100446b4:	b5f0      	push	{r4, r5, r6, r7, lr}
100446b6:	0007      	movs	r7, r0
100446b8:	b087      	sub	sp, #28
100446ba:	0014      	movs	r4, r2
		return 0;
100446bc:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100446be:	2b06      	cmp	r3, #6
100446c0:	d92a      	bls.n	10044718 <aci_att_read_by_group_type_req_process+0x64>
	Osal_MemCpy((void *) &UUID.UUID_16, (const void *) &cp0->UUID.UUID_16, (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)));
100446c2:	0039      	movs	r1, r7
100446c4:	1c7d      	adds	r5, r7, #1
100446c6:	79ab      	ldrb	r3, [r5, #6]
100446c8:	3108      	adds	r1, #8
100446ca:	2202      	movs	r2, #2
100446cc:	2b01      	cmp	r3, #1
100446ce:	d003      	beq.n	100446d8 <aci_att_read_by_group_type_req_process+0x24>
100446d0:	3b02      	subs	r3, #2
100446d2:	425a      	negs	r2, r3
100446d4:	415a      	adcs	r2, r3
100446d6:	0112      	lsls	r2, r2, #4
100446d8:	ae02      	add	r6, sp, #8
100446da:	0030      	movs	r0, r6
100446dc:	f7fc f851 	bl	10040782 <Osal_MemCpy>
	*status = aci_att_read_by_group_type_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
100446e0:	796a      	ldrb	r2, [r5, #5]
100446e2:	7929      	ldrb	r1, [r5, #4]
100446e4:	0212      	lsls	r2, r2, #8
100446e6:	430a      	orrs	r2, r1
100446e8:	78e9      	ldrb	r1, [r5, #3]
100446ea:	78a8      	ldrb	r0, [r5, #2]
100446ec:	0209      	lsls	r1, r1, #8
100446ee:	4301      	orrs	r1, r0
100446f0:	7868      	ldrb	r0, [r5, #1]
100446f2:	787f      	ldrb	r7, [r7, #1]
100446f4:	0200      	lsls	r0, r0, #8
100446f6:	79ab      	ldrb	r3, [r5, #6]
100446f8:	4338      	orrs	r0, r7
100446fa:	9600      	str	r6, [sp, #0]
100446fc:	f002 fb7f 	bl	10046dfe <aci_att_read_by_group_type_req>
	buffer_out[0] = 0x04;
10044700:	2204      	movs	r2, #4
	buffer_out[1] = 0x0F;
10044702:	230f      	movs	r3, #15
	*status = aci_att_read_by_group_type_req(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
10044704:	70e0      	strb	r0, [r4, #3]
10044706:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044708:	7022      	strb	r2, [r4, #0]
	buffer_out[1] = 0x0F;
1004470a:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = output_size + 3;
1004470c:	70a2      	strb	r2, [r4, #2]
	buffer_out[5] = 0x0f;
1004470e:	7163      	strb	r3, [r4, #5]
	buffer_out[4] = 0x01;
10044710:	3a03      	subs	r2, #3
	buffer_out[6] = 0xfd;
10044712:	33ee      	adds	r3, #238	; 0xee
	buffer_out[4] = 0x01;
10044714:	7122      	strb	r2, [r4, #4]
	buffer_out[6] = 0xfd;
10044716:	71a3      	strb	r3, [r4, #6]
}
10044718:	b007      	add	sp, #28
1004471a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004471c <aci_att_prepare_write_req_process>:
uint16_t aci_att_prepare_write_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004471c:	b573      	push	{r0, r1, r4, r5, r6, lr}
1004471e:	0006      	movs	r6, r0
10044720:	0014      	movs	r4, r2
		return 0;
10044722:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044724:	2b06      	cmp	r3, #6
10044726:	d91e      	bls.n	10044766 <aci_att_prepare_write_req_process+0x4a>
	*status = aci_att_prepare_write_req(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044728:	79b2      	ldrb	r2, [r6, #6]
1004472a:	7971      	ldrb	r1, [r6, #5]
1004472c:	0212      	lsls	r2, r2, #8
1004472e:	430a      	orrs	r2, r1
10044730:	7931      	ldrb	r1, [r6, #4]
10044732:	78f0      	ldrb	r0, [r6, #3]
10044734:	78b5      	ldrb	r5, [r6, #2]
10044736:	0209      	lsls	r1, r1, #8
10044738:	4301      	orrs	r1, r0
1004473a:	7870      	ldrb	r0, [r6, #1]
1004473c:	022d      	lsls	r5, r5, #8
1004473e:	79f3      	ldrb	r3, [r6, #7]
10044740:	4305      	orrs	r5, r0
10044742:	3608      	adds	r6, #8
10044744:	9600      	str	r6, [sp, #0]
10044746:	0028      	movs	r0, r5
10044748:	f002 fb4f 	bl	10046dea <aci_att_prepare_write_req>
	buffer_out[0] = 0x04;
1004474c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004474e:	220f      	movs	r2, #15
	*status = aci_att_prepare_write_req(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044750:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044752:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044754:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044756:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044758:	3b03      	subs	r3, #3
1004475a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x10;
1004475c:	189b      	adds	r3, r3, r2
1004475e:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044760:	33ed      	adds	r3, #237	; 0xed
	buffer_out[1] = 0x0F;
10044762:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
10044764:	71a3      	strb	r3, [r4, #6]
}
10044766:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10044768 <aci_att_execute_write_req_process>:
uint16_t aci_att_execute_write_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044768:	b510      	push	{r4, lr}
1004476a:	0014      	movs	r4, r2
		return 0;
1004476c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004476e:	2b06      	cmp	r3, #6
10044770:	d913      	bls.n	1004479a <aci_att_execute_write_req_process+0x32>
	*status = aci_att_execute_write_req(cp0->Connection_Handle /* 2 */, cp0->Execute /* 1 */);
10044772:	7842      	ldrb	r2, [r0, #1]
10044774:	78c1      	ldrb	r1, [r0, #3]
10044776:	7880      	ldrb	r0, [r0, #2]
10044778:	0200      	lsls	r0, r0, #8
1004477a:	4310      	orrs	r0, r2
1004477c:	f002 fb1f 	bl	10046dbe <aci_att_execute_write_req>
	buffer_out[0] = 0x04;
10044780:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044782:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044784:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044786:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044788:	3b03      	subs	r3, #3
1004478a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x11;
1004478c:	3310      	adds	r3, #16
1004478e:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044790:	33ec      	adds	r3, #236	; 0xec
	buffer_out[1] = 0x0F;
10044792:	7062      	strb	r2, [r4, #1]
	*status = aci_att_execute_write_req(cp0->Connection_Handle /* 2 */, cp0->Execute /* 1 */);
10044794:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044796:	71a3      	strb	r3, [r4, #6]
10044798:	3a08      	subs	r2, #8
}
1004479a:	0010      	movs	r0, r2
1004479c:	bd10      	pop	{r4, pc}

1004479e <aci_gatt_disc_all_primary_services_process>:
uint16_t aci_gatt_disc_all_primary_services_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004479e:	b510      	push	{r4, lr}
100447a0:	0014      	movs	r4, r2
		return 0;
100447a2:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
100447a4:	2b06      	cmp	r3, #6
100447a6:	d912      	bls.n	100447ce <aci_gatt_disc_all_primary_services_process+0x30>
	*status = aci_gatt_disc_all_primary_services(cp0->Connection_Handle /* 2 */);
100447a8:	7843      	ldrb	r3, [r0, #1]
100447aa:	7880      	ldrb	r0, [r0, #2]
100447ac:	0200      	lsls	r0, r0, #8
100447ae:	4318      	orrs	r0, r3
100447b0:	f002 fbd3 	bl	10046f5a <aci_gatt_disc_all_primary_services>
	buffer_out[0] = 0x04;
100447b4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100447b6:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
100447b8:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100447ba:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
100447bc:	3b03      	subs	r3, #3
100447be:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x12;
100447c0:	3311      	adds	r3, #17
100447c2:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
100447c4:	33eb      	adds	r3, #235	; 0xeb
	buffer_out[1] = 0x0F;
100447c6:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_disc_all_primary_services(cp0->Connection_Handle /* 2 */);
100447c8:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
100447ca:	71a3      	strb	r3, [r4, #6]
100447cc:	3a08      	subs	r2, #8
}
100447ce:	0010      	movs	r0, r2
100447d0:	bd10      	pop	{r4, pc}

100447d2 <aci_gatt_disc_primary_service_by_uuid_process>:
uint16_t aci_gatt_disc_primary_service_by_uuid_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100447d2:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
100447d4:	0006      	movs	r6, r0
100447d6:	0014      	movs	r4, r2
		return 0;
100447d8:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100447da:	2b06      	cmp	r3, #6
100447dc:	d921      	bls.n	10044822 <aci_gatt_disc_primary_service_by_uuid_process+0x50>
	Osal_MemCpy((void *) &UUID.UUID_16, (const void *) &cp0->UUID.UUID_16, (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)));
100447de:	1c75      	adds	r5, r6, #1
100447e0:	78ab      	ldrb	r3, [r5, #2]
100447e2:	1d31      	adds	r1, r6, #4
100447e4:	2202      	movs	r2, #2
100447e6:	2b01      	cmp	r3, #1
100447e8:	d003      	beq.n	100447f2 <aci_gatt_disc_primary_service_by_uuid_process+0x20>
100447ea:	3b02      	subs	r3, #2
100447ec:	425a      	negs	r2, r3
100447ee:	415a      	adcs	r2, r3
100447f0:	0112      	lsls	r2, r2, #4
100447f2:	4668      	mov	r0, sp
100447f4:	f7fb ffc5 	bl	10040782 <Osal_MemCpy>
	*status = aci_gatt_disc_primary_service_by_uuid(cp0->Connection_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
100447f8:	7868      	ldrb	r0, [r5, #1]
100447fa:	7873      	ldrb	r3, [r6, #1]
100447fc:	0200      	lsls	r0, r0, #8
100447fe:	4318      	orrs	r0, r3
10044800:	466a      	mov	r2, sp
10044802:	78a9      	ldrb	r1, [r5, #2]
10044804:	f002 fbc1 	bl	10046f8a <aci_gatt_disc_primary_service_by_uuid>
	buffer_out[0] = 0x04;
10044808:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004480a:	220f      	movs	r2, #15
	*status = aci_gatt_disc_primary_service_by_uuid(cp0->Connection_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
1004480c:	70e0      	strb	r0, [r4, #3]
1004480e:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044810:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044812:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044814:	3b03      	subs	r3, #3
10044816:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x13;
10044818:	3312      	adds	r3, #18
1004481a:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
1004481c:	33ea      	adds	r3, #234	; 0xea
	buffer_out[1] = 0x0F;
1004481e:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
10044820:	71a3      	strb	r3, [r4, #6]
}
10044822:	b004      	add	sp, #16
10044824:	bd70      	pop	{r4, r5, r6, pc}

10044826 <aci_gatt_find_included_services_process>:
uint16_t aci_gatt_find_included_services_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044826:	b570      	push	{r4, r5, r6, lr}
10044828:	0014      	movs	r4, r2
		return 0;
1004482a:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004482c:	2b06      	cmp	r3, #6
1004482e:	d91a      	bls.n	10044866 <aci_gatt_find_included_services_process+0x40>
	*status = aci_gatt_find_included_services(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */);
10044830:	7982      	ldrb	r2, [r0, #6]
10044832:	7941      	ldrb	r1, [r0, #5]
10044834:	0212      	lsls	r2, r2, #8
10044836:	430a      	orrs	r2, r1
10044838:	7901      	ldrb	r1, [r0, #4]
1004483a:	78c5      	ldrb	r5, [r0, #3]
1004483c:	0209      	lsls	r1, r1, #8
1004483e:	4329      	orrs	r1, r5
10044840:	7845      	ldrb	r5, [r0, #1]
10044842:	7880      	ldrb	r0, [r0, #2]
10044844:	0200      	lsls	r0, r0, #8
10044846:	4328      	orrs	r0, r5
10044848:	f002 fbb3 	bl	10046fb2 <aci_gatt_find_included_services>
	buffer_out[0] = 0x04;
1004484c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004484e:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044850:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044852:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044854:	3b03      	subs	r3, #3
10044856:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x14;
10044858:	3313      	adds	r3, #19
1004485a:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
1004485c:	33e9      	adds	r3, #233	; 0xe9
	buffer_out[1] = 0x0F;
1004485e:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_find_included_services(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */);
10044860:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044862:	71a3      	strb	r3, [r4, #6]
10044864:	3a08      	subs	r2, #8
}
10044866:	0010      	movs	r0, r2
10044868:	bd70      	pop	{r4, r5, r6, pc}

1004486a <aci_gatt_disc_all_char_of_service_process>:
uint16_t aci_gatt_disc_all_char_of_service_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004486a:	b570      	push	{r4, r5, r6, lr}
1004486c:	0014      	movs	r4, r2
		return 0;
1004486e:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044870:	2b06      	cmp	r3, #6
10044872:	d91a      	bls.n	100448aa <aci_gatt_disc_all_char_of_service_process+0x40>
	*status = aci_gatt_disc_all_char_of_service(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */);
10044874:	7982      	ldrb	r2, [r0, #6]
10044876:	7941      	ldrb	r1, [r0, #5]
10044878:	0212      	lsls	r2, r2, #8
1004487a:	430a      	orrs	r2, r1
1004487c:	7901      	ldrb	r1, [r0, #4]
1004487e:	78c5      	ldrb	r5, [r0, #3]
10044880:	0209      	lsls	r1, r1, #8
10044882:	4329      	orrs	r1, r5
10044884:	7845      	ldrb	r5, [r0, #1]
10044886:	7880      	ldrb	r0, [r0, #2]
10044888:	0200      	lsls	r0, r0, #8
1004488a:	4328      	orrs	r0, r5
1004488c:	f002 fb61 	bl	10046f52 <aci_gatt_disc_all_char_of_service>
	buffer_out[0] = 0x04;
10044890:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044892:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044894:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044896:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044898:	3b03      	subs	r3, #3
1004489a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x15;
1004489c:	3314      	adds	r3, #20
1004489e:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
100448a0:	33e8      	adds	r3, #232	; 0xe8
	buffer_out[1] = 0x0F;
100448a2:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_disc_all_char_of_service(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */);
100448a4:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
100448a6:	71a3      	strb	r3, [r4, #6]
100448a8:	3a08      	subs	r2, #8
}
100448aa:	0010      	movs	r0, r2
100448ac:	bd70      	pop	{r4, r5, r6, pc}

100448ae <aci_gatt_disc_char_by_uuid_process>:
uint16_t aci_gatt_disc_char_by_uuid_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
100448ae:	b5f0      	push	{r4, r5, r6, r7, lr}
100448b0:	0007      	movs	r7, r0
100448b2:	b087      	sub	sp, #28
100448b4:	0014      	movs	r4, r2
		return 0;
100448b6:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100448b8:	2b06      	cmp	r3, #6
100448ba:	d92b      	bls.n	10044914 <aci_gatt_disc_char_by_uuid_process+0x66>
	Osal_MemCpy((void *) &UUID.UUID_16, (const void *) &cp0->UUID.UUID_16, (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)));
100448bc:	0039      	movs	r1, r7
100448be:	1c7d      	adds	r5, r7, #1
100448c0:	79ab      	ldrb	r3, [r5, #6]
100448c2:	3108      	adds	r1, #8
100448c4:	2202      	movs	r2, #2
100448c6:	2b01      	cmp	r3, #1
100448c8:	d003      	beq.n	100448d2 <aci_gatt_disc_char_by_uuid_process+0x24>
100448ca:	3b02      	subs	r3, #2
100448cc:	425a      	negs	r2, r3
100448ce:	415a      	adcs	r2, r3
100448d0:	0112      	lsls	r2, r2, #4
100448d2:	ae02      	add	r6, sp, #8
100448d4:	0030      	movs	r0, r6
100448d6:	f7fb ff54 	bl	10040782 <Osal_MemCpy>
	*status = aci_gatt_disc_char_by_uuid(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
100448da:	796a      	ldrb	r2, [r5, #5]
100448dc:	7929      	ldrb	r1, [r5, #4]
100448de:	0212      	lsls	r2, r2, #8
100448e0:	430a      	orrs	r2, r1
100448e2:	78e9      	ldrb	r1, [r5, #3]
100448e4:	78a8      	ldrb	r0, [r5, #2]
100448e6:	0209      	lsls	r1, r1, #8
100448e8:	4301      	orrs	r1, r0
100448ea:	7868      	ldrb	r0, [r5, #1]
100448ec:	787f      	ldrb	r7, [r7, #1]
100448ee:	0200      	lsls	r0, r0, #8
100448f0:	79ab      	ldrb	r3, [r5, #6]
100448f2:	4338      	orrs	r0, r7
100448f4:	9600      	str	r6, [sp, #0]
100448f6:	f002 fb34 	bl	10046f62 <aci_gatt_disc_char_by_uuid>
	buffer_out[0] = 0x04;
100448fa:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100448fc:	220f      	movs	r2, #15
	*status = aci_gatt_disc_char_by_uuid(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
100448fe:	70e0      	strb	r0, [r4, #3]
10044900:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044902:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044904:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044906:	3b03      	subs	r3, #3
10044908:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x16;
1004490a:	3315      	adds	r3, #21
1004490c:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
1004490e:	33e7      	adds	r3, #231	; 0xe7
	buffer_out[1] = 0x0F;
10044910:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
10044912:	71a3      	strb	r3, [r4, #6]
}
10044914:	b007      	add	sp, #28
10044916:	bdf0      	pop	{r4, r5, r6, r7, pc}

10044918 <aci_gatt_disc_all_char_desc_process>:
uint16_t aci_gatt_disc_all_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044918:	b570      	push	{r4, r5, r6, lr}
1004491a:	0014      	movs	r4, r2
		return 0;
1004491c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
1004491e:	2b06      	cmp	r3, #6
10044920:	d91a      	bls.n	10044958 <aci_gatt_disc_all_char_desc_process+0x40>
	*status = aci_gatt_disc_all_char_desc(cp0->Connection_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->End_Handle /* 2 */);
10044922:	7982      	ldrb	r2, [r0, #6]
10044924:	7941      	ldrb	r1, [r0, #5]
10044926:	0212      	lsls	r2, r2, #8
10044928:	430a      	orrs	r2, r1
1004492a:	7901      	ldrb	r1, [r0, #4]
1004492c:	78c5      	ldrb	r5, [r0, #3]
1004492e:	0209      	lsls	r1, r1, #8
10044930:	4329      	orrs	r1, r5
10044932:	7845      	ldrb	r5, [r0, #1]
10044934:	7880      	ldrb	r0, [r0, #2]
10044936:	0200      	lsls	r0, r0, #8
10044938:	4328      	orrs	r0, r5
1004493a:	f002 fb06 	bl	10046f4a <aci_gatt_disc_all_char_desc>
	buffer_out[0] = 0x04;
1004493e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044940:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044942:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044944:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044946:	3b03      	subs	r3, #3
10044948:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x17;
1004494a:	3316      	adds	r3, #22
1004494c:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
1004494e:	33e6      	adds	r3, #230	; 0xe6
	buffer_out[1] = 0x0F;
10044950:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_disc_all_char_desc(cp0->Connection_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->End_Handle /* 2 */);
10044952:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044954:	71a3      	strb	r3, [r4, #6]
10044956:	3a08      	subs	r2, #8
}
10044958:	0010      	movs	r0, r2
1004495a:	bd70      	pop	{r4, r5, r6, pc}

1004495c <aci_gatt_read_char_value_process>:
uint16_t aci_gatt_read_char_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004495c:	b510      	push	{r4, lr}
1004495e:	0014      	movs	r4, r2
		return 0;
10044960:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044962:	2b06      	cmp	r3, #6
10044964:	d916      	bls.n	10044994 <aci_gatt_read_char_value_process+0x38>
	*status = aci_gatt_read_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */);
10044966:	7901      	ldrb	r1, [r0, #4]
10044968:	78c2      	ldrb	r2, [r0, #3]
1004496a:	0209      	lsls	r1, r1, #8
1004496c:	4311      	orrs	r1, r2
1004496e:	7842      	ldrb	r2, [r0, #1]
10044970:	7880      	ldrb	r0, [r0, #2]
10044972:	0200      	lsls	r0, r0, #8
10044974:	4310      	orrs	r0, r2
10044976:	f002 fb3f 	bl	10046ff8 <aci_gatt_read_char_value>
	buffer_out[0] = 0x04;
1004497a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
1004497c:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
1004497e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044980:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044982:	3b03      	subs	r3, #3
10044984:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x18;
10044986:	3317      	adds	r3, #23
10044988:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
1004498a:	33e5      	adds	r3, #229	; 0xe5
	buffer_out[1] = 0x0F;
1004498c:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_read_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */);
1004498e:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044990:	71a3      	strb	r3, [r4, #6]
10044992:	3a08      	subs	r2, #8
}
10044994:	0010      	movs	r0, r2
10044996:	bd10      	pop	{r4, pc}

10044998 <aci_gatt_read_using_char_uuid_process>:
uint16_t aci_gatt_read_using_char_uuid_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044998:	b5f0      	push	{r4, r5, r6, r7, lr}
1004499a:	0007      	movs	r7, r0
1004499c:	b087      	sub	sp, #28
1004499e:	0014      	movs	r4, r2
		return 0;
100449a0:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
100449a2:	2b06      	cmp	r3, #6
100449a4:	d92b      	bls.n	100449fe <aci_gatt_read_using_char_uuid_process+0x66>
	Osal_MemCpy((void *) &UUID.UUID_16, (const void *) &cp0->UUID.UUID_16, (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)));
100449a6:	0039      	movs	r1, r7
100449a8:	1c7d      	adds	r5, r7, #1
100449aa:	79ab      	ldrb	r3, [r5, #6]
100449ac:	3108      	adds	r1, #8
100449ae:	2202      	movs	r2, #2
100449b0:	2b01      	cmp	r3, #1
100449b2:	d003      	beq.n	100449bc <aci_gatt_read_using_char_uuid_process+0x24>
100449b4:	3b02      	subs	r3, #2
100449b6:	425a      	negs	r2, r3
100449b8:	415a      	adcs	r2, r3
100449ba:	0112      	lsls	r2, r2, #4
100449bc:	ae02      	add	r6, sp, #8
100449be:	0030      	movs	r0, r6
100449c0:	f7fb fedf 	bl	10040782 <Osal_MemCpy>
	*status = aci_gatt_read_using_char_uuid(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
100449c4:	796a      	ldrb	r2, [r5, #5]
100449c6:	7929      	ldrb	r1, [r5, #4]
100449c8:	0212      	lsls	r2, r2, #8
100449ca:	430a      	orrs	r2, r1
100449cc:	78e9      	ldrb	r1, [r5, #3]
100449ce:	78a8      	ldrb	r0, [r5, #2]
100449d0:	0209      	lsls	r1, r1, #8
100449d2:	4301      	orrs	r1, r0
100449d4:	7868      	ldrb	r0, [r5, #1]
100449d6:	787f      	ldrb	r7, [r7, #1]
100449d8:	0200      	lsls	r0, r0, #8
100449da:	79ab      	ldrb	r3, [r5, #6]
100449dc:	4338      	orrs	r0, r7
100449de:	9600      	str	r6, [sp, #0]
100449e0:	f002 fb44 	bl	1004706c <aci_gatt_read_using_char_uuid>
	buffer_out[0] = 0x04;
100449e4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
100449e6:	220f      	movs	r2, #15
	*status = aci_gatt_read_using_char_uuid(cp0->Connection_Handle /* 2 */, cp0->Start_Handle /* 2 */, cp0->End_Handle /* 2 */, cp0->UUID_Type /* 1 */, &UUID /* (cp0->UUID_Type == 1 ? 2 : (cp0->UUID_Type == 2 ? 16 : 0)) */);
100449e8:	70e0      	strb	r0, [r4, #3]
100449ea:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
100449ec:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
100449ee:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
100449f0:	3b03      	subs	r3, #3
100449f2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x19;
100449f4:	3318      	adds	r3, #24
100449f6:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
100449f8:	33e4      	adds	r3, #228	; 0xe4
	buffer_out[1] = 0x0F;
100449fa:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
100449fc:	71a3      	strb	r3, [r4, #6]
}
100449fe:	b007      	add	sp, #28
10044a00:	bdf0      	pop	{r4, r5, r6, r7, pc}

10044a02 <aci_gatt_read_long_char_value_process>:
uint16_t aci_gatt_read_long_char_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044a02:	b570      	push	{r4, r5, r6, lr}
10044a04:	0014      	movs	r4, r2
		return 0;
10044a06:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044a08:	2b06      	cmp	r3, #6
10044a0a:	d91a      	bls.n	10044a42 <aci_gatt_read_long_char_value_process+0x40>
	*status = aci_gatt_read_long_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */);
10044a0c:	7982      	ldrb	r2, [r0, #6]
10044a0e:	7941      	ldrb	r1, [r0, #5]
10044a10:	0212      	lsls	r2, r2, #8
10044a12:	430a      	orrs	r2, r1
10044a14:	7901      	ldrb	r1, [r0, #4]
10044a16:	78c5      	ldrb	r5, [r0, #3]
10044a18:	0209      	lsls	r1, r1, #8
10044a1a:	4329      	orrs	r1, r5
10044a1c:	7845      	ldrb	r5, [r0, #1]
10044a1e:	7880      	ldrb	r0, [r0, #2]
10044a20:	0200      	lsls	r0, r0, #8
10044a22:	4328      	orrs	r0, r5
10044a24:	f002 fb1a 	bl	1004705c <aci_gatt_read_long_char_value>
	buffer_out[0] = 0x04;
10044a28:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044a2a:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044a2c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044a2e:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044a30:	3b03      	subs	r3, #3
10044a32:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x1a;
10044a34:	3319      	adds	r3, #25
10044a36:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044a38:	33e3      	adds	r3, #227	; 0xe3
	buffer_out[1] = 0x0F;
10044a3a:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_read_long_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */);
10044a3c:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044a3e:	71a3      	strb	r3, [r4, #6]
10044a40:	3a08      	subs	r2, #8
}
10044a42:	0010      	movs	r0, r2
10044a44:	bd70      	pop	{r4, r5, r6, pc}

10044a46 <aci_gatt_read_multiple_char_value_process>:
uint16_t aci_gatt_read_multiple_char_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044a46:	b5f0      	push	{r4, r5, r6, r7, lr}
10044a48:	0014      	movs	r4, r2
10044a4a:	b0c1      	sub	sp, #260	; 0x104
		return 0;
10044a4c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044a4e:	2b06      	cmp	r3, #6
10044a50:	d917      	bls.n	10044a82 <aci_gatt_read_multiple_char_value_process+0x3c>
		for (i = 0; i < cp0->Number_of_Handles; i++) {
10044a52:	1c45      	adds	r5, r0, #1
10044a54:	78a9      	ldrb	r1, [r5, #2]
10044a56:	428a      	cmp	r2, r1
10044a58:	db16      	blt.n	10044a88 <aci_gatt_read_multiple_char_value_process+0x42>
	*status = aci_gatt_read_multiple_char_value(cp0->Connection_Handle /* 2 */, cp0->Number_of_Handles /* 1 */, Handle_Entry /* cp0->Number_of_Handles * (sizeof(Handle_Entry_t)) */);
10044a5a:	7843      	ldrb	r3, [r0, #1]
10044a5c:	7868      	ldrb	r0, [r5, #1]
10044a5e:	466a      	mov	r2, sp
10044a60:	0200      	lsls	r0, r0, #8
10044a62:	4318      	orrs	r0, r3
10044a64:	f002 fafe 	bl	10047064 <aci_gatt_read_multiple_char_value>
	buffer_out[0] = 0x04;
10044a68:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044a6a:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044a6c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044a6e:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044a70:	3b03      	subs	r3, #3
10044a72:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x1b;
10044a74:	331a      	adds	r3, #26
10044a76:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044a78:	33e2      	adds	r3, #226	; 0xe2
	buffer_out[1] = 0x0F;
10044a7a:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_read_multiple_char_value(cp0->Connection_Handle /* 2 */, cp0->Number_of_Handles /* 1 */, Handle_Entry /* cp0->Number_of_Handles * (sizeof(Handle_Entry_t)) */);
10044a7c:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044a7e:	71a3      	strb	r3, [r4, #6]
10044a80:	3a08      	subs	r2, #8
}
10044a82:	0010      	movs	r0, r2
10044a84:	b041      	add	sp, #260	; 0x104
10044a86:	bdf0      	pop	{r4, r5, r6, r7, pc}
			Handle_Entry[i].Handle = cp0->Handle_Entry[i].Handle;
10044a88:	0056      	lsls	r6, r2, #1
10044a8a:	19ab      	adds	r3, r5, r6
10044a8c:	78df      	ldrb	r7, [r3, #3]
10044a8e:	791b      	ldrb	r3, [r3, #4]
		for (i = 0; i < cp0->Number_of_Handles; i++) {
10044a90:	3201      	adds	r2, #1
			Handle_Entry[i].Handle = cp0->Handle_Entry[i].Handle;
10044a92:	021b      	lsls	r3, r3, #8
10044a94:	433b      	orrs	r3, r7
10044a96:	466f      	mov	r7, sp
10044a98:	53bb      	strh	r3, [r7, r6]
10044a9a:	e7dc      	b.n	10044a56 <aci_gatt_read_multiple_char_value_process+0x10>

10044a9c <aci_gatt_write_char_value_process>:
uint16_t aci_gatt_write_char_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044a9c:	b570      	push	{r4, r5, r6, lr}
10044a9e:	0014      	movs	r4, r2
		return 0;
10044aa0:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044aa2:	2b06      	cmp	r3, #6
10044aa4:	d918      	bls.n	10044ad8 <aci_gatt_write_char_value_process+0x3c>
	*status = aci_gatt_write_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044aa6:	7901      	ldrb	r1, [r0, #4]
10044aa8:	78c6      	ldrb	r6, [r0, #3]
10044aaa:	0209      	lsls	r1, r1, #8
10044aac:	1d83      	adds	r3, r0, #6
10044aae:	7942      	ldrb	r2, [r0, #5]
10044ab0:	4331      	orrs	r1, r6
10044ab2:	7846      	ldrb	r6, [r0, #1]
10044ab4:	7880      	ldrb	r0, [r0, #2]
10044ab6:	0200      	lsls	r0, r0, #8
10044ab8:	4330      	orrs	r0, r6
10044aba:	f002 fb3e 	bl	1004713a <aci_gatt_write_char_value>
	buffer_out[0] = 0x04;
10044abe:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044ac0:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044ac2:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044ac4:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044ac6:	3b03      	subs	r3, #3
10044ac8:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x1c;
10044aca:	331b      	adds	r3, #27
10044acc:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044ace:	33e1      	adds	r3, #225	; 0xe1
	buffer_out[1] = 0x0F;
10044ad0:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_write_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044ad2:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044ad4:	71a3      	strb	r3, [r4, #6]
10044ad6:	3a08      	subs	r2, #8
}
10044ad8:	0010      	movs	r0, r2
10044ada:	bd70      	pop	{r4, r5, r6, pc}

10044adc <aci_gatt_write_long_char_value_process>:
uint16_t aci_gatt_write_long_char_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044adc:	b573      	push	{r0, r1, r4, r5, r6, lr}
10044ade:	0006      	movs	r6, r0
10044ae0:	0014      	movs	r4, r2
		return 0;
10044ae2:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044ae4:	2b06      	cmp	r3, #6
10044ae6:	d91e      	bls.n	10044b26 <aci_gatt_write_long_char_value_process+0x4a>
	*status = aci_gatt_write_long_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044ae8:	79b2      	ldrb	r2, [r6, #6]
10044aea:	7971      	ldrb	r1, [r6, #5]
10044aec:	0212      	lsls	r2, r2, #8
10044aee:	430a      	orrs	r2, r1
10044af0:	7931      	ldrb	r1, [r6, #4]
10044af2:	78f0      	ldrb	r0, [r6, #3]
10044af4:	78b5      	ldrb	r5, [r6, #2]
10044af6:	0209      	lsls	r1, r1, #8
10044af8:	4301      	orrs	r1, r0
10044afa:	7870      	ldrb	r0, [r6, #1]
10044afc:	022d      	lsls	r5, r5, #8
10044afe:	79f3      	ldrb	r3, [r6, #7]
10044b00:	4305      	orrs	r5, r0
10044b02:	3608      	adds	r6, #8
10044b04:	9600      	str	r6, [sp, #0]
10044b06:	0028      	movs	r0, r5
10044b08:	f002 fb25 	bl	10047156 <aci_gatt_write_long_char_value>
	buffer_out[0] = 0x04;
10044b0c:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044b0e:	220f      	movs	r2, #15
	*status = aci_gatt_write_long_char_value(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044b10:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044b12:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044b14:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044b16:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044b18:	3b03      	subs	r3, #3
10044b1a:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x1d;
10044b1c:	331c      	adds	r3, #28
10044b1e:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044b20:	33e0      	adds	r3, #224	; 0xe0
	buffer_out[1] = 0x0F;
10044b22:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
10044b24:	71a3      	strb	r3, [r4, #6]
}
10044b26:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10044b28 <aci_gatt_write_char_reliable_process>:
uint16_t aci_gatt_write_char_reliable_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044b28:	b573      	push	{r0, r1, r4, r5, r6, lr}
10044b2a:	0006      	movs	r6, r0
10044b2c:	0014      	movs	r4, r2
		return 0;
10044b2e:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044b30:	2b06      	cmp	r3, #6
10044b32:	d91e      	bls.n	10044b72 <aci_gatt_write_char_reliable_process+0x4a>
	*status = aci_gatt_write_char_reliable(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044b34:	79b2      	ldrb	r2, [r6, #6]
10044b36:	7971      	ldrb	r1, [r6, #5]
10044b38:	0212      	lsls	r2, r2, #8
10044b3a:	430a      	orrs	r2, r1
10044b3c:	7931      	ldrb	r1, [r6, #4]
10044b3e:	78f0      	ldrb	r0, [r6, #3]
10044b40:	78b5      	ldrb	r5, [r6, #2]
10044b42:	0209      	lsls	r1, r1, #8
10044b44:	4301      	orrs	r1, r0
10044b46:	7870      	ldrb	r0, [r6, #1]
10044b48:	022d      	lsls	r5, r5, #8
10044b4a:	79f3      	ldrb	r3, [r6, #7]
10044b4c:	4305      	orrs	r5, r0
10044b4e:	3608      	adds	r6, #8
10044b50:	9600      	str	r6, [sp, #0]
10044b52:	0028      	movs	r0, r5
10044b54:	f002 fae7 	bl	10047126 <aci_gatt_write_char_reliable>
	buffer_out[0] = 0x04;
10044b58:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044b5a:	220f      	movs	r2, #15
	*status = aci_gatt_write_char_reliable(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044b5c:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044b5e:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044b60:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044b62:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044b64:	3b03      	subs	r3, #3
10044b66:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x1e;
10044b68:	331d      	adds	r3, #29
10044b6a:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044b6c:	33df      	adds	r3, #223	; 0xdf
	buffer_out[1] = 0x0F;
10044b6e:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
10044b70:	71a3      	strb	r3, [r4, #6]
}
10044b72:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10044b74 <aci_gatt_write_long_char_desc_process>:
uint16_t aci_gatt_write_long_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044b74:	b573      	push	{r0, r1, r4, r5, r6, lr}
10044b76:	0006      	movs	r6, r0
10044b78:	0014      	movs	r4, r2
		return 0;
10044b7a:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044b7c:	2b06      	cmp	r3, #6
10044b7e:	d91e      	bls.n	10044bbe <aci_gatt_write_long_char_desc_process+0x4a>
	*status = aci_gatt_write_long_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044b80:	79b2      	ldrb	r2, [r6, #6]
10044b82:	7971      	ldrb	r1, [r6, #5]
10044b84:	0212      	lsls	r2, r2, #8
10044b86:	430a      	orrs	r2, r1
10044b88:	7931      	ldrb	r1, [r6, #4]
10044b8a:	78f0      	ldrb	r0, [r6, #3]
10044b8c:	78b5      	ldrb	r5, [r6, #2]
10044b8e:	0209      	lsls	r1, r1, #8
10044b90:	4301      	orrs	r1, r0
10044b92:	7870      	ldrb	r0, [r6, #1]
10044b94:	022d      	lsls	r5, r5, #8
10044b96:	79f3      	ldrb	r3, [r6, #7]
10044b98:	4305      	orrs	r5, r0
10044b9a:	3608      	adds	r6, #8
10044b9c:	9600      	str	r6, [sp, #0]
10044b9e:	0028      	movs	r0, r5
10044ba0:	f002 facf 	bl	10047142 <aci_gatt_write_long_char_desc>
	buffer_out[0] = 0x04;
10044ba4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044ba6:	220f      	movs	r2, #15
	*status = aci_gatt_write_long_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044ba8:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044baa:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044bac:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044bae:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044bb0:	3b03      	subs	r3, #3
10044bb2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x1f;
10044bb4:	331e      	adds	r3, #30
10044bb6:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044bb8:	33de      	adds	r3, #222	; 0xde
	buffer_out[1] = 0x0F;
10044bba:	7062      	strb	r2, [r4, #1]
	buffer_out[6] = 0xfd;
10044bbc:	71a3      	strb	r3, [r4, #6]
}
10044bbe:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10044bc0 <aci_gatt_read_long_char_desc_process>:
uint16_t aci_gatt_read_long_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044bc0:	b570      	push	{r4, r5, r6, lr}
10044bc2:	0014      	movs	r4, r2
		return 0;
10044bc4:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044bc6:	2b06      	cmp	r3, #6
10044bc8:	d91a      	bls.n	10044c00 <aci_gatt_read_long_char_desc_process+0x40>
	*status = aci_gatt_read_long_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */);
10044bca:	7982      	ldrb	r2, [r0, #6]
10044bcc:	7941      	ldrb	r1, [r0, #5]
10044bce:	0212      	lsls	r2, r2, #8
10044bd0:	430a      	orrs	r2, r1
10044bd2:	7901      	ldrb	r1, [r0, #4]
10044bd4:	78c5      	ldrb	r5, [r0, #3]
10044bd6:	0209      	lsls	r1, r1, #8
10044bd8:	4329      	orrs	r1, r5
10044bda:	7845      	ldrb	r5, [r0, #1]
10044bdc:	7880      	ldrb	r0, [r0, #2]
10044bde:	0200      	lsls	r0, r0, #8
10044be0:	4328      	orrs	r0, r5
10044be2:	f002 fa37 	bl	10047054 <aci_gatt_read_long_char_desc>
	buffer_out[0] = 0x04;
10044be6:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044be8:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044bea:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044bec:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044bee:	3b03      	subs	r3, #3
10044bf0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x20;
10044bf2:	331f      	adds	r3, #31
10044bf4:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044bf6:	33dd      	adds	r3, #221	; 0xdd
	buffer_out[1] = 0x0F;
10044bf8:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_read_long_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Val_Offset /* 2 */);
10044bfa:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044bfc:	71a3      	strb	r3, [r4, #6]
10044bfe:	3a08      	subs	r2, #8
}
10044c00:	0010      	movs	r0, r2
10044c02:	bd70      	pop	{r4, r5, r6, pc}

10044c04 <aci_gatt_write_char_desc_process>:
uint16_t aci_gatt_write_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044c04:	b570      	push	{r4, r5, r6, lr}
10044c06:	0014      	movs	r4, r2
		return 0;
10044c08:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044c0a:	2b06      	cmp	r3, #6
10044c0c:	d918      	bls.n	10044c40 <aci_gatt_write_char_desc_process+0x3c>
	*status = aci_gatt_write_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044c0e:	7901      	ldrb	r1, [r0, #4]
10044c10:	78c6      	ldrb	r6, [r0, #3]
10044c12:	0209      	lsls	r1, r1, #8
10044c14:	1d83      	adds	r3, r0, #6
10044c16:	7942      	ldrb	r2, [r0, #5]
10044c18:	4331      	orrs	r1, r6
10044c1a:	7846      	ldrb	r6, [r0, #1]
10044c1c:	7880      	ldrb	r0, [r0, #2]
10044c1e:	0200      	lsls	r0, r0, #8
10044c20:	4330      	orrs	r0, r6
10044c22:	f002 fa7c 	bl	1004711e <aci_gatt_write_char_desc>
	buffer_out[0] = 0x04;
10044c26:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044c28:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044c2a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044c2c:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044c2e:	3b03      	subs	r3, #3
10044c30:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x21;
10044c32:	3320      	adds	r3, #32
10044c34:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044c36:	33dc      	adds	r3, #220	; 0xdc
	buffer_out[1] = 0x0F;
10044c38:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_write_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044c3a:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044c3c:	71a3      	strb	r3, [r4, #6]
10044c3e:	3a08      	subs	r2, #8
}
10044c40:	0010      	movs	r0, r2
10044c42:	bd70      	pop	{r4, r5, r6, pc}

10044c44 <aci_gatt_read_char_desc_process>:
uint16_t aci_gatt_read_char_desc_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044c44:	b510      	push	{r4, lr}
10044c46:	0014      	movs	r4, r2
		return 0;
10044c48:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044c4a:	2b06      	cmp	r3, #6
10044c4c:	d916      	bls.n	10044c7c <aci_gatt_read_char_desc_process+0x38>
	*status = aci_gatt_read_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */);
10044c4e:	7901      	ldrb	r1, [r0, #4]
10044c50:	78c2      	ldrb	r2, [r0, #3]
10044c52:	0209      	lsls	r1, r1, #8
10044c54:	4311      	orrs	r1, r2
10044c56:	7842      	ldrb	r2, [r0, #1]
10044c58:	7880      	ldrb	r0, [r0, #2]
10044c5a:	0200      	lsls	r0, r0, #8
10044c5c:	4310      	orrs	r0, r2
10044c5e:	f002 f9c7 	bl	10046ff0 <aci_gatt_read_char_desc>
	buffer_out[0] = 0x04;
10044c62:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044c64:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044c66:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044c68:	70a3      	strb	r3, [r4, #2]
	buffer_out[4] = 0x01;
10044c6a:	3b03      	subs	r3, #3
10044c6c:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0x22;
10044c6e:	3321      	adds	r3, #33	; 0x21
10044c70:	7163      	strb	r3, [r4, #5]
	buffer_out[6] = 0xfd;
10044c72:	33db      	adds	r3, #219	; 0xdb
	buffer_out[1] = 0x0F;
10044c74:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_read_char_desc(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */);
10044c76:	70e0      	strb	r0, [r4, #3]
	buffer_out[6] = 0xfd;
10044c78:	71a3      	strb	r3, [r4, #6]
10044c7a:	3a08      	subs	r2, #8
}
10044c7c:	0010      	movs	r0, r2
10044c7e:	bd10      	pop	{r4, pc}

10044c80 <aci_gatt_write_without_resp_process>:
uint16_t aci_gatt_write_without_resp_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044c80:	b570      	push	{r4, r5, r6, lr}
10044c82:	0014      	movs	r4, r2
		return 0;
10044c84:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044c86:	2b06      	cmp	r3, #6
10044c88:	d918      	bls.n	10044cbc <aci_gatt_write_without_resp_process+0x3c>
	*status = aci_gatt_write_without_resp(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044c8a:	7901      	ldrb	r1, [r0, #4]
10044c8c:	78c6      	ldrb	r6, [r0, #3]
10044c8e:	0209      	lsls	r1, r1, #8
10044c90:	1d83      	adds	r3, r0, #6
10044c92:	7942      	ldrb	r2, [r0, #5]
10044c94:	4331      	orrs	r1, r6
10044c96:	7846      	ldrb	r6, [r0, #1]
10044c98:	7880      	ldrb	r0, [r0, #2]
10044c9a:	0200      	lsls	r0, r0, #8
10044c9c:	4330      	orrs	r0, r6
10044c9e:	f002 fa72 	bl	10047186 <aci_gatt_write_without_resp>
	buffer_out[0] = 0x04;
10044ca2:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044ca4:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044ca6:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044ca8:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044caa:	3b03      	subs	r3, #3
10044cac:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x23;
10044cae:	3322      	adds	r3, #34	; 0x22
10044cb0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044cb2:	33da      	adds	r3, #218	; 0xda
	buffer_out[1] = 0x0E;
10044cb4:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_write_without_resp(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044cb6:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044cb8:	7163      	strb	r3, [r4, #5]
10044cba:	3a07      	subs	r2, #7
}
10044cbc:	0010      	movs	r0, r2
10044cbe:	bd70      	pop	{r4, r5, r6, pc}

10044cc0 <aci_gatt_signed_write_without_resp_process>:
uint16_t aci_gatt_signed_write_without_resp_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044cc0:	b570      	push	{r4, r5, r6, lr}
10044cc2:	0014      	movs	r4, r2
		return 0;
10044cc4:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044cc6:	2b06      	cmp	r3, #6
10044cc8:	d918      	bls.n	10044cfc <aci_gatt_signed_write_without_resp_process+0x3c>
	*status = aci_gatt_signed_write_without_resp(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044cca:	7901      	ldrb	r1, [r0, #4]
10044ccc:	78c6      	ldrb	r6, [r0, #3]
10044cce:	0209      	lsls	r1, r1, #8
10044cd0:	1d83      	adds	r3, r0, #6
10044cd2:	7942      	ldrb	r2, [r0, #5]
10044cd4:	4331      	orrs	r1, r6
10044cd6:	7846      	ldrb	r6, [r0, #1]
10044cd8:	7880      	ldrb	r0, [r0, #2]
10044cda:	0200      	lsls	r0, r0, #8
10044cdc:	4330      	orrs	r0, r6
10044cde:	f002 f9ff 	bl	100470e0 <aci_gatt_signed_write_without_resp>
	buffer_out[0] = 0x04;
10044ce2:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044ce4:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044ce6:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044ce8:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044cea:	3b03      	subs	r3, #3
10044cec:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x24;
10044cee:	3323      	adds	r3, #35	; 0x23
10044cf0:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044cf2:	33d9      	adds	r3, #217	; 0xd9
	buffer_out[1] = 0x0E;
10044cf4:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_signed_write_without_resp(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044cf6:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044cf8:	7163      	strb	r3, [r4, #5]
10044cfa:	3a07      	subs	r2, #7
}
10044cfc:	0010      	movs	r0, r2
10044cfe:	bd70      	pop	{r4, r5, r6, pc}

10044d00 <aci_gatt_confirm_indication_process>:
uint16_t aci_gatt_confirm_indication_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044d00:	b510      	push	{r4, lr}
10044d02:	0014      	movs	r4, r2
		return 0;
10044d04:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044d06:	2b06      	cmp	r3, #6
10044d08:	d912      	bls.n	10044d30 <aci_gatt_confirm_indication_process+0x30>
	*status = aci_gatt_confirm_indication(cp0->Connection_Handle /* 2 */);
10044d0a:	7843      	ldrb	r3, [r0, #1]
10044d0c:	7880      	ldrb	r0, [r0, #2]
10044d0e:	0200      	lsls	r0, r0, #8
10044d10:	4318      	orrs	r0, r3
10044d12:	f002 f904 	bl	10046f1e <aci_gatt_confirm_indication>
	buffer_out[0] = 0x04;
10044d16:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044d18:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044d1a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044d1c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044d1e:	3b03      	subs	r3, #3
10044d20:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x25;
10044d22:	3324      	adds	r3, #36	; 0x24
10044d24:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044d26:	33d8      	adds	r3, #216	; 0xd8
	buffer_out[1] = 0x0E;
10044d28:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_confirm_indication(cp0->Connection_Handle /* 2 */);
10044d2a:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044d2c:	7163      	strb	r3, [r4, #5]
10044d2e:	3a07      	subs	r2, #7
}
10044d30:	0010      	movs	r0, r2
10044d32:	bd10      	pop	{r4, pc}

10044d34 <aci_gatt_write_resp_process>:
uint16_t aci_gatt_write_resp_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044d34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10044d36:	0007      	movs	r7, r0
10044d38:	0014      	movs	r4, r2
		return 0;
10044d3a:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044d3c:	2b06      	cmp	r3, #6
10044d3e:	d91e      	bls.n	10044d7e <aci_gatt_write_resp_process+0x4a>
	*status = aci_gatt_write_resp(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Write_status /* 1 */, cp0->Error_Code /* 1 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044d40:	7939      	ldrb	r1, [r7, #4]
10044d42:	78f8      	ldrb	r0, [r7, #3]
10044d44:	78be      	ldrb	r6, [r7, #2]
10044d46:	0209      	lsls	r1, r1, #8
10044d48:	79bb      	ldrb	r3, [r7, #6]
10044d4a:	797a      	ldrb	r2, [r7, #5]
10044d4c:	1c7d      	adds	r5, r7, #1
10044d4e:	4301      	orrs	r1, r0
10044d50:	7878      	ldrb	r0, [r7, #1]
10044d52:	3708      	adds	r7, #8
10044d54:	9701      	str	r7, [sp, #4]
10044d56:	0236      	lsls	r6, r6, #8
10044d58:	4306      	orrs	r6, r0
10044d5a:	79a8      	ldrb	r0, [r5, #6]
10044d5c:	9000      	str	r0, [sp, #0]
10044d5e:	0030      	movs	r0, r6
10044d60:	f002 fa03 	bl	1004716a <aci_gatt_write_resp>
	buffer_out[0] = 0x04;
10044d64:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044d66:	220e      	movs	r2, #14
	*status = aci_gatt_write_resp(cp0->Connection_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Write_status /* 1 */, cp0->Error_Code /* 1 */, cp0->Attribute_Val_Length /* 1 */, cp0->Attribute_Val /* cp0->Attribute_Val_Length * (sizeof(uint8_t)) */);
10044d68:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044d6a:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044d6c:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044d6e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044d70:	3b03      	subs	r3, #3
10044d72:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x26;
10044d74:	3325      	adds	r3, #37	; 0x25
10044d76:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044d78:	33d7      	adds	r3, #215	; 0xd7
	buffer_out[1] = 0x0E;
10044d7a:	7062      	strb	r2, [r4, #1]
	buffer_out[5] = 0xfd;
10044d7c:	7163      	strb	r3, [r4, #5]
}
10044d7e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10044d80 <aci_gatt_allow_read_process>:
uint16_t aci_gatt_allow_read_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044d80:	b510      	push	{r4, lr}
10044d82:	0014      	movs	r4, r2
		return 0;
10044d84:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044d86:	2b06      	cmp	r3, #6
10044d88:	d912      	bls.n	10044db0 <aci_gatt_allow_read_process+0x30>
	*status = aci_gatt_allow_read(cp0->Connection_Handle /* 2 */);
10044d8a:	7843      	ldrb	r3, [r0, #1]
10044d8c:	7880      	ldrb	r0, [r0, #2]
10044d8e:	0200      	lsls	r0, r0, #8
10044d90:	4318      	orrs	r0, r3
10044d92:	f002 f8be 	bl	10046f12 <aci_gatt_allow_read>
	buffer_out[0] = 0x04;
10044d96:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044d98:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044d9a:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044d9c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044d9e:	3b03      	subs	r3, #3
10044da0:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x27;
10044da2:	3326      	adds	r3, #38	; 0x26
10044da4:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044da6:	33d6      	adds	r3, #214	; 0xd6
	buffer_out[1] = 0x0E;
10044da8:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_allow_read(cp0->Connection_Handle /* 2 */);
10044daa:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044dac:	7163      	strb	r3, [r4, #5]
10044dae:	3a07      	subs	r2, #7
}
10044db0:	0010      	movs	r0, r2
10044db2:	bd10      	pop	{r4, pc}

10044db4 <aci_gatt_set_security_permission_process>:
uint16_t aci_gatt_set_security_permission_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044db4:	b570      	push	{r4, r5, r6, lr}
10044db6:	0014      	movs	r4, r2
		return 0;
10044db8:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044dba:	2b06      	cmp	r3, #6
10044dbc:	d917      	bls.n	10044dee <aci_gatt_set_security_permission_process+0x3a>
	*status = aci_gatt_set_security_permission(cp0->Serv_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Security_Permissions /* 1 */);
10044dbe:	7901      	ldrb	r1, [r0, #4]
10044dc0:	78c5      	ldrb	r5, [r0, #3]
10044dc2:	0209      	lsls	r1, r1, #8
10044dc4:	7942      	ldrb	r2, [r0, #5]
10044dc6:	4329      	orrs	r1, r5
10044dc8:	7845      	ldrb	r5, [r0, #1]
10044dca:	7880      	ldrb	r0, [r0, #2]
10044dcc:	0200      	lsls	r0, r0, #8
10044dce:	4328      	orrs	r0, r5
10044dd0:	f002 f982 	bl	100470d8 <aci_gatt_set_security_permission>
	buffer_out[0] = 0x04;
10044dd4:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044dd6:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044dd8:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044dda:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044ddc:	3b03      	subs	r3, #3
10044dde:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x28;
10044de0:	3327      	adds	r3, #39	; 0x27
10044de2:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044de4:	33d5      	adds	r3, #213	; 0xd5
	buffer_out[1] = 0x0E;
10044de6:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_set_security_permission(cp0->Serv_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Security_Permissions /* 1 */);
10044de8:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044dea:	7163      	strb	r3, [r4, #5]
10044dec:	3a07      	subs	r2, #7
}
10044dee:	0010      	movs	r0, r2
10044df0:	bd70      	pop	{r4, r5, r6, pc}

10044df2 <aci_gatt_set_desc_value_process>:
uint16_t aci_gatt_set_desc_value_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044df2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10044df4:	0007      	movs	r7, r0
10044df6:	0015      	movs	r5, r2
		return 0;
10044df8:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044dfa:	2b06      	cmp	r3, #6
10044dfc:	d924      	bls.n	10044e48 <aci_gatt_set_desc_value_process+0x56>
	*status = aci_gatt_set_desc_value(cp0->Serv_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Char_Desc_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Char_Desc_Value_Length /* 1 */, cp0->Char_Desc_Value /* cp0->Char_Desc_Value_Length * (sizeof(uint8_t)) */);
10044dfe:	7a3b      	ldrb	r3, [r7, #8]
10044e00:	79fa      	ldrb	r2, [r7, #7]
10044e02:	021b      	lsls	r3, r3, #8
10044e04:	4313      	orrs	r3, r2
10044e06:	79ba      	ldrb	r2, [r7, #6]
10044e08:	7979      	ldrb	r1, [r7, #5]
10044e0a:	0212      	lsls	r2, r2, #8
10044e0c:	430a      	orrs	r2, r1
10044e0e:	7939      	ldrb	r1, [r7, #4]
10044e10:	78f8      	ldrb	r0, [r7, #3]
10044e12:	78be      	ldrb	r6, [r7, #2]
10044e14:	0209      	lsls	r1, r1, #8
10044e16:	1c7c      	adds	r4, r7, #1
10044e18:	4301      	orrs	r1, r0
10044e1a:	7878      	ldrb	r0, [r7, #1]
10044e1c:	370a      	adds	r7, #10
10044e1e:	9701      	str	r7, [sp, #4]
10044e20:	0236      	lsls	r6, r6, #8
10044e22:	4306      	orrs	r6, r0
10044e24:	7a20      	ldrb	r0, [r4, #8]
10044e26:	9000      	str	r0, [sp, #0]
10044e28:	0030      	movs	r0, r6
10044e2a:	f002 f937 	bl	1004709c <aci_gatt_set_desc_value>
	buffer_out[0] = 0x04;
10044e2e:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044e30:	220e      	movs	r2, #14
	*status = aci_gatt_set_desc_value(cp0->Serv_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Char_Desc_Handle /* 2 */, cp0->Val_Offset /* 2 */, cp0->Char_Desc_Value_Length /* 1 */, cp0->Char_Desc_Value /* cp0->Char_Desc_Value_Length * (sizeof(uint8_t)) */);
10044e32:	71a8      	strb	r0, [r5, #6]
	buffer_out[5] = 0xfd;
10044e34:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044e36:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10044e38:	70ab      	strb	r3, [r5, #2]
	buffer_out[3] = 0x01;
10044e3a:	3b03      	subs	r3, #3
10044e3c:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x29;
10044e3e:	3328      	adds	r3, #40	; 0x28
10044e40:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0xfd;
10044e42:	33d4      	adds	r3, #212	; 0xd4
	buffer_out[1] = 0x0E;
10044e44:	706a      	strb	r2, [r5, #1]
	buffer_out[5] = 0xfd;
10044e46:	716b      	strb	r3, [r5, #5]
}
10044e48:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10044e4a <aci_gatt_update_char_value_ext_process>:
 uint8_t Value_Length,
 uint8_t Value[]);
 */
/* Command len: 2 + 2 + 2 + 1 + 2 + 2 + 1 + cp0->Value_Length * (sizeof(uint8_t)) */
/* Response len: 1 */
uint16_t aci_gatt_update_char_value_ext_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044e4a:	b5f0      	push	{r4, r5, r6, r7, lr}
10044e4c:	0007      	movs	r7, r0
10044e4e:	b085      	sub	sp, #20
10044e50:	0015      	movs	r5, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10044e52:	2000      	movs	r0, #0
	if (buffer_out_max_length < (1 + 6)) {
10044e54:	2b06      	cmp	r3, #6
10044e56:	d92b      	bls.n	10044eb0 <aci_gatt_update_char_value_ext_process+0x66>
	}
	*status = aci_gatt_update_char_value_ext(cp0->Conn_Handle_To_Notify /* 2 */, cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Update_Type /* 1 */, cp0->Char_Length /* 2 */, cp0->Value_Offset /* 2 */, cp0->Value_Length /* 1 */, cp0->Value /* cp0->Value_Length * (sizeof(uint8_t)) */);
10044e58:	79ba      	ldrb	r2, [r7, #6]
10044e5a:	7979      	ldrb	r1, [r7, #5]
10044e5c:	0212      	lsls	r2, r2, #8
10044e5e:	430a      	orrs	r2, r1
10044e60:	7939      	ldrb	r1, [r7, #4]
10044e62:	78f8      	ldrb	r0, [r7, #3]
10044e64:	78be      	ldrb	r6, [r7, #2]
10044e66:	0209      	lsls	r1, r1, #8
10044e68:	79fb      	ldrb	r3, [r7, #7]
10044e6a:	1c7c      	adds	r4, r7, #1
10044e6c:	4301      	orrs	r1, r0
10044e6e:	7878      	ldrb	r0, [r7, #1]
10044e70:	370d      	adds	r7, #13
10044e72:	9703      	str	r7, [sp, #12]
10044e74:	0236      	lsls	r6, r6, #8
10044e76:	4306      	orrs	r6, r0
10044e78:	7ae0      	ldrb	r0, [r4, #11]
10044e7a:	9002      	str	r0, [sp, #8]
10044e7c:	7aa0      	ldrb	r0, [r4, #10]
10044e7e:	7a67      	ldrb	r7, [r4, #9]
10044e80:	0200      	lsls	r0, r0, #8
10044e82:	4338      	orrs	r0, r7
10044e84:	9001      	str	r0, [sp, #4]
10044e86:	7a20      	ldrb	r0, [r4, #8]
10044e88:	79e7      	ldrb	r7, [r4, #7]
10044e8a:	0200      	lsls	r0, r0, #8
10044e8c:	4338      	orrs	r0, r7
10044e8e:	9000      	str	r0, [sp, #0]
10044e90:	0030      	movs	r0, r6
10044e92:	f002 f933 	bl	100470fc <aci_gatt_update_char_value_ext>
	buffer_out[0] = 0x04;
10044e96:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044e98:	220e      	movs	r2, #14
	*status = aci_gatt_update_char_value_ext(cp0->Conn_Handle_To_Notify /* 2 */, cp0->Service_Handle /* 2 */, cp0->Char_Handle /* 2 */, cp0->Update_Type /* 1 */, cp0->Char_Length /* 2 */, cp0->Value_Offset /* 2 */, cp0->Value_Length /* 1 */, cp0->Value /* cp0->Value_Length * (sizeof(uint8_t)) */);
10044e9a:	71a8      	strb	r0, [r5, #6]
	buffer_out[2] = output_size + 3;
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x2c;
	buffer_out[5] = 0xfd;
10044e9c:	2007      	movs	r0, #7
	buffer_out[0] = 0x04;
10044e9e:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10044ea0:	70ab      	strb	r3, [r5, #2]
	buffer_out[3] = 0x01;
10044ea2:	3b03      	subs	r3, #3
10044ea4:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x2c;
10044ea6:	332b      	adds	r3, #43	; 0x2b
10044ea8:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0xfd;
10044eaa:	33d1      	adds	r3, #209	; 0xd1
	buffer_out[1] = 0x0E;
10044eac:	706a      	strb	r2, [r5, #1]
	buffer_out[5] = 0xfd;
10044eae:	716b      	strb	r3, [r5, #5]
	return (output_size + 6);
}
10044eb0:	b005      	add	sp, #20
10044eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10044eb4 <aci_gatt_deny_read_process>:
/* tBleStatus aci_gatt_deny_read(uint16_t Connection_Handle,
 uint8_t Error_Code);
 */
/* Command len: 2 + 1 */
/* Response len: 1 */
uint16_t aci_gatt_deny_read_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044eb4:	b510      	push	{r4, lr}
10044eb6:	0014      	movs	r4, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10044eb8:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044eba:	2b06      	cmp	r3, #6
10044ebc:	d913      	bls.n	10044ee6 <aci_gatt_deny_read_process+0x32>
	}
	*status = aci_gatt_deny_read(cp0->Connection_Handle /* 2 */, cp0->Error_Code /* 1 */);
10044ebe:	7842      	ldrb	r2, [r0, #1]
10044ec0:	78c1      	ldrb	r1, [r0, #3]
10044ec2:	7880      	ldrb	r0, [r0, #2]
10044ec4:	0200      	lsls	r0, r0, #8
10044ec6:	4310      	orrs	r0, r2
10044ec8:	f002 f839 	bl	10046f3e <aci_gatt_deny_read>
	buffer_out[0] = 0x04;
10044ecc:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044ece:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044ed0:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044ed2:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044ed4:	3b03      	subs	r3, #3
10044ed6:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2d;
10044ed8:	332c      	adds	r3, #44	; 0x2c
10044eda:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044edc:	33d0      	adds	r3, #208	; 0xd0
	buffer_out[1] = 0x0E;
10044ede:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_deny_read(cp0->Connection_Handle /* 2 */, cp0->Error_Code /* 1 */);
10044ee0:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044ee2:	7163      	strb	r3, [r4, #5]
10044ee4:	3a07      	subs	r2, #7
	return (output_size + 6);
}
10044ee6:	0010      	movs	r0, r2
10044ee8:	bd10      	pop	{r4, pc}

10044eea <aci_gatt_set_access_permission_process>:
 uint16_t Attr_Handle,
 uint8_t Access_Permissions);
 */
/* Command len: 2 + 2 + 1 */
/* Response len: 1 */
uint16_t aci_gatt_set_access_permission_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044eea:	b570      	push	{r4, r5, r6, lr}
10044eec:	0014      	movs	r4, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10044eee:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044ef0:	2b06      	cmp	r3, #6
10044ef2:	d917      	bls.n	10044f24 <aci_gatt_set_access_permission_process+0x3a>
	}
	*status = aci_gatt_set_access_permission(cp0->Serv_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Access_Permissions /* 1 */);
10044ef4:	7901      	ldrb	r1, [r0, #4]
10044ef6:	78c5      	ldrb	r5, [r0, #3]
10044ef8:	0209      	lsls	r1, r1, #8
10044efa:	7942      	ldrb	r2, [r0, #5]
10044efc:	4329      	orrs	r1, r5
10044efe:	7845      	ldrb	r5, [r0, #1]
10044f00:	7880      	ldrb	r0, [r0, #2]
10044f02:	0200      	lsls	r0, r0, #8
10044f04:	4328      	orrs	r0, r5
10044f06:	f002 f8c5 	bl	10047094 <aci_gatt_set_access_permission>
	buffer_out[0] = 0x04;
10044f0a:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044f0c:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044f0e:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = output_size + 3;
10044f10:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
10044f12:	3b03      	subs	r3, #3
10044f14:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x2e;
10044f16:	332d      	adds	r3, #45	; 0x2d
10044f18:	7123      	strb	r3, [r4, #4]
	buffer_out[5] = 0xfd;
10044f1a:	33cf      	adds	r3, #207	; 0xcf
	buffer_out[1] = 0x0E;
10044f1c:	7062      	strb	r2, [r4, #1]
	*status = aci_gatt_set_access_permission(cp0->Serv_Handle /* 2 */, cp0->Attr_Handle /* 2 */, cp0->Access_Permissions /* 1 */);
10044f1e:	71a0      	strb	r0, [r4, #6]
	buffer_out[5] = 0xfd;
10044f20:	7163      	strb	r3, [r4, #5]
10044f22:	3a07      	subs	r2, #7
	return (output_size + 6);
}
10044f24:	0010      	movs	r0, r2
10044f26:	bd70      	pop	{r4, r5, r6, pc}

10044f28 <aci_l2cap_connection_parameter_update_req_process>:
 uint16_t Slave_latency,
 uint16_t Timeout_Multiplier);
 */
/* Command len: 2 + 2 + 2 + 2 + 2 */
/* Response len: 1 */
uint16_t aci_l2cap_connection_parameter_update_req_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044f28:	b573      	push	{r0, r1, r4, r5, r6, lr}
10044f2a:	0015      	movs	r5, r2
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 3);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10044f2c:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044f2e:	2b06      	cmp	r3, #6
10044f30:	d924      	bls.n	10044f7c <aci_l2cap_connection_parameter_update_req_process+0x54>
	}
	*status = aci_l2cap_connection_parameter_update_req(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Slave_latency /* 2 */, cp0->Timeout_Multiplier /* 2 */);
10044f32:	7a03      	ldrb	r3, [r0, #8]
10044f34:	79c2      	ldrb	r2, [r0, #7]
10044f36:	021b      	lsls	r3, r3, #8
10044f38:	4313      	orrs	r3, r2
10044f3a:	7982      	ldrb	r2, [r0, #6]
10044f3c:	7941      	ldrb	r1, [r0, #5]
10044f3e:	0212      	lsls	r2, r2, #8
10044f40:	430a      	orrs	r2, r1
10044f42:	7901      	ldrb	r1, [r0, #4]
10044f44:	78c6      	ldrb	r6, [r0, #3]
10044f46:	0209      	lsls	r1, r1, #8
10044f48:	1c44      	adds	r4, r0, #1
10044f4a:	4331      	orrs	r1, r6
10044f4c:	7846      	ldrb	r6, [r0, #1]
10044f4e:	7880      	ldrb	r0, [r0, #2]
10044f50:	0200      	lsls	r0, r0, #8
10044f52:	4330      	orrs	r0, r6
10044f54:	7a26      	ldrb	r6, [r4, #8]
10044f56:	7a64      	ldrb	r4, [r4, #9]
10044f58:	0224      	lsls	r4, r4, #8
10044f5a:	4334      	orrs	r4, r6
10044f5c:	9400      	str	r4, [sp, #0]
10044f5e:	f002 f9d7 	bl	10047310 <aci_l2cap_connection_parameter_update_req>
	buffer_out[0] = 0x04;
10044f62:	2304      	movs	r3, #4
	buffer_out[1] = 0x0F;
10044f64:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10044f66:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10044f68:	70ab      	strb	r3, [r5, #2]
	buffer_out[4] = 0x01;
10044f6a:	3b03      	subs	r3, #3
10044f6c:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0x81;
10044f6e:	3380      	adds	r3, #128	; 0x80
10044f70:	716b      	strb	r3, [r5, #5]
	buffer_out[6] = 0xfd;
10044f72:	337c      	adds	r3, #124	; 0x7c
	buffer_out[1] = 0x0F;
10044f74:	706a      	strb	r2, [r5, #1]
	*status = aci_l2cap_connection_parameter_update_req(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Slave_latency /* 2 */, cp0->Timeout_Multiplier /* 2 */);
10044f76:	70e8      	strb	r0, [r5, #3]
	buffer_out[6] = 0xfd;
10044f78:	71ab      	strb	r3, [r5, #6]
10044f7a:	3a08      	subs	r2, #8
	return (output_size + 6);
}
10044f7c:	0010      	movs	r0, r2
10044f7e:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

10044f80 <aci_l2cap_connection_parameter_update_resp_process>:
 uint8_t Identifier,
 uint8_t Accept);
 */
/* Command len: 2 + 2 + 2 + 2 + 2 + 2 + 2 + 1 + 1 */
/* Response len: 1 */
uint16_t aci_l2cap_connection_parameter_update_resp_process(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10044f80:	b5f0      	push	{r4, r5, r6, r7, lr}
10044f82:	0015      	movs	r5, r2
10044f84:	b087      	sub	sp, #28
	int output_size = 1;
	/* Output params */
	uint8_t *status = (uint8_t *) (buffer_out + 6);

	if (buffer_out_max_length < (1 + 6)) {
		return 0;
10044f86:	2200      	movs	r2, #0
	if (buffer_out_max_length < (1 + 6)) {
10044f88:	2b06      	cmp	r3, #6
10044f8a:	d932      	bls.n	10044ff2 <aci_l2cap_connection_parameter_update_resp_process+0x72>
	}
	*status = aci_l2cap_connection_parameter_update_resp(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Slave_latency /* 2 */, cp0->Timeout_Multiplier /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */, cp0->Identifier /* 1 */, cp0->Accept /* 1 */);
10044f8c:	7a03      	ldrb	r3, [r0, #8]
10044f8e:	79c2      	ldrb	r2, [r0, #7]
10044f90:	021b      	lsls	r3, r3, #8
10044f92:	4313      	orrs	r3, r2
10044f94:	7982      	ldrb	r2, [r0, #6]
10044f96:	7941      	ldrb	r1, [r0, #5]
10044f98:	0212      	lsls	r2, r2, #8
10044f9a:	430a      	orrs	r2, r1
10044f9c:	7901      	ldrb	r1, [r0, #4]
10044f9e:	78c6      	ldrb	r6, [r0, #3]
10044fa0:	0209      	lsls	r1, r1, #8
10044fa2:	1c44      	adds	r4, r0, #1
10044fa4:	4331      	orrs	r1, r6
10044fa6:	7846      	ldrb	r6, [r0, #1]
10044fa8:	7880      	ldrb	r0, [r0, #2]
10044faa:	0200      	lsls	r0, r0, #8
10044fac:	4330      	orrs	r0, r6
10044fae:	7be6      	ldrb	r6, [r4, #15]
10044fb0:	9604      	str	r6, [sp, #16]
10044fb2:	7ba6      	ldrb	r6, [r4, #14]
10044fb4:	9603      	str	r6, [sp, #12]
10044fb6:	7b66      	ldrb	r6, [r4, #13]
10044fb8:	7b27      	ldrb	r7, [r4, #12]
10044fba:	0236      	lsls	r6, r6, #8
10044fbc:	433e      	orrs	r6, r7
10044fbe:	9602      	str	r6, [sp, #8]
10044fc0:	7ae6      	ldrb	r6, [r4, #11]
10044fc2:	7aa7      	ldrb	r7, [r4, #10]
10044fc4:	0236      	lsls	r6, r6, #8
10044fc6:	433e      	orrs	r6, r7
10044fc8:	9601      	str	r6, [sp, #4]
10044fca:	7a26      	ldrb	r6, [r4, #8]
10044fcc:	7a64      	ldrb	r4, [r4, #9]
10044fce:	0224      	lsls	r4, r4, #8
10044fd0:	4334      	orrs	r4, r6
10044fd2:	9400      	str	r4, [sp, #0]
10044fd4:	f7fc fd27 	bl	10041a26 <aci_l2cap_connection_parameter_update_resp>
	buffer_out[0] = 0x04;
10044fd8:	2304      	movs	r3, #4
	buffer_out[1] = 0x0E;
10044fda:	220e      	movs	r2, #14
	buffer_out[0] = 0x04;
10044fdc:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = output_size + 3;
10044fde:	70ab      	strb	r3, [r5, #2]
	buffer_out[3] = 0x01;
10044fe0:	3b03      	subs	r3, #3
10044fe2:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x82;
10044fe4:	3381      	adds	r3, #129	; 0x81
10044fe6:	712b      	strb	r3, [r5, #4]
	buffer_out[5] = 0xfd;
10044fe8:	337b      	adds	r3, #123	; 0x7b
	buffer_out[1] = 0x0E;
10044fea:	706a      	strb	r2, [r5, #1]
	*status = aci_l2cap_connection_parameter_update_resp(cp0->Connection_Handle /* 2 */, cp0->Conn_Interval_Min /* 2 */, cp0->Conn_Interval_Max /* 2 */, cp0->Slave_latency /* 2 */, cp0->Timeout_Multiplier /* 2 */, cp0->Minimum_CE_Length /* 2 */, cp0->Maximum_CE_Length /* 2 */, cp0->Identifier /* 1 */, cp0->Accept /* 1 */);
10044fec:	71a8      	strb	r0, [r5, #6]
	buffer_out[5] = 0xfd;
10044fee:	716b      	strb	r3, [r5, #5]
10044ff0:	3a07      	subs	r2, #7
	return (output_size + 6);
}
10044ff2:	0010      	movs	r0, r2
10044ff4:	b007      	add	sp, #28
10044ff6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10044ff8 <hci_disconnection_complete_event>:
 - 0xFA: Flash read failed
 - 0xFB: Flash write failed
 - 0xFC: Flash erase failed
 * @retval None
 */
void hci_disconnection_complete_event(uint8_t Status, uint16_t Connection_Handle, uint8_t Reason) {
10044ff8:	b500      	push	{lr}
10044ffa:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	hci_disconnection_complete_event_rp0 *rp0 = (hci_disconnection_complete_event_rp0 *) (buffer_out + 3);
	rp0->Status = Status;
10044ffc:	ab01      	add	r3, sp, #4
	rp0->Connection_Handle = Connection_Handle;
10044ffe:	8099      	strh	r1, [r3, #4]
	rp0->Reason = Reason;
10045000:	719a      	strb	r2, [r3, #6]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0x05;
10045002:	2105      	movs	r1, #5
	buffer_out[0] = 0x04;
10045004:	2204      	movs	r2, #4
	rp0->Status = Status;
10045006:	70d8      	strb	r0, [r3, #3]
	buffer_out[0] = 0x04;
10045008:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0x05;
1004500a:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 1 + 2 + 1;
1004500c:	709a      	strb	r2, [r3, #2]
	send_event(buffer_out, buffer_out[2] + 3, 0);
1004500e:	3102      	adds	r1, #2
10045010:	2200      	movs	r2, #0
10045012:	0018      	movs	r0, r3
10045014:	f001 fb7a 	bl	1004670c <send_event>
}
10045018:	b043      	add	sp, #268	; 0x10c
1004501a:	bd00      	pop	{pc}

1004501c <hci_encryption_change_event>:
 * Values:
 - 0x00: Link Level Encryption OFF
 - 0x01: Link Level Encryption is ON with AES-CCM
 * @retval None
 */
void hci_encryption_change_event(uint8_t Status, uint16_t Connection_Handle, uint8_t Encryption_Enabled) {
1004501c:	b500      	push	{lr}
1004501e:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	hci_encryption_change_event_rp0 *rp0 = (hci_encryption_change_event_rp0 *) (buffer_out + 3);
	rp0->Status = Status;
10045020:	ab01      	add	r3, sp, #4
	rp0->Connection_Handle = Connection_Handle;
10045022:	8099      	strh	r1, [r3, #4]
	rp0->Encryption_Enabled = Encryption_Enabled;
10045024:	719a      	strb	r2, [r3, #6]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0x08;
10045026:	2108      	movs	r1, #8
	buffer_out[0] = 0x04;
10045028:	2204      	movs	r2, #4
	rp0->Status = Status;
1004502a:	70d8      	strb	r0, [r3, #3]
	buffer_out[0] = 0x04;
1004502c:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0x08;
1004502e:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 1 + 2 + 1;
10045030:	709a      	strb	r2, [r3, #2]
	send_event(buffer_out, buffer_out[2] + 3, 1);
10045032:	3901      	subs	r1, #1
10045034:	3a03      	subs	r2, #3
10045036:	0018      	movs	r0, r3
10045038:	f001 fb68 	bl	1004670c <send_event>
}
1004503c:	b043      	add	sp, #268	; 0x10c
1004503e:	bd00      	pop	{pc}

10045040 <hci_read_remote_version_information_complete_event>:
 * @param Version Version of the Current LMP in the remote Controller
 * @param Manufacturer_Name Manufacturer Name of the remote Controller
 * @param Subversion Subversion of the LMP in the remote Controller
 * @retval None
 */
void hci_read_remote_version_information_complete_event(uint8_t Status, uint16_t Connection_Handle, uint8_t Version, uint16_t Manufacturer_Name, uint16_t Subversion) {
10045040:	b530      	push	{r4, r5, lr}
10045042:	b0c3      	sub	sp, #268	; 0x10c
10045044:	ac46      	add	r4, sp, #280	; 0x118
10045046:	8825      	ldrh	r5, [r4, #0]
	uint8_t buffer_out[258];
	/* Output params */
	hci_read_remote_version_information_complete_event_rp0 *rp0 = (hci_read_remote_version_information_complete_event_rp0 *) (buffer_out + 3);
	rp0->Status = Status;
10045048:	ac01      	add	r4, sp, #4
	rp0->Connection_Handle = Connection_Handle;
	rp0->Version = Version;
1004504a:	71a2      	strb	r2, [r4, #6]
	rp0->Manufacturer_Name = Manufacturer_Name;
1004504c:	220b      	movs	r2, #11
1004504e:	446a      	add	r2, sp
10045050:	7013      	strb	r3, [r2, #0]
10045052:	0a1b      	lsrs	r3, r3, #8
10045054:	7053      	strb	r3, [r2, #1]
	rp0->Subversion = Subversion;
10045056:	230d      	movs	r3, #13
10045058:	446b      	add	r3, sp
1004505a:	701d      	strb	r5, [r3, #0]
1004505c:	0a2d      	lsrs	r5, r5, #8
1004505e:	705d      	strb	r5, [r3, #1]
	buffer_out[0] = 0x04;
10045060:	2304      	movs	r3, #4
10045062:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x0c;
10045064:	3308      	adds	r3, #8
	rp0->Status = Status;
10045066:	70e0      	strb	r0, [r4, #3]
	rp0->Connection_Handle = Connection_Handle;
10045068:	80a1      	strh	r1, [r4, #4]
	buffer_out[1] = 0x0c;
1004506a:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 2 + 1 + 2 + 2;
	send_event(buffer_out, buffer_out[2] + 3, 2);
1004506c:	2202      	movs	r2, #2
	buffer_out[2] = 1 + 2 + 1 + 2 + 2;
1004506e:	3b04      	subs	r3, #4
	send_event(buffer_out, buffer_out[2] + 3, 2);
10045070:	210b      	movs	r1, #11
10045072:	0020      	movs	r0, r4
	buffer_out[2] = 1 + 2 + 1 + 2 + 2;
10045074:	70a3      	strb	r3, [r4, #2]
	send_event(buffer_out, buffer_out[2] + 3, 2);
10045076:	f001 fb49 	bl	1004670c <send_event>
}
1004507a:	b043      	add	sp, #268	; 0x10c
1004507c:	bd30      	pop	{r4, r5, pc}

1004507e <hci_hardware_error_event>:
	uint8_t buffer_out[258];
	/* Output params */
	hci_hardware_error_event_rp0 *rp0 = (hci_hardware_error_event_rp0 *) (buffer_out + 3);
	rp0->Hardware_Code = Hardware_Code;
	buffer_out[0] = 0x04;
	buffer_out[1] = 0x10;
1004507e:	2210      	movs	r2, #16
	buffer_out[0] = 0x04;
10045080:	2104      	movs	r1, #4
void hci_hardware_error_event(uint8_t Hardware_Code) {
10045082:	b500      	push	{lr}
10045084:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Hardware_Code = Hardware_Code;
10045086:	ab01      	add	r3, sp, #4
	buffer_out[1] = 0x10;
10045088:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 1;
1004508a:	3a0f      	subs	r2, #15
	rp0->Hardware_Code = Hardware_Code;
1004508c:	70d8      	strb	r0, [r3, #3]
	buffer_out[2] = 1;
1004508e:	709a      	strb	r2, [r3, #2]
	send_event(buffer_out, buffer_out[2] + 3, 5);
10045090:	0018      	movs	r0, r3
10045092:	1852      	adds	r2, r2, r1
	buffer_out[0] = 0x04;
10045094:	7019      	strb	r1, [r3, #0]
	send_event(buffer_out, buffer_out[2] + 3, 5);
10045096:	f001 fb39 	bl	1004670c <send_event>
}
1004509a:	b043      	add	sp, #268	; 0x10c
1004509c:	bd00      	pop	{pc}

1004509e <hci_number_of_completed_packets_event>:
 flushed.
 * @param Number_of_Handles The number of Connection_Handles and Num_HCI_Data_Packets parameters pairs contained in this event
 * @param Handle_Packets_Pair_Entry See @ref Handle_Packets_Pair_Entry_t
 * @retval None
 */
void hci_number_of_completed_packets_event(uint8_t Number_of_Handles, Handle_Packets_Pair_Entry_t Handle_Packets_Pair_Entry[]) {
1004509e:	b530      	push	{r4, r5, lr}
	/* Output params */
	hci_number_of_completed_packets_event_rp0 *rp0 = (hci_number_of_completed_packets_event_rp0 *) (buffer_out + 3);
	rp0->Number_of_Handles = Number_of_Handles;
	{
		int i;
		for (i = 0; i < Number_of_Handles; i++) {
100450a0:	2400      	movs	r4, #0
void hci_number_of_completed_packets_event(uint8_t Number_of_Handles, Handle_Packets_Pair_Entry_t Handle_Packets_Pair_Entry[]) {
100450a2:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Number_of_Handles = Number_of_Handles;
100450a4:	ab01      	add	r3, sp, #4
100450a6:	70d8      	strb	r0, [r3, #3]
100450a8:	aa02      	add	r2, sp, #8
		for (i = 0; i < Number_of_Handles; i++) {
100450aa:	4284      	cmp	r4, r0
100450ac:	db0e      	blt.n	100450cc <hci_number_of_completed_packets_event+0x2e>
			output_size += sizeof(uint16_t);
			rp0->Handle_Packets_Pair_Entry[i].HC_Num_Of_Completed_Packets = Handle_Packets_Pair_Entry[i].HC_Num_Of_Completed_Packets;
			output_size += sizeof(uint16_t);
		}
	}
	buffer_out[0] = 0x04;
100450ae:	2204      	movs	r2, #4
	buffer_out[1] = 0x13;
	buffer_out[2] = 1 + output_size;
100450b0:	0081      	lsls	r1, r0, #2
100450b2:	3101      	adds	r1, #1
	buffer_out[0] = 0x04;
100450b4:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 1 + output_size;
100450b6:	b2c9      	uxtb	r1, r1
	buffer_out[1] = 0x13;
100450b8:	320f      	adds	r2, #15
100450ba:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 1 + output_size;
100450bc:	7099      	strb	r1, [r3, #2]
	send_event(buffer_out, buffer_out[2] + 3, 6);
100450be:	3a0d      	subs	r2, #13
100450c0:	3103      	adds	r1, #3
100450c2:	0018      	movs	r0, r3
100450c4:	f001 fb22 	bl	1004670c <send_event>
}
100450c8:	b043      	add	sp, #268	; 0x10c
100450ca:	bd30      	pop	{r4, r5, pc}
			rp0->Handle_Packets_Pair_Entry[i].Connection_Handle = Handle_Packets_Pair_Entry[i].Connection_Handle;
100450cc:	880d      	ldrh	r5, [r1, #0]
		for (i = 0; i < Number_of_Handles; i++) {
100450ce:	3401      	adds	r4, #1
			rp0->Handle_Packets_Pair_Entry[i].Connection_Handle = Handle_Packets_Pair_Entry[i].Connection_Handle;
100450d0:	8015      	strh	r5, [r2, #0]
			rp0->Handle_Packets_Pair_Entry[i].HC_Num_Of_Completed_Packets = Handle_Packets_Pair_Entry[i].HC_Num_Of_Completed_Packets;
100450d2:	884d      	ldrh	r5, [r1, #2]
100450d4:	3104      	adds	r1, #4
100450d6:	8055      	strh	r5, [r2, #2]
100450d8:	3204      	adds	r2, #4
100450da:	e7e6      	b.n	100450aa <hci_number_of_completed_packets_event+0xc>

100450dc <hci_encryption_key_refresh_complete_event>:
	uint8_t buffer_out[258];
	/* Output params */
	hci_encryption_key_refresh_complete_event_rp0 *rp0 = (hci_encryption_key_refresh_complete_event_rp0 *) (buffer_out + 3);
	rp0->Status = Status;
	rp0->Connection_Handle = Connection_Handle;
	buffer_out[0] = 0x04;
100450dc:	2204      	movs	r2, #4
void hci_encryption_key_refresh_complete_event(uint8_t Status, uint16_t Connection_Handle) {
100450de:	b500      	push	{lr}
100450e0:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Status = Status;
100450e2:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
100450e4:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0x30;
100450e6:	322c      	adds	r2, #44	; 0x2c
100450e8:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 1 + 2;
100450ea:	3a2d      	subs	r2, #45	; 0x2d
	rp0->Status = Status;
100450ec:	70d8      	strb	r0, [r3, #3]
	rp0->Connection_Handle = Connection_Handle;
100450ee:	8099      	strh	r1, [r3, #4]
	buffer_out[2] = 1 + 2;
100450f0:	709a      	strb	r2, [r3, #2]
	send_event(buffer_out, buffer_out[2] + 3, 7);
100450f2:	2106      	movs	r1, #6
100450f4:	3204      	adds	r2, #4
100450f6:	0018      	movs	r0, r3
100450f8:	f001 fb08 	bl	1004670c <send_event>
}
100450fc:	b043      	add	sp, #268	; 0x10c
100450fe:	bd00      	pop	{pc}

10045100 <aci_blue_initialized_event>:
void aci_blue_initialized_event(uint8_t Reason_Code) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_blue_initialized_event_rp0 *rp0 = (aci_blue_initialized_event_rp0 *) (buffer_out + 5);
	rp0->Reason_Code = Reason_Code;
	buffer_out[0] = 0x04;
10045100:	2204      	movs	r2, #4
void aci_blue_initialized_event(uint8_t Reason_Code) {
10045102:	b500      	push	{lr}
10045104:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Reason_Code = Reason_Code;
10045106:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
10045108:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
1004510a:	32fb      	adds	r2, #251	; 0xfb
1004510c:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 1 + 2;
1004510e:	3afc      	subs	r2, #252	; 0xfc
10045110:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x01;
10045112:	3a02      	subs	r2, #2
10045114:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x00;
10045116:	2200      	movs	r2, #0
	rp0->Reason_Code = Reason_Code;
10045118:	7158      	strb	r0, [r3, #5]
	buffer_out[4] = 0x00;
1004511a:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 8);
1004511c:	2106      	movs	r1, #6
1004511e:	3208      	adds	r2, #8
10045120:	0018      	movs	r0, r3
10045122:	f001 faf3 	bl	1004670c <send_event>
}
10045126:	b043      	add	sp, #268	; 0x10c
10045128:	bd00      	pop	{pc}

1004512a <aci_blue_crash_info_event>:
 * @param xPSR xPSR register
 * @param Debug_Data_Length Length of Debug_Data field
 * @param Debug_Data Debug data
 * @retval None
 */
void aci_blue_crash_info_event(uint8_t Crash_Type, uint32_t SP, uint32_t R0, uint32_t R1, uint32_t R2, uint32_t R3, uint32_t R12, uint32_t LR, uint32_t PC, uint32_t xPSR, uint8_t Debug_Data_Length, uint8_t Debug_Data[]) {
1004512a:	b5f0      	push	{r4, r5, r6, r7, lr}
1004512c:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	aci_blue_crash_info_event_rp0 *rp0 = (aci_blue_crash_info_event_rp0 *) (buffer_out + 5);
	rp0->Crash_Type = Crash_Type;
1004512e:	ad01      	add	r5, sp, #4
10045130:	7168      	strb	r0, [r5, #5]
	rp0->SP = SP;
10045132:	200a      	movs	r0, #10
10045134:	4468      	add	r0, sp
10045136:	8001      	strh	r1, [r0, #0]
10045138:	0c09      	lsrs	r1, r1, #16
1004513a:	8041      	strh	r1, [r0, #2]
	rp0->R0 = R0;
1004513c:	210e      	movs	r1, #14
1004513e:	4469      	add	r1, sp
10045140:	800a      	strh	r2, [r1, #0]
10045142:	0c12      	lsrs	r2, r2, #16
10045144:	804a      	strh	r2, [r1, #2]
	rp0->R1 = R1;
10045146:	2212      	movs	r2, #18
10045148:	446a      	add	r2, sp
1004514a:	8013      	strh	r3, [r2, #0]
1004514c:	0c1b      	lsrs	r3, r3, #16
1004514e:	8053      	strh	r3, [r2, #2]
	rp0->R2 = R2;
10045150:	2316      	movs	r3, #22
void aci_blue_crash_info_event(uint8_t Crash_Type, uint32_t SP, uint32_t R0, uint32_t R1, uint32_t R2, uint32_t R3, uint32_t R12, uint32_t LR, uint32_t PC, uint32_t xPSR, uint8_t Debug_Data_Length, uint8_t Debug_Data[]) {
10045152:	9f48      	ldr	r7, [sp, #288]	; 0x120
	rp0->R2 = R2;
10045154:	446b      	add	r3, sp
10045156:	801f      	strh	r7, [r3, #0]
10045158:	0c3f      	lsrs	r7, r7, #16
1004515a:	805f      	strh	r7, [r3, #2]
	rp0->R3 = R3;
1004515c:	231a      	movs	r3, #26
void aci_blue_crash_info_event(uint8_t Crash_Type, uint32_t SP, uint32_t R0, uint32_t R1, uint32_t R2, uint32_t R3, uint32_t R12, uint32_t LR, uint32_t PC, uint32_t xPSR, uint8_t Debug_Data_Length, uint8_t Debug_Data[]) {
1004515e:	9e49      	ldr	r6, [sp, #292]	; 0x124
	rp0->R3 = R3;
10045160:	446b      	add	r3, sp
10045162:	801e      	strh	r6, [r3, #0]
	rp0->R12 = R12;
10045164:	2194      	movs	r1, #148	; 0x94
	rp0->R3 = R3;
10045166:	0c36      	lsrs	r6, r6, #16
10045168:	805e      	strh	r6, [r3, #2]
	rp0->R12 = R12;
1004516a:	466b      	mov	r3, sp
1004516c:	221e      	movs	r2, #30
1004516e:	0049      	lsls	r1, r1, #1
10045170:	185b      	adds	r3, r3, r1
10045172:	881b      	ldrh	r3, [r3, #0]
10045174:	446a      	add	r2, sp
10045176:	8013      	strh	r3, [r2, #0]
10045178:	9b4a      	ldr	r3, [sp, #296]	; 0x128
	rp0->LR = LR;
1004517a:	3104      	adds	r1, #4
	rp0->R12 = R12;
1004517c:	0c1b      	lsrs	r3, r3, #16
1004517e:	8053      	strh	r3, [r2, #2]
	rp0->LR = LR;
10045180:	466b      	mov	r3, sp
10045182:	2222      	movs	r2, #34	; 0x22
10045184:	185b      	adds	r3, r3, r1
10045186:	881b      	ldrh	r3, [r3, #0]
10045188:	446a      	add	r2, sp
1004518a:	8013      	strh	r3, [r2, #0]
1004518c:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
	rp0->PC = PC;
1004518e:	3104      	adds	r1, #4
	rp0->LR = LR;
10045190:	0c1b      	lsrs	r3, r3, #16
10045192:	8053      	strh	r3, [r2, #2]
	rp0->PC = PC;
10045194:	466b      	mov	r3, sp
10045196:	2226      	movs	r2, #38	; 0x26
10045198:	185b      	adds	r3, r3, r1
1004519a:	881b      	ldrh	r3, [r3, #0]
1004519c:	446a      	add	r2, sp
1004519e:	8013      	strh	r3, [r2, #0]
100451a0:	9b4c      	ldr	r3, [sp, #304]	; 0x130
	rp0->xPSR = xPSR;
100451a2:	3104      	adds	r1, #4
	rp0->PC = PC;
100451a4:	0c1b      	lsrs	r3, r3, #16
100451a6:	8053      	strh	r3, [r2, #2]
	rp0->xPSR = xPSR;
100451a8:	466b      	mov	r3, sp
100451aa:	222a      	movs	r2, #42	; 0x2a
100451ac:	185b      	adds	r3, r3, r1
100451ae:	881b      	ldrh	r3, [r3, #0]
100451b0:	446a      	add	r2, sp
100451b2:	8013      	strh	r3, [r2, #0]
100451b4:	9b4d      	ldr	r3, [sp, #308]	; 0x134
	rp0->Debug_Data_Length = Debug_Data_Length;
	Osal_MemCpy((void *) rp0->Debug_Data, (const void *) Debug_Data, Debug_Data_Length);
100451b6:	202f      	movs	r0, #47	; 0x2f
	rp0->xPSR = xPSR;
100451b8:	0c1b      	lsrs	r3, r3, #16
100451ba:	8053      	strh	r3, [r2, #2]
	rp0->Debug_Data_Length = Debug_Data_Length;
100451bc:	232e      	movs	r3, #46	; 0x2e
void aci_blue_crash_info_event(uint8_t Crash_Type, uint32_t SP, uint32_t R0, uint32_t R1, uint32_t R2, uint32_t R3, uint32_t R12, uint32_t LR, uint32_t PC, uint32_t xPSR, uint8_t Debug_Data_Length, uint8_t Debug_Data[]) {
100451be:	ac4e      	add	r4, sp, #312	; 0x138
100451c0:	7824      	ldrb	r4, [r4, #0]
	rp0->Debug_Data_Length = Debug_Data_Length;
100451c2:	446b      	add	r3, sp
100451c4:	701c      	strb	r4, [r3, #0]
	Osal_MemCpy((void *) rp0->Debug_Data, (const void *) Debug_Data, Debug_Data_Length);
100451c6:	0022      	movs	r2, r4
100451c8:	994f      	ldr	r1, [sp, #316]	; 0x13c
100451ca:	4468      	add	r0, sp
100451cc:	f7fb fad9 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100451d0:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 1 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 1 + Debug_Data_Length + 2;
100451d2:	0021      	movs	r1, r4
	buffer_out[0] = 0x04;
100451d4:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
100451d6:	33fb      	adds	r3, #251	; 0xfb
100451d8:	706b      	strb	r3, [r5, #1]
	buffer_out[3] = 0x03;
	buffer_out[4] = 0x00;
	send_event(buffer_out, buffer_out[2] + 3, -1);
100451da:	2201      	movs	r2, #1
	buffer_out[3] = 0x03;
100451dc:	3bfc      	subs	r3, #252	; 0xfc
100451de:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x00;
100451e0:	2300      	movs	r3, #0
	buffer_out[2] = 1 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 1 + Debug_Data_Length + 2;
100451e2:	3128      	adds	r1, #40	; 0x28
100451e4:	b2c9      	uxtb	r1, r1
100451e6:	70a9      	strb	r1, [r5, #2]
	send_event(buffer_out, buffer_out[2] + 3, -1);
100451e8:	4252      	negs	r2, r2
100451ea:	3103      	adds	r1, #3
100451ec:	0028      	movs	r0, r5
	buffer_out[4] = 0x00;
100451ee:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, -1);
100451f0:	f001 fa8c 	bl	1004670c <send_event>
}
100451f4:	b043      	add	sp, #268	; 0x10c
100451f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100451f8 <aci_hal_end_of_radio_activity_event>:
 - 0x06: TX test mode
 - 0x07: RX test mode
 * @param Next_State_SysTime 32bit absolute current time expressed in internal time units.
 * @retval None
 */
void aci_hal_end_of_radio_activity_event(uint8_t Last_State, uint8_t Next_State, uint32_t Next_State_SysTime) {
100451f8:	b500      	push	{lr}
100451fa:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	aci_hal_end_of_radio_activity_event_rp0 *rp0 = (aci_hal_end_of_radio_activity_event_rp0 *) (buffer_out + 5);
	rp0->Last_State = Last_State;
100451fc:	ab01      	add	r3, sp, #4
	rp0->Next_State = Next_State;
100451fe:	7199      	strb	r1, [r3, #6]
	rp0->Next_State_SysTime = Next_State_SysTime;
10045200:	210b      	movs	r1, #11
	rp0->Last_State = Last_State;
10045202:	7158      	strb	r0, [r3, #5]
	rp0->Next_State_SysTime = Next_State_SysTime;
10045204:	4469      	add	r1, sp
10045206:	0a10      	lsrs	r0, r2, #8
10045208:	700a      	strb	r2, [r1, #0]
1004520a:	7048      	strb	r0, [r1, #1]
1004520c:	0c10      	lsrs	r0, r2, #16
1004520e:	0e12      	lsrs	r2, r2, #24
10045210:	70ca      	strb	r2, [r1, #3]
	buffer_out[0] = 0x04;
10045212:	2204      	movs	r2, #4
	rp0->Next_State_SysTime = Next_State_SysTime;
10045214:	7088      	strb	r0, [r1, #2]
	buffer_out[1] = 0xFF;
10045216:	21ff      	movs	r1, #255	; 0xff
	buffer_out[0] = 0x04;
10045218:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 1 + 1 + 4 + 2;
	buffer_out[3] = 0x04;
1004521a:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x00;
1004521c:	2200      	movs	r2, #0
	buffer_out[1] = 0xFF;
1004521e:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 1 + 1 + 4 + 2;
10045220:	39f7      	subs	r1, #247	; 0xf7
10045222:	7099      	strb	r1, [r3, #2]
	buffer_out[4] = 0x00;
10045224:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, -1);
10045226:	3103      	adds	r1, #3
10045228:	3a01      	subs	r2, #1
1004522a:	0018      	movs	r0, r3
1004522c:	f001 fa6e 	bl	1004670c <send_event>
}
10045230:	b043      	add	sp, #268	; 0x10c
10045232:	bd00      	pop	{pc}

10045234 <aci_hal_scan_req_report_event>:
 - 0x02: Public Identity Address
 - 0x03: Random (Static) Identity Address
 * @param Peer_Address Public Device Address or Random Device Address of the peer device
 * @retval None
 */
void aci_hal_scan_req_report_event(int8_t RSSI, uint8_t Peer_Address_Type, uint8_t Peer_Address[6]) {
10045234:	b510      	push	{r4, lr}
10045236:	b0c2      	sub	sp, #264	; 0x108
	uint8_t buffer_out[258];
	/* Output params */
	aci_hal_scan_req_report_event_rp0 *rp0 = (aci_hal_scan_req_report_event_rp0 *) (buffer_out + 5);
	rp0->RSSI = RSSI;
10045238:	ac01      	add	r4, sp, #4
void aci_hal_scan_req_report_event(int8_t RSSI, uint8_t Peer_Address_Type, uint8_t Peer_Address[6]) {
1004523a:	0013      	movs	r3, r2
	rp0->RSSI = RSSI;
1004523c:	7160      	strb	r0, [r4, #5]
	rp0->Peer_Address_Type = Peer_Address_Type;
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
1004523e:	200b      	movs	r0, #11
	rp0->Peer_Address_Type = Peer_Address_Type;
10045240:	71a1      	strb	r1, [r4, #6]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045242:	2206      	movs	r2, #6
10045244:	0019      	movs	r1, r3
10045246:	4468      	add	r0, sp
10045248:	f7fb fa9b 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004524c:	2304      	movs	r3, #4
1004524e:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0xFF;
10045250:	33fb      	adds	r3, #251	; 0xfb
10045252:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 1 + 6 + 2;
10045254:	3bf5      	subs	r3, #245	; 0xf5
10045256:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x05;
	buffer_out[4] = 0x00;
	send_event(buffer_out, buffer_out[2] + 3, -1);
10045258:	2201      	movs	r2, #1
	buffer_out[3] = 0x05;
1004525a:	3b05      	subs	r3, #5
1004525c:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x00;
1004525e:	2300      	movs	r3, #0
	send_event(buffer_out, buffer_out[2] + 3, -1);
10045260:	4252      	negs	r2, r2
10045262:	210d      	movs	r1, #13
10045264:	0020      	movs	r0, r4
	buffer_out[4] = 0x00;
10045266:	7123      	strb	r3, [r4, #4]
	send_event(buffer_out, buffer_out[2] + 3, -1);
10045268:	f001 fa50 	bl	1004670c <send_event>
}
1004526c:	b042      	add	sp, #264	; 0x108
1004526e:	bd10      	pop	{r4, pc}

10045270 <aci_hal_fw_error_event>:
 - 0x01: L2CAP recombination failure
 * @param Data_Length Length of Data in octets
 * @param Data The error event info
 * @retval None
 */
void aci_hal_fw_error_event(uint8_t FW_Error_Type, uint8_t Data_Length, uint8_t Data[]) {
10045270:	b530      	push	{r4, r5, lr}
10045272:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	aci_hal_fw_error_event_rp0 *rp0 = (aci_hal_fw_error_event_rp0 *) (buffer_out + 5);
	rp0->FW_Error_Type = FW_Error_Type;
10045274:	ad01      	add	r5, sp, #4
void aci_hal_fw_error_event(uint8_t FW_Error_Type, uint8_t Data_Length, uint8_t Data[]) {
10045276:	000c      	movs	r4, r1
	rp0->FW_Error_Type = FW_Error_Type;
10045278:	7168      	strb	r0, [r5, #5]
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
1004527a:	200b      	movs	r0, #11
void aci_hal_fw_error_event(uint8_t FW_Error_Type, uint8_t Data_Length, uint8_t Data[]) {
1004527c:	0011      	movs	r1, r2
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
1004527e:	4468      	add	r0, sp
10045280:	0022      	movs	r2, r4
	rp0->Data_Length = Data_Length;
10045282:	71ac      	strb	r4, [r5, #6]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045284:	f7fb fa7d 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045288:	2304      	movs	r3, #4
1004528a:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
1004528c:	33fb      	adds	r3, #251	; 0xfb
1004528e:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 1 + 1 + Data_Length + 2;
	buffer_out[3] = 0x06;
	buffer_out[4] = 0x00;
	send_event(buffer_out, buffer_out[2] + 3, -1);
10045290:	2201      	movs	r2, #1
	buffer_out[3] = 0x06;
10045292:	3bf9      	subs	r3, #249	; 0xf9
10045294:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x00;
10045296:	2300      	movs	r3, #0
	buffer_out[2] = 1 + 1 + Data_Length + 2;
10045298:	1d21      	adds	r1, r4, #4
1004529a:	b2c9      	uxtb	r1, r1
1004529c:	70a9      	strb	r1, [r5, #2]
	send_event(buffer_out, buffer_out[2] + 3, -1);
1004529e:	4252      	negs	r2, r2
100452a0:	3103      	adds	r1, #3
100452a2:	0028      	movs	r0, r5
	buffer_out[4] = 0x00;
100452a4:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, -1);
100452a6:	f001 fa31 	bl	1004670c <send_event>
}
100452aa:	b043      	add	sp, #268	; 0x10c
100452ac:	bd30      	pop	{r4, r5, pc}

100452ae <aci_gap_limited_discoverable_event>:
 * @retval None
 */
void aci_gap_limited_discoverable_event(void) {
	uint8_t buffer_out[258];
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
100452ae:	22ff      	movs	r2, #255	; 0xff
void aci_gap_limited_discoverable_event(void) {
100452b0:	b500      	push	{lr}
100452b2:	b0c3      	sub	sp, #268	; 0x10c
	buffer_out[0] = 0x04;
100452b4:	a801      	add	r0, sp, #4
	buffer_out[1] = 0xFF;
100452b6:	7042      	strb	r2, [r0, #1]
	buffer_out[2] = 0 + 2;
100452b8:	3afd      	subs	r2, #253	; 0xfd
100452ba:	7082      	strb	r2, [r0, #2]
	buffer_out[3] = 0x00;
100452bc:	2200      	movs	r2, #0
	buffer_out[0] = 0x04;
100452be:	2304      	movs	r3, #4
	buffer_out[3] = 0x00;
100452c0:	70c2      	strb	r2, [r0, #3]
	buffer_out[4] = 0x04;
	send_event(buffer_out, buffer_out[2] + 3, 9);
100452c2:	2105      	movs	r1, #5
100452c4:	3209      	adds	r2, #9
	buffer_out[0] = 0x04;
100452c6:	7003      	strb	r3, [r0, #0]
	buffer_out[4] = 0x04;
100452c8:	7103      	strb	r3, [r0, #4]
	send_event(buffer_out, buffer_out[2] + 3, 9);
100452ca:	f001 fa1f 	bl	1004670c <send_event>
}
100452ce:	b043      	add	sp, #268	; 0x10c
100452d0:	bd00      	pop	{pc}

100452d2 <aci_gap_pairing_complete_event>:
 - 0x0A: SM_INVALID_PARAMS
 - 0x0B: SMP_SC_DHKEY_CHECK_FAILED
 - 0x0C: SMP_SC_NUMCOMPARISON_FAILED
 * @retval None
 */
void aci_gap_pairing_complete_event(uint16_t Connection_Handle, uint8_t Status, uint8_t Reason) {
100452d2:	b510      	push	{r4, lr}
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_pairing_complete_event_rp0 *rp0 = (aci_gap_pairing_complete_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100452d4:	2409      	movs	r4, #9
void aci_gap_pairing_complete_event(uint16_t Connection_Handle, uint8_t Status, uint8_t Reason) {
100452d6:	b0c2      	sub	sp, #264	; 0x108
	rp0->Connection_Handle = Connection_Handle;
100452d8:	446c      	add	r4, sp
100452da:	ab01      	add	r3, sp, #4
100452dc:	7020      	strb	r0, [r4, #0]
100452de:	0a00      	lsrs	r0, r0, #8
100452e0:	7060      	strb	r0, [r4, #1]
	rp0->Status = Status;
100452e2:	71d9      	strb	r1, [r3, #7]
	rp0->Reason = Reason;
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
100452e4:	21ff      	movs	r1, #255	; 0xff
	rp0->Reason = Reason;
100452e6:	721a      	strb	r2, [r3, #8]
	buffer_out[0] = 0x04;
100452e8:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
100452ea:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 2 + 1 + 1 + 2;
100452ec:	39f9      	subs	r1, #249	; 0xf9
100452ee:	7099      	strb	r1, [r3, #2]
	buffer_out[3] = 0x01;
100452f0:	3905      	subs	r1, #5
	buffer_out[0] = 0x04;
100452f2:	701a      	strb	r2, [r3, #0]
	buffer_out[3] = 0x01;
100452f4:	70d9      	strb	r1, [r3, #3]
	buffer_out[4] = 0x04;
100452f6:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 10);
100452f8:	3108      	adds	r1, #8
100452fa:	3206      	adds	r2, #6
100452fc:	0018      	movs	r0, r3
100452fe:	f001 fa05 	bl	1004670c <send_event>
}
10045302:	b042      	add	sp, #264	; 0x108
10045304:	bd10      	pop	{r4, pc}

10045306 <aci_gap_pass_key_req_event>:
 */
void aci_gap_pass_key_req_event(uint16_t Connection_Handle) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_pass_key_req_event_rp0 *rp0 = (aci_gap_pass_key_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045306:	2209      	movs	r2, #9
void aci_gap_pass_key_req_event(uint16_t Connection_Handle) {
10045308:	b500      	push	{lr}
1004530a:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
1004530c:	446a      	add	r2, sp
1004530e:	7010      	strb	r0, [r2, #0]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
10045310:	21ff      	movs	r1, #255	; 0xff
	rp0->Connection_Handle = Connection_Handle;
10045312:	0a00      	lsrs	r0, r0, #8
10045314:	7050      	strb	r0, [r2, #1]
	buffer_out[0] = 0x04;
10045316:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
10045318:	ab01      	add	r3, sp, #4
	buffer_out[1] = 0xFF;
1004531a:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 2 + 2;
	buffer_out[3] = 0x02;
1004531c:	39fd      	subs	r1, #253	; 0xfd
	buffer_out[0] = 0x04;
1004531e:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 2 + 2;
10045320:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x02;
10045322:	70d9      	strb	r1, [r3, #3]
	buffer_out[4] = 0x04;
10045324:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 11);
10045326:	3105      	adds	r1, #5
10045328:	3207      	adds	r2, #7
1004532a:	0018      	movs	r0, r3
1004532c:	f001 f9ee 	bl	1004670c <send_event>
}
10045330:	b043      	add	sp, #268	; 0x10c
10045332:	bd00      	pop	{pc}

10045334 <aci_gap_authorization_req_event>:
 */
void aci_gap_authorization_req_event(uint16_t Connection_Handle) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_authorization_req_event_rp0 *rp0 = (aci_gap_authorization_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045334:	2209      	movs	r2, #9
void aci_gap_authorization_req_event(uint16_t Connection_Handle) {
10045336:	b500      	push	{lr}
10045338:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
1004533a:	446a      	add	r2, sp
1004533c:	7010      	strb	r0, [r2, #0]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
1004533e:	21ff      	movs	r1, #255	; 0xff
	rp0->Connection_Handle = Connection_Handle;
10045340:	0a00      	lsrs	r0, r0, #8
10045342:	7050      	strb	r0, [r2, #1]
	buffer_out[0] = 0x04;
10045344:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
10045346:	ab01      	add	r3, sp, #4
	buffer_out[1] = 0xFF;
10045348:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 2 + 2;
	buffer_out[3] = 0x03;
1004534a:	39fc      	subs	r1, #252	; 0xfc
	buffer_out[0] = 0x04;
1004534c:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 2 + 2;
1004534e:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x03;
10045350:	70d9      	strb	r1, [r3, #3]
	buffer_out[4] = 0x04;
10045352:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 12);
10045354:	3104      	adds	r1, #4
10045356:	3208      	adds	r2, #8
10045358:	0018      	movs	r0, r3
1004535a:	f001 f9d7 	bl	1004670c <send_event>
}
1004535e:	b043      	add	sp, #268	; 0x10c
10045360:	bd00      	pop	{pc}

10045362 <aci_gap_slave_security_initiated_event>:
 * @retval None
 */
void aci_gap_slave_security_initiated_event(void) {
	uint8_t buffer_out[258];
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
10045362:	22ff      	movs	r2, #255	; 0xff
	buffer_out[0] = 0x04;
10045364:	2304      	movs	r3, #4
void aci_gap_slave_security_initiated_event(void) {
10045366:	b500      	push	{lr}
10045368:	b0c3      	sub	sp, #268	; 0x10c
	buffer_out[0] = 0x04;
1004536a:	a801      	add	r0, sp, #4
	buffer_out[1] = 0xFF;
1004536c:	7042      	strb	r2, [r0, #1]
	buffer_out[2] = 0 + 2;
1004536e:	3afd      	subs	r2, #253	; 0xfd
10045370:	7082      	strb	r2, [r0, #2]
	buffer_out[3] = 0x04;
	buffer_out[4] = 0x04;
	send_event(buffer_out, buffer_out[2] + 3, 13);
10045372:	2105      	movs	r1, #5
10045374:	320b      	adds	r2, #11
	buffer_out[0] = 0x04;
10045376:	7003      	strb	r3, [r0, #0]
	buffer_out[3] = 0x04;
10045378:	70c3      	strb	r3, [r0, #3]
	buffer_out[4] = 0x04;
1004537a:	7103      	strb	r3, [r0, #4]
	send_event(buffer_out, buffer_out[2] + 3, 13);
1004537c:	f001 f9c6 	bl	1004670c <send_event>
}
10045380:	b043      	add	sp, #268	; 0x10c
10045382:	bd00      	pop	{pc}

10045384 <aci_gap_bond_lost_event>:
 * @retval None
 */
void aci_gap_bond_lost_event(void) {
	uint8_t buffer_out[258];
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
10045384:	22ff      	movs	r2, #255	; 0xff
	buffer_out[0] = 0x04;
10045386:	2304      	movs	r3, #4
	buffer_out[2] = 0 + 2;
	buffer_out[3] = 0x05;
10045388:	2105      	movs	r1, #5
void aci_gap_bond_lost_event(void) {
1004538a:	b500      	push	{lr}
1004538c:	b0c3      	sub	sp, #268	; 0x10c
	buffer_out[0] = 0x04;
1004538e:	a801      	add	r0, sp, #4
	buffer_out[1] = 0xFF;
10045390:	7042      	strb	r2, [r0, #1]
	buffer_out[2] = 0 + 2;
10045392:	3afd      	subs	r2, #253	; 0xfd
10045394:	7082      	strb	r2, [r0, #2]
	buffer_out[4] = 0x04;
	send_event(buffer_out, buffer_out[2] + 3, 14);
10045396:	320c      	adds	r2, #12
	buffer_out[0] = 0x04;
10045398:	7003      	strb	r3, [r0, #0]
	buffer_out[3] = 0x05;
1004539a:	70c1      	strb	r1, [r0, #3]
	buffer_out[4] = 0x04;
1004539c:	7103      	strb	r3, [r0, #4]
	send_event(buffer_out, buffer_out[2] + 3, 14);
1004539e:	f001 f9b5 	bl	1004670c <send_event>
}
100453a2:	b043      	add	sp, #268	; 0x10c
100453a4:	bd00      	pop	{pc}

100453a6 <aci_gap_proc_complete_event>:
 * @param Data_Length Length of Data in octets
 * @param Data Procedure Specific Data:
 - For Name Discovery Procedure: the name of the peer device if the procedure completed successfully.
 * @retval None
 */
void aci_gap_proc_complete_event(uint8_t Procedure_Code, uint8_t Status, uint8_t Data_Length, uint8_t Data[]) {
100453a6:	b530      	push	{r4, r5, lr}
100453a8:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_proc_complete_event_rp0 *rp0 = (aci_gap_proc_complete_event_rp0 *) (buffer_out + 5);
	rp0->Procedure_Code = Procedure_Code;
100453aa:	ad01      	add	r5, sp, #4
void aci_gap_proc_complete_event(uint8_t Procedure_Code, uint8_t Status, uint8_t Data_Length, uint8_t Data[]) {
100453ac:	0014      	movs	r4, r2
	rp0->Procedure_Code = Procedure_Code;
100453ae:	7168      	strb	r0, [r5, #5]
	rp0->Status = Status;
100453b0:	71a9      	strb	r1, [r5, #6]
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
100453b2:	a803      	add	r0, sp, #12
100453b4:	0019      	movs	r1, r3
	rp0->Data_Length = Data_Length;
100453b6:	71ea      	strb	r2, [r5, #7]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
100453b8:	f7fb f9e3 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
100453bc:	22ff      	movs	r2, #255	; 0xff
	buffer_out[0] = 0x04;
100453be:	2304      	movs	r3, #4
	buffer_out[2] = 1 + 1 + 1 + Data_Length + 2;
100453c0:	3405      	adds	r4, #5
	buffer_out[1] = 0xFF;
100453c2:	706a      	strb	r2, [r5, #1]
	buffer_out[2] = 1 + 1 + 1 + Data_Length + 2;
100453c4:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x07;
100453c6:	3af8      	subs	r2, #248	; 0xf8
	buffer_out[2] = 1 + 1 + 1 + Data_Length + 2;
100453c8:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x07;
100453ca:	70ea      	strb	r2, [r5, #3]
	buffer_out[4] = 0x04;
	send_event(buffer_out, buffer_out[2] + 3, 15);
100453cc:	3103      	adds	r1, #3
100453ce:	3208      	adds	r2, #8
100453d0:	0028      	movs	r0, r5
	buffer_out[0] = 0x04;
100453d2:	702b      	strb	r3, [r5, #0]
	buffer_out[4] = 0x04;
100453d4:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 15);
100453d6:	f001 f999 	bl	1004670c <send_event>
}
100453da:	b043      	add	sp, #268	; 0x10c
100453dc:	bd30      	pop	{r4, r5, pc}

100453de <aci_gap_addr_not_resolved_event>:
 */
void aci_gap_addr_not_resolved_event(uint16_t Connection_Handle) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_addr_not_resolved_event_rp0 *rp0 = (aci_gap_addr_not_resolved_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100453de:	2209      	movs	r2, #9
void aci_gap_addr_not_resolved_event(uint16_t Connection_Handle) {
100453e0:	b500      	push	{lr}
100453e2:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100453e4:	446a      	add	r2, sp
100453e6:	7010      	strb	r0, [r2, #0]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
100453e8:	21ff      	movs	r1, #255	; 0xff
	rp0->Connection_Handle = Connection_Handle;
100453ea:	0a00      	lsrs	r0, r0, #8
100453ec:	7050      	strb	r0, [r2, #1]
	buffer_out[0] = 0x04;
100453ee:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
100453f0:	ab01      	add	r3, sp, #4
	buffer_out[1] = 0xFF;
100453f2:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 2 + 2;
	buffer_out[3] = 0x08;
100453f4:	39f7      	subs	r1, #247	; 0xf7
	buffer_out[0] = 0x04;
100453f6:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 2 + 2;
100453f8:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x08;
100453fa:	70d9      	strb	r1, [r3, #3]
	buffer_out[4] = 0x04;
100453fc:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 16);
100453fe:	3901      	subs	r1, #1
10045400:	320c      	adds	r2, #12
10045402:	0018      	movs	r0, r3
10045404:	f001 f982 	bl	1004670c <send_event>
}
10045408:	b043      	add	sp, #268	; 0x10c
1004540a:	bd00      	pop	{pc}

1004540c <aci_gap_numeric_comparison_value_event>:
 */
void aci_gap_numeric_comparison_value_event(uint16_t Connection_Handle, uint32_t Numeric_Value) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_numeric_comparison_value_event_rp0 *rp0 = (aci_gap_numeric_comparison_value_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
1004540c:	2209      	movs	r2, #9
void aci_gap_numeric_comparison_value_event(uint16_t Connection_Handle, uint32_t Numeric_Value) {
1004540e:	b500      	push	{lr}
10045410:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045412:	446a      	add	r2, sp
10045414:	7010      	strb	r0, [r2, #0]
10045416:	0a00      	lsrs	r0, r0, #8
10045418:	7050      	strb	r0, [r2, #1]
	rp0->Numeric_Value = Numeric_Value;
1004541a:	220b      	movs	r2, #11
1004541c:	0a08      	lsrs	r0, r1, #8
1004541e:	446a      	add	r2, sp
10045420:	7011      	strb	r1, [r2, #0]
10045422:	7050      	strb	r0, [r2, #1]
10045424:	0c08      	lsrs	r0, r1, #16
10045426:	0e09      	lsrs	r1, r1, #24
10045428:	70d1      	strb	r1, [r2, #3]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
1004542a:	21ff      	movs	r1, #255	; 0xff
	rp0->Numeric_Value = Numeric_Value;
1004542c:	7090      	strb	r0, [r2, #2]
	buffer_out[0] = 0x04;
1004542e:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
10045430:	ab01      	add	r3, sp, #4
	buffer_out[1] = 0xFF;
10045432:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 2 + 4 + 2;
10045434:	39f7      	subs	r1, #247	; 0xf7
10045436:	7099      	strb	r1, [r3, #2]
	buffer_out[3] = 0x09;
10045438:	3101      	adds	r1, #1
	buffer_out[0] = 0x04;
1004543a:	701a      	strb	r2, [r3, #0]
	buffer_out[3] = 0x09;
1004543c:	70d9      	strb	r1, [r3, #3]
	buffer_out[4] = 0x04;
1004543e:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 54);
10045440:	3102      	adds	r1, #2
10045442:	3232      	adds	r2, #50	; 0x32
10045444:	0018      	movs	r0, r3
10045446:	f001 f961 	bl	1004670c <send_event>
}
1004544a:	b043      	add	sp, #268	; 0x10c
1004544c:	bd00      	pop	{pc}

1004544e <aci_gap_keypress_notification_event>:
 */
void aci_gap_keypress_notification_event(uint16_t Connection_Handle, uint8_t Notification_Type) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gap_keypress_notification_event_rp0 *rp0 = (aci_gap_keypress_notification_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
1004544e:	2209      	movs	r2, #9
void aci_gap_keypress_notification_event(uint16_t Connection_Handle, uint8_t Notification_Type) {
10045450:	b500      	push	{lr}
10045452:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045454:	446a      	add	r2, sp
10045456:	ab01      	add	r3, sp, #4
10045458:	7010      	strb	r0, [r2, #0]
1004545a:	0a00      	lsrs	r0, r0, #8
1004545c:	7050      	strb	r0, [r2, #1]
	rp0->Notification_Type = Notification_Type;
1004545e:	71d9      	strb	r1, [r3, #7]
	buffer_out[0] = 0x04;
	buffer_out[1] = 0xFF;
10045460:	21ff      	movs	r1, #255	; 0xff
	buffer_out[0] = 0x04;
10045462:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
10045464:	7059      	strb	r1, [r3, #1]
	buffer_out[2] = 2 + 1 + 2;
10045466:	39fa      	subs	r1, #250	; 0xfa
10045468:	7099      	strb	r1, [r3, #2]
	buffer_out[3] = 0x0a;
1004546a:	3105      	adds	r1, #5
	buffer_out[0] = 0x04;
1004546c:	701a      	strb	r2, [r3, #0]
	buffer_out[3] = 0x0a;
1004546e:	70d9      	strb	r1, [r3, #3]
	buffer_out[4] = 0x04;
10045470:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 55);
10045472:	3902      	subs	r1, #2
10045474:	3233      	adds	r2, #51	; 0x33
10045476:	0018      	movs	r0, r3
10045478:	f001 f948 	bl	1004670c <send_event>
}
1004547c:	b043      	add	sp, #268	; 0x10c
1004547e:	bd00      	pop	{pc}

10045480 <aci_l2cap_connection_update_resp_event>:
 */
void aci_l2cap_connection_update_resp_event(uint16_t Connection_Handle, uint16_t Result) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_l2cap_connection_update_resp_event_rp0 *rp0 = (aci_l2cap_connection_update_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045480:	2209      	movs	r2, #9
void aci_l2cap_connection_update_resp_event(uint16_t Connection_Handle, uint16_t Result) {
10045482:	b500      	push	{lr}
10045484:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045486:	446a      	add	r2, sp
10045488:	7010      	strb	r0, [r2, #0]
1004548a:	0a00      	lsrs	r0, r0, #8
1004548c:	7050      	strb	r0, [r2, #1]
	rp0->Result = Result;
1004548e:	220b      	movs	r2, #11
10045490:	446a      	add	r2, sp
10045492:	7011      	strb	r1, [r2, #0]
10045494:	0a09      	lsrs	r1, r1, #8
10045496:	7051      	strb	r1, [r2, #1]
	buffer_out[0] = 0x04;
10045498:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
1004549a:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
1004549c:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
1004549e:	32fb      	adds	r2, #251	; 0xfb
100454a0:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 2 + 2 + 2;
100454a2:	3af9      	subs	r2, #249	; 0xf9
100454a4:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x00;
100454a6:	2200      	movs	r2, #0
100454a8:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x08;
100454aa:	3208      	adds	r2, #8
100454ac:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 17);
100454ae:	2109      	movs	r1, #9
100454b0:	3209      	adds	r2, #9
100454b2:	0018      	movs	r0, r3
100454b4:	f001 f92a 	bl	1004670c <send_event>
}
100454b8:	b043      	add	sp, #268	; 0x10c
100454ba:	bd00      	pop	{pc}

100454bc <aci_l2cap_proc_timeout_event>:
 */
void aci_l2cap_proc_timeout_event(uint16_t Connection_Handle, uint8_t Data_Length, uint8_t Data[]) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_l2cap_proc_timeout_event_rp0 *rp0 = (aci_l2cap_proc_timeout_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100454bc:	2309      	movs	r3, #9
void aci_l2cap_proc_timeout_event(uint16_t Connection_Handle, uint8_t Data_Length, uint8_t Data[]) {
100454be:	b530      	push	{r4, r5, lr}
100454c0:	000c      	movs	r4, r1
100454c2:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100454c4:	446b      	add	r3, sp
100454c6:	7018      	strb	r0, [r3, #0]
100454c8:	0a00      	lsrs	r0, r0, #8
100454ca:	ad01      	add	r5, sp, #4
100454cc:	7058      	strb	r0, [r3, #1]
void aci_l2cap_proc_timeout_event(uint16_t Connection_Handle, uint8_t Data_Length, uint8_t Data[]) {
100454ce:	0011      	movs	r1, r2
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
100454d0:	a803      	add	r0, sp, #12
100454d2:	0022      	movs	r2, r4
	rp0->Data_Length = Data_Length;
100454d4:	71ec      	strb	r4, [r5, #7]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
100454d6:	f7fb f954 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100454da:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + Data_Length + 2;
100454dc:	3405      	adds	r4, #5
	buffer_out[0] = 0x04;
100454de:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
100454e0:	33fb      	adds	r3, #251	; 0xfb
100454e2:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + Data_Length + 2;
100454e4:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x01;
100454e6:	3bfe      	subs	r3, #254	; 0xfe
	buffer_out[2] = 2 + 1 + Data_Length + 2;
100454e8:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x01;
100454ea:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x08;
	send_event(buffer_out, buffer_out[2] + 3, 18);
100454ec:	3103      	adds	r1, #3
	buffer_out[4] = 0x08;
100454ee:	3307      	adds	r3, #7
	send_event(buffer_out, buffer_out[2] + 3, 18);
100454f0:	2212      	movs	r2, #18
100454f2:	0028      	movs	r0, r5
	buffer_out[4] = 0x08;
100454f4:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 18);
100454f6:	f001 f909 	bl	1004670c <send_event>
}
100454fa:	b043      	add	sp, #268	; 0x10c
100454fc:	bd30      	pop	{r4, r5, pc}

100454fe <aci_l2cap_connection_update_req_event>:
 * Values:
 - 0x0000 ... 0x01F3
 * @param Timeout_Multiplier Defines connection timeout parameter in the following manner: Timeout Multiplier * 10ms.
 * @retval None
 */
void aci_l2cap_connection_update_req_event(uint16_t Connection_Handle, uint8_t Identifier, uint16_t L2CAP_Length, uint16_t Interval_Min, uint16_t Interval_Max, uint16_t Slave_Latency, uint16_t Timeout_Multiplier) {
100454fe:	469c      	mov	ip, r3
10045500:	b5f0      	push	{r4, r5, r6, r7, lr}
10045502:	b0c3      	sub	sp, #268	; 0x10c
10045504:	ac49      	add	r4, sp, #292	; 0x124
10045506:	ab48      	add	r3, sp, #288	; 0x120
10045508:	8827      	ldrh	r7, [r4, #0]
1004550a:	881b      	ldrh	r3, [r3, #0]
1004550c:	ac4a      	add	r4, sp, #296	; 0x128
	uint8_t buffer_out[258];
	/* Output params */
	aci_l2cap_connection_update_req_event_rp0 *rp0 = (aci_l2cap_connection_update_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
1004550e:	2509      	movs	r5, #9
void aci_l2cap_connection_update_req_event(uint16_t Connection_Handle, uint8_t Identifier, uint16_t L2CAP_Length, uint16_t Interval_Min, uint16_t Interval_Max, uint16_t Slave_Latency, uint16_t Timeout_Multiplier) {
10045510:	8826      	ldrh	r6, [r4, #0]
	rp0->Connection_Handle = Connection_Handle;
10045512:	ac01      	add	r4, sp, #4
	rp0->Identifier = Identifier;
	rp0->L2CAP_Length = L2CAP_Length;
	rp0->Interval_Min = Interval_Min;
	rp0->Interval_Max = Interval_Max;
10045514:	81a3      	strh	r3, [r4, #12]
	rp0->Slave_Latency = Slave_Latency;
	rp0->Timeout_Multiplier = Timeout_Multiplier;
	buffer_out[0] = 0x04;
10045516:	2304      	movs	r3, #4
	rp0->L2CAP_Length = L2CAP_Length;
10045518:	8122      	strh	r2, [r4, #8]
	rp0->Interval_Min = Interval_Min;
1004551a:	4662      	mov	r2, ip
	rp0->Connection_Handle = Connection_Handle;
1004551c:	446d      	add	r5, sp
1004551e:	7028      	strb	r0, [r5, #0]
10045520:	0a00      	lsrs	r0, r0, #8
10045522:	7068      	strb	r0, [r5, #1]
	buffer_out[0] = 0x04;
10045524:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0xFF;
10045526:	33fb      	adds	r3, #251	; 0xfb
10045528:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 2 + 1 + 2 + 2 + 2 + 2 + 2 + 2;
1004552a:	3bf0      	subs	r3, #240	; 0xf0
1004552c:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x02;
1004552e:	3b0d      	subs	r3, #13
	rp0->Identifier = Identifier;
10045530:	71e1      	strb	r1, [r4, #7]
	rp0->Interval_Min = Interval_Min;
10045532:	8162      	strh	r2, [r4, #10]
	buffer_out[3] = 0x02;
10045534:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x08;
	send_event(buffer_out, buffer_out[2] + 3, 19);
10045536:	2213      	movs	r2, #19
	buffer_out[4] = 0x08;
10045538:	3306      	adds	r3, #6
	send_event(buffer_out, buffer_out[2] + 3, 19);
1004553a:	2112      	movs	r1, #18
1004553c:	0020      	movs	r0, r4
	rp0->Slave_Latency = Slave_Latency;
1004553e:	81e7      	strh	r7, [r4, #14]
	rp0->Timeout_Multiplier = Timeout_Multiplier;
10045540:	8226      	strh	r6, [r4, #16]
	buffer_out[4] = 0x08;
10045542:	7123      	strb	r3, [r4, #4]
	send_event(buffer_out, buffer_out[2] + 3, 19);
10045544:	f001 f8e2 	bl	1004670c <send_event>
}
10045548:	b043      	add	sp, #268	; 0x10c
1004554a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004554c <aci_l2cap_command_reject_event>:
 * @param Reason Reason
 * @param Data_Length Length of following data
 * @param Data Data field associated with Reason
 * @retval None
 */
void aci_l2cap_command_reject_event(uint16_t Connection_Handle, uint8_t Identifier, uint16_t Reason, uint8_t Data_Length, uint8_t Data[]) {
1004554c:	b530      	push	{r4, r5, lr}
1004554e:	001c      	movs	r4, r3
	uint8_t buffer_out[258];
	/* Output params */
	aci_l2cap_command_reject_event_rp0 *rp0 = (aci_l2cap_command_reject_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045550:	2309      	movs	r3, #9
void aci_l2cap_command_reject_event(uint16_t Connection_Handle, uint8_t Identifier, uint16_t Reason, uint8_t Data_Length, uint8_t Data[]) {
10045552:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045554:	446b      	add	r3, sp
10045556:	7018      	strb	r0, [r3, #0]
10045558:	0a00      	lsrs	r0, r0, #8
1004555a:	7058      	strb	r0, [r3, #1]
	rp0->Identifier = Identifier;
	rp0->Reason = Reason;
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
1004555c:	200f      	movs	r0, #15
	rp0->Connection_Handle = Connection_Handle;
1004555e:	ad01      	add	r5, sp, #4
	rp0->Identifier = Identifier;
10045560:	71e9      	strb	r1, [r5, #7]
	rp0->Reason = Reason;
10045562:	812a      	strh	r2, [r5, #8]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045564:	9946      	ldr	r1, [sp, #280]	; 0x118
10045566:	0022      	movs	r2, r4
10045568:	4468      	add	r0, sp
	rp0->Data_Length = Data_Length;
1004556a:	72ac      	strb	r4, [r5, #10]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
1004556c:	f7fb f909 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045570:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + 2 + 1 + Data_Length + 2;
10045572:	0021      	movs	r1, r4
	buffer_out[3] = 0x0a;
	buffer_out[4] = 0x08;
	send_event(buffer_out, buffer_out[2] + 3, -2);
10045574:	2202      	movs	r2, #2
	buffer_out[0] = 0x04;
10045576:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = 2 + 1 + 2 + 1 + Data_Length + 2;
10045578:	3108      	adds	r1, #8
	buffer_out[1] = 0xFF;
1004557a:	33fb      	adds	r3, #251	; 0xfb
1004557c:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + 2 + 1 + Data_Length + 2;
1004557e:	b2c9      	uxtb	r1, r1
	buffer_out[3] = 0x0a;
10045580:	3bf5      	subs	r3, #245	; 0xf5
	buffer_out[2] = 2 + 1 + 2 + 1 + Data_Length + 2;
10045582:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x0a;
10045584:	70eb      	strb	r3, [r5, #3]
	send_event(buffer_out, buffer_out[2] + 3, -2);
10045586:	3103      	adds	r1, #3
	buffer_out[4] = 0x08;
10045588:	3b02      	subs	r3, #2
	send_event(buffer_out, buffer_out[2] + 3, -2);
1004558a:	4252      	negs	r2, r2
1004558c:	0028      	movs	r0, r5
	buffer_out[4] = 0x08;
1004558e:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, -2);
10045590:	f001 f8bc 	bl	1004670c <send_event>
}
10045594:	b043      	add	sp, #268	; 0x10c
10045596:	bd30      	pop	{r4, r5, pc}

10045598 <aci_gatt_attribute_modified_event>:

{
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_attribute_modified_event_rp0 *rp0 = (aci_gatt_attribute_modified_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045598:	2209      	movs	r2, #9
{
1004559a:	b5f0      	push	{r4, r5, r6, r7, lr}
1004559c:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
1004559e:	446a      	add	r2, sp
100455a0:	7010      	strb	r0, [r2, #0]
100455a2:	0a00      	lsrs	r0, r0, #8
100455a4:	7050      	strb	r0, [r2, #1]
	rp0->Attr_Handle = Attr_Handle;
100455a6:	220b      	movs	r2, #11
	rp0->Offset = 0;
100455a8:	260d      	movs	r6, #13
{
100455aa:	001d      	movs	r5, r3
	rp0->Connection_Handle = Connection_Handle;
100455ac:	2300      	movs	r3, #0

	while (Attr_Data_Length) {
		rp0->Attr_Data_Length = MIN(Attr_Data_Length, 255 - 10);
100455ae:	27ff      	movs	r7, #255	; 0xff
	rp0->Attr_Handle = Attr_Handle;
100455b0:	446a      	add	r2, sp
	rp0->Offset = 0;
100455b2:	446e      	add	r6, sp
	rp0->Attr_Handle = Attr_Handle;
100455b4:	7011      	strb	r1, [r2, #0]
100455b6:	0a09      	lsrs	r1, r1, #8
100455b8:	7051      	strb	r1, [r2, #1]
	rp0->Offset = 0;
100455ba:	7073      	strb	r3, [r6, #1]
100455bc:	7033      	strb	r3, [r6, #0]
	while (Attr_Data_Length) {
100455be:	2d00      	cmp	r5, #0
100455c0:	d101      	bne.n	100455c6 <aci_gatt_attribute_modified_event+0x2e>
		}
		send_event(buffer_out, buffer_out[2] + 3, 20);
		rp0->Offset &= ~0x8000;
		rp0->Offset += rp0->Attr_Data_Length;
	}
} /* aci_gatt_proc_timeout_event */
100455c2:	b043      	add	sp, #268	; 0x10c
100455c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		rp0->Attr_Data_Length = MIN(Attr_Data_Length, 255 - 10);
100455c6:	1c2a      	adds	r2, r5, #0
100455c8:	2df5      	cmp	r5, #245	; 0xf5
100455ca:	d900      	bls.n	100455ce <aci_gatt_attribute_modified_event+0x36>
100455cc:	22f5      	movs	r2, #245	; 0xf5
100455ce:	230f      	movs	r3, #15
		Osal_MemCpy((void *) rp0->Attr_Data, (const void *) (Attr_Data + rp0->Offset), rp0->Attr_Data_Length);
100455d0:	2011      	movs	r0, #17
		rp0->Attr_Data_Length = MIN(Attr_Data_Length, 255 - 10);
100455d2:	b292      	uxth	r2, r2
100455d4:	0a11      	lsrs	r1, r2, #8
100455d6:	446b      	add	r3, sp
100455d8:	ac01      	add	r4, sp, #4
100455da:	701a      	strb	r2, [r3, #0]
100455dc:	7059      	strb	r1, [r3, #1]
		Osal_MemCpy((void *) rp0->Attr_Data, (const void *) (Attr_Data + rp0->Offset), rp0->Attr_Data_Length);
100455de:	68a3      	ldr	r3, [r4, #8]
100455e0:	4468      	add	r0, sp
100455e2:	0219      	lsls	r1, r3, #8
100455e4:	9b48      	ldr	r3, [sp, #288]	; 0x120
100455e6:	0c09      	lsrs	r1, r1, #16
100455e8:	1859      	adds	r1, r3, r1
100455ea:	f7fb f8ca 	bl	10040782 <Osal_MemCpy>
		buffer_out[0] = 0x04;
100455ee:	2304      	movs	r3, #4
100455f0:	7023      	strb	r3, [r4, #0]
		buffer_out[2] = 2 + 2 + 2 + 2 + rp0->Attr_Data_Length + 2;
100455f2:	7b23      	ldrb	r3, [r4, #12]
100455f4:	7ae2      	ldrb	r2, [r4, #11]
100455f6:	021b      	lsls	r3, r3, #8
100455f8:	4313      	orrs	r3, r2
100455fa:	0019      	movs	r1, r3
		buffer_out[3] = 0x01;
100455fc:	2201      	movs	r2, #1
		buffer_out[2] = 2 + 2 + 2 + 2 + rp0->Attr_Data_Length + 2;
100455fe:	310a      	adds	r1, #10
		Attr_Data_Length -= rp0->Attr_Data_Length;
10045600:	1aed      	subs	r5, r5, r3
		buffer_out[2] = 2 + 2 + 2 + 2 + rp0->Attr_Data_Length + 2;
10045602:	b2c9      	uxtb	r1, r1
		buffer_out[3] = 0x01;
10045604:	70e2      	strb	r2, [r4, #3]
		Attr_Data_Length -= rp0->Attr_Data_Length;
10045606:	b2ad      	uxth	r5, r5
		buffer_out[4] = 0x0c;
10045608:	320b      	adds	r2, #11
		buffer_out[1] = 0xFF;
1004560a:	7067      	strb	r7, [r4, #1]
		buffer_out[2] = 2 + 2 + 2 + 2 + rp0->Attr_Data_Length + 2;
1004560c:	70a1      	strb	r1, [r4, #2]
		buffer_out[4] = 0x0c;
1004560e:	7122      	strb	r2, [r4, #4]
		if (Attr_Data_Length) { // If there are other data to be sent after the next HCI event.
10045610:	2d00      	cmp	r5, #0
10045612:	d008      	beq.n	10045626 <aci_gatt_attribute_modified_event+0x8e>
			rp0->Offset |= 0x8000;
10045614:	68a3      	ldr	r3, [r4, #8]
10045616:	021a      	lsls	r2, r3, #8
10045618:	4b0c      	ldr	r3, [pc, #48]	; (1004564c <aci_gatt_attribute_modified_event+0xb4>)
1004561a:	0c12      	lsrs	r2, r2, #16
1004561c:	4313      	orrs	r3, r2
1004561e:	b29b      	uxth	r3, r3
10045620:	7033      	strb	r3, [r6, #0]
10045622:	0a1b      	lsrs	r3, r3, #8
10045624:	7073      	strb	r3, [r6, #1]
		send_event(buffer_out, buffer_out[2] + 3, 20);
10045626:	3103      	adds	r1, #3
10045628:	2214      	movs	r2, #20
1004562a:	0020      	movs	r0, r4
1004562c:	f001 f86e 	bl	1004670c <send_event>
		rp0->Offset += rp0->Attr_Data_Length;
10045630:	a901      	add	r1, sp, #4
		rp0->Offset &= ~0x8000;
10045632:	9b03      	ldr	r3, [sp, #12]
		rp0->Offset += rp0->Attr_Data_Length;
10045634:	7b0a      	ldrb	r2, [r1, #12]
10045636:	7ac8      	ldrb	r0, [r1, #11]
		rp0->Offset &= ~0x8000;
10045638:	025b      	lsls	r3, r3, #9
		rp0->Offset += rp0->Attr_Data_Length;
1004563a:	0212      	lsls	r2, r2, #8
		rp0->Offset &= ~0x8000;
1004563c:	0c5b      	lsrs	r3, r3, #17
		rp0->Offset += rp0->Attr_Data_Length;
1004563e:	4302      	orrs	r2, r0
10045640:	189b      	adds	r3, r3, r2
10045642:	b29b      	uxth	r3, r3
10045644:	7033      	strb	r3, [r6, #0]
10045646:	0a1b      	lsrs	r3, r3, #8
10045648:	7073      	strb	r3, [r6, #1]
1004564a:	e7b8      	b.n	100455be <aci_gatt_attribute_modified_event+0x26>
1004564c:	ffff8000 	.word	0xffff8000

10045650 <aci_gatt_proc_timeout_event>:
 */
void aci_gatt_proc_timeout_event(uint16_t Connection_Handle) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_proc_timeout_event_rp0 *rp0 = (aci_gatt_proc_timeout_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045650:	2209      	movs	r2, #9
void aci_gatt_proc_timeout_event(uint16_t Connection_Handle) {
10045652:	b500      	push	{lr}
10045654:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045656:	446a      	add	r2, sp
10045658:	7010      	strb	r0, [r2, #0]
1004565a:	0a00      	lsrs	r0, r0, #8
1004565c:	7050      	strb	r0, [r2, #1]
	buffer_out[0] = 0x04;
1004565e:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
10045660:	21ff      	movs	r1, #255	; 0xff
	rp0->Connection_Handle = Connection_Handle;
10045662:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
10045664:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 2 + 2;
10045666:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x02;
10045668:	3a02      	subs	r2, #2
1004566a:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
1004566c:	320a      	adds	r2, #10
	buffer_out[1] = 0xFF;
1004566e:	7059      	strb	r1, [r3, #1]
	buffer_out[4] = 0x0c;
10045670:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 21);
10045672:	39f8      	subs	r1, #248	; 0xf8
10045674:	3209      	adds	r2, #9
10045676:	0018      	movs	r0, r3
10045678:	f001 f848 	bl	1004670c <send_event>
}
1004567c:	b043      	add	sp, #268	; 0x10c
1004567e:	bd00      	pop	{pc}

10045680 <aci_att_exchange_mtu_resp_event>:
 */
void aci_att_exchange_mtu_resp_event(uint16_t Connection_Handle, uint16_t Server_RX_MTU) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_exchange_mtu_resp_event_rp0 *rp0 = (aci_att_exchange_mtu_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045680:	2209      	movs	r2, #9
void aci_att_exchange_mtu_resp_event(uint16_t Connection_Handle, uint16_t Server_RX_MTU) {
10045682:	b500      	push	{lr}
10045684:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045686:	446a      	add	r2, sp
10045688:	7010      	strb	r0, [r2, #0]
1004568a:	0a00      	lsrs	r0, r0, #8
1004568c:	7050      	strb	r0, [r2, #1]
	rp0->Server_RX_MTU = Server_RX_MTU;
1004568e:	220b      	movs	r2, #11
10045690:	446a      	add	r2, sp
10045692:	7011      	strb	r1, [r2, #0]
10045694:	0a09      	lsrs	r1, r1, #8
10045696:	7051      	strb	r1, [r2, #1]
	buffer_out[0] = 0x04;
10045698:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
1004569a:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
1004569c:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
1004569e:	32fb      	adds	r2, #251	; 0xfb
100456a0:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 2 + 2 + 2;
100456a2:	3af9      	subs	r2, #249	; 0xf9
100456a4:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x03;
100456a6:	3a03      	subs	r2, #3
100456a8:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
100456aa:	3209      	adds	r2, #9
100456ac:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 22);
100456ae:	2109      	movs	r1, #9
100456b0:	320a      	adds	r2, #10
100456b2:	0018      	movs	r0, r3
100456b4:	f001 f82a 	bl	1004670c <send_event>
}
100456b8:	b043      	add	sp, #268	; 0x10c
100456ba:	bd00      	pop	{pc}

100456bc <aci_att_find_info_resp_event>:
 * @param Format Format of the hanndle-uuid pairs
 * @param Event_Data_Length Length of Handle_UUID_Pair in octets
 * @param Handle_UUID_Pair A sequence of handle-uuid pairs. if format=1, each pair is:[2 octets for handle, 2 octets for UUIDs], if format=2, each pair is:[2 octets for handle, 16 octets for UUIDs]
 * @retval None
 */
void aci_att_find_info_resp_event(uint16_t Connection_Handle, uint8_t Format, uint8_t Event_Data_Length, uint8_t Handle_UUID_Pair[]) {
100456bc:	b530      	push	{r4, r5, lr}
100456be:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_find_info_resp_event_rp0 *rp0 = (aci_att_find_info_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100456c0:	2209      	movs	r2, #9
void aci_att_find_info_resp_event(uint16_t Connection_Handle, uint8_t Format, uint8_t Event_Data_Length, uint8_t Handle_UUID_Pair[]) {
100456c2:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100456c4:	446a      	add	r2, sp
100456c6:	7010      	strb	r0, [r2, #0]
100456c8:	0a00      	lsrs	r0, r0, #8
100456ca:	7050      	strb	r0, [r2, #1]
	rp0->Format = Format;
	rp0->Event_Data_Length = Event_Data_Length;
	Osal_MemCpy((void *) rp0->Handle_UUID_Pair, (const void *) Handle_UUID_Pair, Event_Data_Length);
100456cc:	200d      	movs	r0, #13
	rp0->Connection_Handle = Connection_Handle;
100456ce:	ad01      	add	r5, sp, #4
	rp0->Format = Format;
100456d0:	71e9      	strb	r1, [r5, #7]
	Osal_MemCpy((void *) rp0->Handle_UUID_Pair, (const void *) Handle_UUID_Pair, Event_Data_Length);
100456d2:	0022      	movs	r2, r4
100456d4:	0019      	movs	r1, r3
100456d6:	4468      	add	r0, sp
	rp0->Event_Data_Length = Event_Data_Length;
100456d8:	722c      	strb	r4, [r5, #8]
	Osal_MemCpy((void *) rp0->Handle_UUID_Pair, (const void *) Handle_UUID_Pair, Event_Data_Length);
100456da:	f7fb f852 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100456de:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
100456e0:	22ff      	movs	r2, #255	; 0xff
	buffer_out[2] = 2 + 1 + 1 + Event_Data_Length + 2;
100456e2:	3406      	adds	r4, #6
100456e4:	b2e1      	uxtb	r1, r4
	buffer_out[0] = 0x04;
100456e6:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
100456e8:	706a      	strb	r2, [r5, #1]
	buffer_out[2] = 2 + 1 + 1 + Event_Data_Length + 2;
100456ea:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x04;
100456ec:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 23);
100456ee:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
100456f0:	3308      	adds	r3, #8
	send_event(buffer_out, buffer_out[2] + 3, 23);
100456f2:	3ae8      	subs	r2, #232	; 0xe8
100456f4:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
100456f6:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 23);
100456f8:	f001 f808 	bl	1004670c <send_event>
}
100456fc:	b043      	add	sp, #268	; 0x10c
100456fe:	bd30      	pop	{r4, r5, pc}

10045700 <aci_att_find_by_type_value_resp_event>:
 * @param Connection_Handle Connection handle related to the response
 * @param Num_of_Handle_Pair Number of attribute, group handle pairs
 * @param Attribute_Group_Handle_Pair See @ref Attribute_Group_Handle_Pair_t
 * @retval None
 */
void aci_att_find_by_type_value_resp_event(uint16_t Connection_Handle, uint8_t Num_of_Handle_Pair, Attribute_Group_Handle_Pair_t Attribute_Group_Handle_Pair[]) {
10045700:	b530      	push	{r4, r5, lr}
	uint8_t buffer_out[258];
	int output_size = 0;
	/* Output params */
	aci_att_find_by_type_value_resp_event_rp0 *rp0 = (aci_att_find_by_type_value_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045702:	2409      	movs	r4, #9
void aci_att_find_by_type_value_resp_event(uint16_t Connection_Handle, uint8_t Num_of_Handle_Pair, Attribute_Group_Handle_Pair_t Attribute_Group_Handle_Pair[]) {
10045704:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045706:	446c      	add	r4, sp
10045708:	7020      	strb	r0, [r4, #0]
1004570a:	0a00      	lsrs	r0, r0, #8
1004570c:	7060      	strb	r0, [r4, #1]
	rp0->Num_of_Handle_Pair = Num_of_Handle_Pair;
	{
		int i;
		for (i = 0; i < Num_of_Handle_Pair; i++) {
1004570e:	2400      	movs	r4, #0
	rp0->Connection_Handle = Connection_Handle;
10045710:	ab01      	add	r3, sp, #4
	rp0->Num_of_Handle_Pair = Num_of_Handle_Pair;
10045712:	71d9      	strb	r1, [r3, #7]
10045714:	a803      	add	r0, sp, #12
		for (i = 0; i < Num_of_Handle_Pair; i++) {
10045716:	428c      	cmp	r4, r1
10045718:	db12      	blt.n	10045740 <aci_att_find_by_type_value_resp_event+0x40>
			output_size += sizeof(uint16_t);
			rp0->Attribute_Group_Handle_Pair[i].Group_End_Handle = Attribute_Group_Handle_Pair[i].Group_End_Handle;
			output_size += sizeof(uint16_t);
		}
	}
	buffer_out[0] = 0x04;
1004571a:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + output_size + 2;
1004571c:	0089      	lsls	r1, r1, #2
	buffer_out[0] = 0x04;
1004571e:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
10045720:	32fb      	adds	r2, #251	; 0xfb
10045722:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 2 + 1 + output_size + 2;
10045724:	3105      	adds	r1, #5
	buffer_out[3] = 0x05;
10045726:	3afa      	subs	r2, #250	; 0xfa
10045728:	70da      	strb	r2, [r3, #3]
	buffer_out[2] = 2 + 1 + output_size + 2;
1004572a:	b2c9      	uxtb	r1, r1
	buffer_out[4] = 0x0c;
1004572c:	3207      	adds	r2, #7
	buffer_out[2] = 2 + 1 + output_size + 2;
1004572e:	7099      	strb	r1, [r3, #2]
	buffer_out[4] = 0x0c;
10045730:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 24);
10045732:	3103      	adds	r1, #3
10045734:	320c      	adds	r2, #12
10045736:	0018      	movs	r0, r3
10045738:	f000 ffe8 	bl	1004670c <send_event>
}
1004573c:	b043      	add	sp, #268	; 0x10c
1004573e:	bd30      	pop	{r4, r5, pc}
			rp0->Attribute_Group_Handle_Pair[i].Found_Attribute_Handle = Attribute_Group_Handle_Pair[i].Found_Attribute_Handle;
10045740:	8815      	ldrh	r5, [r2, #0]
		for (i = 0; i < Num_of_Handle_Pair; i++) {
10045742:	3401      	adds	r4, #1
			rp0->Attribute_Group_Handle_Pair[i].Found_Attribute_Handle = Attribute_Group_Handle_Pair[i].Found_Attribute_Handle;
10045744:	8005      	strh	r5, [r0, #0]
			rp0->Attribute_Group_Handle_Pair[i].Group_End_Handle = Attribute_Group_Handle_Pair[i].Group_End_Handle;
10045746:	8855      	ldrh	r5, [r2, #2]
10045748:	3204      	adds	r2, #4
1004574a:	8045      	strh	r5, [r0, #2]
1004574c:	3004      	adds	r0, #4
1004574e:	e7e2      	b.n	10045716 <aci_att_find_by_type_value_resp_event+0x16>

10045750 <aci_att_read_by_type_resp_event>:
 * @param Handle_Value_Pair_Length The size of each attribute handle-value pair
 * @param Data_Length Length of Handle_Value_Pair_Data in octets
 * @param Handle_Value_Pair_Data Attribute Data List as defined in Bluetooth Core v4.1 spec. A sequence of handle-value pairs: [2 octets for Attribute Handle, (Handle_Value_Pair_Length - 2 octets) for Attribute Value]
 * @retval None
 */
void aci_att_read_by_type_resp_event(uint16_t Connection_Handle, uint8_t Handle_Value_Pair_Length, uint8_t Data_Length, uint8_t Handle_Value_Pair_Data[]) {
10045750:	b530      	push	{r4, r5, lr}
10045752:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_read_by_type_resp_event_rp0 *rp0 = (aci_att_read_by_type_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045754:	2209      	movs	r2, #9
void aci_att_read_by_type_resp_event(uint16_t Connection_Handle, uint8_t Handle_Value_Pair_Length, uint8_t Data_Length, uint8_t Handle_Value_Pair_Data[]) {
10045756:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045758:	446a      	add	r2, sp
1004575a:	7010      	strb	r0, [r2, #0]
1004575c:	0a00      	lsrs	r0, r0, #8
1004575e:	7050      	strb	r0, [r2, #1]
	rp0->Handle_Value_Pair_Length = Handle_Value_Pair_Length;
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Handle_Value_Pair_Data, (const void *) Handle_Value_Pair_Data, Data_Length);
10045760:	200d      	movs	r0, #13
	rp0->Connection_Handle = Connection_Handle;
10045762:	ad01      	add	r5, sp, #4
	rp0->Handle_Value_Pair_Length = Handle_Value_Pair_Length;
10045764:	71e9      	strb	r1, [r5, #7]
	Osal_MemCpy((void *) rp0->Handle_Value_Pair_Data, (const void *) Handle_Value_Pair_Data, Data_Length);
10045766:	0022      	movs	r2, r4
10045768:	0019      	movs	r1, r3
1004576a:	4468      	add	r0, sp
	rp0->Data_Length = Data_Length;
1004576c:	722c      	strb	r4, [r5, #8]
	Osal_MemCpy((void *) rp0->Handle_Value_Pair_Data, (const void *) Handle_Value_Pair_Data, Data_Length);
1004576e:	f7fb f808 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045772:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + 1 + Data_Length + 2;
10045774:	3406      	adds	r4, #6
	buffer_out[0] = 0x04;
10045776:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
10045778:	33fb      	adds	r3, #251	; 0xfb
1004577a:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + 1 + Data_Length + 2;
1004577c:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x06;
1004577e:	3bf9      	subs	r3, #249	; 0xf9
	buffer_out[2] = 2 + 1 + 1 + Data_Length + 2;
10045780:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x06;
10045782:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 25);
10045784:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045786:	3306      	adds	r3, #6
	send_event(buffer_out, buffer_out[2] + 3, 25);
10045788:	2219      	movs	r2, #25
1004578a:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
1004578c:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 25);
1004578e:	f000 ffbd 	bl	1004670c <send_event>
}
10045792:	b043      	add	sp, #268	; 0x10c
10045794:	bd30      	pop	{r4, r5, pc}

10045796 <aci_att_read_resp_event>:
 */
void aci_att_read_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Attribute_Value[]) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_read_resp_event_rp0 *rp0 = (aci_att_read_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045796:	2309      	movs	r3, #9
void aci_att_read_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Attribute_Value[]) {
10045798:	b530      	push	{r4, r5, lr}
1004579a:	000c      	movs	r4, r1
1004579c:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
1004579e:	446b      	add	r3, sp
100457a0:	7018      	strb	r0, [r3, #0]
100457a2:	0a00      	lsrs	r0, r0, #8
100457a4:	ad01      	add	r5, sp, #4
100457a6:	7058      	strb	r0, [r3, #1]
void aci_att_read_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Attribute_Value[]) {
100457a8:	0011      	movs	r1, r2
	rp0->Event_Data_Length = Event_Data_Length;
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Event_Data_Length);
100457aa:	a803      	add	r0, sp, #12
100457ac:	0022      	movs	r2, r4
	rp0->Event_Data_Length = Event_Data_Length;
100457ae:	71ec      	strb	r4, [r5, #7]
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Event_Data_Length);
100457b0:	f7fa ffe7 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100457b4:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
100457b6:	3405      	adds	r4, #5
	buffer_out[0] = 0x04;
100457b8:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
100457ba:	33fb      	adds	r3, #251	; 0xfb
100457bc:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
100457be:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x07;
100457c0:	3bf8      	subs	r3, #248	; 0xf8
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
100457c2:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x07;
100457c4:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 26);
100457c6:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
100457c8:	3305      	adds	r3, #5
	send_event(buffer_out, buffer_out[2] + 3, 26);
100457ca:	221a      	movs	r2, #26
100457cc:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
100457ce:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 26);
100457d0:	f000 ff9c 	bl	1004670c <send_event>
}
100457d4:	b043      	add	sp, #268	; 0x10c
100457d6:	bd30      	pop	{r4, r5, pc}

100457d8 <aci_att_read_blob_resp_event>:
 */
void aci_att_read_blob_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Attribute_Value[]) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_read_blob_resp_event_rp0 *rp0 = (aci_att_read_blob_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100457d8:	2309      	movs	r3, #9
void aci_att_read_blob_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Attribute_Value[]) {
100457da:	b530      	push	{r4, r5, lr}
100457dc:	000c      	movs	r4, r1
100457de:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100457e0:	446b      	add	r3, sp
100457e2:	7018      	strb	r0, [r3, #0]
100457e4:	0a00      	lsrs	r0, r0, #8
100457e6:	ad01      	add	r5, sp, #4
100457e8:	7058      	strb	r0, [r3, #1]
void aci_att_read_blob_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Attribute_Value[]) {
100457ea:	0011      	movs	r1, r2
	rp0->Event_Data_Length = Event_Data_Length;
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Event_Data_Length);
100457ec:	a803      	add	r0, sp, #12
100457ee:	0022      	movs	r2, r4
	rp0->Event_Data_Length = Event_Data_Length;
100457f0:	71ec      	strb	r4, [r5, #7]
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Event_Data_Length);
100457f2:	f7fa ffc6 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100457f6:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
100457f8:	3405      	adds	r4, #5
	buffer_out[0] = 0x04;
100457fa:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
100457fc:	33fb      	adds	r3, #251	; 0xfb
100457fe:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
10045800:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x08;
10045802:	3bf7      	subs	r3, #247	; 0xf7
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
10045804:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x08;
10045806:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 27);
10045808:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
1004580a:	3304      	adds	r3, #4
	send_event(buffer_out, buffer_out[2] + 3, 27);
1004580c:	221b      	movs	r2, #27
1004580e:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
10045810:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 27);
10045812:	f000 ff7b 	bl	1004670c <send_event>
}
10045816:	b043      	add	sp, #268	; 0x10c
10045818:	bd30      	pop	{r4, r5, pc}

1004581a <aci_att_read_multiple_resp_event>:
 */
void aci_att_read_multiple_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Set_Of_Values[]) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_read_multiple_resp_event_rp0 *rp0 = (aci_att_read_multiple_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
1004581a:	2309      	movs	r3, #9
void aci_att_read_multiple_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Set_Of_Values[]) {
1004581c:	b530      	push	{r4, r5, lr}
1004581e:	000c      	movs	r4, r1
10045820:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045822:	446b      	add	r3, sp
10045824:	7018      	strb	r0, [r3, #0]
10045826:	0a00      	lsrs	r0, r0, #8
10045828:	ad01      	add	r5, sp, #4
1004582a:	7058      	strb	r0, [r3, #1]
void aci_att_read_multiple_resp_event(uint16_t Connection_Handle, uint8_t Event_Data_Length, uint8_t Set_Of_Values[]) {
1004582c:	0011      	movs	r1, r2
	rp0->Event_Data_Length = Event_Data_Length;
	Osal_MemCpy((void *) rp0->Set_Of_Values, (const void *) Set_Of_Values, Event_Data_Length);
1004582e:	a803      	add	r0, sp, #12
10045830:	0022      	movs	r2, r4
	rp0->Event_Data_Length = Event_Data_Length;
10045832:	71ec      	strb	r4, [r5, #7]
	Osal_MemCpy((void *) rp0->Set_Of_Values, (const void *) Set_Of_Values, Event_Data_Length);
10045834:	f7fa ffa5 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045838:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
1004583a:	3405      	adds	r4, #5
	buffer_out[0] = 0x04;
1004583c:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
1004583e:	33fb      	adds	r3, #251	; 0xfb
10045840:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
10045842:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x09;
10045844:	3bf6      	subs	r3, #246	; 0xf6
	buffer_out[2] = 2 + 1 + Event_Data_Length + 2;
10045846:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x09;
10045848:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 28);
1004584a:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
1004584c:	3303      	adds	r3, #3
	send_event(buffer_out, buffer_out[2] + 3, 28);
1004584e:	221c      	movs	r2, #28
10045850:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
10045852:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 28);
10045854:	f000 ff5a 	bl	1004670c <send_event>
}
10045858:	b043      	add	sp, #268	; 0x10c
1004585a:	bd30      	pop	{r4, r5, pc}

1004585c <aci_att_read_by_group_type_resp_event>:
 * @param Attribute_Data_Length The size of each attribute data
 * @param Data_Length Length of Attribute_Data_List in octets
 * @param Attribute_Data_List Attribute Data List as defined in Bluetooth Core v4.1 spec. A sequence of attribute handle, end group handle, attribute value tuples: [2 octets for Attribute Handle, 2 octets End Group Handle, (Attribute_Data_Length - 4 octets) for Attribute Value]
 * @retval None
 */
void aci_att_read_by_group_type_resp_event(uint16_t Connection_Handle, uint8_t Attribute_Data_Length, uint8_t Data_Length, uint8_t Attribute_Data_List[]) {
1004585c:	b530      	push	{r4, r5, lr}
1004585e:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_read_by_group_type_resp_event_rp0 *rp0 = (aci_att_read_by_group_type_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045860:	2209      	movs	r2, #9
void aci_att_read_by_group_type_resp_event(uint16_t Connection_Handle, uint8_t Attribute_Data_Length, uint8_t Data_Length, uint8_t Attribute_Data_List[]) {
10045862:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045864:	446a      	add	r2, sp
10045866:	7010      	strb	r0, [r2, #0]
10045868:	0a00      	lsrs	r0, r0, #8
1004586a:	7050      	strb	r0, [r2, #1]
	rp0->Attribute_Data_Length = Attribute_Data_Length;
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Attribute_Data_List, (const void *) Attribute_Data_List, Data_Length);
1004586c:	200d      	movs	r0, #13
	rp0->Connection_Handle = Connection_Handle;
1004586e:	ad01      	add	r5, sp, #4
	rp0->Attribute_Data_Length = Attribute_Data_Length;
10045870:	71e9      	strb	r1, [r5, #7]
	Osal_MemCpy((void *) rp0->Attribute_Data_List, (const void *) Attribute_Data_List, Data_Length);
10045872:	0022      	movs	r2, r4
10045874:	0019      	movs	r1, r3
10045876:	4468      	add	r0, sp
	rp0->Data_Length = Data_Length;
10045878:	722c      	strb	r4, [r5, #8]
	Osal_MemCpy((void *) rp0->Attribute_Data_List, (const void *) Attribute_Data_List, Data_Length);
1004587a:	f7fa ff82 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004587e:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + 1 + Data_Length + 2;
10045880:	3406      	adds	r4, #6
	buffer_out[0] = 0x04;
10045882:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
10045884:	33fb      	adds	r3, #251	; 0xfb
10045886:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 1 + 1 + Data_Length + 2;
10045888:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x0a;
1004588a:	3bf5      	subs	r3, #245	; 0xf5
	buffer_out[2] = 2 + 1 + 1 + Data_Length + 2;
1004588c:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x0a;
1004588e:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 29);
10045890:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045892:	3302      	adds	r3, #2
	send_event(buffer_out, buffer_out[2] + 3, 29);
10045894:	221d      	movs	r2, #29
10045896:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
10045898:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 29);
1004589a:	f000 ff37 	bl	1004670c <send_event>
}
1004589e:	b043      	add	sp, #268	; 0x10c
100458a0:	bd30      	pop	{r4, r5, pc}

100458a2 <aci_att_prepare_write_resp_event>:
 * @param Offset The offset of the first octet to be written.
 * @param Part_Attribute_Value_Length Length of Part_Attribute_Value in octets
 * @param Part_Attribute_Value The value of the attribute to be written
 * @retval None
 */
void aci_att_prepare_write_resp_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint16_t Offset, uint8_t Part_Attribute_Value_Length, uint8_t Part_Attribute_Value[]) {
100458a2:	b530      	push	{r4, r5, lr}
100458a4:	001c      	movs	r4, r3
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_prepare_write_resp_event_rp0 *rp0 = (aci_att_prepare_write_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100458a6:	2309      	movs	r3, #9
void aci_att_prepare_write_resp_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint16_t Offset, uint8_t Part_Attribute_Value_Length, uint8_t Part_Attribute_Value[]) {
100458a8:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100458aa:	446b      	add	r3, sp
100458ac:	7018      	strb	r0, [r3, #0]
100458ae:	0a00      	lsrs	r0, r0, #8
100458b0:	7058      	strb	r0, [r3, #1]
	rp0->Attribute_Handle = Attribute_Handle;
100458b2:	230b      	movs	r3, #11
100458b4:	446b      	add	r3, sp
100458b6:	7019      	strb	r1, [r3, #0]
100458b8:	0a09      	lsrs	r1, r1, #8
100458ba:	7059      	strb	r1, [r3, #1]
	rp0->Offset = Offset;
100458bc:	230d      	movs	r3, #13
100458be:	446b      	add	r3, sp
100458c0:	701a      	strb	r2, [r3, #0]
100458c2:	0a12      	lsrs	r2, r2, #8
	rp0->Connection_Handle = Connection_Handle;
100458c4:	ad01      	add	r5, sp, #4
	rp0->Offset = Offset;
100458c6:	705a      	strb	r2, [r3, #1]
	rp0->Part_Attribute_Value_Length = Part_Attribute_Value_Length;
	Osal_MemCpy((void *) rp0->Part_Attribute_Value, (const void *) Part_Attribute_Value, Part_Attribute_Value_Length);
100458c8:	9946      	ldr	r1, [sp, #280]	; 0x118
100458ca:	0022      	movs	r2, r4
100458cc:	a804      	add	r0, sp, #16
	rp0->Part_Attribute_Value_Length = Part_Attribute_Value_Length;
100458ce:	72ec      	strb	r4, [r5, #11]
	Osal_MemCpy((void *) rp0->Part_Attribute_Value, (const void *) Part_Attribute_Value, Part_Attribute_Value_Length);
100458d0:	f7fa ff57 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
100458d4:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 2 + 2 + 1 + Part_Attribute_Value_Length + 2;
100458d6:	3409      	adds	r4, #9
	buffer_out[0] = 0x04;
100458d8:	702b      	strb	r3, [r5, #0]
	buffer_out[2] = 2 + 2 + 2 + 1 + Part_Attribute_Value_Length + 2;
100458da:	b2e1      	uxtb	r1, r4
	buffer_out[1] = 0xFF;
100458dc:	33fb      	adds	r3, #251	; 0xfb
100458de:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 2 + 2 + 1 + Part_Attribute_Value_Length + 2;
100458e0:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x0c;
100458e2:	3bf3      	subs	r3, #243	; 0xf3
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 31);
100458e4:	3103      	adds	r1, #3
100458e6:	221f      	movs	r2, #31
100458e8:	0028      	movs	r0, r5
	buffer_out[3] = 0x0c;
100458ea:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
100458ec:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 31);
100458ee:	f000 ff0d 	bl	1004670c <send_event>
}
100458f2:	b043      	add	sp, #268	; 0x10c
100458f4:	bd30      	pop	{r4, r5, pc}

100458f6 <aci_att_exec_write_resp_event>:
 */
void aci_att_exec_write_resp_event(uint16_t Connection_Handle) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_att_exec_write_resp_event_rp0 *rp0 = (aci_att_exec_write_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100458f6:	2209      	movs	r2, #9
void aci_att_exec_write_resp_event(uint16_t Connection_Handle) {
100458f8:	b500      	push	{lr}
100458fa:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100458fc:	446a      	add	r2, sp
100458fe:	7010      	strb	r0, [r2, #0]
10045900:	0a00      	lsrs	r0, r0, #8
10045902:	7050      	strb	r0, [r2, #1]
	buffer_out[0] = 0x04;
10045904:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
10045906:	21ff      	movs	r1, #255	; 0xff
	rp0->Connection_Handle = Connection_Handle;
10045908:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
1004590a:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 2 + 2;
1004590c:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x0d;
1004590e:	3209      	adds	r2, #9
10045910:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
10045912:	3a01      	subs	r2, #1
	buffer_out[1] = 0xFF;
10045914:	7059      	strb	r1, [r3, #1]
	buffer_out[4] = 0x0c;
10045916:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 32);
10045918:	39f8      	subs	r1, #248	; 0xf8
1004591a:	3214      	adds	r2, #20
1004591c:	0018      	movs	r0, r3
1004591e:	f000 fef5 	bl	1004670c <send_event>
}
10045922:	b043      	add	sp, #268	; 0x10c
10045924:	bd00      	pop	{pc}

10045926 <aci_gatt_indication_event>:
 * @param Attribute_Handle The handle of the attribute
 * @param Attribute_Value_Length Length of Attribute_Value in octets
 * @param Attribute_Value The current value of the attribute
 * @retval None
 */
void aci_gatt_indication_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Attribute_Value_Length, uint8_t Attribute_Value[]) {
10045926:	b530      	push	{r4, r5, lr}
10045928:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_indication_event_rp0 *rp0 = (aci_gatt_indication_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
1004592a:	2209      	movs	r2, #9
void aci_gatt_indication_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Attribute_Value_Length, uint8_t Attribute_Value[]) {
1004592c:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
1004592e:	446a      	add	r2, sp
10045930:	7010      	strb	r0, [r2, #0]
10045932:	0a00      	lsrs	r0, r0, #8
10045934:	7050      	strb	r0, [r2, #1]
	rp0->Attribute_Handle = Attribute_Handle;
10045936:	200b      	movs	r0, #11
10045938:	4468      	add	r0, sp
1004593a:	7001      	strb	r1, [r0, #0]
1004593c:	0a09      	lsrs	r1, r1, #8
1004593e:	7041      	strb	r1, [r0, #1]
	rp0->Attribute_Value_Length = Attribute_Value_Length;
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
10045940:	200e      	movs	r0, #14
	rp0->Connection_Handle = Connection_Handle;
10045942:	ad01      	add	r5, sp, #4
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
10045944:	0022      	movs	r2, r4
10045946:	0019      	movs	r1, r3
10045948:	4468      	add	r0, sp
	rp0->Attribute_Value_Length = Attribute_Value_Length;
1004594a:	726c      	strb	r4, [r5, #9]
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
1004594c:	f7fa ff19 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045950:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
10045952:	3407      	adds	r4, #7
	buffer_out[0] = 0x04;
10045954:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
10045956:	33fb      	adds	r3, #251	; 0xfb
10045958:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
1004595a:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x0e;
1004595c:	3bf1      	subs	r3, #241	; 0xf1
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
1004595e:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x0e;
10045960:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 33);
10045962:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045964:	3b02      	subs	r3, #2
	send_event(buffer_out, buffer_out[2] + 3, 33);
10045966:	2221      	movs	r2, #33	; 0x21
10045968:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
1004596a:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 33);
1004596c:	f000 fece 	bl	1004670c <send_event>
}
10045970:	b043      	add	sp, #268	; 0x10c
10045972:	bd30      	pop	{r4, r5, pc}

10045974 <aci_gatt_notification_event>:
 * @param Attribute_Handle The handle of the attribute
 * @param Attribute_Value_Length Length of Attribute_Value in octets
 * @param Attribute_Value The current value of the attribute
 * @retval None
 */
void aci_gatt_notification_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Attribute_Value_Length, uint8_t Attribute_Value[]) {
10045974:	b530      	push	{r4, r5, lr}
10045976:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_notification_event_rp0 *rp0 = (aci_gatt_notification_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045978:	2209      	movs	r2, #9
void aci_gatt_notification_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Attribute_Value_Length, uint8_t Attribute_Value[]) {
1004597a:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
1004597c:	446a      	add	r2, sp
1004597e:	7010      	strb	r0, [r2, #0]
10045980:	0a00      	lsrs	r0, r0, #8
10045982:	7050      	strb	r0, [r2, #1]
	rp0->Attribute_Handle = Attribute_Handle;
10045984:	200b      	movs	r0, #11
10045986:	4468      	add	r0, sp
10045988:	7001      	strb	r1, [r0, #0]
1004598a:	0a09      	lsrs	r1, r1, #8
1004598c:	7041      	strb	r1, [r0, #1]
	rp0->Attribute_Value_Length = Attribute_Value_Length;
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
1004598e:	200e      	movs	r0, #14
	rp0->Connection_Handle = Connection_Handle;
10045990:	ad01      	add	r5, sp, #4
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
10045992:	0022      	movs	r2, r4
10045994:	0019      	movs	r1, r3
10045996:	4468      	add	r0, sp
	rp0->Attribute_Value_Length = Attribute_Value_Length;
10045998:	726c      	strb	r4, [r5, #9]
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
1004599a:	f7fa fef2 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
1004599e:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
100459a0:	3407      	adds	r4, #7
	buffer_out[0] = 0x04;
100459a2:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
100459a4:	33fb      	adds	r3, #251	; 0xfb
100459a6:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
100459a8:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x0f;
100459aa:	3bf0      	subs	r3, #240	; 0xf0
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
100459ac:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x0f;
100459ae:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 34);
100459b0:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
100459b2:	3b03      	subs	r3, #3
	send_event(buffer_out, buffer_out[2] + 3, 34);
100459b4:	2222      	movs	r2, #34	; 0x22
100459b6:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
100459b8:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 34);
100459ba:	f000 fea7 	bl	1004670c <send_event>
}
100459be:	b043      	add	sp, #268	; 0x10c
100459c0:	bd30      	pop	{r4, r5, pc}

100459c2 <aci_gatt_proc_complete_event>:
 */
void aci_gatt_proc_complete_event(uint16_t Connection_Handle, uint8_t Error_Code) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_proc_complete_event_rp0 *rp0 = (aci_gatt_proc_complete_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100459c2:	2209      	movs	r2, #9
void aci_gatt_proc_complete_event(uint16_t Connection_Handle, uint8_t Error_Code) {
100459c4:	b500      	push	{lr}
100459c6:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100459c8:	446a      	add	r2, sp
100459ca:	7010      	strb	r0, [r2, #0]
100459cc:	0a00      	lsrs	r0, r0, #8
100459ce:	7050      	strb	r0, [r2, #1]
	rp0->Error_Code = Error_Code;
	buffer_out[0] = 0x04;
100459d0:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
100459d2:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
100459d4:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
100459d6:	32fb      	adds	r2, #251	; 0xfb
100459d8:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 2 + 1 + 2;
100459da:	3afa      	subs	r2, #250	; 0xfa
100459dc:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x10;
100459de:	320b      	adds	r2, #11
100459e0:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
100459e2:	3a04      	subs	r2, #4
	rp0->Error_Code = Error_Code;
100459e4:	71d9      	strb	r1, [r3, #7]
	buffer_out[4] = 0x0c;
100459e6:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 35);
100459e8:	2108      	movs	r1, #8
100459ea:	3217      	adds	r2, #23
100459ec:	0018      	movs	r0, r3
100459ee:	f000 fe8d 	bl	1004670c <send_event>
}
100459f2:	b043      	add	sp, #268	; 0x10c
100459f4:	bd00      	pop	{pc}

100459f6 <aci_gatt_error_resp_event>:
 - 0x0F: Insufficient encryption
 - 0x10: Unsupported group type
 - 0x11: Insufficient resources
 * @retval None
 */
void aci_gatt_error_resp_event(uint16_t Connection_Handle, uint8_t Req_Opcode, uint16_t Attribute_Handle, uint8_t Error_Code) {
100459f6:	b530      	push	{r4, r5, lr}
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_error_resp_event_rp0 *rp0 = (aci_gatt_error_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
100459f8:	2509      	movs	r5, #9
void aci_gatt_error_resp_event(uint16_t Connection_Handle, uint8_t Req_Opcode, uint16_t Attribute_Handle, uint8_t Error_Code) {
100459fa:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
100459fc:	ac01      	add	r4, sp, #4
	rp0->Req_Opcode = Req_Opcode;
	rp0->Attribute_Handle = Attribute_Handle;
	rp0->Error_Code = Error_Code;
100459fe:	72a3      	strb	r3, [r4, #10]
	buffer_out[0] = 0x04;
10045a00:	2304      	movs	r3, #4
	rp0->Connection_Handle = Connection_Handle;
10045a02:	446d      	add	r5, sp
10045a04:	7028      	strb	r0, [r5, #0]
10045a06:	0a00      	lsrs	r0, r0, #8
10045a08:	7068      	strb	r0, [r5, #1]
	buffer_out[0] = 0x04;
10045a0a:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0xFF;
10045a0c:	33fb      	adds	r3, #251	; 0xfb
10045a0e:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 2 + 1 + 2 + 1 + 2;
10045a10:	3bf7      	subs	r3, #247	; 0xf7
10045a12:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x11;
10045a14:	3309      	adds	r3, #9
	rp0->Req_Opcode = Req_Opcode;
10045a16:	71e1      	strb	r1, [r4, #7]
	rp0->Attribute_Handle = Attribute_Handle;
10045a18:	8122      	strh	r2, [r4, #8]
	buffer_out[3] = 0x11;
10045a1a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 36);
10045a1c:	2224      	movs	r2, #36	; 0x24
	buffer_out[4] = 0x0c;
10045a1e:	3b05      	subs	r3, #5
	send_event(buffer_out, buffer_out[2] + 3, 36);
10045a20:	210b      	movs	r1, #11
10045a22:	0020      	movs	r0, r4
	buffer_out[4] = 0x0c;
10045a24:	7123      	strb	r3, [r4, #4]
	send_event(buffer_out, buffer_out[2] + 3, 36);
10045a26:	f000 fe71 	bl	1004670c <send_event>
}
10045a2a:	b043      	add	sp, #268	; 0x10c
10045a2c:	bd30      	pop	{r4, r5, pc}

10045a2e <aci_gatt_disc_read_char_by_uuid_resp_event>:
 * @param Attribute_Value The attribute value will be a service declaration as defined in Bluetooth Core v4.0 spec
 (vol.3, Part G, ch. 3.3.1), when a "Discover Characteristics By UUID" has been started.
 It will be the value of the Characteristic if a "Read using Characteristic UUID" has been performed.
 * @retval None
 */
void aci_gatt_disc_read_char_by_uuid_resp_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Attribute_Value_Length, uint8_t Attribute_Value[]) {
10045a2e:	b530      	push	{r4, r5, lr}
10045a30:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_disc_read_char_by_uuid_resp_event_rp0 *rp0 = (aci_gatt_disc_read_char_by_uuid_resp_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045a32:	2209      	movs	r2, #9
void aci_gatt_disc_read_char_by_uuid_resp_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Attribute_Value_Length, uint8_t Attribute_Value[]) {
10045a34:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045a36:	446a      	add	r2, sp
10045a38:	7010      	strb	r0, [r2, #0]
10045a3a:	0a00      	lsrs	r0, r0, #8
10045a3c:	7050      	strb	r0, [r2, #1]
	rp0->Attribute_Handle = Attribute_Handle;
10045a3e:	200b      	movs	r0, #11
10045a40:	4468      	add	r0, sp
10045a42:	7001      	strb	r1, [r0, #0]
10045a44:	0a09      	lsrs	r1, r1, #8
10045a46:	7041      	strb	r1, [r0, #1]
	rp0->Attribute_Value_Length = Attribute_Value_Length;
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
10045a48:	200e      	movs	r0, #14
	rp0->Connection_Handle = Connection_Handle;
10045a4a:	ad01      	add	r5, sp, #4
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
10045a4c:	0022      	movs	r2, r4
10045a4e:	0019      	movs	r1, r3
10045a50:	4468      	add	r0, sp
	rp0->Attribute_Value_Length = Attribute_Value_Length;
10045a52:	726c      	strb	r4, [r5, #9]
	Osal_MemCpy((void *) rp0->Attribute_Value, (const void *) Attribute_Value, Attribute_Value_Length);
10045a54:	f7fa fe95 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045a58:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
10045a5a:	3407      	adds	r4, #7
	buffer_out[0] = 0x04;
10045a5c:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
10045a5e:	33fb      	adds	r3, #251	; 0xfb
10045a60:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
10045a62:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x12;
10045a64:	3bed      	subs	r3, #237	; 0xed
	buffer_out[2] = 2 + 2 + 1 + Attribute_Value_Length + 2;
10045a66:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x12;
10045a68:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 37);
10045a6a:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045a6c:	3b06      	subs	r3, #6
	send_event(buffer_out, buffer_out[2] + 3, 37);
10045a6e:	2225      	movs	r2, #37	; 0x25
10045a70:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
10045a72:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 37);
10045a74:	f000 fe4a 	bl	1004670c <send_event>
}
10045a78:	b043      	add	sp, #268	; 0x10c
10045a7a:	bd30      	pop	{r4, r5, pc}

10045a7c <aci_gatt_write_permit_req_event>:
 * @param Attribute_Handle The handle of the attribute
 * @param Data_Length Length of Data field
 * @param Data The data that the client has requested to write
 * @retval None
 */
void aci_gatt_write_permit_req_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Data_Length, uint8_t Data[]) {
10045a7c:	b530      	push	{r4, r5, lr}
10045a7e:	0014      	movs	r4, r2
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_write_permit_req_event_rp0 *rp0 = (aci_gatt_write_permit_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045a80:	2209      	movs	r2, #9
void aci_gatt_write_permit_req_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Data_Length, uint8_t Data[]) {
10045a82:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045a84:	446a      	add	r2, sp
10045a86:	7010      	strb	r0, [r2, #0]
10045a88:	0a00      	lsrs	r0, r0, #8
10045a8a:	7050      	strb	r0, [r2, #1]
	rp0->Attribute_Handle = Attribute_Handle;
10045a8c:	200b      	movs	r0, #11
10045a8e:	4468      	add	r0, sp
10045a90:	7001      	strb	r1, [r0, #0]
10045a92:	0a09      	lsrs	r1, r1, #8
10045a94:	7041      	strb	r1, [r0, #1]
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045a96:	200e      	movs	r0, #14
	rp0->Connection_Handle = Connection_Handle;
10045a98:	ad01      	add	r5, sp, #4
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045a9a:	0022      	movs	r2, r4
10045a9c:	0019      	movs	r1, r3
10045a9e:	4468      	add	r0, sp
	rp0->Data_Length = Data_Length;
10045aa0:	726c      	strb	r4, [r5, #9]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045aa2:	f7fa fe6e 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045aa6:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 2 + 1 + Data_Length + 2;
10045aa8:	3407      	adds	r4, #7
	buffer_out[0] = 0x04;
10045aaa:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
10045aac:	33fb      	adds	r3, #251	; 0xfb
10045aae:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 2 + 1 + Data_Length + 2;
10045ab0:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x13;
10045ab2:	3bec      	subs	r3, #236	; 0xec
	buffer_out[2] = 2 + 2 + 1 + Data_Length + 2;
10045ab4:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x13;
10045ab6:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 38);
10045ab8:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045aba:	3b07      	subs	r3, #7
	send_event(buffer_out, buffer_out[2] + 3, 38);
10045abc:	2226      	movs	r2, #38	; 0x26
10045abe:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
10045ac0:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 38);
10045ac2:	f000 fe23 	bl	1004670c <send_event>
}
10045ac6:	b043      	add	sp, #268	; 0x10c
10045ac8:	bd30      	pop	{r4, r5, pc}

10045aca <aci_gatt_read_permit_req_event>:
 * @param Connection_Handle Connection handle related to the response
 * @param Attribute_Handle The handle of the attribute
 * @param Offset Contains the offset from which the read has been requested
 * @retval None
 */
void aci_gatt_read_permit_req_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint16_t Offset) {
10045aca:	b510      	push	{r4, lr}
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_read_permit_req_event_rp0 *rp0 = (aci_gatt_read_permit_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045acc:	2409      	movs	r4, #9
void aci_gatt_read_permit_req_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint16_t Offset) {
10045ace:	b0c2      	sub	sp, #264	; 0x108
	rp0->Connection_Handle = Connection_Handle;
10045ad0:	446c      	add	r4, sp
10045ad2:	7020      	strb	r0, [r4, #0]
10045ad4:	0a00      	lsrs	r0, r0, #8
10045ad6:	7060      	strb	r0, [r4, #1]
	rp0->Attribute_Handle = Attribute_Handle;
10045ad8:	200b      	movs	r0, #11
10045ada:	4468      	add	r0, sp
10045adc:	7001      	strb	r1, [r0, #0]
10045ade:	0a09      	lsrs	r1, r1, #8
10045ae0:	7041      	strb	r1, [r0, #1]
	rp0->Offset = Offset;
10045ae2:	210d      	movs	r1, #13
10045ae4:	4469      	add	r1, sp
10045ae6:	700a      	strb	r2, [r1, #0]
10045ae8:	0a12      	lsrs	r2, r2, #8
10045aea:	704a      	strb	r2, [r1, #1]
	buffer_out[0] = 0x04;
10045aec:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
10045aee:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
10045af0:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
10045af2:	32fb      	adds	r2, #251	; 0xfb
10045af4:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 2 + 2 + 2 + 2;
10045af6:	3af7      	subs	r2, #247	; 0xf7
10045af8:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x14;
10045afa:	320c      	adds	r2, #12
10045afc:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
10045afe:	3a08      	subs	r2, #8
10045b00:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 39);
10045b02:	210b      	movs	r1, #11
10045b04:	321b      	adds	r2, #27
10045b06:	0018      	movs	r0, r3
10045b08:	f000 fe00 	bl	1004670c <send_event>
}
10045b0c:	b042      	add	sp, #264	; 0x108
10045b0e:	bd10      	pop	{r4, pc}

10045b10 <aci_gatt_read_multi_permit_req_event>:
void aci_gatt_read_multi_permit_req_event(uint16_t Connection_Handle, uint8_t Number_of_Handles, Handle_Item_t Handle_Item[]) {
	uint8_t buffer_out[258];
	int output_size = 0;
	/* Output params */
	aci_gatt_read_multi_permit_req_event_rp0 *rp0 = (aci_gatt_read_multi_permit_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045b10:	2309      	movs	r3, #9
void aci_gatt_read_multi_permit_req_event(uint16_t Connection_Handle, uint8_t Number_of_Handles, Handle_Item_t Handle_Item[]) {
10045b12:	b530      	push	{r4, r5, lr}
10045b14:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045b16:	446b      	add	r3, sp
10045b18:	7018      	strb	r0, [r3, #0]
10045b1a:	0a00      	lsrs	r0, r0, #8
10045b1c:	7058      	strb	r0, [r3, #1]
	int output_size = 0;
10045b1e:	2300      	movs	r3, #0
	rp0->Connection_Handle = Connection_Handle;
10045b20:	ac01      	add	r4, sp, #4
	rp0->Number_of_Handles = Number_of_Handles;
10045b22:	71e1      	strb	r1, [r4, #7]
10045b24:	0049      	lsls	r1, r1, #1
	{
		int i;
		for (i = 0; i < Number_of_Handles; i++) {
10045b26:	428b      	cmp	r3, r1
10045b28:	d111      	bne.n	10045b4e <aci_gatt_read_multi_permit_req_event+0x3e>
			rp0->Handle_Item[i].Handle = Handle_Item[i].Handle;
			output_size += sizeof(uint16_t);
		}
	}
	buffer_out[0] = 0x04;
10045b2a:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 1 + output_size + 2;
10045b2c:	3305      	adds	r3, #5
10045b2e:	b2d9      	uxtb	r1, r3
	buffer_out[3] = 0x15;
10045b30:	2315      	movs	r3, #21
	buffer_out[0] = 0x04;
10045b32:	7022      	strb	r2, [r4, #0]
	buffer_out[1] = 0xFF;
10045b34:	32fb      	adds	r2, #251	; 0xfb
10045b36:	7062      	strb	r2, [r4, #1]
	buffer_out[2] = 2 + 1 + output_size + 2;
10045b38:	70a1      	strb	r1, [r4, #2]
	buffer_out[3] = 0x15;
10045b3a:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 40);
10045b3c:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045b3e:	3b09      	subs	r3, #9
	send_event(buffer_out, buffer_out[2] + 3, 40);
10045b40:	3ad7      	subs	r2, #215	; 0xd7
10045b42:	0020      	movs	r0, r4
	buffer_out[4] = 0x0c;
10045b44:	7123      	strb	r3, [r4, #4]
	send_event(buffer_out, buffer_out[2] + 3, 40);
10045b46:	f000 fde1 	bl	1004670c <send_event>
}
10045b4a:	b043      	add	sp, #268	; 0x10c
10045b4c:	bd30      	pop	{r4, r5, pc}
			rp0->Handle_Item[i].Handle = Handle_Item[i].Handle;
10045b4e:	5ad5      	ldrh	r5, [r2, r3]
10045b50:	18e0      	adds	r0, r4, r3
10045b52:	8105      	strh	r5, [r0, #8]
			output_size += sizeof(uint16_t);
10045b54:	3302      	adds	r3, #2
10045b56:	e7e6      	b.n	10045b26 <aci_gatt_read_multi_permit_req_event+0x16>

10045b58 <aci_gatt_tx_pool_available_event>:
 */
void aci_gatt_tx_pool_available_event(uint16_t Connection_Handle, uint16_t Available_Buffers) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_tx_pool_available_event_rp0 *rp0 = (aci_gatt_tx_pool_available_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045b58:	2209      	movs	r2, #9
void aci_gatt_tx_pool_available_event(uint16_t Connection_Handle, uint16_t Available_Buffers) {
10045b5a:	b500      	push	{lr}
10045b5c:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045b5e:	446a      	add	r2, sp
10045b60:	7010      	strb	r0, [r2, #0]
10045b62:	0a00      	lsrs	r0, r0, #8
10045b64:	7050      	strb	r0, [r2, #1]
	rp0->Available_Buffers = Available_Buffers;
10045b66:	220b      	movs	r2, #11
10045b68:	446a      	add	r2, sp
10045b6a:	7011      	strb	r1, [r2, #0]
10045b6c:	0a09      	lsrs	r1, r1, #8
10045b6e:	7051      	strb	r1, [r2, #1]
	buffer_out[0] = 0x04;
10045b70:	2204      	movs	r2, #4
	rp0->Connection_Handle = Connection_Handle;
10045b72:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
10045b74:	701a      	strb	r2, [r3, #0]
	buffer_out[1] = 0xFF;
10045b76:	32fb      	adds	r2, #251	; 0xfb
10045b78:	705a      	strb	r2, [r3, #1]
	buffer_out[2] = 2 + 2 + 2;
10045b7a:	3af9      	subs	r2, #249	; 0xf9
10045b7c:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x16;
10045b7e:	3210      	adds	r2, #16
10045b80:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
10045b82:	3a0a      	subs	r2, #10
10045b84:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 41);
10045b86:	2109      	movs	r1, #9
10045b88:	321d      	adds	r2, #29
10045b8a:	0018      	movs	r0, r3
10045b8c:	f000 fdbe 	bl	1004670c <send_event>
}
10045b90:	b043      	add	sp, #268	; 0x10c
10045b92:	bd00      	pop	{pc}

10045b94 <aci_gatt_server_confirmation_event>:
 */
void aci_gatt_server_confirmation_event(uint16_t Connection_Handle) {
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_server_confirmation_event_rp0 *rp0 = (aci_gatt_server_confirmation_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045b94:	2209      	movs	r2, #9
void aci_gatt_server_confirmation_event(uint16_t Connection_Handle) {
10045b96:	b500      	push	{lr}
10045b98:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045b9a:	446a      	add	r2, sp
10045b9c:	7010      	strb	r0, [r2, #0]
10045b9e:	0a00      	lsrs	r0, r0, #8
10045ba0:	7050      	strb	r0, [r2, #1]
	buffer_out[0] = 0x04;
10045ba2:	2204      	movs	r2, #4
	buffer_out[1] = 0xFF;
10045ba4:	21ff      	movs	r1, #255	; 0xff
	rp0->Connection_Handle = Connection_Handle;
10045ba6:	ab01      	add	r3, sp, #4
	buffer_out[0] = 0x04;
10045ba8:	701a      	strb	r2, [r3, #0]
	buffer_out[2] = 2 + 2;
10045baa:	709a      	strb	r2, [r3, #2]
	buffer_out[3] = 0x17;
10045bac:	3213      	adds	r2, #19
10045bae:	70da      	strb	r2, [r3, #3]
	buffer_out[4] = 0x0c;
10045bb0:	3a0b      	subs	r2, #11
	buffer_out[1] = 0xFF;
10045bb2:	7059      	strb	r1, [r3, #1]
	buffer_out[4] = 0x0c;
10045bb4:	711a      	strb	r2, [r3, #4]
	send_event(buffer_out, buffer_out[2] + 3, 42);
10045bb6:	39f8      	subs	r1, #248	; 0xf8
10045bb8:	321e      	adds	r2, #30
10045bba:	0018      	movs	r0, r3
10045bbc:	f000 fda6 	bl	1004670c <send_event>
}
10045bc0:	b043      	add	sp, #268	; 0x10c
10045bc2:	bd00      	pop	{pc}

10045bc4 <aci_gatt_prepare_write_permit_req_event>:
 * @param Offset The offset from which the prepare write has been requested
 * @param Data_Length Length of Data field
 * @param Data The data that the client has requested to write
 * @retval None
 */
void aci_gatt_prepare_write_permit_req_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint16_t Offset, uint8_t Data_Length, uint8_t Data[]) {
10045bc4:	b530      	push	{r4, r5, lr}
10045bc6:	001c      	movs	r4, r3
	uint8_t buffer_out[258];
	/* Output params */
	aci_gatt_prepare_write_permit_req_event_rp0 *rp0 = (aci_gatt_prepare_write_permit_req_event_rp0 *) (buffer_out + 5);
	rp0->Connection_Handle = Connection_Handle;
10045bc8:	2309      	movs	r3, #9
void aci_gatt_prepare_write_permit_req_event(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint16_t Offset, uint8_t Data_Length, uint8_t Data[]) {
10045bca:	b0c3      	sub	sp, #268	; 0x10c
	rp0->Connection_Handle = Connection_Handle;
10045bcc:	446b      	add	r3, sp
10045bce:	7018      	strb	r0, [r3, #0]
10045bd0:	0a00      	lsrs	r0, r0, #8
10045bd2:	7058      	strb	r0, [r3, #1]
	rp0->Attribute_Handle = Attribute_Handle;
10045bd4:	230b      	movs	r3, #11
10045bd6:	446b      	add	r3, sp
10045bd8:	7019      	strb	r1, [r3, #0]
10045bda:	0a09      	lsrs	r1, r1, #8
10045bdc:	7059      	strb	r1, [r3, #1]
	rp0->Offset = Offset;
10045bde:	230d      	movs	r3, #13
10045be0:	446b      	add	r3, sp
10045be2:	701a      	strb	r2, [r3, #0]
10045be4:	0a12      	lsrs	r2, r2, #8
	rp0->Connection_Handle = Connection_Handle;
10045be6:	ad01      	add	r5, sp, #4
	rp0->Offset = Offset;
10045be8:	705a      	strb	r2, [r3, #1]
	rp0->Data_Length = Data_Length;
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045bea:	9946      	ldr	r1, [sp, #280]	; 0x118
10045bec:	0022      	movs	r2, r4
10045bee:	a804      	add	r0, sp, #16
	rp0->Data_Length = Data_Length;
10045bf0:	72ec      	strb	r4, [r5, #11]
	Osal_MemCpy((void *) rp0->Data, (const void *) Data, Data_Length);
10045bf2:	f7fa fdc6 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045bf6:	2304      	movs	r3, #4
	buffer_out[1] = 0xFF;
	buffer_out[2] = 2 + 2 + 2 + 1 + Data_Length + 2;
10045bf8:	3409      	adds	r4, #9
	buffer_out[0] = 0x04;
10045bfa:	702b      	strb	r3, [r5, #0]
	buffer_out[1] = 0xFF;
10045bfc:	33fb      	adds	r3, #251	; 0xfb
10045bfe:	706b      	strb	r3, [r5, #1]
	buffer_out[2] = 2 + 2 + 2 + 1 + Data_Length + 2;
10045c00:	b2e1      	uxtb	r1, r4
	buffer_out[3] = 0x18;
10045c02:	3be7      	subs	r3, #231	; 0xe7
	buffer_out[2] = 2 + 2 + 2 + 1 + Data_Length + 2;
10045c04:	70a9      	strb	r1, [r5, #2]
	buffer_out[3] = 0x18;
10045c06:	70eb      	strb	r3, [r5, #3]
	buffer_out[4] = 0x0c;
	send_event(buffer_out, buffer_out[2] + 3, 43);
10045c08:	3103      	adds	r1, #3
	buffer_out[4] = 0x0c;
10045c0a:	3b0c      	subs	r3, #12
	send_event(buffer_out, buffer_out[2] + 3, 43);
10045c0c:	222b      	movs	r2, #43	; 0x2b
10045c0e:	0028      	movs	r0, r5
	buffer_out[4] = 0x0c;
10045c10:	712b      	strb	r3, [r5, #4]
	send_event(buffer_out, buffer_out[2] + 3, 43);
10045c12:	f000 fd7b 	bl	1004670c <send_event>
}
10045c16:	b043      	add	sp, #268	; 0x10c
10045c18:	bd30      	pop	{r4, r5, pc}

10045c1a <hci_le_connection_complete_event>:
 - 0x05: 50 ppm
 - 0x06: 30 ppm
 - 0x07: 20 ppm
 * @retval None
 */
void hci_le_connection_complete_event(uint8_t Status, uint16_t Connection_Handle, uint8_t Role, uint8_t Peer_Address_Type, uint8_t Peer_Address[6], uint16_t Conn_Interval, uint16_t Conn_Latency, uint16_t Supervision_Timeout, uint8_t Master_Clock_Accuracy) {
10045c1a:	b5f0      	push	{r4, r5, r6, r7, lr}
10045c1c:	b0c5      	sub	sp, #276	; 0x114
10045c1e:	ac4a      	add	r4, sp, #296	; 0x128
10045c20:	cc20      	ldmia	r4!, {r5}
10045c22:	9300      	str	r3, [sp, #0]
10045c24:	8826      	ldrh	r6, [r4, #0]
10045c26:	ac4c      	add	r4, sp, #304	; 0x130
10045c28:	46ac      	mov	ip, r5
10045c2a:	8825      	ldrh	r5, [r4, #0]
10045c2c:	ac4d      	add	r4, sp, #308	; 0x134
10045c2e:	8827      	ldrh	r7, [r4, #0]
10045c30:	ac4e      	add	r4, sp, #312	; 0x138
10045c32:	7824      	ldrb	r4, [r4, #0]
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_connection_complete_event_rp0 *rp0 = (hci_le_connection_complete_event_rp0 *) (buffer_out + 4);
	rp0->Status = Status;
	rp0->Connection_Handle = Connection_Handle;
10045c34:	ab02      	add	r3, sp, #8
void hci_le_connection_complete_event(uint8_t Status, uint16_t Connection_Handle, uint8_t Role, uint8_t Peer_Address_Type, uint8_t Peer_Address[6], uint16_t Conn_Interval, uint16_t Conn_Latency, uint16_t Supervision_Timeout, uint8_t Master_Clock_Accuracy) {
10045c36:	9401      	str	r4, [sp, #4]
	rp0->Status = Status;
10045c38:	ac03      	add	r4, sp, #12
10045c3a:	7120      	strb	r0, [r4, #4]
	rp0->Connection_Handle = Connection_Handle;
10045c3c:	2009      	movs	r0, #9
10045c3e:	18c0      	adds	r0, r0, r3
	rp0->Role = Role;
	rp0->Peer_Address_Type = Peer_Address_Type;
10045c40:	466b      	mov	r3, sp
	rp0->Connection_Handle = Connection_Handle;
10045c42:	7001      	strb	r1, [r0, #0]
10045c44:	0a09      	lsrs	r1, r1, #8
10045c46:	7041      	strb	r1, [r0, #1]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045c48:	200d      	movs	r0, #13
	rp0->Peer_Address_Type = Peer_Address_Type;
10045c4a:	781b      	ldrb	r3, [r3, #0]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045c4c:	4661      	mov	r1, ip
	rp0->Peer_Address_Type = Peer_Address_Type;
10045c4e:	7223      	strb	r3, [r4, #8]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045c50:	ab02      	add	r3, sp, #8
	rp0->Role = Role;
10045c52:	71e2      	strb	r2, [r4, #7]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045c54:	18c0      	adds	r0, r0, r3
10045c56:	2206      	movs	r2, #6
10045c58:	f7fa fd93 	bl	10040782 <Osal_MemCpy>
	rp0->Conn_Interval = Conn_Interval;
10045c5c:	2313      	movs	r3, #19
10045c5e:	aa02      	add	r2, sp, #8
10045c60:	189b      	adds	r3, r3, r2
10045c62:	701e      	strb	r6, [r3, #0]
10045c64:	0a36      	lsrs	r6, r6, #8
10045c66:	705e      	strb	r6, [r3, #1]
	rp0->Conn_Latency = Conn_Latency;
10045c68:	2315      	movs	r3, #21
10045c6a:	189b      	adds	r3, r3, r2
	rp0->Supervision_Timeout = Supervision_Timeout;
10045c6c:	2217      	movs	r2, #23
	rp0->Conn_Latency = Conn_Latency;
10045c6e:	701d      	strb	r5, [r3, #0]
10045c70:	0a2d      	lsrs	r5, r5, #8
10045c72:	705d      	strb	r5, [r3, #1]
	rp0->Supervision_Timeout = Supervision_Timeout;
10045c74:	ab02      	add	r3, sp, #8
10045c76:	18d2      	adds	r2, r2, r3
10045c78:	0a3b      	lsrs	r3, r7, #8
10045c7a:	7053      	strb	r3, [r2, #1]
	rp0->Master_Clock_Accuracy = Master_Clock_Accuracy;
10045c7c:	466b      	mov	r3, sp
10045c7e:	791b      	ldrb	r3, [r3, #4]
	rp0->Supervision_Timeout = Supervision_Timeout;
10045c80:	7017      	strb	r7, [r2, #0]
	rp0->Master_Clock_Accuracy = Master_Clock_Accuracy;
10045c82:	7563      	strb	r3, [r4, #21]
	buffer_out[0] = 0x04;
10045c84:	2304      	movs	r3, #4
10045c86:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045c88:	333a      	adds	r3, #58	; 0x3a
10045c8a:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 2 + 1 + 1 + 6 + 2 + 2 + 2 + 1 + 1;
10045c8c:	3b2b      	subs	r3, #43	; 0x2b
10045c8e:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
	send_event(buffer_out, buffer_out[2] + 3, 44);
10045c90:	222c      	movs	r2, #44	; 0x2c
	buffer_out[3] = 0x01;
10045c92:	3b12      	subs	r3, #18
	send_event(buffer_out, buffer_out[2] + 3, 44);
10045c94:	2116      	movs	r1, #22
10045c96:	0020      	movs	r0, r4
	buffer_out[3] = 0x01;
10045c98:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 44);
10045c9a:	f000 fd37 	bl	1004670c <send_event>
}
10045c9e:	b045      	add	sp, #276	; 0x114
10045ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}

10045ca2 <hci_le_advertising_report_event>:
 * Values:
 - 0x01
 * @param Advertising_Report See @ref Advertising_Report_t
 * @retval None
 */
void hci_le_advertising_report_event(uint8_t Num_Reports, Advertising_Report_t Advertising_Report[]) {
10045ca2:	b5f0      	push	{r4, r5, r6, r7, lr}
10045ca4:	b0c5      	sub	sp, #276	; 0x114
	uint8_t buffer_out[258];
	int output_size = 0;
	/* Output params */
	hci_le_advertising_report_event_rp0 *rp0 = (hci_le_advertising_report_event_rp0 *) (buffer_out + 4);
	rp0->Num_Reports = Num_Reports;
10045ca6:	466b      	mov	r3, sp
void hci_le_advertising_report_event(uint8_t Num_Reports, Advertising_Report_t Advertising_Report[]) {
10045ca8:	9001      	str	r0, [sp, #4]
	rp0->Num_Reports = Num_Reports;
10045caa:	791b      	ldrb	r3, [r3, #4]
10045cac:	af03      	add	r7, sp, #12
10045cae:	713b      	strb	r3, [r7, #4]
	{
		int i;
		for (i = 0; i < Num_Reports; i++) {
10045cb0:	2300      	movs	r3, #0
10045cb2:	000d      	movs	r5, r1
	int output_size = 0;
10045cb4:	001c      	movs	r4, r3
		for (i = 0; i < Num_Reports; i++) {
10045cb6:	9300      	str	r3, [sp, #0]
10045cb8:	9b00      	ldr	r3, [sp, #0]
10045cba:	9a01      	ldr	r2, [sp, #4]
10045cbc:	4293      	cmp	r3, r2
10045cbe:	db0f      	blt.n	10045ce0 <hci_le_advertising_report_event+0x3e>
			output_size += Advertising_Report[i].Length_Data;
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Data[Advertising_Report[i].Length_Data], (const void *) &Advertising_Report[i].RSSI, 1);
			output_size += 1;
		}
	}
	buffer_out[0] = 0x04;
10045cc0:	2304      	movs	r3, #4
	buffer_out[1] = 0x3E;
	buffer_out[2] = 1 + output_size + 1;
10045cc2:	3402      	adds	r4, #2
	buffer_out[0] = 0x04;
10045cc4:	703b      	strb	r3, [r7, #0]
	buffer_out[2] = 1 + output_size + 1;
10045cc6:	b2e1      	uxtb	r1, r4
	buffer_out[1] = 0x3E;
10045cc8:	333a      	adds	r3, #58	; 0x3a
10045cca:	707b      	strb	r3, [r7, #1]
	buffer_out[2] = 1 + output_size + 1;
10045ccc:	70b9      	strb	r1, [r7, #2]
	buffer_out[3] = 0x02;
10045cce:	3b3c      	subs	r3, #60	; 0x3c
	send_event(buffer_out, buffer_out[2] + 3, 45);
10045cd0:	3103      	adds	r1, #3
10045cd2:	222d      	movs	r2, #45	; 0x2d
10045cd4:	0038      	movs	r0, r7
	buffer_out[3] = 0x02;
10045cd6:	70fb      	strb	r3, [r7, #3]
	send_event(buffer_out, buffer_out[2] + 3, 45);
10045cd8:	f000 fd18 	bl	1004670c <send_event>
}
10045cdc:	b045      	add	sp, #276	; 0x114
10045cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
			hci_le_advertising_report_event_rp0 *rp0_tmp = (hci_le_advertising_report_event_rp0 *) (((uint8_t *) rp0) + output_size);
10045ce0:	ab04      	add	r3, sp, #16
10045ce2:	191e      	adds	r6, r3, r4
			rp0_tmp->Advertising_Report[0].Event_Type = Advertising_Report[i].Event_Type;
10045ce4:	782b      	ldrb	r3, [r5, #0]
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Address, (const void *) Advertising_Report[i].Address, 6);
10045ce6:	1ca9      	adds	r1, r5, #2
			rp0_tmp->Advertising_Report[0].Event_Type = Advertising_Report[i].Event_Type;
10045ce8:	7073      	strb	r3, [r6, #1]
			rp0_tmp->Advertising_Report[0].Address_Type = Advertising_Report[i].Address_Type;
10045cea:	786b      	ldrb	r3, [r5, #1]
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Address, (const void *) Advertising_Report[i].Address, 6);
10045cec:	2206      	movs	r2, #6
			rp0_tmp->Advertising_Report[0].Address_Type = Advertising_Report[i].Address_Type;
10045cee:	70b3      	strb	r3, [r6, #2]
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Address, (const void *) Advertising_Report[i].Address, 6);
10045cf0:	1cf0      	adds	r0, r6, #3
10045cf2:	f7fa fd46 	bl	10040782 <Osal_MemCpy>
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Data, (const void *) Advertising_Report[i].Data, Advertising_Report[i].Length_Data);
10045cf6:	0030      	movs	r0, r6
			rp0_tmp->Advertising_Report[0].Length_Data = Advertising_Report[i].Length_Data;
10045cf8:	7a2a      	ldrb	r2, [r5, #8]
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Data, (const void *) Advertising_Report[i].Data, Advertising_Report[i].Length_Data);
10045cfa:	68e9      	ldr	r1, [r5, #12]
			rp0_tmp->Advertising_Report[0].Length_Data = Advertising_Report[i].Length_Data;
10045cfc:	7272      	strb	r2, [r6, #9]
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Data, (const void *) Advertising_Report[i].Data, Advertising_Report[i].Length_Data);
10045cfe:	300a      	adds	r0, #10
10045d00:	f7fa fd3f 	bl	10040782 <Osal_MemCpy>
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Data[Advertising_Report[i].Length_Data], (const void *) &Advertising_Report[i].RSSI, 1);
10045d04:	0029      	movs	r1, r5
			output_size += Advertising_Report[i].Length_Data;
10045d06:	7a28      	ldrb	r0, [r5, #8]
			output_size += sizeof(uint8_t);
10045d08:	3409      	adds	r4, #9
			output_size += Advertising_Report[i].Length_Data;
10045d0a:	1904      	adds	r4, r0, r4
			Osal_MemCpy((void *) &rp0_tmp->Advertising_Report[0].Data[Advertising_Report[i].Length_Data], (const void *) &Advertising_Report[i].RSSI, 1);
10045d0c:	300a      	adds	r0, #10
10045d0e:	3110      	adds	r1, #16
10045d10:	1830      	adds	r0, r6, r0
10045d12:	2201      	movs	r2, #1
10045d14:	f7fa fd35 	bl	10040782 <Osal_MemCpy>
		for (i = 0; i < Num_Reports; i++) {
10045d18:	9b00      	ldr	r3, [sp, #0]
			output_size += 1;
10045d1a:	3401      	adds	r4, #1
		for (i = 0; i < Num_Reports; i++) {
10045d1c:	3301      	adds	r3, #1
10045d1e:	9300      	str	r3, [sp, #0]
10045d20:	3514      	adds	r5, #20
10045d22:	e7c9      	b.n	10045cb8 <hci_le_advertising_report_event+0x16>

10045d24 <hci_le_connection_update_complete_event>:
 Time = N * 10 msec.
 * Values:
 - 0x000A (100 ms)  ... 0x0C80 (32000 ms)
 * @retval None
 */
void hci_le_connection_update_complete_event(uint8_t Status, uint16_t Connection_Handle, uint16_t Conn_Interval, uint16_t Conn_Latency, uint16_t Supervision_Timeout) {
10045d24:	b530      	push	{r4, r5, lr}
10045d26:	b0c3      	sub	sp, #268	; 0x10c
10045d28:	ac46      	add	r4, sp, #280	; 0x118
10045d2a:	8825      	ldrh	r5, [r4, #0]
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_connection_update_complete_event_rp0 *rp0 = (hci_le_connection_update_complete_event_rp0 *) (buffer_out + 4);
	rp0->Status = Status;
10045d2c:	ac01      	add	r4, sp, #4
10045d2e:	7120      	strb	r0, [r4, #4]
	rp0->Connection_Handle = Connection_Handle;
10045d30:	2009      	movs	r0, #9
10045d32:	4468      	add	r0, sp
10045d34:	7001      	strb	r1, [r0, #0]
10045d36:	0a09      	lsrs	r1, r1, #8
10045d38:	7041      	strb	r1, [r0, #1]
	rp0->Conn_Interval = Conn_Interval;
10045d3a:	210b      	movs	r1, #11
10045d3c:	4469      	add	r1, sp
10045d3e:	700a      	strb	r2, [r1, #0]
10045d40:	0a12      	lsrs	r2, r2, #8
10045d42:	704a      	strb	r2, [r1, #1]
	rp0->Conn_Latency = Conn_Latency;
10045d44:	220d      	movs	r2, #13
10045d46:	446a      	add	r2, sp
10045d48:	7013      	strb	r3, [r2, #0]
10045d4a:	0a1b      	lsrs	r3, r3, #8
10045d4c:	7053      	strb	r3, [r2, #1]
	rp0->Supervision_Timeout = Supervision_Timeout;
10045d4e:	230f      	movs	r3, #15
10045d50:	446b      	add	r3, sp
10045d52:	701d      	strb	r5, [r3, #0]
10045d54:	0a2d      	lsrs	r5, r5, #8
10045d56:	705d      	strb	r5, [r3, #1]
	buffer_out[0] = 0x04;
10045d58:	2304      	movs	r3, #4
10045d5a:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045d5c:	333a      	adds	r3, #58	; 0x3a
10045d5e:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 2 + 2 + 2 + 2 + 1;
10045d60:	3b34      	subs	r3, #52	; 0x34
10045d62:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x03;
	send_event(buffer_out, buffer_out[2] + 3, 46);
10045d64:	222e      	movs	r2, #46	; 0x2e
	buffer_out[3] = 0x03;
10045d66:	3b07      	subs	r3, #7
	send_event(buffer_out, buffer_out[2] + 3, 46);
10045d68:	210d      	movs	r1, #13
10045d6a:	0020      	movs	r0, r4
	buffer_out[3] = 0x03;
10045d6c:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 46);
10045d6e:	f000 fccd 	bl	1004670c <send_event>
}
10045d72:	b043      	add	sp, #268	; 0x10c
10045d74:	bd30      	pop	{r4, r5, pc}

10045d76 <hci_le_read_remote_used_features_complete_event>:
 * Values:
 - 0x0000 ... 0x0EFF
 * @param LE_Features Bit Mask List of used LE features. For details see LE Link Layer specification.
 * @retval None
 */
void hci_le_read_remote_used_features_complete_event(uint8_t Status, uint16_t Connection_Handle, uint8_t LE_Features[8]) {
10045d76:	b530      	push	{r4, r5, lr}
10045d78:	0015      	movs	r5, r2
10045d7a:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_read_remote_used_features_complete_event_rp0 *rp0 = (hci_le_read_remote_used_features_complete_event_rp0 *) (buffer_out + 4);
	rp0->Status = Status;
	rp0->Connection_Handle = Connection_Handle;
10045d7c:	2209      	movs	r2, #9
	rp0->Status = Status;
10045d7e:	ac01      	add	r4, sp, #4
10045d80:	7120      	strb	r0, [r4, #4]
	Osal_MemCpy((void *) rp0->LE_Features, (const void *) LE_Features, 8);
10045d82:	200b      	movs	r0, #11
	rp0->Connection_Handle = Connection_Handle;
10045d84:	446a      	add	r2, sp
10045d86:	7011      	strb	r1, [r2, #0]
10045d88:	0a09      	lsrs	r1, r1, #8
10045d8a:	7051      	strb	r1, [r2, #1]
	Osal_MemCpy((void *) rp0->LE_Features, (const void *) LE_Features, 8);
10045d8c:	4468      	add	r0, sp
10045d8e:	0029      	movs	r1, r5
10045d90:	2208      	movs	r2, #8
10045d92:	f7fa fcf6 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
	buffer_out[1] = 0x3E;
10045d96:	223e      	movs	r2, #62	; 0x3e
	buffer_out[0] = 0x04;
10045d98:	2304      	movs	r3, #4
	buffer_out[1] = 0x3E;
10045d9a:	7062      	strb	r2, [r4, #1]
	buffer_out[2] = 1 + 2 + 8 + 1;
10045d9c:	3a32      	subs	r2, #50	; 0x32
10045d9e:	70a2      	strb	r2, [r4, #2]
	buffer_out[3] = 0x04;
	send_event(buffer_out, buffer_out[2] + 3, 47);
10045da0:	210f      	movs	r1, #15
10045da2:	3223      	adds	r2, #35	; 0x23
10045da4:	0020      	movs	r0, r4
	buffer_out[0] = 0x04;
10045da6:	7023      	strb	r3, [r4, #0]
	buffer_out[3] = 0x04;
10045da8:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 47);
10045daa:	f000 fcaf 	bl	1004670c <send_event>
}
10045dae:	b043      	add	sp, #268	; 0x10c
10045db0:	bd30      	pop	{r4, r5, pc}

10045db2 <hci_le_long_term_key_request_event>:
 - 0x0000 ... 0x0EFF
 * @param Random_Number 64-bit random number
 * @param Encrypted_Diversifier 16-bit encrypted diversifier
 * @retval None
 */
void hci_le_long_term_key_request_event(uint16_t Connection_Handle, uint8_t Random_Number[8], uint16_t Encrypted_Diversifier) {
10045db2:	b530      	push	{r4, r5, lr}
10045db4:	b0c3      	sub	sp, #268	; 0x10c
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_long_term_key_request_event_rp0 *rp0 = (hci_le_long_term_key_request_event_rp0 *) (buffer_out + 4);
	rp0->Connection_Handle = Connection_Handle;
10045db6:	ac01      	add	r4, sp, #4
10045db8:	80a0      	strh	r0, [r4, #4]
	Osal_MemCpy((void *) rp0->Random_Number, (const void *) Random_Number, 8);
10045dba:	200a      	movs	r0, #10
void hci_le_long_term_key_request_event(uint16_t Connection_Handle, uint8_t Random_Number[8], uint16_t Encrypted_Diversifier) {
10045dbc:	0015      	movs	r5, r2
	Osal_MemCpy((void *) rp0->Random_Number, (const void *) Random_Number, 8);
10045dbe:	4468      	add	r0, sp
10045dc0:	2208      	movs	r2, #8
10045dc2:	f7fa fcde 	bl	10040782 <Osal_MemCpy>
	rp0->Encrypted_Diversifier = Encrypted_Diversifier;
	buffer_out[0] = 0x04;
10045dc6:	2304      	movs	r3, #4
10045dc8:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045dca:	333a      	adds	r3, #58	; 0x3a
10045dcc:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 2 + 8 + 2 + 1;
10045dce:	3b31      	subs	r3, #49	; 0x31
10045dd0:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x05;
	send_event(buffer_out, buffer_out[2] + 3, 48);
10045dd2:	2230      	movs	r2, #48	; 0x30
	buffer_out[3] = 0x05;
10045dd4:	3b08      	subs	r3, #8
	send_event(buffer_out, buffer_out[2] + 3, 48);
10045dd6:	2110      	movs	r1, #16
10045dd8:	0020      	movs	r0, r4
	rp0->Encrypted_Diversifier = Encrypted_Diversifier;
10045dda:	81e5      	strh	r5, [r4, #14]
	buffer_out[3] = 0x05;
10045ddc:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 48);
10045dde:	f000 fc95 	bl	1004670c <send_event>
}
10045de2:	b043      	add	sp, #268	; 0x10c
10045de4:	bd30      	pop	{r4, r5, pc}

10045de6 <hci_le_data_length_change_event>:
 Range 0x001B-0x00FB (0x0000 - 0x001A and 0x00FC - 0xFFFF Reserved for future use)
 * @param MaxRxTime The maximum time that the local Controller expects to take to receive a Link Layer Data Channel PDU on this connection (connEffectiveMax-RxTime defined in [Vol 6] Part B, Section 4.5.10).
 Range 0x0148-0x0848 (0x0000 - 0x0127 and 0x0849 - 0xFFFF Reserved for future use)
 * @retval None
 */
void hci_le_data_length_change_event(uint16_t Connection_Handle, uint16_t MaxTxOctets, uint16_t MaxTxTime, uint16_t MaxRxOctets, uint16_t MaxRxTime) {
10045de6:	b530      	push	{r4, r5, lr}
10045de8:	b0c3      	sub	sp, #268	; 0x10c
10045dea:	ac46      	add	r4, sp, #280	; 0x118
10045dec:	8825      	ldrh	r5, [r4, #0]
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_data_length_change_event_rp0 *rp0 = (hci_le_data_length_change_event_rp0 *) (buffer_out + 4);
	rp0->Connection_Handle = Connection_Handle;
10045dee:	ac01      	add	r4, sp, #4
	rp0->MaxTxOctets = MaxTxOctets;
	rp0->MaxTxTime = MaxTxTime;
	rp0->MaxRxOctets = MaxRxOctets;
10045df0:	8163      	strh	r3, [r4, #10]
	rp0->MaxRxTime = MaxRxTime;
	buffer_out[0] = 0x04;
10045df2:	2304      	movs	r3, #4
10045df4:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045df6:	333a      	adds	r3, #58	; 0x3a
10045df8:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 2 + 2 + 2 + 2 + 2 + 1;
10045dfa:	3b33      	subs	r3, #51	; 0x33
	rp0->Connection_Handle = Connection_Handle;
10045dfc:	80a0      	strh	r0, [r4, #4]
	rp0->MaxTxOctets = MaxTxOctets;
10045dfe:	80e1      	strh	r1, [r4, #6]
	rp0->MaxTxTime = MaxTxTime;
10045e00:	8122      	strh	r2, [r4, #8]
	buffer_out[2] = 2 + 2 + 2 + 2 + 2 + 1;
10045e02:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x07;
	send_event(buffer_out, buffer_out[2] + 3, 49);
10045e04:	2231      	movs	r2, #49	; 0x31
	buffer_out[3] = 0x07;
10045e06:	3b04      	subs	r3, #4
	send_event(buffer_out, buffer_out[2] + 3, 49);
10045e08:	210e      	movs	r1, #14
10045e0a:	0020      	movs	r0, r4
	rp0->MaxRxTime = MaxRxTime;
10045e0c:	81a5      	strh	r5, [r4, #12]
	buffer_out[3] = 0x07;
10045e0e:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 49);
10045e10:	f000 fc7c 	bl	1004670c <send_event>
}
10045e14:	b043      	add	sp, #268	; 0x10c
10045e16:	bd30      	pop	{r4, r5, pc}

10045e18 <hci_le_read_local_p256_public_key_complete_event>:
 * @brief This event is generated when local P-256 key generation is complete.
 * @param Status For standard error codes see Bluetooth specification, Vol. 2, part D. For proprietary error code refer to Error codes section
 * @param Local_P256_Public_Key Local P-256 public key.
 * @retval None
 */
void hci_le_read_local_p256_public_key_complete_event(uint8_t Status, uint8_t Local_P256_Public_Key[64]) {
10045e18:	b510      	push	{r4, lr}
10045e1a:	b0c2      	sub	sp, #264	; 0x108
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_read_local_p256_public_key_complete_event_rp0 *rp0 = (hci_le_read_local_p256_public_key_complete_event_rp0 *) (buffer_out + 4);
	rp0->Status = Status;
10045e1c:	ac01      	add	r4, sp, #4
10045e1e:	7120      	strb	r0, [r4, #4]
	Osal_MemCpy((void *) rp0->Local_P256_Public_Key, (const void *) Local_P256_Public_Key, 64);
10045e20:	2009      	movs	r0, #9
10045e22:	2240      	movs	r2, #64	; 0x40
10045e24:	4468      	add	r0, sp
10045e26:	f7fa fcac 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045e2a:	2304      	movs	r3, #4
10045e2c:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045e2e:	333a      	adds	r3, #58	; 0x3a
10045e30:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 64 + 1;
10045e32:	3304      	adds	r3, #4
10045e34:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x08;
	send_event(buffer_out, buffer_out[2] + 3, 50);
10045e36:	2232      	movs	r2, #50	; 0x32
	buffer_out[3] = 0x08;
10045e38:	3b3a      	subs	r3, #58	; 0x3a
	send_event(buffer_out, buffer_out[2] + 3, 50);
10045e3a:	2145      	movs	r1, #69	; 0x45
10045e3c:	0020      	movs	r0, r4
	buffer_out[3] = 0x08;
10045e3e:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 50);
10045e40:	f000 fc64 	bl	1004670c <send_event>
}
10045e44:	b042      	add	sp, #264	; 0x108
10045e46:	bd10      	pop	{r4, pc}

10045e48 <hci_le_generate_dhkey_complete_event>:
 by the Controller.
 * @param Status For standard error codes see Bluetooth specification, Vol. 2, part D. For proprietary error code refer to Error codes section
 * @param DHKey Diffie Hellman Key
 * @retval None
 */
void hci_le_generate_dhkey_complete_event(uint8_t Status, uint8_t DHKey[32]) {
10045e48:	b510      	push	{r4, lr}
10045e4a:	b0c2      	sub	sp, #264	; 0x108
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_generate_dhkey_complete_event_rp0 *rp0 = (hci_le_generate_dhkey_complete_event_rp0 *) (buffer_out + 4);
	rp0->Status = Status;
10045e4c:	ac01      	add	r4, sp, #4
10045e4e:	7120      	strb	r0, [r4, #4]
	Osal_MemCpy((void *) rp0->DHKey, (const void *) DHKey, 32);
10045e50:	2009      	movs	r0, #9
10045e52:	2220      	movs	r2, #32
10045e54:	4468      	add	r0, sp
10045e56:	f7fa fc94 	bl	10040782 <Osal_MemCpy>
	buffer_out[0] = 0x04;
10045e5a:	2304      	movs	r3, #4
10045e5c:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045e5e:	333a      	adds	r3, #58	; 0x3a
10045e60:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 32 + 1;
10045e62:	3b1c      	subs	r3, #28
10045e64:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x09;
	send_event(buffer_out, buffer_out[2] + 3, 51);
10045e66:	2233      	movs	r2, #51	; 0x33
	buffer_out[3] = 0x09;
10045e68:	3b19      	subs	r3, #25
	send_event(buffer_out, buffer_out[2] + 3, 51);
10045e6a:	2125      	movs	r1, #37	; 0x25
10045e6c:	0020      	movs	r0, r4
	buffer_out[3] = 0x09;
10045e6e:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 51);
10045e70:	f000 fc4c 	bl	1004670c <send_event>
}
10045e74:	b042      	add	sp, #264	; 0x108
10045e76:	bd10      	pop	{r4, pc}

10045e78 <hci_le_enhanced_connection_complete_event>:
 - 0x06: 30 ppm
 - 0x07: 20 ppm
 * @retval None
 */
void hci_le_enhanced_connection_complete_event(uint8_t Status, uint16_t Connection_Handle, uint8_t Role, uint8_t Peer_Address_Type, uint8_t Peer_Address[6], uint8_t Local_Resolvable_Private_Address[6], uint8_t Peer_Resolvable_Private_Address[6], uint16_t Conn_Interval, uint16_t Conn_Latency, uint16_t Supervision_Timeout,
		uint8_t Master_Clock_Accuracy) {
10045e78:	b5f0      	push	{r4, r5, r6, r7, lr}
10045e7a:	b0c5      	sub	sp, #276	; 0x114
10045e7c:	ac4d      	add	r4, sp, #308	; 0x134
10045e7e:	8827      	ldrh	r7, [r4, #0]
10045e80:	ac4e      	add	r4, sp, #312	; 0x138
10045e82:	8826      	ldrh	r6, [r4, #0]
10045e84:	ac4f      	add	r4, sp, #316	; 0x13c
10045e86:	8825      	ldrh	r5, [r4, #0]
10045e88:	ac50      	add	r4, sp, #320	; 0x140
10045e8a:	7824      	ldrb	r4, [r4, #0]
10045e8c:	469c      	mov	ip, r3
10045e8e:	9401      	str	r4, [sp, #4]
	uint8_t buffer_out[258];
	/* Output params */
	hci_le_enhanced_connection_complete_event_rp0 *rp0 = (hci_le_enhanced_connection_complete_event_rp0 *) (buffer_out + 4);
	rp0->Status = Status;
10045e90:	ac03      	add	r4, sp, #12
10045e92:	7120      	strb	r0, [r4, #4]
	rp0->Connection_Handle = Connection_Handle;
10045e94:	2009      	movs	r0, #9
10045e96:	ab02      	add	r3, sp, #8
10045e98:	18c0      	adds	r0, r0, r3
10045e9a:	7001      	strb	r1, [r0, #0]
	rp0->Role = Role;
	rp0->Peer_Address_Type = Peer_Address_Type;
10045e9c:	4663      	mov	r3, ip
	rp0->Connection_Handle = Connection_Handle;
10045e9e:	0a09      	lsrs	r1, r1, #8
10045ea0:	7041      	strb	r1, [r0, #1]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045ea2:	200d      	movs	r0, #13
	rp0->Peer_Address_Type = Peer_Address_Type;
10045ea4:	7223      	strb	r3, [r4, #8]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045ea6:	ab02      	add	r3, sp, #8
	rp0->Role = Role;
10045ea8:	71e2      	strb	r2, [r4, #7]
	Osal_MemCpy((void *) rp0->Peer_Address, (const void *) Peer_Address, 6);
10045eaa:	994a      	ldr	r1, [sp, #296]	; 0x128
10045eac:	2206      	movs	r2, #6
10045eae:	18c0      	adds	r0, r0, r3
10045eb0:	f7fa fc67 	bl	10040782 <Osal_MemCpy>
	Osal_MemCpy((void *) rp0->Local_Resolvable_Private_Address, (const void *) Local_Resolvable_Private_Address, 6);
10045eb4:	2013      	movs	r0, #19
10045eb6:	ab02      	add	r3, sp, #8
10045eb8:	994b      	ldr	r1, [sp, #300]	; 0x12c
10045eba:	2206      	movs	r2, #6
10045ebc:	18c0      	adds	r0, r0, r3
10045ebe:	f7fa fc60 	bl	10040782 <Osal_MemCpy>
	Osal_MemCpy((void *) rp0->Peer_Resolvable_Private_Address, (const void *) Peer_Resolvable_Private_Address, 6);
10045ec2:	2019      	movs	r0, #25
10045ec4:	ab02      	add	r3, sp, #8
10045ec6:	994c      	ldr	r1, [sp, #304]	; 0x130
10045ec8:	2206      	movs	r2, #6
10045eca:	18c0      	adds	r0, r0, r3
10045ecc:	f7fa fc59 	bl	10040782 <Osal_MemCpy>
	rp0->Conn_Interval = Conn_Interval;
10045ed0:	231f      	movs	r3, #31
10045ed2:	aa02      	add	r2, sp, #8
10045ed4:	189b      	adds	r3, r3, r2
10045ed6:	701f      	strb	r7, [r3, #0]
10045ed8:	0a3f      	lsrs	r7, r7, #8
10045eda:	705f      	strb	r7, [r3, #1]
	rp0->Conn_Latency = Conn_Latency;
10045edc:	2321      	movs	r3, #33	; 0x21
10045ede:	189b      	adds	r3, r3, r2
10045ee0:	701e      	strb	r6, [r3, #0]
10045ee2:	0a36      	lsrs	r6, r6, #8
10045ee4:	705e      	strb	r6, [r3, #1]
	rp0->Supervision_Timeout = Supervision_Timeout;
10045ee6:	2323      	movs	r3, #35	; 0x23
10045ee8:	189b      	adds	r3, r3, r2
10045eea:	701d      	strb	r5, [r3, #0]
10045eec:	0a2d      	lsrs	r5, r5, #8
10045eee:	705d      	strb	r5, [r3, #1]
	rp0->Master_Clock_Accuracy = Master_Clock_Accuracy;
10045ef0:	0013      	movs	r3, r2
10045ef2:	466a      	mov	r2, sp
10045ef4:	7912      	ldrb	r2, [r2, #4]
10045ef6:	3306      	adds	r3, #6
10045ef8:	77da      	strb	r2, [r3, #31]
	buffer_out[0] = 0x04;
10045efa:	2304      	movs	r3, #4
10045efc:	7023      	strb	r3, [r4, #0]
	buffer_out[1] = 0x3E;
10045efe:	333a      	adds	r3, #58	; 0x3a
10045f00:	7063      	strb	r3, [r4, #1]
	buffer_out[2] = 1 + 2 + 1 + 1 + 6 + 6 + 6 + 2 + 2 + 2 + 1 + 1;
10045f02:	3b1f      	subs	r3, #31
10045f04:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x0a;
	send_event(buffer_out, buffer_out[2] + 3, 52);
10045f06:	2234      	movs	r2, #52	; 0x34
	buffer_out[3] = 0x0a;
10045f08:	3b15      	subs	r3, #21
	send_event(buffer_out, buffer_out[2] + 3, 52);
10045f0a:	2122      	movs	r1, #34	; 0x22
10045f0c:	0020      	movs	r0, r4
	buffer_out[3] = 0x0a;
10045f0e:	70e3      	strb	r3, [r4, #3]
	send_event(buffer_out, buffer_out[2] + 3, 52);
10045f10:	f000 fbfc 	bl	1004670c <send_event>
}
10045f14:	b045      	add	sp, #276	; 0x114
10045f16:	bdf0      	pop	{r4, r5, r6, r7, pc}

10045f18 <hci_le_direct_advertising_report_event>:
 * Values:
 - 0x01
 * @param Direct_Advertising_Report See @ref Direct_Advertising_Report_t
 * @retval None
 */
void hci_le_direct_advertising_report_event(uint8_t Num_Reports, Direct_Advertising_Report_t Direct_Advertising_Report[]) {
10045f18:	b5f0      	push	{r4, r5, r6, r7, lr}
10045f1a:	b0c5      	sub	sp, #276	; 0x114
	uint8_t buffer_out[258];
	int output_size = 0;
	/* Output params */
	hci_le_direct_advertising_report_event_rp0 *rp0 = (hci_le_direct_advertising_report_event_rp0 *) (buffer_out + 4);
	rp0->Num_Reports = Num_Reports;
10045f1c:	466b      	mov	r3, sp
10045f1e:	2509      	movs	r5, #9
	{
		int i;
		for (i = 0; i < Num_Reports; i++) {
10045f20:	2700      	movs	r7, #0
10045f22:	000c      	movs	r4, r1
void hci_le_direct_advertising_report_event(uint8_t Num_Reports, Direct_Advertising_Report_t Direct_Advertising_Report[]) {
10045f24:	9001      	str	r0, [sp, #4]
	rp0->Num_Reports = Num_Reports;
10045f26:	791b      	ldrb	r3, [r3, #4]
10045f28:	ae03      	add	r6, sp, #12
10045f2a:	7133      	strb	r3, [r6, #4]
10045f2c:	ab02      	add	r3, sp, #8
10045f2e:	18ed      	adds	r5, r5, r3
	int output_size = 0;
10045f30:	9700      	str	r7, [sp, #0]
		for (i = 0; i < Num_Reports; i++) {
10045f32:	9b01      	ldr	r3, [sp, #4]
10045f34:	429f      	cmp	r7, r3
10045f36:	db10      	blt.n	10045f5a <hci_le_direct_advertising_report_event+0x42>
			output_size += 6;
			rp0->Direct_Advertising_Report[i].RSSI = Direct_Advertising_Report[i].RSSI;
			output_size += sizeof(uint8_t);
		}
	}
	buffer_out[0] = 0x04;
10045f38:	2304      	movs	r3, #4
	buffer_out[1] = 0x3E;
	buffer_out[2] = 1 + output_size + 1;
10045f3a:	9900      	ldr	r1, [sp, #0]
	buffer_out[0] = 0x04;
10045f3c:	7033      	strb	r3, [r6, #0]
	buffer_out[2] = 1 + output_size + 1;
10045f3e:	3102      	adds	r1, #2
	buffer_out[1] = 0x3E;
10045f40:	333a      	adds	r3, #58	; 0x3a
	buffer_out[2] = 1 + output_size + 1;
10045f42:	b2c9      	uxtb	r1, r1
	buffer_out[1] = 0x3E;
10045f44:	7073      	strb	r3, [r6, #1]
	buffer_out[2] = 1 + output_size + 1;
10045f46:	70b1      	strb	r1, [r6, #2]
	buffer_out[3] = 0x0b;
10045f48:	3b33      	subs	r3, #51	; 0x33
	send_event(buffer_out, buffer_out[2] + 3, 53);
10045f4a:	3103      	adds	r1, #3
10045f4c:	2235      	movs	r2, #53	; 0x35
10045f4e:	0030      	movs	r0, r6
	buffer_out[3] = 0x0b;
10045f50:	70f3      	strb	r3, [r6, #3]
	send_event(buffer_out, buffer_out[2] + 3, 53);
10045f52:	f000 fbdb 	bl	1004670c <send_event>
}
10045f56:	b045      	add	sp, #276	; 0x114
10045f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
			rp0->Direct_Advertising_Report[i].Event_Type = Direct_Advertising_Report[i].Event_Type;
10045f5a:	7823      	ldrb	r3, [r4, #0]
			Osal_MemCpy((void *) &rp0->Direct_Advertising_Report[i].Address, (const void *) Direct_Advertising_Report[i].Address, 6);
10045f5c:	1ca1      	adds	r1, r4, #2
			rp0->Direct_Advertising_Report[i].Event_Type = Direct_Advertising_Report[i].Event_Type;
10045f5e:	702b      	strb	r3, [r5, #0]
			rp0->Direct_Advertising_Report[i].Address_Type = Direct_Advertising_Report[i].Address_Type;
10045f60:	7863      	ldrb	r3, [r4, #1]
			Osal_MemCpy((void *) &rp0->Direct_Advertising_Report[i].Address, (const void *) Direct_Advertising_Report[i].Address, 6);
10045f62:	1ca8      	adds	r0, r5, #2
			rp0->Direct_Advertising_Report[i].Address_Type = Direct_Advertising_Report[i].Address_Type;
10045f64:	706b      	strb	r3, [r5, #1]
			Osal_MemCpy((void *) &rp0->Direct_Advertising_Report[i].Address, (const void *) Direct_Advertising_Report[i].Address, 6);
10045f66:	2206      	movs	r2, #6
10045f68:	f7fa fc0b 	bl	10040782 <Osal_MemCpy>
			Osal_MemCpy((void *) &rp0->Direct_Advertising_Report[i].Direct_Address, (const void *) Direct_Advertising_Report[i].Direct_Address, 6);
10045f6c:	0021      	movs	r1, r4
10045f6e:	0028      	movs	r0, r5
			rp0->Direct_Advertising_Report[i].Direct_Address_Type = Direct_Advertising_Report[i].Direct_Address_Type;
10045f70:	7a23      	ldrb	r3, [r4, #8]
			Osal_MemCpy((void *) &rp0->Direct_Advertising_Report[i].Direct_Address, (const void *) Direct_Advertising_Report[i].Direct_Address, 6);
10045f72:	3109      	adds	r1, #9
			rp0->Direct_Advertising_Report[i].Direct_Address_Type = Direct_Advertising_Report[i].Direct_Address_Type;
10045f74:	722b      	strb	r3, [r5, #8]
			Osal_MemCpy((void *) &rp0->Direct_Advertising_Report[i].Direct_Address, (const void *) Direct_Advertising_Report[i].Direct_Address, 6);
10045f76:	3009      	adds	r0, #9
10045f78:	2206      	movs	r2, #6
10045f7a:	f7fa fc02 	bl	10040782 <Osal_MemCpy>
			rp0->Direct_Advertising_Report[i].RSSI = Direct_Advertising_Report[i].RSSI;
10045f7e:	7be3      	ldrb	r3, [r4, #15]
		for (i = 0; i < Num_Reports; i++) {
10045f80:	3701      	adds	r7, #1
			rp0->Direct_Advertising_Report[i].RSSI = Direct_Advertising_Report[i].RSSI;
10045f82:	73eb      	strb	r3, [r5, #15]
			output_size += sizeof(uint8_t);
10045f84:	9b00      	ldr	r3, [sp, #0]
10045f86:	3410      	adds	r4, #16
10045f88:	3310      	adds	r3, #16
10045f8a:	9300      	str	r3, [sp, #0]
10045f8c:	3510      	adds	r5, #16
10045f8e:	e7d0      	b.n	10045f32 <hci_le_direct_advertising_report_event+0x1a>

10045f90 <aci_hal_updater_start>:
                                          ((uint16_t) (CONTROLLER_MASTER_ENABLED * CONTROLLER_MASTER_BIT))  | ((uint16_t)(CONTROLLER_DATA_LENGTH_EXTENSION_ENABLED * CONTROLLER_DATA_LENGTH_EXTENSION_BIT)) | \
                                          ((uint16_t) (LINK_LAYER_ONLY_ENABLED   * LINK_LAYER_ONLY_BIT)))

tBleStatus aci_hal_updater_start(void) {
	// For ACI_HAL_UPDATER_START, set flag to issue a updater start
	__blueflag_RAM = BLUE_FLAG_RAM_RESET;
10045f90:	4b03      	ldr	r3, [pc, #12]	; (10045fa0 <aci_hal_updater_start+0x10>)
10045f92:	4a04      	ldr	r2, [pc, #16]	; (10045fa4 <aci_hal_updater_start+0x14>)
	reset_pending = 1;
	return BLE_STATUS_SUCCESS;
}
10045f94:	2000      	movs	r0, #0
	__blueflag_RAM = BLUE_FLAG_RAM_RESET;
10045f96:	601a      	str	r2, [r3, #0]
	reset_pending = 1;
10045f98:	2201      	movs	r2, #1
10045f9a:	4b03      	ldr	r3, [pc, #12]	; (10045fa8 <aci_hal_updater_start+0x18>)
10045f9c:	701a      	strb	r2, [r3, #0]
}
10045f9e:	4770      	bx	lr
10045fa0:	20000030 	.word	0x20000030
10045fa4:	01010101 	.word	0x01010101
10045fa8:	20000464 	.word	0x20000464

10045fac <aci_hal_get_firmware_details>:

tBleStatus aci_hal_get_firmware_details(uint8_t *DTM_version_major, uint8_t *DTM_version_minor, uint8_t *DTM_version_patch, uint8_t *DTM_variant, uint16_t *DTM_Build_Number, uint8_t *BTLE_Stack_version_major, uint8_t *BTLE_Stack_version_minor, uint8_t *BTLE_Stack_version_patch, uint8_t *BTLE_Stack_development, uint16_t *BTLE_Stack_variant,
		uint16_t *BTLE_Stack_Build_Number) {
10045fac:	b5f0      	push	{r4, r5, r6, r7, lr}
10045fae:	b089      	sub	sp, #36	; 0x24
10045fb0:	9003      	str	r0, [sp, #12]

	aci_hal_get_fw_build_number(BTLE_Stack_Build_Number);
10045fb2:	9814      	ldr	r0, [sp, #80]	; 0x50
		uint16_t *BTLE_Stack_Build_Number) {
10045fb4:	001f      	movs	r7, r3
10045fb6:	9104      	str	r1, [sp, #16]
10045fb8:	9205      	str	r2, [sp, #20]
	uint8_t HCI_Version = 0;
	uint16_t HCI_Revision = 0;
10045fba:	260a      	movs	r6, #10
	aci_hal_get_fw_build_number(BTLE_Stack_Build_Number);
10045fbc:	f001 f8e8 	bl	10047190 <aci_hal_get_fw_build_number>
	uint8_t LMP_PAL_Version = 0;
	uint16_t Manufacturer_Name = 0;
	uint16_t LMP_PAL_Subversion = 0;
10045fc0:	250e      	movs	r5, #14
	uint8_t LMP_PAL_Version = 0;
10045fc2:	2209      	movs	r2, #9
	uint8_t HCI_Version = 0;
10045fc4:	2400      	movs	r4, #0
	uint16_t HCI_Revision = 0;
10045fc6:	ab04      	add	r3, sp, #16
	uint16_t LMP_PAL_Subversion = 0;
10045fc8:	a904      	add	r1, sp, #16
	uint16_t HCI_Revision = 0;
10045fca:	18f6      	adds	r6, r6, r3
	uint16_t LMP_PAL_Subversion = 0;
10045fcc:	186d      	adds	r5, r5, r1
	uint8_t LMP_PAL_Version = 0;
10045fce:	18d2      	adds	r2, r2, r3
	uint8_t HCI_Version = 0;
10045fd0:	a806      	add	r0, sp, #24
	uint16_t Manufacturer_Name = 0;
10045fd2:	ab07      	add	r3, sp, #28
	uint8_t LMP_PAL_Version = 0;
10045fd4:	7014      	strb	r4, [r2, #0]
	uint16_t Manufacturer_Name = 0;
10045fd6:	801c      	strh	r4, [r3, #0]
	uint8_t HCI_Version = 0;
10045fd8:	7004      	strb	r4, [r0, #0]
	uint16_t HCI_Revision = 0;
10045fda:	8034      	strh	r4, [r6, #0]
	uint16_t LMP_PAL_Subversion = 0;
10045fdc:	802c      	strh	r4, [r5, #0]

	hci_read_local_version_information(&HCI_Version, &HCI_Revision, &LMP_PAL_Version, &Manufacturer_Name, &LMP_PAL_Subversion);
10045fde:	0031      	movs	r1, r6
10045fe0:	9500      	str	r5, [sp, #0]
10045fe2:	f007 fa19 	bl	1004d418 <hci_read_local_version_information>

	*DTM_version_major = DTM_FW_VERSION_MAJOR;
10045fe6:	2303      	movs	r3, #3
10045fe8:	9a03      	ldr	r2, [sp, #12]
	*DTM_version_minor = DTM_FW_VERSION_MINOR;
	*DTM_version_patch = DTM_FW_VERSION_PATCH;
	*DTM_variant = DTM_VARIANT;
	*DTM_Build_Number = 0;
	*BTLE_Stack_version_major = HCI_Revision & 0x0F;
10045fea:	990f      	ldr	r1, [sp, #60]	; 0x3c
	*DTM_version_major = DTM_FW_VERSION_MAJOR;
10045fec:	7013      	strb	r3, [r2, #0]
	*DTM_version_minor = DTM_FW_VERSION_MINOR;
10045fee:	9a04      	ldr	r2, [sp, #16]
10045ff0:	3b02      	subs	r3, #2
10045ff2:	7013      	strb	r3, [r2, #0]
	*DTM_version_patch = DTM_FW_VERSION_PATCH;
10045ff4:	9a05      	ldr	r2, [sp, #20]
	*BTLE_Stack_version_minor = (LMP_PAL_Subversion >> 4) & 0x0F;
10045ff6:	9810      	ldr	r0, [sp, #64]	; 0x40
	*DTM_version_patch = DTM_FW_VERSION_PATCH;
10045ff8:	7014      	strb	r4, [r2, #0]
	*DTM_variant = DTM_VARIANT;
10045ffa:	703b      	strb	r3, [r7, #0]
	*DTM_Build_Number = 0;
10045ffc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	*BTLE_Stack_version_major = HCI_Revision & 0x0F;
10045ffe:	8832      	ldrh	r2, [r6, #0]
	*DTM_Build_Number = 0;
10046000:	801c      	strh	r4, [r3, #0]
	*BTLE_Stack_version_major = HCI_Revision & 0x0F;
10046002:	230f      	movs	r3, #15
10046004:	401a      	ands	r2, r3
10046006:	700a      	strb	r2, [r1, #0]
	*BTLE_Stack_version_minor = (LMP_PAL_Subversion >> 4) & 0x0F;
10046008:	882a      	ldrh	r2, [r5, #0]
1004600a:	0911      	lsrs	r1, r2, #4
1004600c:	4019      	ands	r1, r3
1004600e:	7001      	strb	r1, [r0, #0]
	*BTLE_Stack_version_patch = LMP_PAL_Subversion & 0x0F;
10046010:	0011      	movs	r1, r2
	*BTLE_Stack_development = (LMP_PAL_Subversion >> 15) & 0x01;
10046012:	40da      	lsrs	r2, r3
	*BTLE_Stack_version_patch = LMP_PAL_Subversion & 0x0F;
10046014:	9811      	ldr	r0, [sp, #68]	; 0x44
10046016:	4019      	ands	r1, r3
10046018:	7001      	strb	r1, [r0, #0]
	 first LSB 5 bits are reserved for BLE stack modular options + Link Layer only*/
	*BTLE_Stack_variant |= BLE_STACK_CONFIGURATIONS_VARIANT;

	return (BLE_STATUS_SUCCESS);

}
1004601a:	0020      	movs	r0, r4
	*BTLE_Stack_development = (LMP_PAL_Subversion >> 15) & 0x01;
1004601c:	9912      	ldr	r1, [sp, #72]	; 0x48
1004601e:	700a      	strb	r2, [r1, #0]
	*BTLE_Stack_variant |= BLE_STACK_CONFIGURATIONS_VARIANT;
10046020:	9a13      	ldr	r2, [sp, #76]	; 0x4c
10046022:	8812      	ldrh	r2, [r2, #0]
10046024:	4313      	orrs	r3, r2
10046026:	9a13      	ldr	r2, [sp, #76]	; 0x4c
10046028:	8013      	strh	r3, [r2, #0]
}
1004602a:	b009      	add	sp, #36	; 0x24
1004602c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10046030 <aci_hal_transmitter_test_packets>:
 * @param  Length_Of_Test_Data: lenght of test data
 * @param  Packet_Payload: packet payload 
 * @param  Number_Of_Packets: number pf packets to be sent on test
 * @retval status
 */
tBleStatus aci_hal_transmitter_test_packets(uint8_t TX_Frequency, uint8_t Length_Of_Test_Data, uint8_t Packet_Payload, uint16_t Number_Of_Packets) {
10046030:	b537      	push	{r0, r1, r2, r4, r5, lr}
10046032:	001d      	movs	r5, r3

	extern volatile uint32_t irq_count;
	tBleStatus status;

	irq_count = 0;
10046034:	2300      	movs	r3, #0
10046036:	4c0b      	ldr	r4, [pc, #44]	; (10046064 <aci_hal_transmitter_test_packets+0x34>)
10046038:	6023      	str	r3, [r4, #0]

	status = hci_le_transmitter_test(TX_Frequency /* 1 */, Length_Of_Test_Data /* 1 */, Packet_Payload /* 1 */);
1004603a:	f007 f929 	bl	1004d290 <hci_le_transmitter_test>
	if (status == 0x00) {
1004603e:	2800      	cmp	r0, #0
10046040:	d106      	bne.n	10046050 <aci_hal_transmitter_test_packets+0x20>

#ifdef WATCHDOG
		uint16_t irq_count_last = 0;
#endif

		while (irq_count < Number_Of_Packets) {
10046042:	6823      	ldr	r3, [r4, #0]
10046044:	429d      	cmp	r5, r3
10046046:	d804      	bhi.n	10046052 <aci_hal_transmitter_test_packets+0x22>
				irq_count_last = irq_count;
			}
#endif

		}
		status = hci_le_test_end(&LE_End_Number_Of_Packets);
10046048:	466b      	mov	r3, sp
1004604a:	1d98      	adds	r0, r3, #6
1004604c:	f007 f90e 	bl	1004d26c <hci_le_test_end>

	}

	return (status);
}
10046050:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
			if (irq_count_last != irq_count) {
10046052:	6823      	ldr	r3, [r4, #0]
10046054:	4298      	cmp	r0, r3
10046056:	d0f4      	beq.n	10046042 <aci_hal_transmitter_test_packets+0x12>
				WDG_SetReload(RELOAD_TIME(WATCHDOG_TIME));
10046058:	4803      	ldr	r0, [pc, #12]	; (10046068 <aci_hal_transmitter_test_packets+0x38>)
1004605a:	f7fb fb73 	bl	10041744 <WDG_SetReload>
				irq_count_last = irq_count;
1004605e:	6820      	ldr	r0, [r4, #0]
10046060:	b280      	uxth	r0, r0
10046062:	e7ee      	b.n	10046042 <aci_hal_transmitter_test_packets+0x12>
10046064:	20000344 	.word	0x20000344
10046068:	00007ffd 	.word	0x00007ffd

1004606c <main>:
void aci_blue_initialized_event(uint8_t Reason_Code);

/* Add aci_blue_crash_info_event() prototype */
void aci_blue_crash_info_event(uint8_t Crash_Type, uint32_t SP, uint32_t R0, uint32_t R1, uint32_t R2, uint32_t R3, uint32_t R12, uint32_t LR, uint32_t PC, uint32_t xPSR, uint8_t Debug_Data_Length, uint8_t Debug_Data[]);

int main(void) {
1004606c:	b510      	push	{r4, lr}
1004606e:	b094      	sub	sp, #80	; 0x50
	crash_info_t crash_info;

	/* System Init */
	DTM_SystemInit();
10046070:	f7fc f800 	bl	10042074 <DTM_SystemInit>

	/* Stack Initialization */
	DTM_StackInit();
10046074:	f7fc f8ee 	bl	10042254 <DTM_StackInit>

	/* Transport Layer Init */
	transport_layer_init();
10046078:	f000 fa22 	bl	100464c0 <transport_layer_init>

	/* Get crash info */
	HAL_GetCrashInfo(&crash_info);
1004607c:	a80a      	add	r0, sp, #40	; 0x28
1004607e:	f7fa fb29 	bl	100406d4 <HAL_GetCrashInfo>
	uint16_t xResetReason;

	uint8_t reset_reason = 0x01;

	/* EVT_BLUE_INITIALIZED */
	xResetReason = SysCtrl_GetWakeupResetReason();
10046082:	f7fb fa09 	bl	10041498 <SysCtrl_GetWakeupResetReason>
	if (xResetReason == RESET_WDG) {
		reset_reason = RESET_REASON_WDG;
10046086:	2305      	movs	r3, #5
	if (xResetReason == RESET_WDG) {
10046088:	2802      	cmp	r0, #2
1004608a:	d006      	beq.n	1004609a <main+0x2e>
	} else if (xResetReason == RESET_LOCKUP) {
		reset_reason = RESET_REASON_LOCKUP;
1004608c:	3301      	adds	r3, #1
	} else if (xResetReason == RESET_LOCKUP) {
1004608e:	2804      	cmp	r0, #4
10046090:	d003      	beq.n	1004609a <main+0x2e>
	uint8_t reset_reason = 0x01;
10046092:	3b05      	subs	r3, #5
	} else if (xResetReason == RESET_BLE_BOR) {
10046094:	2808      	cmp	r0, #8
10046096:	d100      	bne.n	1004609a <main+0x2e>
		reset_reason = RESET_REASON_BOR;
10046098:	3306      	adds	r3, #6
	}
	if ((crash_info.signature & 0xFFFF0000) == CRASH_SIGNATURE_BASE) {
1004609a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004609c:	4c16      	ldr	r4, [pc, #88]	; (100460f8 <main+0x8c>)
1004609e:	0c12      	lsrs	r2, r2, #16
100460a0:	0412      	lsls	r2, r2, #16
100460a2:	42a2      	cmp	r2, r4
100460a4:	d100      	bne.n	100460a8 <main+0x3c>
		reset_reason = RESET_REASON_CRASH;
100460a6:	2308      	movs	r3, #8
	}

	aci_blue_initialized_event(reset_reason);
100460a8:	0018      	movs	r0, r3
100460aa:	f7ff f829 	bl	10045100 <aci_blue_initialized_event>

#endif

	if ((crash_info.signature & 0xFFFF0000) == CRASH_SIGNATURE_BASE) {
100460ae:	980a      	ldr	r0, [sp, #40]	; 0x28
100460b0:	0c03      	lsrs	r3, r0, #16
100460b2:	041b      	lsls	r3, r3, #16
100460b4:	42a3      	cmp	r3, r4
100460b6:	d115      	bne.n	100460e4 <main+0x78>
		aci_blue_crash_info_event(crash_info.signature & 0xFF, crash_info.SP, crash_info.R0, crash_info.R1, crash_info.R2, crash_info.R3, crash_info.R12, crash_info.LR, crash_info.PC, crash_info.xPSR, 0,
100460b8:	2300      	movs	r3, #0
100460ba:	9307      	str	r3, [sp, #28]
100460bc:	9306      	str	r3, [sp, #24]
100460be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
100460c0:	b2c0      	uxtb	r0, r0
100460c2:	9305      	str	r3, [sp, #20]
100460c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
100460c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
100460c8:	9304      	str	r3, [sp, #16]
100460ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
100460cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
100460ce:	9303      	str	r3, [sp, #12]
100460d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
100460d2:	9302      	str	r3, [sp, #8]
100460d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100460d6:	9301      	str	r3, [sp, #4]
100460d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
100460da:	9309      	str	r3, [sp, #36]	; 0x24
100460dc:	9300      	str	r3, [sp, #0]
100460de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100460e0:	f7ff f823 	bl	1004512a <aci_blue_crash_info_event>
		NULL);
	}

	while (1) {
		/* BlueNRG-1 stack tick */
		BTLE_StackTick();
100460e4:	f001 f936 	bl	10047354 <BTLE_StackTick>
		transport_layer_tick();
100460e8:	f000 fa82 	bl	100465f0 <transport_layer_tick>
		BlueNRG_Sleep(SLEEPMODE_NOTIMER, IO_WAKEUP_PIN, 0); // 4: IO11 0: low level
100460ec:	2200      	movs	r2, #0
100460ee:	2003      	movs	r0, #3
100460f0:	0011      	movs	r1, r2
100460f2:	f7fa fb55 	bl	100407a0 <BlueNRG_Sleep>
100460f6:	e7f5      	b.n	100460e4 <main+0x78>
100460f8:	bcec0000 	.word	0xbcec0000

100460fc <parse_cmd>:
 * 2         cmd length (length of arguments)
 * variable  payload
 */
/* Actually only for UART INTERFACE */

uint16_t parse_cmd(uint8_t *hci_buffer, uint16_t hci_pckt_len, uint8_t *buffer_out) {
100460fc:	b510      	push	{r4, lr}
	uint16_t len = 0;
	buffer_out[0] = HCI_VENDOR_PKT;
100460fe:	23ff      	movs	r3, #255	; 0xff
	buffer_out[RESP_VENDOR_CODE_OFFSET] = RESPONSE;
10046100:	2401      	movs	r4, #1
	buffer_out[0] = HCI_VENDOR_PKT;
10046102:	7013      	strb	r3, [r2, #0]
	buffer_out[RESP_VENDOR_CODE_OFFSET] = RESPONSE;
10046104:	7054      	strb	r4, [r2, #1]
	buffer_out[RESP_CMDCODE_OFFSET] = hci_buffer[HCI_VENDOR_CMDCODE_OFFSET];
10046106:	7843      	ldrb	r3, [r0, #1]
10046108:	7113      	strb	r3, [r2, #4]
	buffer_out[RESP_STATUS_OFFSET] = 0;
1004610a:	2300      	movs	r3, #0
1004610c:	7153      	strb	r3, [r2, #5]

	switch (hci_buffer[HCI_VENDOR_CMDCODE_OFFSET]) {
1004610e:	7841      	ldrb	r1, [r0, #1]
10046110:	2904      	cmp	r1, #4
10046112:	d00d      	beq.n	10046130 <parse_cmd+0x34>
10046114:	2905      	cmp	r1, #5
10046116:	d013      	beq.n	10046140 <parse_cmd+0x44>
10046118:	42a1      	cmp	r1, r4
1004611a:	d11c      	bne.n	10046156 <parse_cmd+0x5a>
	case READ_VERSION:
		buffer_out[RESP_PARAM_OFFSET] = USB2SERIAL_FW_VERSION_MAJOR;
		buffer_out[RESP_PARAM_OFFSET + 1] = USB2SERIAL_FW_VERSION_MINOR;
		len = 2;
1004611c:	2002      	movs	r0, #2
		buffer_out[RESP_PARAM_OFFSET + 1] = USB2SERIAL_FW_VERSION_MINOR;
1004611e:	3306      	adds	r3, #6
		buffer_out[RESP_PARAM_OFFSET] = USB2SERIAL_FW_VERSION_MAJOR;
10046120:	7191      	strb	r1, [r2, #6]
		buffer_out[RESP_PARAM_OFFSET + 1] = USB2SERIAL_FW_VERSION_MINOR;
10046122:	71d3      	strb	r3, [r2, #7]
	default:
		buffer_out[RESP_VENDOR_CODE_OFFSET] = ERROR;
		buffer_out[RESP_STATUS_OFFSET] = UNKNOWN_COMMAND;
	}

	len += 2; // Status and Command code
10046124:	1c83      	adds	r3, r0, #2
	PACK_2_BYTE_PARAMETER(buffer_out+RESP_LEN_OFFSET_LSB, len);
10046126:	7093      	strb	r3, [r2, #2]
10046128:	2300      	movs	r3, #0
	len += RESP_CMDCODE_OFFSET;

	return len;
1004612a:	3006      	adds	r0, #6
	PACK_2_BYTE_PARAMETER(buffer_out+RESP_LEN_OFFSET_LSB, len);
1004612c:	70d3      	strb	r3, [r2, #3]
}
1004612e:	bd10      	pop	{r4, pc}
10046130:	f3bf 8f4f 	dsb	sy
10046134:	4a0a      	ldr	r2, [pc, #40]	; (10046160 <parse_cmd+0x64>)
10046136:	4b0b      	ldr	r3, [pc, #44]	; (10046164 <parse_cmd+0x68>)
10046138:	60da      	str	r2, [r3, #12]
1004613a:	f3bf 8f4f 	dsb	sy
1004613e:	e7fe      	b.n	1004613e <parse_cmd+0x42>
		__blueflag_RAM = BLUE_FLAG_RAM_RESET;
10046140:	4a09      	ldr	r2, [pc, #36]	; (10046168 <parse_cmd+0x6c>)
10046142:	4b0a      	ldr	r3, [pc, #40]	; (1004616c <parse_cmd+0x70>)
10046144:	601a      	str	r2, [r3, #0]
10046146:	f3bf 8f4f 	dsb	sy
1004614a:	4a05      	ldr	r2, [pc, #20]	; (10046160 <parse_cmd+0x64>)
1004614c:	4b05      	ldr	r3, [pc, #20]	; (10046164 <parse_cmd+0x68>)
1004614e:	60da      	str	r2, [r3, #12]
10046150:	f3bf 8f4f 	dsb	sy
10046154:	e7fe      	b.n	10046154 <parse_cmd+0x58>
		buffer_out[RESP_VENDOR_CODE_OFFSET] = ERROR;
10046156:	7053      	strb	r3, [r2, #1]
		buffer_out[RESP_STATUS_OFFSET] = UNKNOWN_COMMAND;
10046158:	7154      	strb	r4, [r2, #5]
	uint16_t len = 0;
1004615a:	0018      	movs	r0, r3
1004615c:	e7e2      	b.n	10046124 <parse_cmd+0x28>
1004615e:	46c0      	nop			; (mov r8, r8)
10046160:	05fa0004 	.word	0x05fa0004
10046164:	e000ed00 	.word	0xe000ed00
10046168:	01010101 	.word	0x01010101
1004616c:	20000030 	.word	0x20000030

10046170 <packet_received>:

	}
	return state;
}

void packet_received(void) {
10046170:	b510      	push	{r4, lr}
	switch (hci_buffer[HCI_TYPE_OFFSET]) {
10046172:	480e      	ldr	r0, [pc, #56]	; (100461ac <packet_received+0x3c>)
10046174:	7803      	ldrb	r3, [r0, #0]
10046176:	2b01      	cmp	r3, #1
10046178:	d010      	beq.n	1004619c <packet_received+0x2c>
1004617a:	2bff      	cmp	r3, #255	; 0xff
1004617c:	d10d      	bne.n	1004619a <packet_received+0x2a>
	case HCI_VENDOR_PKT: /* In SPI mode never gets HCI_VENDOR_PKT */
		buffer_out_len = parse_cmd(hci_buffer, hci_pckt_len, buffer_out);
1004617e:	4b0c      	ldr	r3, [pc, #48]	; (100461b0 <packet_received+0x40>)
10046180:	4c0c      	ldr	r4, [pc, #48]	; (100461b4 <packet_received+0x44>)
10046182:	8819      	ldrh	r1, [r3, #0]
10046184:	0022      	movs	r2, r4
10046186:	b289      	uxth	r1, r1
10046188:	f7ff ffb8 	bl	100460fc <parse_cmd>
1004618c:	4b0a      	ldr	r3, [pc, #40]	; (100461b8 <packet_received+0x48>)
1004618e:	0001      	movs	r1, r0
10046190:	8018      	strh	r0, [r3, #0]
		send_event(buffer_out, buffer_out_len, 1);
10046192:	2201      	movs	r2, #1
10046194:	0020      	movs	r0, r4
10046196:	f000 fab9 	bl	1004670c <send_event>
		break;
	default:
		// Error case not allowed ???
		break;
	}
}
1004619a:	bd10      	pop	{r4, pc}
		send_command(&hci_buffer[1], hci_pckt_len - 1);
1004619c:	4b04      	ldr	r3, [pc, #16]	; (100461b0 <packet_received+0x40>)
1004619e:	3001      	adds	r0, #1
100461a0:	8819      	ldrh	r1, [r3, #0]
100461a2:	3901      	subs	r1, #1
100461a4:	b289      	uxth	r1, r1
100461a6:	f000 f9e1 	bl	1004656c <send_command>
}
100461aa:	e7f6      	b.n	1004619a <packet_received+0x2a>
100461ac:	2000034c 	.word	0x2000034c
100461b0:	20000450 	.word	0x20000450
100461b4:	200004da 	.word	0x200004da
100461b8:	20000348 	.word	0x20000348

100461bc <hci_input>:
hci_state hci_input(uint8_t *buff, uint16_t len) {
100461bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	if (state == WAITING_TYPE)
100461be:	4c3a      	ldr	r4, [pc, #232]	; (100462a8 <hci_input+0xec>)
hci_state hci_input(uint8_t *buff, uint16_t len) {
100461c0:	9000      	str	r0, [sp, #0]
	if (state == WAITING_TYPE)
100461c2:	7823      	ldrb	r3, [r4, #0]
hci_state hci_input(uint8_t *buff, uint16_t len) {
100461c4:	9101      	str	r1, [sp, #4]
100461c6:	4e39      	ldr	r6, [pc, #228]	; (100462ac <hci_input+0xf0>)
	if (state == WAITING_TYPE)
100461c8:	2b00      	cmp	r3, #0
100461ca:	d100      	bne.n	100461ce <hci_input+0x12>
		hci_pckt_len = 0;
100461cc:	8033      	strh	r3, [r6, #0]
hci_state hci_input(uint8_t *buff, uint16_t len) {
100461ce:	2500      	movs	r5, #0
			state = WAITING_DATA_LEN2;
100461d0:	270a      	movs	r7, #10
	while (hci_pckt_len < HCI_PACKET_SIZE && i++ < len) {
100461d2:	2181      	movs	r1, #129	; 0x81
100461d4:	8832      	ldrh	r2, [r6, #0]
100461d6:	b2eb      	uxtb	r3, r5
100461d8:	0049      	lsls	r1, r1, #1
100461da:	428a      	cmp	r2, r1
100461dc:	d802      	bhi.n	100461e4 <hci_input+0x28>
100461de:	9a01      	ldr	r2, [sp, #4]
100461e0:	4293      	cmp	r3, r2
100461e2:	d301      	bcc.n	100461e8 <hci_input+0x2c>
	return state;
100461e4:	7820      	ldrb	r0, [r4, #0]
}
100461e6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
		hci_buffer[hci_pckt_len++] = byte;
100461e8:	8832      	ldrh	r2, [r6, #0]
		byte = *buff++;
100461ea:	9b00      	ldr	r3, [sp, #0]
		hci_buffer[hci_pckt_len++] = byte;
100461ec:	b292      	uxth	r2, r2
100461ee:	1c51      	adds	r1, r2, #1
100461f0:	b289      	uxth	r1, r1
		byte = *buff++;
100461f2:	5d5b      	ldrb	r3, [r3, r5]
		hci_buffer[hci_pckt_len++] = byte;
100461f4:	8031      	strh	r1, [r6, #0]
100461f6:	492e      	ldr	r1, [pc, #184]	; (100462b0 <hci_input+0xf4>)
100461f8:	548b      	strb	r3, [r1, r2]
		if (state == WAITING_TYPE) {
100461fa:	7822      	ldrb	r2, [r4, #0]
100461fc:	2a00      	cmp	r2, #0
100461fe:	d10c      	bne.n	1004621a <hci_input+0x5e>
			if (byte == HCI_COMMAND_PKT) {
10046200:	2b01      	cmp	r3, #1
10046202:	d102      	bne.n	1004620a <hci_input+0x4e>
				state = WAITING_CMDCODE;
10046204:	7023      	strb	r3, [r4, #0]
10046206:	3501      	adds	r5, #1
10046208:	e7e3      	b.n	100461d2 <hci_input+0x16>
			} else if (byte == HCI_ACLDATA_PKT) {
1004620a:	2b02      	cmp	r3, #2
1004620c:	d101      	bne.n	10046212 <hci_input+0x56>
				state = WAITING_HANDLE;
1004620e:	3305      	adds	r3, #5
10046210:	e7f8      	b.n	10046204 <hci_input+0x48>
			} else if (byte == HCI_VENDOR_PKT) {
10046212:	2bff      	cmp	r3, #255	; 0xff
10046214:	d1f7      	bne.n	10046206 <hci_input+0x4a>
				state = WAITING_CMDCODE;
10046216:	3bfc      	subs	r3, #252	; 0xfc
10046218:	e7f4      	b.n	10046204 <hci_input+0x48>
		} else if (state == WAITING_OPCODE_1) {
1004621a:	2a01      	cmp	r2, #1
1004621c:	d101      	bne.n	10046222 <hci_input+0x66>
			state = WAITING_OPCODE_2;
1004621e:	2302      	movs	r3, #2
10046220:	e7f0      	b.n	10046204 <hci_input+0x48>
		} else if (state == WAITING_OPCODE_2) {
10046222:	2a02      	cmp	r2, #2
10046224:	d101      	bne.n	1004622a <hci_input+0x6e>
			state = WAITING_PARAM_LEN;
10046226:	2306      	movs	r3, #6
10046228:	e7ec      	b.n	10046204 <hci_input+0x48>
		} else if (state == WAITING_CMDCODE) {
1004622a:	2a03      	cmp	r2, #3
1004622c:	d101      	bne.n	10046232 <hci_input+0x76>
			state = WAITING_CMD_LEN1;
1004622e:	2304      	movs	r3, #4
10046230:	e7e8      	b.n	10046204 <hci_input+0x48>
		} else if (state == WAITING_CMD_LEN1) {
10046232:	2a04      	cmp	r2, #4
10046234:	d103      	bne.n	1004623e <hci_input+0x82>
			payload_len = byte;
10046236:	4a1f      	ldr	r2, [pc, #124]	; (100462b4 <hci_input+0xf8>)
10046238:	8013      	strh	r3, [r2, #0]
			state = WAITING_CMD_LEN2;
1004623a:	2305      	movs	r3, #5
1004623c:	e7e2      	b.n	10046204 <hci_input+0x48>
		} else if (state == WAITING_CMD_LEN2) {
1004623e:	2a05      	cmp	r2, #5
10046240:	d111      	bne.n	10046266 <hci_input+0xaa>
			payload_len += byte << 8;
10046242:	4a1c      	ldr	r2, [pc, #112]	; (100462b4 <hci_input+0xf8>)
10046244:	021b      	lsls	r3, r3, #8
10046246:	8811      	ldrh	r1, [r2, #0]
10046248:	185b      	adds	r3, r3, r1
1004624a:	b29b      	uxth	r3, r3
			collected_payload_len = 0;
1004624c:	2100      	movs	r1, #0
			payload_len += byte << 8;
1004624e:	8013      	strh	r3, [r2, #0]
			collected_payload_len = 0;
10046250:	4a19      	ldr	r2, [pc, #100]	; (100462b8 <hci_input+0xfc>)
10046252:	8011      	strh	r1, [r2, #0]
			if (payload_len == 0) {
10046254:	428b      	cmp	r3, r1
10046256:	d104      	bne.n	10046262 <hci_input+0xa6>
				state = WAITING_TYPE;
10046258:	2300      	movs	r3, #0
1004625a:	7023      	strb	r3, [r4, #0]
				packet_received();
1004625c:	f7ff ff88 	bl	10046170 <packet_received>
10046260:	e7d1      	b.n	10046206 <hci_input+0x4a>
				state = WAITING_PAYLOAD;
10046262:	230b      	movs	r3, #11
10046264:	e7ce      	b.n	10046204 <hci_input+0x48>
			payload_len = byte;
10046266:	b29b      	uxth	r3, r3
		} else if (state == WAITING_PARAM_LEN) {
10046268:	2a06      	cmp	r2, #6
1004626a:	d00f      	beq.n	1004628c <hci_input+0xd0>
			state = WAITING_HANDLE_FLAG;
1004626c:	2308      	movs	r3, #8
		else if (state == WAITING_HANDLE) {
1004626e:	2a07      	cmp	r2, #7
10046270:	d0c8      	beq.n	10046204 <hci_input+0x48>
			state = WAITING_DATA_LEN1;
10046272:	2309      	movs	r3, #9
		} else if (state == WAITING_HANDLE_FLAG) {
10046274:	2a08      	cmp	r2, #8
10046276:	d0c5      	beq.n	10046204 <hci_input+0x48>
		} else if (state == WAITING_DATA_LEN1) {
10046278:	2a09      	cmp	r2, #9
1004627a:	d101      	bne.n	10046280 <hci_input+0xc4>
			state = WAITING_DATA_LEN2;
1004627c:	7027      	strb	r7, [r4, #0]
1004627e:	e7c2      	b.n	10046206 <hci_input+0x4a>
		} else if (state == WAITING_DATA_LEN2) {
10046280:	2a0a      	cmp	r2, #10
10046282:	d105      	bne.n	10046290 <hci_input+0xd4>
			payload_len = acl_hdr->dlen;
10046284:	790b      	ldrb	r3, [r1, #4]
10046286:	78ca      	ldrb	r2, [r1, #3]
10046288:	021b      	lsls	r3, r3, #8
1004628a:	4313      	orrs	r3, r2
1004628c:	4a09      	ldr	r2, [pc, #36]	; (100462b4 <hci_input+0xf8>)
1004628e:	e7dd      	b.n	1004624c <hci_input+0x90>
		else if (state == WAITING_PAYLOAD) {
10046290:	2a0b      	cmp	r2, #11
10046292:	d1b8      	bne.n	10046206 <hci_input+0x4a>
			collected_payload_len += 1;
10046294:	4a08      	ldr	r2, [pc, #32]	; (100462b8 <hci_input+0xfc>)
10046296:	8813      	ldrh	r3, [r2, #0]
10046298:	3301      	adds	r3, #1
1004629a:	b29b      	uxth	r3, r3
1004629c:	8013      	strh	r3, [r2, #0]
			if (collected_payload_len >= payload_len) {
1004629e:	4a05      	ldr	r2, [pc, #20]	; (100462b4 <hci_input+0xf8>)
100462a0:	8812      	ldrh	r2, [r2, #0]
100462a2:	429a      	cmp	r2, r3
100462a4:	d8af      	bhi.n	10046206 <hci_input+0x4a>
100462a6:	e7d7      	b.n	10046258 <hci_input+0x9c>
100462a8:	20000454 	.word	0x20000454
100462ac:	20000450 	.word	0x20000450
100462b0:	2000034c 	.word	0x2000034c
100462b4:	20000452 	.word	0x20000452
100462b8:	2000034a 	.word	0x2000034a

100462bc <WDG_Configuration>:
/**
 * @brief  WDG configuration routine
 * @param  None
 * @retval None
 */
void WDG_Configuration(void) {
100462bc:	b510      	push	{r4, lr}
#ifdef WATCHDOG  
	/* Enable watchdog clocks  */
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_WDG, ENABLE);
100462be:	2101      	movs	r1, #1
100462c0:	2080      	movs	r0, #128	; 0x80
100462c2:	f7fb f8dd 	bl	10041480 <SysCtrl_PeripheralClockCmd>

	/* Set watchdog reload period at 1 second */
	WDG_SetReload(RELOAD_TIME(WATCHDOG_TIME));
100462c6:	4803      	ldr	r0, [pc, #12]	; (100462d4 <WDG_Configuration+0x18>)
100462c8:	f7fb fa3c 	bl	10041744 <WDG_SetReload>

	/* Watchdog enable */
	WDG_Enable();
100462cc:	f7fb fa40 	bl	10041750 <WDG_Enable>
#endif
}
100462d0:	bd10      	pop	{r4, pc}
100462d2:	46c0      	nop			; (mov r8, r8)
100462d4:	00007ffd 	.word	0x00007ffd

100462d8 <NVIC_EnableRadioIrq>:
}
void NVIC_EnableRadioIrq(void) {
	NVIC_InitType NVIC_InitStructure;

	/* Enable the Blue Controller Interrupt */
	NVIC_InitStructure.NVIC_IRQChannel = BLUE_CTRL_IRQn;
100462d8:	2306      	movs	r3, #6
void NVIC_EnableRadioIrq(void) {
100462da:	b507      	push	{r0, r1, r2, lr}
	NVIC_InitStructure.NVIC_IRQChannel = BLUE_CTRL_IRQn;
100462dc:	a801      	add	r0, sp, #4
100462de:	7003      	strb	r3, [r0, #0]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
100462e0:	2300      	movs	r3, #0
100462e2:	7043      	strb	r3, [r0, #1]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
100462e4:	3301      	adds	r3, #1
100462e6:	7083      	strb	r3, [r0, #2]
	NVIC_Init(&NVIC_InitStructure);
100462e8:	f7fb fa3e 	bl	10041768 <NVIC_Init>
}
100462ec:	bd07      	pop	{r0, r1, r2, pc}

100462ee <NVIC_Configuration>:
	NVIC_InitStructure.NVIC_IRQChannel = UART_IRQn;
100462ee:	2304      	movs	r3, #4
void NVIC_Configuration(void) {
100462f0:	b507      	push	{r0, r1, r2, lr}
	NVIC_InitStructure.NVIC_IRQChannel = UART_IRQn;
100462f2:	a801      	add	r0, sp, #4
100462f4:	7003      	strb	r3, [r0, #0]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = MED_PRIORITY;
100462f6:	3b02      	subs	r3, #2
100462f8:	7043      	strb	r3, [r0, #1]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
100462fa:	3b01      	subs	r3, #1
100462fc:	7083      	strb	r3, [r0, #2]
	NVIC_Init(&NVIC_InitStructure);
100462fe:	f7fb fa33 	bl	10041768 <NVIC_Init>
	NVIC_EnableRadioIrq();
10046302:	f7ff ffe9 	bl	100462d8 <NVIC_EnableRadioIrq>
}
10046306:	bd07      	pop	{r0, r1, r2, pc}

10046308 <GPIO_Configuration>:
 * @brief  GPIO Configuration.
 *	  Configure outputs GPIO pins.
 * @param  None
 * @retval None
 */
void GPIO_Configuration(void) {
10046308:	b507      	push	{r0, r1, r2, lr}
	GPIO_InitType GPIO_InitStructure;

	/* GPIO Periph clock enable */
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_GPIO, ENABLE);
1004630a:	2101      	movs	r1, #1
1004630c:	0008      	movs	r0, r1
1004630e:	f7fb f8b7 	bl	10041480 <SysCtrl_PeripheralClockCmd>

	/* Init Structure */
	GPIO_StructInit(&GPIO_InitStructure);
10046312:	4668      	mov	r0, sp
10046314:	f7fa fffd 	bl	10041312 <GPIO_StructInit>

#ifdef UART_INTERFACE 
	/* Configure GPIO_Pin_8 and GPIO_Pin_11 as UART_TXD and UART_RXD */
	GPIO_InitStructure.GPIO_Pin = UART_TX_PIN | UART_RX_PIN;
10046318:	2390      	movs	r3, #144	; 0x90
1004631a:	011b      	lsls	r3, r3, #4
	GPIO_InitStructure.GPIO_Mode = Serial1_Mode;
1004631c:	466a      	mov	r2, sp
	GPIO_InitStructure.GPIO_Pin = UART_TX_PIN | UART_RX_PIN;
1004631e:	9300      	str	r3, [sp, #0]
	GPIO_InitStructure.GPIO_Mode = Serial1_Mode;
10046320:	2301      	movs	r3, #1
10046322:	7113      	strb	r3, [r2, #4]
	GPIO_InitStructure.GPIO_Pull = DISABLE;
10046324:	2300      	movs	r3, #0
	GPIO_InitStructure.GPIO_HighPwr = DISABLE;

	GPIO_Init(&GPIO_InitStructure);
10046326:	4668      	mov	r0, sp
	GPIO_InitStructure.GPIO_Pull = DISABLE;
10046328:	7193      	strb	r3, [r2, #6]
	GPIO_InitStructure.GPIO_HighPwr = DISABLE;
1004632a:	7153      	strb	r3, [r2, #5]
	GPIO_Init(&GPIO_InitStructure);
1004632c:	f7fa ff82 	bl	10041234 <GPIO_Init>
	GPIO_InitStructure.GPIO_Pull = DISABLE;
	GPIO_InitStructure.GPIO_HighPwr = DISABLE;
	GPIO_Init(&GPIO_InitStructure);
#endif

}
10046330:	bd07      	pop	{r0, r1, r2, pc}
	...

10046334 <UART_Configuration>:
 * @brief  UART Configuration.
 *	  Configure UART peripheral.
 * @param  None
 * @retval None
 */
void UART_Configuration(void) {
10046334:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	UART_InitType UART_InitStructure;

	/** Enable UART clock */
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_UART, ENABLE);
10046336:	2101      	movs	r1, #1

	/** Init Structure */
	UART_StructInit(&UART_InitStructure);
10046338:	ac01      	add	r4, sp, #4
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_UART, ENABLE);
1004633a:	2008      	movs	r0, #8
1004633c:	f7fb f8a0 	bl	10041480 <SysCtrl_PeripheralClockCmd>
	UART_StructInit(&UART_InitStructure);
10046340:	0020      	movs	r0, r4
10046342:	f7fb f9b5 	bl	100416b0 <UART_StructInit>

	/** Configure UART */
	UART_InitStructure.UART_BaudRate = 115200;
10046346:	23e1      	movs	r3, #225	; 0xe1
10046348:	025b      	lsls	r3, r3, #9
	UART_InitStructure.UART_WordLengthTransmit = UART_WordLength_8b;
1004634a:	2203      	movs	r2, #3
	UART_InitStructure.UART_BaudRate = 115200;
1004634c:	9301      	str	r3, [sp, #4]
	UART_InitStructure.UART_WordLengthReceive = UART_WordLength_8b;
	UART_InitStructure.UART_StopBits = UART_StopBits_1;
1004634e:	2300      	movs	r3, #0
#else
	UART_InitStructure.UART_HardwareFlowControl = UART_HardwareFlowControl_None;
#endif
	UART_InitStructure.UART_Mode = UART_Mode_Rx | UART_Mode_Tx;
	UART_InitStructure.UART_FifoEnable = DISABLE;
	UART_Init(&UART_InitStructure);
10046350:	0020      	movs	r0, r4
	UART_InitStructure.UART_WordLengthTransmit = UART_WordLength_8b;
10046352:	7122      	strb	r2, [r4, #4]
	UART_InitStructure.UART_WordLengthReceive = UART_WordLength_8b;
10046354:	7162      	strb	r2, [r4, #5]
	UART_InitStructure.UART_StopBits = UART_StopBits_1;
10046356:	71a3      	strb	r3, [r4, #6]
	UART_InitStructure.UART_Parity = UART_Parity_No;
10046358:	71e3      	strb	r3, [r4, #7]
	UART_InitStructure.UART_HardwareFlowControl = UART_HardwareFlowControl_None;
1004635a:	7263      	strb	r3, [r4, #9]
	UART_InitStructure.UART_Mode = UART_Mode_Rx | UART_Mode_Tx;
1004635c:	7222      	strb	r2, [r4, #8]
	UART_InitStructure.UART_FifoEnable = DISABLE;
1004635e:	72a3      	strb	r3, [r4, #10]
	UART_Init(&UART_InitStructure);
10046360:	f7fb f8fe 	bl	10041560 <UART_Init>

	/* Enable the RX FIFO and setup the trigger points for receive FIFO interrupt to every byte */
	UART->LCRH_RX_b.FEN_RX = ENABLE;
10046364:	2210      	movs	r2, #16
10046366:	4b05      	ldr	r3, [pc, #20]	; (1004637c <UART_Configuration+0x48>)
10046368:	7f19      	ldrb	r1, [r3, #28]
1004636a:	430a      	orrs	r2, r1
	UART->IFLS_b.RXIFLSEL = 0;
1004636c:	2138      	movs	r1, #56	; 0x38
	UART->LCRH_RX_b.FEN_RX = ENABLE;
1004636e:	771a      	strb	r2, [r3, #28]
	UART->IFLS_b.RXIFLSEL = 0;
10046370:	3334      	adds	r3, #52	; 0x34
10046372:	781a      	ldrb	r2, [r3, #0]
10046374:	438a      	bics	r2, r1
10046376:	701a      	strb	r2, [r3, #0]
}
10046378:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
1004637a:	46c0      	nop			; (mov r8, r8)
1004637c:	40300000 	.word	0x40300000

10046380 <DMA_Configuration>:
 */
void DMA_Configuration(void) {
	DMA_InitType DMA_InitStructure;

	/* Configure DMA peripheral */
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_DMA, ENABLE);
10046380:	2080      	movs	r0, #128	; 0x80
void DMA_Configuration(void) {
10046382:	b510      	push	{r4, lr}
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_DMA, ENABLE);
10046384:	2101      	movs	r1, #1
void DMA_Configuration(void) {
10046386:	b08c      	sub	sp, #48	; 0x30
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_DMA, ENABLE);
10046388:	0240      	lsls	r0, r0, #9
1004638a:	f7fb f879 	bl	10041480 <SysCtrl_PeripheralClockCmd>

	/* Configure DMA SPI TX channel */
	DMA_StructInit(&DMA_InitStructure);
1004638e:	a801      	add	r0, sp, #4
10046390:	f7fa feec 	bl	1004116c <DMA_StructInit>
	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
10046394:	2310      	movs	r3, #16
10046396:	9303      	str	r3, [sp, #12]
	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
10046398:	3370      	adds	r3, #112	; 0x70
1004639a:	9306      	str	r3, [sp, #24]
	/* Enable SPI_TX/SPI_RX DMA requests */
	SPI_DMACmd(SPI_DMAReq_Tx | SPI_DMAReq_Rx, ENABLE);
#endif

#ifdef UART_INTERFACE
	DMA_InitStructure.DMA_PeripheralBaseAddr = UART_DR_ADDRESS;
1004639c:	4b10      	ldr	r3, [pc, #64]	; (100463e0 <DMA_Configuration+0x60>)
	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
	DMA_Init(DMA_CH_UART_TX, &DMA_InitStructure);
1004639e:	4c11      	ldr	r4, [pc, #68]	; (100463e4 <DMA_Configuration+0x64>)
	DMA_InitStructure.DMA_PeripheralBaseAddr = UART_DR_ADDRESS;
100463a0:	9301      	str	r3, [sp, #4]
	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
100463a2:	2380      	movs	r3, #128	; 0x80
	DMA_Init(DMA_CH_UART_TX, &DMA_InitStructure);
100463a4:	a901      	add	r1, sp, #4
	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
100463a6:	019b      	lsls	r3, r3, #6
	DMA_Init(DMA_CH_UART_TX, &DMA_InitStructure);
100463a8:	0020      	movs	r0, r4
	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
100463aa:	930a      	str	r3, [sp, #40]	; 0x28
	DMA_Init(DMA_CH_UART_TX, &DMA_InitStructure);
100463ac:	f7fa fec0 	bl	10041130 <DMA_Init>

	/* Enable DMA_CH_UART_TX Transfer Complete interrupt */
	DMA_FlagConfig(DMA_CH_UART_TX, DMA_FLAG_TC, ENABLE);
100463b0:	2201      	movs	r2, #1
100463b2:	0020      	movs	r0, r4
100463b4:	2102      	movs	r1, #2
100463b6:	f7fa fef0 	bl	1004119a <DMA_FlagConfig>

	/* DMA_CH_UART_RX Initialization */
	DMA_Cmd(DMA_CH_UART_RX, DISABLE);
100463ba:	2100      	movs	r1, #0
100463bc:	480a      	ldr	r0, [pc, #40]	; (100463e8 <DMA_Configuration+0x68>)
100463be:	f7fa fee2 	bl	10041186 <DMA_Cmd>

	/* Enable UART_DMAReq_Tx */
	UART_DMACmd(UART_DMAReq_Tx, ENABLE);
100463c2:	2101      	movs	r1, #1
100463c4:	2002      	movs	r0, #2
100463c6:	f7fb f9b1 	bl	1004172c <UART_DMACmd>

	/* Enable the UARTx Interrupt */
	NVIC_InitType NVIC_InitStructure;
	NVIC_InitStructure.NVIC_IRQChannel = DMA_IRQn;
100463ca:	466a      	mov	r2, sp
100463cc:	2317      	movs	r3, #23
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = HIGH_PRIORITY;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);
100463ce:	4668      	mov	r0, sp
	NVIC_InitStructure.NVIC_IRQChannel = DMA_IRQn;
100463d0:	7013      	strb	r3, [r2, #0]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = HIGH_PRIORITY;
100463d2:	3b16      	subs	r3, #22
100463d4:	7053      	strb	r3, [r2, #1]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
100463d6:	7093      	strb	r3, [r2, #2]
	NVIC_Init(&NVIC_InitStructure);
100463d8:	f7fb f9c6 	bl	10041768 <NVIC_Init>

#endif
}
100463dc:	b00c      	add	sp, #48	; 0x30
100463de:	bd10      	pop	{r4, pc}
100463e0:	40300000 	.word	0x40300000
100463e4:	a000001c 	.word	0xa000001c
100463e8:	a0000008 	.word	0xa0000008

100463ec <DMA_Rearm>:

uint8_t DMA_Rearm(DMA_CH_Type* DMAy_Channelx, uint32_t buffer, uint32_t size) {
	/* DMA_CH_SPI_TX reset */
	DMAy_Channelx->CCR_b.EN = RESET;
100463ec:	2301      	movs	r3, #1
uint8_t DMA_Rearm(DMA_CH_Type* DMAy_Channelx, uint32_t buffer, uint32_t size) {
100463ee:	b510      	push	{r4, lr}
	DMAy_Channelx->CCR_b.EN = RESET;
100463f0:	6804      	ldr	r4, [r0, #0]
100463f2:	439c      	bics	r4, r3
100463f4:	6004      	str	r4, [r0, #0]

	/* Rearm the DMA_CH_SPI_TX */
	DMAy_Channelx->CMAR = buffer;
100463f6:	60c1      	str	r1, [r0, #12]
	DMAy_Channelx->CNDTR = size;
100463f8:	6042      	str	r2, [r0, #4]

	/* DMA_CH_SPI_TX enable */
	DMAy_Channelx->CCR_b.EN = SET;
100463fa:	6802      	ldr	r2, [r0, #0]
100463fc:	4313      	orrs	r3, r2
100463fe:	6003      	str	r3, [r0, #0]

	return 0;
}
10046400:	2000      	movs	r0, #0
10046402:	bd10      	pop	{r4, pc}

10046404 <App_SleepMode_Check>:

/* Private function prototypes -----------------------------------------------*/
static void enqueue_event(circular_fifo_t *fifo, uint16_t len, uint8_t *evt, int8_t overflow_idx);
/* Private functions ---------------------------------------------------------*/

SleepModes App_SleepMode_Check(SleepModes sleepMode) {
10046404:	b510      	push	{r4, lr}
#ifndef SPI_INTERFACE
	if (((dma_state == DMA_IDLE) && (fifo_size(&event_fifo) > 0)) || (fifo_size(&command_fifo) > 0) || reset_pending) {
10046406:	4b0b      	ldr	r3, [pc, #44]	; (10046434 <App_SleepMode_Check+0x30>)
10046408:	781b      	ldrb	r3, [r3, #0]
1004640a:	2b00      	cmp	r3, #0
1004640c:	d006      	beq.n	1004641c <App_SleepMode_Check+0x18>
1004640e:	480a      	ldr	r0, [pc, #40]	; (10046438 <App_SleepMode_Check+0x34>)
10046410:	f7fa f880 	bl	10040514 <fifo_size>
10046414:	2800      	cmp	r0, #0
10046416:	d007      	beq.n	10046428 <App_SleepMode_Check+0x24>
		return SLEEPMODE_RUNNING;
10046418:	2000      	movs	r0, #0

	else {
		return SLEEPMODE_RUNNING;
	}
#endif
}
1004641a:	bd10      	pop	{r4, pc}
	if (((dma_state == DMA_IDLE) && (fifo_size(&event_fifo) > 0)) || (fifo_size(&command_fifo) > 0) || reset_pending) {
1004641c:	4807      	ldr	r0, [pc, #28]	; (1004643c <App_SleepMode_Check+0x38>)
1004641e:	f7fa f879 	bl	10040514 <fifo_size>
10046422:	2800      	cmp	r0, #0
10046424:	d0f3      	beq.n	1004640e <App_SleepMode_Check+0xa>
10046426:	e7f7      	b.n	10046418 <App_SleepMode_Check+0x14>
10046428:	4b05      	ldr	r3, [pc, #20]	; (10046440 <App_SleepMode_Check+0x3c>)
1004642a:	7818      	ldrb	r0, [r3, #0]
1004642c:	4243      	negs	r3, r0
1004642e:	4158      	adcs	r0, r3
		return SLEEPMODE_RUNNING;
10046430:	b2c0      	uxtb	r0, r0
10046432:	e7f2      	b.n	1004641a <App_SleepMode_Check+0x16>
10046434:	20000455 	.word	0x20000455
10046438:	20000c00 	.word	0x20000c00
1004643c:	200006ec 	.word	0x200006ec
10046440:	20000464 	.word	0x20000464

10046444 <process_command>:

/* Process Commands */
uint16_t process_command(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
10046444:	b5f0      	push	{r4, r5, r6, r7, lr}
10046446:	b085      	sub	sp, #20
10046448:	9301      	str	r3, [sp, #4]
	uint32_t i;
	uint16_t ret_val, opCode;

	Osal_MemCpy(&opCode, buffer_in, 2);
1004644a:	ab02      	add	r3, sp, #8
1004644c:	1d9e      	adds	r6, r3, #6
uint16_t process_command(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) {
1004644e:	0007      	movs	r7, r0
10046450:	000d      	movs	r5, r1
10046452:	0014      	movs	r4, r2
	Osal_MemCpy(&opCode, buffer_in, 2);
10046454:	0001      	movs	r1, r0
10046456:	2202      	movs	r2, #2
10046458:	0030      	movs	r0, r6
1004645a:	f7fa f992 	bl	10040782 <Osal_MemCpy>
	for (i = 0; i < (sizeof(hci_command_table) / sizeof(hci_command_table_type)); i++) {
1004645e:	2300      	movs	r3, #0
		if (opCode == hci_command_table[i].opcode) {
10046460:	8831      	ldrh	r1, [r6, #0]
10046462:	4814      	ldr	r0, [pc, #80]	; (100464b4 <process_command+0x70>)
10046464:	00da      	lsls	r2, r3, #3
10046466:	1812      	adds	r2, r2, r0
10046468:	8810      	ldrh	r0, [r2, #0]
1004646a:	4288      	cmp	r0, r1
1004646c:	d10f      	bne.n	1004648e <process_command+0x4a>
			ret_val = hci_command_table[i].execute(buffer_in + 2, buffer_in_length - 2, buffer_out, buffer_out_max_length);
1004646e:	3d02      	subs	r5, #2
10046470:	b2a9      	uxth	r1, r5
10046472:	9b01      	ldr	r3, [sp, #4]
10046474:	6855      	ldr	r5, [r2, #4]
10046476:	1cb8      	adds	r0, r7, #2
10046478:	0022      	movs	r2, r4
1004647a:	47a8      	blx	r5
			if (opCode == 0x0c03) {
1004647c:	4b0e      	ldr	r3, [pc, #56]	; (100464b8 <process_command+0x74>)
1004647e:	8832      	ldrh	r2, [r6, #0]
10046480:	429a      	cmp	r2, r3
10046482:	d102      	bne.n	1004648a <process_command+0x46>
				// For HCI_RESET, set flag to issue a sys reset
				reset_pending = 1;
10046484:	2201      	movs	r2, #1
10046486:	4b0d      	ldr	r3, [pc, #52]	; (100464bc <process_command+0x78>)
10046488:	701a      	strb	r2, [r3, #0]
	buffer_out[3] = 0x01;
	buffer_out[4] = 0x01;
	Osal_MemCpy(&buffer_out[5], &opCode, 2);
	return 7;

}
1004648a:	b005      	add	sp, #20
1004648c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	for (i = 0; i < (sizeof(hci_command_table) / sizeof(hci_command_table_type)); i++) {
1004648e:	3301      	adds	r3, #1
10046490:	2b9d      	cmp	r3, #157	; 0x9d
10046492:	d1e6      	bne.n	10046462 <process_command+0x1e>
	buffer_out[1] = 0x0F;
10046494:	220f      	movs	r2, #15
	buffer_out[0] = 0x04;
10046496:	3b99      	subs	r3, #153	; 0x99
10046498:	7023      	strb	r3, [r4, #0]
	buffer_out[2] = 0x04;
1004649a:	70a3      	strb	r3, [r4, #2]
	buffer_out[3] = 0x01;
1004649c:	3b03      	subs	r3, #3
	buffer_out[1] = 0x0F;
1004649e:	7062      	strb	r2, [r4, #1]
	buffer_out[3] = 0x01;
100464a0:	70e3      	strb	r3, [r4, #3]
	buffer_out[4] = 0x01;
100464a2:	7123      	strb	r3, [r4, #4]
	Osal_MemCpy(&buffer_out[5], &opCode, 2);
100464a4:	1d60      	adds	r0, r4, #5
100464a6:	3a0d      	subs	r2, #13
100464a8:	0031      	movs	r1, r6
100464aa:	f7fa f96a 	bl	10040782 <Osal_MemCpy>
	return 7;
100464ae:	2007      	movs	r0, #7
100464b0:	e7eb      	b.n	1004648a <process_command+0x46>
100464b2:	46c0      	nop			; (mov r8, r8)
100464b4:	1005f970 	.word	0x1005f970
100464b8:	00000c03 	.word	0x00000c03
100464bc:	20000464 	.word	0x20000464

100464c0 <transport_layer_init>:
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100464c0:	21c0      	movs	r1, #192	; 0xc0
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
100464c2:	4a22      	ldr	r2, [pc, #136]	; (1004654c <transport_layer_init+0x8c>)
100464c4:	4b22      	ldr	r3, [pc, #136]	; (10046550 <transport_layer_init+0x90>)
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100464c6:	4823      	ldr	r0, [pc, #140]	; (10046554 <transport_layer_init+0x94>)
 * @brief  Transport Layer Init.
 *	  Init the transport layer.
 * @param  None
 * @retval None
 */
void transport_layer_init(void) {
100464c8:	b510      	push	{r4, lr}
  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
100464ca:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100464cc:	6a03      	ldr	r3, [r0, #32]
100464ce:	0609      	lsls	r1, r1, #24
100464d0:	021b      	lsls	r3, r3, #8
100464d2:	0a1b      	lsrs	r3, r3, #8
100464d4:	430b      	orrs	r3, r1
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
100464d6:	2400      	movs	r4, #0
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100464d8:	6203      	str	r3, [r0, #32]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
100464da:	2307      	movs	r3, #7
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
100464dc:	6094      	str	r4, [r2, #8]
	/* Configure SysTick to generate interrupt */
	SysTick_Config(SYST_CLOCK / 2);
	SysTick_State(DISABLE);
100464de:	0020      	movs	r0, r4
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
100464e0:	6013      	str	r3, [r2, #0]
100464e2:	f7fb f997 	bl	10041814 <SysTick_State>

	/* WDG configuration */
	WDG_Configuration();
100464e6:	f7ff fee9 	bl	100462bc <WDG_Configuration>

	/** GPIO configuration */
	GPIO_Configuration();
100464ea:	f7ff ff0d 	bl	10046308 <GPIO_Configuration>

	/** NVIC configuration */
	NVIC_Configuration();
100464ee:	f7ff fefe 	bl	100462ee <NVIC_Configuration>
#ifdef UART_INTERFACE
#ifdef UART_SLEEP
	GPIO_CTS_Irq(ENABLE);
#endif
	/** UART configuration */
	UART_Configuration();
100464f2:	f7ff ff1f 	bl	10046334 <UART_Configuration>

	/** Enable UART interrupts */
	UART_ITConfig(UART_IT_RX, ENABLE);
100464f6:	2101      	movs	r1, #1
100464f8:	2010      	movs	r0, #16
100464fa:	f7fb f8e7 	bl	100416cc <UART_ITConfig>

	/** Enable UART */
	UART_Cmd(ENABLE);
100464fe:	2001      	movs	r0, #1
10046500:	f7fb f820 	bl	10041544 <UART_Cmd>
#ifndef NO_DMA
	DMA_Configuration();
10046504:	f7ff ff3c 	bl	10046380 <DMA_Configuration>
	DMA_Configuration();
	SPI_STATE_TRANSACTION(SPI_PROT_CONFIGURED_STATE);
#endif

	/* Queue index init */
	fifo_init(&event_fifo, EVENT_BUFFER_SIZE, event_buffer, FIFO_ALIGNMENT);
10046508:	2180      	movs	r1, #128	; 0x80
1004650a:	2304      	movs	r3, #4
1004650c:	4a12      	ldr	r2, [pc, #72]	; (10046558 <transport_layer_init+0x98>)
1004650e:	00c9      	lsls	r1, r1, #3
10046510:	4812      	ldr	r0, [pc, #72]	; (1004655c <transport_layer_init+0x9c>)
10046512:	f7f9 fff7 	bl	10040504 <fifo_init>
	fifo_init(&command_fifo, COMMAND_BUFFER_SIZE, command_buffer, FIFO_ALIGNMENT);
10046516:	2184      	movs	r1, #132	; 0x84
10046518:	2304      	movs	r3, #4
1004651a:	4a11      	ldr	r2, [pc, #68]	; (10046560 <transport_layer_init+0xa0>)
1004651c:	0049      	lsls	r1, r1, #1
1004651e:	4811      	ldr	r0, [pc, #68]	; (10046564 <transport_layer_init+0xa4>)
10046520:	f7f9 fff0 	bl	10040504 <fifo_init>

	/* event_lost_register init */
	event_lost_register.event_lost = 0;
	event_lost_register.event_register[0] = 0x04;
10046524:	2204      	movs	r2, #4
	event_lost_register.event_lost = 0;
10046526:	4b10      	ldr	r3, [pc, #64]	; (10046568 <transport_layer_init+0xa8>)
	event_lost_register.event_register[0] = 0x04;
10046528:	705a      	strb	r2, [r3, #1]
	event_lost_register.event_register[1] = 0xFF;
1004652a:	32fb      	adds	r2, #251	; 0xfb
1004652c:	709a      	strb	r2, [r3, #2]
	event_lost_register.event_register[2] = 0x0A;
1004652e:	3af5      	subs	r2, #245	; 0xf5
10046530:	70da      	strb	r2, [r3, #3]
	event_lost_register.event_register[3] = 0x02;
10046532:	3a08      	subs	r2, #8
	event_lost_register.event_lost = 0;
10046534:	701c      	strb	r4, [r3, #0]
	event_lost_register.event_register[3] = 0x02;
10046536:	711a      	strb	r2, [r3, #4]
	event_lost_register.event_register[4] = 0x00;
10046538:	715c      	strb	r4, [r3, #5]
	event_lost_register.event_lost_code = 0;
1004653a:	719c      	strb	r4, [r3, #6]
1004653c:	71dc      	strb	r4, [r3, #7]
1004653e:	721c      	strb	r4, [r3, #8]
10046540:	725c      	strb	r4, [r3, #9]
10046542:	729c      	strb	r4, [r3, #10]
10046544:	72dc      	strb	r4, [r3, #11]
10046546:	731c      	strb	r4, [r3, #12]
10046548:	735c      	strb	r4, [r3, #13]
}
1004654a:	bd10      	pop	{r4, pc}
1004654c:	e000e010 	.word	0xe000e010
10046550:	00f423ff 	.word	0x00f423ff
10046554:	e000ed00 	.word	0xe000ed00
10046558:	200006fc 	.word	0x200006fc
1004655c:	200006ec 	.word	0x200006ec
10046560:	20000c10 	.word	0x20000c10
10046564:	20000c00 	.word	0x20000c00
10046568:	20000456 	.word	0x20000456

1004656c <send_command>:
			event_lost_register.event_lost_code = 0;
		}
	}
}

void send_command(uint8_t *cmd, uint16_t len) {
1004656c:	b510      	push	{r4, lr}
1004656e:	0002      	movs	r2, r0
	fifo_put_var_len_item(&command_fifo, len, cmd);
10046570:	4801      	ldr	r0, [pc, #4]	; (10046578 <send_command+0xc>)
10046572:	f7f9 ffe3 	bl	1004053c <fifo_put_var_len_item>
}
10046576:	bd10      	pop	{r4, pc}
10046578:	20000c00 	.word	0x20000c00

1004657c <send_event_isr>:
		} else {
			// assert
		}
	}
}
void send_event_isr(uint8_t *buffer_out, uint16_t buffer_out_length, int8_t overflow_index) {
1004657c:	b570      	push	{r4, r5, r6, lr}
1004657e:	0014      	movs	r4, r2
	if (fifo_put_var_len_item(fifo, len, evt) != 0) {
10046580:	0002      	movs	r2, r0
10046582:	4819      	ldr	r0, [pc, #100]	; (100465e8 <send_event_isr+0x6c>)
10046584:	f7f9 ffda 	bl	1004053c <fifo_put_var_len_item>
10046588:	2800      	cmp	r0, #0
1004658a:	d02c      	beq.n	100465e6 <send_event_isr+0x6a>
		if ((overflow_index >= 0) && (overflow_index < 64)) {
1004658c:	b2e3      	uxtb	r3, r4
1004658e:	2b3f      	cmp	r3, #63	; 0x3f
10046590:	d829      	bhi.n	100465e6 <send_event_isr+0x6a>
			event_lost_register.event_lost = 1;
10046592:	2001      	movs	r0, #1
10046594:	4915      	ldr	r1, [pc, #84]	; (100465ec <send_event_isr+0x70>)
10046596:	7008      	strb	r0, [r1, #0]
			event_lost_register.event_lost_code |= (1 << overflow_index);
10046598:	40a0      	lsls	r0, r4
1004659a:	79cb      	ldrb	r3, [r1, #7]
1004659c:	798a      	ldrb	r2, [r1, #6]
1004659e:	021b      	lsls	r3, r3, #8
100465a0:	4313      	orrs	r3, r2
100465a2:	7a0a      	ldrb	r2, [r1, #8]
100465a4:	7acd      	ldrb	r5, [r1, #11]
100465a6:	0412      	lsls	r2, r2, #16
100465a8:	4313      	orrs	r3, r2
100465aa:	7a4a      	ldrb	r2, [r1, #9]
100465ac:	022d      	lsls	r5, r5, #8
100465ae:	0612      	lsls	r2, r2, #24
100465b0:	431a      	orrs	r2, r3
100465b2:	7a8b      	ldrb	r3, [r1, #10]
100465b4:	4302      	orrs	r2, r0
100465b6:	431d      	orrs	r5, r3
100465b8:	7b0b      	ldrb	r3, [r1, #12]
100465ba:	17c4      	asrs	r4, r0, #31
100465bc:	041b      	lsls	r3, r3, #16
100465be:	431d      	orrs	r5, r3
100465c0:	7b4b      	ldrb	r3, [r1, #13]
100465c2:	1d88      	adds	r0, r1, #6
100465c4:	061b      	lsls	r3, r3, #24
100465c6:	718a      	strb	r2, [r1, #6]
100465c8:	432b      	orrs	r3, r5
100465ca:	0a11      	lsrs	r1, r2, #8
100465cc:	4323      	orrs	r3, r4
100465ce:	7041      	strb	r1, [r0, #1]
100465d0:	0c11      	lsrs	r1, r2, #16
100465d2:	0e12      	lsrs	r2, r2, #24
100465d4:	70c2      	strb	r2, [r0, #3]
100465d6:	0a1a      	lsrs	r2, r3, #8
100465d8:	7103      	strb	r3, [r0, #4]
100465da:	7142      	strb	r2, [r0, #5]
100465dc:	0c1a      	lsrs	r2, r3, #16
100465de:	0e1b      	lsrs	r3, r3, #24
100465e0:	7081      	strb	r1, [r0, #2]
100465e2:	7182      	strb	r2, [r0, #6]
100465e4:	71c3      	strb	r3, [r0, #7]
	DEBUG_NOTES(ENQUEUE_EVENT);
	enqueue_event(&event_fifo, buffer_out_length, buffer_out, overflow_index);
}
100465e6:	bd70      	pop	{r4, r5, r6, pc}
100465e8:	200006ec 	.word	0x200006ec
100465ec:	20000456 	.word	0x20000456

100465f0 <transport_layer_tick>:
void transport_layer_tick(void) {
100465f0:	b530      	push	{r4, r5, lr}
100465f2:	4c3c      	ldr	r4, [pc, #240]	; (100466e4 <transport_layer_tick+0xf4>)
	uint16_t size = 0;
100465f4:	2300      	movs	r3, #0
void transport_layer_tick(void) {
100465f6:	44a5      	add	sp, r4
	uint16_t size = 0;
100465f8:	466a      	mov	r2, sp
	WDG_SetReload(RELOAD_TIME(WATCHDOG_TIME));
100465fa:	483b      	ldr	r0, [pc, #236]	; (100466e8 <transport_layer_tick+0xf8>)
	uint16_t size = 0;
100465fc:	80d3      	strh	r3, [r2, #6]
	WDG_SetReload(RELOAD_TIME(WATCHDOG_TIME));
100465fe:	f7fb f8a1 	bl	10041744 <WDG_SetReload>
	if ((fifo_size(&event_fifo) == 0) && reset_pending) {
10046602:	4d3a      	ldr	r5, [pc, #232]	; (100466ec <transport_layer_tick+0xfc>)
10046604:	0028      	movs	r0, r5
10046606:	f7f9 ff85 	bl	10040514 <fifo_size>
1004660a:	2800      	cmp	r0, #0
1004660c:	d115      	bne.n	1004663a <transport_layer_tick+0x4a>
1004660e:	4b38      	ldr	r3, [pc, #224]	; (100466f0 <transport_layer_tick+0x100>)
10046610:	781b      	ldrb	r3, [r3, #0]
10046612:	2b00      	cmp	r3, #0
10046614:	d011      	beq.n	1004663a <transport_layer_tick+0x4a>
		while (UART_GetFlagStatus(UART_FLAG_TXFE) == RESET)
10046616:	2080      	movs	r0, #128	; 0x80
10046618:	f7fb f86a 	bl	100416f0 <UART_GetFlagStatus>
1004661c:	2800      	cmp	r0, #0
1004661e:	d0fa      	beq.n	10046616 <transport_layer_tick+0x26>
		while (UART_GetFlagStatus(UART_FLAG_BUSY) == SET)
10046620:	2008      	movs	r0, #8
10046622:	f7fb f865 	bl	100416f0 <UART_GetFlagStatus>
10046626:	2801      	cmp	r0, #1
10046628:	d0fa      	beq.n	10046620 <transport_layer_tick+0x30>
1004662a:	f3bf 8f4f 	dsb	sy
  SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1004662e:	4a31      	ldr	r2, [pc, #196]	; (100466f4 <transport_layer_tick+0x104>)
10046630:	4b31      	ldr	r3, [pc, #196]	; (100466f8 <transport_layer_tick+0x108>)
10046632:	60da      	str	r2, [r3, #12]
10046634:	f3bf 8f4f 	dsb	sy
10046638:	e7fe      	b.n	10046638 <transport_layer_tick+0x48>
	if ((fifo_size(&event_fifo) > 0) && (dma_state == DMA_IDLE)) {
1004663a:	0028      	movs	r0, r5
1004663c:	f7f9 ff6a 	bl	10040514 <fifo_size>
10046640:	2800      	cmp	r0, #0
10046642:	d017      	beq.n	10046674 <transport_layer_tick+0x84>
10046644:	4c2d      	ldr	r4, [pc, #180]	; (100466fc <transport_layer_tick+0x10c>)
10046646:	7823      	ldrb	r3, [r4, #0]
10046648:	2b00      	cmp	r3, #0
1004664a:	d113      	bne.n	10046674 <transport_layer_tick+0x84>
		if (fifo_get_ptr_var_len_item(&event_fifo, &size, &ptr) == 0) {
1004664c:	466b      	mov	r3, sp
1004664e:	aa43      	add	r2, sp, #268	; 0x10c
10046650:	1d99      	adds	r1, r3, #6
10046652:	0028      	movs	r0, r5
10046654:	f7f9 fff0 	bl	10040638 <fifo_get_ptr_var_len_item>
10046658:	2800      	cmp	r0, #0
1004665a:	d10b      	bne.n	10046674 <transport_layer_tick+0x84>
	if (dma_state == DMA_IDLE) {
1004665c:	7823      	ldrb	r3, [r4, #0]
1004665e:	2b00      	cmp	r3, #0
10046660:	d108      	bne.n	10046674 <transport_layer_tick+0x84>
			transport_layer_send_data(ptr + FIFO_ALIGNMENT, size);
10046662:	466b      	mov	r3, sp
10046664:	88da      	ldrh	r2, [r3, #6]
		dma_state = DMA_IN_PROGRESS;
10046666:	2301      	movs	r3, #1
10046668:	7023      	strb	r3, [r4, #0]
			transport_layer_send_data(ptr + FIFO_ALIGNMENT, size);
1004666a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
		DMA_Rearm(DMA_CH_UART_TX, (uint32_t) data, data_length);
1004666c:	4824      	ldr	r0, [pc, #144]	; (10046700 <transport_layer_tick+0x110>)
			transport_layer_send_data(ptr + FIFO_ALIGNMENT, size);
1004666e:	1d19      	adds	r1, r3, #4
		DMA_Rearm(DMA_CH_UART_TX, (uint32_t) data, data_length);
10046670:	f7ff febc 	bl	100463ec <DMA_Rearm>
	if ((fifo_size(&command_fifo) > 0) && (!reset_pending)) {
10046674:	4c23      	ldr	r4, [pc, #140]	; (10046704 <transport_layer_tick+0x114>)
10046676:	0020      	movs	r0, r4
10046678:	f7f9 ff4c 	bl	10040514 <fifo_size>
1004667c:	2800      	cmp	r0, #0
1004667e:	d018      	beq.n	100466b2 <transport_layer_tick+0xc2>
10046680:	4b1b      	ldr	r3, [pc, #108]	; (100466f0 <transport_layer_tick+0x100>)
10046682:	781b      	ldrb	r3, [r3, #0]
10046684:	2b00      	cmp	r3, #0
10046686:	d114      	bne.n	100466b2 <transport_layer_tick+0xc2>
		fifo_get_var_len_item(&command_fifo, &size, buffer);
10046688:	466b      	mov	r3, sp
1004668a:	aa43      	add	r2, sp, #268	; 0x10c
1004668c:	1d99      	adds	r1, r3, #6
1004668e:	0020      	movs	r0, r4
10046690:	f7f9 ffbe 	bl	10040610 <fifo_get_var_len_item>
		len = process_command(buffer, size, buffer_out, 255);
10046694:	466b      	mov	r3, sp
10046696:	aa02      	add	r2, sp, #8
10046698:	88d9      	ldrh	r1, [r3, #6]
1004669a:	a843      	add	r0, sp, #268	; 0x10c
1004669c:	23ff      	movs	r3, #255	; 0xff
1004669e:	f7ff fed1 	bl	10046444 <process_command>

void send_event(uint8_t *buffer_out, uint16_t buffer_out_length, int8_t overflow_index) {
	//  NVIC_DisableRadioIrq();
	//  NVIC_DisableCSnIrq();
	send_event_isr(buffer_out, buffer_out_length, overflow_index);
100466a2:	2201      	movs	r2, #1
		len = process_command(buffer, size, buffer_out, 255);
100466a4:	0001      	movs	r1, r0
	send_event_isr(buffer_out, buffer_out_length, overflow_index);
100466a6:	a802      	add	r0, sp, #8
100466a8:	f7ff ff68 	bl	1004657c <send_event_isr>
		fifo_flush(&command_fifo);
100466ac:	0020      	movs	r0, r4
100466ae:	f7f9 ff3c 	bl	1004052a <fifo_flush>
	if (event_lost_register.event_lost == 1) {
100466b2:	4c15      	ldr	r4, [pc, #84]	; (10046708 <transport_layer_tick+0x118>)
100466b4:	7823      	ldrb	r3, [r4, #0]
100466b6:	2b01      	cmp	r3, #1
100466b8:	d10f      	bne.n	100466da <transport_layer_tick+0xea>
		if (fifo_put_var_len_item(&event_fifo, 13, event_lost_register.event_register) == 0) {
100466ba:	1c62      	adds	r2, r4, #1
100466bc:	210d      	movs	r1, #13
100466be:	0028      	movs	r0, r5
100466c0:	f7f9 ff3c 	bl	1004053c <fifo_put_var_len_item>
100466c4:	2800      	cmp	r0, #0
100466c6:	d108      	bne.n	100466da <transport_layer_tick+0xea>
			event_lost_register.event_lost = 0;
100466c8:	7020      	strb	r0, [r4, #0]
			event_lost_register.event_lost_code = 0;
100466ca:	71a0      	strb	r0, [r4, #6]
100466cc:	71e0      	strb	r0, [r4, #7]
100466ce:	7220      	strb	r0, [r4, #8]
100466d0:	7260      	strb	r0, [r4, #9]
100466d2:	72a0      	strb	r0, [r4, #10]
100466d4:	72e0      	strb	r0, [r4, #11]
100466d6:	7320      	strb	r0, [r4, #12]
100466d8:	7360      	strb	r0, [r4, #13]
}
100466da:	2385      	movs	r3, #133	; 0x85
100466dc:	009b      	lsls	r3, r3, #2
100466de:	449d      	add	sp, r3
100466e0:	bd30      	pop	{r4, r5, pc}
100466e2:	46c0      	nop			; (mov r8, r8)
100466e4:	fffffdec 	.word	0xfffffdec
100466e8:	00007ffd 	.word	0x00007ffd
100466ec:	200006ec 	.word	0x200006ec
100466f0:	20000464 	.word	0x20000464
100466f4:	05fa0004 	.word	0x05fa0004
100466f8:	e000ed00 	.word	0xe000ed00
100466fc:	20000455 	.word	0x20000455
10046700:	a000001c 	.word	0xa000001c
10046704:	20000c00 	.word	0x20000c00
10046708:	20000456 	.word	0x20000456

1004670c <send_event>:
void send_event(uint8_t *buffer_out, uint16_t buffer_out_length, int8_t overflow_index) {
1004670c:	b510      	push	{r4, lr}
	send_event_isr(buffer_out, buffer_out_length, overflow_index);
1004670e:	f7ff ff35 	bl	1004657c <send_event_isr>
	//  NVIC_EnableCSnIrq();
	//  NVIC_EnableRadioIrq();
}
10046712:	bd10      	pop	{r4, pc}

10046714 <advance_dma>:
}

#endif

#ifdef UART_INTERFACE
void advance_dma(void) {
10046714:	b537      	push	{r0, r1, r2, r4, r5, lr}
	uint8_t *ptr;
	uint16_t size;
	fifo_discard_var_len_item(&event_fifo);
10046716:	4c0f      	ldr	r4, [pc, #60]	; (10046754 <advance_dma+0x40>)
10046718:	0020      	movs	r0, r4
1004671a:	f7f9 ff99 	bl	10040650 <fifo_discard_var_len_item>

	if (fifo_size(&event_fifo) > 0) {
1004671e:	0020      	movs	r0, r4
10046720:	f7f9 fef8 	bl	10040514 <fifo_size>
10046724:	2800      	cmp	r0, #0
10046726:	d014      	beq.n	10046752 <advance_dma+0x3e>
		if (fifo_get_ptr_var_len_item(&event_fifo, &size, &ptr) == 0) {
10046728:	466b      	mov	r3, sp
1004672a:	1c9d      	adds	r5, r3, #2
1004672c:	aa01      	add	r2, sp, #4
1004672e:	0029      	movs	r1, r5
10046730:	0020      	movs	r0, r4
10046732:	f7f9 ff81 	bl	10040638 <fifo_get_ptr_var_len_item>
10046736:	2800      	cmp	r0, #0
10046738:	d10b      	bne.n	10046752 <advance_dma+0x3e>
	if (dma_state == DMA_IDLE) {
1004673a:	4b07      	ldr	r3, [pc, #28]	; (10046758 <advance_dma+0x44>)
1004673c:	781a      	ldrb	r2, [r3, #0]
1004673e:	2a00      	cmp	r2, #0
10046740:	d107      	bne.n	10046752 <advance_dma+0x3e>
		dma_state = DMA_IN_PROGRESS;
10046742:	2101      	movs	r1, #1
10046744:	7019      	strb	r1, [r3, #0]
			transport_layer_send_data(ptr + FIFO_ALIGNMENT, size);
10046746:	9b01      	ldr	r3, [sp, #4]
10046748:	882a      	ldrh	r2, [r5, #0]
1004674a:	1d19      	adds	r1, r3, #4
		DMA_Rearm(DMA_CH_UART_TX, (uint32_t) data, data_length);
1004674c:	4803      	ldr	r0, [pc, #12]	; (1004675c <advance_dma+0x48>)
1004674e:	f7ff fe4d 	bl	100463ec <DMA_Rearm>
		}
	}
}
10046752:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
10046754:	200006ec 	.word	0x200006ec
10046758:	20000455 	.word	0x20000455
1004675c:	a000001c 	.word	0xa000001c

10046760 <__aeabi_memclr>:
10046760:	b510      	push	{r4, lr}
10046762:	2200      	movs	r2, #0
10046764:	f000 f809 	bl	1004677a <__aeabi_memset>
10046768:	bd10      	pop	{r4, pc}

1004676a <__aeabi_memcpy>:
1004676a:	b510      	push	{r4, lr}
1004676c:	f000 f81b 	bl	100467a6 <memcpy>
10046770:	bd10      	pop	{r4, pc}

10046772 <__aeabi_memmove>:
10046772:	b510      	push	{r4, lr}
10046774:	f000 f820 	bl	100467b8 <memmove>
10046778:	bd10      	pop	{r4, pc}

1004677a <__aeabi_memset>:
1004677a:	0013      	movs	r3, r2
1004677c:	b510      	push	{r4, lr}
1004677e:	000a      	movs	r2, r1
10046780:	0019      	movs	r1, r3
10046782:	f000 f82b 	bl	100467dc <memset>
10046786:	bd10      	pop	{r4, pc}

10046788 <memcmp>:
10046788:	b530      	push	{r4, r5, lr}
1004678a:	2400      	movs	r4, #0
1004678c:	42a2      	cmp	r2, r4
1004678e:	d101      	bne.n	10046794 <memcmp+0xc>
10046790:	2000      	movs	r0, #0
10046792:	e005      	b.n	100467a0 <memcmp+0x18>
10046794:	5d03      	ldrb	r3, [r0, r4]
10046796:	1c65      	adds	r5, r4, #1
10046798:	5d0c      	ldrb	r4, [r1, r4]
1004679a:	42a3      	cmp	r3, r4
1004679c:	d001      	beq.n	100467a2 <memcmp+0x1a>
1004679e:	1b18      	subs	r0, r3, r4
100467a0:	bd30      	pop	{r4, r5, pc}
100467a2:	002c      	movs	r4, r5
100467a4:	e7f2      	b.n	1004678c <memcmp+0x4>

100467a6 <memcpy>:
100467a6:	2300      	movs	r3, #0
100467a8:	b510      	push	{r4, lr}
100467aa:	429a      	cmp	r2, r3
100467ac:	d100      	bne.n	100467b0 <memcpy+0xa>
100467ae:	bd10      	pop	{r4, pc}
100467b0:	5ccc      	ldrb	r4, [r1, r3]
100467b2:	54c4      	strb	r4, [r0, r3]
100467b4:	3301      	adds	r3, #1
100467b6:	e7f8      	b.n	100467aa <memcpy+0x4>

100467b8 <memmove>:
100467b8:	b510      	push	{r4, lr}
100467ba:	4288      	cmp	r0, r1
100467bc:	d902      	bls.n	100467c4 <memmove+0xc>
100467be:	188b      	adds	r3, r1, r2
100467c0:	4298      	cmp	r0, r3
100467c2:	d308      	bcc.n	100467d6 <memmove+0x1e>
100467c4:	2300      	movs	r3, #0
100467c6:	429a      	cmp	r2, r3
100467c8:	d007      	beq.n	100467da <memmove+0x22>
100467ca:	5ccc      	ldrb	r4, [r1, r3]
100467cc:	54c4      	strb	r4, [r0, r3]
100467ce:	3301      	adds	r3, #1
100467d0:	e7f9      	b.n	100467c6 <memmove+0xe>
100467d2:	5c8b      	ldrb	r3, [r1, r2]
100467d4:	5483      	strb	r3, [r0, r2]
100467d6:	3a01      	subs	r2, #1
100467d8:	d2fb      	bcs.n	100467d2 <memmove+0x1a>
100467da:	bd10      	pop	{r4, pc}

100467dc <memset>:
100467dc:	0003      	movs	r3, r0
100467de:	1882      	adds	r2, r0, r2
100467e0:	4293      	cmp	r3, r2
100467e2:	d100      	bne.n	100467e6 <memset+0xa>
100467e4:	4770      	bx	lr
100467e6:	7019      	strb	r1, [r3, #0]
100467e8:	3301      	adds	r3, #1
100467ea:	e7f9      	b.n	100467e0 <memset+0x4>

100467ec <_aci_gap_set_discoverable_param_check>:
100467ec:	b5f0      	push	{r4, r5, r6, r7, lr}
100467ee:	4605      	mov	r5, r0
100467f0:	2000      	movs	r0, #0
100467f2:	460f      	mov	r7, r1
100467f4:	9e07      	ldr	r6, [sp, #28]
100467f6:	9c05      	ldr	r4, [sp, #20]
100467f8:	4317      	orrs	r7, r2
100467fa:	d009      	beq.n	10046810 <_aci_gap_set_discoverable_param_check+0x24>
100467fc:	2920      	cmp	r1, #32
100467fe:	d305      	bcc.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
10046800:	2701      	movs	r7, #1
10046802:	03bf      	lsls	r7, r7, #14
10046804:	42ba      	cmp	r2, r7
10046806:	d801      	bhi.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
10046808:	4291      	cmp	r1, r2
1004680a:	d901      	bls.n	10046810 <_aci_gap_set_discoverable_param_check+0x24>
1004680c:	2042      	movs	r0, #66	; 0x42
1004680e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046810:	4619      	mov	r1, r3
10046812:	4321      	orrs	r1, r4
10046814:	d00a      	beq.n	1004682c <_aci_gap_set_discoverable_param_check+0x40>
10046816:	429c      	cmp	r4, r3
10046818:	d3f8      	bcc.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
1004681a:	4909      	ldr	r1, [pc, #36]	; (10046840 <_aci_gap_set_discoverable_param_check+0x54>)
1004681c:	428c      	cmp	r4, r1
1004681e:	d003      	beq.n	10046828 <_aci_gap_set_discoverable_param_check+0x3c>
10046820:	4908      	ldr	r1, [pc, #32]	; (10046844 <_aci_gap_set_discoverable_param_check+0x58>)
10046822:	1fa4      	subs	r4, r4, #6
10046824:	428c      	cmp	r4, r1
10046826:	d2f1      	bcs.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
10046828:	2b06      	cmp	r3, #6
1004682a:	d3ef      	bcc.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
1004682c:	2d00      	cmp	r5, #0
1004682e:	d003      	beq.n	10046838 <_aci_gap_set_discoverable_param_check+0x4c>
10046830:	2d02      	cmp	r5, #2
10046832:	d001      	beq.n	10046838 <_aci_gap_set_discoverable_param_check+0x4c>
10046834:	2d03      	cmp	r5, #3
10046836:	d1e9      	bne.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
10046838:	2e03      	cmp	r6, #3
1004683a:	d8e7      	bhi.n	1004680c <_aci_gap_set_discoverable_param_check+0x20>
1004683c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004683e:	0000      	.short	0x0000
10046840:	0000ffff 	.word	0x0000ffff
10046844:	00000c7b 	.word	0x00000c7b

10046848 <aci_gap_allow_rebond>:
10046848:	b510      	push	{r4, lr}
1004684a:	f013 ff85 	bl	1005a758 <SMP_allow_rebond>
1004684e:	bd10      	pop	{r4, pc}

10046850 <aci_gap_authorization_resp>:
10046850:	b510      	push	{r4, lr}
10046852:	2901      	cmp	r1, #1
10046854:	d003      	beq.n	1004685e <aci_gap_authorization_resp+0xe>
10046856:	2902      	cmp	r1, #2
10046858:	d001      	beq.n	1004685e <aci_gap_authorization_resp+0xe>
1004685a:	2042      	movs	r0, #66	; 0x42
1004685c:	bd10      	pop	{r4, pc}
1004685e:	f013 ff90 	bl	1005a782 <SMP_authorization_response>
10046862:	bd10      	pop	{r4, pc}

10046864 <aci_gap_clear_security_db>:
10046864:	b510      	push	{r4, lr}
10046866:	f011 fac7 	bl	10057df8 <SDB_Clear>
1004686a:	bd10      	pop	{r4, pc}

1004686c <aci_gap_configure_whitelist>:
1004686c:	b510      	push	{r4, lr}
1004686e:	f011 f9bb 	bl	10057be8 <GAP_configure_whitelist>
10046872:	bd10      	pop	{r4, pc}

10046874 <aci_gap_create_connection_api>:
10046874:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10046876:	b08d      	sub	sp, #52	; 0x34
10046878:	4614      	mov	r4, r2
1004687a:	aa18      	add	r2, sp, #96	; 0x60
1004687c:	caec      	ldmia	r2, {r2, r3, r5, r6, r7}
1004687e:	9704      	str	r7, [sp, #16]
10046880:	466f      	mov	r7, sp
10046882:	c76c      	stmia	r7!, {r2, r3, r5, r6}
10046884:	460a      	mov	r2, r1
10046886:	4601      	mov	r1, r0
10046888:	a805      	add	r0, sp, #20
1004688a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
1004688c:	f006 fd34 	bl	1004d2f8 <hci_load_connParams>
10046890:	2800      	cmp	r0, #0
10046892:	d10a      	bne.n	100468aa <aci_gap_create_connection_api+0x36>
10046894:	a808      	add	r0, sp, #32
10046896:	7144      	strb	r4, [r0, #5]
10046898:	2c01      	cmp	r4, #1
1004689a:	d008      	beq.n	100468ae <aci_gap_create_connection_api+0x3a>
1004689c:	2c00      	cmp	r4, #0
1004689e:	d006      	beq.n	100468ae <aci_gap_create_connection_api+0x3a>
100468a0:	2c02      	cmp	r4, #2
100468a2:	d004      	beq.n	100468ae <aci_gap_create_connection_api+0x3a>
100468a4:	2c03      	cmp	r4, #3
100468a6:	d002      	beq.n	100468ae <aci_gap_create_connection_api+0x3a>
100468a8:	2042      	movs	r0, #66	; 0x42
100468aa:	b011      	add	sp, #68	; 0x44
100468ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
100468ae:	a809      	add	r0, sp, #36	; 0x24
100468b0:	2206      	movs	r2, #6
100468b2:	3002      	adds	r0, #2
100468b4:	9910      	ldr	r1, [sp, #64]	; 0x40
100468b6:	f7f9 ff64 	bl	10040782 <Osal_MemCpy>
100468ba:	a908      	add	r1, sp, #32
100468bc:	9816      	ldr	r0, [sp, #88]	; 0x58
100468be:	7308      	strb	r0, [r1, #12]
100468c0:	b2c0      	uxtb	r0, r0
100468c2:	2803      	cmp	r0, #3
100468c4:	d8f0      	bhi.n	100468a8 <aci_gap_create_connection_api+0x34>
100468c6:	a805      	add	r0, sp, #20
100468c8:	f000 ff72 	bl	100477b0 <GAP_Create_Connection>
100468cc:	e7ed      	b.n	100468aa <aci_gap_create_connection_api+0x36>

100468ce <aci_gap_delete_ad_type>:
100468ce:	b510      	push	{r4, lr}
100468d0:	4604      	mov	r4, r0
100468d2:	f00d fbef 	bl	100540b4 <get_advertiser>
100468d6:	2808      	cmp	r0, #8
100468d8:	d003      	beq.n	100468e2 <aci_gap_delete_ad_type+0x14>
100468da:	4620      	mov	r0, r4
100468dc:	f00e fe54 	bl	10055588 <GAP_Delete_ADType>
100468e0:	bd10      	pop	{r4, pc}
100468e2:	2046      	movs	r0, #70	; 0x46
100468e4:	bd10      	pop	{r4, pc}

100468e6 <aci_gap_get_bonded_devices>:
100468e6:	b508      	push	{r3, lr}
100468e8:	2200      	movs	r2, #0
100468ea:	466b      	mov	r3, sp
100468ec:	701a      	strb	r2, [r3, #0]
100468ee:	4603      	mov	r3, r0
100468f0:	22fa      	movs	r2, #250	; 0xfa
100468f2:	4668      	mov	r0, sp
100468f4:	f011 fd70 	bl	100583d8 <_SDB_Get_All_Bonded_Devices>
100468f8:	bd08      	pop	{r3, pc}

100468fa <aci_gap_get_oob_data>:
100468fa:	b538      	push	{r3, r4, r5, lr}
100468fc:	9c04      	ldr	r4, [sp, #16]
100468fe:	2802      	cmp	r0, #2
10046900:	d901      	bls.n	10046906 <aci_gap_get_oob_data+0xc>
10046902:	2042      	movs	r0, #66	; 0x42
10046904:	bd38      	pop	{r3, r4, r5, pc}
10046906:	9400      	str	r4, [sp, #0]
10046908:	f013 fe1c 	bl	1005a544 <SMP_aci_get_oob_data>
1004690c:	bd38      	pop	{r3, r4, r5, pc}

1004690e <aci_gap_get_security_level>:
1004690e:	b510      	push	{r4, lr}
10046910:	f014 f816 	bl	1005a940 <SMP_get_security_level>
10046914:	2000      	movs	r0, #0
10046916:	bd10      	pop	{r4, pc}

10046918 <aci_gap_init>:
10046918:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004691a:	9d06      	ldr	r5, [sp, #24]
1004691c:	9c07      	ldr	r4, [sp, #28]
1004691e:	2800      	cmp	r0, #0
10046920:	d005      	beq.n	1004692e <aci_gap_init+0x16>
10046922:	0786      	lsls	r6, r0, #30
10046924:	d105      	bne.n	10046932 <aci_gap_init+0x1a>
10046926:	0746      	lsls	r6, r0, #29
10046928:	d403      	bmi.n	10046932 <aci_gap_init+0x1a>
1004692a:	0706      	lsls	r6, r0, #28
1004692c:	d401      	bmi.n	10046932 <aci_gap_init+0x1a>
1004692e:	2042      	movs	r0, #66	; 0x42
10046930:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10046932:	2900      	cmp	r1, #0
10046934:	d003      	beq.n	1004693e <aci_gap_init+0x26>
10046936:	2901      	cmp	r1, #1
10046938:	d001      	beq.n	1004693e <aci_gap_init+0x26>
1004693a:	2902      	cmp	r1, #2
1004693c:	d1f7      	bne.n	1004692e <aci_gap_init+0x16>
1004693e:	9500      	str	r5, [sp, #0]
10046940:	9401      	str	r4, [sp, #4]
10046942:	f000 ff8b 	bl	1004785c <GAP_Init>
10046946:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10046948 <aci_gap_is_device_bonded>:
10046948:	b500      	push	{lr}
1004694a:	b095      	sub	sp, #84	; 0x54
1004694c:	460b      	mov	r3, r1
1004694e:	2801      	cmp	r0, #1
10046950:	d004      	beq.n	1004695c <aci_gap_is_device_bonded+0x14>
10046952:	2800      	cmp	r0, #0
10046954:	d002      	beq.n	1004695c <aci_gap_is_device_bonded+0x14>
10046956:	2042      	movs	r0, #66	; 0x42
10046958:	b015      	add	sp, #84	; 0x54
1004695a:	bd00      	pop	{pc}
1004695c:	4601      	mov	r1, r0
1004695e:	466a      	mov	r2, sp
10046960:	4618      	mov	r0, r3
10046962:	f011 faa9 	bl	10057eb8 <SDB_Find_Record>
10046966:	e7f7      	b.n	10046958 <aci_gap_is_device_bonded+0x10>

10046968 <aci_gap_numeric_comparison_value_confirm_yesno_api>:
10046968:	b510      	push	{r4, lr}
1004696a:	2900      	cmp	r1, #0
1004696c:	d003      	beq.n	10046976 <aci_gap_numeric_comparison_value_confirm_yesno_api+0xe>
1004696e:	2901      	cmp	r1, #1
10046970:	d001      	beq.n	10046976 <aci_gap_numeric_comparison_value_confirm_yesno_api+0xe>
10046972:	2042      	movs	r0, #66	; 0x42
10046974:	bd10      	pop	{r4, pc}
10046976:	f014 fdf7 	bl	1005b568 <SMP_ACI_sc_numeric_comparison_response>
1004697a:	bd10      	pop	{r4, pc}

1004697c <aci_gap_pass_key_resp>:
1004697c:	4a04      	ldr	r2, [pc, #16]	; (10046990 <aci_gap_pass_key_resp+0x14>)
1004697e:	b510      	push	{r4, lr}
10046980:	4291      	cmp	r1, r2
10046982:	d901      	bls.n	10046988 <aci_gap_pass_key_resp+0xc>
10046984:	2042      	movs	r0, #66	; 0x42
10046986:	bd10      	pop	{r4, pc}
10046988:	f013 fdfe 	bl	1005a588 <SMP_aci_passkey_response>
1004698c:	bd10      	pop	{r4, pc}
1004698e:	0000      	.short	0x0000
10046990:	000f423f 	.word	0x000f423f

10046994 <aci_gap_passkey_input_api>:
10046994:	b510      	push	{r4, lr}
10046996:	2904      	cmp	r1, #4
10046998:	d901      	bls.n	1004699e <aci_gap_passkey_input_api+0xa>
1004699a:	2042      	movs	r0, #66	; 0x42
1004699c:	bd10      	pop	{r4, pc}
1004699e:	f014 fdfd 	bl	1005b59c <SMP_ACI_sc_passkey_input_type_to_notify>
100469a2:	bd10      	pop	{r4, pc}

100469a4 <aci_gap_remove_bonded_device>:
100469a4:	b510      	push	{r4, lr}
100469a6:	2800      	cmp	r0, #0
100469a8:	d003      	beq.n	100469b2 <aci_gap_remove_bonded_device+0xe>
100469aa:	2801      	cmp	r0, #1
100469ac:	d001      	beq.n	100469b2 <aci_gap_remove_bonded_device+0xe>
100469ae:	2042      	movs	r0, #66	; 0x42
100469b0:	bd10      	pop	{r4, pc}
100469b2:	f011 fbff 	bl	100581b4 <SDB_remove_bonding_record>
100469b6:	bd10      	pop	{r4, pc}

100469b8 <aci_gap_resolve_private_addr>:
100469b8:	b510      	push	{r4, lr}
100469ba:	f00e fd09 	bl	100553d0 <GAP_Resolve_Private_Addr>
100469be:	bd10      	pop	{r4, pc}

100469c0 <aci_gap_send_pairing_req_api>:
100469c0:	b510      	push	{r4, lr}
100469c2:	2201      	movs	r2, #1
100469c4:	f011 fee4 	bl	10058790 <SMP_MI_PairingRequest_Send>
100469c8:	bd10      	pop	{r4, pc}
	...

100469cc <aci_gap_set_authentication_requirement>:
100469cc:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100469ce:	b083      	sub	sp, #12
100469d0:	9803      	ldr	r0, [sp, #12]
100469d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
100469d4:	461e      	mov	r6, r3
100469d6:	4614      	mov	r4, r2
100469d8:	460f      	mov	r7, r1
100469da:	2800      	cmp	r0, #0
100469dc:	d004      	beq.n	100469e8 <aci_gap_set_authentication_requirement+0x1c>
100469de:	2801      	cmp	r0, #1
100469e0:	d002      	beq.n	100469e8 <aci_gap_set_authentication_requirement+0x1c>
100469e2:	2042      	movs	r0, #66	; 0x42
100469e4:	b007      	add	sp, #28
100469e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100469e8:	2f00      	cmp	r7, #0
100469ea:	d001      	beq.n	100469f0 <aci_gap_set_authentication_requirement+0x24>
100469ec:	2f01      	cmp	r7, #1
100469ee:	d1f8      	bne.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
100469f0:	1fe8      	subs	r0, r5, #7
100469f2:	280a      	cmp	r0, #10
100469f4:	d2f5      	bcs.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
100469f6:	980d      	ldr	r0, [sp, #52]	; 0x34
100469f8:	2810      	cmp	r0, #16
100469fa:	d8f2      	bhi.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
100469fc:	42a8      	cmp	r0, r5
100469fe:	d3f0      	bcc.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
10046a00:	980e      	ldr	r0, [sp, #56]	; 0x38
10046a02:	2800      	cmp	r0, #0
10046a04:	d001      	beq.n	10046a0a <aci_gap_set_authentication_requirement+0x3e>
10046a06:	2801      	cmp	r0, #1
10046a08:	d1eb      	bne.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
10046a0a:	4914      	ldr	r1, [pc, #80]	; (10046a5c <aci_gap_set_authentication_requirement+0x90>)
10046a0c:	980f      	ldr	r0, [sp, #60]	; 0x3c
10046a0e:	4288      	cmp	r0, r1
10046a10:	d8e7      	bhi.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
10046a12:	9810      	ldr	r0, [sp, #64]	; 0x40
10046a14:	2800      	cmp	r0, #0
10046a16:	d001      	beq.n	10046a1c <aci_gap_set_authentication_requirement+0x50>
10046a18:	2801      	cmp	r0, #1
10046a1a:	d1e2      	bne.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
10046a1c:	f7fb f8e0 	bl	10041be0 <secure_connections_csr_ucfg>
10046a20:	2801      	cmp	r0, #1
10046a22:	d004      	beq.n	10046a2e <aci_gap_set_authentication_requirement+0x62>
10046a24:	4620      	mov	r0, r4
10046a26:	4330      	orrs	r0, r6
10046a28:	d005      	beq.n	10046a36 <aci_gap_set_authentication_requirement+0x6a>
10046a2a:	2011      	movs	r0, #17
10046a2c:	e7da      	b.n	100469e4 <aci_gap_set_authentication_requirement+0x18>
10046a2e:	2c02      	cmp	r4, #2
10046a30:	d8d7      	bhi.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
10046a32:	2e01      	cmp	r6, #1
10046a34:	d8d5      	bhi.n	100469e2 <aci_gap_set_authentication_requirement+0x16>
10046a36:	4668      	mov	r0, sp
10046a38:	9903      	ldr	r1, [sp, #12]
10046a3a:	7001      	strb	r1, [r0, #0]
10046a3c:	7047      	strb	r7, [r0, #1]
10046a3e:	7284      	strb	r4, [r0, #10]
10046a40:	72c6      	strb	r6, [r0, #11]
10046a42:	7085      	strb	r5, [r0, #2]
10046a44:	990d      	ldr	r1, [sp, #52]	; 0x34
10046a46:	70c1      	strb	r1, [r0, #3]
10046a48:	990e      	ldr	r1, [sp, #56]	; 0x38
10046a4a:	7201      	strb	r1, [r0, #8]
10046a4c:	980f      	ldr	r0, [sp, #60]	; 0x3c
10046a4e:	9001      	str	r0, [sp, #4]
10046a50:	4668      	mov	r0, sp
10046a52:	9910      	ldr	r1, [sp, #64]	; 0x40
10046a54:	7241      	strb	r1, [r0, #9]
10046a56:	f014 f8fd 	bl	1005ac54 <SMP_set_authentication_req>
10046a5a:	e7c3      	b.n	100469e4 <aci_gap_set_authentication_requirement+0x18>
10046a5c:	000f423f 	.word	0x000f423f

10046a60 <aci_gap_set_authorization_requirement>:
10046a60:	b510      	push	{r4, lr}
10046a62:	2900      	cmp	r1, #0
10046a64:	d003      	beq.n	10046a6e <aci_gap_set_authorization_requirement+0xe>
10046a66:	2901      	cmp	r1, #1
10046a68:	d001      	beq.n	10046a6e <aci_gap_set_authorization_requirement+0xe>
10046a6a:	2042      	movs	r0, #66	; 0x42
10046a6c:	bd10      	pop	{r4, pc}
10046a6e:	f014 f905 	bl	1005ac7c <SMP_set_authorization_request>
10046a72:	bd10      	pop	{r4, pc}

10046a74 <aci_gap_set_broadcast_mode>:
10046a74:	b5f0      	push	{r4, r5, r6, r7, lr}
10046a76:	b085      	sub	sp, #20
10046a78:	468c      	mov	ip, r1
10046a7a:	4686      	mov	lr, r0
10046a7c:	2500      	movs	r5, #0
10046a7e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
10046a80:	9e0c      	ldr	r6, [sp, #48]	; 0x30
10046a82:	990b      	ldr	r1, [sp, #44]	; 0x2c
10046a84:	980d      	ldr	r0, [sp, #52]	; 0x34
10046a86:	462c      	mov	r4, r5
10046a88:	2a02      	cmp	r2, #2
10046a8a:	d004      	beq.n	10046a96 <aci_gap_set_broadcast_mode+0x22>
10046a8c:	2a03      	cmp	r2, #3
10046a8e:	d002      	beq.n	10046a96 <aci_gap_set_broadcast_mode+0x22>
10046a90:	2042      	movs	r0, #66	; 0x42
10046a92:	b005      	add	sp, #20
10046a94:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046a96:	2f00      	cmp	r7, #0
10046a98:	d000      	beq.n	10046a9c <aci_gap_set_broadcast_mode+0x28>
10046a9a:	460c      	mov	r4, r1
10046a9c:	2e00      	cmp	r6, #0
10046a9e:	d000      	beq.n	10046aa2 <aci_gap_set_broadcast_mode+0x2e>
10046aa0:	4605      	mov	r5, r0
10046aa2:	4661      	mov	r1, ip
10046aa4:	4670      	mov	r0, lr
10046aa6:	9700      	str	r7, [sp, #0]
10046aa8:	9602      	str	r6, [sp, #8]
10046aaa:	9503      	str	r5, [sp, #12]
10046aac:	9401      	str	r4, [sp, #4]
10046aae:	f001 f865 	bl	10047b7c <GAP_Set_Broadcast_Mode>
10046ab2:	e7ee      	b.n	10046a92 <aci_gap_set_broadcast_mode+0x1e>

10046ab4 <aci_gap_set_direct_connectable>:
10046ab4:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10046ab6:	9d06      	ldr	r5, [sp, #24]
10046ab8:	9c07      	ldr	r4, [sp, #28]
10046aba:	2901      	cmp	r1, #1
10046abc:	d003      	beq.n	10046ac6 <aci_gap_set_direct_connectable+0x12>
10046abe:	2904      	cmp	r1, #4
10046ac0:	d001      	beq.n	10046ac6 <aci_gap_set_direct_connectable+0x12>
10046ac2:	2042      	movs	r0, #66	; 0x42
10046ac4:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10046ac6:	2a01      	cmp	r2, #1
10046ac8:	d001      	beq.n	10046ace <aci_gap_set_direct_connectable+0x1a>
10046aca:	2a00      	cmp	r2, #0
10046acc:	d1f9      	bne.n	10046ac2 <aci_gap_set_direct_connectable+0xe>
10046ace:	9500      	str	r5, [sp, #0]
10046ad0:	9401      	str	r4, [sp, #4]
10046ad2:	f001 f877 	bl	10047bc4 <GAP_Set_Direct_Connectable_Mode>
10046ad6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10046ad8 <aci_gap_set_discoverable>:
10046ad8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10046ada:	b087      	sub	sp, #28
10046adc:	9d10      	ldr	r5, [sp, #64]	; 0x40
10046ade:	9e15      	ldr	r6, [sp, #84]	; 0x54
10046ae0:	9c16      	ldr	r4, [sp, #88]	; 0x58
10046ae2:	9301      	str	r3, [sp, #4]
10046ae4:	9502      	str	r5, [sp, #8]
10046ae6:	9400      	str	r4, [sp, #0]
10046ae8:	a807      	add	r0, sp, #28
10046aea:	c807      	ldmia	r0, {r0, r1, r2}
10046aec:	461f      	mov	r7, r3
10046aee:	4633      	mov	r3, r6
10046af0:	f7ff fe7c 	bl	100467ec <_aci_gap_set_discoverable_param_check>
10046af4:	2800      	cmp	r0, #0
10046af6:	d10e      	bne.n	10046b16 <aci_gap_set_discoverable+0x3e>
10046af8:	9813      	ldr	r0, [sp, #76]	; 0x4c
10046afa:	9914      	ldr	r1, [sp, #80]	; 0x50
10046afc:	aa03      	add	r2, sp, #12
10046afe:	9406      	str	r4, [sp, #24]
10046b00:	c243      	stmia	r2!, {r0, r1, r6}
10046b02:	9811      	ldr	r0, [sp, #68]	; 0x44
10046b04:	9912      	ldr	r1, [sp, #72]	; 0x48
10046b06:	9001      	str	r0, [sp, #4]
10046b08:	9500      	str	r5, [sp, #0]
10046b0a:	9102      	str	r1, [sp, #8]
10046b0c:	a807      	add	r0, sp, #28
10046b0e:	c807      	ldmia	r0, {r0, r1, r2}
10046b10:	463b      	mov	r3, r7
10046b12:	f001 f86f 	bl	10047bf4 <GAP_Set_Discoverable_Mode>
10046b16:	b00b      	add	sp, #44	; 0x2c
10046b18:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10046b1c <aci_gap_set_event_mask>:
10046b1c:	b501      	push	{r0, lr}
10046b1e:	4806      	ldr	r0, [pc, #24]	; (10046b38 <aci_gap_set_event_mask+0x1c>)
10046b20:	4669      	mov	r1, sp
10046b22:	6802      	ldr	r2, [r0, #0]
10046b24:	2037      	movs	r0, #55	; 0x37
10046b26:	0140      	lsls	r0, r0, #5
10046b28:	7809      	ldrb	r1, [r1, #0]
10046b2a:	1810      	adds	r0, r2, r0
10046b2c:	7281      	strb	r1, [r0, #10]
10046b2e:	4669      	mov	r1, sp
10046b30:	7849      	ldrb	r1, [r1, #1]
10046b32:	72c1      	strb	r1, [r0, #11]
10046b34:	2000      	movs	r0, #0
10046b36:	bd08      	pop	{r3, pc}
10046b38:	20000d64 	.word	0x20000d64

10046b3c <aci_gap_set_io_capability>:
10046b3c:	b510      	push	{r4, lr}
10046b3e:	2804      	cmp	r0, #4
10046b40:	d901      	bls.n	10046b46 <aci_gap_set_io_capability+0xa>
10046b42:	2042      	movs	r0, #66	; 0x42
10046b44:	bd10      	pop	{r4, pc}
10046b46:	f014 f8b7 	bl	1005acb8 <SMP_set_io_capabilities>
10046b4a:	bd10      	pop	{r4, pc}

10046b4c <aci_gap_set_limited_discoverable>:
10046b4c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10046b4e:	b087      	sub	sp, #28
10046b50:	9d10      	ldr	r5, [sp, #64]	; 0x40
10046b52:	9e15      	ldr	r6, [sp, #84]	; 0x54
10046b54:	9c16      	ldr	r4, [sp, #88]	; 0x58
10046b56:	9301      	str	r3, [sp, #4]
10046b58:	9502      	str	r5, [sp, #8]
10046b5a:	9400      	str	r4, [sp, #0]
10046b5c:	a807      	add	r0, sp, #28
10046b5e:	c807      	ldmia	r0, {r0, r1, r2}
10046b60:	461f      	mov	r7, r3
10046b62:	4633      	mov	r3, r6
10046b64:	f7ff fe42 	bl	100467ec <_aci_gap_set_discoverable_param_check>
10046b68:	2800      	cmp	r0, #0
10046b6a:	d10e      	bne.n	10046b8a <aci_gap_set_limited_discoverable+0x3e>
10046b6c:	9813      	ldr	r0, [sp, #76]	; 0x4c
10046b6e:	9914      	ldr	r1, [sp, #80]	; 0x50
10046b70:	aa03      	add	r2, sp, #12
10046b72:	9406      	str	r4, [sp, #24]
10046b74:	c243      	stmia	r2!, {r0, r1, r6}
10046b76:	9811      	ldr	r0, [sp, #68]	; 0x44
10046b78:	9912      	ldr	r1, [sp, #72]	; 0x48
10046b7a:	9001      	str	r0, [sp, #4]
10046b7c:	9500      	str	r5, [sp, #0]
10046b7e:	9102      	str	r1, [sp, #8]
10046b80:	a807      	add	r0, sp, #28
10046b82:	c807      	ldmia	r0, {r0, r1, r2}
10046b84:	463b      	mov	r3, r7
10046b86:	f001 f851 	bl	10047c2c <GAP_Set_Limited_Discoverable_Mode>
10046b8a:	b00b      	add	sp, #44	; 0x2c
10046b8c:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046b8e <aci_gap_set_non_connectable>:
10046b8e:	b510      	push	{r4, lr}
10046b90:	2802      	cmp	r0, #2
10046b92:	d003      	beq.n	10046b9c <aci_gap_set_non_connectable+0xe>
10046b94:	2803      	cmp	r0, #3
10046b96:	d001      	beq.n	10046b9c <aci_gap_set_non_connectable+0xe>
10046b98:	2042      	movs	r0, #66	; 0x42
10046b9a:	bd10      	pop	{r4, pc}
10046b9c:	f001 f870 	bl	10047c80 <GAP_Set_NonConnectable_Mode>
10046ba0:	bd10      	pop	{r4, pc}

10046ba2 <aci_gap_set_non_discoverable>:
10046ba2:	b510      	push	{r4, lr}
10046ba4:	f001 f882 	bl	10047cac <GAP_Set_Non_Discoverable_Mode>
10046ba8:	0004      	movs	r4, r0
10046baa:	d102      	bne.n	10046bb2 <aci_gap_set_non_discoverable+0x10>
10046bac:	2001      	movs	r0, #1
10046bae:	f00e fceb 	bl	10055588 <GAP_Delete_ADType>
10046bb2:	4620      	mov	r0, r4
10046bb4:	bd10      	pop	{r4, pc}

10046bb6 <aci_gap_set_oob_data>:
10046bb6:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10046bb8:	9d07      	ldr	r5, [sp, #28]
10046bba:	9c06      	ldr	r4, [sp, #24]
10046bbc:	2801      	cmp	r0, #1
10046bbe:	d807      	bhi.n	10046bd0 <aci_gap_set_oob_data+0x1a>
10046bc0:	2b02      	cmp	r3, #2
10046bc2:	d805      	bhi.n	10046bd0 <aci_gap_set_oob_data+0x1a>
10046bc4:	2c10      	cmp	r4, #16
10046bc6:	d803      	bhi.n	10046bd0 <aci_gap_set_oob_data+0x1a>
10046bc8:	2901      	cmp	r1, #1
10046bca:	d003      	beq.n	10046bd4 <aci_gap_set_oob_data+0x1e>
10046bcc:	2900      	cmp	r1, #0
10046bce:	d001      	beq.n	10046bd4 <aci_gap_set_oob_data+0x1e>
10046bd0:	2042      	movs	r0, #66	; 0x42
10046bd2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10046bd4:	9501      	str	r5, [sp, #4]
10046bd6:	9400      	str	r4, [sp, #0]
10046bd8:	f013 fcee 	bl	1005a5b8 <SMP_aci_set_oob_data>
10046bdc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10046bde <aci_gap_set_undirected_connectable>:
10046bde:	b510      	push	{r4, lr}
10046be0:	2b00      	cmp	r3, #0
10046be2:	d003      	beq.n	10046bec <aci_gap_set_undirected_connectable+0xe>
10046be4:	2b03      	cmp	r3, #3
10046be6:	d001      	beq.n	10046bec <aci_gap_set_undirected_connectable+0xe>
10046be8:	2042      	movs	r0, #66	; 0x42
10046bea:	bd10      	pop	{r4, pc}
10046bec:	f001 f874 	bl	10047cd8 <GAP_Set_Undirected_Connectable_Mode>
10046bf0:	bd10      	pop	{r4, pc}

10046bf2 <aci_gap_slave_security_req>:
10046bf2:	b510      	push	{r4, lr}
10046bf4:	f011 ff40 	bl	10058a78 <SMP_SR_SecurityRequest_Send>
10046bf8:	bd10      	pop	{r4, pc}

10046bfa <aci_gap_start_auto_connection_establish_proc_api>:
10046bfa:	b5f0      	push	{r4, r5, r6, r7, lr}
10046bfc:	b08d      	sub	sp, #52	; 0x34
10046bfe:	469c      	mov	ip, r3
10046c00:	ab13      	add	r3, sp, #76	; 0x4c
10046c02:	cbf0      	ldmia	r3!, {r4, r5, r6, r7}
10046c04:	ab08      	add	r3, sp, #32
10046c06:	731a      	strb	r2, [r3, #12]
10046c08:	aa01      	add	r2, sp, #4
10046c0a:	c2f0      	stmia	r2!, {r4, r5, r6, r7}
10046c0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
10046c0e:	9200      	str	r2, [sp, #0]
10046c10:	460a      	mov	r2, r1
10046c12:	4601      	mov	r1, r0
10046c14:	4663      	mov	r3, ip
10046c16:	a805      	add	r0, sp, #20
10046c18:	f006 fb6e 	bl	1004d2f8 <hci_load_connParams>
10046c1c:	2800      	cmp	r0, #0
10046c1e:	d104      	bne.n	10046c2a <aci_gap_start_auto_connection_establish_proc_api+0x30>
10046c20:	aa05      	add	r2, sp, #20
10046c22:	9918      	ldr	r1, [sp, #96]	; 0x60
10046c24:	9817      	ldr	r0, [sp, #92]	; 0x5c
10046c26:	f001 f86f 	bl	10047d08 <GAP_Start_Auto_Conn_Establishment_Proc>
10046c2a:	b00d      	add	sp, #52	; 0x34
10046c2c:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046c2e <aci_gap_start_connection_update_api>:
10046c2e:	b5f0      	push	{r4, r5, r6, r7, lr}
10046c30:	b089      	sub	sp, #36	; 0x24
10046c32:	af0e      	add	r7, sp, #56	; 0x38
10046c34:	cf70      	ldmia	r7!, {r4, r5, r6}
10046c36:	af04      	add	r7, sp, #16
10046c38:	9703      	str	r7, [sp, #12]
10046c3a:	466f      	mov	r7, sp
10046c3c:	c770      	stmia	r7!, {r4, r5, r6}
10046c3e:	f006 f873 	bl	1004cd28 <hci_le_connection_update_param_check>
10046c42:	2800      	cmp	r0, #0
10046c44:	d102      	bne.n	10046c4c <aci_gap_start_connection_update_api+0x1e>
10046c46:	a804      	add	r0, sp, #16
10046c48:	f00e fa9e 	bl	10055188 <GAP_Connection_Update>
10046c4c:	b009      	add	sp, #36	; 0x24
10046c4e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046c50 <aci_gap_start_general_connection_establish_proc_api>:
10046c50:	b530      	push	{r4, r5, lr}
10046c52:	b085      	sub	sp, #20
10046c54:	9300      	str	r3, [sp, #0]
10046c56:	4613      	mov	r3, r2
10046c58:	460a      	mov	r2, r1
10046c5a:	9d08      	ldr	r5, [sp, #32]
10046c5c:	9c09      	ldr	r4, [sp, #36]	; 0x24
10046c5e:	4601      	mov	r1, r0
10046c60:	9501      	str	r5, [sp, #4]
10046c62:	9402      	str	r4, [sp, #8]
10046c64:	a803      	add	r0, sp, #12
10046c66:	f000 f871 	bl	10046d4c <load_scanParams>
10046c6a:	2800      	cmp	r0, #0
10046c6c:	d103      	bne.n	10046c76 <aci_gap_start_general_connection_establish_proc_api+0x26>
10046c6e:	4621      	mov	r1, r4
10046c70:	a803      	add	r0, sp, #12
10046c72:	f001 f875 	bl	10047d60 <GAP_Start_General_Conn_Establishment_Proc>
10046c76:	b005      	add	sp, #20
10046c78:	bd30      	pop	{r4, r5, pc}

10046c7a <aci_gap_start_general_discovery_proc_api>:
10046c7a:	b510      	push	{r4, lr}
10046c7c:	f001 f89e 	bl	10047dbc <GAP_Start_General_Discovery_Procedure>
10046c80:	bd10      	pop	{r4, pc}

10046c82 <aci_gap_start_limited_discovery_proc_api>:
10046c82:	b510      	push	{r4, lr}
10046c84:	f001 f8be 	bl	10047e04 <GAP_Start_Limited_Discovery_Procedure>
10046c88:	bd10      	pop	{r4, pc}

10046c8a <aci_gap_start_name_discovery_proc_api>:
10046c8a:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10046c8c:	b08d      	sub	sp, #52	; 0x34
10046c8e:	4614      	mov	r4, r2
10046c90:	aa18      	add	r2, sp, #96	; 0x60
10046c92:	caec      	ldmia	r2, {r2, r3, r5, r6, r7}
10046c94:	9704      	str	r7, [sp, #16]
10046c96:	466f      	mov	r7, sp
10046c98:	c76c      	stmia	r7!, {r2, r3, r5, r6}
10046c9a:	460a      	mov	r2, r1
10046c9c:	4601      	mov	r1, r0
10046c9e:	a805      	add	r0, sp, #20
10046ca0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
10046ca2:	f006 fb29 	bl	1004d2f8 <hci_load_connParams>
10046ca6:	2800      	cmp	r0, #0
10046ca8:	d10a      	bne.n	10046cc0 <aci_gap_start_name_discovery_proc_api+0x36>
10046caa:	a808      	add	r0, sp, #32
10046cac:	7144      	strb	r4, [r0, #5]
10046cae:	2c01      	cmp	r4, #1
10046cb0:	d008      	beq.n	10046cc4 <aci_gap_start_name_discovery_proc_api+0x3a>
10046cb2:	2c00      	cmp	r4, #0
10046cb4:	d006      	beq.n	10046cc4 <aci_gap_start_name_discovery_proc_api+0x3a>
10046cb6:	2c02      	cmp	r4, #2
10046cb8:	d004      	beq.n	10046cc4 <aci_gap_start_name_discovery_proc_api+0x3a>
10046cba:	2c03      	cmp	r4, #3
10046cbc:	d002      	beq.n	10046cc4 <aci_gap_start_name_discovery_proc_api+0x3a>
10046cbe:	2042      	movs	r0, #66	; 0x42
10046cc0:	b011      	add	sp, #68	; 0x44
10046cc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046cc4:	a809      	add	r0, sp, #36	; 0x24
10046cc6:	2206      	movs	r2, #6
10046cc8:	3002      	adds	r0, #2
10046cca:	9910      	ldr	r1, [sp, #64]	; 0x40
10046ccc:	f7f9 fd59 	bl	10040782 <Osal_MemCpy>
10046cd0:	a908      	add	r1, sp, #32
10046cd2:	9816      	ldr	r0, [sp, #88]	; 0x58
10046cd4:	7308      	strb	r0, [r1, #12]
10046cd6:	a805      	add	r0, sp, #20
10046cd8:	f001 f8b8 	bl	10047e4c <GAP_Start_Name_Discovery_Procedure>
10046cdc:	e7f0      	b.n	10046cc0 <aci_gap_start_name_discovery_proc_api+0x36>

10046cde <aci_gap_start_observation_proc_api>:
10046cde:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10046ce0:	466c      	mov	r4, sp
10046ce2:	9e07      	ldr	r6, [sp, #28]
10046ce4:	9d06      	ldr	r5, [sp, #24]
10046ce6:	8020      	strh	r0, [r4, #0]
10046ce8:	8061      	strh	r1, [r4, #2]
10046cea:	7122      	strb	r2, [r4, #4]
10046cec:	7163      	strb	r3, [r4, #5]
10046cee:	71a5      	strb	r5, [r4, #6]
10046cf0:	71e6      	strb	r6, [r4, #7]
10046cf2:	4668      	mov	r0, sp
10046cf4:	f001 f8d2 	bl	10047e9c <GAP_Start_Observation_Procedure>
10046cf8:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10046cfa <aci_gap_start_selective_connection_establish_proc_api>:
10046cfa:	b5f0      	push	{r4, r5, r6, r7, lr}
10046cfc:	b085      	sub	sp, #20
10046cfe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
10046d00:	9300      	str	r3, [sp, #0]
10046d02:	4613      	mov	r3, r2
10046d04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
10046d06:	460a      	mov	r2, r1
10046d08:	9f0c      	ldr	r7, [sp, #48]	; 0x30
10046d0a:	4601      	mov	r1, r0
10046d0c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
10046d0e:	9601      	str	r6, [sp, #4]
10046d10:	9402      	str	r4, [sp, #8]
10046d12:	a803      	add	r0, sp, #12
10046d14:	f000 f81a 	bl	10046d4c <load_scanParams>
10046d18:	2800      	cmp	r0, #0
10046d1a:	d105      	bne.n	10046d28 <aci_gap_start_selective_connection_establish_proc_api+0x2e>
10046d1c:	4623      	mov	r3, r4
10046d1e:	aa03      	add	r2, sp, #12
10046d20:	4629      	mov	r1, r5
10046d22:	4638      	mov	r0, r7
10046d24:	f001 f8f4 	bl	10047f10 <GAP_Start_Selective_Conn_Establishment_Proc>
10046d28:	b005      	add	sp, #20
10046d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046d2c <aci_gap_terminate>:
10046d2c:	b510      	push	{r4, lr}
10046d2e:	f00e fcbb 	bl	100556a8 <GAP_Terminate_Link>
10046d32:	bd10      	pop	{r4, pc}

10046d34 <aci_gap_terminate_gap_proc_api>:
10046d34:	b510      	push	{r4, lr}
10046d36:	f001 f937 	bl	10047fa8 <GAP_Terminate_Gap_Procedure>
10046d3a:	bd10      	pop	{r4, pc}

10046d3c <aci_gap_update_adv_data>:
10046d3c:	b510      	push	{r4, lr}
10046d3e:	281f      	cmp	r0, #31
10046d40:	d901      	bls.n	10046d46 <aci_gap_update_adv_data+0xa>
10046d42:	2042      	movs	r0, #66	; 0x42
10046d44:	bd10      	pop	{r4, pc}
10046d46:	f00e fcb3 	bl	100556b0 <GAP_Update_Adv_Data>
10046d4a:	bd10      	pop	{r4, pc}

10046d4c <load_scanParams>:
10046d4c:	b570      	push	{r4, r5, r6, lr}
10046d4e:	9e04      	ldr	r6, [sp, #16]
10046d50:	9d06      	ldr	r5, [sp, #24]
10046d52:	9c05      	ldr	r4, [sp, #20]
10046d54:	7101      	strb	r1, [r0, #4]
10046d56:	8002      	strh	r2, [r0, #0]
10046d58:	8043      	strh	r3, [r0, #2]
10046d5a:	7186      	strb	r6, [r0, #6]
10046d5c:	7144      	strb	r4, [r0, #5]
10046d5e:	2900      	cmp	r1, #0
10046d60:	d001      	beq.n	10046d66 <load_scanParams+0x1a>
10046d62:	2901      	cmp	r1, #1
10046d64:	d112      	bne.n	10046d8c <load_scanParams+0x40>
10046d66:	480b      	ldr	r0, [pc, #44]	; (10046d94 <load_scanParams+0x48>)
10046d68:	1f12      	subs	r2, r2, #4
10046d6a:	4282      	cmp	r2, r0
10046d6c:	d20e      	bcs.n	10046d8c <load_scanParams+0x40>
10046d6e:	1f1b      	subs	r3, r3, #4
10046d70:	4283      	cmp	r3, r0
10046d72:	d20b      	bcs.n	10046d8c <load_scanParams+0x40>
10046d74:	2c00      	cmp	r4, #0
10046d76:	d005      	beq.n	10046d84 <load_scanParams+0x38>
10046d78:	2c01      	cmp	r4, #1
10046d7a:	d003      	beq.n	10046d84 <load_scanParams+0x38>
10046d7c:	2c02      	cmp	r4, #2
10046d7e:	d001      	beq.n	10046d84 <load_scanParams+0x38>
10046d80:	2c03      	cmp	r4, #3
10046d82:	d103      	bne.n	10046d8c <load_scanParams+0x40>
10046d84:	2d01      	cmp	r5, #1
10046d86:	d003      	beq.n	10046d90 <load_scanParams+0x44>
10046d88:	2d00      	cmp	r5, #0
10046d8a:	d001      	beq.n	10046d90 <load_scanParams+0x44>
10046d8c:	2042      	movs	r0, #66	; 0x42
10046d8e:	bd70      	pop	{r4, r5, r6, pc}
10046d90:	2000      	movs	r0, #0
10046d92:	bd70      	pop	{r4, r5, r6, pc}
10046d94:	00003ffd 	.word	0x00003ffd

10046d98 <_load_uuid>:
10046d98:	b570      	push	{r4, r5, r6, lr}
10046d9a:	461c      	mov	r4, r3
10046d9c:	4613      	mov	r3, r2
10046d9e:	460d      	mov	r5, r1
10046da0:	2c01      	cmp	r4, #1
10046da2:	d003      	beq.n	10046dac <_load_uuid+0x14>
10046da4:	2c02      	cmp	r4, #2
10046da6:	d003      	beq.n	10046db0 <_load_uuid+0x18>
10046da8:	2042      	movs	r0, #66	; 0x42
10046daa:	bd70      	pop	{r4, r5, r6, pc}
10046dac:	2202      	movs	r2, #2
10046dae:	e000      	b.n	10046db2 <_load_uuid+0x1a>
10046db0:	2210      	movs	r2, #16
10046db2:	4619      	mov	r1, r3
10046db4:	f7f9 fce5 	bl	10040782 <Osal_MemCpy>
10046db8:	702c      	strb	r4, [r5, #0]
10046dba:	2000      	movs	r0, #0
10046dbc:	bd70      	pop	{r4, r5, r6, pc}

10046dbe <aci_att_execute_write_req>:
10046dbe:	b510      	push	{r4, lr}
10046dc0:	f001 fe0a 	bl	100489d8 <Gatt_Execute_Write_Req>
10046dc4:	bd10      	pop	{r4, pc}

10046dc6 <aci_att_find_by_type_value_req>:
10046dc6:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10046dc8:	466c      	mov	r4, sp
10046dca:	9e09      	ldr	r6, [sp, #36]	; 0x24
10046dcc:	9d08      	ldr	r5, [sp, #32]
10046dce:	8020      	strh	r0, [r4, #0]
10046dd0:	8061      	strh	r1, [r4, #2]
10046dd2:	80a2      	strh	r2, [r4, #4]
10046dd4:	80e3      	strh	r3, [r4, #6]
10046dd6:	8125      	strh	r5, [r4, #8]
10046dd8:	4631      	mov	r1, r6
10046dda:	4668      	mov	r0, sp
10046ddc:	f001 fe05 	bl	100489ea <Gatt_Find_Attr_By_Typ_And_Value_Req>
10046de0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10046de2 <aci_att_find_info_req>:
10046de2:	b510      	push	{r4, lr}
10046de4:	f001 fe4c 	bl	10048a80 <Gatt_Find_Information_Req>
10046de8:	bd10      	pop	{r4, pc}

10046dea <aci_att_prepare_write_req>:
10046dea:	b538      	push	{r3, r4, r5, lr}
10046dec:	466d      	mov	r5, sp
10046dee:	9c04      	ldr	r4, [sp, #16]
10046df0:	802a      	strh	r2, [r5, #0]
10046df2:	806b      	strh	r3, [r5, #2]
10046df4:	4623      	mov	r3, r4
10046df6:	466a      	mov	r2, sp
10046df8:	f001 fef6 	bl	10048be8 <Gatt_Prepare_Write_Req>
10046dfc:	bd38      	pop	{r3, r4, r5, pc}

10046dfe <aci_att_read_by_group_type_req>:
10046dfe:	b570      	push	{r4, r5, r6, lr}
10046e00:	b086      	sub	sp, #24
10046e02:	460d      	mov	r5, r1
10046e04:	4614      	mov	r4, r2
10046e06:	4606      	mov	r6, r0
10046e08:	4669      	mov	r1, sp
10046e0a:	1c88      	adds	r0, r1, #2
10046e0c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10046e0e:	f7ff ffc3 	bl	10046d98 <_load_uuid>
10046e12:	2800      	cmp	r0, #0
10046e14:	d105      	bne.n	10046e22 <aci_att_read_by_group_type_req+0x24>
10046e16:	466b      	mov	r3, sp
10046e18:	4622      	mov	r2, r4
10046e1a:	4629      	mov	r1, r5
10046e1c:	4630      	mov	r0, r6
10046e1e:	f001 ff1b 	bl	10048c58 <Gatt_Read_Attr_By_Grp_Type_Req>
10046e22:	b006      	add	sp, #24
10046e24:	bd70      	pop	{r4, r5, r6, pc}

10046e26 <aci_att_read_by_type_req>:
10046e26:	b570      	push	{r4, r5, r6, lr}
10046e28:	b086      	sub	sp, #24
10046e2a:	460d      	mov	r5, r1
10046e2c:	4614      	mov	r4, r2
10046e2e:	4606      	mov	r6, r0
10046e30:	4669      	mov	r1, sp
10046e32:	1c88      	adds	r0, r1, #2
10046e34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10046e36:	f7ff ffaf 	bl	10046d98 <_load_uuid>
10046e3a:	2800      	cmp	r0, #0
10046e3c:	d105      	bne.n	10046e4a <aci_att_read_by_type_req+0x24>
10046e3e:	466b      	mov	r3, sp
10046e40:	4622      	mov	r2, r4
10046e42:	4629      	mov	r1, r5
10046e44:	4630      	mov	r0, r6
10046e46:	f001 ff1f 	bl	10048c88 <Gatt_Read_Attr_By_Type_Req>
10046e4a:	b006      	add	sp, #24
10046e4c:	bd70      	pop	{r4, r5, r6, pc}

10046e4e <aci_gatt_add_char>:
10046e4e:	b5f0      	push	{r4, r5, r6, r7, lr}
10046e50:	b087      	sub	sp, #28
10046e52:	461c      	mov	r4, r3
10046e54:	460b      	mov	r3, r1
10046e56:	4605      	mov	r5, r0
10046e58:	a900      	add	r1, sp, #0
10046e5a:	3102      	adds	r1, #2
10046e5c:	a801      	add	r0, sp, #4
10046e5e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
10046e60:	9e0d      	ldr	r6, [sp, #52]	; 0x34
10046e62:	f7ff ff99 	bl	10046d98 <_load_uuid>
10046e66:	2800      	cmp	r0, #0
10046e68:	d10e      	bne.n	10046e88 <aci_gatt_add_char+0x3a>
10046e6a:	4668      	mov	r0, sp
10046e6c:	8005      	strh	r5, [r0, #0]
10046e6e:	8284      	strh	r4, [r0, #20]
10046e70:	7587      	strb	r7, [r0, #22]
10046e72:	75c6      	strb	r6, [r0, #23]
10046e74:	990e      	ldr	r1, [sp, #56]	; 0x38
10046e76:	7601      	strb	r1, [r0, #24]
10046e78:	990f      	ldr	r1, [sp, #60]	; 0x3c
10046e7a:	7641      	strb	r1, [r0, #25]
10046e7c:	9910      	ldr	r1, [sp, #64]	; 0x40
10046e7e:	7681      	strb	r1, [r0, #26]
10046e80:	4669      	mov	r1, sp
10046e82:	9811      	ldr	r0, [sp, #68]	; 0x44
10046e84:	f003 fb6a 	bl	1004a55c <Gatt_Add_Characteristic>
10046e88:	b007      	add	sp, #28
10046e8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046e8c <aci_gatt_add_char_desc>:
10046e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
10046e8e:	b08b      	sub	sp, #44	; 0x2c
10046e90:	469c      	mov	ip, r3
10046e92:	460c      	mov	r4, r1
10046e94:	4605      	mov	r5, r0
10046e96:	4613      	mov	r3, r2
10046e98:	4662      	mov	r2, ip
10046e9a:	a801      	add	r0, sp, #4
10046e9c:	a906      	add	r1, sp, #24
10046e9e:	9f13      	ldr	r7, [sp, #76]	; 0x4c
10046ea0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
10046ea2:	f7ff ff79 	bl	10046d98 <_load_uuid>
10046ea6:	2800      	cmp	r0, #0
10046ea8:	d116      	bne.n	10046ed8 <aci_gatt_add_char_desc+0x4c>
10046eaa:	9812      	ldr	r0, [sp, #72]	; 0x48
10046eac:	9007      	str	r0, [sp, #28]
10046eae:	4668      	mov	r0, sp
10046eb0:	8005      	strh	r5, [r0, #0]
10046eb2:	8044      	strh	r4, [r0, #2]
10046eb4:	a808      	add	r0, sp, #32
10046eb6:	7007      	strb	r7, [r0, #0]
10046eb8:	9914      	ldr	r1, [sp, #80]	; 0x50
10046eba:	7041      	strb	r1, [r0, #1]
10046ebc:	9915      	ldr	r1, [sp, #84]	; 0x54
10046ebe:	7081      	strb	r1, [r0, #2]
10046ec0:	9916      	ldr	r1, [sp, #88]	; 0x58
10046ec2:	70c1      	strb	r1, [r0, #3]
10046ec4:	7106      	strb	r6, [r0, #4]
10046ec6:	4668      	mov	r0, sp
10046ec8:	9911      	ldr	r1, [sp, #68]	; 0x44
10046eca:	8281      	strh	r1, [r0, #20]
10046ecc:	9910      	ldr	r1, [sp, #64]	; 0x40
10046ece:	82c1      	strh	r1, [r0, #22]
10046ed0:	4669      	mov	r1, sp
10046ed2:	9818      	ldr	r0, [sp, #96]	; 0x60
10046ed4:	f003 fa92 	bl	1004a3fc <Gatt_Add_Charac_Desc>
10046ed8:	b00b      	add	sp, #44	; 0x2c
10046eda:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046edc <aci_gatt_add_service>:
10046edc:	b570      	push	{r4, r5, r6, lr}
10046ede:	b086      	sub	sp, #24
10046ee0:	4614      	mov	r4, r2
10046ee2:	461d      	mov	r5, r3
10046ee4:	460a      	mov	r2, r1
10046ee6:	4603      	mov	r3, r0
10046ee8:	4669      	mov	r1, sp
10046eea:	1c88      	adds	r0, r1, #2
10046eec:	9e0a      	ldr	r6, [sp, #40]	; 0x28
10046eee:	f7ff ff53 	bl	10046d98 <_load_uuid>
10046ef2:	2800      	cmp	r0, #0
10046ef4:	d104      	bne.n	10046f00 <aci_gatt_add_service+0x24>
10046ef6:	2c01      	cmp	r4, #1
10046ef8:	d004      	beq.n	10046f04 <aci_gatt_add_service+0x28>
10046efa:	2c02      	cmp	r4, #2
10046efc:	d002      	beq.n	10046f04 <aci_gatt_add_service+0x28>
10046efe:	2042      	movs	r0, #66	; 0x42
10046f00:	b006      	add	sp, #24
10046f02:	bd70      	pop	{r4, r5, r6, pc}
10046f04:	4623      	mov	r3, r4
10046f06:	462a      	mov	r2, r5
10046f08:	4669      	mov	r1, sp
10046f0a:	4630      	mov	r0, r6
10046f0c:	f003 fd70 	bl	1004a9f0 <Gatt_Add_Service>
10046f10:	e7f6      	b.n	10046f00 <aci_gatt_add_service+0x24>

10046f12 <aci_gatt_allow_read>:
10046f12:	b510      	push	{r4, lr}
10046f14:	2200      	movs	r2, #0
10046f16:	4611      	mov	r1, r2
10046f18:	f003 fe1a 	bl	1004ab50 <Gatt_Appl_Auth_For_Read>
10046f1c:	bd10      	pop	{r4, pc}

10046f1e <aci_gatt_confirm_indication>:
10046f1e:	b510      	push	{r4, lr}
10046f20:	f001 fb56 	bl	100485d0 <Gatt_Confirm_Indication>
10046f24:	bd10      	pop	{r4, pc}

10046f26 <aci_gatt_del_char>:
10046f26:	b510      	push	{r4, lr}
10046f28:	f003 ff62 	bl	1004adf0 <Gatt_Delete_Characteristic>
10046f2c:	bd10      	pop	{r4, pc}

10046f2e <aci_gatt_del_include_service>:
10046f2e:	b510      	push	{r4, lr}
10046f30:	f003 ffa6 	bl	1004ae80 <Gatt_Delete_Include_Service>
10046f34:	bd10      	pop	{r4, pc}

10046f36 <aci_gatt_del_service>:
10046f36:	b510      	push	{r4, lr}
10046f38:	f003 ffd6 	bl	1004aee8 <Gatt_Delete_Service>
10046f3c:	bd10      	pop	{r4, pc}

10046f3e <aci_gatt_deny_read>:
10046f3e:	b510      	push	{r4, lr}
10046f40:	460a      	mov	r2, r1
10046f42:	2101      	movs	r1, #1
10046f44:	f003 fe04 	bl	1004ab50 <Gatt_Appl_Auth_For_Read>
10046f48:	bd10      	pop	{r4, pc}

10046f4a <aci_gatt_disc_all_char_desc>:
10046f4a:	b510      	push	{r4, lr}
10046f4c:	f001 fc2e 	bl	100487ac <Gatt_Disc_Charac_Desc>
10046f50:	bd10      	pop	{r4, pc}

10046f52 <aci_gatt_disc_all_char_of_service>:
10046f52:	b510      	push	{r4, lr}
10046f54:	f001 fb68 	bl	10048628 <Gatt_Disc_All_Charac_Of_Serv>
10046f58:	bd10      	pop	{r4, pc}

10046f5a <aci_gatt_disc_all_primary_services>:
10046f5a:	b510      	push	{r4, lr}
10046f5c:	f001 fb9a 	bl	10048694 <Gatt_Disc_All_Prim_Services>
10046f60:	bd10      	pop	{r4, pc}

10046f62 <aci_gatt_disc_char_by_uuid>:
10046f62:	b570      	push	{r4, r5, r6, lr}
10046f64:	b086      	sub	sp, #24
10046f66:	460d      	mov	r5, r1
10046f68:	4614      	mov	r4, r2
10046f6a:	4606      	mov	r6, r0
10046f6c:	4669      	mov	r1, sp
10046f6e:	1c88      	adds	r0, r1, #2
10046f70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10046f72:	f7ff ff11 	bl	10046d98 <_load_uuid>
10046f76:	2800      	cmp	r0, #0
10046f78:	d105      	bne.n	10046f86 <aci_gatt_disc_char_by_uuid+0x24>
10046f7a:	466b      	mov	r3, sp
10046f7c:	4622      	mov	r2, r4
10046f7e:	4629      	mov	r1, r5
10046f80:	4630      	mov	r0, r6
10046f82:	f001 fbbd 	bl	10048700 <Gatt_Disc_Charac_By_Uuid>
10046f86:	b006      	add	sp, #24
10046f88:	bd70      	pop	{r4, r5, r6, pc}

10046f8a <aci_gatt_disc_primary_service_by_uuid>:
10046f8a:	b510      	push	{r4, lr}
10046f8c:	b086      	sub	sp, #24
10046f8e:	460b      	mov	r3, r1
10046f90:	4604      	mov	r4, r0
10046f92:	4669      	mov	r1, sp
10046f94:	1c88      	adds	r0, r1, #2
10046f96:	f7ff feff 	bl	10046d98 <_load_uuid>
10046f9a:	2800      	cmp	r0, #0
10046f9c:	d103      	bne.n	10046fa6 <aci_gatt_disc_primary_service_by_uuid+0x1c>
10046f9e:	4669      	mov	r1, sp
10046fa0:	4620      	mov	r0, r4
10046fa2:	f001 fc39 	bl	10048818 <Gatt_Disc_Prim_serv_By_Uuid>
10046fa6:	b006      	add	sp, #24
10046fa8:	bd10      	pop	{r4, pc}

10046faa <aci_gatt_exchange_config>:
10046faa:	b510      	push	{r4, lr}
10046fac:	f001 fc8a 	bl	100488c4 <Gatt_Exchange_Configuration>
10046fb0:	bd10      	pop	{r4, pc}

10046fb2 <aci_gatt_find_included_services>:
10046fb2:	b510      	push	{r4, lr}
10046fb4:	f001 fd2e 	bl	10048a14 <Gatt_Find_Included_Services>
10046fb8:	bd10      	pop	{r4, pc}

10046fba <aci_gatt_include_service>:
10046fba:	b5f0      	push	{r4, r5, r6, r7, lr}
10046fbc:	b087      	sub	sp, #28
10046fbe:	4606      	mov	r6, r0
10046fc0:	4614      	mov	r4, r2
10046fc2:	460d      	mov	r5, r1
10046fc4:	a802      	add	r0, sp, #8
10046fc6:	1e81      	subs	r1, r0, #2
10046fc8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
10046fca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10046fcc:	f7ff fee4 	bl	10046d98 <_load_uuid>
10046fd0:	2800      	cmp	r0, #0
10046fd2:	d107      	bne.n	10046fe4 <aci_gatt_include_service+0x2a>
10046fd4:	4668      	mov	r0, sp
10046fd6:	8006      	strh	r6, [r0, #0]
10046fd8:	8045      	strh	r5, [r0, #2]
10046fda:	8084      	strh	r4, [r0, #4]
10046fdc:	4669      	mov	r1, sp
10046fde:	4638      	mov	r0, r7
10046fe0:	f004 f848 	bl	1004b074 <Gatt_Include_Service>
10046fe4:	b007      	add	sp, #28
10046fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10046fe8 <aci_gatt_init>:
10046fe8:	b510      	push	{r4, lr}
10046fea:	f004 faa3 	bl	1004b534 <Gatt_Server_Init>
10046fee:	bd10      	pop	{r4, pc}

10046ff0 <aci_gatt_read_char_desc>:
10046ff0:	b510      	push	{r4, lr}
10046ff2:	f001 feac 	bl	10048d4e <Gatt_Read_Charac_Desc>
10046ff6:	bd10      	pop	{r4, pc}

10046ff8 <aci_gatt_read_char_value>:
10046ff8:	b510      	push	{r4, lr}
10046ffa:	f001 feac 	bl	10048d56 <Gatt_Read_Charac_Val>
10046ffe:	bd10      	pop	{r4, pc}

10047000 <aci_gatt_read_handle_value>:
10047000:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10047002:	460e      	mov	r6, r1
10047004:	4614      	mov	r4, r2
10047006:	2100      	movs	r1, #0
10047008:	466a      	mov	r2, sp
1004700a:	461f      	mov	r7, r3
1004700c:	8011      	strh	r1, [r2, #0]
1004700e:	2800      	cmp	r0, #0
10047010:	d00c      	beq.n	1004702c <aci_gatt_read_handle_value+0x2c>
10047012:	aa01      	add	r2, sp, #4
10047014:	4669      	mov	r1, sp
10047016:	f004 f9a7 	bl	1004b368 <Gatt_Read_Handle_Val>
1004701a:	0005      	movs	r5, r0
1004701c:	d118      	bne.n	10047050 <aci_gatt_read_handle_value+0x50>
1004701e:	4668      	mov	r0, sp
10047020:	8800      	ldrh	r0, [r0, #0]
10047022:	8038      	strh	r0, [r7, #0]
10047024:	4668      	mov	r0, sp
10047026:	8800      	ldrh	r0, [r0, #0]
10047028:	4286      	cmp	r6, r0
1004702a:	d301      	bcc.n	10047030 <aci_gatt_read_handle_value+0x30>
1004702c:	2542      	movs	r5, #66	; 0x42
1004702e:	e00f      	b.n	10047050 <aci_gatt_read_handle_value+0x50>
10047030:	1b80      	subs	r0, r0, r6
10047032:	b280      	uxth	r0, r0
10047034:	42a0      	cmp	r0, r4
10047036:	d200      	bcs.n	1004703a <aci_gatt_read_handle_value+0x3a>
10047038:	4604      	mov	r4, r0
1004703a:	4668      	mov	r0, sp
1004703c:	8004      	strh	r4, [r0, #0]
1004703e:	9808      	ldr	r0, [sp, #32]
10047040:	8004      	strh	r4, [r0, #0]
10047042:	9801      	ldr	r0, [sp, #4]
10047044:	1981      	adds	r1, r0, r6
10047046:	4668      	mov	r0, sp
10047048:	8802      	ldrh	r2, [r0, #0]
1004704a:	9809      	ldr	r0, [sp, #36]	; 0x24
1004704c:	f7f9 fb99 	bl	10040782 <Osal_MemCpy>
10047050:	4628      	mov	r0, r5
10047052:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10047054 <aci_gatt_read_long_char_desc>:
10047054:	b510      	push	{r4, lr}
10047056:	f001 febe 	bl	10048dd6 <Gatt_Read_Long_Charac_Desc>
1004705a:	bd10      	pop	{r4, pc}

1004705c <aci_gatt_read_long_char_value>:
1004705c:	b510      	push	{r4, lr}
1004705e:	f001 febe 	bl	10048dde <Gatt_Read_Long_Charac_Value>
10047062:	bd10      	pop	{r4, pc}

10047064 <aci_gatt_read_multiple_char_value>:
10047064:	b510      	push	{r4, lr}
10047066:	f001 fd93 	bl	10048b90 <Gatt_Multi_Charac_Values>
1004706a:	bd10      	pop	{r4, pc}

1004706c <aci_gatt_read_using_char_uuid>:
1004706c:	b570      	push	{r4, r5, r6, lr}
1004706e:	b086      	sub	sp, #24
10047070:	460d      	mov	r5, r1
10047072:	4614      	mov	r4, r2
10047074:	4606      	mov	r6, r0
10047076:	4669      	mov	r1, sp
10047078:	1c88      	adds	r0, r1, #2
1004707a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004707c:	f7ff fe8c 	bl	10046d98 <_load_uuid>
10047080:	2800      	cmp	r0, #0
10047082:	d105      	bne.n	10047090 <aci_gatt_read_using_char_uuid+0x24>
10047084:	466b      	mov	r3, sp
10047086:	4622      	mov	r2, r4
10047088:	4629      	mov	r1, r5
1004708a:	4630      	mov	r0, r6
1004708c:	f001 fe1a 	bl	10048cc4 <Gatt_Read_Charac_By_Uuid>
10047090:	b006      	add	sp, #24
10047092:	bd70      	pop	{r4, r5, r6, pc}

10047094 <aci_gatt_set_access_permission>:
10047094:	b510      	push	{r4, lr}
10047096:	f004 fc4b 	bl	1004b930 <Gatt_Set_Attr_Access_Permission>
1004709a:	bd10      	pop	{r4, pc}

1004709c <aci_gatt_set_desc_value>:
1004709c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1004709e:	466c      	mov	r4, sp
100470a0:	9e09      	ldr	r6, [sp, #36]	; 0x24
100470a2:	9d08      	ldr	r5, [sp, #32]
100470a4:	8020      	strh	r0, [r4, #0]
100470a6:	8061      	strh	r1, [r4, #2]
100470a8:	80a2      	strh	r2, [r4, #4]
100470aa:	80e3      	strh	r3, [r4, #6]
100470ac:	8125      	strh	r5, [r4, #8]
100470ae:	4631      	mov	r1, r6
100470b0:	4668      	mov	r0, sp
100470b2:	f004 fc83 	bl	1004b9bc <Gatt_Set_Desc_Value>
100470b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100470b8 <aci_gatt_set_event_mask>:
100470b8:	b501      	push	{r0, lr}
100470ba:	4805      	ldr	r0, [pc, #20]	; (100470d0 <aci_gatt_set_event_mask+0x18>)
100470bc:	4b05      	ldr	r3, [pc, #20]	; (100470d4 <aci_gatt_set_event_mask+0x1c>)
100470be:	6800      	ldr	r0, [r0, #0]
100470c0:	2204      	movs	r2, #4
100470c2:	4669      	mov	r1, sp
100470c4:	18c0      	adds	r0, r0, r3
100470c6:	f7f9 fb5c 	bl	10040782 <Osal_MemCpy>
100470ca:	2000      	movs	r0, #0
100470cc:	bd08      	pop	{r3, pc}
100470ce:	0000      	.short	0x0000
100470d0:	20000d64 	.word	0x20000d64
100470d4:	000006ec 	.word	0x000006ec

100470d8 <aci_gatt_set_security_permission>:
100470d8:	b510      	push	{r4, lr}
100470da:	f00e fb8d 	bl	100557f8 <Gatt_Change_Attribute_Permission>
100470de:	bd10      	pop	{r4, pc}

100470e0 <aci_gatt_signed_write_without_resp>:
100470e0:	b510      	push	{r4, lr}
100470e2:	f001 ff1b 	bl	10048f1c <Gatt_Signed_Write_Without_Resp>
100470e6:	bd10      	pop	{r4, pc}

100470e8 <aci_gatt_update_char_value>:
100470e8:	b538      	push	{r3, r4, r5, lr}
100470ea:	466d      	mov	r5, sp
100470ec:	9c04      	ldr	r4, [sp, #16]
100470ee:	802a      	strh	r2, [r5, #0]
100470f0:	806b      	strh	r3, [r5, #2]
100470f2:	4623      	mov	r3, r4
100470f4:	466a      	mov	r2, sp
100470f6:	f004 fd9d 	bl	1004bc34 <Gatt_Update_Charac_Value>
100470fa:	bd38      	pop	{r3, r4, r5, pc}

100470fc <aci_gatt_update_char_value_ext>:
100470fc:	b5f0      	push	{r4, r5, r6, r7, lr}
100470fe:	b085      	sub	sp, #20
10047100:	4684      	mov	ip, r0
10047102:	a80a      	add	r0, sp, #40	; 0x28
10047104:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
10047106:	4668      	mov	r0, sp
10047108:	8185      	strh	r5, [r0, #12]
1004710a:	81c6      	strh	r6, [r0, #14]
1004710c:	a803      	add	r0, sp, #12
1004710e:	9001      	str	r0, [sp, #4]
10047110:	9702      	str	r7, [sp, #8]
10047112:	9400      	str	r4, [sp, #0]
10047114:	4660      	mov	r0, ip
10047116:	f004 fdc1 	bl	1004bc9c <Gatt_Update_Charac_Value_Ext>
1004711a:	b005      	add	sp, #20
1004711c:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004711e <aci_gatt_write_char_desc>:
1004711e:	b510      	push	{r4, lr}
10047120:	f002 f9c6 	bl	100494b0 <Gatt_Write_Charac_Desc>
10047124:	bd10      	pop	{r4, pc}

10047126 <aci_gatt_write_char_reliable>:
10047126:	b538      	push	{r3, r4, r5, lr}
10047128:	466d      	mov	r5, sp
1004712a:	9c04      	ldr	r4, [sp, #16]
1004712c:	802a      	strh	r2, [r5, #0]
1004712e:	806b      	strh	r3, [r5, #2]
10047130:	4623      	mov	r3, r4
10047132:	466a      	mov	r2, sp
10047134:	f002 f9c4 	bl	100494c0 <Gatt_Write_Charac_Reliable>
10047138:	bd38      	pop	{r3, r4, r5, pc}

1004713a <aci_gatt_write_char_value>:
1004713a:	b510      	push	{r4, lr}
1004713c:	f002 fa2c 	bl	10049598 <Gatt_Write_Charac_Value>
10047140:	bd10      	pop	{r4, pc}

10047142 <aci_gatt_write_long_char_desc>:
10047142:	b538      	push	{r3, r4, r5, lr}
10047144:	466d      	mov	r5, sp
10047146:	9c04      	ldr	r4, [sp, #16]
10047148:	802a      	strh	r2, [r5, #0]
1004714a:	806b      	strh	r3, [r5, #2]
1004714c:	4623      	mov	r3, r4
1004714e:	466a      	mov	r2, sp
10047150:	f002 fa99 	bl	10049686 <Gatt_Write_Long_Charac_Desc>
10047154:	bd38      	pop	{r3, r4, r5, pc}

10047156 <aci_gatt_write_long_char_value>:
10047156:	b538      	push	{r3, r4, r5, lr}
10047158:	466d      	mov	r5, sp
1004715a:	9c04      	ldr	r4, [sp, #16]
1004715c:	802a      	strh	r2, [r5, #0]
1004715e:	806b      	strh	r3, [r5, #2]
10047160:	4623      	mov	r3, r4
10047162:	466a      	mov	r2, sp
10047164:	f002 fa97 	bl	10049696 <Gatt_Write_Long_Charac_Values>
10047168:	bd38      	pop	{r3, r4, r5, pc}

1004716a <aci_gatt_write_resp>:
1004716a:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1004716c:	466c      	mov	r4, sp
1004716e:	9e09      	ldr	r6, [sp, #36]	; 0x24
10047170:	9d08      	ldr	r5, [sp, #32]
10047172:	8020      	strh	r0, [r4, #0]
10047174:	8061      	strh	r1, [r4, #2]
10047176:	7122      	strb	r2, [r4, #4]
10047178:	7163      	strb	r3, [r4, #5]
1004717a:	80e5      	strh	r5, [r4, #6]
1004717c:	4668      	mov	r0, sp
1004717e:	9602      	str	r6, [sp, #8]
10047180:	f003 fd5a 	bl	1004ac38 <Gatt_Appl_Auth_For_Write>
10047184:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10047186 <aci_gatt_write_without_resp>:
10047186:	b510      	push	{r4, lr}
10047188:	f002 fa8e 	bl	100496a8 <Gatt_Write_Without_Resp>
1004718c:	bd10      	pop	{r4, pc}
	...

10047190 <aci_hal_get_fw_build_number>:
10047190:	4901      	ldr	r1, [pc, #4]	; (10047198 <aci_hal_get_fw_build_number+0x8>)
10047192:	8001      	strh	r1, [r0, #0]
10047194:	2000      	movs	r0, #0
10047196:	4770      	bx	lr
10047198:	00000931 	.word	0x00000931

1004719c <aci_hal_le_tx_test_packet_number>:
1004719c:	4904      	ldr	r1, [pc, #16]	; (100471b0 <aci_hal_le_tx_test_packet_number+0x14>)
1004719e:	2209      	movs	r2, #9
100471a0:	6809      	ldr	r1, [r1, #0]
100471a2:	0212      	lsls	r2, r2, #8
100471a4:	1889      	adds	r1, r1, r2
100471a6:	6b09      	ldr	r1, [r1, #48]	; 0x30
100471a8:	8909      	ldrh	r1, [r1, #8]
100471aa:	6001      	str	r1, [r0, #0]
100471ac:	2000      	movs	r0, #0
100471ae:	4770      	bx	lr
100471b0:	20000d64 	.word	0x20000d64

100471b4 <aci_hal_read_config_data>:
100471b4:	b510      	push	{r4, lr}
100471b6:	f005 fabf 	bl	1004c738 <HAL_Read_ConfigData>
100471ba:	bd10      	pop	{r4, pc}

100471bc <aci_hal_set_event_mask>:
100471bc:	b501      	push	{r0, lr}
100471be:	4805      	ldr	r0, [pc, #20]	; (100471d4 <aci_hal_set_event_mask+0x18>)
100471c0:	4b05      	ldr	r3, [pc, #20]	; (100471d8 <aci_hal_set_event_mask+0x1c>)
100471c2:	6800      	ldr	r0, [r0, #0]
100471c4:	2204      	movs	r2, #4
100471c6:	4669      	mov	r1, sp
100471c8:	18c0      	adds	r0, r0, r3
100471ca:	f7f9 fada 	bl	10040782 <Osal_MemCpy>
100471ce:	2000      	movs	r0, #0
100471d0:	bd08      	pop	{r3, pc}
100471d2:	0000      	.short	0x0000
100471d4:	20000d64 	.word	0x20000d64
100471d8:	00000704 	.word	0x00000704

100471dc <aci_hal_set_tx_power_level>:
100471dc:	b510      	push	{r4, lr}
100471de:	f005 fae5 	bl	1004c7ac <HAL_Set_TX_Power_Level>
100471e2:	bd10      	pop	{r4, pc}

100471e4 <aci_hal_tone_start>:
100471e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100471e6:	4c35      	ldr	r4, [pc, #212]	; (100472bc <aci_hal_tone_start+0xd8>)
100471e8:	4606      	mov	r6, r0
100471ea:	6820      	ldr	r0, [r4, #0]
100471ec:	b087      	sub	sp, #28
100471ee:	3020      	adds	r0, #32
100471f0:	7f80      	ldrb	r0, [r0, #30]
100471f2:	460d      	mov	r5, r1
100471f4:	2800      	cmp	r0, #0
100471f6:	d002      	beq.n	100471fe <aci_hal_tone_start+0x1a>
100471f8:	200c      	movs	r0, #12
100471fa:	b007      	add	sp, #28
100471fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
100471fe:	2e28      	cmp	r6, #40	; 0x28
10047200:	d201      	bcs.n	10047206 <aci_hal_tone_start+0x22>
10047202:	2d02      	cmp	r5, #2
10047204:	d901      	bls.n	1004720a <aci_hal_tone_start+0x26>
10047206:	2012      	movs	r0, #18
10047208:	e7f7      	b.n	100471fa <aci_hal_tone_start+0x16>
1004720a:	f00f fcb9 	bl	10056b80 <LL_busy>
1004720e:	2800      	cmp	r0, #0
10047210:	d1f2      	bne.n	100471f8 <aci_hal_tone_start+0x14>
10047212:	482b      	ldr	r0, [pc, #172]	; (100472c0 <aci_hal_tone_start+0xdc>)
10047214:	0072      	lsls	r2, r6, #1
10047216:	2101      	movs	r1, #1
10047218:	1810      	adds	r0, r2, r0
1004721a:	0389      	lsls	r1, r1, #14
1004721c:	0400      	lsls	r0, r0, #16
1004721e:	2d01      	cmp	r5, #1
10047220:	d002      	beq.n	10047228 <aci_hal_tone_start+0x44>
10047222:	2d02      	cmp	r5, #2
10047224:	d002      	beq.n	1004722c <aci_hal_tone_start+0x48>
10047226:	e002      	b.n	1004722e <aci_hal_tone_start+0x4a>
10047228:	1840      	adds	r0, r0, r1
1004722a:	e000      	b.n	1004722e <aci_hal_tone_start+0x4a>
1004722c:	1a40      	subs	r0, r0, r1
1004722e:	0101      	lsls	r1, r0, #4
10047230:	0243      	lsls	r3, r0, #9
10047232:	0ec9      	lsrs	r1, r1, #27
10047234:	0f5b      	lsrs	r3, r3, #29
10047236:	00c9      	lsls	r1, r1, #3
10047238:	1c40      	adds	r0, r0, #1
1004723a:	4319      	orrs	r1, r3
1004723c:	0b03      	lsrs	r3, r0, #12
1004723e:	469c      	mov	ip, r3
10047240:	0103      	lsls	r3, r0, #4
10047242:	0906      	lsrs	r6, r0, #4
10047244:	6820      	ldr	r0, [r4, #0]
10047246:	3309      	adds	r3, #9
10047248:	3020      	adds	r0, #32
1004724a:	7f04      	ldrb	r4, [r0, #28]
1004724c:	469e      	mov	lr, r3
1004724e:	01a5      	lsls	r5, r4, #6
10047250:	2306      	movs	r3, #6
10047252:	7f44      	ldrb	r4, [r0, #29]
10047254:	431d      	orrs	r5, r3
10047256:	00e3      	lsls	r3, r4, #3
10047258:	432b      	orrs	r3, r5
1004725a:	2531      	movs	r5, #49	; 0x31
1004725c:	0064      	lsls	r4, r4, #1
1004725e:	432c      	orrs	r4, r5
10047260:	2501      	movs	r5, #1
10047262:	7785      	strb	r5, [r0, #30]
10047264:	2503      	movs	r5, #3
10047266:	4668      	mov	r0, sp
10047268:	7005      	strb	r5, [r0, #0]
1004726a:	2704      	movs	r7, #4
1004726c:	7047      	strb	r7, [r0, #1]
1004726e:	7082      	strb	r2, [r0, #2]
10047270:	70c3      	strb	r3, [r0, #3]
10047272:	2202      	movs	r2, #2
10047274:	7102      	strb	r2, [r0, #4]
10047276:	231c      	movs	r3, #28
10047278:	7143      	strb	r3, [r0, #5]
1004727a:	2373      	movs	r3, #115	; 0x73
1004727c:	7183      	strb	r3, [r0, #6]
1004727e:	71c5      	strb	r5, [r0, #7]
10047280:	2324      	movs	r3, #36	; 0x24
10047282:	7203      	strb	r3, [r0, #8]
10047284:	7244      	strb	r4, [r0, #9]
10047286:	233f      	movs	r3, #63	; 0x3f
10047288:	7283      	strb	r3, [r0, #10]
1004728a:	72c2      	strb	r2, [r0, #11]
1004728c:	2323      	movs	r3, #35	; 0x23
1004728e:	7303      	strb	r3, [r0, #12]
10047290:	7345      	strb	r5, [r0, #13]
10047292:	7382      	strb	r2, [r0, #14]
10047294:	73c3      	strb	r3, [r0, #15]
10047296:	2207      	movs	r2, #7
10047298:	7402      	strb	r2, [r0, #16]
1004729a:	2205      	movs	r2, #5
1004729c:	7442      	strb	r2, [r0, #17]
1004729e:	2228      	movs	r2, #40	; 0x28
100472a0:	7482      	strb	r2, [r0, #18]
100472a2:	74c1      	strb	r1, [r0, #19]
100472a4:	4663      	mov	r3, ip
100472a6:	7503      	strb	r3, [r0, #20]
100472a8:	7546      	strb	r6, [r0, #21]
100472aa:	4673      	mov	r3, lr
100472ac:	7583      	strb	r3, [r0, #22]
100472ae:	2100      	movs	r1, #0
100472b0:	75c1      	strb	r1, [r0, #23]
100472b2:	f00f fcff 	bl	10056cb4 <write_radio_config>
100472b6:	2000      	movs	r0, #0
100472b8:	e79f      	b.n	100471fa <aci_hal_tone_start+0x16>
100472ba:	0000      	.short	0x0000
100472bc:	20000d64 	.word	0x20000d64
100472c0:	00000962 	.word	0x00000962

100472c4 <aci_hal_tone_stop>:
100472c4:	b50e      	push	{r1, r2, r3, lr}
100472c6:	480f      	ldr	r0, [pc, #60]	; (10047304 <aci_hal_tone_stop+0x40>)
100472c8:	6801      	ldr	r1, [r0, #0]
100472ca:	3120      	adds	r1, #32
100472cc:	7f88      	ldrb	r0, [r1, #30]
100472ce:	2800      	cmp	r0, #0
100472d0:	d016      	beq.n	10047300 <aci_hal_tone_stop+0x3c>
100472d2:	2000      	movs	r0, #0
100472d4:	7788      	strb	r0, [r1, #30]
100472d6:	2204      	movs	r2, #4
100472d8:	4669      	mov	r1, sp
100472da:	700a      	strb	r2, [r1, #0]
100472dc:	2223      	movs	r2, #35	; 0x23
100472de:	704a      	strb	r2, [r1, #1]
100472e0:	7088      	strb	r0, [r1, #2]
100472e2:	220e      	movs	r2, #14
100472e4:	70ca      	strb	r2, [r1, #3]
100472e6:	7108      	strb	r0, [r1, #4]
100472e8:	2202      	movs	r2, #2
100472ea:	714a      	strb	r2, [r1, #5]
100472ec:	222b      	movs	r2, #43	; 0x2b
100472ee:	718a      	strb	r2, [r1, #6]
100472f0:	2208      	movs	r2, #8
100472f2:	71ca      	strb	r2, [r1, #7]
100472f4:	7208      	strb	r0, [r1, #8]
100472f6:	4668      	mov	r0, sp
100472f8:	f00f fcdc 	bl	10056cb4 <write_radio_config>
100472fc:	2000      	movs	r0, #0
100472fe:	bd0e      	pop	{r1, r2, r3, pc}
10047300:	200c      	movs	r0, #12
10047302:	bd0e      	pop	{r1, r2, r3, pc}
10047304:	20000d64 	.word	0x20000d64

10047308 <aci_hal_write_config_data>:
10047308:	b510      	push	{r4, lr}
1004730a:	f005 fa71 	bl	1004c7f0 <HAL_Write_ConfigData>
1004730e:	bd10      	pop	{r4, pc}

10047310 <aci_l2cap_connection_parameter_update_req>:
10047310:	b53e      	push	{r1, r2, r3, r4, r5, lr}
10047312:	466c      	mov	r4, sp
10047314:	9d06      	ldr	r5, [sp, #24]
10047316:	8020      	strh	r0, [r4, #0]
10047318:	8061      	strh	r1, [r4, #2]
1004731a:	80a2      	strh	r2, [r4, #4]
1004731c:	80e3      	strh	r3, [r4, #6]
1004731e:	8125      	strh	r5, [r4, #8]
10047320:	4668      	mov	r0, sp
10047322:	f006 fbb9 	bl	1004da98 <L2C_Build_Connect_Update_Req>
10047326:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10047328 <aci_l2cap_connection_parameter_update_resp_api>:
10047328:	b5f0      	push	{r4, r5, r6, r7, lr}
1004732a:	b085      	sub	sp, #20
1004732c:	466c      	mov	r4, sp
1004732e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
10047330:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10047332:	9d0e      	ldr	r5, [sp, #56]	; 0x38
10047334:	8020      	strh	r0, [r4, #0]
10047336:	8061      	strh	r1, [r4, #2]
10047338:	80a2      	strh	r2, [r4, #4]
1004733a:	80e3      	strh	r3, [r4, #6]
1004733c:	8127      	strh	r7, [r4, #8]
1004733e:	8166      	strh	r6, [r4, #10]
10047340:	980c      	ldr	r0, [sp, #48]	; 0x30
10047342:	81a0      	strh	r0, [r4, #12]
10047344:	462a      	mov	r2, r5
10047346:	4668      	mov	r0, sp
10047348:	990d      	ldr	r1, [sp, #52]	; 0x34
1004734a:	f006 fc1f 	bl	1004db8c <L2C_Build_Connect_Update_Resp>
1004734e:	b005      	add	sp, #20
10047350:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10047354 <BTLE_StackTick>:
10047354:	b570      	push	{r4, r5, r6, lr}
10047356:	f006 fa49 	bl	1004d7ec <Timer_ProcessQ>
1004735a:	4c1d      	ldr	r4, [pc, #116]	; (100473d0 <BTLE_StackTick+0x7c>)
1004735c:	2501      	movs	r5, #1
1004735e:	6820      	ldr	r0, [r4, #0]
10047360:	02ed      	lsls	r5, r5, #11
10047362:	1941      	adds	r1, r0, r5
10047364:	7909      	ldrb	r1, [r1, #4]
10047366:	2900      	cmp	r1, #0
10047368:	d109      	bne.n	1004737e <BTLE_StackTick+0x2a>
1004736a:	30a0      	adds	r0, #160	; 0xa0
1004736c:	7900      	ldrb	r0, [r0, #4]
1004736e:	07c0      	lsls	r0, r0, #31
10047370:	d027      	beq.n	100473c2 <BTLE_StackTick+0x6e>
10047372:	f005 fc71 	bl	1004cc58 <hci_acl_Process_Q>
10047376:	f005 fb5f 	bl	1004ca38 <Controller_Process_Q>
1004737a:	f014 fcf5 	bl	1005bd68 <Events_Process_Q>
1004737e:	f000 f8ff 	bl	10047580 <BlueNRG_Stack_Perform_Crystal_Check>
10047382:	6820      	ldr	r0, [r4, #0]
10047384:	4601      	mov	r1, r0
10047386:	3140      	adds	r1, #64	; 0x40
10047388:	780a      	ldrb	r2, [r1, #0]
1004738a:	79c9      	ldrb	r1, [r1, #7]
1004738c:	438a      	bics	r2, r1
1004738e:	d117      	bne.n	100473c0 <BTLE_StackTick+0x6c>
10047390:	213e      	movs	r1, #62	; 0x3e
10047392:	5c09      	ldrb	r1, [r1, r0]
10047394:	2900      	cmp	r1, #0
10047396:	d113      	bne.n	100473c0 <BTLE_StackTick+0x6c>
10047398:	490e      	ldr	r1, [pc, #56]	; (100473d4 <BTLE_StackTick+0x80>)
1004739a:	880a      	ldrh	r2, [r1, #0]
1004739c:	0712      	lsls	r2, r2, #28
1004739e:	d50f      	bpl.n	100473c0 <BTLE_StackTick+0x6c>
100473a0:	2209      	movs	r2, #9
100473a2:	06d2      	lsls	r2, r2, #27
100473a4:	6912      	ldr	r2, [r2, #16]
100473a6:	7a49      	ldrb	r1, [r1, #9]
100473a8:	6a83      	ldr	r3, [r0, #40]	; 0x28
100473aa:	1940      	adds	r0, r0, r5
100473ac:	6f00      	ldr	r0, [r0, #112]	; 0x70
100473ae:	00c9      	lsls	r1, r1, #3
100473b0:	1a80      	subs	r0, r0, r2
100473b2:	0200      	lsls	r0, r0, #8
100473b4:	1859      	adds	r1, r3, r1
100473b6:	1200      	asrs	r0, r0, #8
100473b8:	4281      	cmp	r1, r0
100473ba:	da01      	bge.n	100473c0 <BTLE_StackTick+0x6c>
100473bc:	f010 f9b0 	bl	10057720 <advance_transmit>
100473c0:	bd70      	pop	{r4, r5, r6, pc}
100473c2:	f000 fbbb 	bl	10047b3c <GAP_Process_Q>
100473c6:	f003 ff01 	bl	1004b1cc <Gatt_Process_Q>
100473ca:	f011 fa87 	bl	100588dc <SMP_Process_Q>
100473ce:	e7d2      	b.n	10047376 <BTLE_StackTick+0x22>
100473d0:	20000d64 	.word	0x20000d64
100473d4:	200000c0 	.word	0x200000c0

100473d8 <BlueNRG_Stack_Initialization>:
100473d8:	b510      	push	{r4, lr}
100473da:	7f83      	ldrb	r3, [r0, #30]
100473dc:	2201      	movs	r2, #1
100473de:	2400      	movs	r4, #0
100473e0:	0292      	lsls	r2, r2, #10
100473e2:	6841      	ldr	r1, [r0, #4]
100473e4:	2b08      	cmp	r3, #8
100473e6:	d903      	bls.n	100473f0 <BlueNRG_Stack_Initialization+0x18>
100473e8:	2442      	movs	r4, #66	; 0x42
100473ea:	4291      	cmp	r1, r2
100473ec:	d302      	bcc.n	100473f4 <BlueNRG_Stack_Initialization+0x1c>
100473ee:	e010      	b.n	10047412 <BlueNRG_Stack_Initialization+0x3a>
100473f0:	4291      	cmp	r1, r2
100473f2:	d201      	bcs.n	100473f8 <BlueNRG_Stack_Initialization+0x20>
100473f4:	2442      	movs	r4, #66	; 0x42
100473f6:	e00c      	b.n	10047412 <BlueNRG_Stack_Initialization+0x3a>
100473f8:	4601      	mov	r1, r0
100473fa:	2234      	movs	r2, #52	; 0x34
100473fc:	4806      	ldr	r0, [pc, #24]	; (10047418 <BlueNRG_Stack_Initialization+0x40>)
100473fe:	f7f9 f9c0 	bl	10040782 <Osal_MemCpy>
10047402:	f000 f87f 	bl	10047504 <BlueNRG_Stack_Initialize_RAM_check>
10047406:	2800      	cmp	r0, #0
10047408:	da01      	bge.n	1004740e <BlueNRG_Stack_Initialization+0x36>
1004740a:	2448      	movs	r4, #72	; 0x48
1004740c:	e001      	b.n	10047412 <BlueNRG_Stack_Initialization+0x3a>
1004740e:	f000 f927 	bl	10047660 <_BlueNRG_Stack_Initialization>
10047412:	4620      	mov	r0, r4
10047414:	bd10      	pop	{r4, pc}
10047416:	0000      	.short	0x0000
10047418:	200002dc 	.word	0x200002dc

1004741c <BlueNRG_Stack_Initialize_ConfigData>:
1004741c:	b53e      	push	{r1, r2, r3, r4, r5, lr}
1004741e:	4d17      	ldr	r5, [pc, #92]	; (1004747c <BlueNRG_Stack_Initialize_ConfigData+0x60>)
10047420:	4815      	ldr	r0, [pc, #84]	; (10047478 <BlueNRG_Stack_Initialize_ConfigData+0x5c>)
10047422:	6829      	ldr	r1, [r5, #0]
10047424:	7f82      	ldrb	r2, [r0, #30]
10047426:	4608      	mov	r0, r1
10047428:	31a0      	adds	r1, #160	; 0xa0
1004742a:	730a      	strb	r2, [r1, #12]
1004742c:	2400      	movs	r4, #0
1004742e:	3060      	adds	r0, #96	; 0x60
10047430:	7604      	strb	r4, [r0, #24]
10047432:	7644      	strb	r4, [r0, #25]
10047434:	7684      	strb	r4, [r0, #26]
10047436:	22e1      	movs	r2, #225	; 0xe1
10047438:	76c2      	strb	r2, [r0, #27]
1004743a:	2280      	movs	r2, #128	; 0x80
1004743c:	7702      	strb	r2, [r0, #28]
1004743e:	2202      	movs	r2, #2
10047440:	7742      	strb	r2, [r0, #29]
10047442:	2030      	movs	r0, #48	; 0x30
10047444:	7008      	strb	r0, [r1, #0]
10047446:	704c      	strb	r4, [r1, #1]
10047448:	aa02      	add	r2, sp, #8
1004744a:	a901      	add	r1, sp, #4
1004744c:	4668      	mov	r0, sp
1004744e:	f7f9 f987 	bl	10040760 <BLEPLAT_get_part_info>
10047452:	4668      	mov	r0, sp
10047454:	7800      	ldrb	r0, [r0, #0]
10047456:	22a2      	movs	r2, #162	; 0xa2
10047458:	0101      	lsls	r1, r0, #4
1004745a:	4668      	mov	r0, sp
1004745c:	7a00      	ldrb	r0, [r0, #8]
1004745e:	1c89      	adds	r1, r1, #2
10047460:	0200      	lsls	r0, r0, #8
10047462:	4301      	orrs	r1, r0
10047464:	4668      	mov	r0, sp
10047466:	7900      	ldrb	r0, [r0, #4]
10047468:	0300      	lsls	r0, r0, #12
1004746a:	4301      	orrs	r1, r0
1004746c:	6828      	ldr	r0, [r5, #0]
1004746e:	5211      	strh	r1, [r2, r0]
10047470:	30a0      	adds	r0, #160	; 0xa0
10047472:	7104      	strb	r4, [r0, #4]
10047474:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
10047476:	0000      	.short	0x0000
10047478:	200002dc 	.word	0x200002dc
1004747c:	20000d64 	.word	0x20000d64

10047480 <BlueNRG_Stack_Initialize_Layers>:
10047480:	b570      	push	{r4, r5, r6, lr}
10047482:	f006 f999 	bl	1004d7b8 <Timer_Init>
10047486:	f00f f85d 	bl	10056544 <LL_Init>
1004748a:	f00d faf1 	bl	10054a70 <PM_Init>
1004748e:	f015 fa51 	bl	1005c934 <Acl_Init>
10047492:	f006 fc3f 	bl	1004dd14 <L2C_Init>
10047496:	4c18      	ldr	r4, [pc, #96]	; (100474f8 <BlueNRG_Stack_Initialize_Layers+0x78>)
10047498:	4918      	ldr	r1, [pc, #96]	; (100474fc <BlueNRG_Stack_Initialize_Layers+0x7c>)
1004749a:	6820      	ldr	r0, [r4, #0]
1004749c:	4d18      	ldr	r5, [pc, #96]	; (10047500 <BlueNRG_Stack_Initialize_Layers+0x80>)
1004749e:	1840      	adds	r0, r0, r1
100474a0:	1081      	asrs	r1, r0, #2
100474a2:	2009      	movs	r0, #9
100474a4:	682a      	ldr	r2, [r5, #0]
100474a6:	0200      	lsls	r0, r0, #8
100474a8:	1810      	adds	r0, r2, r0
100474aa:	6741      	str	r1, [r0, #116]	; 0x74
100474ac:	6861      	ldr	r1, [r4, #4]
100474ae:	0889      	lsrs	r1, r1, #2
100474b0:	6781      	str	r1, [r0, #120]	; 0x78
100474b2:	68a1      	ldr	r1, [r4, #8]
100474b4:	0889      	lsrs	r1, r1, #2
100474b6:	67c1      	str	r1, [r0, #124]	; 0x7c
100474b8:	f013 f804 	bl	1005a4c4 <SMP_Init>
100474bc:	200f      	movs	r0, #15
100474be:	6829      	ldr	r1, [r5, #0]
100474c0:	01c0      	lsls	r0, r0, #7
100474c2:	8b22      	ldrh	r2, [r4, #24]
100474c4:	1808      	adds	r0, r1, r0
100474c6:	8182      	strh	r2, [r0, #12]
100474c8:	8b62      	ldrh	r2, [r4, #26]
100474ca:	81c2      	strh	r2, [r0, #14]
100474cc:	8ba2      	ldrh	r2, [r4, #28]
100474ce:	80c2      	strh	r2, [r0, #6]
100474d0:	8c62      	ldrh	r2, [r4, #34]	; 0x22
100474d2:	8102      	strh	r2, [r0, #8]
100474d4:	4622      	mov	r2, r4
100474d6:	3220      	adds	r2, #32
100474d8:	7812      	ldrb	r2, [r2, #0]
100474da:	7282      	strb	r2, [r0, #10]
100474dc:	223b      	movs	r2, #59	; 0x3b
100474de:	0152      	lsls	r2, r2, #5
100474e0:	2000      	movs	r0, #0
100474e2:	1889      	adds	r1, r1, r2
100474e4:	7508      	strb	r0, [r1, #20]
100474e6:	f000 fab7 	bl	10047a58 <GAP_Init_Context>
100474ea:	f005 fac1 	bl	1004ca70 <HCI_Init>
100474ee:	f005 fa3b 	bl	1004c968 <ble_HAL_Init>
100474f2:	f014 fcbf 	bl	1005be74 <Events_Process_init>
100474f6:	bd70      	pop	{r4, r5, r6, pc}
100474f8:	200002dc 	.word	0x200002dc
100474fc:	effc0000 	.word	0xeffc0000
10047500:	20000d64 	.word	0x20000d64

10047504 <BlueNRG_Stack_Initialize_RAM_check>:
10047504:	b570      	push	{r4, r5, r6, lr}
10047506:	2500      	movs	r5, #0
10047508:	43ed      	mvns	r5, r5
1004750a:	f7fa fb3f 	bl	10041b8c <data_length_extension_csr_ucfg>
1004750e:	2801      	cmp	r0, #1
10047510:	d02f      	beq.n	10047572 <BlueNRG_Stack_Initialize_RAM_check+0x6e>
10047512:	2300      	movs	r3, #0
10047514:	4918      	ldr	r1, [pc, #96]	; (10047578 <BlueNRG_Stack_Initialize_RAM_check+0x74>)
10047516:	2203      	movs	r2, #3
10047518:	8b88      	ldrh	r0, [r1, #28]
1004751a:	24ff      	movs	r4, #255	; 0xff
1004751c:	1e40      	subs	r0, r0, #1
1004751e:	4310      	orrs	r0, r2
10047520:	7f8a      	ldrb	r2, [r1, #30]
10047522:	3451      	adds	r4, #81	; 0x51
10047524:	4362      	muls	r2, r4
10047526:	1882      	adds	r2, r0, r2
10047528:	8b08      	ldrh	r0, [r1, #24]
1004752a:	2428      	movs	r4, #40	; 0x28
1004752c:	4360      	muls	r0, r4
1004752e:	1812      	adds	r2, r2, r0
10047530:	8b48      	ldrh	r0, [r1, #26]
10047532:	2430      	movs	r4, #48	; 0x30
10047534:	4360      	muls	r0, r4
10047536:	1812      	adds	r2, r2, r0
10047538:	4608      	mov	r0, r1
1004753a:	3020      	adds	r0, #32
1004753c:	7840      	ldrb	r0, [r0, #1]
1004753e:	242c      	movs	r4, #44	; 0x2c
10047540:	4360      	muls	r0, r4
10047542:	1810      	adds	r0, r2, r0
10047544:	4a0d      	ldr	r2, [pc, #52]	; (1004757c <BlueNRG_Stack_Initialize_RAM_check+0x78>)
10047546:	1818      	adds	r0, r3, r0
10047548:	1884      	adds	r4, r0, r2
1004754a:	6948      	ldr	r0, [r1, #20]
1004754c:	42a0      	cmp	r0, r4
1004754e:	d10e      	bne.n	1004756e <BlueNRG_Stack_Initialize_RAM_check+0x6a>
10047550:	2013      	movs	r0, #19
10047552:	01c0      	lsls	r0, r0, #7
10047554:	4284      	cmp	r4, r0
10047556:	d90a      	bls.n	1004756e <BlueNRG_Stack_Initialize_RAM_check+0x6a>
10047558:	690d      	ldr	r5, [r1, #16]
1004755a:	f7fa fb17 	bl	10041b8c <data_length_extension_csr_ucfg>
1004755e:	b2c1      	uxtb	r1, r0
10047560:	4628      	mov	r0, r5
10047562:	f00b fe27 	bl	100531b4 <Dynamic_allocator>
10047566:	f00b ff57 	bl	10053418 <Dynamic_allocator_noRet>
1004756a:	1b40      	subs	r0, r0, r5
1004756c:	1a25      	subs	r5, r4, r0
1004756e:	4628      	mov	r0, r5
10047570:	bd70      	pop	{r4, r5, r6, pc}
10047572:	23ff      	movs	r3, #255	; 0xff
10047574:	33b5      	adds	r3, #181	; 0xb5
10047576:	e7cd      	b.n	10047514 <BlueNRG_Stack_Initialize_RAM_check+0x10>
10047578:	200002dc 	.word	0x200002dc
1004757c:	00001951 	.word	0x00001951

10047580 <BlueNRG_Stack_Perform_Crystal_Check>:
10047580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10047582:	4f2c      	ldr	r7, [pc, #176]	; (10047634 <BlueNRG_Stack_Perform_Crystal_Check+0xb4>)
10047584:	683c      	ldr	r4, [r7, #0]
10047586:	6e20      	ldr	r0, [r4, #96]	; 0x60
10047588:	345c      	adds	r4, #92	; 0x5c
1004758a:	1c40      	adds	r0, r0, #1
1004758c:	2800      	cmp	r0, #0
1004758e:	d014      	beq.n	100475ba <BlueNRG_Stack_Perform_Crystal_Check+0x3a>
10047590:	2500      	movs	r5, #0
10047592:	4829      	ldr	r0, [pc, #164]	; (10047638 <BlueNRG_Stack_Perform_Crystal_Check+0xb8>)
10047594:	2300      	movs	r3, #0
10047596:	7bc0      	ldrb	r0, [r0, #15]
10047598:	2800      	cmp	r0, #0
1004759a:	d03e      	beq.n	1004761a <BlueNRG_Stack_Perform_Crystal_Check+0x9a>
1004759c:	2609      	movs	r6, #9
1004759e:	06f6      	lsls	r6, r6, #27
100475a0:	4826      	ldr	r0, [pc, #152]	; (1004763c <BlueNRG_Stack_Perform_Crystal_Check+0xbc>)
100475a2:	2d00      	cmp	r5, #0
100475a4:	d01c      	beq.n	100475e0 <BlueNRG_Stack_Perform_Crystal_Check+0x60>
100475a6:	2100      	movs	r1, #0
100475a8:	460a      	mov	r2, r1
100475aa:	460b      	mov	r3, r1
100475ac:	6941      	ldr	r1, [r0, #20]
100475ae:	1c52      	adds	r2, r2, #1
100475b0:	4299      	cmp	r1, r3
100475b2:	d104      	bne.n	100475be <BlueNRG_Stack_Perform_Crystal_Check+0x3e>
100475b4:	2900      	cmp	r1, #0
100475b6:	d002      	beq.n	100475be <BlueNRG_Stack_Perform_Crystal_Check+0x3e>
100475b8:	e004      	b.n	100475c4 <BlueNRG_Stack_Perform_Crystal_Check+0x44>
100475ba:	2501      	movs	r5, #1
100475bc:	e7e9      	b.n	10047592 <BlueNRG_Stack_Perform_Crystal_Check+0x12>
100475be:	4b20      	ldr	r3, [pc, #128]	; (10047640 <BlueNRG_Stack_Perform_Crystal_Check+0xc0>)
100475c0:	429a      	cmp	r2, r3
100475c2:	d3f2      	bcc.n	100475aa <BlueNRG_Stack_Perform_Crystal_Check+0x2a>
100475c4:	6021      	str	r1, [r4, #0]
100475c6:	6900      	ldr	r0, [r0, #16]
100475c8:	6060      	str	r0, [r4, #4]
100475ca:	6930      	ldr	r0, [r6, #16]
100475cc:	68a1      	ldr	r1, [r4, #8]
100475ce:	0200      	lsls	r0, r0, #8
100475d0:	0e09      	lsrs	r1, r1, #24
100475d2:	0a00      	lsrs	r0, r0, #8
100475d4:	0609      	lsls	r1, r1, #24
100475d6:	4301      	orrs	r1, r0
100475d8:	60a1      	str	r1, [r4, #8]
100475da:	f000 f833 	bl	10047644 <BlueNRG_Start_Crystal_Measurement>
100475de:	e01d      	b.n	1004761c <BlueNRG_Stack_Perform_Crystal_Check+0x9c>
100475e0:	6931      	ldr	r1, [r6, #16]
100475e2:	68a2      	ldr	r2, [r4, #8]
100475e4:	0209      	lsls	r1, r1, #8
100475e6:	0a09      	lsrs	r1, r1, #8
100475e8:	0e15      	lsrs	r5, r2, #24
100475ea:	d008      	beq.n	100475fe <BlueNRG_Stack_Perform_Crystal_Check+0x7e>
100475ec:	8b01      	ldrh	r1, [r0, #24]
100475ee:	07c9      	lsls	r1, r1, #31
100475f0:	d012      	beq.n	10047618 <BlueNRG_Stack_Perform_Crystal_Check+0x98>
100475f2:	6941      	ldr	r1, [r0, #20]
100475f4:	6021      	str	r1, [r4, #0]
100475f6:	6900      	ldr	r0, [r0, #16]
100475f8:	6060      	str	r0, [r4, #4]
100475fa:	72e3      	strb	r3, [r4, #11]
100475fc:	e010      	b.n	10047620 <BlueNRG_Stack_Perform_Crystal_Check+0xa0>
100475fe:	1a88      	subs	r0, r1, r2
10047600:	0200      	lsls	r0, r0, #8
10047602:	237d      	movs	r3, #125	; 0x7d
10047604:	1200      	asrs	r0, r0, #8
10047606:	031b      	lsls	r3, r3, #12
10047608:	4298      	cmp	r0, r3
1004760a:	dd05      	ble.n	10047618 <BlueNRG_Stack_Perform_Crystal_Check+0x98>
1004760c:	0e10      	lsrs	r0, r2, #24
1004760e:	0600      	lsls	r0, r0, #24
10047610:	4308      	orrs	r0, r1
10047612:	60a0      	str	r0, [r4, #8]
10047614:	f000 f816 	bl	10047644 <BlueNRG_Start_Crystal_Measurement>
10047618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004761a:	6063      	str	r3, [r4, #4]
1004761c:	2d00      	cmp	r5, #0
1004761e:	d0fb      	beq.n	10047618 <BlueNRG_Stack_Perform_Crystal_Check+0x98>
10047620:	cc03      	ldmia	r4!, {r0, r1}
10047622:	f00f ffab 	bl	1005757c <set_freq>
10047626:	20fa      	movs	r0, #250	; 0xfa
10047628:	f00f ff98 	bl	1005755c <machine_time_trans>
1004762c:	6839      	ldr	r1, [r7, #0]
1004762e:	6288      	str	r0, [r1, #40]	; 0x28
10047630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10047632:	0000      	.short	0x0000
10047634:	20000d64 	.word	0x20000d64
10047638:	200002fc 	.word	0x200002fc
1004763c:	48100000 	.word	0x48100000
10047640:	00001388 	.word	0x00001388

10047644 <BlueNRG_Start_Crystal_Measurement>:
10047644:	4904      	ldr	r1, [pc, #16]	; (10047658 <BlueNRG_Start_Crystal_Measurement+0x14>)
10047646:	2000      	movs	r0, #0
10047648:	6108      	str	r0, [r1, #16]
1004764a:	4804      	ldr	r0, [pc, #16]	; (1004765c <BlueNRG_Start_Crystal_Measurement+0x18>)
1004764c:	2101      	movs	r1, #1
1004764e:	6800      	ldr	r0, [r0, #0]
10047650:	3060      	adds	r0, #96	; 0x60
10047652:	71c1      	strb	r1, [r0, #7]
10047654:	4770      	bx	lr
10047656:	0000      	.short	0x0000
10047658:	48100000 	.word	0x48100000
1004765c:	20000d64 	.word	0x20000d64

10047660 <_BlueNRG_Stack_Initialization>:
10047660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10047662:	2606      	movs	r6, #6
10047664:	4832      	ldr	r0, [pc, #200]	; (10047730 <_BlueNRG_Stack_Initialization+0xd0>)
10047666:	2540      	movs	r5, #64	; 0x40
10047668:	6005      	str	r5, [r0, #0]
1004766a:	4832      	ldr	r0, [pc, #200]	; (10047734 <_BlueNRG_Stack_Initialization+0xd4>)
1004766c:	2700      	movs	r7, #0
1004766e:	8007      	strh	r7, [r0, #0]
10047670:	05a9      	lsls	r1, r5, #22
10047672:	2009      	movs	r0, #9
10047674:	06c0      	lsls	r0, r0, #27
10047676:	6041      	str	r1, [r0, #4]
10047678:	4a2f      	ldr	r2, [pc, #188]	; (10047738 <_BlueNRG_Stack_Initialization+0xd8>)
1004767a:	6091      	str	r1, [r2, #8]
1004767c:	6801      	ldr	r1, [r0, #0]
1004767e:	6001      	str	r1, [r0, #0]
10047680:	482e      	ldr	r0, [pc, #184]	; (1004773c <_BlueNRG_Stack_Initialization+0xdc>)
10047682:	2103      	movs	r1, #3
10047684:	6904      	ldr	r4, [r0, #16]
10047686:	6942      	ldr	r2, [r0, #20]
10047688:	1e60      	subs	r0, r4, #1
1004768a:	4308      	orrs	r0, r1
1004768c:	4639      	mov	r1, r7
1004768e:	1c40      	adds	r0, r0, #1
10047690:	f7f9 f87b 	bl	1004078a <Osal_MemSet>
10047694:	f7fa fa7a 	bl	10041b8c <data_length_extension_csr_ucfg>
10047698:	b2c1      	uxtb	r1, r0
1004769a:	4620      	mov	r0, r4
1004769c:	f00b fd8a 	bl	100531b4 <Dynamic_allocator>
100476a0:	f00b feba 	bl	10053418 <Dynamic_allocator_noRet>
100476a4:	f00b fec4 	bl	10053430 <mem_alloc_ctx_init>
100476a8:	f7fa fa36 	bl	10041b18 <state_func_call_init_csr_ucfg>
100476ac:	4924      	ldr	r1, [pc, #144]	; (10047740 <_BlueNRG_Stack_Initialization+0xe0>)
100476ae:	2017      	movs	r0, #23
100476b0:	8188      	strh	r0, [r1, #12]
100476b2:	4c24      	ldr	r4, [pc, #144]	; (10047744 <_BlueNRG_Stack_Initialization+0xe4>)
100476b4:	6820      	ldr	r0, [r4, #0]
100476b6:	1942      	adds	r2, r0, r5
100476b8:	4601      	mov	r1, r0
100476ba:	7057      	strb	r7, [r2, #1]
100476bc:	20fa      	movs	r0, #250	; 0xfa
100476be:	6288      	str	r0, [r1, #40]	; 0x28
100476c0:	2028      	movs	r0, #40	; 0x28
100476c2:	7010      	strb	r0, [r2, #0]
100476c4:	f7fa f908 	bl	100418d8 <PRIV_controller_privacy_csr_ucfg>
100476c8:	2801      	cmp	r0, #1
100476ca:	d105      	bne.n	100476d8 <_BlueNRG_Stack_Initialization+0x78>
100476cc:	6820      	ldr	r0, [r4, #0]
100476ce:	2210      	movs	r2, #16
100476d0:	3040      	adds	r0, #64	; 0x40
100476d2:	7801      	ldrb	r1, [r0, #0]
100476d4:	4311      	orrs	r1, r2
100476d6:	7001      	strb	r1, [r0, #0]
100476d8:	f7fa fa82 	bl	10041be0 <secure_connections_csr_ucfg>
100476dc:	2801      	cmp	r0, #1
100476de:	d105      	bne.n	100476ec <_BlueNRG_Stack_Initialization+0x8c>
100476e0:	6820      	ldr	r0, [r4, #0]
100476e2:	2280      	movs	r2, #128	; 0x80
100476e4:	3040      	adds	r0, #64	; 0x40
100476e6:	7801      	ldrb	r1, [r0, #0]
100476e8:	4311      	orrs	r1, r2
100476ea:	7001      	strb	r1, [r0, #0]
100476ec:	6820      	ldr	r0, [r4, #0]
100476ee:	4601      	mov	r1, r0
100476f0:	3040      	adds	r0, #64	; 0x40
100476f2:	7802      	ldrb	r2, [r0, #0]
100476f4:	4332      	orrs	r2, r6
100476f6:	7002      	strb	r2, [r0, #0]
100476f8:	2000      	movs	r0, #0
100476fa:	43c0      	mvns	r0, r0
100476fc:	6608      	str	r0, [r1, #96]	; 0x60
100476fe:	f7f9 fe19 	bl	10041334 <PKA_Reset>
10047702:	f7ff fe8b 	bl	1004741c <BlueNRG_Stack_Initialize_ConfigData>
10047706:	f7ff febb 	bl	10047480 <BlueNRG_Stack_Initialize_Layers>
1004770a:	6820      	ldr	r0, [r4, #0]
1004770c:	2101      	movs	r1, #1
1004770e:	3020      	adds	r0, #32
10047710:	7701      	strb	r1, [r0, #28]
10047712:	2107      	movs	r1, #7
10047714:	7741      	strb	r1, [r0, #29]
10047716:	2001      	movs	r0, #1
10047718:	f005 f848 	bl	1004c7ac <HAL_Set_TX_Power_Level>
1004771c:	f009 f8d2 	bl	100508c4 <PRIVWHIT_vInit_Struct>
10047720:	f7ff ff2e 	bl	10047580 <BlueNRG_Stack_Perform_Crystal_Check>
10047724:	4802      	ldr	r0, [pc, #8]	; (10047730 <_BlueNRG_Stack_Initialization+0xd0>)
10047726:	3880      	subs	r0, #128	; 0x80
10047728:	6005      	str	r5, [r0, #0]
1004772a:	2102      	movs	r1, #2
1004772c:	6001      	str	r1, [r0, #0]
1004772e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10047730:	e000e180 	.word	0xe000e180
10047734:	200000c0 	.word	0x200000c0
10047738:	48000040 	.word	0x48000040
1004773c:	200002dc 	.word	0x200002dc
10047740:	48100000 	.word	0x48100000
10047744:	20000d64 	.word	0x20000d64

10047748 <GAP_Connection_Complete_Handler>:
10047748:	b538      	push	{r3, r4, r5, lr}
1004774a:	4a18      	ldr	r2, [pc, #96]	; (100477ac <GAP_Connection_Complete_Handler+0x64>)
1004774c:	6814      	ldr	r4, [r2, #0]
1004774e:	4622      	mov	r2, r4
10047750:	32ba      	adds	r2, #186	; 0xba
10047752:	34ae      	adds	r4, #174	; 0xae
10047754:	78a3      	ldrb	r3, [r4, #2]
10047756:	07dd      	lsls	r5, r3, #31
10047758:	d001      	beq.n	1004775e <GAP_Connection_Complete_Handler+0x16>
1004775a:	2901      	cmp	r1, #1
1004775c:	d00a      	beq.n	10047774 <GAP_Connection_Complete_Handler+0x2c>
1004775e:	075b      	lsls	r3, r3, #29
10047760:	d50c      	bpl.n	1004777c <GAP_Connection_Complete_Handler+0x34>
10047762:	2901      	cmp	r1, #1
10047764:	d00a      	beq.n	1004777c <GAP_Connection_Complete_Handler+0x34>
10047766:	7921      	ldrb	r1, [r4, #4]
10047768:	0749      	lsls	r1, r1, #29
1004776a:	d50b      	bpl.n	10047784 <GAP_Connection_Complete_Handler+0x3c>
1004776c:	7ae1      	ldrb	r1, [r4, #11]
1004776e:	2900      	cmp	r1, #0
10047770:	d005      	beq.n	1004777e <GAP_Connection_Complete_Handler+0x36>
10047772:	e007      	b.n	10047784 <GAP_Connection_Complete_Handler+0x3c>
10047774:	78e0      	ldrb	r0, [r4, #3]
10047776:	2180      	movs	r1, #128	; 0x80
10047778:	4308      	orrs	r0, r1
1004777a:	70e0      	strb	r0, [r4, #3]
1004777c:	bd38      	pop	{r3, r4, r5, pc}
1004777e:	2101      	movs	r1, #1
10047780:	72e1      	strb	r1, [r4, #11]
10047782:	8050      	strh	r0, [r2, #2]
10047784:	7920      	ldrb	r0, [r4, #4]
10047786:	0641      	lsls	r1, r0, #25
10047788:	0f09      	lsrs	r1, r1, #28
1004778a:	d0f7      	beq.n	1004777c <GAP_Connection_Complete_Handler+0x34>
1004778c:	2178      	movs	r1, #120	; 0x78
1004778e:	4008      	ands	r0, r1
10047790:	4669      	mov	r1, sp
10047792:	7008      	strb	r0, [r1, #0]
10047794:	2000      	movs	r0, #0
10047796:	7048      	strb	r0, [r1, #1]
10047798:	466a      	mov	r2, sp
1004779a:	2102      	movs	r1, #2
1004779c:	2042      	movs	r0, #66	; 0x42
1004779e:	f000 fda9 	bl	100482f4 <aci_gap_proc_complete_event_push>
100477a2:	7920      	ldrb	r0, [r4, #4]
100477a4:	2187      	movs	r1, #135	; 0x87
100477a6:	4008      	ands	r0, r1
100477a8:	7120      	strb	r0, [r4, #4]
100477aa:	bd38      	pop	{r3, r4, r5, pc}
100477ac:	20000d64 	.word	0x20000d64

100477b0 <GAP_Create_Connection>:
100477b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100477b2:	4605      	mov	r5, r0
100477b4:	2700      	movs	r7, #0
100477b6:	4668      	mov	r0, sp
100477b8:	7007      	strb	r7, [r0, #0]
100477ba:	4815      	ldr	r0, [pc, #84]	; (10047810 <GAP_Create_Connection+0x60>)
100477bc:	2646      	movs	r6, #70	; 0x46
100477be:	6804      	ldr	r4, [r0, #0]
100477c0:	34ae      	adds	r4, #174	; 0xae
100477c2:	7920      	ldrb	r0, [r4, #4]
100477c4:	0680      	lsls	r0, r0, #26
100477c6:	0f80      	lsrs	r0, r0, #30
100477c8:	d003      	beq.n	100477d2 <GAP_Create_Connection+0x22>
100477ca:	2100      	movs	r1, #0
100477cc:	4608      	mov	r0, r1
100477ce:	f00a fc45 	bl	1005205c <LL_Enable_Disable_Scan>
100477d2:	78a0      	ldrb	r0, [r4, #2]
100477d4:	0740      	lsls	r0, r0, #29
100477d6:	d518      	bpl.n	1004780a <GAP_Create_Connection+0x5a>
100477d8:	7920      	ldrb	r0, [r4, #4]
100477da:	214c      	movs	r1, #76	; 0x4c
100477dc:	4208      	tst	r0, r1
100477de:	d114      	bne.n	1004780a <GAP_Create_Connection+0x5a>
100477e0:	2300      	movs	r3, #0
100477e2:	7e28      	ldrb	r0, [r5, #24]
100477e4:	466a      	mov	r2, sp
100477e6:	4619      	mov	r1, r3
100477e8:	f00d fcde 	bl	100551a8 <GAP_Privacy1v2>
100477ec:	2800      	cmp	r0, #0
100477ee:	d10d      	bne.n	1004780c <GAP_Create_Connection+0x5c>
100477f0:	4668      	mov	r0, sp
100477f2:	7800      	ldrb	r0, [r0, #0]
100477f4:	7628      	strb	r0, [r5, #24]
100477f6:	742f      	strb	r7, [r5, #16]
100477f8:	4628      	mov	r0, r5
100477fa:	f00a fadb 	bl	10051db4 <LL_Create_Connection>
100477fe:	0006      	movs	r6, r0
10047800:	d103      	bne.n	1004780a <GAP_Create_Connection+0x5a>
10047802:	7920      	ldrb	r0, [r4, #4]
10047804:	2140      	movs	r1, #64	; 0x40
10047806:	4308      	orrs	r0, r1
10047808:	7120      	strb	r0, [r4, #4]
1004780a:	4630      	mov	r0, r6
1004780c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004780e:	0000      	.short	0x0000
10047810:	20000d64 	.word	0x20000d64

10047814 <GAP_DiscProcTimeoutcb>:
10047814:	b538      	push	{r3, r4, r5, lr}
10047816:	4810      	ldr	r0, [pc, #64]	; (10047858 <GAP_DiscProcTimeoutcb+0x44>)
10047818:	2100      	movs	r1, #0
1004781a:	6804      	ldr	r4, [r0, #0]
1004781c:	4608      	mov	r0, r1
1004781e:	34ae      	adds	r4, #174	; 0xae
10047820:	f00a fc1c 	bl	1005205c <LL_Enable_Disable_Scan>
10047824:	4669      	mov	r1, sp
10047826:	7048      	strb	r0, [r1, #1]
10047828:	7920      	ldrb	r0, [r4, #4]
1004782a:	07c1      	lsls	r1, r0, #31
1004782c:	d004      	beq.n	10047838 <GAP_DiscProcTimeoutcb+0x24>
1004782e:	2101      	movs	r1, #1
10047830:	466a      	mov	r2, sp
10047832:	7011      	strb	r1, [r2, #0]
10047834:	4388      	bics	r0, r1
10047836:	7120      	strb	r0, [r4, #4]
10047838:	b2c0      	uxtb	r0, r0
1004783a:	0781      	lsls	r1, r0, #30
1004783c:	d505      	bpl.n	1004784a <GAP_DiscProcTimeoutcb+0x36>
1004783e:	2102      	movs	r1, #2
10047840:	466a      	mov	r2, sp
10047842:	7011      	strb	r1, [r2, #0]
10047844:	21fd      	movs	r1, #253	; 0xfd
10047846:	4008      	ands	r0, r1
10047848:	7120      	strb	r0, [r4, #4]
1004784a:	2102      	movs	r1, #2
1004784c:	466a      	mov	r2, sp
1004784e:	4608      	mov	r0, r1
10047850:	f000 fd50 	bl	100482f4 <aci_gap_proc_complete_event_push>
10047854:	bd38      	pop	{r3, r4, r5, pc}
10047856:	0000      	.short	0x0000
10047858:	20000d64 	.word	0x20000d64

1004785c <GAP_Init>:
1004785c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004785e:	460c      	mov	r4, r1
10047860:	a178      	add	r1, pc, #480	; (adr r1, 10047a44 <GAP_Init+0x1e8>)
10047862:	c903      	ldmia	r1, {r0, r1}
10047864:	b095      	sub	sp, #84	; 0x54
10047866:	9101      	str	r1, [sp, #4]
10047868:	9000      	str	r0, [sp, #0]
1004786a:	2100      	movs	r1, #0
1004786c:	a808      	add	r0, sp, #32
1004786e:	7301      	strb	r1, [r0, #12]
10047870:	2103      	movs	r1, #3
10047872:	02c9      	lsls	r1, r1, #11
10047874:	4668      	mov	r0, sp
10047876:	8641      	strh	r1, [r0, #50]	; 0x32
10047878:	2101      	movs	r1, #1
1004787a:	a808      	add	r0, sp, #32
1004787c:	4e73      	ldr	r6, [pc, #460]	; (10047a4c <GAP_Init+0x1f0>)
1004787e:	7401      	strb	r1, [r0, #16]
10047880:	6835      	ldr	r5, [r6, #0]
10047882:	4617      	mov	r7, r2
10047884:	35ae      	adds	r5, #174	; 0xae
10047886:	f017 f943 	bl	1005eb10 <IDD_Initialize_Device_IDs>
1004788a:	2800      	cmp	r0, #0
1004788c:	d108      	bne.n	100478a0 <GAP_Init+0x44>
1004788e:	4970      	ldr	r1, [pc, #448]	; (10047a50 <GAP_Init+0x1f4>)
10047890:	6830      	ldr	r0, [r6, #0]
10047892:	1840      	adds	r0, r0, r1
10047894:	f00d ff7c 	bl	10055790 <Get_StaticRandAddr>
10047898:	78a8      	ldrb	r0, [r5, #2]
1004789a:	2800      	cmp	r0, #0
1004789c:	d002      	beq.n	100478a4 <GAP_Init+0x48>
1004789e:	2046      	movs	r0, #70	; 0x46
100478a0:	b019      	add	sp, #100	; 0x64
100478a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100478a4:	a80b      	add	r0, sp, #44	; 0x2c
100478a6:	9915      	ldr	r1, [sp, #84]	; 0x54
100478a8:	f7fa f92e 	bl	10041b08 <GAP_check_and_set_role_ucfg>
100478ac:	2800      	cmp	r0, #0
100478ae:	d1f7      	bne.n	100478a0 <GAP_Init+0x44>
100478b0:	2007      	movs	r0, #7
100478b2:	a910      	add	r1, sp, #64	; 0x40
100478b4:	7108      	strb	r0, [r1, #4]
100478b6:	2c01      	cmp	r4, #1
100478b8:	d005      	beq.n	100478c6 <GAP_Init+0x6a>
100478ba:	2c02      	cmp	r4, #2
100478bc:	d00a      	beq.n	100478d4 <GAP_Init+0x78>
100478be:	2c00      	cmp	r4, #0
100478c0:	d00e      	beq.n	100478e0 <GAP_Init+0x84>
100478c2:	2042      	movs	r0, #66	; 0x42
100478c4:	e7ec      	b.n	100478a0 <GAP_Init+0x44>
100478c6:	a808      	add	r0, sp, #32
100478c8:	7b01      	ldrb	r1, [r0, #12]
100478ca:	2010      	movs	r0, #16
100478cc:	4301      	orrs	r1, r0
100478ce:	a808      	add	r0, sp, #32
100478d0:	7301      	strb	r1, [r0, #12]
100478d2:	e005      	b.n	100478e0 <GAP_Init+0x84>
100478d4:	a911      	add	r1, sp, #68	; 0x44
100478d6:	a80b      	add	r0, sp, #44	; 0x2c
100478d8:	f7f9 fff6 	bl	100418c8 <GAP_enable_controller_privacy_ucfg>
100478dc:	2800      	cmp	r0, #0
100478de:	d1df      	bne.n	100478a0 <GAP_Init+0x44>
100478e0:	a810      	add	r0, sp, #64	; 0x40
100478e2:	7902      	ldrb	r2, [r0, #4]
100478e4:	2301      	movs	r3, #1
100478e6:	a90c      	add	r1, sp, #48	; 0x30
100478e8:	4628      	mov	r0, r5
100478ea:	f003 f881 	bl	1004a9f0 <Gatt_Add_Service>
100478ee:	2800      	cmp	r0, #0
100478f0:	d17e      	bne.n	100479f0 <GAP_Init+0x194>
100478f2:	2202      	movs	r2, #2
100478f4:	4629      	mov	r1, r5
100478f6:	9818      	ldr	r0, [sp, #96]	; 0x60
100478f8:	f7f8 ff43 	bl	10040782 <Osal_MemCpy>
100478fc:	8829      	ldrh	r1, [r5, #0]
100478fe:	4668      	mov	r0, sp
10047900:	8181      	strh	r1, [r0, #12]
10047902:	2115      	movs	r1, #21
10047904:	0249      	lsls	r1, r1, #9
10047906:	8201      	strh	r1, [r0, #16]
10047908:	8407      	strh	r7, [r0, #32]
1004790a:	2601      	movs	r6, #1
1004790c:	7386      	strb	r6, [r0, #14]
1004790e:	214e      	movs	r1, #78	; 0x4e
10047910:	a808      	add	r0, sp, #32
10047912:	7081      	strb	r1, [r0, #2]
10047914:	2400      	movs	r4, #0
10047916:	70c4      	strb	r4, [r0, #3]
10047918:	7106      	strb	r6, [r0, #4]
1004791a:	2107      	movs	r1, #7
1004791c:	7141      	strb	r1, [r0, #5]
1004791e:	7186      	strb	r6, [r0, #6]
10047920:	a903      	add	r1, sp, #12
10047922:	a802      	add	r0, sp, #8
10047924:	f002 fe1a 	bl	1004a55c <Gatt_Add_Characteristic>
10047928:	2800      	cmp	r0, #0
1004792a:	d161      	bne.n	100479f0 <GAP_Init+0x194>
1004792c:	2202      	movs	r2, #2
1004792e:	a902      	add	r1, sp, #8
10047930:	981e      	ldr	r0, [sp, #120]	; 0x78
10047932:	f7f8 ff26 	bl	10040782 <Osal_MemCpy>
10047936:	2f08      	cmp	r7, #8
10047938:	d202      	bcs.n	10047940 <GAP_Init+0xe4>
1004793a:	4668      	mov	r0, sp
1004793c:	8547      	strh	r7, [r0, #42]	; 0x2a
1004793e:	e002      	b.n	10047946 <GAP_Init+0xea>
10047940:	2008      	movs	r0, #8
10047942:	4669      	mov	r1, sp
10047944:	8548      	strh	r0, [r1, #42]	; 0x2a
10047946:	4669      	mov	r1, sp
10047948:	850c      	strh	r4, [r1, #40]	; 0x28
1004794a:	460b      	mov	r3, r1
1004794c:	8828      	ldrh	r0, [r5, #0]
1004794e:	aa0a      	add	r2, sp, #40	; 0x28
10047950:	8909      	ldrh	r1, [r1, #8]
10047952:	f004 f96f 	bl	1004bc34 <Gatt_Update_Charac_Value>
10047956:	2800      	cmp	r0, #0
10047958:	d16d      	bne.n	10047a36 <GAP_Init+0x1da>
1004795a:	493e      	ldr	r1, [pc, #248]	; (10047a54 <GAP_Init+0x1f8>)
1004795c:	4668      	mov	r0, sp
1004795e:	8201      	strh	r1, [r0, #16]
10047960:	2702      	movs	r7, #2
10047962:	8407      	strh	r7, [r0, #32]
10047964:	a808      	add	r0, sp, #32
10047966:	7184      	strb	r4, [r0, #6]
10047968:	a903      	add	r1, sp, #12
1004796a:	a802      	add	r0, sp, #8
1004796c:	f002 fdf6 	bl	1004a55c <Gatt_Add_Characteristic>
10047970:	2800      	cmp	r0, #0
10047972:	d160      	bne.n	10047a36 <GAP_Init+0x1da>
10047974:	2202      	movs	r2, #2
10047976:	a902      	add	r1, sp, #8
10047978:	981f      	ldr	r0, [sp, #124]	; 0x7c
1004797a:	f7f8 ff02 	bl	10040782 <Osal_MemCpy>
1004797e:	4668      	mov	r0, sp
10047980:	7004      	strb	r4, [r0, #0]
10047982:	4669      	mov	r1, sp
10047984:	7044      	strb	r4, [r0, #1]
10047986:	854f      	strh	r7, [r1, #42]	; 0x2a
10047988:	460b      	mov	r3, r1
1004798a:	8828      	ldrh	r0, [r5, #0]
1004798c:	aa0a      	add	r2, sp, #40	; 0x28
1004798e:	8909      	ldrh	r1, [r1, #8]
10047990:	f004 f950 	bl	1004bc34 <Gatt_Update_Charac_Value>
10047994:	2800      	cmp	r0, #0
10047996:	d14e      	bne.n	10047a36 <GAP_Init+0x1da>
10047998:	a808      	add	r0, sp, #32
1004799a:	7b00      	ldrb	r0, [r0, #12]
1004799c:	07c0      	lsls	r0, r0, #31
1004799e:	d023      	beq.n	100479e8 <GAP_Init+0x18c>
100479a0:	492c      	ldr	r1, [pc, #176]	; (10047a54 <GAP_Init+0x1f8>)
100479a2:	4668      	mov	r0, sp
100479a4:	1cc9      	adds	r1, r1, #3
100479a6:	8201      	strh	r1, [r0, #16]
100479a8:	2108      	movs	r1, #8
100479aa:	8401      	strh	r1, [r0, #32]
100479ac:	a808      	add	r0, sp, #32
100479ae:	7087      	strb	r7, [r0, #2]
100479b0:	7104      	strb	r4, [r0, #4]
100479b2:	a903      	add	r1, sp, #12
100479b4:	a802      	add	r0, sp, #8
100479b6:	f002 fdd1 	bl	1004a55c <Gatt_Add_Characteristic>
100479ba:	2800      	cmp	r0, #0
100479bc:	d13b      	bne.n	10047a36 <GAP_Init+0x1da>
100479be:	21ff      	movs	r1, #255	; 0xff
100479c0:	4668      	mov	r0, sp
100479c2:	71c1      	strb	r1, [r0, #7]
100479c4:	7181      	strb	r1, [r0, #6]
100479c6:	70c1      	strb	r1, [r0, #3]
100479c8:	7081      	strb	r1, [r0, #2]
100479ca:	7041      	strb	r1, [r0, #1]
100479cc:	7001      	strb	r1, [r0, #0]
100479ce:	7144      	strb	r4, [r0, #5]
100479d0:	7104      	strb	r4, [r0, #4]
100479d2:	4669      	mov	r1, sp
100479d4:	2008      	movs	r0, #8
100479d6:	8548      	strh	r0, [r1, #42]	; 0x2a
100479d8:	460b      	mov	r3, r1
100479da:	8828      	ldrh	r0, [r5, #0]
100479dc:	aa0a      	add	r2, sp, #40	; 0x28
100479de:	8909      	ldrh	r1, [r1, #8]
100479e0:	f004 f928 	bl	1004bc34 <Gatt_Update_Charac_Value>
100479e4:	2800      	cmp	r0, #0
100479e6:	d126      	bne.n	10047a36 <GAP_Init+0x1da>
100479e8:	a808      	add	r0, sp, #32
100479ea:	7b00      	ldrb	r0, [r0, #12]
100479ec:	0680      	lsls	r0, r0, #26
100479ee:	e000      	b.n	100479f2 <GAP_Init+0x196>
100479f0:	e021      	b.n	10047a36 <GAP_Init+0x1da>
100479f2:	d522      	bpl.n	10047a3a <GAP_Init+0x1de>
100479f4:	8829      	ldrh	r1, [r5, #0]
100479f6:	4668      	mov	r0, sp
100479f8:	8181      	strh	r1, [r0, #12]
100479fa:	4916      	ldr	r1, [pc, #88]	; (10047a54 <GAP_Init+0x1f8>)
100479fc:	31a5      	adds	r1, #165	; 0xa5
100479fe:	8201      	strh	r1, [r0, #16]
10047a00:	8406      	strh	r6, [r0, #32]
10047a02:	7386      	strb	r6, [r0, #14]
10047a04:	a808      	add	r0, sp, #32
10047a06:	7087      	strb	r7, [r0, #2]
10047a08:	70c4      	strb	r4, [r0, #3]
10047a0a:	7104      	strb	r4, [r0, #4]
10047a0c:	2107      	movs	r1, #7
10047a0e:	7141      	strb	r1, [r0, #5]
10047a10:	7184      	strb	r4, [r0, #6]
10047a12:	a903      	add	r1, sp, #12
10047a14:	a802      	add	r0, sp, #8
10047a16:	f002 fda1 	bl	1004a55c <Gatt_Add_Characteristic>
10047a1a:	2800      	cmp	r0, #0
10047a1c:	d10b      	bne.n	10047a36 <GAP_Init+0x1da>
10047a1e:	4669      	mov	r1, sp
10047a20:	700e      	strb	r6, [r1, #0]
10047a22:	850c      	strh	r4, [r1, #40]	; 0x28
10047a24:	854e      	strh	r6, [r1, #42]	; 0x2a
10047a26:	460b      	mov	r3, r1
10047a28:	8828      	ldrh	r0, [r5, #0]
10047a2a:	aa0a      	add	r2, sp, #40	; 0x28
10047a2c:	8909      	ldrh	r1, [r1, #8]
10047a2e:	f004 f901 	bl	1004bc34 <Gatt_Update_Charac_Value>
10047a32:	2800      	cmp	r0, #0
10047a34:	d001      	beq.n	10047a3a <GAP_Init+0x1de>
10047a36:	2047      	movs	r0, #71	; 0x47
10047a38:	e732      	b.n	100478a0 <GAP_Init+0x44>
10047a3a:	a808      	add	r0, sp, #32
10047a3c:	7b00      	ldrb	r0, [r0, #12]
10047a3e:	70a8      	strb	r0, [r5, #2]
10047a40:	2000      	movs	r0, #0
10047a42:	e72d      	b.n	100478a0 <GAP_Init+0x44>
10047a44:	65756c62 	.word	0x65756c62
10047a48:	2167726e 	.word	0x2167726e
10047a4c:	20000d64 	.word	0x20000d64
10047a50:	000006ef 	.word	0x000006ef
10047a54:	00002a01 	.word	0x00002a01

10047a58 <GAP_Init_Context>:
10047a58:	4803      	ldr	r0, [pc, #12]	; (10047a68 <GAP_Init_Context+0x10>)
10047a5a:	2100      	movs	r1, #0
10047a5c:	6800      	ldr	r0, [r0, #0]
10047a5e:	30ae      	adds	r0, #174	; 0xae
10047a60:	70c1      	strb	r1, [r0, #3]
10047a62:	7081      	strb	r1, [r0, #2]
10047a64:	4770      	bx	lr
10047a66:	0000      	.short	0x0000
10047a68:	20000d64 	.word	0x20000d64

10047a6c <GAP_Internal_Evt_Handler>:
10047a6c:	b570      	push	{r4, r5, r6, lr}
10047a6e:	4b0d      	ldr	r3, [pc, #52]	; (10047aa4 <GAP_Internal_Evt_Handler+0x38>)
10047a70:	681c      	ldr	r4, [r3, #0]
10047a72:	34ae      	adds	r4, #174	; 0xae
10047a74:	7923      	ldrb	r3, [r4, #4]
10047a76:	06dd      	lsls	r5, r3, #27
10047a78:	d412      	bmi.n	10047aa0 <GAP_Internal_Evt_Handler+0x34>
10047a7a:	075b      	lsls	r3, r3, #29
10047a7c:	d510      	bpl.n	10047aa0 <GAP_Internal_Evt_Handler+0x34>
10047a7e:	2833      	cmp	r0, #51	; 0x33
10047a80:	d10e      	bne.n	10047aa0 <GAP_Internal_Evt_Handler+0x34>
10047a82:	7ae0      	ldrb	r0, [r4, #11]
10047a84:	2802      	cmp	r0, #2
10047a86:	d10b      	bne.n	10047aa0 <GAP_Internal_Evt_Handler+0x34>
10047a88:	2004      	movs	r0, #4
10047a8a:	7010      	strb	r0, [r2, #0]
10047a8c:	2000      	movs	r0, #0
10047a8e:	7050      	strb	r0, [r2, #1]
10047a90:	b2c9      	uxtb	r1, r1
10047a92:	2002      	movs	r0, #2
10047a94:	f000 fc2e 	bl	100482f4 <aci_gap_proc_complete_event_push>
10047a98:	7920      	ldrb	r0, [r4, #4]
10047a9a:	21fb      	movs	r1, #251	; 0xfb
10047a9c:	4008      	ands	r0, r1
10047a9e:	7120      	strb	r0, [r4, #4]
10047aa0:	bd70      	pop	{r4, r5, r6, pc}
10047aa2:	0000      	.short	0x0000
10047aa4:	20000d64 	.word	0x20000d64

10047aa8 <GAP_LL_Event_Handler_ISR>:
10047aa8:	b538      	push	{r3, r4, r5, lr}
10047aaa:	4602      	mov	r2, r0
10047aac:	4817      	ldr	r0, [pc, #92]	; (10047b0c <GAP_LL_Event_Handler_ISR+0x64>)
10047aae:	2401      	movs	r4, #1
10047ab0:	6800      	ldr	r0, [r0, #0]
10047ab2:	30ae      	adds	r0, #174	; 0xae
10047ab4:	2a02      	cmp	r2, #2
10047ab6:	d01f      	beq.n	10047af8 <GAP_LL_Event_Handler_ISR+0x50>
10047ab8:	2a05      	cmp	r2, #5
10047aba:	d003      	beq.n	10047ac4 <GAP_LL_Event_Handler_ISR+0x1c>
10047abc:	2a07      	cmp	r2, #7
10047abe:	d007      	beq.n	10047ad0 <GAP_LL_Event_Handler_ISR+0x28>
10047ac0:	2a0b      	cmp	r2, #11
10047ac2:	d120      	bne.n	10047b06 <GAP_LL_Event_Handler_ISR+0x5e>
10047ac4:	4608      	mov	r0, r1
10047ac6:	7909      	ldrb	r1, [r1, #4]
10047ac8:	8840      	ldrh	r0, [r0, #2]
10047aca:	f7ff fe3d 	bl	10047748 <GAP_Connection_Complete_Handler>
10047ace:	e01a      	b.n	10047b06 <GAP_LL_Event_Handler_ISR+0x5e>
10047ad0:	7900      	ldrb	r0, [r0, #4]
10047ad2:	2400      	movs	r4, #0
10047ad4:	0602      	lsls	r2, r0, #24
10047ad6:	d500      	bpl.n	10047ada <GAP_LL_Event_Handler_ISR+0x32>
10047ad8:	2401      	movs	r4, #1
10047ada:	0782      	lsls	r2, r0, #30
10047adc:	d103      	bne.n	10047ae6 <GAP_LL_Event_Handler_ISR+0x3e>
10047ade:	06c2      	lsls	r2, r0, #27
10047ae0:	d401      	bmi.n	10047ae6 <GAP_LL_Event_Handler_ISR+0x3e>
10047ae2:	0680      	lsls	r0, r0, #26
10047ae4:	d50f      	bpl.n	10047b06 <GAP_LL_Event_Handler_ISR+0x5e>
10047ae6:	4608      	mov	r0, r1
10047ae8:	2100      	movs	r1, #0
10047aea:	466a      	mov	r2, sp
10047aec:	7011      	strb	r1, [r2, #0]
10047aee:	4669      	mov	r1, sp
10047af0:	f000 faec 	bl	100480cc <_GAP_Parse_Advertising_Report>
10047af4:	4604      	mov	r4, r0
10047af6:	e006      	b.n	10047b06 <GAP_LL_Event_Handler_ISR+0x5e>
10047af8:	7881      	ldrb	r1, [r0, #2]
10047afa:	0749      	lsls	r1, r1, #29
10047afc:	d503      	bpl.n	10047b06 <GAP_LL_Event_Handler_ISR+0x5e>
10047afe:	7901      	ldrb	r1, [r0, #4]
10047b00:	22fb      	movs	r2, #251	; 0xfb
10047b02:	4011      	ands	r1, r2
10047b04:	7101      	strb	r1, [r0, #4]
10047b06:	4620      	mov	r0, r4
10047b08:	bd38      	pop	{r3, r4, r5, pc}
10047b0a:	0000      	.short	0x0000
10047b0c:	20000d64 	.word	0x20000d64

10047b10 <GAP_LimDiscTimeoutcb>:
10047b10:	b510      	push	{r4, lr}
10047b12:	4809      	ldr	r0, [pc, #36]	; (10047b38 <GAP_LimDiscTimeoutcb+0x28>)
10047b14:	6804      	ldr	r4, [r0, #0]
10047b16:	34ae      	adds	r4, #174	; 0xae
10047b18:	78e0      	ldrb	r0, [r4, #3]
10047b1a:	0780      	lsls	r0, r0, #30
10047b1c:	d50b      	bpl.n	10047b36 <GAP_LimDiscTimeoutcb+0x26>
10047b1e:	2000      	movs	r0, #0
10047b20:	f00e fb76 	bl	10056210 <LL_Enable_Disable_Adv>
10047b24:	2002      	movs	r0, #2
10047b26:	f000 fbbd 	bl	100482a4 <aci_gap_limited_discoverable_event_push>
10047b2a:	78e0      	ldrb	r0, [r4, #3]
10047b2c:	2101      	movs	r1, #1
10047b2e:	4308      	orrs	r0, r1
10047b30:	21fd      	movs	r1, #253	; 0xfd
10047b32:	4008      	ands	r0, r1
10047b34:	70e0      	strb	r0, [r4, #3]
10047b36:	bd10      	pop	{r4, pc}
10047b38:	20000d64 	.word	0x20000d64

10047b3c <GAP_Process_Q>:
10047b3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10047b3e:	480e      	ldr	r0, [pc, #56]	; (10047b78 <GAP_Process_Q+0x3c>)
10047b40:	6804      	ldr	r4, [r0, #0]
10047b42:	34ae      	adds	r4, #174	; 0xae
10047b44:	78e0      	ldrb	r0, [r4, #3]
10047b46:	0601      	lsls	r1, r0, #24
10047b48:	d512      	bpl.n	10047b70 <GAP_Process_Q+0x34>
10047b4a:	78a1      	ldrb	r1, [r4, #2]
10047b4c:	07c9      	lsls	r1, r1, #31
10047b4e:	d00c      	beq.n	10047b6a <GAP_Process_Q+0x2e>
10047b50:	0780      	lsls	r0, r0, #30
10047b52:	d508      	bpl.n	10047b66 <GAP_Process_Q+0x2a>
10047b54:	2004      	movs	r0, #4
10047b56:	4669      	mov	r1, sp
10047b58:	7308      	strb	r0, [r1, #12]
10047b5a:	4668      	mov	r0, sp
10047b5c:	f005 ff20 	bl	1004d9a0 <Timer_StopOneShot>
10047b60:	2002      	movs	r0, #2
10047b62:	f000 fb9f 	bl	100482a4 <aci_gap_limited_discoverable_event_push>
10047b66:	2000      	movs	r0, #0
10047b68:	70e0      	strb	r0, [r4, #3]
10047b6a:	0640      	lsls	r0, r0, #25
10047b6c:	0e40      	lsrs	r0, r0, #25
10047b6e:	70e0      	strb	r0, [r4, #3]
10047b70:	f7f9 ffce 	bl	10041b10 <GAP_discover_peer_name_ucfg>
10047b74:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
10047b76:	0000      	.short	0x0000
10047b78:	20000d64 	.word	0x20000d64

10047b7c <GAP_Set_Broadcast_Mode>:
10047b7c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10047b7e:	b08d      	sub	sp, #52	; 0x34
10047b80:	9818      	ldr	r0, [sp, #96]	; 0x60
10047b82:	9e16      	ldr	r6, [sp, #88]	; 0x58
10047b84:	9d17      	ldr	r5, [sp, #92]	; 0x5c
10047b86:	9919      	ldr	r1, [sp, #100]	; 0x64
10047b88:	461c      	mov	r4, r3
10047b8a:	4617      	mov	r7, r2
10047b8c:	2800      	cmp	r0, #0
10047b8e:	d003      	beq.n	10047b98 <GAP_Set_Broadcast_Mode+0x1c>
10047b90:	f00d fada 	bl	10055148 <GAP_Add_To_WhiteList>
10047b94:	2800      	cmp	r0, #0
10047b96:	d113      	bne.n	10047bc0 <GAP_Set_Broadcast_Mode+0x44>
10047b98:	2000      	movs	r0, #0
10047b9a:	9006      	str	r0, [sp, #24]
10047b9c:	9008      	str	r0, [sp, #32]
10047b9e:	9009      	str	r0, [sp, #36]	; 0x24
10047ba0:	9005      	str	r0, [sp, #20]
10047ba2:	9004      	str	r0, [sp, #16]
10047ba4:	2101      	movs	r1, #1
10047ba6:	9007      	str	r0, [sp, #28]
10047ba8:	950b      	str	r5, [sp, #44]	; 0x2c
10047baa:	9003      	str	r0, [sp, #12]
10047bac:	9002      	str	r0, [sp, #8]
10047bae:	960a      	str	r6, [sp, #40]	; 0x28
10047bb0:	9101      	str	r1, [sp, #4]
10047bb2:	9400      	str	r4, [sp, #0]
10047bb4:	4639      	mov	r1, r7
10047bb6:	2006      	movs	r0, #6
10047bb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10047bba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10047bbc:	f000 fab8 	bl	10048130 <_gap_set_discoverable_connectable>
10047bc0:	b011      	add	sp, #68	; 0x44
10047bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10047bc4 <GAP_Set_Direct_Connectable_Mode>:
10047bc4:	b570      	push	{r4, r5, r6, lr}
10047bc6:	b08c      	sub	sp, #48	; 0x30
10047bc8:	2400      	movs	r4, #0
10047bca:	9d10      	ldr	r5, [sp, #64]	; 0x40
10047bcc:	9e11      	ldr	r6, [sp, #68]	; 0x44
10047bce:	940a      	str	r4, [sp, #40]	; 0x28
10047bd0:	940b      	str	r4, [sp, #44]	; 0x2c
10047bd2:	9404      	str	r4, [sp, #16]
10047bd4:	9405      	str	r4, [sp, #20]
10047bd6:	9403      	str	r4, [sp, #12]
10047bd8:	9406      	str	r4, [sp, #24]
10047bda:	9407      	str	r4, [sp, #28]
10047bdc:	9309      	str	r3, [sp, #36]	; 0x24
10047bde:	9208      	str	r2, [sp, #32]
10047be0:	9000      	str	r0, [sp, #0]
10047be2:	9401      	str	r4, [sp, #4]
10047be4:	9402      	str	r4, [sp, #8]
10047be6:	4633      	mov	r3, r6
10047be8:	462a      	mov	r2, r5
10047bea:	2004      	movs	r0, #4
10047bec:	f000 faa0 	bl	10048130 <_gap_set_discoverable_connectable>
10047bf0:	b00c      	add	sp, #48	; 0x30
10047bf2:	bd70      	pop	{r4, r5, r6, pc}

10047bf4 <GAP_Set_Discoverable_Mode>:
10047bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
10047bf6:	b08d      	sub	sp, #52	; 0x34
10047bf8:	460c      	mov	r4, r1
10047bfa:	a916      	add	r1, sp, #88	; 0x58
10047bfc:	c9e0      	ldmia	r1!, {r5, r6, r7}
10047bfe:	2100      	movs	r1, #0
10047c00:	9108      	str	r1, [sp, #32]
10047c02:	9109      	str	r1, [sp, #36]	; 0x24
10047c04:	910a      	str	r1, [sp, #40]	; 0x28
10047c06:	910b      	str	r1, [sp, #44]	; 0x2c
10047c08:	9915      	ldr	r1, [sp, #84]	; 0x54
10047c0a:	9104      	str	r1, [sp, #16]
10047c0c:	a905      	add	r1, sp, #20
10047c0e:	c1e0      	stmia	r1!, {r5, r6, r7}
10047c10:	a912      	add	r1, sp, #72	; 0x48
10047c12:	c962      	ldmia	r1, {r1, r5, r6}
10047c14:	9300      	str	r3, [sp, #0]
10047c16:	9101      	str	r1, [sp, #4]
10047c18:	4613      	mov	r3, r2
10047c1a:	4601      	mov	r1, r0
10047c1c:	9603      	str	r6, [sp, #12]
10047c1e:	9502      	str	r5, [sp, #8]
10047c20:	4622      	mov	r2, r4
10047c22:	2001      	movs	r0, #1
10047c24:	f000 fa84 	bl	10048130 <_gap_set_discoverable_connectable>
10047c28:	b00d      	add	sp, #52	; 0x34
10047c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10047c2c <GAP_Set_Limited_Discoverable_Mode>:
10047c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
10047c2e:	b091      	sub	sp, #68	; 0x44
10047c30:	460c      	mov	r4, r1
10047c32:	a91a      	add	r1, sp, #104	; 0x68
10047c34:	c9e0      	ldmia	r1!, {r5, r6, r7}
10047c36:	2100      	movs	r1, #0
10047c38:	9108      	str	r1, [sp, #32]
10047c3a:	9109      	str	r1, [sp, #36]	; 0x24
10047c3c:	910a      	str	r1, [sp, #40]	; 0x28
10047c3e:	910b      	str	r1, [sp, #44]	; 0x2c
10047c40:	9919      	ldr	r1, [sp, #100]	; 0x64
10047c42:	9104      	str	r1, [sp, #16]
10047c44:	a905      	add	r1, sp, #20
10047c46:	c1e0      	stmia	r1!, {r5, r6, r7}
10047c48:	a916      	add	r1, sp, #88	; 0x58
10047c4a:	c962      	ldmia	r1, {r1, r5, r6}
10047c4c:	9300      	str	r3, [sp, #0]
10047c4e:	9101      	str	r1, [sp, #4]
10047c50:	4613      	mov	r3, r2
10047c52:	4601      	mov	r1, r0
10047c54:	9603      	str	r6, [sp, #12]
10047c56:	9502      	str	r5, [sp, #8]
10047c58:	4622      	mov	r2, r4
10047c5a:	2002      	movs	r0, #2
10047c5c:	f000 fa68 	bl	10048130 <_gap_set_discoverable_connectable>
10047c60:	0004      	movs	r4, r0
10047c62:	d107      	bne.n	10047c74 <GAP_Set_Limited_Discoverable_Mode+0x48>
10047c64:	2004      	movs	r0, #4
10047c66:	a908      	add	r1, sp, #32
10047c68:	7708      	strb	r0, [r1, #28]
10047c6a:	4804      	ldr	r0, [pc, #16]	; (10047c7c <GAP_Set_Limited_Discoverable_Mode+0x50>)
10047c6c:	900e      	str	r0, [sp, #56]	; 0x38
10047c6e:	a80c      	add	r0, sp, #48	; 0x30
10047c70:	f005 fe4a 	bl	1004d908 <Timer_StartOneShot>
10047c74:	4620      	mov	r0, r4
10047c76:	b011      	add	sp, #68	; 0x44
10047c78:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047c7a:	0000      	.short	0x0000
10047c7c:	0002bf20 	.word	0x0002bf20

10047c80 <GAP_Set_NonConnectable_Mode>:
10047c80:	b500      	push	{lr}
10047c82:	2200      	movs	r2, #0
10047c84:	b08d      	sub	sp, #52	; 0x34
10047c86:	920a      	str	r2, [sp, #40]	; 0x28
10047c88:	9205      	str	r2, [sp, #20]
10047c8a:	920b      	str	r2, [sp, #44]	; 0x2c
10047c8c:	9100      	str	r1, [sp, #0]
10047c8e:	9208      	str	r2, [sp, #32]
10047c90:	9209      	str	r2, [sp, #36]	; 0x24
10047c92:	9206      	str	r2, [sp, #24]
10047c94:	9207      	str	r2, [sp, #28]
10047c96:	4601      	mov	r1, r0
10047c98:	9204      	str	r2, [sp, #16]
10047c9a:	9201      	str	r2, [sp, #4]
10047c9c:	9202      	str	r2, [sp, #8]
10047c9e:	4613      	mov	r3, r2
10047ca0:	9203      	str	r2, [sp, #12]
10047ca2:	2003      	movs	r0, #3
10047ca4:	f000 fa44 	bl	10048130 <_gap_set_discoverable_connectable>
10047ca8:	b00d      	add	sp, #52	; 0x34
10047caa:	bd00      	pop	{pc}

10047cac <GAP_Set_Non_Discoverable_Mode>:
10047cac:	2000      	movs	r0, #0
10047cae:	b500      	push	{lr}
10047cb0:	b08d      	sub	sp, #52	; 0x34
10047cb2:	900a      	str	r0, [sp, #40]	; 0x28
10047cb4:	900b      	str	r0, [sp, #44]	; 0x2c
10047cb6:	9008      	str	r0, [sp, #32]
10047cb8:	9009      	str	r0, [sp, #36]	; 0x24
10047cba:	9005      	str	r0, [sp, #20]
10047cbc:	9006      	str	r0, [sp, #24]
10047cbe:	9007      	str	r0, [sp, #28]
10047cc0:	9004      	str	r0, [sp, #16]
10047cc2:	9000      	str	r0, [sp, #0]
10047cc4:	9001      	str	r0, [sp, #4]
10047cc6:	9002      	str	r0, [sp, #8]
10047cc8:	4603      	mov	r3, r0
10047cca:	4602      	mov	r2, r0
10047ccc:	4601      	mov	r1, r0
10047cce:	9003      	str	r0, [sp, #12]
10047cd0:	f000 fa2e 	bl	10048130 <_gap_set_discoverable_connectable>
10047cd4:	b00d      	add	sp, #52	; 0x34
10047cd6:	bd00      	pop	{pc}

10047cd8 <GAP_Set_Undirected_Connectable_Mode>:
10047cd8:	b510      	push	{r4, lr}
10047cda:	4614      	mov	r4, r2
10047cdc:	b08c      	sub	sp, #48	; 0x30
10047cde:	2200      	movs	r2, #0
10047ce0:	920b      	str	r2, [sp, #44]	; 0x2c
10047ce2:	9206      	str	r2, [sp, #24]
10047ce4:	920a      	str	r2, [sp, #40]	; 0x28
10047ce6:	9208      	str	r2, [sp, #32]
10047ce8:	9209      	str	r2, [sp, #36]	; 0x24
10047cea:	9205      	str	r2, [sp, #20]
10047cec:	9207      	str	r2, [sp, #28]
10047cee:	9204      	str	r2, [sp, #16]
10047cf0:	9202      	str	r2, [sp, #8]
10047cf2:	9301      	str	r3, [sp, #4]
10047cf4:	9203      	str	r2, [sp, #12]
10047cf6:	460b      	mov	r3, r1
10047cf8:	4602      	mov	r2, r0
10047cfa:	9400      	str	r4, [sp, #0]
10047cfc:	2100      	movs	r1, #0
10047cfe:	2005      	movs	r0, #5
10047d00:	f000 fa16 	bl	10048130 <_gap_set_discoverable_connectable>
10047d04:	b00c      	add	sp, #48	; 0x30
10047d06:	bd10      	pop	{r4, pc}

10047d08 <GAP_Start_Auto_Conn_Establishment_Proc>:
10047d08:	b538      	push	{r3, r4, r5, lr}
10047d0a:	4b14      	ldr	r3, [pc, #80]	; (10047d5c <GAP_Start_Auto_Conn_Establishment_Proc+0x54>)
10047d0c:	4614      	mov	r4, r2
10047d0e:	681d      	ldr	r5, [r3, #0]
10047d10:	4602      	mov	r2, r0
10047d12:	35ae      	adds	r5, #174	; 0xae
10047d14:	78ab      	ldrb	r3, [r5, #2]
10047d16:	2046      	movs	r0, #70	; 0x46
10047d18:	075b      	lsls	r3, r3, #29
10047d1a:	d51e      	bpl.n	10047d5a <GAP_Start_Auto_Conn_Establishment_Proc+0x52>
10047d1c:	792b      	ldrb	r3, [r5, #4]
10047d1e:	065b      	lsls	r3, r3, #25
10047d20:	0edb      	lsrs	r3, r3, #27
10047d22:	d11a      	bne.n	10047d5a <GAP_Start_Auto_Conn_Establishment_Proc+0x52>
10047d24:	4610      	mov	r0, r2
10047d26:	f00d fa0f 	bl	10055148 <GAP_Add_To_WhiteList>
10047d2a:	2800      	cmp	r0, #0
10047d2c:	d115      	bne.n	10047d5a <GAP_Start_Auto_Conn_Establishment_Proc+0x52>
10047d2e:	2300      	movs	r3, #0
10047d30:	7e20      	ldrb	r0, [r4, #24]
10047d32:	466a      	mov	r2, sp
10047d34:	4619      	mov	r1, r3
10047d36:	f00d fa37 	bl	100551a8 <GAP_Privacy1v2>
10047d3a:	2800      	cmp	r0, #0
10047d3c:	d10d      	bne.n	10047d5a <GAP_Start_Auto_Conn_Establishment_Proc+0x52>
10047d3e:	4668      	mov	r0, sp
10047d40:	7800      	ldrb	r0, [r0, #0]
10047d42:	7620      	strb	r0, [r4, #24]
10047d44:	2001      	movs	r0, #1
10047d46:	7420      	strb	r0, [r4, #16]
10047d48:	4620      	mov	r0, r4
10047d4a:	f00a f833 	bl	10051db4 <LL_Create_Connection>
10047d4e:	2800      	cmp	r0, #0
10047d50:	d103      	bne.n	10047d5a <GAP_Start_Auto_Conn_Establishment_Proc+0x52>
10047d52:	7929      	ldrb	r1, [r5, #4]
10047d54:	2208      	movs	r2, #8
10047d56:	4311      	orrs	r1, r2
10047d58:	7129      	strb	r1, [r5, #4]
10047d5a:	bd38      	pop	{r3, r4, r5, pc}
10047d5c:	20000d64 	.word	0x20000d64

10047d60 <GAP_Start_General_Conn_Establishment_Proc>:
10047d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10047d62:	460e      	mov	r6, r1
10047d64:	4914      	ldr	r1, [pc, #80]	; (10047db8 <GAP_Start_General_Conn_Establishment_Proc+0x58>)
10047d66:	4605      	mov	r5, r0
10047d68:	680c      	ldr	r4, [r1, #0]
10047d6a:	2046      	movs	r0, #70	; 0x46
10047d6c:	34ae      	adds	r4, #174	; 0xae
10047d6e:	78a1      	ldrb	r1, [r4, #2]
10047d70:	0749      	lsls	r1, r1, #29
10047d72:	d520      	bpl.n	10047db6 <GAP_Start_General_Conn_Establishment_Proc+0x56>
10047d74:	7921      	ldrb	r1, [r4, #4]
10047d76:	22bb      	movs	r2, #187	; 0xbb
10047d78:	4211      	tst	r1, r2
10047d7a:	d11c      	bne.n	10047db6 <GAP_Start_General_Conn_Establishment_Proc+0x56>
10047d7c:	2010      	movs	r0, #16
10047d7e:	4301      	orrs	r1, r0
10047d80:	7121      	strb	r1, [r4, #4]
10047d82:	7969      	ldrb	r1, [r5, #5]
10047d84:	79a8      	ldrb	r0, [r5, #6]
10047d86:	2300      	movs	r3, #0
10047d88:	466a      	mov	r2, sp
10047d8a:	f00d fa0d 	bl	100551a8 <GAP_Privacy1v2>
10047d8e:	2800      	cmp	r0, #0
10047d90:	d10d      	bne.n	10047dae <GAP_Start_General_Conn_Establishment_Proc+0x4e>
10047d92:	4668      	mov	r0, sp
10047d94:	7800      	ldrb	r0, [r0, #0]
10047d96:	71a8      	strb	r0, [r5, #6]
10047d98:	4628      	mov	r0, r5
10047d9a:	f00f f843 	bl	10056e24 <LL_Set_Scan_Params>
10047d9e:	2800      	cmp	r0, #0
10047da0:	d105      	bne.n	10047dae <GAP_Start_General_Conn_Establishment_Proc+0x4e>
10047da2:	4631      	mov	r1, r6
10047da4:	2001      	movs	r0, #1
10047da6:	f00a f959 	bl	1005205c <LL_Enable_Disable_Scan>
10047daa:	2800      	cmp	r0, #0
10047dac:	d003      	beq.n	10047db6 <GAP_Start_General_Conn_Establishment_Proc+0x56>
10047dae:	7921      	ldrb	r1, [r4, #4]
10047db0:	22ef      	movs	r2, #239	; 0xef
10047db2:	4011      	ands	r1, r2
10047db4:	7121      	strb	r1, [r4, #4]
10047db6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10047db8:	20000d64 	.word	0x20000d64

10047dbc <GAP_Start_General_Discovery_Procedure>:
10047dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
10047dbe:	4c10      	ldr	r4, [pc, #64]	; (10047e00 <GAP_Start_General_Discovery_Procedure+0x44>)
10047dc0:	2546      	movs	r5, #70	; 0x46
10047dc2:	6824      	ldr	r4, [r4, #0]
10047dc4:	b085      	sub	sp, #20
10047dc6:	34ae      	adds	r4, #174	; 0xae
10047dc8:	78a6      	ldrb	r6, [r4, #2]
10047dca:	0776      	lsls	r6, r6, #29
10047dcc:	d514      	bpl.n	10047df8 <GAP_Start_General_Discovery_Procedure+0x3c>
10047dce:	7926      	ldrb	r6, [r4, #4]
10047dd0:	27b3      	movs	r7, #179	; 0xb3
10047dd2:	423e      	tst	r6, r7
10047dd4:	d110      	bne.n	10047df8 <GAP_Start_General_Discovery_Procedure+0x3c>
10047dd6:	f00d fb15 	bl	10055404 <GAP_Start_Discovery_Procedure>
10047dda:	0005      	movs	r5, r0
10047ddc:	d10c      	bne.n	10047df8 <GAP_Start_General_Discovery_Procedure+0x3c>
10047dde:	7920      	ldrb	r0, [r4, #4]
10047de0:	2102      	movs	r1, #2
10047de2:	4308      	orrs	r0, r1
10047de4:	7120      	strb	r0, [r4, #4]
10047de6:	2006      	movs	r0, #6
10047de8:	4669      	mov	r1, sp
10047dea:	7308      	strb	r0, [r1, #12]
10047dec:	2005      	movs	r0, #5
10047dee:	02c0      	lsls	r0, r0, #11
10047df0:	9002      	str	r0, [sp, #8]
10047df2:	4668      	mov	r0, sp
10047df4:	f005 fd88 	bl	1004d908 <Timer_StartOneShot>
10047df8:	4628      	mov	r0, r5
10047dfa:	b005      	add	sp, #20
10047dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047dfe:	0000      	.short	0x0000
10047e00:	20000d64 	.word	0x20000d64

10047e04 <GAP_Start_Limited_Discovery_Procedure>:
10047e04:	b5f0      	push	{r4, r5, r6, r7, lr}
10047e06:	4c10      	ldr	r4, [pc, #64]	; (10047e48 <GAP_Start_Limited_Discovery_Procedure+0x44>)
10047e08:	2546      	movs	r5, #70	; 0x46
10047e0a:	6824      	ldr	r4, [r4, #0]
10047e0c:	b085      	sub	sp, #20
10047e0e:	34ae      	adds	r4, #174	; 0xae
10047e10:	78a6      	ldrb	r6, [r4, #2]
10047e12:	0776      	lsls	r6, r6, #29
10047e14:	d514      	bpl.n	10047e40 <GAP_Start_Limited_Discovery_Procedure+0x3c>
10047e16:	7926      	ldrb	r6, [r4, #4]
10047e18:	27b3      	movs	r7, #179	; 0xb3
10047e1a:	423e      	tst	r6, r7
10047e1c:	d110      	bne.n	10047e40 <GAP_Start_Limited_Discovery_Procedure+0x3c>
10047e1e:	f00d faf1 	bl	10055404 <GAP_Start_Discovery_Procedure>
10047e22:	0005      	movs	r5, r0
10047e24:	d10c      	bne.n	10047e40 <GAP_Start_Limited_Discovery_Procedure+0x3c>
10047e26:	7920      	ldrb	r0, [r4, #4]
10047e28:	2101      	movs	r1, #1
10047e2a:	4308      	orrs	r0, r1
10047e2c:	7120      	strb	r0, [r4, #4]
10047e2e:	2006      	movs	r0, #6
10047e30:	4669      	mov	r1, sp
10047e32:	7308      	strb	r0, [r1, #12]
10047e34:	2005      	movs	r0, #5
10047e36:	02c0      	lsls	r0, r0, #11
10047e38:	9002      	str	r0, [sp, #8]
10047e3a:	4668      	mov	r0, sp
10047e3c:	f005 fd64 	bl	1004d908 <Timer_StartOneShot>
10047e40:	4628      	mov	r0, r5
10047e42:	b005      	add	sp, #20
10047e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047e46:	0000      	.short	0x0000
10047e48:	20000d64 	.word	0x20000d64

10047e4c <GAP_Start_Name_Discovery_Procedure>:
10047e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10047e4e:	4912      	ldr	r1, [pc, #72]	; (10047e98 <GAP_Start_Name_Discovery_Procedure+0x4c>)
10047e50:	4605      	mov	r5, r0
10047e52:	680c      	ldr	r4, [r1, #0]
10047e54:	2046      	movs	r0, #70	; 0x46
10047e56:	34ae      	adds	r4, #174	; 0xae
10047e58:	78a1      	ldrb	r1, [r4, #2]
10047e5a:	0749      	lsls	r1, r1, #29
10047e5c:	d51a      	bpl.n	10047e94 <GAP_Start_Name_Discovery_Procedure+0x48>
10047e5e:	7921      	ldrb	r1, [r4, #4]
10047e60:	224c      	movs	r2, #76	; 0x4c
10047e62:	4211      	tst	r1, r2
10047e64:	d116      	bne.n	10047e94 <GAP_Start_Name_Discovery_Procedure+0x48>
10047e66:	2300      	movs	r3, #0
10047e68:	7e28      	ldrb	r0, [r5, #24]
10047e6a:	466a      	mov	r2, sp
10047e6c:	4619      	mov	r1, r3
10047e6e:	f00d f99b 	bl	100551a8 <GAP_Privacy1v2>
10047e72:	2800      	cmp	r0, #0
10047e74:	d10e      	bne.n	10047e94 <GAP_Start_Name_Discovery_Procedure+0x48>
10047e76:	4668      	mov	r0, sp
10047e78:	7800      	ldrb	r0, [r0, #0]
10047e7a:	7628      	strb	r0, [r5, #24]
10047e7c:	2600      	movs	r6, #0
10047e7e:	742e      	strb	r6, [r5, #16]
10047e80:	4628      	mov	r0, r5
10047e82:	f009 ff97 	bl	10051db4 <LL_Create_Connection>
10047e86:	2800      	cmp	r0, #0
10047e88:	d104      	bne.n	10047e94 <GAP_Start_Name_Discovery_Procedure+0x48>
10047e8a:	7921      	ldrb	r1, [r4, #4]
10047e8c:	2204      	movs	r2, #4
10047e8e:	4311      	orrs	r1, r2
10047e90:	7121      	strb	r1, [r4, #4]
10047e92:	72e6      	strb	r6, [r4, #11]
10047e94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10047e96:	0000      	.short	0x0000
10047e98:	20000d64 	.word	0x20000d64

10047e9c <GAP_Start_Observation_Procedure>:
10047e9c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10047e9e:	491b      	ldr	r1, [pc, #108]	; (10047f0c <GAP_Start_Observation_Procedure+0x70>)
10047ea0:	4604      	mov	r4, r0
10047ea2:	680d      	ldr	r5, [r1, #0]
10047ea4:	7926      	ldrb	r6, [r4, #4]
10047ea6:	2046      	movs	r0, #70	; 0x46
10047ea8:	35ae      	adds	r5, #174	; 0xae
10047eaa:	2e01      	cmp	r6, #1
10047eac:	d003      	beq.n	10047eb6 <GAP_Start_Observation_Procedure+0x1a>
10047eae:	2e00      	cmp	r6, #0
10047eb0:	d001      	beq.n	10047eb6 <GAP_Start_Observation_Procedure+0x1a>
10047eb2:	2042      	movs	r0, #66	; 0x42
10047eb4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10047eb6:	78a9      	ldrb	r1, [r5, #2]
10047eb8:	0709      	lsls	r1, r1, #28
10047eba:	d5fb      	bpl.n	10047eb4 <GAP_Start_Observation_Procedure+0x18>
10047ebc:	7929      	ldrb	r1, [r5, #4]
10047ebe:	22b3      	movs	r2, #179	; 0xb3
10047ec0:	4211      	tst	r1, r2
10047ec2:	d1f7      	bne.n	10047eb4 <GAP_Start_Observation_Procedure+0x18>
10047ec4:	2080      	movs	r0, #128	; 0x80
10047ec6:	4301      	orrs	r1, r0
10047ec8:	7129      	strb	r1, [r5, #4]
10047eca:	79e1      	ldrb	r1, [r4, #7]
10047ecc:	7960      	ldrb	r0, [r4, #5]
10047ece:	2300      	movs	r3, #0
10047ed0:	aa02      	add	r2, sp, #8
10047ed2:	f00d f969 	bl	100551a8 <GAP_Privacy1v2>
10047ed6:	2800      	cmp	r0, #0
10047ed8:	d113      	bne.n	10047f02 <GAP_Start_Observation_Procedure+0x66>
10047eda:	4668      	mov	r0, sp
10047edc:	7a01      	ldrb	r1, [r0, #8]
10047ede:	7181      	strb	r1, [r0, #6]
10047ee0:	8821      	ldrh	r1, [r4, #0]
10047ee2:	8001      	strh	r1, [r0, #0]
10047ee4:	8861      	ldrh	r1, [r4, #2]
10047ee6:	8041      	strh	r1, [r0, #2]
10047ee8:	79e1      	ldrb	r1, [r4, #7]
10047eea:	7141      	strb	r1, [r0, #5]
10047eec:	7106      	strb	r6, [r0, #4]
10047eee:	f00e ff99 	bl	10056e24 <LL_Set_Scan_Params>
10047ef2:	2800      	cmp	r0, #0
10047ef4:	d105      	bne.n	10047f02 <GAP_Start_Observation_Procedure+0x66>
10047ef6:	79a1      	ldrb	r1, [r4, #6]
10047ef8:	2001      	movs	r0, #1
10047efa:	f00a f8af 	bl	1005205c <LL_Enable_Disable_Scan>
10047efe:	2800      	cmp	r0, #0
10047f00:	d0d8      	beq.n	10047eb4 <GAP_Start_Observation_Procedure+0x18>
10047f02:	7929      	ldrb	r1, [r5, #4]
10047f04:	0649      	lsls	r1, r1, #25
10047f06:	0e49      	lsrs	r1, r1, #25
10047f08:	7129      	strb	r1, [r5, #4]
10047f0a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10047f0c:	20000d64 	.word	0x20000d64

10047f10 <GAP_Start_Selective_Conn_Establishment_Proc>:
10047f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10047f12:	461e      	mov	r6, r3
10047f14:	4b18      	ldr	r3, [pc, #96]	; (10047f78 <GAP_Start_Selective_Conn_Establishment_Proc+0x68>)
10047f16:	4615      	mov	r5, r2
10047f18:	681c      	ldr	r4, [r3, #0]
10047f1a:	4602      	mov	r2, r0
10047f1c:	34ae      	adds	r4, #174	; 0xae
10047f1e:	78a3      	ldrb	r3, [r4, #2]
10047f20:	2046      	movs	r0, #70	; 0x46
10047f22:	075b      	lsls	r3, r3, #29
10047f24:	d526      	bpl.n	10047f74 <GAP_Start_Selective_Conn_Establishment_Proc+0x64>
10047f26:	7923      	ldrb	r3, [r4, #4]
10047f28:	27bb      	movs	r7, #187	; 0xbb
10047f2a:	423b      	tst	r3, r7
10047f2c:	d122      	bne.n	10047f74 <GAP_Start_Selective_Conn_Establishment_Proc+0x64>
10047f2e:	4610      	mov	r0, r2
10047f30:	f00d f90a 	bl	10055148 <GAP_Add_To_WhiteList>
10047f34:	2800      	cmp	r0, #0
10047f36:	d11d      	bne.n	10047f74 <GAP_Start_Selective_Conn_Establishment_Proc+0x64>
10047f38:	7920      	ldrb	r0, [r4, #4]
10047f3a:	2120      	movs	r1, #32
10047f3c:	4308      	orrs	r0, r1
10047f3e:	7120      	strb	r0, [r4, #4]
10047f40:	7969      	ldrb	r1, [r5, #5]
10047f42:	79a8      	ldrb	r0, [r5, #6]
10047f44:	2300      	movs	r3, #0
10047f46:	466a      	mov	r2, sp
10047f48:	f00d f92e 	bl	100551a8 <GAP_Privacy1v2>
10047f4c:	2800      	cmp	r0, #0
10047f4e:	d10d      	bne.n	10047f6c <GAP_Start_Selective_Conn_Establishment_Proc+0x5c>
10047f50:	4668      	mov	r0, sp
10047f52:	7800      	ldrb	r0, [r0, #0]
10047f54:	71a8      	strb	r0, [r5, #6]
10047f56:	4628      	mov	r0, r5
10047f58:	f00e ff64 	bl	10056e24 <LL_Set_Scan_Params>
10047f5c:	2800      	cmp	r0, #0
10047f5e:	d105      	bne.n	10047f6c <GAP_Start_Selective_Conn_Establishment_Proc+0x5c>
10047f60:	4631      	mov	r1, r6
10047f62:	2001      	movs	r0, #1
10047f64:	f00a f87a 	bl	1005205c <LL_Enable_Disable_Scan>
10047f68:	2800      	cmp	r0, #0
10047f6a:	d003      	beq.n	10047f74 <GAP_Start_Selective_Conn_Establishment_Proc+0x64>
10047f6c:	7921      	ldrb	r1, [r4, #4]
10047f6e:	22df      	movs	r2, #223	; 0xdf
10047f70:	4011      	ands	r1, r2
10047f72:	7121      	strb	r1, [r4, #4]
10047f74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10047f76:	0000      	.short	0x0000
10047f78:	20000d64 	.word	0x20000d64

10047f7c <GAP_Started_Gatt_Proc>:
10047f7c:	4909      	ldr	r1, [pc, #36]	; (10047fa4 <GAP_Started_Gatt_Proc+0x28>)
10047f7e:	22b2      	movs	r2, #178	; 0xb2
10047f80:	6809      	ldr	r1, [r1, #0]
10047f82:	2314      	movs	r3, #20
10047f84:	5c52      	ldrb	r2, [r2, r1]
10047f86:	31ba      	adds	r1, #186	; 0xba
10047f88:	421a      	tst	r2, r3
10047f8a:	d008      	beq.n	10047f9e <GAP_Started_Gatt_Proc+0x22>
10047f8c:	8849      	ldrh	r1, [r1, #2]
10047f8e:	0500      	lsls	r0, r0, #20
10047f90:	0509      	lsls	r1, r1, #20
10047f92:	0d09      	lsrs	r1, r1, #20
10047f94:	0d00      	lsrs	r0, r0, #20
10047f96:	4281      	cmp	r1, r0
10047f98:	d101      	bne.n	10047f9e <GAP_Started_Gatt_Proc+0x22>
10047f9a:	2001      	movs	r0, #1
10047f9c:	4770      	bx	lr
10047f9e:	2000      	movs	r0, #0
10047fa0:	4770      	bx	lr
10047fa2:	0000      	.short	0x0000
10047fa4:	20000d64 	.word	0x20000d64

10047fa8 <GAP_Terminate_Gap_Procedure>:
10047fa8:	b570      	push	{r4, r5, r6, lr}
10047faa:	4604      	mov	r4, r0
10047fac:	4820      	ldr	r0, [pc, #128]	; (10048030 <GAP_Terminate_Gap_Procedure+0x88>)
10047fae:	2546      	movs	r5, #70	; 0x46
10047fb0:	6806      	ldr	r6, [r0, #0]
10047fb2:	b086      	sub	sp, #24
10047fb4:	36ae      	adds	r6, #174	; 0xae
10047fb6:	2c01      	cmp	r4, #1
10047fb8:	d00f      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fba:	2c02      	cmp	r4, #2
10047fbc:	d00d      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fbe:	2c04      	cmp	r4, #4
10047fc0:	d00b      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fc2:	2c08      	cmp	r4, #8
10047fc4:	d009      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fc6:	2c10      	cmp	r4, #16
10047fc8:	d007      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fca:	2c20      	cmp	r4, #32
10047fcc:	d005      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fce:	2c40      	cmp	r4, #64	; 0x40
10047fd0:	d003      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fd2:	2c80      	cmp	r4, #128	; 0x80
10047fd4:	d001      	beq.n	10047fda <GAP_Terminate_Gap_Procedure+0x32>
10047fd6:	2542      	movs	r5, #66	; 0x42
10047fd8:	e027      	b.n	1004802a <GAP_Terminate_Gap_Procedure+0x82>
10047fda:	7930      	ldrb	r0, [r6, #4]
10047fdc:	4220      	tst	r0, r4
10047fde:	d024      	beq.n	1004802a <GAP_Terminate_Gap_Procedure+0x82>
10047fe0:	2c08      	cmp	r4, #8
10047fe2:	d012      	beq.n	1004800a <GAP_Terminate_Gap_Procedure+0x62>
10047fe4:	2c40      	cmp	r4, #64	; 0x40
10047fe6:	d010      	beq.n	1004800a <GAP_Terminate_Gap_Procedure+0x62>
10047fe8:	2006      	movs	r0, #6
10047fea:	2c01      	cmp	r4, #1
10047fec:	d003      	beq.n	10047ff6 <GAP_Terminate_Gap_Procedure+0x4e>
10047fee:	2c02      	cmp	r4, #2
10047ff0:	d001      	beq.n	10047ff6 <GAP_Terminate_Gap_Procedure+0x4e>
10047ff2:	2c80      	cmp	r4, #128	; 0x80
10047ff4:	d104      	bne.n	10048000 <GAP_Terminate_Gap_Procedure+0x58>
10047ff6:	4669      	mov	r1, sp
10047ff8:	7308      	strb	r0, [r1, #12]
10047ffa:	4668      	mov	r0, sp
10047ffc:	f005 fcd0 	bl	1004d9a0 <Timer_StopOneShot>
10048000:	2100      	movs	r1, #0
10048002:	4608      	mov	r0, r1
10048004:	f00a f82a 	bl	1005205c <LL_Enable_Disable_Scan>
10048008:	e001      	b.n	1004800e <GAP_Terminate_Gap_Procedure+0x66>
1004800a:	f00a f80b 	bl	10052024 <LL_Create_Connection_Cancel>
1004800e:	0005      	movs	r5, r0
10048010:	d10b      	bne.n	1004802a <GAP_Terminate_Gap_Procedure+0x82>
10048012:	7930      	ldrb	r0, [r6, #4]
10048014:	2100      	movs	r1, #0
10048016:	43a0      	bics	r0, r4
10048018:	7130      	strb	r0, [r6, #4]
1004801a:	4668      	mov	r0, sp
1004801c:	7404      	strb	r4, [r0, #16]
1004801e:	7441      	strb	r1, [r0, #17]
10048020:	2102      	movs	r1, #2
10048022:	aa04      	add	r2, sp, #16
10048024:	4608      	mov	r0, r1
10048026:	f000 f965 	bl	100482f4 <aci_gap_proc_complete_event_push>
1004802a:	4628      	mov	r0, r5
1004802c:	b006      	add	sp, #24
1004802e:	bd70      	pop	{r4, r5, r6, pc}
10048030:	20000d64 	.word	0x20000d64

10048034 <GAP_check_and_set_role>:
10048034:	7802      	ldrb	r2, [r0, #0]
10048036:	0709      	lsls	r1, r1, #28
10048038:	0f09      	lsrs	r1, r1, #28
1004803a:	430a      	orrs	r2, r1
1004803c:	7002      	strb	r2, [r0, #0]
1004803e:	2000      	movs	r0, #0
10048040:	4770      	bx	lr
	...

10048044 <GAP_discover_peer_name>:
10048044:	b530      	push	{r4, r5, lr}
10048046:	480e      	ldr	r0, [pc, #56]	; (10048080 <GAP_discover_peer_name+0x3c>)
10048048:	b085      	sub	sp, #20
1004804a:	6805      	ldr	r5, [r0, #0]
1004804c:	462c      	mov	r4, r5
1004804e:	35ae      	adds	r5, #174	; 0xae
10048050:	7928      	ldrb	r0, [r5, #4]
10048052:	34ba      	adds	r4, #186	; 0xba
10048054:	0740      	lsls	r0, r0, #29
10048056:	d511      	bpl.n	1004807c <GAP_discover_peer_name+0x38>
10048058:	7ae8      	ldrb	r0, [r5, #11]
1004805a:	2801      	cmp	r0, #1
1004805c:	d10e      	bne.n	1004807c <GAP_discover_peer_name+0x38>
1004805e:	2115      	movs	r1, #21
10048060:	0249      	lsls	r1, r1, #9
10048062:	4668      	mov	r0, sp
10048064:	8041      	strh	r1, [r0, #2]
10048066:	2101      	movs	r1, #1
10048068:	7001      	strb	r1, [r0, #0]
1004806a:	8860      	ldrh	r0, [r4, #2]
1004806c:	466b      	mov	r3, sp
1004806e:	4a05      	ldr	r2, [pc, #20]	; (10048084 <GAP_discover_peer_name+0x40>)
10048070:	f000 fe28 	bl	10048cc4 <Gatt_Read_Charac_By_Uuid>
10048074:	2800      	cmp	r0, #0
10048076:	d101      	bne.n	1004807c <GAP_discover_peer_name+0x38>
10048078:	2002      	movs	r0, #2
1004807a:	72e8      	strb	r0, [r5, #11]
1004807c:	b005      	add	sp, #20
1004807e:	bd30      	pop	{r4, r5, pc}
10048080:	20000d64 	.word	0x20000d64
10048084:	0000ffff 	.word	0x0000ffff

10048088 <GAP_enable_controller_privacy>:
10048088:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004808a:	4604      	mov	r4, r0
1004808c:	20e1      	movs	r0, #225	; 0xe1
1004808e:	460d      	mov	r5, r1
10048090:	0080      	lsls	r0, r0, #2
10048092:	f008 fa1f 	bl	100504d4 <LL_LE_Set_Resolvable_Private_Address_Timeout>
10048096:	a10b      	add	r1, pc, #44	; (adr r1, 100480c4 <GAP_enable_controller_privacy+0x3c>)
10048098:	c903      	ldmia	r1, {r0, r1}
1004809a:	9000      	str	r0, [sp, #0]
1004809c:	9101      	str	r1, [sp, #4]
1004809e:	4668      	mov	r0, sp
100480a0:	f005 f828 	bl	1004d0f4 <hci_le_set_event_mask>
100480a4:	2001      	movs	r0, #1
100480a6:	f00f fb37 	bl	10057718 <LL_SetAddressResolutionEnable>
100480aa:	2800      	cmp	r0, #0
100480ac:	d001      	beq.n	100480b2 <GAP_enable_controller_privacy+0x2a>
100480ae:	2047      	movs	r0, #71	; 0x47
100480b0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
100480b2:	7820      	ldrb	r0, [r4, #0]
100480b4:	2120      	movs	r1, #32
100480b6:	4308      	orrs	r0, r1
100480b8:	7020      	strb	r0, [r4, #0]
100480ba:	2009      	movs	r0, #9
100480bc:	7028      	strb	r0, [r5, #0]
100480be:	2000      	movs	r0, #0
100480c0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
100480c2:	0000      	.short	0x0000
100480c4:	0000021f 	.word	0x0000021f
100480c8:	00000000 	.word	0x00000000

100480cc <_GAP_Parse_Advertising_Report>:
100480cc:	b530      	push	{r4, r5, lr}
100480ce:	4b17      	ldr	r3, [pc, #92]	; (1004812c <_GAP_Parse_Advertising_Report+0x60>)
100480d0:	7a04      	ldrb	r4, [r0, #8]
100480d2:	681b      	ldr	r3, [r3, #0]
100480d4:	68c2      	ldr	r2, [r0, #12]
100480d6:	33ae      	adds	r3, #174	; 0xae
100480d8:	791b      	ldrb	r3, [r3, #4]
100480da:	069d      	lsls	r5, r3, #26
100480dc:	0fad      	lsrs	r5, r5, #30
100480de:	d104      	bne.n	100480ea <_GAP_Parse_Advertising_Report+0x1e>
100480e0:	7800      	ldrb	r0, [r0, #0]
100480e2:	2804      	cmp	r0, #4
100480e4:	d001      	beq.n	100480ea <_GAP_Parse_Advertising_Report+0x1e>
100480e6:	2000      	movs	r0, #0
100480e8:	e00b      	b.n	10048102 <_GAP_Parse_Advertising_Report+0x36>
100480ea:	2001      	movs	r0, #1
100480ec:	bd30      	pop	{r4, r5, pc}
100480ee:	1c40      	adds	r0, r0, #1
100480f0:	b280      	uxth	r0, r0
100480f2:	5c15      	ldrb	r5, [r2, r0]
100480f4:	2d01      	cmp	r5, #1
100480f6:	d008      	beq.n	1004810a <_GAP_Parse_Advertising_Report+0x3e>
100480f8:	1815      	adds	r5, r2, r0
100480fa:	3d20      	subs	r5, #32
100480fc:	7fed      	ldrb	r5, [r5, #31]
100480fe:	1828      	adds	r0, r5, r0
10048100:	b280      	uxth	r0, r0
10048102:	42a0      	cmp	r0, r4
10048104:	d3f3      	bcc.n	100480ee <_GAP_Parse_Advertising_Report+0x22>
10048106:	7808      	ldrb	r0, [r1, #0]
10048108:	bd30      	pop	{r4, r5, pc}
1004810a:	1c40      	adds	r0, r0, #1
1004810c:	07dd      	lsls	r5, r3, #31
1004810e:	2401      	movs	r4, #1
10048110:	b280      	uxth	r0, r0
10048112:	2d00      	cmp	r5, #0
10048114:	d002      	beq.n	1004811c <_GAP_Parse_Advertising_Report+0x50>
10048116:	5c10      	ldrb	r0, [r2, r0]
10048118:	07c0      	lsls	r0, r0, #31
1004811a:	e003      	b.n	10048124 <_GAP_Parse_Advertising_Report+0x58>
1004811c:	079b      	lsls	r3, r3, #30
1004811e:	d5f2      	bpl.n	10048106 <_GAP_Parse_Advertising_Report+0x3a>
10048120:	5c10      	ldrb	r0, [r2, r0]
10048122:	0780      	lsls	r0, r0, #30
10048124:	2800      	cmp	r0, #0
10048126:	d0ee      	beq.n	10048106 <_GAP_Parse_Advertising_Report+0x3a>
10048128:	700c      	strb	r4, [r1, #0]
1004812a:	e7ec      	b.n	10048106 <_GAP_Parse_Advertising_Report+0x3a>
1004812c:	20000d64 	.word	0x20000d64

10048130 <_gap_set_discoverable_connectable>:
10048130:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10048132:	b095      	sub	sp, #84	; 0x54
10048134:	460e      	mov	r6, r1
10048136:	4605      	mov	r5, r0
10048138:	2120      	movs	r1, #32
1004813a:	a80c      	add	r0, sp, #48	; 0x30
1004813c:	f7fe fb10 	bl	10046760 <__aeabi_memclr>
10048140:	2000      	movs	r0, #0
10048142:	9004      	str	r0, [sp, #16]
10048144:	4856      	ldr	r0, [pc, #344]	; (100482a0 <_gap_set_discoverable_connectable+0x170>)
10048146:	2700      	movs	r7, #0
10048148:	6804      	ldr	r4, [r0, #0]
1004814a:	1e68      	subs	r0, r5, #1
1004814c:	34ae      	adds	r4, #174	; 0xae
1004814e:	2804      	cmp	r0, #4
10048150:	d802      	bhi.n	10048158 <_gap_set_discoverable_connectable+0x28>
10048152:	78a0      	ldrb	r0, [r4, #2]
10048154:	07c0      	lsls	r0, r0, #31
10048156:	d00b      	beq.n	10048170 <_gap_set_discoverable_connectable+0x40>
10048158:	2d06      	cmp	r5, #6
1004815a:	d002      	beq.n	10048162 <_gap_set_discoverable_connectable+0x32>
1004815c:	2d00      	cmp	r5, #0
1004815e:	d00a      	beq.n	10048176 <_gap_set_discoverable_connectable+0x46>
10048160:	e002      	b.n	10048168 <_gap_set_discoverable_connectable+0x38>
10048162:	78a0      	ldrb	r0, [r4, #2]
10048164:	0780      	lsls	r0, r0, #30
10048166:	d503      	bpl.n	10048170 <_gap_set_discoverable_connectable+0x40>
10048168:	78e0      	ldrb	r0, [r4, #3]
1004816a:	0640      	lsls	r0, r0, #25
1004816c:	0e80      	lsrs	r0, r0, #26
1004816e:	d00a      	beq.n	10048186 <_gap_set_discoverable_connectable+0x56>
10048170:	2046      	movs	r0, #70	; 0x46
10048172:	b019      	add	sp, #100	; 0x64
10048174:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048176:	78a0      	ldrb	r0, [r4, #2]
10048178:	0780      	lsls	r0, r0, #30
1004817a:	d0f9      	beq.n	10048170 <_gap_set_discoverable_connectable+0x40>
1004817c:	78e0      	ldrb	r0, [r4, #3]
1004817e:	0640      	lsls	r0, r0, #25
10048180:	0e80      	lsrs	r0, r0, #26
10048182:	d0f5      	beq.n	10048170 <_gap_set_discoverable_connectable+0x40>
10048184:	e00f      	b.n	100481a6 <_gap_set_discoverable_connectable+0x76>
10048186:	2d00      	cmp	r5, #0
10048188:	d00d      	beq.n	100481a6 <_gap_set_discoverable_connectable+0x76>
1004818a:	2d01      	cmp	r5, #1
1004818c:	d020      	beq.n	100481d0 <_gap_set_discoverable_connectable+0xa0>
1004818e:	2d02      	cmp	r5, #2
10048190:	d028      	beq.n	100481e4 <_gap_set_discoverable_connectable+0xb4>
10048192:	2d06      	cmp	r5, #6
10048194:	d033      	beq.n	100481fe <_gap_set_discoverable_connectable+0xce>
10048196:	2d03      	cmp	r5, #3
10048198:	d033      	beq.n	10048202 <_gap_set_discoverable_connectable+0xd2>
1004819a:	2d04      	cmp	r5, #4
1004819c:	d037      	beq.n	1004820e <_gap_set_discoverable_connectable+0xde>
1004819e:	2e00      	cmp	r6, #0
100481a0:	d03b      	beq.n	1004821a <_gap_set_discoverable_connectable+0xea>
100481a2:	2042      	movs	r0, #66	; 0x42
100481a4:	e7e5      	b.n	10048172 <_gap_set_discoverable_connectable+0x42>
100481a6:	2000      	movs	r0, #0
100481a8:	f00e f832 	bl	10056210 <LL_Enable_Disable_Adv>
100481ac:	2800      	cmp	r0, #0
100481ae:	d1e0      	bne.n	10048172 <_gap_set_discoverable_connectable+0x42>
100481b0:	78e0      	ldrb	r0, [r4, #3]
100481b2:	0780      	lsls	r0, r0, #30
100481b4:	d508      	bpl.n	100481c8 <_gap_set_discoverable_connectable+0x98>
100481b6:	2004      	movs	r0, #4
100481b8:	4669      	mov	r1, sp
100481ba:	7308      	strb	r0, [r1, #12]
100481bc:	4668      	mov	r0, sp
100481be:	f005 fbef 	bl	1004d9a0 <Timer_StopOneShot>
100481c2:	2002      	movs	r0, #2
100481c4:	f000 f86e 	bl	100482a4 <aci_gap_limited_discoverable_event_push>
100481c8:	2001      	movs	r0, #1
100481ca:	70e0      	strb	r0, [r4, #3]
100481cc:	2000      	movs	r0, #0
100481ce:	e7d0      	b.n	10048172 <_gap_set_discoverable_connectable+0x42>
100481d0:	2e01      	cmp	r6, #1
100481d2:	d0e6      	beq.n	100481a2 <_gap_set_discoverable_connectable+0x72>
100481d4:	2e04      	cmp	r6, #4
100481d6:	d0e4      	beq.n	100481a2 <_gap_set_discoverable_connectable+0x72>
100481d8:	981f      	ldr	r0, [sp, #124]	; 0x7c
100481da:	2800      	cmp	r0, #0
100481dc:	d1e1      	bne.n	100481a2 <_gap_set_discoverable_connectable+0x72>
100481de:	2706      	movs	r7, #6
100481e0:	2004      	movs	r0, #4
100481e2:	e008      	b.n	100481f6 <_gap_set_discoverable_connectable+0xc6>
100481e4:	2e01      	cmp	r6, #1
100481e6:	d0dc      	beq.n	100481a2 <_gap_set_discoverable_connectable+0x72>
100481e8:	2e04      	cmp	r6, #4
100481ea:	d0da      	beq.n	100481a2 <_gap_set_discoverable_connectable+0x72>
100481ec:	981f      	ldr	r0, [sp, #124]	; 0x7c
100481ee:	2800      	cmp	r0, #0
100481f0:	d1d7      	bne.n	100481a2 <_gap_set_discoverable_connectable+0x72>
100481f2:	2705      	movs	r7, #5
100481f4:	2002      	movs	r0, #2
100481f6:	70e0      	strb	r0, [r4, #3]
100481f8:	2001      	movs	r0, #1
100481fa:	9004      	str	r0, [sp, #16]
100481fc:	e010      	b.n	10048220 <_gap_set_discoverable_connectable+0xf0>
100481fe:	2040      	movs	r0, #64	; 0x40
10048200:	e00d      	b.n	1004821e <_gap_set_discoverable_connectable+0xee>
10048202:	2e02      	cmp	r6, #2
10048204:	d001      	beq.n	1004820a <_gap_set_discoverable_connectable+0xda>
10048206:	2e03      	cmp	r6, #3
10048208:	d1cb      	bne.n	100481a2 <_gap_set_discoverable_connectable+0x72>
1004820a:	2008      	movs	r0, #8
1004820c:	e007      	b.n	1004821e <_gap_set_discoverable_connectable+0xee>
1004820e:	2e01      	cmp	r6, #1
10048210:	d001      	beq.n	10048216 <_gap_set_discoverable_connectable+0xe6>
10048212:	2e04      	cmp	r6, #4
10048214:	d1c5      	bne.n	100481a2 <_gap_set_discoverable_connectable+0x72>
10048216:	2010      	movs	r0, #16
10048218:	e001      	b.n	1004821e <_gap_set_discoverable_connectable+0xee>
1004821a:	2704      	movs	r7, #4
1004821c:	2020      	movs	r0, #32
1004821e:	70e0      	strb	r0, [r4, #3]
10048220:	2300      	movs	r3, #0
10048222:	aa0b      	add	r2, sp, #44	; 0x2c
10048224:	4619      	mov	r1, r3
10048226:	981e      	ldr	r0, [sp, #120]	; 0x78
10048228:	f00c ffbe 	bl	100551a8 <GAP_Privacy1v2>
1004822c:	0003      	movs	r3, r0
1004822e:	d002      	beq.n	10048236 <_gap_set_discoverable_connectable+0x106>
10048230:	f000 f8de 	bl	100483f0 <gapClearAllModeFlags>
10048234:	e032      	b.n	1004829c <_gap_set_discoverable_connectable+0x16c>
10048236:	2210      	movs	r2, #16
10048238:	2100      	movs	r1, #0
1004823a:	a807      	add	r0, sp, #28
1004823c:	f7f8 faa5 	bl	1004078a <Osal_MemSet>
10048240:	a807      	add	r0, sp, #28
10048242:	466c      	mov	r4, sp
10048244:	9b27      	ldr	r3, [sp, #156]	; 0x9c
10048246:	9a26      	ldr	r2, [sp, #152]	; 0x98
10048248:	991f      	ldr	r1, [sp, #124]	; 0x7c
1004824a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1004824c:	462b      	mov	r3, r5
1004824e:	4630      	mov	r0, r6
10048250:	9a18      	ldr	r2, [sp, #96]	; 0x60
10048252:	9917      	ldr	r1, [sp, #92]	; 0x5c
10048254:	f000 f888 	bl	10048368 <advParamsCheckAndSet>
10048258:	0003      	movs	r3, r0
1004825a:	d1e9      	bne.n	10048230 <_gap_set_discoverable_connectable+0x100>
1004825c:	a808      	add	r0, sp, #32
1004825e:	7b01      	ldrb	r1, [r0, #12]
10048260:	70c1      	strb	r1, [r0, #3]
10048262:	9825      	ldr	r0, [sp, #148]	; 0x94
10048264:	ac03      	add	r4, sp, #12
10048266:	9b04      	ldr	r3, [sp, #16]
10048268:	9a28      	ldr	r2, [sp, #160]	; 0xa0
1004826a:	9929      	ldr	r1, [sp, #164]	; 0xa4
1004826c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1004826e:	ab22      	add	r3, sp, #136	; 0x88
10048270:	cb07      	ldmia	r3!, {r0, r1, r2}
10048272:	9202      	str	r2, [sp, #8]
10048274:	9100      	str	r1, [sp, #0]
10048276:	9001      	str	r0, [sp, #4]
10048278:	4639      	mov	r1, r7
1004827a:	a80c      	add	r0, sp, #48	; 0x30
1004827c:	9b20      	ldr	r3, [sp, #128]	; 0x80
1004827e:	9a21      	ldr	r2, [sp, #132]	; 0x84
10048280:	f000 f8c0 	bl	10048404 <setGapAdvData>
10048284:	0003      	movs	r3, r0
10048286:	d1d3      	bne.n	10048230 <_gap_set_discoverable_connectable+0x100>
10048288:	a807      	add	r0, sp, #28
1004828a:	f00e faeb 	bl	10056864 <LL_Set_Adv_Params>
1004828e:	0003      	movs	r3, r0
10048290:	d1ce      	bne.n	10048230 <_gap_set_discoverable_connectable+0x100>
10048292:	2001      	movs	r0, #1
10048294:	f00d ffbc 	bl	10056210 <LL_Enable_Disable_Adv>
10048298:	0003      	movs	r3, r0
1004829a:	d1c9      	bne.n	10048230 <_gap_set_discoverable_connectable+0x100>
1004829c:	4618      	mov	r0, r3
1004829e:	e768      	b.n	10048172 <_gap_set_discoverable_connectable+0x42>
100482a0:	20000d64 	.word	0x20000d64

100482a4 <aci_gap_limited_discoverable_event_push>:
100482a4:	b510      	push	{r4, lr}
100482a6:	4604      	mov	r4, r0
100482a8:	06c1      	lsls	r1, r0, #27
100482aa:	4811      	ldr	r0, [pc, #68]	; (100482f0 <aci_gap_limited_discoverable_event_push+0x4c>)
100482ac:	6800      	ldr	r0, [r0, #0]
100482ae:	d503      	bpl.n	100482b8 <aci_gap_limited_discoverable_event_push+0x14>
100482b0:	2215      	movs	r2, #21
100482b2:	21bf      	movs	r1, #191	; 0xbf
100482b4:	400c      	ands	r4, r1
100482b6:	e006      	b.n	100482c6 <aci_gap_limited_discoverable_event_push+0x22>
100482b8:	2137      	movs	r1, #55	; 0x37
100482ba:	0149      	lsls	r1, r1, #5
100482bc:	1841      	adds	r1, r0, r1
100482be:	7a89      	ldrb	r1, [r1, #10]
100482c0:	07c9      	lsls	r1, r1, #31
100482c2:	d010      	beq.n	100482e6 <aci_gap_limited_discoverable_event_push+0x42>
100482c4:	2212      	movs	r2, #18
100482c6:	0721      	lsls	r1, r4, #28
100482c8:	0e89      	lsrs	r1, r1, #26
100482ca:	1808      	adds	r0, r1, r0
100482cc:	2101      	movs	r1, #1
100482ce:	02c9      	lsls	r1, r1, #11
100482d0:	1840      	adds	r0, r0, r1
100482d2:	6940      	ldr	r0, [r0, #20]
100482d4:	2300      	movs	r3, #0
100482d6:	4621      	mov	r1, r4
100482d8:	f013 fe08 	bl	1005beec <aci_event_fifo_push_header>
100482dc:	0001      	movs	r1, r0
100482de:	d004      	beq.n	100482ea <aci_gap_limited_discoverable_event_push+0x46>
100482e0:	4620      	mov	r0, r4
100482e2:	f013 fdef 	bl	1005bec4 <aci_event_fifo_push>
100482e6:	2000      	movs	r0, #0
100482e8:	bd10      	pop	{r4, pc}
100482ea:	2007      	movs	r0, #7
100482ec:	bd10      	pop	{r4, pc}
100482ee:	0000      	.short	0x0000
100482f0:	20000d64 	.word	0x20000d64

100482f4 <aci_gap_proc_complete_event_push>:
100482f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100482f6:	1e89      	subs	r1, r1, #2
100482f8:	b2cd      	uxtb	r5, r1
100482fa:	4606      	mov	r6, r0
100482fc:	1ca8      	adds	r0, r5, #2
100482fe:	2103      	movs	r1, #3
10048300:	4308      	orrs	r0, r1
10048302:	1c40      	adds	r0, r0, #1
10048304:	0883      	lsrs	r3, r0, #2
10048306:	4817      	ldr	r0, [pc, #92]	; (10048364 <aci_gap_proc_complete_event_push+0x70>)
10048308:	4617      	mov	r7, r2
1004830a:	6800      	ldr	r0, [r0, #0]
1004830c:	06f1      	lsls	r1, r6, #27
1004830e:	d503      	bpl.n	10048318 <aci_gap_proc_complete_event_push+0x24>
10048310:	221c      	movs	r2, #28
10048312:	21bf      	movs	r1, #191	; 0xbf
10048314:	400e      	ands	r6, r1
10048316:	e008      	b.n	1004832a <aci_gap_proc_complete_event_push+0x36>
10048318:	2137      	movs	r1, #55	; 0x37
1004831a:	0149      	lsls	r1, r1, #5
1004831c:	1841      	adds	r1, r0, r1
1004831e:	7a89      	ldrb	r1, [r1, #10]
10048320:	0609      	lsls	r1, r1, #24
10048322:	d401      	bmi.n	10048328 <aci_gap_proc_complete_event_push+0x34>
10048324:	2000      	movs	r0, #0
10048326:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10048328:	2219      	movs	r2, #25
1004832a:	0731      	lsls	r1, r6, #28
1004832c:	0e89      	lsrs	r1, r1, #26
1004832e:	1808      	adds	r0, r1, r0
10048330:	2101      	movs	r1, #1
10048332:	02c9      	lsls	r1, r1, #11
10048334:	1840      	adds	r0, r0, r1
10048336:	6940      	ldr	r0, [r0, #20]
10048338:	4631      	mov	r1, r6
1004833a:	f013 fdd7 	bl	1005beec <aci_event_fifo_push_header>
1004833e:	0004      	movs	r4, r0
10048340:	d00e      	beq.n	10048360 <aci_gap_proc_complete_event_push+0x6c>
10048342:	7839      	ldrb	r1, [r7, #0]
10048344:	7121      	strb	r1, [r4, #4]
10048346:	7879      	ldrb	r1, [r7, #1]
10048348:	7161      	strb	r1, [r4, #5]
1004834a:	71a5      	strb	r5, [r4, #6]
1004834c:	462a      	mov	r2, r5
1004834e:	1cb9      	adds	r1, r7, #2
10048350:	1de0      	adds	r0, r4, #7
10048352:	f7f8 fa16 	bl	10040782 <Osal_MemCpy>
10048356:	4621      	mov	r1, r4
10048358:	4630      	mov	r0, r6
1004835a:	f013 fdb3 	bl	1005bec4 <aci_event_fifo_push>
1004835e:	e7e1      	b.n	10048324 <aci_gap_proc_complete_event_push+0x30>
10048360:	2007      	movs	r0, #7
10048362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10048364:	20000d64 	.word	0x20000d64

10048368 <advParamsCheckAndSet>:
10048368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004836a:	4b20      	ldr	r3, [pc, #128]	; (100483ec <advParamsCheckAndSet+0x84>)
1004836c:	2541      	movs	r5, #65	; 0x41
1004836e:	681b      	ldr	r3, [r3, #0]
10048370:	016d      	lsls	r5, r5, #5
10048372:	195b      	adds	r3, r3, r5
10048374:	2601      	movs	r6, #1
10048376:	9c06      	ldr	r4, [sp, #24]
10048378:	03b6      	lsls	r6, r6, #14
1004837a:	9300      	str	r3, [sp, #0]
1004837c:	2800      	cmp	r0, #0
1004837e:	d014      	beq.n	100483aa <advParamsCheckAndSet+0x42>
10048380:	2804      	cmp	r0, #4
10048382:	d012      	beq.n	100483aa <advParamsCheckAndSet+0x42>
10048384:	2802      	cmp	r0, #2
10048386:	d013      	beq.n	100483b0 <advParamsCheckAndSet+0x48>
10048388:	2803      	cmp	r0, #3
1004838a:	d011      	beq.n	100483b0 <advParamsCheckAndSet+0x48>
1004838c:	2506      	movs	r5, #6
1004838e:	462b      	mov	r3, r5
10048390:	2801      	cmp	r0, #1
10048392:	d010      	beq.n	100483b6 <advParamsCheckAndSet+0x4e>
10048394:	460f      	mov	r7, r1
10048396:	4317      	orrs	r7, r2
10048398:	d00d      	beq.n	100483b6 <advParamsCheckAndSet+0x4e>
1004839a:	4291      	cmp	r1, r2
1004839c:	d803      	bhi.n	100483a6 <advParamsCheckAndSet+0x3e>
1004839e:	2920      	cmp	r1, #32
100483a0:	d301      	bcc.n	100483a6 <advParamsCheckAndSet+0x3e>
100483a2:	42b2      	cmp	r2, r6
100483a4:	d90a      	bls.n	100483bc <advParamsCheckAndSet+0x54>
100483a6:	2042      	movs	r0, #66	; 0x42
100483a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100483aa:	2530      	movs	r5, #48	; 0x30
100483ac:	2360      	movs	r3, #96	; 0x60
100483ae:	e7ef      	b.n	10048390 <advParamsCheckAndSet+0x28>
100483b0:	25a0      	movs	r5, #160	; 0xa0
100483b2:	23f0      	movs	r3, #240	; 0xf0
100483b4:	e7ec      	b.n	10048390 <advParamsCheckAndSet+0x28>
100483b6:	8025      	strh	r5, [r4, #0]
100483b8:	8063      	strh	r3, [r4, #2]
100483ba:	e001      	b.n	100483c0 <advParamsCheckAndSet+0x58>
100483bc:	8021      	strh	r1, [r4, #0]
100483be:	8062      	strh	r2, [r4, #2]
100483c0:	7120      	strb	r0, [r4, #4]
100483c2:	9807      	ldr	r0, [sp, #28]
100483c4:	71a0      	strb	r0, [r4, #6]
100483c6:	9808      	ldr	r0, [sp, #32]
100483c8:	7220      	strb	r0, [r4, #8]
100483ca:	9809      	ldr	r0, [sp, #36]	; 0x24
100483cc:	2800      	cmp	r0, #0
100483ce:	d005      	beq.n	100483dc <advParamsCheckAndSet+0x74>
100483d0:	4601      	mov	r1, r0
100483d2:	4620      	mov	r0, r4
100483d4:	2206      	movs	r2, #6
100483d6:	3009      	adds	r0, #9
100483d8:	f7f8 f9d3 	bl	10040782 <Osal_MemCpy>
100483dc:	2007      	movs	r0, #7
100483de:	7160      	strb	r0, [r4, #5]
100483e0:	9800      	ldr	r0, [sp, #0]
100483e2:	3020      	adds	r0, #32
100483e4:	7b80      	ldrb	r0, [r0, #14]
100483e6:	7160      	strb	r0, [r4, #5]
100483e8:	2000      	movs	r0, #0
100483ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100483ec:	20000d64 	.word	0x20000d64

100483f0 <gapClearAllModeFlags>:
100483f0:	4803      	ldr	r0, [pc, #12]	; (10048400 <gapClearAllModeFlags+0x10>)
100483f2:	2281      	movs	r2, #129	; 0x81
100483f4:	6800      	ldr	r0, [r0, #0]
100483f6:	30a0      	adds	r0, #160	; 0xa0
100483f8:	7c41      	ldrb	r1, [r0, #17]
100483fa:	4011      	ands	r1, r2
100483fc:	7441      	strb	r1, [r0, #17]
100483fe:	4770      	bx	lr
10048400:	20000d64 	.word	0x20000d64

10048404 <setGapAdvData>:
10048404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10048406:	4605      	mov	r5, r0
10048408:	483e      	ldr	r0, [pc, #248]	; (10048504 <setGapAdvData+0x100>)
1004840a:	461e      	mov	r6, r3
1004840c:	6800      	ldr	r0, [r0, #0]
1004840e:	9f07      	ldr	r7, [sp, #28]
10048410:	2400      	movs	r4, #0
10048412:	30ae      	adds	r0, #174	; 0xae
10048414:	4613      	mov	r3, r2
10048416:	2900      	cmp	r1, #0
10048418:	d005      	beq.n	10048426 <setGapAdvData+0x22>
1004841a:	2202      	movs	r2, #2
1004841c:	702a      	strb	r2, [r5, #0]
1004841e:	2201      	movs	r2, #1
10048420:	706a      	strb	r2, [r5, #1]
10048422:	70a9      	strb	r1, [r5, #2]
10048424:	2403      	movs	r4, #3
10048426:	2e00      	cmp	r6, #0
10048428:	d010      	beq.n	1004844c <setGapAdvData+0x48>
1004842a:	7880      	ldrb	r0, [r0, #2]
1004842c:	0680      	lsls	r0, r0, #26
1004842e:	0f80      	lsrs	r0, r0, #30
10048430:	d10c      	bne.n	1004844c <setGapAdvData+0x48>
10048432:	1930      	adds	r0, r6, r4
10048434:	1c40      	adds	r0, r0, #1
10048436:	281f      	cmp	r0, #31
10048438:	d854      	bhi.n	100484e4 <setGapAdvData+0xe0>
1004843a:	552e      	strb	r6, [r5, r4]
1004843c:	1c64      	adds	r4, r4, #1
1004843e:	1928      	adds	r0, r5, r4
10048440:	4632      	mov	r2, r6
10048442:	4619      	mov	r1, r3
10048444:	f7f8 f99d 	bl	10040782 <Osal_MemCpy>
10048448:	19a0      	adds	r0, r4, r6
1004844a:	b2c4      	uxtb	r4, r0
1004844c:	2f00      	cmp	r7, #0
1004844e:	d00d      	beq.n	1004846c <setGapAdvData+0x68>
10048450:	1938      	adds	r0, r7, r4
10048452:	1c40      	adds	r0, r0, #1
10048454:	281f      	cmp	r0, #31
10048456:	d845      	bhi.n	100484e4 <setGapAdvData+0xe0>
10048458:	552f      	strb	r7, [r5, r4]
1004845a:	1c64      	adds	r4, r4, #1
1004845c:	b2e4      	uxtb	r4, r4
1004845e:	1928      	adds	r0, r5, r4
10048460:	463a      	mov	r2, r7
10048462:	9906      	ldr	r1, [sp, #24]
10048464:	f7f8 f98d 	bl	10040782 <Osal_MemCpy>
10048468:	19e0      	adds	r0, r4, r7
1004846a:	b2c4      	uxtb	r4, r0
1004846c:	4668      	mov	r0, sp
1004846e:	8c00      	ldrh	r0, [r0, #32]
10048470:	2800      	cmp	r0, #0
10048472:	d01b      	beq.n	100484ac <setGapAdvData+0xa8>
10048474:	4668      	mov	r0, sp
10048476:	8c80      	ldrh	r0, [r0, #36]	; 0x24
10048478:	2800      	cmp	r0, #0
1004847a:	d017      	beq.n	100484ac <setGapAdvData+0xa8>
1004847c:	1d60      	adds	r0, r4, #5
1004847e:	281f      	cmp	r0, #31
10048480:	d830      	bhi.n	100484e4 <setGapAdvData+0xe0>
10048482:	2005      	movs	r0, #5
10048484:	5528      	strb	r0, [r5, r4]
10048486:	1c64      	adds	r4, r4, #1
10048488:	b2e0      	uxtb	r0, r4
1004848a:	2112      	movs	r1, #18
1004848c:	5429      	strb	r1, [r5, r0]
1004848e:	1c40      	adds	r0, r0, #1
10048490:	b2c4      	uxtb	r4, r0
10048492:	1928      	adds	r0, r5, r4
10048494:	4606      	mov	r6, r0
10048496:	2202      	movs	r2, #2
10048498:	a908      	add	r1, sp, #32
1004849a:	f7f8 f972 	bl	10040782 <Osal_MemCpy>
1004849e:	1cb0      	adds	r0, r6, #2
100484a0:	2202      	movs	r2, #2
100484a2:	a909      	add	r1, sp, #36	; 0x24
100484a4:	f7f8 f96d 	bl	10040782 <Osal_MemCpy>
100484a8:	1d24      	adds	r4, r4, #4
100484aa:	b2e4      	uxtb	r4, r4
100484ac:	980c      	ldr	r0, [sp, #48]	; 0x30
100484ae:	2800      	cmp	r0, #0
100484b0:	d012      	beq.n	100484d8 <setGapAdvData+0xd4>
100484b2:	1ce0      	adds	r0, r4, #3
100484b4:	281f      	cmp	r0, #31
100484b6:	d815      	bhi.n	100484e4 <setGapAdvData+0xe0>
100484b8:	2002      	movs	r0, #2
100484ba:	5528      	strb	r0, [r5, r4]
100484bc:	1c64      	adds	r4, r4, #1
100484be:	b2e0      	uxtb	r0, r4
100484c0:	210a      	movs	r1, #10
100484c2:	5429      	strb	r1, [r5, r0]
100484c4:	1c40      	adds	r0, r0, #1
100484c6:	b2c4      	uxtb	r4, r0
100484c8:	4668      	mov	r0, sp
100484ca:	f00e fd9f 	bl	1005700c <LL_Get_Adv_Tx_Power_Level>
100484ce:	4668      	mov	r0, sp
100484d0:	7800      	ldrb	r0, [r0, #0]
100484d2:	5528      	strb	r0, [r5, r4]
100484d4:	1c64      	adds	r4, r4, #1
100484d6:	b2e4      	uxtb	r4, r4
100484d8:	980b      	ldr	r0, [sp, #44]	; 0x2c
100484da:	2800      	cmp	r0, #0
100484dc:	d00c      	beq.n	100484f8 <setGapAdvData+0xf4>
100484de:	1900      	adds	r0, r0, r4
100484e0:	281f      	cmp	r0, #31
100484e2:	d901      	bls.n	100484e8 <setGapAdvData+0xe4>
100484e4:	2042      	movs	r0, #66	; 0x42
100484e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100484e8:	1928      	adds	r0, r5, r4
100484ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
100484ec:	990a      	ldr	r1, [sp, #40]	; 0x28
100484ee:	f7f8 f948 	bl	10040782 <Osal_MemCpy>
100484f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
100484f4:	1820      	adds	r0, r4, r0
100484f6:	b2c4      	uxtb	r4, r0
100484f8:	4621      	mov	r1, r4
100484fa:	4628      	mov	r0, r5
100484fc:	f00e f910 	bl	10056720 <LL_Set_Adv_Data>
10048500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10048502:	0000      	.short	0x0000
10048504:	20000d64 	.word	0x20000d64

10048508 <Check_and_find_gatt_client>:
10048508:	b500      	push	{lr}
1004850a:	f000 f809 	bl	10048520 <Find_Gatt_Client>
1004850e:	2800      	cmp	r0, #0
10048510:	d005      	beq.n	1004851e <Check_and_find_gatt_client+0x16>
10048512:	2285      	movs	r2, #133	; 0x85
10048514:	6901      	ldr	r1, [r0, #16]
10048516:	0192      	lsls	r2, r2, #6
10048518:	4211      	tst	r1, r2
1004851a:	d000      	beq.n	1004851e <Check_and_find_gatt_client+0x16>
1004851c:	2000      	movs	r0, #0
1004851e:	bd00      	pop	{pc}

10048520 <Find_Gatt_Client>:
10048520:	b510      	push	{r4, lr}
10048522:	490d      	ldr	r1, [pc, #52]	; (10048558 <Find_Gatt_Client+0x38>)
10048524:	0500      	lsls	r0, r0, #20
10048526:	680b      	ldr	r3, [r1, #0]
10048528:	2109      	movs	r1, #9
1004852a:	0209      	lsls	r1, r1, #8
1004852c:	1859      	adds	r1, r3, r1
1004852e:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10048530:	2100      	movs	r1, #0
10048532:	0d00      	lsrs	r0, r0, #20
10048534:	33a0      	adds	r3, #160	; 0xa0
10048536:	7b1b      	ldrb	r3, [r3, #12]
10048538:	e00a      	b.n	10048550 <Find_Gatt_Client+0x30>
1004853a:	014c      	lsls	r4, r1, #5
1004853c:	5b14      	ldrh	r4, [r2, r4]
1004853e:	0524      	lsls	r4, r4, #20
10048540:	0d24      	lsrs	r4, r4, #20
10048542:	4284      	cmp	r4, r0
10048544:	d102      	bne.n	1004854c <Find_Gatt_Client+0x2c>
10048546:	0148      	lsls	r0, r1, #5
10048548:	1880      	adds	r0, r0, r2
1004854a:	bd10      	pop	{r4, pc}
1004854c:	1c49      	adds	r1, r1, #1
1004854e:	b2c9      	uxtb	r1, r1
10048550:	428b      	cmp	r3, r1
10048552:	d8f2      	bhi.n	1004853a <Find_Gatt_Client+0x1a>
10048554:	2000      	movs	r0, #0
10048556:	bd10      	pop	{r4, pc}
10048558:	20000d64 	.word	0x20000d64

1004855c <GATT_Server_Set_Flag>:
1004855c:	4904      	ldr	r1, [pc, #16]	; (10048570 <GATT_Server_Set_Flag+0x14>)
1004855e:	680a      	ldr	r2, [r1, #0]
10048560:	213b      	movs	r1, #59	; 0x3b
10048562:	0149      	lsls	r1, r1, #5
10048564:	1851      	adds	r1, r2, r1
10048566:	7d0a      	ldrb	r2, [r1, #20]
10048568:	4302      	orrs	r2, r0
1004856a:	750a      	strb	r2, [r1, #20]
1004856c:	4770      	bx	lr
1004856e:	0000      	.short	0x0000
10048570:	20000d64 	.word	0x20000d64

10048574 <Gatt_All_Primary_Cb>:
10048574:	b510      	push	{r4, lr}
10048576:	2101      	movs	r1, #1
10048578:	f000 fd08 	bl	10048f8c <Gatt_Super_Handler>
1004857c:	bd10      	pop	{r4, pc}

1004857e <Gatt_Check_Not_Error_Resp>:
1004857e:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10048580:	688c      	ldr	r4, [r1, #8]
10048582:	88cd      	ldrh	r5, [r1, #6]
10048584:	7b26      	ldrb	r6, [r4, #12]
10048586:	2e01      	cmp	r6, #1
10048588:	d001      	beq.n	1004858e <Gatt_Check_Not_Error_Resp+0x10>
1004858a:	2000      	movs	r0, #0
1004858c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004858e:	2641      	movs	r6, #65	; 0x41
10048590:	2d05      	cmp	r5, #5
10048592:	d001      	beq.n	10048598 <Gatt_Check_Not_Error_Resp+0x1a>
10048594:	701e      	strb	r6, [r3, #0]
10048596:	e019      	b.n	100485cc <Gatt_Check_Not_Error_Resp+0x4e>
10048598:	7c24      	ldrb	r4, [r4, #16]
1004859a:	2c0a      	cmp	r4, #10
1004859c:	d000      	beq.n	100485a0 <Gatt_Check_Not_Error_Resp+0x22>
1004859e:	701e      	strb	r6, [r3, #0]
100485a0:	2a00      	cmp	r2, #0
100485a2:	d00d      	beq.n	100485c0 <Gatt_Check_Not_Error_Resp+0x42>
100485a4:	6889      	ldr	r1, [r1, #8]
100485a6:	2205      	movs	r2, #5
100485a8:	4668      	mov	r0, sp
100485aa:	310c      	adds	r1, #12
100485ac:	f7f8 f8e9 	bl	10040782 <Osal_MemCpy>
100485b0:	1e6d      	subs	r5, r5, #1
100485b2:	aa00      	add	r2, sp, #0
100485b4:	b2a9      	uxth	r1, r5
100485b6:	2032      	movs	r0, #50	; 0x32
100485b8:	3201      	adds	r2, #1
100485ba:	f7ff fa57 	bl	10047a6c <GAP_Internal_Evt_Handler>
100485be:	e005      	b.n	100485cc <Gatt_Check_Not_Error_Resp+0x4e>
100485c0:	8800      	ldrh	r0, [r0, #0]
100485c2:	460a      	mov	r2, r1
100485c4:	4601      	mov	r1, r0
100485c6:	2002      	movs	r0, #2
100485c8:	f001 fb10 	bl	10049bec <aci_gatt_error_resp_event_push>
100485cc:	2041      	movs	r0, #65	; 0x41
100485ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100485d0 <Gatt_Confirm_Indication>:
100485d0:	b570      	push	{r4, r5, r6, lr}
100485d2:	4605      	mov	r5, r0
100485d4:	f7ff ffa4 	bl	10048520 <Find_Gatt_Client>
100485d8:	0004      	movs	r4, r0
100485da:	d019      	beq.n	10048610 <Gatt_Confirm_Indication+0x40>
100485dc:	8a20      	ldrh	r0, [r4, #16]
100485de:	04c0      	lsls	r0, r0, #19
100485e0:	d516      	bpl.n	10048610 <Gatt_Confirm_Indication+0x40>
100485e2:	2220      	movs	r2, #32
100485e4:	4629      	mov	r1, r5
100485e6:	2000      	movs	r0, #0
100485e8:	f00c fa20 	bl	10054a2c <PM_Get_Pckt>
100485ec:	0005      	movs	r5, r0
100485ee:	d00d      	beq.n	1004860c <Gatt_Confirm_Indication+0x3c>
100485f0:	4601      	mov	r1, r0
100485f2:	4620      	mov	r0, r4
100485f4:	f00c fb96 	bl	10054d24 <Att_Send_Confirmation_Pdu>
100485f8:	4628      	mov	r0, r5
100485fa:	f001 fecf 	bl	1004a39c <GATT_Send_Packet>
100485fe:	2101      	movs	r1, #1
10048600:	6920      	ldr	r0, [r4, #16]
10048602:	0309      	lsls	r1, r1, #12
10048604:	4388      	bics	r0, r1
10048606:	6120      	str	r0, [r4, #16]
10048608:	2000      	movs	r0, #0
1004860a:	bd70      	pop	{r4, r5, r6, pc}
1004860c:	2064      	movs	r0, #100	; 0x64
1004860e:	bd70      	pop	{r4, r5, r6, pc}
10048610:	2046      	movs	r0, #70	; 0x46
10048612:	bd70      	pop	{r4, r5, r6, pc}

10048614 <Gatt_Disc_All_Charac_By_Uuid_Cb>:
10048614:	b510      	push	{r4, lr}
10048616:	2110      	movs	r1, #16
10048618:	f000 fcb8 	bl	10048f8c <Gatt_Super_Handler>
1004861c:	bd10      	pop	{r4, pc}

1004861e <Gatt_Disc_All_Charac_Cb>:
1004861e:	b510      	push	{r4, lr}
10048620:	2108      	movs	r1, #8
10048622:	f000 fcb3 	bl	10048f8c <Gatt_Super_Handler>
10048626:	bd10      	pop	{r4, pc}

10048628 <Gatt_Disc_All_Charac_Of_Serv>:
10048628:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004862a:	b086      	sub	sp, #24
1004862c:	4617      	mov	r7, r2
1004862e:	4606      	mov	r6, r0
10048630:	2546      	movs	r5, #70	; 0x46
10048632:	f7ff ff69 	bl	10048508 <Check_and_find_gatt_client>
10048636:	0004      	movs	r4, r0
10048638:	d025      	beq.n	10048686 <Gatt_Disc_All_Charac_Of_Serv+0x5e>
1004863a:	2220      	movs	r2, #32
1004863c:	4631      	mov	r1, r6
1004863e:	2000      	movs	r0, #0
10048640:	f00c f9f4 	bl	10054a2c <PM_Get_Pckt>
10048644:	0006      	movs	r6, r0
10048646:	d01d      	beq.n	10048684 <Gatt_Disc_All_Charac_Of_Serv+0x5c>
10048648:	4810      	ldr	r0, [pc, #64]	; (1004868c <Gatt_Disc_All_Charac_Of_Serv+0x64>)
1004864a:	4669      	mov	r1, sp
1004864c:	8008      	strh	r0, [r1, #0]
1004864e:	2001      	movs	r0, #1
10048650:	9004      	str	r0, [sp, #16]
10048652:	463b      	mov	r3, r7
10048654:	4631      	mov	r1, r6
10048656:	4620      	mov	r0, r4
10048658:	9a07      	ldr	r2, [sp, #28]
1004865a:	f00c fc7e 	bl	10054f5a <Att_Send_Read_By_Typ_Req_Pdu>
1004865e:	0005      	movs	r5, r0
10048660:	d004      	beq.n	1004866c <Gatt_Disc_All_Charac_Of_Serv+0x44>
10048662:	2100      	movs	r1, #0
10048664:	4630      	mov	r0, r6
10048666:	f00c fa3d 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004866a:	e00c      	b.n	10048686 <Gatt_Disc_All_Charac_Of_Serv+0x5e>
1004866c:	81a7      	strh	r7, [r4, #12]
1004866e:	2101      	movs	r1, #1
10048670:	6920      	ldr	r0, [r4, #16]
10048672:	0349      	lsls	r1, r1, #13
10048674:	4308      	orrs	r0, r1
10048676:	6120      	str	r0, [r4, #16]
10048678:	4805      	ldr	r0, [pc, #20]	; (10048690 <Gatt_Disc_All_Charac_Of_Serv+0x68>)
1004867a:	61a0      	str	r0, [r4, #24]
1004867c:	4630      	mov	r0, r6
1004867e:	f001 fe8d 	bl	1004a39c <GATT_Send_Packet>
10048682:	e000      	b.n	10048686 <Gatt_Disc_All_Charac_Of_Serv+0x5e>
10048684:	2564      	movs	r5, #100	; 0x64
10048686:	4628      	mov	r0, r5
10048688:	b009      	add	sp, #36	; 0x24
1004868a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004868c:	00002803 	.word	0x00002803
10048690:	1004861f 	.word	0x1004861f

10048694 <Gatt_Disc_All_Prim_Services>:
10048694:	b570      	push	{r4, r5, r6, lr}
10048696:	b086      	sub	sp, #24
10048698:	4606      	mov	r6, r0
1004869a:	2546      	movs	r5, #70	; 0x46
1004869c:	f7ff ff34 	bl	10048508 <Check_and_find_gatt_client>
100486a0:	0004      	movs	r4, r0
100486a2:	d025      	beq.n	100486f0 <Gatt_Disc_All_Prim_Services+0x5c>
100486a4:	2220      	movs	r2, #32
100486a6:	4631      	mov	r1, r6
100486a8:	2000      	movs	r0, #0
100486aa:	f00c f9bf 	bl	10054a2c <PM_Get_Pckt>
100486ae:	0006      	movs	r6, r0
100486b0:	d01d      	beq.n	100486ee <Gatt_Disc_All_Prim_Services+0x5a>
100486b2:	2005      	movs	r0, #5
100486b4:	02c0      	lsls	r0, r0, #11
100486b6:	4669      	mov	r1, sp
100486b8:	8008      	strh	r0, [r1, #0]
100486ba:	2001      	movs	r0, #1
100486bc:	4602      	mov	r2, r0
100486be:	9004      	str	r0, [sp, #16]
100486c0:	4b0d      	ldr	r3, [pc, #52]	; (100486f8 <Gatt_Disc_All_Prim_Services+0x64>)
100486c2:	4631      	mov	r1, r6
100486c4:	4620      	mov	r0, r4
100486c6:	f00c fc0d 	bl	10054ee4 <Att_Send_Read_By_Grp_Typ_Req_Pdu>
100486ca:	0005      	movs	r5, r0
100486cc:	d004      	beq.n	100486d8 <Gatt_Disc_All_Prim_Services+0x44>
100486ce:	2100      	movs	r1, #0
100486d0:	4630      	mov	r0, r6
100486d2:	f00c fa07 	bl	10054ae4 <PM_Release_Acl_Pckt>
100486d6:	e00b      	b.n	100486f0 <Gatt_Disc_All_Prim_Services+0x5c>
100486d8:	2101      	movs	r1, #1
100486da:	6920      	ldr	r0, [r4, #16]
100486dc:	0349      	lsls	r1, r1, #13
100486de:	4308      	orrs	r0, r1
100486e0:	6120      	str	r0, [r4, #16]
100486e2:	4806      	ldr	r0, [pc, #24]	; (100486fc <Gatt_Disc_All_Prim_Services+0x68>)
100486e4:	61a0      	str	r0, [r4, #24]
100486e6:	4630      	mov	r0, r6
100486e8:	f001 fe58 	bl	1004a39c <GATT_Send_Packet>
100486ec:	e000      	b.n	100486f0 <Gatt_Disc_All_Prim_Services+0x5c>
100486ee:	2564      	movs	r5, #100	; 0x64
100486f0:	4628      	mov	r0, r5
100486f2:	b006      	add	sp, #24
100486f4:	bd70      	pop	{r4, r5, r6, pc}
100486f6:	0000      	.short	0x0000
100486f8:	0000ffff 	.word	0x0000ffff
100486fc:	10048575 	.word	0x10048575

10048700 <Gatt_Disc_Charac_By_Uuid>:
10048700:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10048702:	b089      	sub	sp, #36	; 0x24
10048704:	4607      	mov	r7, r0
10048706:	2646      	movs	r6, #70	; 0x46
10048708:	781d      	ldrb	r5, [r3, #0]
1004870a:	2210      	movs	r2, #16
1004870c:	1c99      	adds	r1, r3, #2
1004870e:	a805      	add	r0, sp, #20
10048710:	f7fe f82b 	bl	1004676a <__aeabi_memcpy>
10048714:	2d01      	cmp	r5, #1
10048716:	d004      	beq.n	10048722 <Gatt_Disc_Charac_By_Uuid+0x22>
10048718:	2d02      	cmp	r5, #2
1004871a:	d002      	beq.n	10048722 <Gatt_Disc_Charac_By_Uuid+0x22>
1004871c:	2042      	movs	r0, #66	; 0x42
1004871e:	b00d      	add	sp, #52	; 0x34
10048720:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048722:	4638      	mov	r0, r7
10048724:	f7ff fef0 	bl	10048508 <Check_and_find_gatt_client>
10048728:	0004      	movs	r4, r0
1004872a:	d037      	beq.n	1004879c <Gatt_Disc_Charac_By_Uuid+0x9c>
1004872c:	2220      	movs	r2, #32
1004872e:	4639      	mov	r1, r7
10048730:	2000      	movs	r0, #0
10048732:	f00c f97b 	bl	10054a2c <PM_Get_Pckt>
10048736:	0007      	movs	r7, r0
10048738:	d02f      	beq.n	1004879a <Gatt_Disc_Charac_By_Uuid+0x9a>
1004873a:	4819      	ldr	r0, [pc, #100]	; (100487a0 <Gatt_Disc_Charac_By_Uuid+0xa0>)
1004873c:	4669      	mov	r1, sp
1004873e:	8008      	strh	r0, [r1, #0]
10048740:	2001      	movs	r0, #1
10048742:	9004      	str	r0, [sp, #16]
10048744:	4639      	mov	r1, r7
10048746:	4620      	mov	r0, r4
10048748:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1004874a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004874c:	f00c fc05 	bl	10054f5a <Att_Send_Read_By_Typ_Req_Pdu>
10048750:	0006      	movs	r6, r0
10048752:	d004      	beq.n	1004875e <Gatt_Disc_Charac_By_Uuid+0x5e>
10048754:	2100      	movs	r1, #0
10048756:	4638      	mov	r0, r7
10048758:	f00c f9c4 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004875c:	e01e      	b.n	1004879c <Gatt_Disc_Charac_By_Uuid+0x9c>
1004875e:	980b      	ldr	r0, [sp, #44]	; 0x2c
10048760:	81a0      	strh	r0, [r4, #12]
10048762:	68a0      	ldr	r0, [r4, #8]
10048764:	2d01      	cmp	r5, #1
10048766:	d00f      	beq.n	10048788 <Gatt_Disc_Charac_By_Uuid+0x88>
10048768:	2210      	movs	r2, #16
1004876a:	a905      	add	r1, sp, #20
1004876c:	f7f8 f809 	bl	10040782 <Osal_MemCpy>
10048770:	7125      	strb	r5, [r4, #4]
10048772:	2101      	movs	r1, #1
10048774:	6920      	ldr	r0, [r4, #16]
10048776:	0349      	lsls	r1, r1, #13
10048778:	4308      	orrs	r0, r1
1004877a:	6120      	str	r0, [r4, #16]
1004877c:	4809      	ldr	r0, [pc, #36]	; (100487a4 <Gatt_Disc_Charac_By_Uuid+0xa4>)
1004877e:	61a0      	str	r0, [r4, #24]
10048780:	4638      	mov	r0, r7
10048782:	f001 fe0b 	bl	1004a39c <GATT_Send_Packet>
10048786:	e009      	b.n	1004879c <Gatt_Disc_Charac_By_Uuid+0x9c>
10048788:	2210      	movs	r2, #16
1004878a:	4907      	ldr	r1, [pc, #28]	; (100487a8 <Gatt_Disc_Charac_By_Uuid+0xa8>)
1004878c:	f7f7 fff9 	bl	10040782 <Osal_MemCpy>
10048790:	68a0      	ldr	r0, [r4, #8]
10048792:	2202      	movs	r2, #2
10048794:	a905      	add	r1, sp, #20
10048796:	300c      	adds	r0, #12
10048798:	e7e8      	b.n	1004876c <Gatt_Disc_Charac_By_Uuid+0x6c>
1004879a:	2664      	movs	r6, #100	; 0x64
1004879c:	4630      	mov	r0, r6
1004879e:	e7be      	b.n	1004871e <Gatt_Disc_Charac_By_Uuid+0x1e>
100487a0:	00002803 	.word	0x00002803
100487a4:	10048615 	.word	0x10048615
100487a8:	1006006c 	.word	0x1006006c

100487ac <Gatt_Disc_Charac_Desc>:
100487ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100487ae:	4617      	mov	r7, r2
100487b0:	4606      	mov	r6, r0
100487b2:	2546      	movs	r5, #70	; 0x46
100487b4:	f7ff fea8 	bl	10048508 <Check_and_find_gatt_client>
100487b8:	0004      	movs	r4, r0
100487ba:	d022      	beq.n	10048802 <Gatt_Disc_Charac_Desc+0x56>
100487bc:	2220      	movs	r2, #32
100487be:	4631      	mov	r1, r6
100487c0:	2000      	movs	r0, #0
100487c2:	f00c f933 	bl	10054a2c <PM_Get_Pckt>
100487c6:	0006      	movs	r6, r0
100487c8:	d01a      	beq.n	10048800 <Gatt_Disc_Charac_Desc+0x54>
100487ca:	9801      	ldr	r0, [sp, #4]
100487cc:	463b      	mov	r3, r7
100487ce:	1c40      	adds	r0, r0, #1
100487d0:	b282      	uxth	r2, r0
100487d2:	4631      	mov	r1, r6
100487d4:	4620      	mov	r0, r4
100487d6:	f00c fb00 	bl	10054dda <Att_Send_Find_Info_Req_Pdu>
100487da:	0005      	movs	r5, r0
100487dc:	d004      	beq.n	100487e8 <Gatt_Disc_Charac_Desc+0x3c>
100487de:	2100      	movs	r1, #0
100487e0:	4630      	mov	r0, r6
100487e2:	f00c f97f 	bl	10054ae4 <PM_Release_Acl_Pckt>
100487e6:	e00c      	b.n	10048802 <Gatt_Disc_Charac_Desc+0x56>
100487e8:	81a7      	strh	r7, [r4, #12]
100487ea:	2101      	movs	r1, #1
100487ec:	6920      	ldr	r0, [r4, #16]
100487ee:	0349      	lsls	r1, r1, #13
100487f0:	4308      	orrs	r0, r1
100487f2:	6120      	str	r0, [r4, #16]
100487f4:	4804      	ldr	r0, [pc, #16]	; (10048808 <Gatt_Disc_Charac_Desc+0x5c>)
100487f6:	61a0      	str	r0, [r4, #24]
100487f8:	4630      	mov	r0, r6
100487fa:	f001 fdcf 	bl	1004a39c <GATT_Send_Packet>
100487fe:	e000      	b.n	10048802 <Gatt_Disc_Charac_Desc+0x56>
10048800:	2564      	movs	r5, #100	; 0x64
10048802:	4628      	mov	r0, r5
10048804:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10048806:	0000      	.short	0x0000
10048808:	1004880d 	.word	0x1004880d

1004880c <Gatt_Disc_Charac_Desc_Cb>:
1004880c:	b510      	push	{r4, lr}
1004880e:	2120      	movs	r1, #32
10048810:	f000 fbbc 	bl	10048f8c <Gatt_Super_Handler>
10048814:	bd10      	pop	{r4, pc}
	...

10048818 <Gatt_Disc_Prim_serv_By_Uuid>:
10048818:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004881a:	b08b      	sub	sp, #44	; 0x2c
1004881c:	780d      	ldrb	r5, [r1, #0]
1004881e:	2646      	movs	r6, #70	; 0x46
10048820:	2210      	movs	r2, #16
10048822:	a806      	add	r0, sp, #24
10048824:	1c89      	adds	r1, r1, #2
10048826:	f7fd ffa0 	bl	1004676a <__aeabi_memcpy>
1004882a:	2d01      	cmp	r5, #1
1004882c:	d004      	beq.n	10048838 <Gatt_Disc_Prim_serv_By_Uuid+0x20>
1004882e:	2d02      	cmp	r5, #2
10048830:	d004      	beq.n	1004883c <Gatt_Disc_Prim_serv_By_Uuid+0x24>
10048832:	2042      	movs	r0, #66	; 0x42
10048834:	b00d      	add	sp, #52	; 0x34
10048836:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048838:	2702      	movs	r7, #2
1004883a:	e000      	b.n	1004883e <Gatt_Disc_Prim_serv_By_Uuid+0x26>
1004883c:	2710      	movs	r7, #16
1004883e:	980b      	ldr	r0, [sp, #44]	; 0x2c
10048840:	f7ff fe62 	bl	10048508 <Check_and_find_gatt_client>
10048844:	0004      	movs	r4, r0
10048846:	d030      	beq.n	100488aa <Gatt_Disc_Prim_serv_By_Uuid+0x92>
10048848:	2220      	movs	r2, #32
1004884a:	2000      	movs	r0, #0
1004884c:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004884e:	f00c f8ed 	bl	10054a2c <PM_Get_Pckt>
10048852:	9004      	str	r0, [sp, #16]
10048854:	2800      	cmp	r0, #0
10048856:	d027      	beq.n	100488a8 <Gatt_Disc_Prim_serv_By_Uuid+0x90>
10048858:	2105      	movs	r1, #5
1004885a:	a806      	add	r0, sp, #24
1004885c:	02c9      	lsls	r1, r1, #11
1004885e:	9100      	str	r1, [sp, #0]
10048860:	9001      	str	r0, [sp, #4]
10048862:	4b13      	ldr	r3, [pc, #76]	; (100488b0 <Gatt_Disc_Prim_serv_By_Uuid+0x98>)
10048864:	2201      	movs	r2, #1
10048866:	9702      	str	r7, [sp, #8]
10048868:	4620      	mov	r0, r4
1004886a:	9904      	ldr	r1, [sp, #16]
1004886c:	f00c fa72 	bl	10054d54 <Att_Send_Find_By_Typ_Val_Req_Pdu>
10048870:	0006      	movs	r6, r0
10048872:	d004      	beq.n	1004887e <Gatt_Disc_Prim_serv_By_Uuid+0x66>
10048874:	2100      	movs	r1, #0
10048876:	9804      	ldr	r0, [sp, #16]
10048878:	f00c f934 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004887c:	e015      	b.n	100488aa <Gatt_Disc_Prim_serv_By_Uuid+0x92>
1004887e:	68a0      	ldr	r0, [r4, #8]
10048880:	2d01      	cmp	r5, #1
10048882:	d00f      	beq.n	100488a4 <Gatt_Disc_Prim_serv_By_Uuid+0x8c>
10048884:	2210      	movs	r2, #16
10048886:	a906      	add	r1, sp, #24
10048888:	f7f7 ff7b 	bl	10040782 <Osal_MemCpy>
1004888c:	7125      	strb	r5, [r4, #4]
1004888e:	2101      	movs	r1, #1
10048890:	6920      	ldr	r0, [r4, #16]
10048892:	0349      	lsls	r1, r1, #13
10048894:	4308      	orrs	r0, r1
10048896:	6120      	str	r0, [r4, #16]
10048898:	4806      	ldr	r0, [pc, #24]	; (100488b4 <Gatt_Disc_Prim_serv_By_Uuid+0x9c>)
1004889a:	61a0      	str	r0, [r4, #24]
1004889c:	9804      	ldr	r0, [sp, #16]
1004889e:	f001 fd7d 	bl	1004a39c <GATT_Send_Packet>
100488a2:	e002      	b.n	100488aa <Gatt_Disc_Prim_serv_By_Uuid+0x92>
100488a4:	2202      	movs	r2, #2
100488a6:	e7ee      	b.n	10048886 <Gatt_Disc_Prim_serv_By_Uuid+0x6e>
100488a8:	2664      	movs	r6, #100	; 0x64
100488aa:	4630      	mov	r0, r6
100488ac:	e7c2      	b.n	10048834 <Gatt_Disc_Prim_serv_By_Uuid+0x1c>
100488ae:	0000      	.short	0x0000
100488b0:	0000ffff 	.word	0x0000ffff
100488b4:	100488b9 	.word	0x100488b9

100488b8 <Gatt_Disc_Prim_serv_By_Uuid_Cb>:
100488b8:	b510      	push	{r4, lr}
100488ba:	2102      	movs	r1, #2
100488bc:	f000 fb66 	bl	10048f8c <Gatt_Super_Handler>
100488c0:	bd10      	pop	{r4, pc}
	...

100488c4 <Gatt_Exchange_Configuration>:
100488c4:	b570      	push	{r4, r5, r6, lr}
100488c6:	4606      	mov	r6, r0
100488c8:	2546      	movs	r5, #70	; 0x46
100488ca:	f7ff fe1d 	bl	10048508 <Check_and_find_gatt_client>
100488ce:	0004      	movs	r4, r0
100488d0:	d01c      	beq.n	1004890c <Gatt_Exchange_Configuration+0x48>
100488d2:	8a20      	ldrh	r0, [r4, #16]
100488d4:	0580      	lsls	r0, r0, #22
100488d6:	d419      	bmi.n	1004890c <Gatt_Exchange_Configuration+0x48>
100488d8:	2220      	movs	r2, #32
100488da:	4631      	mov	r1, r6
100488dc:	2000      	movs	r0, #0
100488de:	f00c f8a5 	bl	10054a2c <PM_Get_Pckt>
100488e2:	0006      	movs	r6, r0
100488e4:	d011      	beq.n	1004890a <Gatt_Exchange_Configuration+0x46>
100488e6:	4601      	mov	r1, r0
100488e8:	2500      	movs	r5, #0
100488ea:	4620      	mov	r0, r4
100488ec:	f00c f958 	bl	10054ba0 <ATT_fill_exchg_mtu_req>
100488f0:	21a1      	movs	r1, #161	; 0xa1
100488f2:	6920      	ldr	r0, [r4, #16]
100488f4:	0189      	lsls	r1, r1, #6
100488f6:	4308      	orrs	r0, r1
100488f8:	6120      	str	r0, [r4, #16]
100488fa:	4805      	ldr	r0, [pc, #20]	; (10048910 <Gatt_Exchange_Configuration+0x4c>)
100488fc:	61a0      	str	r0, [r4, #24]
100488fe:	2003      	movs	r0, #3
10048900:	73a0      	strb	r0, [r4, #14]
10048902:	4630      	mov	r0, r6
10048904:	f001 fd4a 	bl	1004a39c <GATT_Send_Packet>
10048908:	e000      	b.n	1004890c <Gatt_Exchange_Configuration+0x48>
1004890a:	2564      	movs	r5, #100	; 0x64
1004890c:	4628      	mov	r0, r5
1004890e:	bd70      	pop	{r4, r5, r6, pc}
10048910:	10048915 	.word	0x10048915

10048914 <Gatt_Exchange_Configuration_Cb>:
10048914:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10048916:	4604      	mov	r4, r0
10048918:	482d      	ldr	r0, [pc, #180]	; (100489d0 <Gatt_Exchange_Configuration_Cb+0xbc>)
1004891a:	492e      	ldr	r1, [pc, #184]	; (100489d4 <Gatt_Exchange_Configuration_Cb+0xc0>)
1004891c:	6800      	ldr	r0, [r0, #0]
1004891e:	69e2      	ldr	r2, [r4, #28]
10048920:	1846      	adds	r6, r0, r1
10048922:	6890      	ldr	r0, [r2, #8]
10048924:	2500      	movs	r5, #0
10048926:	4601      	mov	r1, r0
10048928:	7b00      	ldrb	r0, [r0, #12]
1004892a:	88d3      	ldrh	r3, [r2, #6]
1004892c:	3108      	adds	r1, #8
1004892e:	2801      	cmp	r0, #1
10048930:	d034      	beq.n	1004899c <Gatt_Exchange_Configuration_Cb+0x88>
10048932:	2b03      	cmp	r3, #3
10048934:	d001      	beq.n	1004893a <Gatt_Exchange_Configuration_Cb+0x26>
10048936:	2541      	movs	r5, #65	; 0x41
10048938:	e037      	b.n	100489aa <Gatt_Exchange_Configuration_Cb+0x96>
1004893a:	2202      	movs	r2, #2
1004893c:	4668      	mov	r0, sp
1004893e:	1d49      	adds	r1, r1, #5
10048940:	f7f7 ff1f 	bl	10040782 <Osal_MemCpy>
10048944:	6921      	ldr	r1, [r4, #16]
10048946:	0588      	lsls	r0, r1, #22
10048948:	d40b      	bmi.n	10048962 <Gatt_Exchange_Configuration_Cb+0x4e>
1004894a:	3640      	adds	r6, #64	; 0x40
1004894c:	4668      	mov	r0, sp
1004894e:	8bb2      	ldrh	r2, [r6, #28]
10048950:	8800      	ldrh	r0, [r0, #0]
10048952:	4282      	cmp	r2, r0
10048954:	d200      	bcs.n	10048958 <Gatt_Exchange_Configuration_Cb+0x44>
10048956:	4610      	mov	r0, r2
10048958:	8060      	strh	r0, [r4, #2]
1004895a:	2001      	movs	r0, #1
1004895c:	0240      	lsls	r0, r0, #9
1004895e:	4301      	orrs	r1, r0
10048960:	6121      	str	r1, [r4, #16]
10048962:	2002      	movs	r0, #2
10048964:	9001      	str	r0, [sp, #4]
10048966:	481a      	ldr	r0, [pc, #104]	; (100489d0 <Gatt_Exchange_Configuration_Cb+0xbc>)
10048968:	2137      	movs	r1, #55	; 0x37
1004896a:	6800      	ldr	r0, [r0, #0]
1004896c:	0149      	lsls	r1, r1, #5
1004896e:	1841      	adds	r1, r0, r1
10048970:	7b09      	ldrb	r1, [r1, #12]
10048972:	8827      	ldrh	r7, [r4, #0]
10048974:	8866      	ldrh	r6, [r4, #2]
10048976:	2301      	movs	r3, #1
10048978:	0749      	lsls	r1, r1, #29
1004897a:	d516      	bpl.n	100489aa <Gatt_Exchange_Configuration_Cb+0x96>
1004897c:	02d9      	lsls	r1, r3, #11
1004897e:	3008      	adds	r0, #8
10048980:	1840      	adds	r0, r0, r1
10048982:	2224      	movs	r2, #36	; 0x24
10048984:	6940      	ldr	r0, [r0, #20]
10048986:	2102      	movs	r1, #2
10048988:	f013 fab0 	bl	1005beec <aci_event_fifo_push_header>
1004898c:	0001      	movs	r1, r0
1004898e:	d00c      	beq.n	100489aa <Gatt_Exchange_Configuration_Cb+0x96>
10048990:	808f      	strh	r7, [r1, #4]
10048992:	80ce      	strh	r6, [r1, #6]
10048994:	9801      	ldr	r0, [sp, #4]
10048996:	f013 fa95 	bl	1005bec4 <aci_event_fifo_push>
1004899a:	e006      	b.n	100489aa <Gatt_Exchange_Configuration_Cb+0x96>
1004899c:	2541      	movs	r5, #65	; 0x41
1004899e:	2b05      	cmp	r3, #5
100489a0:	d103      	bne.n	100489aa <Gatt_Exchange_Configuration_Cb+0x96>
100489a2:	8821      	ldrh	r1, [r4, #0]
100489a4:	2002      	movs	r0, #2
100489a6:	f001 f921 	bl	10049bec <aci_gatt_error_resp_event_push>
100489aa:	2101      	movs	r1, #1
100489ac:	69e0      	ldr	r0, [r4, #28]
100489ae:	f00c f899 	bl	10054ae4 <PM_Release_Acl_Pckt>
100489b2:	2000      	movs	r0, #0
100489b4:	61e0      	str	r0, [r4, #28]
100489b6:	2001      	movs	r0, #1
100489b8:	6921      	ldr	r1, [r4, #16]
100489ba:	0340      	lsls	r0, r0, #13
100489bc:	4381      	bics	r1, r0
100489be:	6121      	str	r1, [r4, #16]
100489c0:	8821      	ldrh	r1, [r4, #0]
100489c2:	462a      	mov	r2, r5
100489c4:	2002      	movs	r0, #2
100489c6:	f001 f94d 	bl	10049c64 <aci_gatt_proc_complete_event_push>
100489ca:	2000      	movs	r0, #0
100489cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100489ce:	0000      	.short	0x0000
100489d0:	20000d64 	.word	0x20000d64
100489d4:	0000072c 	.word	0x0000072c

100489d8 <Gatt_Execute_Write_Req>:
100489d8:	b50e      	push	{r1, r2, r3, lr}
100489da:	2200      	movs	r2, #0
100489dc:	9200      	str	r2, [sp, #0]
100489de:	9201      	str	r2, [sp, #4]
100489e0:	2320      	movs	r3, #32
100489e2:	9202      	str	r2, [sp, #8]
100489e4:	f000 f856 	bl	10048a94 <Gatt_Handler2>
100489e8:	bd0e      	pop	{r1, r2, r3, pc}

100489ea <Gatt_Find_Attr_By_Typ_And_Value_Req>:
100489ea:	b53e      	push	{r1, r2, r3, r4, r5, lr}
100489ec:	460b      	mov	r3, r1
100489ee:	8804      	ldrh	r4, [r0, #0]
100489f0:	8841      	ldrh	r1, [r0, #2]
100489f2:	8882      	ldrh	r2, [r0, #4]
100489f4:	88c5      	ldrh	r5, [r0, #6]
100489f6:	7a00      	ldrb	r0, [r0, #8]
100489f8:	9302      	str	r3, [sp, #8]
100489fa:	9001      	str	r0, [sp, #4]
100489fc:	9500      	str	r5, [sp, #0]
100489fe:	2302      	movs	r3, #2
10048a00:	4620      	mov	r0, r4
10048a02:	f000 f847 	bl	10048a94 <Gatt_Handler2>
10048a06:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10048a08 <Gatt_Find_Incl_Serv_Cb>:
10048a08:	b510      	push	{r4, lr}
10048a0a:	2104      	movs	r1, #4
10048a0c:	f000 fabe 	bl	10048f8c <Gatt_Super_Handler>
10048a10:	bd10      	pop	{r4, pc}
	...

10048a14 <Gatt_Find_Included_Services>:
10048a14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10048a16:	b086      	sub	sp, #24
10048a18:	4617      	mov	r7, r2
10048a1a:	4606      	mov	r6, r0
10048a1c:	2546      	movs	r5, #70	; 0x46
10048a1e:	f7ff fd73 	bl	10048508 <Check_and_find_gatt_client>
10048a22:	0004      	movs	r4, r0
10048a24:	d025      	beq.n	10048a72 <Gatt_Find_Included_Services+0x5e>
10048a26:	2220      	movs	r2, #32
10048a28:	4631      	mov	r1, r6
10048a2a:	2000      	movs	r0, #0
10048a2c:	f00b fffe 	bl	10054a2c <PM_Get_Pckt>
10048a30:	0006      	movs	r6, r0
10048a32:	d01d      	beq.n	10048a70 <Gatt_Find_Included_Services+0x5c>
10048a34:	4810      	ldr	r0, [pc, #64]	; (10048a78 <Gatt_Find_Included_Services+0x64>)
10048a36:	4669      	mov	r1, sp
10048a38:	8008      	strh	r0, [r1, #0]
10048a3a:	2001      	movs	r0, #1
10048a3c:	9004      	str	r0, [sp, #16]
10048a3e:	463b      	mov	r3, r7
10048a40:	4631      	mov	r1, r6
10048a42:	4620      	mov	r0, r4
10048a44:	9a07      	ldr	r2, [sp, #28]
10048a46:	f00c fa88 	bl	10054f5a <Att_Send_Read_By_Typ_Req_Pdu>
10048a4a:	0005      	movs	r5, r0
10048a4c:	d004      	beq.n	10048a58 <Gatt_Find_Included_Services+0x44>
10048a4e:	2100      	movs	r1, #0
10048a50:	4630      	mov	r0, r6
10048a52:	f00c f847 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048a56:	e00c      	b.n	10048a72 <Gatt_Find_Included_Services+0x5e>
10048a58:	81a7      	strh	r7, [r4, #12]
10048a5a:	2101      	movs	r1, #1
10048a5c:	6920      	ldr	r0, [r4, #16]
10048a5e:	0349      	lsls	r1, r1, #13
10048a60:	4308      	orrs	r0, r1
10048a62:	6120      	str	r0, [r4, #16]
10048a64:	4805      	ldr	r0, [pc, #20]	; (10048a7c <Gatt_Find_Included_Services+0x68>)
10048a66:	61a0      	str	r0, [r4, #24]
10048a68:	4630      	mov	r0, r6
10048a6a:	f001 fc97 	bl	1004a39c <GATT_Send_Packet>
10048a6e:	e000      	b.n	10048a72 <Gatt_Find_Included_Services+0x5e>
10048a70:	2564      	movs	r5, #100	; 0x64
10048a72:	4628      	mov	r0, r5
10048a74:	b009      	add	sp, #36	; 0x24
10048a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048a78:	00002802 	.word	0x00002802
10048a7c:	10048a09 	.word	0x10048a09

10048a80 <Gatt_Find_Information_Req>:
10048a80:	b50e      	push	{r1, r2, r3, lr}
10048a82:	2300      	movs	r3, #0
10048a84:	9300      	str	r3, [sp, #0]
10048a86:	9301      	str	r3, [sp, #4]
10048a88:	9302      	str	r3, [sp, #8]
10048a8a:	2301      	movs	r3, #1
10048a8c:	f000 f802 	bl	10048a94 <Gatt_Handler2>
10048a90:	bd0e      	pop	{r1, r2, r3, pc}
	...

10048a94 <Gatt_Handler2>:
10048a94:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10048a96:	b08b      	sub	sp, #44	; 0x2c
10048a98:	461d      	mov	r5, r3
10048a9a:	2446      	movs	r4, #70	; 0x46
10048a9c:	9f15      	ldr	r7, [sp, #84]	; 0x54
10048a9e:	980b      	ldr	r0, [sp, #44]	; 0x2c
10048aa0:	f7ff fd32 	bl	10048508 <Check_and_find_gatt_client>
10048aa4:	0006      	movs	r6, r0
10048aa6:	d06d      	beq.n	10048b84 <Gatt_Handler2+0xf0>
10048aa8:	2220      	movs	r2, #32
10048aaa:	2000      	movs	r0, #0
10048aac:	990b      	ldr	r1, [sp, #44]	; 0x2c
10048aae:	f00b ffbd 	bl	10054a2c <PM_Get_Pckt>
10048ab2:	9005      	str	r0, [sp, #20]
10048ab4:	2800      	cmp	r0, #0
10048ab6:	d064      	beq.n	10048b82 <Gatt_Handler2+0xee>
10048ab8:	07e8      	lsls	r0, r5, #31
10048aba:	d006      	beq.n	10048aca <Gatt_Handler2+0x36>
10048abc:	4630      	mov	r0, r6
10048abe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10048ac0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10048ac2:	9905      	ldr	r1, [sp, #20]
10048ac4:	f00c f989 	bl	10054dda <Att_Send_Find_Info_Req_Pdu>
10048ac8:	e02b      	b.n	10048b22 <Gatt_Handler2+0x8e>
10048aca:	07a8      	lsls	r0, r5, #30
10048acc:	d50d      	bpl.n	10048aea <Gatt_Handler2+0x56>
10048ace:	9814      	ldr	r0, [sp, #80]	; 0x50
10048ad0:	b2ba      	uxth	r2, r7
10048ad2:	b281      	uxth	r1, r0
10048ad4:	9816      	ldr	r0, [sp, #88]	; 0x58
10048ad6:	9202      	str	r2, [sp, #8]
10048ad8:	9100      	str	r1, [sp, #0]
10048ada:	9001      	str	r0, [sp, #4]
10048adc:	4630      	mov	r0, r6
10048ade:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10048ae0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10048ae2:	9905      	ldr	r1, [sp, #20]
10048ae4:	f00c f936 	bl	10054d54 <Att_Send_Find_By_Typ_Val_Req_Pdu>
10048ae8:	e01b      	b.n	10048b22 <Gatt_Handler2+0x8e>
10048aea:	0728      	lsls	r0, r5, #28
10048aec:	0f80      	lsrs	r0, r0, #30
10048aee:	d01d      	beq.n	10048b2c <Gatt_Handler2+0x98>
10048af0:	9814      	ldr	r0, [sp, #80]	; 0x50
10048af2:	2f00      	cmp	r7, #0
10048af4:	b2c4      	uxtb	r4, r0
10048af6:	d017      	beq.n	10048b28 <Gatt_Handler2+0x94>
10048af8:	2210      	movs	r2, #16
10048afa:	4639      	mov	r1, r7
10048afc:	a806      	add	r0, sp, #24
10048afe:	f7fd fe34 	bl	1004676a <__aeabi_memcpy>
10048b02:	0768      	lsls	r0, r5, #29
10048b04:	ad06      	add	r5, sp, #24
10048b06:	9404      	str	r4, [sp, #16]
10048b08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
10048b0a:	466d      	mov	r5, sp
10048b0c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
10048b0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10048b10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10048b12:	9905      	ldr	r1, [sp, #20]
10048b14:	4630      	mov	r0, r6
10048b16:	d502      	bpl.n	10048b1e <Gatt_Handler2+0x8a>
10048b18:	f00c f9e4 	bl	10054ee4 <Att_Send_Read_By_Grp_Typ_Req_Pdu>
10048b1c:	e001      	b.n	10048b22 <Gatt_Handler2+0x8e>
10048b1e:	f00c fa1c 	bl	10054f5a <Att_Send_Read_By_Typ_Req_Pdu>
10048b22:	0004      	movs	r4, r0
10048b24:	d01d      	beq.n	10048b62 <Gatt_Handler2+0xce>
10048b26:	e027      	b.n	10048b78 <Gatt_Handler2+0xe4>
10048b28:	2447      	movs	r4, #71	; 0x47
10048b2a:	e025      	b.n	10048b78 <Gatt_Handler2+0xe4>
10048b2c:	06e8      	lsls	r0, r5, #27
10048b2e:	d50a      	bpl.n	10048b46 <Gatt_Handler2+0xb2>
10048b30:	9814      	ldr	r0, [sp, #80]	; 0x50
10048b32:	9700      	str	r7, [sp, #0]
10048b34:	b280      	uxth	r0, r0
10048b36:	9001      	str	r0, [sp, #4]
10048b38:	4630      	mov	r0, r6
10048b3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10048b3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10048b3e:	9905      	ldr	r1, [sp, #20]
10048b40:	f00c f973 	bl	10054e2a <Att_Send_Prp_Write_Req_Pdu>
10048b44:	e7ed      	b.n	10048b22 <Gatt_Handler2+0x8e>
10048b46:	06a8      	lsls	r0, r5, #26
10048b48:	d516      	bpl.n	10048b78 <Gatt_Handler2+0xe4>
10048b4a:	980c      	ldr	r0, [sp, #48]	; 0x30
10048b4c:	b2c0      	uxtb	r0, r0
10048b4e:	2801      	cmp	r0, #1
10048b50:	d005      	beq.n	10048b5e <Gatt_Handler2+0xca>
10048b52:	2200      	movs	r2, #0
10048b54:	4630      	mov	r0, r6
10048b56:	9905      	ldr	r1, [sp, #20]
10048b58:	f00c f8eb 	bl	10054d32 <Att_Send_Exec_Write_Req_Pdu>
10048b5c:	e7e1      	b.n	10048b22 <Gatt_Handler2+0x8e>
10048b5e:	2201      	movs	r2, #1
10048b60:	e7f8      	b.n	10048b54 <Gatt_Handler2+0xc0>
10048b62:	2101      	movs	r1, #1
10048b64:	6930      	ldr	r0, [r6, #16]
10048b66:	0349      	lsls	r1, r1, #13
10048b68:	4308      	orrs	r0, r1
10048b6a:	6130      	str	r0, [r6, #16]
10048b6c:	4807      	ldr	r0, [pc, #28]	; (10048b8c <Gatt_Handler2+0xf8>)
10048b6e:	61b0      	str	r0, [r6, #24]
10048b70:	9805      	ldr	r0, [sp, #20]
10048b72:	f001 fc13 	bl	1004a39c <GATT_Send_Packet>
10048b76:	e005      	b.n	10048b84 <Gatt_Handler2+0xf0>
10048b78:	2100      	movs	r1, #0
10048b7a:	9805      	ldr	r0, [sp, #20]
10048b7c:	f00b ffb2 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048b80:	e000      	b.n	10048b84 <Gatt_Handler2+0xf0>
10048b82:	2464      	movs	r4, #100	; 0x64
10048b84:	4620      	mov	r0, r4
10048b86:	b00f      	add	sp, #60	; 0x3c
10048b88:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048b8a:	0000      	.short	0x0000
10048b8c:	10048df1 	.word	0x10048df1

10048b90 <Gatt_Multi_Charac_Values>:
10048b90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10048b92:	460f      	mov	r7, r1
10048b94:	4606      	mov	r6, r0
10048b96:	2546      	movs	r5, #70	; 0x46
10048b98:	f7ff fcb6 	bl	10048508 <Check_and_find_gatt_client>
10048b9c:	0004      	movs	r4, r0
10048b9e:	d01f      	beq.n	10048be0 <Gatt_Multi_Charac_Values+0x50>
10048ba0:	2220      	movs	r2, #32
10048ba2:	4631      	mov	r1, r6
10048ba4:	2000      	movs	r0, #0
10048ba6:	f00b ff41 	bl	10054a2c <PM_Get_Pckt>
10048baa:	0006      	movs	r6, r0
10048bac:	d017      	beq.n	10048bde <Gatt_Multi_Charac_Values+0x4e>
10048bae:	4601      	mov	r1, r0
10048bb0:	463b      	mov	r3, r7
10048bb2:	4620      	mov	r0, r4
10048bb4:	9a02      	ldr	r2, [sp, #8]
10048bb6:	f00c fa0b 	bl	10054fd0 <Att_Send_Read_Multi_Req_Pdu>
10048bba:	0005      	movs	r5, r0
10048bbc:	d004      	beq.n	10048bc8 <Gatt_Multi_Charac_Values+0x38>
10048bbe:	2100      	movs	r1, #0
10048bc0:	4630      	mov	r0, r6
10048bc2:	f00b ff8f 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048bc6:	e00b      	b.n	10048be0 <Gatt_Multi_Charac_Values+0x50>
10048bc8:	2101      	movs	r1, #1
10048bca:	6920      	ldr	r0, [r4, #16]
10048bcc:	0349      	lsls	r1, r1, #13
10048bce:	4308      	orrs	r0, r1
10048bd0:	6120      	str	r0, [r4, #16]
10048bd2:	4804      	ldr	r0, [pc, #16]	; (10048be4 <Gatt_Multi_Charac_Values+0x54>)
10048bd4:	61a0      	str	r0, [r4, #24]
10048bd6:	4630      	mov	r0, r6
10048bd8:	f001 fbe0 	bl	1004a39c <GATT_Send_Packet>
10048bdc:	e000      	b.n	10048be0 <Gatt_Multi_Charac_Values+0x50>
10048bde:	2564      	movs	r5, #100	; 0x64
10048be0:	4628      	mov	r0, r5
10048be2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10048be4:	10048de7 	.word	0x10048de7

10048be8 <Gatt_Prepare_Write_Req>:
10048be8:	b53e      	push	{r1, r2, r3, r4, r5, lr}
10048bea:	8814      	ldrh	r4, [r2, #0]
10048bec:	8852      	ldrh	r2, [r2, #2]
10048bee:	2500      	movs	r5, #0
10048bf0:	9301      	str	r3, [sp, #4]
10048bf2:	9200      	str	r2, [sp, #0]
10048bf4:	9502      	str	r5, [sp, #8]
10048bf6:	2310      	movs	r3, #16
10048bf8:	4622      	mov	r2, r4
10048bfa:	f7ff ff4b 	bl	10048a94 <Gatt_Handler2>
10048bfe:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10048c00 <Gatt_Read>:
10048c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10048c02:	460f      	mov	r7, r1
10048c04:	4606      	mov	r6, r0
10048c06:	2546      	movs	r5, #70	; 0x46
10048c08:	f7ff fc7e 	bl	10048508 <Check_and_find_gatt_client>
10048c0c:	0004      	movs	r4, r0
10048c0e:	d01e      	beq.n	10048c4e <Gatt_Read+0x4e>
10048c10:	2220      	movs	r2, #32
10048c12:	4631      	mov	r1, r6
10048c14:	2000      	movs	r0, #0
10048c16:	f00b ff09 	bl	10054a2c <PM_Get_Pckt>
10048c1a:	0006      	movs	r6, r0
10048c1c:	d016      	beq.n	10048c4c <Gatt_Read+0x4c>
10048c1e:	4601      	mov	r1, r0
10048c20:	463a      	mov	r2, r7
10048c22:	4620      	mov	r0, r4
10048c24:	f00c fa00 	bl	10055028 <Att_Send_Read_Req_Pdu>
10048c28:	0005      	movs	r5, r0
10048c2a:	d004      	beq.n	10048c36 <Gatt_Read+0x36>
10048c2c:	2100      	movs	r1, #0
10048c2e:	4630      	mov	r0, r6
10048c30:	f00b ff58 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048c34:	e00b      	b.n	10048c4e <Gatt_Read+0x4e>
10048c36:	2101      	movs	r1, #1
10048c38:	6920      	ldr	r0, [r4, #16]
10048c3a:	0349      	lsls	r1, r1, #13
10048c3c:	4308      	orrs	r0, r1
10048c3e:	6120      	str	r0, [r4, #16]
10048c40:	4804      	ldr	r0, [pc, #16]	; (10048c54 <Gatt_Read+0x54>)
10048c42:	61a0      	str	r0, [r4, #24]
10048c44:	4630      	mov	r0, r6
10048c46:	f001 fba9 	bl	1004a39c <GATT_Send_Packet>
10048c4a:	e000      	b.n	10048c4e <Gatt_Read+0x4e>
10048c4c:	2564      	movs	r5, #100	; 0x64
10048c4e:	4628      	mov	r0, r5
10048c50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10048c52:	0000      	.short	0x0000
10048c54:	10048cb9 	.word	0x10048cb9

10048c58 <Gatt_Read_Attr_By_Grp_Type_Req>:
10048c58:	b5f0      	push	{r4, r5, r6, r7, lr}
10048c5a:	b087      	sub	sp, #28
10048c5c:	4615      	mov	r5, r2
10048c5e:	460e      	mov	r6, r1
10048c60:	4607      	mov	r7, r0
10048c62:	781c      	ldrb	r4, [r3, #0]
10048c64:	2210      	movs	r2, #16
10048c66:	1c99      	adds	r1, r3, #2
10048c68:	a803      	add	r0, sp, #12
10048c6a:	f7fd fd7e 	bl	1004676a <__aeabi_memcpy>
10048c6e:	2000      	movs	r0, #0
10048c70:	a903      	add	r1, sp, #12
10048c72:	9101      	str	r1, [sp, #4]
10048c74:	9002      	str	r0, [sp, #8]
10048c76:	2304      	movs	r3, #4
10048c78:	462a      	mov	r2, r5
10048c7a:	9400      	str	r4, [sp, #0]
10048c7c:	4631      	mov	r1, r6
10048c7e:	4638      	mov	r0, r7
10048c80:	f7ff ff08 	bl	10048a94 <Gatt_Handler2>
10048c84:	b007      	add	sp, #28
10048c86:	bdf0      	pop	{r4, r5, r6, r7, pc}

10048c88 <Gatt_Read_Attr_By_Type_Req>:
10048c88:	b5f0      	push	{r4, r5, r6, r7, lr}
10048c8a:	b087      	sub	sp, #28
10048c8c:	4615      	mov	r5, r2
10048c8e:	460e      	mov	r6, r1
10048c90:	4607      	mov	r7, r0
10048c92:	781c      	ldrb	r4, [r3, #0]
10048c94:	2210      	movs	r2, #16
10048c96:	1c99      	adds	r1, r3, #2
10048c98:	a803      	add	r0, sp, #12
10048c9a:	f7fd fd66 	bl	1004676a <__aeabi_memcpy>
10048c9e:	2000      	movs	r0, #0
10048ca0:	a903      	add	r1, sp, #12
10048ca2:	9101      	str	r1, [sp, #4]
10048ca4:	9002      	str	r0, [sp, #8]
10048ca6:	2308      	movs	r3, #8
10048ca8:	462a      	mov	r2, r5
10048caa:	9400      	str	r4, [sp, #0]
10048cac:	4631      	mov	r1, r6
10048cae:	4638      	mov	r0, r7
10048cb0:	f7ff fef0 	bl	10048a94 <Gatt_Handler2>
10048cb4:	b007      	add	sp, #28
10048cb6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10048cb8 <Gatt_Read_Cb>:
10048cb8:	b510      	push	{r4, lr}
10048cba:	2141      	movs	r1, #65	; 0x41
10048cbc:	f000 fafa 	bl	100492b4 <Gatt_Super_Handler_Task7>
10048cc0:	bd10      	pop	{r4, pc}
	...

10048cc4 <Gatt_Read_Charac_By_Uuid>:
10048cc4:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10048cc6:	b089      	sub	sp, #36	; 0x24
10048cc8:	4607      	mov	r7, r0
10048cca:	2546      	movs	r5, #70	; 0x46
10048ccc:	781e      	ldrb	r6, [r3, #0]
10048cce:	2210      	movs	r2, #16
10048cd0:	1c99      	adds	r1, r3, #2
10048cd2:	a805      	add	r0, sp, #20
10048cd4:	f7fd fd49 	bl	1004676a <__aeabi_memcpy>
10048cd8:	2e01      	cmp	r6, #1
10048cda:	d004      	beq.n	10048ce6 <Gatt_Read_Charac_By_Uuid+0x22>
10048cdc:	2e02      	cmp	r6, #2
10048cde:	d002      	beq.n	10048ce6 <Gatt_Read_Charac_By_Uuid+0x22>
10048ce0:	2042      	movs	r0, #66	; 0x42
10048ce2:	b00d      	add	sp, #52	; 0x34
10048ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048ce6:	4638      	mov	r0, r7
10048ce8:	f7ff fc0e 	bl	10048508 <Check_and_find_gatt_client>
10048cec:	0004      	movs	r4, r0
10048cee:	d024      	beq.n	10048d3a <Gatt_Read_Charac_By_Uuid+0x76>
10048cf0:	2220      	movs	r2, #32
10048cf2:	4639      	mov	r1, r7
10048cf4:	2000      	movs	r0, #0
10048cf6:	f00b fe99 	bl	10054a2c <PM_Get_Pckt>
10048cfa:	0007      	movs	r7, r0
10048cfc:	d01c      	beq.n	10048d38 <Gatt_Read_Charac_By_Uuid+0x74>
10048cfe:	ad05      	add	r5, sp, #20
10048d00:	9604      	str	r6, [sp, #16]
10048d02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
10048d04:	466d      	mov	r5, sp
10048d06:	c50f      	stmia	r5!, {r0, r1, r2, r3}
10048d08:	4639      	mov	r1, r7
10048d0a:	4620      	mov	r0, r4
10048d0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10048d0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10048d10:	f00c f923 	bl	10054f5a <Att_Send_Read_By_Typ_Req_Pdu>
10048d14:	0005      	movs	r5, r0
10048d16:	d004      	beq.n	10048d22 <Gatt_Read_Charac_By_Uuid+0x5e>
10048d18:	2100      	movs	r1, #0
10048d1a:	4638      	mov	r0, r7
10048d1c:	f00b fee2 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048d20:	e00b      	b.n	10048d3a <Gatt_Read_Charac_By_Uuid+0x76>
10048d22:	2101      	movs	r1, #1
10048d24:	6920      	ldr	r0, [r4, #16]
10048d26:	0349      	lsls	r1, r1, #13
10048d28:	4308      	orrs	r0, r1
10048d2a:	6120      	str	r0, [r4, #16]
10048d2c:	4804      	ldr	r0, [pc, #16]	; (10048d40 <Gatt_Read_Charac_By_Uuid+0x7c>)
10048d2e:	61a0      	str	r0, [r4, #24]
10048d30:	4638      	mov	r0, r7
10048d32:	f001 fb33 	bl	1004a39c <GATT_Send_Packet>
10048d36:	e000      	b.n	10048d3a <Gatt_Read_Charac_By_Uuid+0x76>
10048d38:	2564      	movs	r5, #100	; 0x64
10048d3a:	4628      	mov	r0, r5
10048d3c:	e7d1      	b.n	10048ce2 <Gatt_Read_Charac_By_Uuid+0x1e>
10048d3e:	0000      	.short	0x0000
10048d40:	10048d45 	.word	0x10048d45

10048d44 <Gatt_Read_Charac_By_Uuid_Cb>:
10048d44:	b510      	push	{r4, lr}
10048d46:	2150      	movs	r1, #80	; 0x50
10048d48:	f000 fab4 	bl	100492b4 <Gatt_Super_Handler_Task7>
10048d4c:	bd10      	pop	{r4, pc}

10048d4e <Gatt_Read_Charac_Desc>:
10048d4e:	b510      	push	{r4, lr}
10048d50:	f7ff ff56 	bl	10048c00 <Gatt_Read>
10048d54:	bd10      	pop	{r4, pc}

10048d56 <Gatt_Read_Charac_Val>:
10048d56:	b510      	push	{r4, lr}
10048d58:	f7ff ff52 	bl	10048c00 <Gatt_Read>
10048d5c:	bd10      	pop	{r4, pc}
	...

10048d60 <Gatt_Read_Long>:
10048d60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10048d62:	4617      	mov	r7, r2
10048d64:	4606      	mov	r6, r0
10048d66:	2546      	movs	r5, #70	; 0x46
10048d68:	f7ff fbce 	bl	10048508 <Check_and_find_gatt_client>
10048d6c:	0004      	movs	r4, r0
10048d6e:	d028      	beq.n	10048dc2 <Gatt_Read_Long+0x62>
10048d70:	2220      	movs	r2, #32
10048d72:	4631      	mov	r1, r6
10048d74:	2000      	movs	r0, #0
10048d76:	f00b fe59 	bl	10054a2c <PM_Get_Pckt>
10048d7a:	0006      	movs	r6, r0
10048d7c:	d020      	beq.n	10048dc0 <Gatt_Read_Long+0x60>
10048d7e:	4601      	mov	r1, r0
10048d80:	463b      	mov	r3, r7
10048d82:	4620      	mov	r0, r4
10048d84:	9a01      	ldr	r2, [sp, #4]
10048d86:	f00c f889 	bl	10054e9c <Att_Send_Read_Blob_Req_Pdu>
10048d8a:	0005      	movs	r5, r0
10048d8c:	d004      	beq.n	10048d98 <Gatt_Read_Long+0x38>
10048d8e:	2100      	movs	r1, #0
10048d90:	4630      	mov	r0, r6
10048d92:	f00b fea7 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048d96:	e014      	b.n	10048dc2 <Gatt_Read_Long+0x62>
10048d98:	68a0      	ldr	r0, [r4, #8]
10048d9a:	9901      	ldr	r1, [sp, #4]
10048d9c:	f000 ff8e 	bl	10049cbc <int16ToLe2Byte>
10048da0:	68a0      	ldr	r0, [r4, #8]
10048da2:	4639      	mov	r1, r7
10048da4:	1c80      	adds	r0, r0, #2
10048da6:	f000 ff89 	bl	10049cbc <int16ToLe2Byte>
10048daa:	2001      	movs	r0, #1
10048dac:	6921      	ldr	r1, [r4, #16]
10048dae:	0340      	lsls	r0, r0, #13
10048db0:	4301      	orrs	r1, r0
10048db2:	4805      	ldr	r0, [pc, #20]	; (10048dc8 <Gatt_Read_Long+0x68>)
10048db4:	6121      	str	r1, [r4, #16]
10048db6:	61a0      	str	r0, [r4, #24]
10048db8:	4630      	mov	r0, r6
10048dba:	f001 faef 	bl	1004a39c <GATT_Send_Packet>
10048dbe:	e000      	b.n	10048dc2 <Gatt_Read_Long+0x62>
10048dc0:	2564      	movs	r5, #100	; 0x64
10048dc2:	4628      	mov	r0, r5
10048dc4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10048dc6:	0000      	.short	0x0000
10048dc8:	10048dcd 	.word	0x10048dcd

10048dcc <Gatt_Read_Long_Cb>:
10048dcc:	b510      	push	{r4, lr}
10048dce:	2142      	movs	r1, #66	; 0x42
10048dd0:	f000 fa70 	bl	100492b4 <Gatt_Super_Handler_Task7>
10048dd4:	bd10      	pop	{r4, pc}

10048dd6 <Gatt_Read_Long_Charac_Desc>:
10048dd6:	b510      	push	{r4, lr}
10048dd8:	f7ff ffc2 	bl	10048d60 <Gatt_Read_Long>
10048ddc:	bd10      	pop	{r4, pc}

10048dde <Gatt_Read_Long_Charac_Value>:
10048dde:	b510      	push	{r4, lr}
10048de0:	f7ff ffbe 	bl	10048d60 <Gatt_Read_Long>
10048de4:	bd10      	pop	{r4, pc}

10048de6 <Gatt_Read_Multi_Attr_Cb>:
10048de6:	b510      	push	{r4, lr}
10048de8:	2144      	movs	r1, #68	; 0x44
10048dea:	f000 fa63 	bl	100492b4 <Gatt_Super_Handler_Task7>
10048dee:	bd10      	pop	{r4, pc}

10048df0 <Gatt_Request_Cb>:
10048df0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10048df2:	69c7      	ldr	r7, [r0, #28]
10048df4:	4604      	mov	r4, r0
10048df6:	68b8      	ldr	r0, [r7, #8]
10048df8:	7b00      	ldrb	r0, [r0, #12]
10048dfa:	280d      	cmp	r0, #13
10048dfc:	d038      	beq.n	10048e70 <Gatt_Request_Cb+0x80>
10048dfe:	dc0c      	bgt.n	10048e1a <Gatt_Request_Cb+0x2a>
10048e00:	2807      	cmp	r0, #7
10048e02:	d023      	beq.n	10048e4c <Gatt_Request_Cb+0x5c>
10048e04:	dc04      	bgt.n	10048e10 <Gatt_Request_Cb+0x20>
10048e06:	2801      	cmp	r0, #1
10048e08:	d014      	beq.n	10048e34 <Gatt_Request_Cb+0x44>
10048e0a:	2805      	cmp	r0, #5
10048e0c:	d178      	bne.n	10048f00 <Gatt_Request_Cb+0x110>
10048e0e:	e017      	b.n	10048e40 <Gatt_Request_Cb+0x50>
10048e10:	2809      	cmp	r0, #9
10048e12:	d021      	beq.n	10048e58 <Gatt_Request_Cb+0x68>
10048e14:	280b      	cmp	r0, #11
10048e16:	d173      	bne.n	10048f00 <Gatt_Request_Cb+0x110>
10048e18:	e024      	b.n	10048e64 <Gatt_Request_Cb+0x74>
10048e1a:	2813      	cmp	r0, #19
10048e1c:	d03a      	beq.n	10048e94 <Gatt_Request_Cb+0xa4>
10048e1e:	dc04      	bgt.n	10048e2a <Gatt_Request_Cb+0x3a>
10048e20:	280f      	cmp	r0, #15
10048e22:	d02b      	beq.n	10048e7c <Gatt_Request_Cb+0x8c>
10048e24:	2811      	cmp	r0, #17
10048e26:	d16b      	bne.n	10048f00 <Gatt_Request_Cb+0x110>
10048e28:	e02e      	b.n	10048e88 <Gatt_Request_Cb+0x98>
10048e2a:	2817      	cmp	r0, #23
10048e2c:	d05e      	beq.n	10048eec <Gatt_Request_Cb+0xfc>
10048e2e:	2819      	cmp	r0, #25
10048e30:	d166      	bne.n	10048f00 <Gatt_Request_Cb+0x110>
10048e32:	e061      	b.n	10048ef8 <Gatt_Request_Cb+0x108>
10048e34:	8821      	ldrh	r1, [r4, #0]
10048e36:	463a      	mov	r2, r7
10048e38:	2002      	movs	r0, #2
10048e3a:	f000 fed7 	bl	10049bec <aci_gatt_error_resp_event_push>
10048e3e:	e05f      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e40:	8821      	ldrh	r1, [r4, #0]
10048e42:	463a      	mov	r2, r7
10048e44:	2002      	movs	r0, #2
10048e46:	f000 fcd5 	bl	100497f4 <aci_att_find_info_resp_event_push>
10048e4a:	e059      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e4c:	8821      	ldrh	r1, [r4, #0]
10048e4e:	463a      	mov	r2, r7
10048e50:	2002      	movs	r0, #2
10048e52:	f000 fc93 	bl	1004977c <aci_att_find_by_type_value_resp_event_push>
10048e56:	e053      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e58:	8821      	ldrh	r1, [r4, #0]
10048e5a:	463a      	mov	r2, r7
10048e5c:	2002      	movs	r0, #2
10048e5e:	f000 fdd1 	bl	10049a04 <aci_att_read_by_type_resp_event_push>
10048e62:	e04d      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e64:	8821      	ldrh	r1, [r4, #0]
10048e66:	463a      	mov	r2, r7
10048e68:	2002      	movs	r0, #2
10048e6a:	f000 fe43 	bl	10049af4 <aci_att_read_resp_event_push>
10048e6e:	e047      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e70:	8821      	ldrh	r1, [r4, #0]
10048e72:	463a      	mov	r2, r7
10048e74:	2002      	movs	r0, #2
10048e76:	f000 fd4d 	bl	10049914 <aci_att_read_blob_resp_event_push>
10048e7a:	e041      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e7c:	8821      	ldrh	r1, [r4, #0]
10048e7e:	463a      	mov	r2, r7
10048e80:	2002      	movs	r0, #2
10048e82:	f000 fdfd 	bl	10049a80 <aci_att_read_multiple_resp_event_push>
10048e86:	e03b      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e88:	8821      	ldrh	r1, [r4, #0]
10048e8a:	463a      	mov	r2, r7
10048e8c:	2002      	movs	r0, #2
10048e8e:	f000 fd7b 	bl	10049988 <aci_att_read_by_group_type_resp_event_push>
10048e92:	e035      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048e94:	2002      	movs	r0, #2
10048e96:	9001      	str	r0, [sp, #4]
10048e98:	8820      	ldrh	r0, [r4, #0]
10048e9a:	9000      	str	r0, [sp, #0]
10048e9c:	79b8      	ldrb	r0, [r7, #6]
10048e9e:	2103      	movs	r1, #3
10048ea0:	1e40      	subs	r0, r0, #1
10048ea2:	b2c6      	uxtb	r6, r0
10048ea4:	1cf0      	adds	r0, r6, #3
10048ea6:	4308      	orrs	r0, r1
10048ea8:	1c40      	adds	r0, r0, #1
10048eaa:	0883      	lsrs	r3, r0, #2
10048eac:	481a      	ldr	r0, [pc, #104]	; (10048f18 <Gatt_Request_Cb+0x128>)
10048eae:	2137      	movs	r1, #55	; 0x37
10048eb0:	6800      	ldr	r0, [r0, #0]
10048eb2:	0149      	lsls	r1, r1, #5
10048eb4:	1841      	adds	r1, r0, r1
10048eb6:	7b49      	ldrb	r1, [r1, #13]
10048eb8:	0749      	lsls	r1, r1, #29
10048eba:	d521      	bpl.n	10048f00 <Gatt_Request_Cb+0x110>
10048ebc:	2102      	movs	r1, #2
10048ebe:	028d      	lsls	r5, r1, #10
10048ec0:	3008      	adds	r0, #8
10048ec2:	1940      	adds	r0, r0, r5
10048ec4:	222c      	movs	r2, #44	; 0x2c
10048ec6:	6940      	ldr	r0, [r0, #20]
10048ec8:	f013 f810 	bl	1005beec <aci_event_fifo_push_header>
10048ecc:	0005      	movs	r5, r0
10048ece:	d017      	beq.n	10048f00 <Gatt_Request_Cb+0x110>
10048ed0:	9800      	ldr	r0, [sp, #0]
10048ed2:	80a8      	strh	r0, [r5, #4]
10048ed4:	71ae      	strb	r6, [r5, #6]
10048ed6:	4632      	mov	r2, r6
10048ed8:	2105      	movs	r1, #5
10048eda:	4638      	mov	r0, r7
10048edc:	1deb      	adds	r3, r5, #7
10048ede:	f00b fd65 	bl	100549ac <PM_Copy_Pckt_Data>
10048ee2:	4629      	mov	r1, r5
10048ee4:	9801      	ldr	r0, [sp, #4]
10048ee6:	f012 ffed 	bl	1005bec4 <aci_event_fifo_push>
10048eea:	e009      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048eec:	8821      	ldrh	r1, [r4, #0]
10048eee:	463a      	mov	r2, r7
10048ef0:	2002      	movs	r0, #2
10048ef2:	f000 fcbd 	bl	10049870 <aci_att_prepare_write_resp_event_push>
10048ef6:	e003      	b.n	10048f00 <Gatt_Request_Cb+0x110>
10048ef8:	8821      	ldrh	r1, [r4, #0]
10048efa:	2002      	movs	r0, #2
10048efc:	f000 fc14 	bl	10049728 <aci_att_exec_write_resp_event_push>
10048f00:	2101      	movs	r1, #1
10048f02:	6920      	ldr	r0, [r4, #16]
10048f04:	0349      	lsls	r1, r1, #13
10048f06:	4388      	bics	r0, r1
10048f08:	6120      	str	r0, [r4, #16]
10048f0a:	2101      	movs	r1, #1
10048f0c:	4638      	mov	r0, r7
10048f0e:	f00b fde9 	bl	10054ae4 <PM_Release_Acl_Pckt>
10048f12:	2000      	movs	r0, #0
10048f14:	61e0      	str	r0, [r4, #28]
10048f16:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10048f18:	20000d64 	.word	0x20000d64

10048f1c <Gatt_Signed_Write_Without_Resp>:
10048f1c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10048f1e:	b081      	sub	sp, #4
10048f20:	4615      	mov	r5, r2
10048f22:	4606      	mov	r6, r0
10048f24:	2446      	movs	r4, #70	; 0x46
10048f26:	f7ff fafb 	bl	10048520 <Find_Gatt_Client>
10048f2a:	0007      	movs	r7, r0
10048f2c:	d026      	beq.n	10048f7c <Gatt_Signed_Write_Without_Resp+0x60>
10048f2e:	4630      	mov	r0, r6
10048f30:	f011 fce0 	bl	1005a8f4 <SMP_get_remote_device_list_item>
10048f34:	2800      	cmp	r0, #0
10048f36:	d021      	beq.n	10048f7c <Gatt_Signed_Write_Without_Resp+0x60>
10048f38:	0530      	lsls	r0, r6, #20
10048f3a:	0d00      	lsrs	r0, r0, #20
10048f3c:	f011 fcc2 	bl	1005a8c4 <SMP_get_link_status>
10048f40:	07c0      	lsls	r0, r0, #31
10048f42:	d11b      	bne.n	10048f7c <Gatt_Signed_Write_Without_Resp+0x60>
10048f44:	9802      	ldr	r0, [sp, #8]
10048f46:	2800      	cmp	r0, #0
10048f48:	d003      	beq.n	10048f52 <Gatt_Signed_Write_Without_Resp+0x36>
10048f4a:	8878      	ldrh	r0, [r7, #2]
10048f4c:	380f      	subs	r0, #15
10048f4e:	42a8      	cmp	r0, r5
10048f50:	d201      	bcs.n	10048f56 <Gatt_Signed_Write_Without_Resp+0x3a>
10048f52:	2442      	movs	r4, #66	; 0x42
10048f54:	e012      	b.n	10048f7c <Gatt_Signed_Write_Without_Resp+0x60>
10048f56:	4628      	mov	r0, r5
10048f58:	300f      	adds	r0, #15
10048f5a:	b281      	uxth	r1, r0
10048f5c:	4630      	mov	r0, r6
10048f5e:	f000 fbdb 	bl	10049718 <PM_Get_Host_Pckt>
10048f62:	0006      	movs	r6, r0
10048f64:	d00d      	beq.n	10048f82 <Gatt_Signed_Write_Without_Resp+0x66>
10048f66:	4601      	mov	r1, r0
10048f68:	9500      	str	r5, [sp, #0]
10048f6a:	4638      	mov	r0, r7
10048f6c:	9b04      	ldr	r3, [sp, #16]
10048f6e:	9a02      	ldr	r2, [sp, #8]
10048f70:	f00c f877 	bl	10055062 <Att_Send_Signd_Write_Cmd_Pdu>
10048f74:	4604      	mov	r4, r0
10048f76:	4630      	mov	r0, r6
10048f78:	f001 fa10 	bl	1004a39c <GATT_Send_Packet>
10048f7c:	4620      	mov	r0, r4
10048f7e:	b005      	add	sp, #20
10048f80:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048f82:	2464      	movs	r4, #100	; 0x64
10048f84:	2080      	movs	r0, #128	; 0x80
10048f86:	f7ff fae9 	bl	1004855c <GATT_Server_Set_Flag>
10048f8a:	e7f7      	b.n	10048f7c <Gatt_Signed_Write_Without_Resp+0x60>

10048f8c <Gatt_Super_Handler>:
10048f8c:	b5f0      	push	{r4, r5, r6, r7, lr}
10048f8e:	b093      	sub	sp, #76	; 0x4c
10048f90:	460e      	mov	r6, r1
10048f92:	4604      	mov	r4, r0
10048f94:	2000      	movs	r0, #0
10048f96:	4669      	mov	r1, sp
10048f98:	7608      	strb	r0, [r1, #24]
10048f9a:	9001      	str	r0, [sp, #4]
10048f9c:	69e0      	ldr	r0, [r4, #28]
10048f9e:	9007      	str	r0, [sp, #28]
10048fa0:	2800      	cmp	r0, #0
10048fa2:	d027      	beq.n	10048ff4 <Gatt_Super_Handler+0x68>
10048fa4:	88c7      	ldrh	r7, [r0, #6]
10048fa6:	2f00      	cmp	r7, #0
10048fa8:	d07d      	beq.n	100490a6 <Gatt_Super_Handler+0x11a>
10048faa:	06b0      	lsls	r0, r6, #26
10048fac:	0f80      	lsrs	r0, r0, #30
10048fae:	d003      	beq.n	10048fb8 <Gatt_Super_Handler+0x2c>
10048fb0:	8820      	ldrh	r0, [r4, #0]
10048fb2:	f7fe ffe3 	bl	10047f7c <GAP_Started_Gatt_Proc>
10048fb6:	9001      	str	r0, [sp, #4]
10048fb8:	ab06      	add	r3, sp, #24
10048fba:	4620      	mov	r0, r4
10048fbc:	9a01      	ldr	r2, [sp, #4]
10048fbe:	9907      	ldr	r1, [sp, #28]
10048fc0:	f7ff fadd 	bl	1004857e <Gatt_Check_Not_Error_Resp>
10048fc4:	2841      	cmp	r0, #65	; 0x41
10048fc6:	d061      	beq.n	1004908c <Gatt_Super_Handler+0x100>
10048fc8:	1eb8      	subs	r0, r7, #2
10048fca:	b280      	uxth	r0, r0
10048fcc:	9000      	str	r0, [sp, #0]
10048fce:	9807      	ldr	r0, [sp, #28]
10048fd0:	6880      	ldr	r0, [r0, #8]
10048fd2:	7b45      	ldrb	r5, [r0, #13]
10048fd4:	2d00      	cmp	r5, #0
10048fd6:	d056      	beq.n	10049086 <Gatt_Super_Handler+0xfa>
10048fd8:	06f0      	lsls	r0, r6, #27
10048fda:	07f1      	lsls	r1, r6, #31
10048fdc:	9003      	str	r0, [sp, #12]
10048fde:	2900      	cmp	r1, #0
10048fe0:	d00f      	beq.n	10049002 <Gatt_Super_Handler+0x76>
10048fe2:	2f02      	cmp	r7, #2
10048fe4:	d30d      	bcc.n	10049002 <Gatt_Super_Handler+0x76>
10048fe6:	4629      	mov	r1, r5
10048fe8:	9800      	ldr	r0, [sp, #0]
10048fea:	f7f7 f93d 	bl	10040268 <__aeabi_uidivmod>
10048fee:	2900      	cmp	r1, #0
10048ff0:	d003      	beq.n	10048ffa <Gatt_Super_Handler+0x6e>
10048ff2:	e006      	b.n	10049002 <Gatt_Super_Handler+0x76>
10048ff4:	2041      	movs	r0, #65	; 0x41
10048ff6:	b013      	add	sp, #76	; 0x4c
10048ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048ffa:	2d06      	cmp	r5, #6
10048ffc:	d017      	beq.n	1004902e <Gatt_Super_Handler+0xa2>
10048ffe:	2d14      	cmp	r5, #20
10049000:	d015      	beq.n	1004902e <Gatt_Super_Handler+0xa2>
10049002:	07b0      	lsls	r0, r6, #30
10049004:	d508      	bpl.n	10049018 <Gatt_Super_Handler+0x8c>
10049006:	2f05      	cmp	r7, #5
10049008:	d306      	bcc.n	10049018 <Gatt_Super_Handler+0x8c>
1004900a:	2103      	movs	r1, #3
1004900c:	07b8      	lsls	r0, r7, #30
1004900e:	0789      	lsls	r1, r1, #30
10049010:	42c8      	cmn	r0, r1
10049012:	d101      	bne.n	10049018 <Gatt_Super_Handler+0x8c>
10049014:	2002      	movs	r0, #2
10049016:	e048      	b.n	100490aa <Gatt_Super_Handler+0x11e>
10049018:	0770      	lsls	r0, r6, #29
1004901a:	d50e      	bpl.n	1004903a <Gatt_Super_Handler+0xae>
1004901c:	2f02      	cmp	r7, #2
1004901e:	d30c      	bcc.n	1004903a <Gatt_Super_Handler+0xae>
10049020:	4629      	mov	r1, r5
10049022:	9800      	ldr	r0, [sp, #0]
10049024:	f7f7 f920 	bl	10040268 <__aeabi_uidivmod>
10049028:	2900      	cmp	r1, #0
1004902a:	d002      	beq.n	10049032 <Gatt_Super_Handler+0xa6>
1004902c:	e005      	b.n	1004903a <Gatt_Super_Handler+0xae>
1004902e:	2001      	movs	r0, #1
10049030:	e03b      	b.n	100490aa <Gatt_Super_Handler+0x11e>
10049032:	2d08      	cmp	r5, #8
10049034:	d00d      	beq.n	10049052 <Gatt_Super_Handler+0xc6>
10049036:	2d06      	cmp	r5, #6
10049038:	d00b      	beq.n	10049052 <Gatt_Super_Handler+0xc6>
1004903a:	9803      	ldr	r0, [sp, #12]
1004903c:	0f80      	lsrs	r0, r0, #30
1004903e:	d00e      	beq.n	1004905e <Gatt_Super_Handler+0xd2>
10049040:	2f02      	cmp	r7, #2
10049042:	d30c      	bcc.n	1004905e <Gatt_Super_Handler+0xd2>
10049044:	4629      	mov	r1, r5
10049046:	9800      	ldr	r0, [sp, #0]
10049048:	f7f7 f90e 	bl	10040268 <__aeabi_uidivmod>
1004904c:	2900      	cmp	r1, #0
1004904e:	d002      	beq.n	10049056 <Gatt_Super_Handler+0xca>
10049050:	e005      	b.n	1004905e <Gatt_Super_Handler+0xd2>
10049052:	2004      	movs	r0, #4
10049054:	e029      	b.n	100490aa <Gatt_Super_Handler+0x11e>
10049056:	2d07      	cmp	r5, #7
10049058:	d008      	beq.n	1004906c <Gatt_Super_Handler+0xe0>
1004905a:	2d15      	cmp	r5, #21
1004905c:	d006      	beq.n	1004906c <Gatt_Super_Handler+0xe0>
1004905e:	06b0      	lsls	r0, r6, #26
10049060:	d511      	bpl.n	10049086 <Gatt_Super_Handler+0xfa>
10049062:	2d01      	cmp	r5, #1
10049064:	d004      	beq.n	10049070 <Gatt_Super_Handler+0xe4>
10049066:	2d02      	cmp	r5, #2
10049068:	d004      	beq.n	10049074 <Gatt_Super_Handler+0xe8>
1004906a:	e00c      	b.n	10049086 <Gatt_Super_Handler+0xfa>
1004906c:	2008      	movs	r0, #8
1004906e:	e01c      	b.n	100490aa <Gatt_Super_Handler+0x11e>
10049070:	2504      	movs	r5, #4
10049072:	e000      	b.n	10049076 <Gatt_Super_Handler+0xea>
10049074:	2512      	movs	r5, #18
10049076:	2f02      	cmp	r7, #2
10049078:	d905      	bls.n	10049086 <Gatt_Super_Handler+0xfa>
1004907a:	4629      	mov	r1, r5
1004907c:	9800      	ldr	r0, [sp, #0]
1004907e:	f7f7 f8f3 	bl	10040268 <__aeabi_uidivmod>
10049082:	2900      	cmp	r1, #0
10049084:	d010      	beq.n	100490a8 <Gatt_Super_Handler+0x11c>
10049086:	2041      	movs	r0, #65	; 0x41
10049088:	4669      	mov	r1, sp
1004908a:	7608      	strb	r0, [r1, #24]
1004908c:	2101      	movs	r1, #1
1004908e:	6920      	ldr	r0, [r4, #16]
10049090:	0349      	lsls	r1, r1, #13
10049092:	4388      	bics	r0, r1
10049094:	6120      	str	r0, [r4, #16]
10049096:	9801      	ldr	r0, [sp, #4]
10049098:	2800      	cmp	r0, #0
1004909a:	d07d      	beq.n	10049198 <Gatt_Super_Handler+0x20c>
1004909c:	aa06      	add	r2, sp, #24
1004909e:	2101      	movs	r1, #1
100490a0:	2031      	movs	r0, #49	; 0x31
100490a2:	f7fe fce3 	bl	10047a6c <GAP_Internal_Evt_Handler>
100490a6:	e0f6      	b.n	10049296 <Gatt_Super_Handler+0x30a>
100490a8:	2010      	movs	r0, #16
100490aa:	0781      	lsls	r1, r0, #30
100490ac:	d506      	bpl.n	100490bc <Gatt_Super_Handler+0x130>
100490ae:	497d      	ldr	r1, [pc, #500]	; (100492a4 <Gatt_Super_Handler+0x318>)
100490b0:	03b8      	lsls	r0, r7, #14
100490b2:	1840      	adds	r0, r0, r1
100490b4:	0c07      	lsrs	r7, r0, #16
100490b6:	00b8      	lsls	r0, r7, #2
100490b8:	1cc0      	adds	r0, r0, #3
100490ba:	e00e      	b.n	100490da <Gatt_Super_Handler+0x14e>
100490bc:	06c0      	lsls	r0, r0, #27
100490be:	9800      	ldr	r0, [sp, #0]
100490c0:	4629      	mov	r1, r5
100490c2:	d504      	bpl.n	100490ce <Gatt_Super_Handler+0x142>
100490c4:	1c40      	adds	r0, r0, #1
100490c6:	f7f7 f8cf 	bl	10040268 <__aeabi_uidivmod>
100490ca:	b287      	uxth	r7, r0
100490cc:	e002      	b.n	100490d4 <Gatt_Super_Handler+0x148>
100490ce:	f7f7 f8cb 	bl	10040268 <__aeabi_uidivmod>
100490d2:	4607      	mov	r7, r0
100490d4:	1e78      	subs	r0, r7, #1
100490d6:	4368      	muls	r0, r5
100490d8:	1d80      	adds	r0, r0, #6
100490da:	b281      	uxth	r1, r0
100490dc:	ab05      	add	r3, sp, #20
100490de:	2202      	movs	r2, #2
100490e0:	9807      	ldr	r0, [sp, #28]
100490e2:	f00b fc63 	bl	100549ac <PM_Copy_Pckt_Data>
100490e6:	06f0      	lsls	r0, r6, #27
100490e8:	d54e      	bpl.n	10049188 <Gatt_Super_Handler+0x1fc>
100490ea:	4669      	mov	r1, sp
100490ec:	89a0      	ldrh	r0, [r4, #12]
100490ee:	8a89      	ldrh	r1, [r1, #20]
100490f0:	4288      	cmp	r0, r1
100490f2:	d902      	bls.n	100490fa <Gatt_Super_Handler+0x16e>
100490f4:	6920      	ldr	r0, [r4, #16]
100490f6:	0641      	lsls	r1, r0, #25
100490f8:	d45b      	bmi.n	100491b2 <Gatt_Super_Handler+0x226>
100490fa:	2000      	movs	r0, #0
100490fc:	e041      	b.n	10049182 <Gatt_Super_Handler+0x1f6>
100490fe:	2d07      	cmp	r5, #7
10049100:	d00a      	beq.n	10049118 <Gatt_Super_Handler+0x18c>
10049102:	4368      	muls	r0, r5
10049104:	300b      	adds	r0, #11
10049106:	b282      	uxth	r2, r0
10049108:	2310      	movs	r3, #16
1004910a:	68a1      	ldr	r1, [r4, #8]
1004910c:	9807      	ldr	r0, [sp, #28]
1004910e:	f00b fce3 	bl	10054ad8 <PM_Pckt_Cmp>
10049112:	2800      	cmp	r0, #0
10049114:	d015      	beq.n	10049142 <Gatt_Super_Handler+0x1b6>
10049116:	e031      	b.n	1004917c <Gatt_Super_Handler+0x1f0>
10049118:	2210      	movs	r2, #16
1004911a:	4963      	ldr	r1, [pc, #396]	; (100492a8 <Gatt_Super_Handler+0x31c>)
1004911c:	a808      	add	r0, sp, #32
1004911e:	f7f7 fb30 	bl	10040782 <Osal_MemCpy>
10049122:	9802      	ldr	r0, [sp, #8]
10049124:	ab0b      	add	r3, sp, #44	; 0x2c
10049126:	00c1      	lsls	r1, r0, #3
10049128:	1a08      	subs	r0, r1, r0
1004912a:	300b      	adds	r0, #11
1004912c:	b281      	uxth	r1, r0
1004912e:	2202      	movs	r2, #2
10049130:	9807      	ldr	r0, [sp, #28]
10049132:	f00b fc3b 	bl	100549ac <PM_Copy_Pckt_Data>
10049136:	2210      	movs	r2, #16
10049138:	a808      	add	r0, sp, #32
1004913a:	68a1      	ldr	r1, [r4, #8]
1004913c:	f7f7 fb29 	bl	10040792 <Osal_MemCmp>
10049140:	e7e7      	b.n	10049112 <Gatt_Super_Handler+0x186>
10049142:	9801      	ldr	r0, [sp, #4]
10049144:	2800      	cmp	r0, #0
10049146:	d00e      	beq.n	10049166 <Gatt_Super_Handler+0x1da>
10049148:	9802      	ldr	r0, [sp, #8]
1004914a:	ab0c      	add	r3, sp, #48	; 0x30
1004914c:	4368      	muls	r0, r5
1004914e:	1d80      	adds	r0, r0, #6
10049150:	b281      	uxth	r1, r0
10049152:	462a      	mov	r2, r5
10049154:	9807      	ldr	r0, [sp, #28]
10049156:	f00b fc29 	bl	100549ac <PM_Copy_Pckt_Data>
1004915a:	aa0c      	add	r2, sp, #48	; 0x30
1004915c:	4629      	mov	r1, r5
1004915e:	2033      	movs	r0, #51	; 0x33
10049160:	f7fe fc84 	bl	10047a6c <GAP_Internal_Evt_Handler>
10049164:	e00a      	b.n	1004917c <Gatt_Super_Handler+0x1f0>
10049166:	9807      	ldr	r0, [sp, #28]
10049168:	9000      	str	r0, [sp, #0]
1004916a:	9802      	ldr	r0, [sp, #8]
1004916c:	462b      	mov	r3, r5
1004916e:	4368      	muls	r0, r5
10049170:	1c80      	adds	r0, r0, #2
10049172:	b2c2      	uxtb	r2, r0
10049174:	8821      	ldrh	r1, [r4, #0]
10049176:	2002      	movs	r0, #2
10049178:	f000 fcf6 	bl	10049b68 <aci_gatt_disc_read_char_by_uuid_resp_event_push>
1004917c:	9802      	ldr	r0, [sp, #8]
1004917e:	1c40      	adds	r0, r0, #1
10049180:	b280      	uxth	r0, r0
10049182:	9002      	str	r0, [sp, #8]
10049184:	42b8      	cmp	r0, r7
10049186:	d3ba      	bcc.n	100490fe <Gatt_Super_Handler+0x172>
10049188:	2038      	movs	r0, #56	; 0x38
1004918a:	4f48      	ldr	r7, [pc, #288]	; (100492ac <Gatt_Super_Handler+0x320>)
1004918c:	4206      	tst	r6, r0
1004918e:	d007      	beq.n	100491a0 <Gatt_Super_Handler+0x214>
10049190:	4669      	mov	r1, sp
10049192:	89a0      	ldrh	r0, [r4, #12]
10049194:	8a89      	ldrh	r1, [r1, #20]
10049196:	e000      	b.n	1004919a <Gatt_Super_Handler+0x20e>
10049198:	e077      	b.n	1004928a <Gatt_Super_Handler+0x2fe>
1004919a:	4288      	cmp	r0, r1
1004919c:	d804      	bhi.n	100491a8 <Gatt_Super_Handler+0x21c>
1004919e:	e06e      	b.n	1004927e <Gatt_Super_Handler+0x2f2>
100491a0:	4668      	mov	r0, sp
100491a2:	8a80      	ldrh	r0, [r0, #20]
100491a4:	42b8      	cmp	r0, r7
100491a6:	d06a      	beq.n	1004927e <Gatt_Super_Handler+0x2f2>
100491a8:	6920      	ldr	r0, [r4, #16]
100491aa:	0641      	lsls	r1, r0, #25
100491ac:	d506      	bpl.n	100491bc <Gatt_Super_Handler+0x230>
100491ae:	06f1      	lsls	r1, r6, #27
100491b0:	d404      	bmi.n	100491bc <Gatt_Super_Handler+0x230>
100491b2:	2101      	movs	r1, #1
100491b4:	0289      	lsls	r1, r1, #10
100491b6:	4308      	orrs	r0, r1
100491b8:	6120      	str	r0, [r4, #16]
100491ba:	e06c      	b.n	10049296 <Gatt_Super_Handler+0x30a>
100491bc:	8821      	ldrh	r1, [r4, #0]
100491be:	2220      	movs	r2, #32
100491c0:	2000      	movs	r0, #0
100491c2:	f00b fc33 	bl	10054a2c <PM_Get_Pckt>
100491c6:	0005      	movs	r5, r0
100491c8:	d011      	beq.n	100491ee <Gatt_Super_Handler+0x262>
100491ca:	2105      	movs	r1, #5
100491cc:	07f2      	lsls	r2, r6, #31
100491ce:	2001      	movs	r0, #1
100491d0:	02c9      	lsls	r1, r1, #11
100491d2:	2a00      	cmp	r2, #0
100491d4:	d00d      	beq.n	100491f2 <Gatt_Super_Handler+0x266>
100491d6:	466a      	mov	r2, sp
100491d8:	8011      	strh	r1, [r2, #0]
100491da:	9004      	str	r0, [sp, #16]
100491dc:	8a90      	ldrh	r0, [r2, #20]
100491de:	463b      	mov	r3, r7
100491e0:	1c40      	adds	r0, r0, #1
100491e2:	b282      	uxth	r2, r0
100491e4:	4629      	mov	r1, r5
100491e6:	4620      	mov	r0, r4
100491e8:	f00b fe7c 	bl	10054ee4 <Att_Send_Read_By_Grp_Typ_Req_Pdu>
100491ec:	e037      	b.n	1004925e <Gatt_Super_Handler+0x2d2>
100491ee:	2045      	movs	r0, #69	; 0x45
100491f0:	e701      	b.n	10048ff6 <Gatt_Super_Handler+0x6a>
100491f2:	07b2      	lsls	r2, r6, #30
100491f4:	d513      	bpl.n	1004921e <Gatt_Super_Handler+0x292>
100491f6:	7920      	ldrb	r0, [r4, #4]
100491f8:	2801      	cmp	r0, #1
100491fa:	d00e      	beq.n	1004921a <Gatt_Super_Handler+0x28e>
100491fc:	2010      	movs	r0, #16
100491fe:	68a2      	ldr	r2, [r4, #8]
10049200:	9002      	str	r0, [sp, #8]
10049202:	9201      	str	r2, [sp, #4]
10049204:	9100      	str	r1, [sp, #0]
10049206:	4668      	mov	r0, sp
10049208:	8a80      	ldrh	r0, [r0, #20]
1004920a:	463b      	mov	r3, r7
1004920c:	1c40      	adds	r0, r0, #1
1004920e:	b282      	uxth	r2, r0
10049210:	4629      	mov	r1, r5
10049212:	4620      	mov	r0, r4
10049214:	f00b fd9e 	bl	10054d54 <Att_Send_Find_By_Typ_Val_Req_Pdu>
10049218:	e021      	b.n	1004925e <Gatt_Super_Handler+0x2d2>
1004921a:	2002      	movs	r0, #2
1004921c:	e7ef      	b.n	100491fe <Gatt_Super_Handler+0x272>
1004921e:	0771      	lsls	r1, r6, #29
10049220:	d501      	bpl.n	10049226 <Gatt_Super_Handler+0x29a>
10049222:	4a23      	ldr	r2, [pc, #140]	; (100492b0 <Gatt_Super_Handler+0x324>)
10049224:	e004      	b.n	10049230 <Gatt_Super_Handler+0x2a4>
10049226:	9903      	ldr	r1, [sp, #12]
10049228:	0f89      	lsrs	r1, r1, #30
1004922a:	d00d      	beq.n	10049248 <Gatt_Super_Handler+0x2bc>
1004922c:	4a20      	ldr	r2, [pc, #128]	; (100492b0 <Gatt_Super_Handler+0x324>)
1004922e:	1c52      	adds	r2, r2, #1
10049230:	4669      	mov	r1, sp
10049232:	800a      	strh	r2, [r1, #0]
10049234:	9004      	str	r0, [sp, #16]
10049236:	8a88      	ldrh	r0, [r1, #20]
10049238:	89a3      	ldrh	r3, [r4, #12]
1004923a:	1c40      	adds	r0, r0, #1
1004923c:	b282      	uxth	r2, r0
1004923e:	4629      	mov	r1, r5
10049240:	4620      	mov	r0, r4
10049242:	f00b fe8a 	bl	10054f5a <Att_Send_Read_By_Typ_Req_Pdu>
10049246:	e00a      	b.n	1004925e <Gatt_Super_Handler+0x2d2>
10049248:	06b0      	lsls	r0, r6, #26
1004924a:	d50a      	bpl.n	10049262 <Gatt_Super_Handler+0x2d6>
1004924c:	4668      	mov	r0, sp
1004924e:	8a80      	ldrh	r0, [r0, #20]
10049250:	89a3      	ldrh	r3, [r4, #12]
10049252:	1c40      	adds	r0, r0, #1
10049254:	b282      	uxth	r2, r0
10049256:	4629      	mov	r1, r5
10049258:	4620      	mov	r0, r4
1004925a:	f00b fdbe 	bl	10054dda <Att_Send_Find_Info_Req_Pdu>
1004925e:	2864      	cmp	r0, #100	; 0x64
10049260:	d008      	beq.n	10049274 <Gatt_Super_Handler+0x2e8>
10049262:	4628      	mov	r0, r5
10049264:	f001 f89a 	bl	1004a39c <GATT_Send_Packet>
10049268:	8822      	ldrh	r2, [r4, #0]
1004926a:	4630      	mov	r0, r6
1004926c:	9907      	ldr	r1, [sp, #28]
1004926e:	f000 fe53 	bl	10049f18 <send_gatt_event>
10049272:	e010      	b.n	10049296 <Gatt_Super_Handler+0x30a>
10049274:	2100      	movs	r1, #0
10049276:	4628      	mov	r0, r5
10049278:	f00b fc34 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004927c:	e7b7      	b.n	100491ee <Gatt_Super_Handler+0x262>
1004927e:	8822      	ldrh	r2, [r4, #0]
10049280:	4630      	mov	r0, r6
10049282:	9907      	ldr	r1, [sp, #28]
10049284:	f000 fe48 	bl	10049f18 <send_gatt_event>
10049288:	e700      	b.n	1004908c <Gatt_Super_Handler+0x100>
1004928a:	4668      	mov	r0, sp
1004928c:	7e02      	ldrb	r2, [r0, #24]
1004928e:	8821      	ldrh	r1, [r4, #0]
10049290:	2002      	movs	r0, #2
10049292:	f000 fce7 	bl	10049c64 <aci_gatt_proc_complete_event_push>
10049296:	2101      	movs	r1, #1
10049298:	69e0      	ldr	r0, [r4, #28]
1004929a:	f00b fc23 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004929e:	2000      	movs	r0, #0
100492a0:	61e0      	str	r0, [r4, #28]
100492a2:	e6a8      	b.n	10048ff6 <Gatt_Super_Handler+0x6a>
100492a4:	ffffc000 	.word	0xffffc000
100492a8:	1006006c 	.word	0x1006006c
100492ac:	0000ffff 	.word	0x0000ffff
100492b0:	00002802 	.word	0x00002802

100492b4 <Gatt_Super_Handler_Task7>:
100492b4:	b5f0      	push	{r4, r5, r6, r7, lr}
100492b6:	b08b      	sub	sp, #44	; 0x2c
100492b8:	460d      	mov	r5, r1
100492ba:	4604      	mov	r4, r0
100492bc:	2000      	movs	r0, #0
100492be:	4669      	mov	r1, sp
100492c0:	7108      	strb	r0, [r1, #4]
100492c2:	9004      	str	r0, [sp, #16]
100492c4:	69e6      	ldr	r6, [r4, #28]
100492c6:	2e00      	cmp	r6, #0
100492c8:	d016      	beq.n	100492f8 <Gatt_Super_Handler_Task7+0x44>
100492ca:	06a8      	lsls	r0, r5, #26
100492cc:	0f80      	lsrs	r0, r0, #30
100492ce:	d003      	beq.n	100492d8 <Gatt_Super_Handler_Task7+0x24>
100492d0:	8820      	ldrh	r0, [r4, #0]
100492d2:	f7fe fe53 	bl	10047f7c <GAP_Started_Gatt_Proc>
100492d6:	9004      	str	r0, [sp, #16]
100492d8:	ab01      	add	r3, sp, #4
100492da:	4631      	mov	r1, r6
100492dc:	4620      	mov	r0, r4
100492de:	9a04      	ldr	r2, [sp, #16]
100492e0:	f7ff f94d 	bl	1004857e <Gatt_Check_Not_Error_Resp>
100492e4:	2841      	cmp	r0, #65	; 0x41
100492e6:	d065      	beq.n	100493b4 <Gatt_Super_Handler_Task7+0x100>
100492e8:	07e8      	lsls	r0, r5, #31
100492ea:	d008      	beq.n	100492fe <Gatt_Super_Handler_Task7+0x4a>
100492ec:	8821      	ldrh	r1, [r4, #0]
100492ee:	4632      	mov	r2, r6
100492f0:	2002      	movs	r0, #2
100492f2:	f000 fbff 	bl	10049af4 <aci_att_read_resp_event_push>
100492f6:	e05d      	b.n	100493b4 <Gatt_Super_Handler_Task7+0x100>
100492f8:	2041      	movs	r0, #65	; 0x41
100492fa:	b00b      	add	sp, #44	; 0x2c
100492fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
100492fe:	0768      	lsls	r0, r5, #29
10049300:	d505      	bpl.n	1004930e <Gatt_Super_Handler_Task7+0x5a>
10049302:	8821      	ldrh	r1, [r4, #0]
10049304:	4632      	mov	r2, r6
10049306:	2002      	movs	r0, #2
10049308:	f000 fbba 	bl	10049a80 <aci_att_read_multiple_resp_event_push>
1004930c:	e052      	b.n	100493b4 <Gatt_Super_Handler_Task7+0x100>
1004930e:	07a8      	lsls	r0, r5, #30
10049310:	d539      	bpl.n	10049386 <Gatt_Super_Handler_Task7+0xd2>
10049312:	88f0      	ldrh	r0, [r6, #6]
10049314:	8861      	ldrh	r1, [r4, #2]
10049316:	4281      	cmp	r1, r0
10049318:	d905      	bls.n	10049326 <Gatt_Super_Handler_Task7+0x72>
1004931a:	8821      	ldrh	r1, [r4, #0]
1004931c:	4632      	mov	r2, r6
1004931e:	2002      	movs	r0, #2
10049320:	f000 faf8 	bl	10049914 <aci_att_read_blob_resp_event_push>
10049324:	e046      	b.n	100493b4 <Gatt_Super_Handler_Task7+0x100>
10049326:	6920      	ldr	r0, [r4, #16]
10049328:	0641      	lsls	r1, r0, #25
1004932a:	d504      	bpl.n	10049336 <Gatt_Super_Handler_Task7+0x82>
1004932c:	2101      	movs	r1, #1
1004932e:	0289      	lsls	r1, r1, #10
10049330:	4308      	orrs	r0, r1
10049332:	6120      	str	r0, [r4, #16]
10049334:	e080      	b.n	10049438 <Gatt_Super_Handler_Task7+0x184>
10049336:	8821      	ldrh	r1, [r4, #0]
10049338:	2220      	movs	r2, #32
1004933a:	2000      	movs	r0, #0
1004933c:	f00b fb76 	bl	10054a2c <PM_Get_Pckt>
10049340:	0005      	movs	r5, r0
10049342:	d01e      	beq.n	10049382 <Gatt_Super_Handler_Task7+0xce>
10049344:	8821      	ldrh	r1, [r4, #0]
10049346:	4632      	mov	r2, r6
10049348:	2002      	movs	r0, #2
1004934a:	f000 fae3 	bl	10049914 <aci_att_read_blob_resp_event_push>
1004934e:	68a0      	ldr	r0, [r4, #8]
10049350:	1c80      	adds	r0, r0, #2
10049352:	f000 fcb7 	bl	10049cc4 <le2ByteToInt16>
10049356:	8861      	ldrh	r1, [r4, #2]
10049358:	1e40      	subs	r0, r0, #1
1004935a:	1840      	adds	r0, r0, r1
1004935c:	b286      	uxth	r6, r0
1004935e:	68a0      	ldr	r0, [r4, #8]
10049360:	f000 fcb0 	bl	10049cc4 <le2ByteToInt16>
10049364:	4602      	mov	r2, r0
10049366:	4633      	mov	r3, r6
10049368:	4629      	mov	r1, r5
1004936a:	4620      	mov	r0, r4
1004936c:	f00b fd96 	bl	10054e9c <Att_Send_Read_Blob_Req_Pdu>
10049370:	4628      	mov	r0, r5
10049372:	f001 f813 	bl	1004a39c <GATT_Send_Packet>
10049376:	68a0      	ldr	r0, [r4, #8]
10049378:	4631      	mov	r1, r6
1004937a:	1c80      	adds	r0, r0, #2
1004937c:	f000 fc9e 	bl	10049cbc <int16ToLe2Byte>
10049380:	e054      	b.n	1004942c <Gatt_Super_Handler_Task7+0x178>
10049382:	2045      	movs	r0, #69	; 0x45
10049384:	e7b9      	b.n	100492fa <Gatt_Super_Handler_Task7+0x46>
10049386:	06e8      	lsls	r0, r5, #27
10049388:	d514      	bpl.n	100493b4 <Gatt_Super_Handler_Task7+0x100>
1004938a:	88f0      	ldrh	r0, [r6, #6]
1004938c:	2741      	movs	r7, #65	; 0x41
1004938e:	2802      	cmp	r0, #2
10049390:	d90e      	bls.n	100493b0 <Gatt_Super_Handler_Task7+0xfc>
10049392:	68b1      	ldr	r1, [r6, #8]
10049394:	1e80      	subs	r0, r0, #2
10049396:	7b4d      	ldrb	r5, [r1, #13]
10049398:	b280      	uxth	r0, r0
1004939a:	4285      	cmp	r5, r0
1004939c:	d901      	bls.n	100493a2 <Gatt_Super_Handler_Task7+0xee>
1004939e:	2001      	movs	r0, #1
100493a0:	e016      	b.n	100493d0 <Gatt_Super_Handler_Task7+0x11c>
100493a2:	2d00      	cmp	r5, #0
100493a4:	d004      	beq.n	100493b0 <Gatt_Super_Handler_Task7+0xfc>
100493a6:	4629      	mov	r1, r5
100493a8:	f7f6 ff5e 	bl	10040268 <__aeabi_uidivmod>
100493ac:	2900      	cmp	r1, #0
100493ae:	d00f      	beq.n	100493d0 <Gatt_Super_Handler_Task7+0x11c>
100493b0:	4668      	mov	r0, sp
100493b2:	7107      	strb	r7, [r0, #4]
100493b4:	2001      	movs	r0, #1
100493b6:	6921      	ldr	r1, [r4, #16]
100493b8:	0340      	lsls	r0, r0, #13
100493ba:	4381      	bics	r1, r0
100493bc:	6121      	str	r1, [r4, #16]
100493be:	9804      	ldr	r0, [sp, #16]
100493c0:	2800      	cmp	r0, #0
100493c2:	d02d      	beq.n	10049420 <Gatt_Super_Handler_Task7+0x16c>
100493c4:	aa01      	add	r2, sp, #4
100493c6:	2101      	movs	r1, #1
100493c8:	2031      	movs	r0, #49	; 0x31
100493ca:	f7fe fb4f 	bl	10047a6c <GAP_Internal_Evt_Handler>
100493ce:	e02d      	b.n	1004942c <Gatt_Super_Handler_Task7+0x178>
100493d0:	9002      	str	r0, [sp, #8]
100493d2:	2002      	movs	r0, #2
100493d4:	2700      	movs	r7, #0
100493d6:	9003      	str	r0, [sp, #12]
100493d8:	e01e      	b.n	10049418 <Gatt_Super_Handler_Task7+0x164>
100493da:	9804      	ldr	r0, [sp, #16]
100493dc:	2800      	cmp	r0, #0
100493de:	d00d      	beq.n	100493fc <Gatt_Super_Handler_Task7+0x148>
100493e0:	9803      	ldr	r0, [sp, #12]
100493e2:	ab05      	add	r3, sp, #20
100493e4:	1d00      	adds	r0, r0, #4
100493e6:	b281      	uxth	r1, r0
100493e8:	462a      	mov	r2, r5
100493ea:	4630      	mov	r0, r6
100493ec:	f00b fade 	bl	100549ac <PM_Copy_Pckt_Data>
100493f0:	aa05      	add	r2, sp, #20
100493f2:	4629      	mov	r1, r5
100493f4:	2033      	movs	r0, #51	; 0x33
100493f6:	f7fe fb39 	bl	10047a6c <GAP_Internal_Evt_Handler>
100493fa:	e007      	b.n	1004940c <Gatt_Super_Handler_Task7+0x158>
100493fc:	9803      	ldr	r0, [sp, #12]
100493fe:	9600      	str	r6, [sp, #0]
10049400:	b2c2      	uxtb	r2, r0
10049402:	462b      	mov	r3, r5
10049404:	8821      	ldrh	r1, [r4, #0]
10049406:	2002      	movs	r0, #2
10049408:	f000 fbae 	bl	10049b68 <aci_gatt_disc_read_char_by_uuid_resp_event_push>
1004940c:	9803      	ldr	r0, [sp, #12]
1004940e:	1940      	adds	r0, r0, r5
10049410:	b280      	uxth	r0, r0
10049412:	1c7f      	adds	r7, r7, #1
10049414:	b2bf      	uxth	r7, r7
10049416:	9003      	str	r0, [sp, #12]
10049418:	9802      	ldr	r0, [sp, #8]
1004941a:	4287      	cmp	r7, r0
1004941c:	d3dd      	bcc.n	100493da <Gatt_Super_Handler_Task7+0x126>
1004941e:	e7c9      	b.n	100493b4 <Gatt_Super_Handler_Task7+0x100>
10049420:	4668      	mov	r0, sp
10049422:	7902      	ldrb	r2, [r0, #4]
10049424:	8821      	ldrh	r1, [r4, #0]
10049426:	2002      	movs	r0, #2
10049428:	f000 fc1c 	bl	10049c64 <aci_gatt_proc_complete_event_push>
1004942c:	2101      	movs	r1, #1
1004942e:	69e0      	ldr	r0, [r4, #28]
10049430:	f00b fb58 	bl	10054ae4 <PM_Release_Acl_Pckt>
10049434:	2000      	movs	r0, #0
10049436:	61e0      	str	r0, [r4, #28]
10049438:	2000      	movs	r0, #0
1004943a:	e75e      	b.n	100492fa <Gatt_Super_Handler_Task7+0x46>

1004943c <Gatt_Write>:
1004943c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004943e:	b081      	sub	sp, #4
10049440:	461f      	mov	r7, r3
10049442:	4606      	mov	r6, r0
10049444:	2546      	movs	r5, #70	; 0x46
10049446:	f7ff f85f 	bl	10048508 <Check_and_find_gatt_client>
1004944a:	0004      	movs	r4, r0
1004944c:	d020      	beq.n	10049490 <Gatt_Write+0x54>
1004944e:	2220      	movs	r2, #32
10049450:	4631      	mov	r1, r6
10049452:	2000      	movs	r0, #0
10049454:	f00b faea 	bl	10054a2c <PM_Get_Pckt>
10049458:	0006      	movs	r6, r0
1004945a:	d018      	beq.n	1004948e <Gatt_Write+0x52>
1004945c:	4601      	mov	r1, r0
1004945e:	9700      	str	r7, [sp, #0]
10049460:	4620      	mov	r0, r4
10049462:	9b03      	ldr	r3, [sp, #12]
10049464:	9a02      	ldr	r2, [sp, #8]
10049466:	f00b fe35 	bl	100550d4 <Att_Send_Write_Req_Pdu>
1004946a:	0005      	movs	r5, r0
1004946c:	d004      	beq.n	10049478 <Gatt_Write+0x3c>
1004946e:	2100      	movs	r1, #0
10049470:	4630      	mov	r0, r6
10049472:	f00b fb37 	bl	10054ae4 <PM_Release_Acl_Pckt>
10049476:	e00b      	b.n	10049490 <Gatt_Write+0x54>
10049478:	2101      	movs	r1, #1
1004947a:	6920      	ldr	r0, [r4, #16]
1004947c:	0349      	lsls	r1, r1, #13
1004947e:	4308      	orrs	r0, r1
10049480:	6120      	str	r0, [r4, #16]
10049482:	4805      	ldr	r0, [pc, #20]	; (10049498 <Gatt_Write+0x5c>)
10049484:	61a0      	str	r0, [r4, #24]
10049486:	4630      	mov	r0, r6
10049488:	f000 ff88 	bl	1004a39c <GATT_Send_Packet>
1004948c:	e000      	b.n	10049490 <Gatt_Write+0x54>
1004948e:	2564      	movs	r5, #100	; 0x64
10049490:	4628      	mov	r0, r5
10049492:	b005      	add	sp, #20
10049494:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049496:	0000      	.short	0x0000
10049498:	1004949d 	.word	0x1004949d

1004949c <Gatt_Write_Cb>:
1004949c:	b510      	push	{r4, lr}
1004949e:	2160      	movs	r1, #96	; 0x60
100494a0:	f7ff ff08 	bl	100492b4 <Gatt_Super_Handler_Task7>
100494a4:	bd10      	pop	{r4, pc}

100494a6 <Gatt_Write_Char_Reliable_Cb>:
100494a6:	b510      	push	{r4, lr}
100494a8:	2101      	movs	r1, #1
100494aa:	f000 fc11 	bl	10049cd0 <long_write_procedure>
100494ae:	bd10      	pop	{r4, pc}

100494b0 <Gatt_Write_Charac_Desc>:
100494b0:	b510      	push	{r4, lr}
100494b2:	461c      	mov	r4, r3
100494b4:	4613      	mov	r3, r2
100494b6:	4622      	mov	r2, r4
100494b8:	f7ff ffc0 	bl	1004943c <Gatt_Write>
100494bc:	bd10      	pop	{r4, pc}
	...

100494c0 <Gatt_Write_Charac_Reliable>:
100494c0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100494c2:	b083      	sub	sp, #12
100494c4:	8810      	ldrh	r0, [r2, #0]
100494c6:	9002      	str	r0, [sp, #8]
100494c8:	4831      	ldr	r0, [pc, #196]	; (10049590 <Gatt_Write_Charac_Reliable+0xd0>)
100494ca:	2546      	movs	r5, #70	; 0x46
100494cc:	6801      	ldr	r1, [r0, #0]
100494ce:	2025      	movs	r0, #37	; 0x25
100494d0:	0180      	lsls	r0, r0, #6
100494d2:	1808      	adds	r0, r1, r0
100494d4:	8b00      	ldrh	r0, [r0, #24]
100494d6:	8856      	ldrh	r6, [r2, #2]
100494d8:	2800      	cmp	r0, #0
100494da:	d156      	bne.n	1004958a <Gatt_Write_Charac_Reliable+0xca>
100494dc:	9803      	ldr	r0, [sp, #12]
100494de:	f7ff f813 	bl	10048508 <Check_and_find_gatt_client>
100494e2:	0004      	movs	r4, r0
100494e4:	d051      	beq.n	1004958a <Gatt_Write_Charac_Reliable+0xca>
100494e6:	2220      	movs	r2, #32
100494e8:	2000      	movs	r0, #0
100494ea:	9903      	ldr	r1, [sp, #12]
100494ec:	f00b fa9e 	bl	10054a2c <PM_Get_Pckt>
100494f0:	0007      	movs	r7, r0
100494f2:	d049      	beq.n	10049588 <Gatt_Write_Charac_Reliable+0xc8>
100494f4:	4826      	ldr	r0, [pc, #152]	; (10049590 <Gatt_Write_Charac_Reliable+0xd0>)
100494f6:	2225      	movs	r2, #37	; 0x25
100494f8:	6800      	ldr	r0, [r0, #0]
100494fa:	0192      	lsls	r2, r2, #6
100494fc:	9903      	ldr	r1, [sp, #12]
100494fe:	1882      	adds	r2, r0, r2
10049500:	8311      	strh	r1, [r2, #24]
10049502:	2109      	movs	r1, #9
10049504:	0209      	lsls	r1, r1, #8
10049506:	1840      	adds	r0, r0, r1
10049508:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
1004950a:	4632      	mov	r2, r6
1004950c:	9906      	ldr	r1, [sp, #24]
1004950e:	f7f7 f938 	bl	10040782 <Osal_MemCpy>
10049512:	8860      	ldrh	r0, [r4, #2]
10049514:	1f40      	subs	r0, r0, #5
10049516:	b280      	uxth	r0, r0
10049518:	42b0      	cmp	r0, r6
1004951a:	d300      	bcc.n	1004951e <Gatt_Write_Charac_Reliable+0x5e>
1004951c:	4630      	mov	r0, r6
1004951e:	9906      	ldr	r1, [sp, #24]
10049520:	9100      	str	r1, [sp, #0]
10049522:	9001      	str	r0, [sp, #4]
10049524:	4639      	mov	r1, r7
10049526:	4620      	mov	r0, r4
10049528:	9b02      	ldr	r3, [sp, #8]
1004952a:	9a04      	ldr	r2, [sp, #16]
1004952c:	f00b fc7d 	bl	10054e2a <Att_Send_Prp_Write_Req_Pdu>
10049530:	0005      	movs	r5, r0
10049532:	d004      	beq.n	1004953e <Gatt_Write_Charac_Reliable+0x7e>
10049534:	2100      	movs	r1, #0
10049536:	4638      	mov	r0, r7
10049538:	f00b fad4 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004953c:	e025      	b.n	1004958a <Gatt_Write_Charac_Reliable+0xca>
1004953e:	4814      	ldr	r0, [pc, #80]	; (10049590 <Gatt_Write_Charac_Reliable+0xd0>)
10049540:	6801      	ldr	r1, [r0, #0]
10049542:	2009      	movs	r0, #9
10049544:	0200      	lsls	r0, r0, #8
10049546:	1808      	adds	r0, r1, r0
10049548:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
1004954a:	6160      	str	r0, [r4, #20]
1004954c:	68a0      	ldr	r0, [r4, #8]
1004954e:	9904      	ldr	r1, [sp, #16]
10049550:	f000 fbb4 	bl	10049cbc <int16ToLe2Byte>
10049554:	68a0      	ldr	r0, [r4, #8]
10049556:	9902      	ldr	r1, [sp, #8]
10049558:	1c80      	adds	r0, r0, #2
1004955a:	f000 fbaf 	bl	10049cbc <int16ToLe2Byte>
1004955e:	68a0      	ldr	r0, [r4, #8]
10049560:	4631      	mov	r1, r6
10049562:	1d00      	adds	r0, r0, #4
10049564:	f000 fbaa 	bl	10049cbc <int16ToLe2Byte>
10049568:	68a0      	ldr	r0, [r4, #8]
1004956a:	2100      	movs	r1, #0
1004956c:	1d80      	adds	r0, r0, #6
1004956e:	f000 fba5 	bl	10049cbc <int16ToLe2Byte>
10049572:	2001      	movs	r0, #1
10049574:	6921      	ldr	r1, [r4, #16]
10049576:	0340      	lsls	r0, r0, #13
10049578:	4301      	orrs	r1, r0
1004957a:	4806      	ldr	r0, [pc, #24]	; (10049594 <Gatt_Write_Charac_Reliable+0xd4>)
1004957c:	6121      	str	r1, [r4, #16]
1004957e:	61a0      	str	r0, [r4, #24]
10049580:	4638      	mov	r0, r7
10049582:	f000 ff0b 	bl	1004a39c <GATT_Send_Packet>
10049586:	e000      	b.n	1004958a <Gatt_Write_Charac_Reliable+0xca>
10049588:	2564      	movs	r5, #100	; 0x64
1004958a:	4628      	mov	r0, r5
1004958c:	b007      	add	sp, #28
1004958e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049590:	20000d64 	.word	0x20000d64
10049594:	100494a7 	.word	0x100494a7

10049598 <Gatt_Write_Charac_Value>:
10049598:	b510      	push	{r4, lr}
1004959a:	461c      	mov	r4, r3
1004959c:	4613      	mov	r3, r2
1004959e:	4622      	mov	r2, r4
100495a0:	f7ff ff4c 	bl	1004943c <Gatt_Write>
100495a4:	bd10      	pop	{r4, pc}
	...

100495a8 <Gatt_Write_Long>:
100495a8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100495aa:	4832      	ldr	r0, [pc, #200]	; (10049674 <Gatt_Write_Long+0xcc>)
100495ac:	b083      	sub	sp, #12
100495ae:	6801      	ldr	r1, [r0, #0]
100495b0:	2025      	movs	r0, #37	; 0x25
100495b2:	0180      	lsls	r0, r0, #6
100495b4:	1808      	adds	r0, r1, r0
100495b6:	8b00      	ldrh	r0, [r0, #24]
100495b8:	2546      	movs	r5, #70	; 0x46
100495ba:	9f0c      	ldr	r7, [sp, #48]	; 0x30
100495bc:	2800      	cmp	r0, #0
100495be:	d156      	bne.n	1004966e <Gatt_Write_Long+0xc6>
100495c0:	9803      	ldr	r0, [sp, #12]
100495c2:	f7fe ffa1 	bl	10048508 <Check_and_find_gatt_client>
100495c6:	0004      	movs	r4, r0
100495c8:	d051      	beq.n	1004966e <Gatt_Write_Long+0xc6>
100495ca:	2220      	movs	r2, #32
100495cc:	2000      	movs	r0, #0
100495ce:	9903      	ldr	r1, [sp, #12]
100495d0:	f00b fa2c 	bl	10054a2c <PM_Get_Pckt>
100495d4:	0006      	movs	r6, r0
100495d6:	d049      	beq.n	1004966c <Gatt_Write_Long+0xc4>
100495d8:	4826      	ldr	r0, [pc, #152]	; (10049674 <Gatt_Write_Long+0xcc>)
100495da:	2225      	movs	r2, #37	; 0x25
100495dc:	6800      	ldr	r0, [r0, #0]
100495de:	0192      	lsls	r2, r2, #6
100495e0:	9903      	ldr	r1, [sp, #12]
100495e2:	1882      	adds	r2, r0, r2
100495e4:	8311      	strh	r1, [r2, #24]
100495e6:	2109      	movs	r1, #9
100495e8:	0209      	lsls	r1, r1, #8
100495ea:	1840      	adds	r0, r0, r1
100495ec:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
100495ee:	463a      	mov	r2, r7
100495f0:	9906      	ldr	r1, [sp, #24]
100495f2:	f7f7 f8c6 	bl	10040782 <Osal_MemCpy>
100495f6:	8860      	ldrh	r0, [r4, #2]
100495f8:	1f40      	subs	r0, r0, #5
100495fa:	b280      	uxth	r0, r0
100495fc:	42b8      	cmp	r0, r7
100495fe:	d300      	bcc.n	10049602 <Gatt_Write_Long+0x5a>
10049600:	4638      	mov	r0, r7
10049602:	9906      	ldr	r1, [sp, #24]
10049604:	9100      	str	r1, [sp, #0]
10049606:	9001      	str	r0, [sp, #4]
10049608:	4631      	mov	r1, r6
1004960a:	4620      	mov	r0, r4
1004960c:	9b05      	ldr	r3, [sp, #20]
1004960e:	9a04      	ldr	r2, [sp, #16]
10049610:	f00b fc0b 	bl	10054e2a <Att_Send_Prp_Write_Req_Pdu>
10049614:	0005      	movs	r5, r0
10049616:	d004      	beq.n	10049622 <Gatt_Write_Long+0x7a>
10049618:	2100      	movs	r1, #0
1004961a:	4630      	mov	r0, r6
1004961c:	f00b fa62 	bl	10054ae4 <PM_Release_Acl_Pckt>
10049620:	e025      	b.n	1004966e <Gatt_Write_Long+0xc6>
10049622:	68a0      	ldr	r0, [r4, #8]
10049624:	9904      	ldr	r1, [sp, #16]
10049626:	f000 fb49 	bl	10049cbc <int16ToLe2Byte>
1004962a:	68a0      	ldr	r0, [r4, #8]
1004962c:	9905      	ldr	r1, [sp, #20]
1004962e:	1c80      	adds	r0, r0, #2
10049630:	f000 fb44 	bl	10049cbc <int16ToLe2Byte>
10049634:	68a0      	ldr	r0, [r4, #8]
10049636:	4639      	mov	r1, r7
10049638:	1d00      	adds	r0, r0, #4
1004963a:	f000 fb3f 	bl	10049cbc <int16ToLe2Byte>
1004963e:	68a0      	ldr	r0, [r4, #8]
10049640:	2100      	movs	r1, #0
10049642:	1d80      	adds	r0, r0, #6
10049644:	f000 fb3a 	bl	10049cbc <int16ToLe2Byte>
10049648:	480a      	ldr	r0, [pc, #40]	; (10049674 <Gatt_Write_Long+0xcc>)
1004964a:	6801      	ldr	r1, [r0, #0]
1004964c:	2009      	movs	r0, #9
1004964e:	0200      	lsls	r0, r0, #8
10049650:	1808      	adds	r0, r1, r0
10049652:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
10049654:	6160      	str	r0, [r4, #20]
10049656:	2101      	movs	r1, #1
10049658:	6920      	ldr	r0, [r4, #16]
1004965a:	0349      	lsls	r1, r1, #13
1004965c:	4308      	orrs	r0, r1
1004965e:	6120      	str	r0, [r4, #16]
10049660:	4805      	ldr	r0, [pc, #20]	; (10049678 <Gatt_Write_Long+0xd0>)
10049662:	61a0      	str	r0, [r4, #24]
10049664:	4630      	mov	r0, r6
10049666:	f000 fe99 	bl	1004a39c <GATT_Send_Packet>
1004966a:	e000      	b.n	1004966e <Gatt_Write_Long+0xc6>
1004966c:	2564      	movs	r5, #100	; 0x64
1004966e:	4628      	mov	r0, r5
10049670:	b007      	add	sp, #28
10049672:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049674:	20000d64 	.word	0x20000d64
10049678:	1004967d 	.word	0x1004967d

1004967c <Gatt_Write_Long_Cb>:
1004967c:	b510      	push	{r4, lr}
1004967e:	2100      	movs	r1, #0
10049680:	f000 fb26 	bl	10049cd0 <long_write_procedure>
10049684:	bd10      	pop	{r4, pc}

10049686 <Gatt_Write_Long_Charac_Desc>:
10049686:	b538      	push	{r3, r4, r5, lr}
10049688:	8814      	ldrh	r4, [r2, #0]
1004968a:	8852      	ldrh	r2, [r2, #2]
1004968c:	9200      	str	r2, [sp, #0]
1004968e:	4622      	mov	r2, r4
10049690:	f7ff ff8a 	bl	100495a8 <Gatt_Write_Long>
10049694:	bd38      	pop	{r3, r4, r5, pc}

10049696 <Gatt_Write_Long_Charac_Values>:
10049696:	b538      	push	{r3, r4, r5, lr}
10049698:	8814      	ldrh	r4, [r2, #0]
1004969a:	8852      	ldrh	r2, [r2, #2]
1004969c:	9200      	str	r2, [sp, #0]
1004969e:	4622      	mov	r2, r4
100496a0:	f7ff ff82 	bl	100495a8 <Gatt_Write_Long>
100496a4:	bd38      	pop	{r3, r4, r5, pc}
	...

100496a8 <Gatt_Write_Without_Resp>:
100496a8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100496aa:	b081      	sub	sp, #4
100496ac:	4615      	mov	r5, r2
100496ae:	4606      	mov	r6, r0
100496b0:	2446      	movs	r4, #70	; 0x46
100496b2:	f7fe ff35 	bl	10048520 <Find_Gatt_Client>
100496b6:	0007      	movs	r7, r0
100496b8:	d025      	beq.n	10049706 <Gatt_Write_Without_Resp+0x5e>
100496ba:	9802      	ldr	r0, [sp, #8]
100496bc:	2800      	cmp	r0, #0
100496be:	d003      	beq.n	100496c8 <Gatt_Write_Without_Resp+0x20>
100496c0:	8878      	ldrh	r0, [r7, #2]
100496c2:	1ec0      	subs	r0, r0, #3
100496c4:	42a8      	cmp	r0, r5
100496c6:	d201      	bcs.n	100496cc <Gatt_Write_Without_Resp+0x24>
100496c8:	2442      	movs	r4, #66	; 0x42
100496ca:	e01c      	b.n	10049706 <Gatt_Write_Without_Resp+0x5e>
100496cc:	4811      	ldr	r0, [pc, #68]	; (10049714 <Gatt_Write_Without_Resp+0x6c>)
100496ce:	213b      	movs	r1, #59	; 0x3b
100496d0:	6800      	ldr	r0, [r0, #0]
100496d2:	0149      	lsls	r1, r1, #5
100496d4:	1840      	adds	r0, r0, r1
100496d6:	7d00      	ldrb	r0, [r0, #20]
100496d8:	0600      	lsls	r0, r0, #24
100496da:	d502      	bpl.n	100496e2 <Gatt_Write_Without_Resp+0x3a>
100496dc:	2064      	movs	r0, #100	; 0x64
100496de:	b005      	add	sp, #20
100496e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100496e2:	1ce8      	adds	r0, r5, #3
100496e4:	b281      	uxth	r1, r0
100496e6:	4630      	mov	r0, r6
100496e8:	f000 f816 	bl	10049718 <PM_Get_Host_Pckt>
100496ec:	0006      	movs	r6, r0
100496ee:	d00c      	beq.n	1004970a <Gatt_Write_Without_Resp+0x62>
100496f0:	4601      	mov	r1, r0
100496f2:	9500      	str	r5, [sp, #0]
100496f4:	4638      	mov	r0, r7
100496f6:	9b04      	ldr	r3, [sp, #16]
100496f8:	9a02      	ldr	r2, [sp, #8]
100496fa:	f00b fcd2 	bl	100550a2 <Att_Send_Write_Cmd_Pdu>
100496fe:	4604      	mov	r4, r0
10049700:	4630      	mov	r0, r6
10049702:	f000 fe4b 	bl	1004a39c <GATT_Send_Packet>
10049706:	4620      	mov	r0, r4
10049708:	e7e9      	b.n	100496de <Gatt_Write_Without_Resp+0x36>
1004970a:	2464      	movs	r4, #100	; 0x64
1004970c:	2080      	movs	r0, #128	; 0x80
1004970e:	f7fe ff25 	bl	1004855c <GATT_Server_Set_Flag>
10049712:	e7f8      	b.n	10049706 <Gatt_Write_Without_Resp+0x5e>
10049714:	20000d64 	.word	0x20000d64

10049718 <PM_Get_Host_Pckt>:
10049718:	1d09      	adds	r1, r1, #4
1004971a:	b28a      	uxth	r2, r1
1004971c:	b510      	push	{r4, lr}
1004971e:	4601      	mov	r1, r0
10049720:	2000      	movs	r0, #0
10049722:	f00b f983 	bl	10054a2c <PM_Get_Pckt>
10049726:	bd10      	pop	{r4, pc}

10049728 <aci_att_exec_write_resp_event_push>:
10049728:	b570      	push	{r4, r5, r6, lr}
1004972a:	460d      	mov	r5, r1
1004972c:	2301      	movs	r3, #1
1004972e:	4604      	mov	r4, r0
10049730:	06c1      	lsls	r1, r0, #27
10049732:	4811      	ldr	r0, [pc, #68]	; (10049778 <aci_att_exec_write_resp_event_push+0x50>)
10049734:	6800      	ldr	r0, [r0, #0]
10049736:	d503      	bpl.n	10049740 <aci_att_exec_write_resp_event_push+0x18>
10049738:	2231      	movs	r2, #49	; 0x31
1004973a:	21bf      	movs	r1, #191	; 0xbf
1004973c:	400c      	ands	r4, r1
1004973e:	e008      	b.n	10049752 <aci_att_exec_write_resp_event_push+0x2a>
10049740:	2137      	movs	r1, #55	; 0x37
10049742:	0149      	lsls	r1, r1, #5
10049744:	1841      	adds	r1, r0, r1
10049746:	7b49      	ldrb	r1, [r1, #13]
10049748:	06c9      	lsls	r1, r1, #27
1004974a:	d401      	bmi.n	10049750 <aci_att_exec_write_resp_event_push+0x28>
1004974c:	2000      	movs	r0, #0
1004974e:	bd70      	pop	{r4, r5, r6, pc}
10049750:	222e      	movs	r2, #46	; 0x2e
10049752:	0721      	lsls	r1, r4, #28
10049754:	0e89      	lsrs	r1, r1, #26
10049756:	1808      	adds	r0, r1, r0
10049758:	2101      	movs	r1, #1
1004975a:	02c9      	lsls	r1, r1, #11
1004975c:	1840      	adds	r0, r0, r1
1004975e:	6940      	ldr	r0, [r0, #20]
10049760:	4621      	mov	r1, r4
10049762:	f012 fbc3 	bl	1005beec <aci_event_fifo_push_header>
10049766:	0001      	movs	r1, r0
10049768:	d004      	beq.n	10049774 <aci_att_exec_write_resp_event_push+0x4c>
1004976a:	808d      	strh	r5, [r1, #4]
1004976c:	4620      	mov	r0, r4
1004976e:	f012 fba9 	bl	1005bec4 <aci_event_fifo_push>
10049772:	e7eb      	b.n	1004974c <aci_att_exec_write_resp_event_push+0x24>
10049774:	2007      	movs	r0, #7
10049776:	bd70      	pop	{r4, r5, r6, pc}
10049778:	20000d64 	.word	0x20000d64

1004977c <aci_att_find_by_type_value_resp_event_push>:
1004977c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004977e:	4606      	mov	r6, r0
10049780:	7990      	ldrb	r0, [r2, #6]
10049782:	2103      	movs	r1, #3
10049784:	1e40      	subs	r0, r0, #1
10049786:	b2c5      	uxtb	r5, r0
10049788:	1ce8      	adds	r0, r5, #3
1004978a:	4308      	orrs	r0, r1
1004978c:	1c40      	adds	r0, r0, #1
1004978e:	0883      	lsrs	r3, r0, #2
10049790:	4817      	ldr	r0, [pc, #92]	; (100497f0 <aci_att_find_by_type_value_resp_event_push+0x74>)
10049792:	4617      	mov	r7, r2
10049794:	6800      	ldr	r0, [r0, #0]
10049796:	06f1      	lsls	r1, r6, #27
10049798:	d503      	bpl.n	100497a2 <aci_att_find_by_type_value_resp_event_push+0x26>
1004979a:	2229      	movs	r2, #41	; 0x29
1004979c:	21bf      	movs	r1, #191	; 0xbf
1004979e:	400e      	ands	r6, r1
100497a0:	e008      	b.n	100497b4 <aci_att_find_by_type_value_resp_event_push+0x38>
100497a2:	2137      	movs	r1, #55	; 0x37
100497a4:	0149      	lsls	r1, r1, #5
100497a6:	1841      	adds	r1, r0, r1
100497a8:	7b09      	ldrb	r1, [r1, #12]
100497aa:	06c9      	lsls	r1, r1, #27
100497ac:	d401      	bmi.n	100497b2 <aci_att_find_by_type_value_resp_event_push+0x36>
100497ae:	2000      	movs	r0, #0
100497b0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100497b2:	2226      	movs	r2, #38	; 0x26
100497b4:	0731      	lsls	r1, r6, #28
100497b6:	0e89      	lsrs	r1, r1, #26
100497b8:	1808      	adds	r0, r1, r0
100497ba:	2101      	movs	r1, #1
100497bc:	02c9      	lsls	r1, r1, #11
100497be:	1840      	adds	r0, r0, r1
100497c0:	6940      	ldr	r0, [r0, #20]
100497c2:	4631      	mov	r1, r6
100497c4:	f012 fb92 	bl	1005beec <aci_event_fifo_push_header>
100497c8:	0004      	movs	r4, r0
100497ca:	d00f      	beq.n	100497ec <aci_att_find_by_type_value_resp_event_push+0x70>
100497cc:	9801      	ldr	r0, [sp, #4]
100497ce:	80a0      	strh	r0, [r4, #4]
100497d0:	08a8      	lsrs	r0, r5, #2
100497d2:	71a0      	strb	r0, [r4, #6]
100497d4:	4623      	mov	r3, r4
100497d6:	462a      	mov	r2, r5
100497d8:	2105      	movs	r1, #5
100497da:	4638      	mov	r0, r7
100497dc:	3308      	adds	r3, #8
100497de:	f00b f8e5 	bl	100549ac <PM_Copy_Pckt_Data>
100497e2:	4621      	mov	r1, r4
100497e4:	4630      	mov	r0, r6
100497e6:	f012 fb6d 	bl	1005bec4 <aci_event_fifo_push>
100497ea:	e7e0      	b.n	100497ae <aci_att_find_by_type_value_resp_event_push+0x32>
100497ec:	2007      	movs	r0, #7
100497ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100497f0:	20000d64 	.word	0x20000d64

100497f4 <aci_att_find_info_resp_event_push>:
100497f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100497f6:	4606      	mov	r6, r0
100497f8:	7990      	ldrb	r0, [r2, #6]
100497fa:	2103      	movs	r1, #3
100497fc:	1e80      	subs	r0, r0, #2
100497fe:	b2c5      	uxtb	r5, r0
10049800:	1ce8      	adds	r0, r5, #3
10049802:	4308      	orrs	r0, r1
10049804:	1c40      	adds	r0, r0, #1
10049806:	0883      	lsrs	r3, r0, #2
10049808:	4818      	ldr	r0, [pc, #96]	; (1004986c <aci_att_find_info_resp_event_push+0x78>)
1004980a:	4617      	mov	r7, r2
1004980c:	6800      	ldr	r0, [r0, #0]
1004980e:	06f1      	lsls	r1, r6, #27
10049810:	d503      	bpl.n	1004981a <aci_att_find_info_resp_event_push+0x26>
10049812:	2228      	movs	r2, #40	; 0x28
10049814:	21bf      	movs	r1, #191	; 0xbf
10049816:	400e      	ands	r6, r1
10049818:	e008      	b.n	1004982c <aci_att_find_info_resp_event_push+0x38>
1004981a:	2137      	movs	r1, #55	; 0x37
1004981c:	0149      	lsls	r1, r1, #5
1004981e:	1841      	adds	r1, r0, r1
10049820:	7b09      	ldrb	r1, [r1, #12]
10049822:	0709      	lsls	r1, r1, #28
10049824:	d401      	bmi.n	1004982a <aci_att_find_info_resp_event_push+0x36>
10049826:	2000      	movs	r0, #0
10049828:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004982a:	2225      	movs	r2, #37	; 0x25
1004982c:	0731      	lsls	r1, r6, #28
1004982e:	0e89      	lsrs	r1, r1, #26
10049830:	1808      	adds	r0, r1, r0
10049832:	2101      	movs	r1, #1
10049834:	02c9      	lsls	r1, r1, #11
10049836:	1840      	adds	r0, r0, r1
10049838:	6940      	ldr	r0, [r0, #20]
1004983a:	4631      	mov	r1, r6
1004983c:	f012 fb56 	bl	1005beec <aci_event_fifo_push_header>
10049840:	0004      	movs	r4, r0
10049842:	d011      	beq.n	10049868 <aci_att_find_info_resp_event_push+0x74>
10049844:	9801      	ldr	r0, [sp, #4]
10049846:	80a0      	strh	r0, [r4, #4]
10049848:	68b8      	ldr	r0, [r7, #8]
1004984a:	4623      	mov	r3, r4
1004984c:	7b40      	ldrb	r0, [r0, #13]
1004984e:	71a0      	strb	r0, [r4, #6]
10049850:	71e5      	strb	r5, [r4, #7]
10049852:	462a      	mov	r2, r5
10049854:	2106      	movs	r1, #6
10049856:	4638      	mov	r0, r7
10049858:	3308      	adds	r3, #8
1004985a:	f00b f8a7 	bl	100549ac <PM_Copy_Pckt_Data>
1004985e:	4621      	mov	r1, r4
10049860:	4630      	mov	r0, r6
10049862:	f012 fb2f 	bl	1005bec4 <aci_event_fifo_push>
10049866:	e7de      	b.n	10049826 <aci_att_find_info_resp_event_push+0x32>
10049868:	2007      	movs	r0, #7
1004986a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004986c:	20000d64 	.word	0x20000d64

10049870 <aci_att_prepare_write_resp_event_push>:
10049870:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10049872:	b082      	sub	sp, #8
10049874:	4606      	mov	r6, r0
10049876:	9804      	ldr	r0, [sp, #16]
10049878:	2103      	movs	r1, #3
1004987a:	7980      	ldrb	r0, [r0, #6]
1004987c:	1f40      	subs	r0, r0, #5
1004987e:	b2c5      	uxtb	r5, r0
10049880:	1de8      	adds	r0, r5, #7
10049882:	4308      	orrs	r0, r1
10049884:	1c40      	adds	r0, r0, #1
10049886:	0883      	lsrs	r3, r0, #2
10049888:	4821      	ldr	r0, [pc, #132]	; (10049910 <aci_att_prepare_write_resp_event_push+0xa0>)
1004988a:	06f1      	lsls	r1, r6, #27
1004988c:	6800      	ldr	r0, [r0, #0]
1004988e:	d503      	bpl.n	10049898 <aci_att_prepare_write_resp_event_push+0x28>
10049890:	2230      	movs	r2, #48	; 0x30
10049892:	21bf      	movs	r1, #191	; 0xbf
10049894:	400e      	ands	r6, r1
10049896:	e009      	b.n	100498ac <aci_att_prepare_write_resp_event_push+0x3c>
10049898:	2137      	movs	r1, #55	; 0x37
1004989a:	0149      	lsls	r1, r1, #5
1004989c:	1841      	adds	r1, r0, r1
1004989e:	7b49      	ldrb	r1, [r1, #13]
100498a0:	0709      	lsls	r1, r1, #28
100498a2:	d402      	bmi.n	100498aa <aci_att_prepare_write_resp_event_push+0x3a>
100498a4:	2000      	movs	r0, #0
100498a6:	b005      	add	sp, #20
100498a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100498aa:	222d      	movs	r2, #45	; 0x2d
100498ac:	0731      	lsls	r1, r6, #28
100498ae:	0e89      	lsrs	r1, r1, #26
100498b0:	1808      	adds	r0, r1, r0
100498b2:	2101      	movs	r1, #1
100498b4:	02c9      	lsls	r1, r1, #11
100498b6:	1840      	adds	r0, r0, r1
100498b8:	6940      	ldr	r0, [r0, #20]
100498ba:	4631      	mov	r1, r6
100498bc:	f012 fb16 	bl	1005beec <aci_event_fifo_push_header>
100498c0:	0004      	movs	r4, r0
100498c2:	d022      	beq.n	1004990a <aci_att_prepare_write_resp_event_push+0x9a>
100498c4:	9804      	ldr	r0, [sp, #16]
100498c6:	1d27      	adds	r7, r4, #4
100498c8:	6881      	ldr	r1, [r0, #8]
100498ca:	2202      	movs	r2, #2
100498cc:	4668      	mov	r0, sp
100498ce:	310d      	adds	r1, #13
100498d0:	f7f6 ff57 	bl	10040782 <Osal_MemCpy>
100498d4:	9804      	ldr	r0, [sp, #16]
100498d6:	2202      	movs	r2, #2
100498d8:	6881      	ldr	r1, [r0, #8]
100498da:	a801      	add	r0, sp, #4
100498dc:	310f      	adds	r1, #15
100498de:	f7f6 ff50 	bl	10040782 <Osal_MemCpy>
100498e2:	9803      	ldr	r0, [sp, #12]
100498e4:	8038      	strh	r0, [r7, #0]
100498e6:	4668      	mov	r0, sp
100498e8:	8800      	ldrh	r0, [r0, #0]
100498ea:	8078      	strh	r0, [r7, #2]
100498ec:	4668      	mov	r0, sp
100498ee:	8880      	ldrh	r0, [r0, #4]
100498f0:	80b8      	strh	r0, [r7, #4]
100498f2:	71bd      	strb	r5, [r7, #6]
100498f4:	1dfb      	adds	r3, r7, #7
100498f6:	462a      	mov	r2, r5
100498f8:	2109      	movs	r1, #9
100498fa:	9804      	ldr	r0, [sp, #16]
100498fc:	f00b f856 	bl	100549ac <PM_Copy_Pckt_Data>
10049900:	4621      	mov	r1, r4
10049902:	4630      	mov	r0, r6
10049904:	f012 fade 	bl	1005bec4 <aci_event_fifo_push>
10049908:	e7cc      	b.n	100498a4 <aci_att_prepare_write_resp_event_push+0x34>
1004990a:	2007      	movs	r0, #7
1004990c:	e7cb      	b.n	100498a6 <aci_att_prepare_write_resp_event_push+0x36>
1004990e:	0000      	.short	0x0000
10049910:	20000d64 	.word	0x20000d64

10049914 <aci_att_read_blob_resp_event_push>:
10049914:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10049916:	4606      	mov	r6, r0
10049918:	7990      	ldrb	r0, [r2, #6]
1004991a:	2103      	movs	r1, #3
1004991c:	1e40      	subs	r0, r0, #1
1004991e:	b2c5      	uxtb	r5, r0
10049920:	1ce8      	adds	r0, r5, #3
10049922:	4308      	orrs	r0, r1
10049924:	1c40      	adds	r0, r0, #1
10049926:	0883      	lsrs	r3, r0, #2
10049928:	4816      	ldr	r0, [pc, #88]	; (10049984 <aci_att_read_blob_resp_event_push+0x70>)
1004992a:	4617      	mov	r7, r2
1004992c:	6800      	ldr	r0, [r0, #0]
1004992e:	06f1      	lsls	r1, r6, #27
10049930:	d503      	bpl.n	1004993a <aci_att_read_blob_resp_event_push+0x26>
10049932:	222c      	movs	r2, #44	; 0x2c
10049934:	21bf      	movs	r1, #191	; 0xbf
10049936:	400e      	ands	r6, r1
10049938:	e008      	b.n	1004994c <aci_att_read_blob_resp_event_push+0x38>
1004993a:	2137      	movs	r1, #55	; 0x37
1004993c:	0149      	lsls	r1, r1, #5
1004993e:	1841      	adds	r1, r0, r1
10049940:	7b09      	ldrb	r1, [r1, #12]
10049942:	0609      	lsls	r1, r1, #24
10049944:	d401      	bmi.n	1004994a <aci_att_read_blob_resp_event_push+0x36>
10049946:	2000      	movs	r0, #0
10049948:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004994a:	2229      	movs	r2, #41	; 0x29
1004994c:	0731      	lsls	r1, r6, #28
1004994e:	0e89      	lsrs	r1, r1, #26
10049950:	1808      	adds	r0, r1, r0
10049952:	2101      	movs	r1, #1
10049954:	02c9      	lsls	r1, r1, #11
10049956:	1840      	adds	r0, r0, r1
10049958:	6940      	ldr	r0, [r0, #20]
1004995a:	4631      	mov	r1, r6
1004995c:	f012 fac6 	bl	1005beec <aci_event_fifo_push_header>
10049960:	0004      	movs	r4, r0
10049962:	d00d      	beq.n	10049980 <aci_att_read_blob_resp_event_push+0x6c>
10049964:	9801      	ldr	r0, [sp, #4]
10049966:	80a0      	strh	r0, [r4, #4]
10049968:	71a5      	strb	r5, [r4, #6]
1004996a:	462a      	mov	r2, r5
1004996c:	2105      	movs	r1, #5
1004996e:	4638      	mov	r0, r7
10049970:	1de3      	adds	r3, r4, #7
10049972:	f00b f81b 	bl	100549ac <PM_Copy_Pckt_Data>
10049976:	4621      	mov	r1, r4
10049978:	4630      	mov	r0, r6
1004997a:	f012 faa3 	bl	1005bec4 <aci_event_fifo_push>
1004997e:	e7e2      	b.n	10049946 <aci_att_read_blob_resp_event_push+0x32>
10049980:	2007      	movs	r0, #7
10049982:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049984:	20000d64 	.word	0x20000d64

10049988 <aci_att_read_by_group_type_resp_event_push>:
10049988:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004998a:	4606      	mov	r6, r0
1004998c:	7990      	ldrb	r0, [r2, #6]
1004998e:	2103      	movs	r1, #3
10049990:	1e80      	subs	r0, r0, #2
10049992:	b2c5      	uxtb	r5, r0
10049994:	1ce8      	adds	r0, r5, #3
10049996:	4308      	orrs	r0, r1
10049998:	1c40      	adds	r0, r0, #1
1004999a:	0883      	lsrs	r3, r0, #2
1004999c:	4818      	ldr	r0, [pc, #96]	; (10049a00 <aci_att_read_by_group_type_resp_event_push+0x78>)
1004999e:	4617      	mov	r7, r2
100499a0:	6800      	ldr	r0, [r0, #0]
100499a2:	06f1      	lsls	r1, r6, #27
100499a4:	d503      	bpl.n	100499ae <aci_att_read_by_group_type_resp_event_push+0x26>
100499a6:	222e      	movs	r2, #46	; 0x2e
100499a8:	21bf      	movs	r1, #191	; 0xbf
100499aa:	400e      	ands	r6, r1
100499ac:	e008      	b.n	100499c0 <aci_att_read_by_group_type_resp_event_push+0x38>
100499ae:	2137      	movs	r1, #55	; 0x37
100499b0:	0149      	lsls	r1, r1, #5
100499b2:	1841      	adds	r1, r0, r1
100499b4:	7b49      	ldrb	r1, [r1, #13]
100499b6:	0789      	lsls	r1, r1, #30
100499b8:	d401      	bmi.n	100499be <aci_att_read_by_group_type_resp_event_push+0x36>
100499ba:	2000      	movs	r0, #0
100499bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100499be:	222b      	movs	r2, #43	; 0x2b
100499c0:	0731      	lsls	r1, r6, #28
100499c2:	0e89      	lsrs	r1, r1, #26
100499c4:	1808      	adds	r0, r1, r0
100499c6:	2101      	movs	r1, #1
100499c8:	02c9      	lsls	r1, r1, #11
100499ca:	1840      	adds	r0, r0, r1
100499cc:	6940      	ldr	r0, [r0, #20]
100499ce:	4631      	mov	r1, r6
100499d0:	f012 fa8c 	bl	1005beec <aci_event_fifo_push_header>
100499d4:	0004      	movs	r4, r0
100499d6:	d011      	beq.n	100499fc <aci_att_read_by_group_type_resp_event_push+0x74>
100499d8:	9801      	ldr	r0, [sp, #4]
100499da:	80a0      	strh	r0, [r4, #4]
100499dc:	68b8      	ldr	r0, [r7, #8]
100499de:	4623      	mov	r3, r4
100499e0:	7b40      	ldrb	r0, [r0, #13]
100499e2:	71a0      	strb	r0, [r4, #6]
100499e4:	71e5      	strb	r5, [r4, #7]
100499e6:	462a      	mov	r2, r5
100499e8:	2106      	movs	r1, #6
100499ea:	4638      	mov	r0, r7
100499ec:	3308      	adds	r3, #8
100499ee:	f00a ffdd 	bl	100549ac <PM_Copy_Pckt_Data>
100499f2:	4621      	mov	r1, r4
100499f4:	4630      	mov	r0, r6
100499f6:	f012 fa65 	bl	1005bec4 <aci_event_fifo_push>
100499fa:	e7de      	b.n	100499ba <aci_att_read_by_group_type_resp_event_push+0x32>
100499fc:	2007      	movs	r0, #7
100499fe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049a00:	20000d64 	.word	0x20000d64

10049a04 <aci_att_read_by_type_resp_event_push>:
10049a04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10049a06:	4606      	mov	r6, r0
10049a08:	7990      	ldrb	r0, [r2, #6]
10049a0a:	2103      	movs	r1, #3
10049a0c:	1e80      	subs	r0, r0, #2
10049a0e:	b2c5      	uxtb	r5, r0
10049a10:	1d28      	adds	r0, r5, #4
10049a12:	4308      	orrs	r0, r1
10049a14:	1c40      	adds	r0, r0, #1
10049a16:	0883      	lsrs	r3, r0, #2
10049a18:	4818      	ldr	r0, [pc, #96]	; (10049a7c <aci_att_read_by_type_resp_event_push+0x78>)
10049a1a:	4617      	mov	r7, r2
10049a1c:	6800      	ldr	r0, [r0, #0]
10049a1e:	06f1      	lsls	r1, r6, #27
10049a20:	d503      	bpl.n	10049a2a <aci_att_read_by_type_resp_event_push+0x26>
10049a22:	222a      	movs	r2, #42	; 0x2a
10049a24:	21bf      	movs	r1, #191	; 0xbf
10049a26:	400e      	ands	r6, r1
10049a28:	e008      	b.n	10049a3c <aci_att_read_by_type_resp_event_push+0x38>
10049a2a:	2137      	movs	r1, #55	; 0x37
10049a2c:	0149      	lsls	r1, r1, #5
10049a2e:	1841      	adds	r1, r0, r1
10049a30:	7b09      	ldrb	r1, [r1, #12]
10049a32:	0689      	lsls	r1, r1, #26
10049a34:	d401      	bmi.n	10049a3a <aci_att_read_by_type_resp_event_push+0x36>
10049a36:	2000      	movs	r0, #0
10049a38:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049a3a:	2227      	movs	r2, #39	; 0x27
10049a3c:	0731      	lsls	r1, r6, #28
10049a3e:	0e89      	lsrs	r1, r1, #26
10049a40:	1808      	adds	r0, r1, r0
10049a42:	2101      	movs	r1, #1
10049a44:	02c9      	lsls	r1, r1, #11
10049a46:	1840      	adds	r0, r0, r1
10049a48:	6940      	ldr	r0, [r0, #20]
10049a4a:	4631      	mov	r1, r6
10049a4c:	f012 fa4e 	bl	1005beec <aci_event_fifo_push_header>
10049a50:	0004      	movs	r4, r0
10049a52:	d011      	beq.n	10049a78 <aci_att_read_by_type_resp_event_push+0x74>
10049a54:	9801      	ldr	r0, [sp, #4]
10049a56:	80a0      	strh	r0, [r4, #4]
10049a58:	68b8      	ldr	r0, [r7, #8]
10049a5a:	4623      	mov	r3, r4
10049a5c:	7b40      	ldrb	r0, [r0, #13]
10049a5e:	71a0      	strb	r0, [r4, #6]
10049a60:	71e5      	strb	r5, [r4, #7]
10049a62:	462a      	mov	r2, r5
10049a64:	2106      	movs	r1, #6
10049a66:	4638      	mov	r0, r7
10049a68:	3308      	adds	r3, #8
10049a6a:	f00a ff9f 	bl	100549ac <PM_Copy_Pckt_Data>
10049a6e:	4621      	mov	r1, r4
10049a70:	4630      	mov	r0, r6
10049a72:	f012 fa27 	bl	1005bec4 <aci_event_fifo_push>
10049a76:	e7de      	b.n	10049a36 <aci_att_read_by_type_resp_event_push+0x32>
10049a78:	2007      	movs	r0, #7
10049a7a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049a7c:	20000d64 	.word	0x20000d64

10049a80 <aci_att_read_multiple_resp_event_push>:
10049a80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10049a82:	4606      	mov	r6, r0
10049a84:	7990      	ldrb	r0, [r2, #6]
10049a86:	2103      	movs	r1, #3
10049a88:	1e40      	subs	r0, r0, #1
10049a8a:	b2c5      	uxtb	r5, r0
10049a8c:	1ce8      	adds	r0, r5, #3
10049a8e:	4308      	orrs	r0, r1
10049a90:	1c40      	adds	r0, r0, #1
10049a92:	0883      	lsrs	r3, r0, #2
10049a94:	4816      	ldr	r0, [pc, #88]	; (10049af0 <aci_att_read_multiple_resp_event_push+0x70>)
10049a96:	4617      	mov	r7, r2
10049a98:	6800      	ldr	r0, [r0, #0]
10049a9a:	06f1      	lsls	r1, r6, #27
10049a9c:	d503      	bpl.n	10049aa6 <aci_att_read_multiple_resp_event_push+0x26>
10049a9e:	222d      	movs	r2, #45	; 0x2d
10049aa0:	21bf      	movs	r1, #191	; 0xbf
10049aa2:	400e      	ands	r6, r1
10049aa4:	e006      	b.n	10049ab4 <aci_att_read_multiple_resp_event_push+0x34>
10049aa6:	2137      	movs	r1, #55	; 0x37
10049aa8:	0149      	lsls	r1, r1, #5
10049aaa:	1841      	adds	r1, r0, r1
10049aac:	7b49      	ldrb	r1, [r1, #13]
10049aae:	07c9      	lsls	r1, r1, #31
10049ab0:	d019      	beq.n	10049ae6 <aci_att_read_multiple_resp_event_push+0x66>
10049ab2:	222a      	movs	r2, #42	; 0x2a
10049ab4:	0731      	lsls	r1, r6, #28
10049ab6:	0e89      	lsrs	r1, r1, #26
10049ab8:	1808      	adds	r0, r1, r0
10049aba:	2101      	movs	r1, #1
10049abc:	02c9      	lsls	r1, r1, #11
10049abe:	1840      	adds	r0, r0, r1
10049ac0:	6940      	ldr	r0, [r0, #20]
10049ac2:	4631      	mov	r1, r6
10049ac4:	f012 fa12 	bl	1005beec <aci_event_fifo_push_header>
10049ac8:	0004      	movs	r4, r0
10049aca:	d00e      	beq.n	10049aea <aci_att_read_multiple_resp_event_push+0x6a>
10049acc:	9801      	ldr	r0, [sp, #4]
10049ace:	80a0      	strh	r0, [r4, #4]
10049ad0:	71a5      	strb	r5, [r4, #6]
10049ad2:	462a      	mov	r2, r5
10049ad4:	2105      	movs	r1, #5
10049ad6:	4638      	mov	r0, r7
10049ad8:	1de3      	adds	r3, r4, #7
10049ada:	f00a ff67 	bl	100549ac <PM_Copy_Pckt_Data>
10049ade:	4621      	mov	r1, r4
10049ae0:	4630      	mov	r0, r6
10049ae2:	f012 f9ef 	bl	1005bec4 <aci_event_fifo_push>
10049ae6:	2000      	movs	r0, #0
10049ae8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049aea:	2007      	movs	r0, #7
10049aec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049aee:	0000      	.short	0x0000
10049af0:	20000d64 	.word	0x20000d64

10049af4 <aci_att_read_resp_event_push>:
10049af4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10049af6:	4606      	mov	r6, r0
10049af8:	7990      	ldrb	r0, [r2, #6]
10049afa:	2103      	movs	r1, #3
10049afc:	1e40      	subs	r0, r0, #1
10049afe:	b2c5      	uxtb	r5, r0
10049b00:	1ce8      	adds	r0, r5, #3
10049b02:	4308      	orrs	r0, r1
10049b04:	1c40      	adds	r0, r0, #1
10049b06:	0883      	lsrs	r3, r0, #2
10049b08:	4816      	ldr	r0, [pc, #88]	; (10049b64 <aci_att_read_resp_event_push+0x70>)
10049b0a:	4617      	mov	r7, r2
10049b0c:	6800      	ldr	r0, [r0, #0]
10049b0e:	06f1      	lsls	r1, r6, #27
10049b10:	d503      	bpl.n	10049b1a <aci_att_read_resp_event_push+0x26>
10049b12:	222b      	movs	r2, #43	; 0x2b
10049b14:	21bf      	movs	r1, #191	; 0xbf
10049b16:	400e      	ands	r6, r1
10049b18:	e008      	b.n	10049b2c <aci_att_read_resp_event_push+0x38>
10049b1a:	2137      	movs	r1, #55	; 0x37
10049b1c:	0149      	lsls	r1, r1, #5
10049b1e:	1841      	adds	r1, r0, r1
10049b20:	7b09      	ldrb	r1, [r1, #12]
10049b22:	0649      	lsls	r1, r1, #25
10049b24:	d401      	bmi.n	10049b2a <aci_att_read_resp_event_push+0x36>
10049b26:	2000      	movs	r0, #0
10049b28:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049b2a:	2228      	movs	r2, #40	; 0x28
10049b2c:	0731      	lsls	r1, r6, #28
10049b2e:	0e89      	lsrs	r1, r1, #26
10049b30:	1808      	adds	r0, r1, r0
10049b32:	2101      	movs	r1, #1
10049b34:	02c9      	lsls	r1, r1, #11
10049b36:	1840      	adds	r0, r0, r1
10049b38:	6940      	ldr	r0, [r0, #20]
10049b3a:	4631      	mov	r1, r6
10049b3c:	f012 f9d6 	bl	1005beec <aci_event_fifo_push_header>
10049b40:	0004      	movs	r4, r0
10049b42:	d00d      	beq.n	10049b60 <aci_att_read_resp_event_push+0x6c>
10049b44:	9801      	ldr	r0, [sp, #4]
10049b46:	80a0      	strh	r0, [r4, #4]
10049b48:	71a5      	strb	r5, [r4, #6]
10049b4a:	462a      	mov	r2, r5
10049b4c:	2105      	movs	r1, #5
10049b4e:	4638      	mov	r0, r7
10049b50:	1de3      	adds	r3, r4, #7
10049b52:	f00a ff2b 	bl	100549ac <PM_Copy_Pckt_Data>
10049b56:	4621      	mov	r1, r4
10049b58:	4630      	mov	r0, r6
10049b5a:	f012 f9b3 	bl	1005bec4 <aci_event_fifo_push>
10049b5e:	e7e2      	b.n	10049b26 <aci_att_read_resp_event_push+0x32>
10049b60:	2007      	movs	r0, #7
10049b62:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10049b64:	20000d64 	.word	0x20000d64

10049b68 <aci_gatt_disc_read_char_by_uuid_resp_event_push>:
10049b68:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10049b6a:	1e9b      	subs	r3, r3, #2
10049b6c:	4606      	mov	r6, r0
10049b6e:	b2dd      	uxtb	r5, r3
10049b70:	1d68      	adds	r0, r5, #5
10049b72:	2103      	movs	r1, #3
10049b74:	4308      	orrs	r0, r1
10049b76:	1c40      	adds	r0, r0, #1
10049b78:	0883      	lsrs	r3, r0, #2
10049b7a:	481b      	ldr	r0, [pc, #108]	; (10049be8 <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x80>)
10049b7c:	b081      	sub	sp, #4
10049b7e:	6800      	ldr	r0, [r0, #0]
10049b80:	4617      	mov	r7, r2
10049b82:	06f1      	lsls	r1, r6, #27
10049b84:	d503      	bpl.n	10049b8e <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x26>
10049b86:	2236      	movs	r2, #54	; 0x36
10049b88:	21bf      	movs	r1, #191	; 0xbf
10049b8a:	400e      	ands	r6, r1
10049b8c:	e009      	b.n	10049ba2 <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x3a>
10049b8e:	2137      	movs	r1, #55	; 0x37
10049b90:	0149      	lsls	r1, r1, #5
10049b92:	1841      	adds	r1, r0, r1
10049b94:	7b89      	ldrb	r1, [r1, #14]
10049b96:	0789      	lsls	r1, r1, #30
10049b98:	d402      	bmi.n	10049ba0 <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x38>
10049b9a:	2000      	movs	r0, #0
10049b9c:	b005      	add	sp, #20
10049b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049ba0:	2233      	movs	r2, #51	; 0x33
10049ba2:	0731      	lsls	r1, r6, #28
10049ba4:	0e89      	lsrs	r1, r1, #26
10049ba6:	1808      	adds	r0, r1, r0
10049ba8:	2101      	movs	r1, #1
10049baa:	02c9      	lsls	r1, r1, #11
10049bac:	1840      	adds	r0, r0, r1
10049bae:	6940      	ldr	r0, [r0, #20]
10049bb0:	4631      	mov	r1, r6
10049bb2:	f012 f99b 	bl	1005beec <aci_event_fifo_push_header>
10049bb6:	0004      	movs	r4, r0
10049bb8:	d014      	beq.n	10049be4 <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x7c>
10049bba:	9802      	ldr	r0, [sp, #8]
10049bbc:	80a0      	strh	r0, [r4, #4]
10049bbe:	980a      	ldr	r0, [sp, #40]	; 0x28
10049bc0:	4623      	mov	r3, r4
10049bc2:	6880      	ldr	r0, [r0, #8]
10049bc4:	462a      	mov	r2, r5
10049bc6:	3008      	adds	r0, #8
10049bc8:	19c0      	adds	r0, r0, r7
10049bca:	7900      	ldrb	r0, [r0, #4]
10049bcc:	80e0      	strh	r0, [r4, #6]
10049bce:	7225      	strb	r5, [r4, #8]
10049bd0:	1db9      	adds	r1, r7, #6
10049bd2:	3309      	adds	r3, #9
10049bd4:	980a      	ldr	r0, [sp, #40]	; 0x28
10049bd6:	f00a fee9 	bl	100549ac <PM_Copy_Pckt_Data>
10049bda:	4621      	mov	r1, r4
10049bdc:	4630      	mov	r0, r6
10049bde:	f012 f971 	bl	1005bec4 <aci_event_fifo_push>
10049be2:	e7da      	b.n	10049b9a <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x32>
10049be4:	2007      	movs	r0, #7
10049be6:	e7d9      	b.n	10049b9c <aci_gatt_disc_read_char_by_uuid_resp_event_push+0x34>
10049be8:	20000d64 	.word	0x20000d64

10049bec <aci_gatt_error_resp_event_push>:
10049bec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10049bee:	4604      	mov	r4, r0
10049bf0:	6890      	ldr	r0, [r2, #8]
10049bf2:	460f      	mov	r7, r1
10049bf4:	4601      	mov	r1, r0
10049bf6:	4615      	mov	r5, r2
10049bf8:	7b46      	ldrb	r6, [r0, #13]
10049bfa:	310e      	adds	r1, #14
10049bfc:	2202      	movs	r2, #2
10049bfe:	4668      	mov	r0, sp
10049c00:	f7f6 fdbf 	bl	10040782 <Osal_MemCpy>
10049c04:	68a8      	ldr	r0, [r5, #8]
10049c06:	2302      	movs	r3, #2
10049c08:	7c05      	ldrb	r5, [r0, #16]
10049c0a:	4815      	ldr	r0, [pc, #84]	; (10049c60 <aci_gatt_error_resp_event_push+0x74>)
10049c0c:	06e1      	lsls	r1, r4, #27
10049c0e:	d503      	bpl.n	10049c18 <aci_gatt_error_resp_event_push+0x2c>
10049c10:	2235      	movs	r2, #53	; 0x35
10049c12:	21bf      	movs	r1, #191	; 0xbf
10049c14:	400c      	ands	r4, r1
10049c16:	e009      	b.n	10049c2c <aci_gatt_error_resp_event_push+0x40>
10049c18:	2237      	movs	r2, #55	; 0x37
10049c1a:	6801      	ldr	r1, [r0, #0]
10049c1c:	0152      	lsls	r2, r2, #5
10049c1e:	1889      	adds	r1, r1, r2
10049c20:	7b49      	ldrb	r1, [r1, #13]
10049c22:	0609      	lsls	r1, r1, #24
10049c24:	d401      	bmi.n	10049c2a <aci_gatt_error_resp_event_push+0x3e>
10049c26:	2000      	movs	r0, #0
10049c28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049c2a:	2232      	movs	r2, #50	; 0x32
10049c2c:	0721      	lsls	r1, r4, #28
10049c2e:	6800      	ldr	r0, [r0, #0]
10049c30:	0e89      	lsrs	r1, r1, #26
10049c32:	1808      	adds	r0, r1, r0
10049c34:	2101      	movs	r1, #1
10049c36:	02c9      	lsls	r1, r1, #11
10049c38:	1840      	adds	r0, r0, r1
10049c3a:	6940      	ldr	r0, [r0, #20]
10049c3c:	4621      	mov	r1, r4
10049c3e:	f012 f955 	bl	1005beec <aci_event_fifo_push_header>
10049c42:	0001      	movs	r1, r0
10049c44:	d009      	beq.n	10049c5a <aci_gatt_error_resp_event_push+0x6e>
10049c46:	808f      	strh	r7, [r1, #4]
10049c48:	718e      	strb	r6, [r1, #6]
10049c4a:	466a      	mov	r2, sp
10049c4c:	8812      	ldrh	r2, [r2, #0]
10049c4e:	810a      	strh	r2, [r1, #8]
10049c50:	728d      	strb	r5, [r1, #10]
10049c52:	4620      	mov	r0, r4
10049c54:	f012 f936 	bl	1005bec4 <aci_event_fifo_push>
10049c58:	e7e5      	b.n	10049c26 <aci_gatt_error_resp_event_push+0x3a>
10049c5a:	2007      	movs	r0, #7
10049c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049c5e:	0000      	.short	0x0000
10049c60:	20000d64 	.word	0x20000d64

10049c64 <aci_gatt_proc_complete_event_push>:
10049c64:	b570      	push	{r4, r5, r6, lr}
10049c66:	460e      	mov	r6, r1
10049c68:	2301      	movs	r3, #1
10049c6a:	4604      	mov	r4, r0
10049c6c:	06c1      	lsls	r1, r0, #27
10049c6e:	4812      	ldr	r0, [pc, #72]	; (10049cb8 <aci_gatt_proc_complete_event_push+0x54>)
10049c70:	4615      	mov	r5, r2
10049c72:	6800      	ldr	r0, [r0, #0]
10049c74:	d503      	bpl.n	10049c7e <aci_gatt_proc_complete_event_push+0x1a>
10049c76:	2234      	movs	r2, #52	; 0x34
10049c78:	21bf      	movs	r1, #191	; 0xbf
10049c7a:	400c      	ands	r4, r1
10049c7c:	e006      	b.n	10049c8c <aci_gatt_proc_complete_event_push+0x28>
10049c7e:	2137      	movs	r1, #55	; 0x37
10049c80:	0149      	lsls	r1, r1, #5
10049c82:	1841      	adds	r1, r0, r1
10049c84:	7b89      	ldrb	r1, [r1, #14]
10049c86:	07c9      	lsls	r1, r1, #31
10049c88:	d011      	beq.n	10049cae <aci_gatt_proc_complete_event_push+0x4a>
10049c8a:	2231      	movs	r2, #49	; 0x31
10049c8c:	0721      	lsls	r1, r4, #28
10049c8e:	0e89      	lsrs	r1, r1, #26
10049c90:	1808      	adds	r0, r1, r0
10049c92:	2101      	movs	r1, #1
10049c94:	02c9      	lsls	r1, r1, #11
10049c96:	1840      	adds	r0, r0, r1
10049c98:	6940      	ldr	r0, [r0, #20]
10049c9a:	4621      	mov	r1, r4
10049c9c:	f012 f926 	bl	1005beec <aci_event_fifo_push_header>
10049ca0:	0001      	movs	r1, r0
10049ca2:	d006      	beq.n	10049cb2 <aci_gatt_proc_complete_event_push+0x4e>
10049ca4:	808e      	strh	r6, [r1, #4]
10049ca6:	718d      	strb	r5, [r1, #6]
10049ca8:	4620      	mov	r0, r4
10049caa:	f012 f90b 	bl	1005bec4 <aci_event_fifo_push>
10049cae:	2000      	movs	r0, #0
10049cb0:	bd70      	pop	{r4, r5, r6, pc}
10049cb2:	2007      	movs	r0, #7
10049cb4:	bd70      	pop	{r4, r5, r6, pc}
10049cb6:	0000      	.short	0x0000
10049cb8:	20000d64 	.word	0x20000d64

10049cbc <int16ToLe2Byte>:
10049cbc:	7001      	strb	r1, [r0, #0]
10049cbe:	0a09      	lsrs	r1, r1, #8
10049cc0:	7041      	strb	r1, [r0, #1]
10049cc2:	4770      	bx	lr

10049cc4 <le2ByteToInt16>:
10049cc4:	7801      	ldrb	r1, [r0, #0]
10049cc6:	7840      	ldrb	r0, [r0, #1]
10049cc8:	0200      	lsls	r0, r0, #8
10049cca:	4308      	orrs	r0, r1
10049ccc:	4770      	bx	lr
	...

10049cd0 <long_write_procedure>:
10049cd0:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
10049cd2:	b08d      	sub	sp, #52	; 0x34
10049cd4:	4604      	mov	r4, r0
10049cd6:	2000      	movs	r0, #0
10049cd8:	4669      	mov	r1, sp
10049cda:	8308      	strh	r0, [r1, #24]
10049cdc:	8408      	strh	r0, [r1, #32]
10049cde:	9009      	str	r0, [sp, #36]	; 0x24
10049ce0:	69e6      	ldr	r6, [r4, #28]
10049ce2:	68a0      	ldr	r0, [r4, #8]
10049ce4:	88f7      	ldrh	r7, [r6, #6]
10049ce6:	f7ff ffed 	bl	10049cc4 <le2ByteToInt16>
10049cea:	9007      	str	r0, [sp, #28]
10049cec:	68a0      	ldr	r0, [r4, #8]
10049cee:	1c80      	adds	r0, r0, #2
10049cf0:	f7ff ffe8 	bl	10049cc4 <le2ByteToInt16>
10049cf4:	9005      	str	r0, [sp, #20]
10049cf6:	68a0      	ldr	r0, [r4, #8]
10049cf8:	1d00      	adds	r0, r0, #4
10049cfa:	f7ff ffe3 	bl	10049cc4 <le2ByteToInt16>
10049cfe:	9000      	str	r0, [sp, #0]
10049d00:	68a0      	ldr	r0, [r4, #8]
10049d02:	1d80      	adds	r0, r0, #6
10049d04:	f7ff ffde 	bl	10049cc4 <le2ByteToInt16>
10049d08:	4605      	mov	r5, r0
10049d0a:	68b0      	ldr	r0, [r6, #8]
10049d0c:	2201      	movs	r2, #1
10049d0e:	4601      	mov	r1, r0
10049d10:	7b03      	ldrb	r3, [r0, #12]
10049d12:	3108      	adds	r1, #8
10049d14:	0292      	lsls	r2, r2, #10
10049d16:	2b01      	cmp	r3, #1
10049d18:	d027      	beq.n	10049d6a <long_write_procedure+0x9a>
10049d1a:	2b17      	cmp	r3, #23
10049d1c:	d067      	beq.n	10049dee <long_write_procedure+0x11e>
10049d1e:	6921      	ldr	r1, [r4, #16]
10049d20:	0448      	lsls	r0, r1, #17
10049d22:	d504      	bpl.n	10049d2e <long_write_procedure+0x5e>
10049d24:	2041      	movs	r0, #65	; 0x41
10049d26:	9009      	str	r0, [sp, #36]	; 0x24
10049d28:	0110      	lsls	r0, r2, #4
10049d2a:	4381      	bics	r1, r0
10049d2c:	6121      	str	r1, [r4, #16]
10049d2e:	8821      	ldrh	r1, [r4, #0]
10049d30:	2002      	movs	r0, #2
10049d32:	f7ff fcf9 	bl	10049728 <aci_att_exec_write_resp_event_push>
10049d36:	4977      	ldr	r1, [pc, #476]	; (10049f14 <long_write_procedure+0x244>)
10049d38:	2225      	movs	r2, #37	; 0x25
10049d3a:	6809      	ldr	r1, [r1, #0]
10049d3c:	0192      	lsls	r2, r2, #6
10049d3e:	2000      	movs	r0, #0
10049d40:	1889      	adds	r1, r1, r2
10049d42:	8308      	strh	r0, [r1, #24]
10049d44:	2109      	movs	r1, #9
10049d46:	6920      	ldr	r0, [r4, #16]
10049d48:	0349      	lsls	r1, r1, #13
10049d4a:	4388      	bics	r0, r1
10049d4c:	6120      	str	r0, [r4, #16]
10049d4e:	8821      	ldrh	r1, [r4, #0]
10049d50:	2002      	movs	r0, #2
10049d52:	9a09      	ldr	r2, [sp, #36]	; 0x24
10049d54:	f7ff ff86 	bl	10049c64 <aci_gatt_proc_complete_event_push>
10049d58:	2101      	movs	r1, #1
10049d5a:	69e0      	ldr	r0, [r4, #28]
10049d5c:	f00a fec2 	bl	10054ae4 <PM_Release_Acl_Pckt>
10049d60:	2000      	movs	r0, #0
10049d62:	61e0      	str	r0, [r4, #28]
10049d64:	2000      	movs	r0, #0
10049d66:	b00f      	add	sp, #60	; 0x3c
10049d68:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049d6a:	2f05      	cmp	r7, #5
10049d6c:	d017      	beq.n	10049d9e <long_write_procedure+0xce>
10049d6e:	2041      	movs	r0, #65	; 0x41
10049d70:	9009      	str	r0, [sp, #36]	; 0x24
10049d72:	6920      	ldr	r0, [r4, #16]
10049d74:	0641      	lsls	r1, r0, #25
10049d76:	d502      	bpl.n	10049d7e <long_write_procedure+0xae>
10049d78:	4310      	orrs	r0, r2
10049d7a:	6120      	str	r0, [r4, #16]
10049d7c:	e7f2      	b.n	10049d64 <long_write_procedure+0x94>
10049d7e:	2d00      	cmp	r5, #0
10049d80:	d0d9      	beq.n	10049d36 <long_write_procedure+0x66>
10049d82:	8821      	ldrh	r1, [r4, #0]
10049d84:	2220      	movs	r2, #32
10049d86:	2000      	movs	r0, #0
10049d88:	f00a fe50 	bl	10054a2c <PM_Get_Pckt>
10049d8c:	0005      	movs	r5, r0
10049d8e:	d074      	beq.n	10049e7a <long_write_procedure+0x1aa>
10049d90:	2001      	movs	r0, #1
10049d92:	6921      	ldr	r1, [r4, #16]
10049d94:	0380      	lsls	r0, r0, #14
10049d96:	4301      	orrs	r1, r0
10049d98:	2200      	movs	r2, #0
10049d9a:	6121      	str	r1, [r4, #16]
10049d9c:	e0b0      	b.n	10049f00 <long_write_procedure+0x230>
10049d9e:	7b40      	ldrb	r0, [r0, #13]
10049da0:	2818      	cmp	r0, #24
10049da2:	d01e      	beq.n	10049de2 <long_write_procedure+0x112>
10049da4:	6920      	ldr	r0, [r4, #16]
10049da6:	0641      	lsls	r1, r0, #25
10049da8:	d4e6      	bmi.n	10049d78 <long_write_procedure+0xa8>
10049daa:	2d00      	cmp	r5, #0
10049dac:	d0c3      	beq.n	10049d36 <long_write_procedure+0x66>
10049dae:	8821      	ldrh	r1, [r4, #0]
10049db0:	2220      	movs	r2, #32
10049db2:	2000      	movs	r0, #0
10049db4:	f00a fe3a 	bl	10054a2c <PM_Get_Pckt>
10049db8:	0005      	movs	r5, r0
10049dba:	d0e8      	beq.n	10049d8e <long_write_procedure+0xbe>
10049dbc:	2001      	movs	r0, #1
10049dbe:	6921      	ldr	r1, [r4, #16]
10049dc0:	0380      	lsls	r0, r0, #14
10049dc2:	4301      	orrs	r1, r0
10049dc4:	6121      	str	r1, [r4, #16]
10049dc6:	2200      	movs	r2, #0
10049dc8:	4629      	mov	r1, r5
10049dca:	4620      	mov	r0, r4
10049dcc:	f00a ffb1 	bl	10054d32 <Att_Send_Exec_Write_Req_Pdu>
10049dd0:	4628      	mov	r0, r5
10049dd2:	f000 fae3 	bl	1004a39c <GATT_Send_Packet>
10049dd6:	8821      	ldrh	r1, [r4, #0]
10049dd8:	4632      	mov	r2, r6
10049dda:	2002      	movs	r0, #2
10049ddc:	f7ff ff06 	bl	10049bec <aci_gatt_error_resp_event_push>
10049de0:	e7ba      	b.n	10049d58 <long_write_procedure+0x88>
10049de2:	8821      	ldrh	r1, [r4, #0]
10049de4:	4632      	mov	r2, r6
10049de6:	2002      	movs	r0, #2
10049de8:	f7ff ff00 	bl	10049bec <aci_gatt_error_resp_event_push>
10049dec:	e7a3      	b.n	10049d36 <long_write_procedure+0x66>
10049dee:	6920      	ldr	r0, [r4, #16]
10049df0:	0643      	lsls	r3, r0, #25
10049df2:	d4c1      	bmi.n	10049d78 <long_write_procedure+0xa8>
10049df4:	2202      	movs	r2, #2
10049df6:	a808      	add	r0, sp, #32
10049df8:	1d49      	adds	r1, r1, #5
10049dfa:	f7f6 fcc2 	bl	10040782 <Osal_MemCpy>
10049dfe:	68b1      	ldr	r1, [r6, #8]
10049e00:	2202      	movs	r2, #2
10049e02:	a806      	add	r0, sp, #24
10049e04:	310f      	adds	r1, #15
10049e06:	f7f6 fcbc 	bl	10040782 <Osal_MemCpy>
10049e0a:	1f7f      	subs	r7, r7, #5
10049e0c:	980e      	ldr	r0, [sp, #56]	; 0x38
10049e0e:	b2bf      	uxth	r7, r7
10049e10:	2801      	cmp	r0, #1
10049e12:	d107      	bne.n	10049e24 <long_write_procedure+0x154>
10049e14:	6960      	ldr	r0, [r4, #20]
10049e16:	463b      	mov	r3, r7
10049e18:	1941      	adds	r1, r0, r5
10049e1a:	2209      	movs	r2, #9
10049e1c:	4630      	mov	r0, r6
10049e1e:	f00a fe5b 	bl	10054ad8 <PM_Pckt_Cmp>
10049e22:	9001      	str	r0, [sp, #4]
10049e24:	9805      	ldr	r0, [sp, #20]
10049e26:	1941      	adds	r1, r0, r5
10049e28:	4668      	mov	r0, sp
10049e2a:	8b00      	ldrh	r0, [r0, #24]
10049e2c:	4281      	cmp	r1, r0
10049e2e:	d10a      	bne.n	10049e46 <long_write_procedure+0x176>
10049e30:	4668      	mov	r0, sp
10049e32:	8c01      	ldrh	r1, [r0, #32]
10049e34:	9807      	ldr	r0, [sp, #28]
10049e36:	4281      	cmp	r1, r0
10049e38:	d105      	bne.n	10049e46 <long_write_procedure+0x176>
10049e3a:	980e      	ldr	r0, [sp, #56]	; 0x38
10049e3c:	2801      	cmp	r0, #1
10049e3e:	d11d      	bne.n	10049e7c <long_write_procedure+0x1ac>
10049e40:	9801      	ldr	r0, [sp, #4]
10049e42:	2800      	cmp	r0, #0
10049e44:	d01a      	beq.n	10049e7c <long_write_procedure+0x1ac>
10049e46:	8821      	ldrh	r1, [r4, #0]
10049e48:	2220      	movs	r2, #32
10049e4a:	2000      	movs	r0, #0
10049e4c:	f00a fdee 	bl	10054a2c <PM_Get_Pckt>
10049e50:	0005      	movs	r5, r0
10049e52:	d05d      	beq.n	10049f10 <long_write_procedure+0x240>
10049e54:	8821      	ldrh	r1, [r4, #0]
10049e56:	4632      	mov	r2, r6
10049e58:	2002      	movs	r0, #2
10049e5a:	f7ff fd09 	bl	10049870 <aci_att_prepare_write_resp_event_push>
10049e5e:	2001      	movs	r0, #1
10049e60:	6921      	ldr	r1, [r4, #16]
10049e62:	0380      	lsls	r0, r0, #14
10049e64:	4301      	orrs	r1, r0
10049e66:	6121      	str	r1, [r4, #16]
10049e68:	2200      	movs	r2, #0
10049e6a:	4629      	mov	r1, r5
10049e6c:	4620      	mov	r0, r4
10049e6e:	f00a ff60 	bl	10054d32 <Att_Send_Exec_Write_Req_Pdu>
10049e72:	4628      	mov	r0, r5
10049e74:	f000 fa92 	bl	1004a39c <GATT_Send_Packet>
10049e78:	e75d      	b.n	10049d36 <long_write_procedure+0x66>
10049e7a:	e034      	b.n	10049ee6 <long_write_procedure+0x216>
10049e7c:	19e8      	adds	r0, r5, r7
10049e7e:	b285      	uxth	r5, r0
10049e80:	68a0      	ldr	r0, [r4, #8]
10049e82:	4629      	mov	r1, r5
10049e84:	1d80      	adds	r0, r0, #6
10049e86:	f7ff ff19 	bl	10049cbc <int16ToLe2Byte>
10049e8a:	9800      	ldr	r0, [sp, #0]
10049e8c:	8821      	ldrh	r1, [r4, #0]
10049e8e:	4285      	cmp	r5, r0
10049e90:	d22a      	bcs.n	10049ee8 <long_write_procedure+0x218>
10049e92:	2220      	movs	r2, #32
10049e94:	2000      	movs	r0, #0
10049e96:	f00a fdc9 	bl	10054a2c <PM_Get_Pckt>
10049e9a:	0007      	movs	r7, r0
10049e9c:	d038      	beq.n	10049f10 <long_write_procedure+0x240>
10049e9e:	8860      	ldrh	r0, [r4, #2]
10049ea0:	1f40      	subs	r0, r0, #5
10049ea2:	b281      	uxth	r1, r0
10049ea4:	9800      	ldr	r0, [sp, #0]
10049ea6:	1b40      	subs	r0, r0, r5
10049ea8:	b280      	uxth	r0, r0
10049eaa:	4281      	cmp	r1, r0
10049eac:	d200      	bcs.n	10049eb0 <long_write_procedure+0x1e0>
10049eae:	4608      	mov	r0, r1
10049eb0:	6961      	ldr	r1, [r4, #20]
10049eb2:	9001      	str	r0, [sp, #4]
10049eb4:	1949      	adds	r1, r1, r5
10049eb6:	9100      	str	r1, [sp, #0]
10049eb8:	9805      	ldr	r0, [sp, #20]
10049eba:	4639      	mov	r1, r7
10049ebc:	1940      	adds	r0, r0, r5
10049ebe:	b283      	uxth	r3, r0
10049ec0:	4620      	mov	r0, r4
10049ec2:	9a07      	ldr	r2, [sp, #28]
10049ec4:	f00a ffb1 	bl	10054e2a <Att_Send_Prp_Write_Req_Pdu>
10049ec8:	2864      	cmp	r0, #100	; 0x64
10049eca:	d008      	beq.n	10049ede <long_write_procedure+0x20e>
10049ecc:	4638      	mov	r0, r7
10049ece:	f000 fa65 	bl	1004a39c <GATT_Send_Packet>
10049ed2:	8821      	ldrh	r1, [r4, #0]
10049ed4:	4632      	mov	r2, r6
10049ed6:	2002      	movs	r0, #2
10049ed8:	f7ff fcca 	bl	10049870 <aci_att_prepare_write_resp_event_push>
10049edc:	e73c      	b.n	10049d58 <long_write_procedure+0x88>
10049ede:	2100      	movs	r1, #0
10049ee0:	4638      	mov	r0, r7
10049ee2:	f00a fdff 	bl	10054ae4 <PM_Release_Acl_Pckt>
10049ee6:	e013      	b.n	10049f10 <long_write_procedure+0x240>
10049ee8:	2220      	movs	r2, #32
10049eea:	2000      	movs	r0, #0
10049eec:	f00a fd9e 	bl	10054a2c <PM_Get_Pckt>
10049ef0:	0005      	movs	r5, r0
10049ef2:	d00d      	beq.n	10049f10 <long_write_procedure+0x240>
10049ef4:	8821      	ldrh	r1, [r4, #0]
10049ef6:	4632      	mov	r2, r6
10049ef8:	2002      	movs	r0, #2
10049efa:	f7ff fcb9 	bl	10049870 <aci_att_prepare_write_resp_event_push>
10049efe:	2201      	movs	r2, #1
10049f00:	4629      	mov	r1, r5
10049f02:	4620      	mov	r0, r4
10049f04:	f00a ff15 	bl	10054d32 <Att_Send_Exec_Write_Req_Pdu>
10049f08:	4628      	mov	r0, r5
10049f0a:	f000 fa47 	bl	1004a39c <GATT_Send_Packet>
10049f0e:	e723      	b.n	10049d58 <long_write_procedure+0x88>
10049f10:	2045      	movs	r0, #69	; 0x45
10049f12:	e728      	b.n	10049d66 <long_write_procedure+0x96>
10049f14:	20000d64 	.word	0x20000d64

10049f18 <send_gatt_event>:
10049f18:	4613      	mov	r3, r2
10049f1a:	b510      	push	{r4, lr}
10049f1c:	0702      	lsls	r2, r0, #28
10049f1e:	0f92      	lsrs	r2, r2, #30
10049f20:	d005      	beq.n	10049f2e <send_gatt_event+0x16>
10049f22:	460a      	mov	r2, r1
10049f24:	4619      	mov	r1, r3
10049f26:	2002      	movs	r0, #2
10049f28:	f7ff fd6c 	bl	10049a04 <aci_att_read_by_type_resp_event_push>
10049f2c:	bd10      	pop	{r4, pc}
10049f2e:	0682      	lsls	r2, r0, #26
10049f30:	d505      	bpl.n	10049f3e <send_gatt_event+0x26>
10049f32:	460a      	mov	r2, r1
10049f34:	4619      	mov	r1, r3
10049f36:	2002      	movs	r0, #2
10049f38:	f7ff fc5c 	bl	100497f4 <aci_att_find_info_resp_event_push>
10049f3c:	bd10      	pop	{r4, pc}
10049f3e:	0782      	lsls	r2, r0, #30
10049f40:	d505      	bpl.n	10049f4e <send_gatt_event+0x36>
10049f42:	460a      	mov	r2, r1
10049f44:	4619      	mov	r1, r3
10049f46:	2002      	movs	r0, #2
10049f48:	f7ff fc18 	bl	1004977c <aci_att_find_by_type_value_resp_event_push>
10049f4c:	bd10      	pop	{r4, pc}
10049f4e:	07c0      	lsls	r0, r0, #31
10049f50:	d0fc      	beq.n	10049f4c <send_gatt_event+0x34>
10049f52:	460a      	mov	r2, r1
10049f54:	4619      	mov	r1, r3
10049f56:	2002      	movs	r0, #2
10049f58:	f7ff fd16 	bl	10049988 <aci_att_read_by_group_type_resp_event_push>
10049f5c:	bd10      	pop	{r4, pc}

10049f5e <Build_Notif_Or_Ind>:
10049f5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10049f60:	9c06      	ldr	r4, [sp, #24]
10049f62:	461f      	mov	r7, r3
10049f64:	4615      	mov	r5, r2
10049f66:	4606      	mov	r6, r0
10049f68:	2c00      	cmp	r4, #0
10049f6a:	d013      	beq.n	10049f94 <Build_Notif_Or_Ind+0x36>
10049f6c:	68a0      	ldr	r0, [r4, #8]
10049f6e:	2202      	movs	r2, #2
10049f70:	300d      	adds	r0, #13
10049f72:	f7f6 fc06 	bl	10040782 <Osal_MemCpy>
10049f76:	1ee8      	subs	r0, r5, #3
10049f78:	b282      	uxth	r2, r0
10049f7a:	463b      	mov	r3, r7
10049f7c:	2107      	movs	r1, #7
10049f7e:	4620      	mov	r0, r4
10049f80:	f00a fe04 	bl	10054b8c <PM_Write_Pckt_Data>
10049f84:	80e5      	strh	r5, [r4, #6]
10049f86:	68a0      	ldr	r0, [r4, #8]
10049f88:	2e01      	cmp	r6, #1
10049f8a:	d005      	beq.n	10049f98 <Build_Notif_Or_Ind+0x3a>
10049f8c:	211d      	movs	r1, #29
10049f8e:	7301      	strb	r1, [r0, #12]
10049f90:	2000      	movs	r0, #0
10049f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049f94:	2047      	movs	r0, #71	; 0x47
10049f96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049f98:	211b      	movs	r1, #27
10049f9a:	e7f8      	b.n	10049f8e <Build_Notif_Or_Ind+0x30>

10049f9c <Check_For_Service_Change>:
10049f9c:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
10049f9e:	b0ff      	sub	sp, #508	; 0x1fc
10049fa0:	2401      	movs	r4, #1
10049fa2:	b08b      	sub	sp, #44	; 0x2c
10049fa4:	0260      	lsls	r0, r4, #9
10049fa6:	9005      	str	r0, [sp, #20]
10049fa8:	2700      	movs	r7, #0
10049faa:	48cc      	ldr	r0, [pc, #816]	; (1004a2dc <Check_For_Service_Change+0x340>)
10049fac:	9707      	str	r7, [sp, #28]
10049fae:	6801      	ldr	r1, [r0, #0]
10049fb0:	48cb      	ldr	r0, [pc, #812]	; (1004a2e0 <Check_For_Service_Change+0x344>)
10049fb2:	4dc9      	ldr	r5, [pc, #804]	; (1004a2d8 <Check_For_Service_Change+0x33c>)
10049fb4:	1808      	adds	r0, r1, r0
10049fb6:	9003      	str	r0, [sp, #12]
10049fb8:	988a      	ldr	r0, [sp, #552]	; 0x228
10049fba:	aa0a      	add	r2, sp, #40	; 0x28
10049fbc:	0500      	lsls	r0, r0, #20
10049fbe:	0d00      	lsrs	r0, r0, #20
10049fc0:	a905      	add	r1, sp, #20
10049fc2:	f00e f8d9 	bl	10058178 <SDB_read_peer_bonded_data>
10049fc6:	9006      	str	r0, [sp, #24]
10049fc8:	2800      	cmp	r0, #0
10049fca:	d172      	bne.n	1004a0b2 <Check_For_Service_Change+0x116>
10049fcc:	2604      	movs	r6, #4
10049fce:	a80a      	add	r0, sp, #40	; 0x28
10049fd0:	9905      	ldr	r1, [sp, #20]
10049fd2:	1842      	adds	r2, r0, r1
10049fd4:	3a20      	subs	r2, #32
10049fd6:	7fd2      	ldrb	r2, [r2, #31]
10049fd8:	2a0b      	cmp	r2, #11
10049fda:	d023      	beq.n	1004a024 <Check_For_Service_Change+0x88>
10049fdc:	2600      	movs	r6, #0
10049fde:	2000      	movs	r0, #0
10049fe0:	9004      	str	r0, [sp, #16]
10049fe2:	a80a      	add	r0, sp, #40	; 0x28
10049fe4:	1981      	adds	r1, r0, r6
10049fe6:	2202      	movs	r2, #2
10049fe8:	a801      	add	r0, sp, #4
10049fea:	9102      	str	r1, [sp, #8]
10049fec:	f7f6 fbc9 	bl	10040782 <Osal_MemCpy>
10049ff0:	4668      	mov	r0, sp
10049ff2:	8881      	ldrh	r1, [r0, #4]
10049ff4:	ab09      	add	r3, sp, #36	; 0x24
10049ff6:	aa08      	add	r2, sp, #32
10049ff8:	9803      	ldr	r0, [sp, #12]
10049ffa:	f002 f817 	bl	1004c02c <Gatt_fetch_handle>
10049ffe:	2801      	cmp	r0, #1
1004a000:	d017      	beq.n	1004a032 <Check_For_Service_Change+0x96>
1004a002:	2802      	cmp	r0, #2
1004a004:	d07e      	beq.n	1004a104 <Check_For_Service_Change+0x168>
1004a006:	4668      	mov	r0, sp
1004a008:	8880      	ldrh	r0, [r0, #4]
1004a00a:	4285      	cmp	r5, r0
1004a00c:	d300      	bcc.n	1004a010 <Check_For_Service_Change+0x74>
1004a00e:	4605      	mov	r5, r0
1004a010:	4284      	cmp	r4, r0
1004a012:	d900      	bls.n	1004a016 <Check_For_Service_Change+0x7a>
1004a014:	4620      	mov	r0, r4
1004a016:	4604      	mov	r4, r0
1004a018:	9802      	ldr	r0, [sp, #8]
1004a01a:	7880      	ldrb	r0, [r0, #2]
1004a01c:	2801      	cmp	r0, #1
1004a01e:	d072      	beq.n	1004a106 <Check_For_Service_Change+0x16a>
1004a020:	3613      	adds	r6, #19
1004a022:	e13c      	b.n	1004a29e <Check_For_Service_Change+0x302>
1004a024:	1e49      	subs	r1, r1, #1
1004a026:	1e76      	subs	r6, r6, #1
1004a028:	0436      	lsls	r6, r6, #16
1004a02a:	9105      	str	r1, [sp, #20]
1004a02c:	0c36      	lsrs	r6, r6, #16
1004a02e:	d1cf      	bne.n	10049fd0 <Check_For_Service_Change+0x34>
1004a030:	e7d5      	b.n	10049fde <Check_For_Service_Change+0x42>
1004a032:	9808      	ldr	r0, [sp, #32]
1004a034:	9000      	str	r0, [sp, #0]
1004a036:	2f00      	cmp	r7, #0
1004a038:	d166      	bne.n	1004a108 <Check_For_Service_Change+0x16c>
1004a03a:	9900      	ldr	r1, [sp, #0]
1004a03c:	2202      	movs	r2, #2
1004a03e:	3128      	adds	r1, #40	; 0x28
1004a040:	9802      	ldr	r0, [sp, #8]
1004a042:	f7f6 fba6 	bl	10040792 <Osal_MemCmp>
1004a046:	2800      	cmp	r0, #0
1004a048:	d11e      	bne.n	1004a088 <Check_For_Service_Change+0xec>
1004a04a:	9800      	ldr	r0, [sp, #0]
1004a04c:	3020      	adds	r0, #32
1004a04e:	7b01      	ldrb	r1, [r0, #12]
1004a050:	9802      	ldr	r0, [sp, #8]
1004a052:	7880      	ldrb	r0, [r0, #2]
1004a054:	4281      	cmp	r1, r0
1004a056:	d117      	bne.n	1004a088 <Check_For_Service_Change+0xec>
1004a058:	2801      	cmp	r0, #1
1004a05a:	d108      	bne.n	1004a06e <Check_For_Service_Change+0xd2>
1004a05c:	9800      	ldr	r0, [sp, #0]
1004a05e:	9902      	ldr	r1, [sp, #8]
1004a060:	2202      	movs	r2, #2
1004a062:	3008      	adds	r0, #8
1004a064:	1cc9      	adds	r1, r1, #3
1004a066:	f7f6 fb94 	bl	10040792 <Osal_MemCmp>
1004a06a:	2800      	cmp	r0, #0
1004a06c:	d015      	beq.n	1004a09a <Check_For_Service_Change+0xfe>
1004a06e:	9802      	ldr	r0, [sp, #8]
1004a070:	7880      	ldrb	r0, [r0, #2]
1004a072:	2802      	cmp	r0, #2
1004a074:	d108      	bne.n	1004a088 <Check_For_Service_Change+0xec>
1004a076:	9800      	ldr	r0, [sp, #0]
1004a078:	9902      	ldr	r1, [sp, #8]
1004a07a:	2210      	movs	r2, #16
1004a07c:	3008      	adds	r0, #8
1004a07e:	1cc9      	adds	r1, r1, #3
1004a080:	f7f6 fb87 	bl	10040792 <Osal_MemCmp>
1004a084:	2800      	cmp	r0, #0
1004a086:	d008      	beq.n	1004a09a <Check_For_Service_Change+0xfe>
1004a088:	9800      	ldr	r0, [sp, #0]
1004a08a:	8d00      	ldrh	r0, [r0, #40]	; 0x28
1004a08c:	42a8      	cmp	r0, r5
1004a08e:	d800      	bhi.n	1004a092 <Check_For_Service_Change+0xf6>
1004a090:	4605      	mov	r5, r0
1004a092:	42a0      	cmp	r0, r4
1004a094:	d200      	bcs.n	1004a098 <Check_For_Service_Change+0xfc>
1004a096:	4620      	mov	r0, r4
1004a098:	4604      	mov	r4, r0
1004a09a:	9902      	ldr	r1, [sp, #8]
1004a09c:	a80a      	add	r0, sp, #40	; 0x28
1004a09e:	7889      	ldrb	r1, [r1, #2]
1004a0a0:	2901      	cmp	r1, #1
1004a0a2:	d007      	beq.n	1004a0b4 <Check_For_Service_Change+0x118>
1004a0a4:	3613      	adds	r6, #19
1004a0a6:	9905      	ldr	r1, [sp, #20]
1004a0a8:	b2b6      	uxth	r6, r6
1004a0aa:	428e      	cmp	r6, r1
1004a0ac:	d304      	bcc.n	1004a0b8 <Check_For_Service_Change+0x11c>
1004a0ae:	2701      	movs	r7, #1
1004a0b0:	e007      	b.n	1004a0c2 <Check_For_Service_Change+0x126>
1004a0b2:	e106      	b.n	1004a2c2 <Check_For_Service_Change+0x326>
1004a0b4:	1d76      	adds	r6, r6, #5
1004a0b6:	e7f6      	b.n	1004a0a6 <Check_For_Service_Change+0x10a>
1004a0b8:	1981      	adds	r1, r0, r6
1004a0ba:	2202      	movs	r2, #2
1004a0bc:	a801      	add	r0, sp, #4
1004a0be:	f7f6 fb60 	bl	10040782 <Osal_MemCpy>
1004a0c2:	9903      	ldr	r1, [sp, #12]
1004a0c4:	9800      	ldr	r0, [sp, #0]
1004a0c6:	3108      	adds	r1, #8
1004a0c8:	468e      	mov	lr, r1
1004a0ca:	e02f      	b.n	1004a12c <Check_For_Service_Change+0x190>
1004a0cc:	4684      	mov	ip, r0
1004a0ce:	4669      	mov	r1, sp
1004a0d0:	6a02      	ldr	r2, [r0, #32]
1004a0d2:	888b      	ldrh	r3, [r1, #4]
1004a0d4:	3020      	adds	r0, #32
1004a0d6:	e00d      	b.n	1004a0f4 <Check_For_Service_Change+0x158>
1004a0d8:	8b91      	ldrh	r1, [r2, #28]
1004a0da:	4299      	cmp	r1, r3
1004a0dc:	d303      	bcc.n	1004a0e6 <Check_For_Service_Change+0x14a>
1004a0de:	2f01      	cmp	r7, #1
1004a0e0:	d17e      	bne.n	1004a1e0 <Check_For_Service_Change+0x244>
1004a0e2:	4299      	cmp	r1, r3
1004a0e4:	d97c      	bls.n	1004a1e0 <Check_For_Service_Change+0x244>
1004a0e6:	42a9      	cmp	r1, r5
1004a0e8:	d800      	bhi.n	1004a0ec <Check_For_Service_Change+0x150>
1004a0ea:	460d      	mov	r5, r1
1004a0ec:	42a1      	cmp	r1, r4
1004a0ee:	d300      	bcc.n	1004a0f2 <Check_For_Service_Change+0x156>
1004a0f0:	460c      	mov	r4, r1
1004a0f2:	6812      	ldr	r2, [r2, #0]
1004a0f4:	4282      	cmp	r2, r0
1004a0f6:	d1ef      	bne.n	1004a0d8 <Check_For_Service_Change+0x13c>
1004a0f8:	9804      	ldr	r0, [sp, #16]
1004a0fa:	2800      	cmp	r0, #0
1004a0fc:	d104      	bne.n	1004a108 <Check_For_Service_Change+0x16c>
1004a0fe:	4660      	mov	r0, ip
1004a100:	6800      	ldr	r0, [r0, #0]
1004a102:	e002      	b.n	1004a10a <Check_For_Service_Change+0x16e>
1004a104:	e015      	b.n	1004a132 <Check_For_Service_Change+0x196>
1004a106:	e0bf      	b.n	1004a288 <Check_For_Service_Change+0x2ec>
1004a108:	e08a      	b.n	1004a220 <Check_For_Service_Change+0x284>
1004a10a:	4570      	cmp	r0, lr
1004a10c:	d00e      	beq.n	1004a12c <Check_For_Service_Change+0x190>
1004a10e:	8d01      	ldrh	r1, [r0, #40]	; 0x28
1004a110:	4299      	cmp	r1, r3
1004a112:	d303      	bcc.n	1004a11c <Check_For_Service_Change+0x180>
1004a114:	2f01      	cmp	r7, #1
1004a116:	d109      	bne.n	1004a12c <Check_For_Service_Change+0x190>
1004a118:	4299      	cmp	r1, r3
1004a11a:	d907      	bls.n	1004a12c <Check_For_Service_Change+0x190>
1004a11c:	428d      	cmp	r5, r1
1004a11e:	d300      	bcc.n	1004a122 <Check_For_Service_Change+0x186>
1004a120:	460d      	mov	r5, r1
1004a122:	428c      	cmp	r4, r1
1004a124:	d800      	bhi.n	1004a128 <Check_For_Service_Change+0x18c>
1004a126:	460c      	mov	r4, r1
1004a128:	2f01      	cmp	r7, #1
1004a12a:	d159      	bne.n	1004a1e0 <Check_For_Service_Change+0x244>
1004a12c:	4570      	cmp	r0, lr
1004a12e:	d1cd      	bne.n	1004a0cc <Check_For_Service_Change+0x130>
1004a130:	e0ba      	b.n	1004a2a8 <Check_For_Service_Change+0x30c>
1004a132:	9808      	ldr	r0, [sp, #32]
1004a134:	9000      	str	r0, [sp, #0]
1004a136:	2f00      	cmp	r7, #0
1004a138:	d172      	bne.n	1004a220 <Check_For_Service_Change+0x284>
1004a13a:	9900      	ldr	r1, [sp, #0]
1004a13c:	2202      	movs	r2, #2
1004a13e:	311c      	adds	r1, #28
1004a140:	9802      	ldr	r0, [sp, #8]
1004a142:	f7f6 fb26 	bl	10040792 <Osal_MemCmp>
1004a146:	2800      	cmp	r0, #0
1004a148:	d11e      	bne.n	1004a188 <Check_For_Service_Change+0x1ec>
1004a14a:	9800      	ldr	r0, [sp, #0]
1004a14c:	3020      	adds	r0, #32
1004a14e:	78c1      	ldrb	r1, [r0, #3]
1004a150:	9802      	ldr	r0, [sp, #8]
1004a152:	7880      	ldrb	r0, [r0, #2]
1004a154:	4281      	cmp	r1, r0
1004a156:	d117      	bne.n	1004a188 <Check_For_Service_Change+0x1ec>
1004a158:	2801      	cmp	r0, #1
1004a15a:	d108      	bne.n	1004a16e <Check_For_Service_Change+0x1d2>
1004a15c:	9800      	ldr	r0, [sp, #0]
1004a15e:	9902      	ldr	r1, [sp, #8]
1004a160:	2202      	movs	r2, #2
1004a162:	3008      	adds	r0, #8
1004a164:	1cc9      	adds	r1, r1, #3
1004a166:	f7f6 fb14 	bl	10040792 <Osal_MemCmp>
1004a16a:	2800      	cmp	r0, #0
1004a16c:	d01a      	beq.n	1004a1a4 <Check_For_Service_Change+0x208>
1004a16e:	9802      	ldr	r0, [sp, #8]
1004a170:	7880      	ldrb	r0, [r0, #2]
1004a172:	2802      	cmp	r0, #2
1004a174:	d108      	bne.n	1004a188 <Check_For_Service_Change+0x1ec>
1004a176:	9800      	ldr	r0, [sp, #0]
1004a178:	9902      	ldr	r1, [sp, #8]
1004a17a:	2210      	movs	r2, #16
1004a17c:	3008      	adds	r0, #8
1004a17e:	1cc9      	adds	r1, r1, #3
1004a180:	f7f6 fb07 	bl	10040792 <Osal_MemCmp>
1004a184:	2800      	cmp	r0, #0
1004a186:	d00d      	beq.n	1004a1a4 <Check_For_Service_Change+0x208>
1004a188:	9800      	ldr	r0, [sp, #0]
1004a18a:	8b80      	ldrh	r0, [r0, #28]
1004a18c:	42a8      	cmp	r0, r5
1004a18e:	d800      	bhi.n	1004a192 <Check_For_Service_Change+0x1f6>
1004a190:	4605      	mov	r5, r0
1004a192:	42a0      	cmp	r0, r4
1004a194:	d200      	bcs.n	1004a198 <Check_For_Service_Change+0x1fc>
1004a196:	4620      	mov	r0, r4
1004a198:	4604      	mov	r4, r0
1004a19a:	9802      	ldr	r0, [sp, #8]
1004a19c:	7880      	ldrb	r0, [r0, #2]
1004a19e:	2801      	cmp	r0, #1
1004a1a0:	d026      	beq.n	1004a1f0 <Check_For_Service_Change+0x254>
1004a1a2:	e003      	b.n	1004a1ac <Check_For_Service_Change+0x210>
1004a1a4:	9802      	ldr	r0, [sp, #8]
1004a1a6:	7880      	ldrb	r0, [r0, #2]
1004a1a8:	2801      	cmp	r0, #1
1004a1aa:	d005      	beq.n	1004a1b8 <Check_For_Service_Change+0x21c>
1004a1ac:	3613      	adds	r6, #19
1004a1ae:	9807      	ldr	r0, [sp, #28]
1004a1b0:	b2b6      	uxth	r6, r6
1004a1b2:	2801      	cmp	r0, #1
1004a1b4:	d01e      	beq.n	1004a1f4 <Check_For_Service_Change+0x258>
1004a1b6:	e021      	b.n	1004a1fc <Check_For_Service_Change+0x260>
1004a1b8:	9800      	ldr	r0, [sp, #0]
1004a1ba:	494a      	ldr	r1, [pc, #296]	; (1004a2e4 <Check_For_Service_Change+0x348>)
1004a1bc:	8900      	ldrh	r0, [r0, #8]
1004a1be:	4288      	cmp	r0, r1
1004a1c0:	d116      	bne.n	1004a1f0 <Check_For_Service_Change+0x254>
1004a1c2:	988a      	ldr	r0, [sp, #552]	; 0x228
1004a1c4:	f7fe f9ac 	bl	10048520 <Find_Gatt_Client>
1004a1c8:	4601      	mov	r1, r0
1004a1ca:	9800      	ldr	r0, [sp, #0]
1004a1cc:	f000 f88c 	bl	1004a2e8 <Find_Attr_Index>
1004a1d0:	9900      	ldr	r1, [sp, #0]
1004a1d2:	8c09      	ldrh	r1, [r1, #32]
1004a1d4:	4348      	muls	r0, r1
1004a1d6:	9900      	ldr	r1, [sp, #0]
1004a1d8:	6989      	ldr	r1, [r1, #24]
1004a1da:	1840      	adds	r0, r0, r1
1004a1dc:	2202      	movs	r2, #2
1004a1de:	e000      	b.n	1004a1e2 <Check_For_Service_Change+0x246>
1004a1e0:	e038      	b.n	1004a254 <Check_For_Service_Change+0x2b8>
1004a1e2:	9902      	ldr	r1, [sp, #8]
1004a1e4:	1d49      	adds	r1, r1, #5
1004a1e6:	f7f6 facc 	bl	10040782 <Osal_MemCpy>
1004a1ea:	2001      	movs	r0, #1
1004a1ec:	9007      	str	r0, [sp, #28]
1004a1ee:	e7d4      	b.n	1004a19a <Check_For_Service_Change+0x1fe>
1004a1f0:	1d76      	adds	r6, r6, #5
1004a1f2:	e7dc      	b.n	1004a1ae <Check_For_Service_Change+0x212>
1004a1f4:	1cb6      	adds	r6, r6, #2
1004a1f6:	2000      	movs	r0, #0
1004a1f8:	b2b6      	uxth	r6, r6
1004a1fa:	9007      	str	r0, [sp, #28]
1004a1fc:	9805      	ldr	r0, [sp, #20]
1004a1fe:	4286      	cmp	r6, r0
1004a200:	d301      	bcc.n	1004a206 <Check_For_Service_Change+0x26a>
1004a202:	2701      	movs	r7, #1
1004a204:	e005      	b.n	1004a212 <Check_For_Service_Change+0x276>
1004a206:	a80a      	add	r0, sp, #40	; 0x28
1004a208:	1981      	adds	r1, r0, r6
1004a20a:	2202      	movs	r2, #2
1004a20c:	a801      	add	r0, sp, #4
1004a20e:	f7f6 fab8 	bl	10040782 <Osal_MemCpy>
1004a212:	9a03      	ldr	r2, [sp, #12]
1004a214:	9900      	ldr	r1, [sp, #0]
1004a216:	3208      	adds	r2, #8
1004a218:	9809      	ldr	r0, [sp, #36]	; 0x24
1004a21a:	6809      	ldr	r1, [r1, #0]
1004a21c:	4694      	mov	ip, r2
1004a21e:	e030      	b.n	1004a282 <Check_For_Service_Change+0x2e6>
1004a220:	e01a      	b.n	1004a258 <Check_For_Service_Change+0x2bc>
1004a222:	4686      	mov	lr, r0
1004a224:	466a      	mov	r2, sp
1004a226:	8893      	ldrh	r3, [r2, #4]
1004a228:	3020      	adds	r0, #32
1004a22a:	e00d      	b.n	1004a248 <Check_For_Service_Change+0x2ac>
1004a22c:	8b8a      	ldrh	r2, [r1, #28]
1004a22e:	429a      	cmp	r2, r3
1004a230:	d303      	bcc.n	1004a23a <Check_For_Service_Change+0x29e>
1004a232:	2f01      	cmp	r7, #1
1004a234:	d10e      	bne.n	1004a254 <Check_For_Service_Change+0x2b8>
1004a236:	429a      	cmp	r2, r3
1004a238:	d90c      	bls.n	1004a254 <Check_For_Service_Change+0x2b8>
1004a23a:	42aa      	cmp	r2, r5
1004a23c:	d800      	bhi.n	1004a240 <Check_For_Service_Change+0x2a4>
1004a23e:	4615      	mov	r5, r2
1004a240:	42a2      	cmp	r2, r4
1004a242:	d300      	bcc.n	1004a246 <Check_For_Service_Change+0x2aa>
1004a244:	4614      	mov	r4, r2
1004a246:	6809      	ldr	r1, [r1, #0]
1004a248:	4281      	cmp	r1, r0
1004a24a:	d1ef      	bne.n	1004a22c <Check_For_Service_Change+0x290>
1004a24c:	9804      	ldr	r0, [sp, #16]
1004a24e:	2800      	cmp	r0, #0
1004a250:	d12a      	bne.n	1004a2a8 <Check_For_Service_Change+0x30c>
1004a252:	e002      	b.n	1004a25a <Check_For_Service_Change+0x2be>
1004a254:	2001      	movs	r0, #1
1004a256:	9004      	str	r0, [sp, #16]
1004a258:	e026      	b.n	1004a2a8 <Check_For_Service_Change+0x30c>
1004a25a:	4670      	mov	r0, lr
1004a25c:	6800      	ldr	r0, [r0, #0]
1004a25e:	4560      	cmp	r0, ip
1004a260:	d00f      	beq.n	1004a282 <Check_For_Service_Change+0x2e6>
1004a262:	8d02      	ldrh	r2, [r0, #40]	; 0x28
1004a264:	6a01      	ldr	r1, [r0, #32]
1004a266:	429a      	cmp	r2, r3
1004a268:	d303      	bcc.n	1004a272 <Check_For_Service_Change+0x2d6>
1004a26a:	2f01      	cmp	r7, #1
1004a26c:	d109      	bne.n	1004a282 <Check_For_Service_Change+0x2e6>
1004a26e:	429a      	cmp	r2, r3
1004a270:	d907      	bls.n	1004a282 <Check_For_Service_Change+0x2e6>
1004a272:	4295      	cmp	r5, r2
1004a274:	d300      	bcc.n	1004a278 <Check_For_Service_Change+0x2dc>
1004a276:	4615      	mov	r5, r2
1004a278:	4294      	cmp	r4, r2
1004a27a:	d800      	bhi.n	1004a27e <Check_For_Service_Change+0x2e2>
1004a27c:	4614      	mov	r4, r2
1004a27e:	2f01      	cmp	r7, #1
1004a280:	d1e8      	bne.n	1004a254 <Check_For_Service_Change+0x2b8>
1004a282:	4560      	cmp	r0, ip
1004a284:	d1cd      	bne.n	1004a222 <Check_For_Service_Change+0x286>
1004a286:	e00f      	b.n	1004a2a8 <Check_For_Service_Change+0x30c>
1004a288:	9802      	ldr	r0, [sp, #8]
1004a28a:	78c0      	ldrb	r0, [r0, #3]
1004a28c:	2802      	cmp	r0, #2
1004a28e:	d105      	bne.n	1004a29c <Check_For_Service_Change+0x300>
1004a290:	9802      	ldr	r0, [sp, #8]
1004a292:	7900      	ldrb	r0, [r0, #4]
1004a294:	2829      	cmp	r0, #41	; 0x29
1004a296:	d101      	bne.n	1004a29c <Check_For_Service_Change+0x300>
1004a298:	1cb6      	adds	r6, r6, #2
1004a29a:	b2b6      	uxth	r6, r6
1004a29c:	1d76      	adds	r6, r6, #5
1004a29e:	9805      	ldr	r0, [sp, #20]
1004a2a0:	b2b6      	uxth	r6, r6
1004a2a2:	4286      	cmp	r6, r0
1004a2a4:	d300      	bcc.n	1004a2a8 <Check_For_Service_Change+0x30c>
1004a2a6:	2701      	movs	r7, #1
1004a2a8:	9805      	ldr	r0, [sp, #20]
1004a2aa:	1b81      	subs	r1, r0, r6
1004a2ac:	2904      	cmp	r1, #4
1004a2ae:	d302      	bcc.n	1004a2b6 <Check_For_Service_Change+0x31a>
1004a2b0:	4286      	cmp	r6, r0
1004a2b2:	d200      	bcs.n	1004a2b6 <Check_For_Service_Change+0x31a>
1004a2b4:	e693      	b.n	10049fde <Check_For_Service_Change+0x42>
1004a2b6:	9804      	ldr	r0, [sp, #16]
1004a2b8:	2800      	cmp	r0, #0
1004a2ba:	d1fb      	bne.n	1004a2b4 <Check_For_Service_Change+0x318>
1004a2bc:	42a5      	cmp	r5, r4
1004a2be:	d903      	bls.n	1004a2c8 <Check_For_Service_Change+0x32c>
1004a2c0:	9806      	ldr	r0, [sp, #24]
1004a2c2:	b07f      	add	sp, #508	; 0x1fc
1004a2c4:	b00c      	add	sp, #48	; 0x30
1004a2c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004a2c8:	4622      	mov	r2, r4
1004a2ca:	4629      	mov	r1, r5
1004a2cc:	988a      	ldr	r0, [sp, #552]	; 0x228
1004a2ce:	f001 fef3 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004a2d2:	9006      	str	r0, [sp, #24]
1004a2d4:	e7f5      	b.n	1004a2c2 <Check_For_Service_Change+0x326>
1004a2d6:	0000      	.short	0x0000
1004a2d8:	0000ffff 	.word	0x0000ffff
1004a2dc:	20000d64 	.word	0x20000d64
1004a2e0:	0000072c 	.word	0x0000072c
1004a2e4:	00002902 	.word	0x00002902

1004a2e8 <Find_Attr_Index>:
1004a2e8:	b530      	push	{r4, r5, lr}
1004a2ea:	4602      	mov	r2, r0
1004a2ec:	2323      	movs	r3, #35	; 0x23
1004a2ee:	5c9b      	ldrb	r3, [r3, r2]
1004a2f0:	2000      	movs	r0, #0
1004a2f2:	2b01      	cmp	r3, #1
1004a2f4:	d11a      	bne.n	1004a32c <Find_Attr_Index+0x44>
1004a2f6:	8912      	ldrh	r2, [r2, #8]
1004a2f8:	4b0d      	ldr	r3, [pc, #52]	; (1004a330 <Find_Attr_Index+0x48>)
1004a2fa:	429a      	cmp	r2, r3
1004a2fc:	d116      	bne.n	1004a32c <Find_Attr_Index+0x44>
1004a2fe:	4a0d      	ldr	r2, [pc, #52]	; (1004a334 <Find_Attr_Index+0x4c>)
1004a300:	2309      	movs	r3, #9
1004a302:	6812      	ldr	r2, [r2, #0]
1004a304:	021b      	lsls	r3, r3, #8
1004a306:	18d3      	adds	r3, r2, r3
1004a308:	32a0      	adds	r2, #160	; 0xa0
1004a30a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
1004a30c:	7b12      	ldrb	r2, [r2, #12]
1004a30e:	e00a      	b.n	1004a326 <Find_Attr_Index+0x3e>
1004a310:	0145      	lsls	r5, r0, #5
1004a312:	880c      	ldrh	r4, [r1, #0]
1004a314:	5b5d      	ldrh	r5, [r3, r5]
1004a316:	0524      	lsls	r4, r4, #20
1004a318:	052d      	lsls	r5, r5, #20
1004a31a:	0d24      	lsrs	r4, r4, #20
1004a31c:	0d2d      	lsrs	r5, r5, #20
1004a31e:	42ac      	cmp	r4, r5
1004a320:	d004      	beq.n	1004a32c <Find_Attr_Index+0x44>
1004a322:	1c40      	adds	r0, r0, #1
1004a324:	b2c0      	uxtb	r0, r0
1004a326:	4282      	cmp	r2, r0
1004a328:	d8f2      	bhi.n	1004a310 <Find_Attr_Index+0x28>
1004a32a:	2000      	movs	r0, #0
1004a32c:	bd30      	pop	{r4, r5, pc}
1004a32e:	0000      	.short	0x0000
1004a330:	00002902 	.word	0x00002902
1004a334:	20000d64 	.word	0x20000d64

1004a338 <Find_Timed_Out_Connection>:
1004a338:	4906      	ldr	r1, [pc, #24]	; (1004a354 <Find_Timed_Out_Connection+0x1c>)
1004a33a:	2209      	movs	r2, #9
1004a33c:	6809      	ldr	r1, [r1, #0]
1004a33e:	0212      	lsls	r2, r2, #8
1004a340:	1889      	adds	r1, r1, r2
1004a342:	0880      	lsrs	r0, r0, #2
1004a344:	6b49      	ldr	r1, [r1, #52]	; 0x34
1004a346:	0140      	lsls	r0, r0, #5
1004a348:	1808      	adds	r0, r1, r0
1004a34a:	8801      	ldrh	r1, [r0, #0]
1004a34c:	2900      	cmp	r1, #0
1004a34e:	d100      	bne.n	1004a352 <Find_Timed_Out_Connection+0x1a>
1004a350:	2000      	movs	r0, #0
1004a352:	4770      	bx	lr
1004a354:	20000d64 	.word	0x20000d64

1004a358 <GATT_Connection_Complete_Handler>:
1004a358:	b510      	push	{r4, lr}
1004a35a:	4604      	mov	r4, r0
1004a35c:	2002      	movs	r0, #2
1004a35e:	f000 f833 	bl	1004a3c8 <GATT_Server_Set_Flag>
1004a362:	480d      	ldr	r0, [pc, #52]	; (1004a398 <GATT_Connection_Complete_Handler+0x40>)
1004a364:	2100      	movs	r1, #0
1004a366:	6802      	ldr	r2, [r0, #0]
1004a368:	2009      	movs	r0, #9
1004a36a:	0200      	lsls	r0, r0, #8
1004a36c:	1810      	adds	r0, r2, r0
1004a36e:	32a0      	adds	r2, #160	; 0xa0
1004a370:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004a372:	7b10      	ldrb	r0, [r2, #12]
1004a374:	e005      	b.n	1004a382 <GATT_Connection_Complete_Handler+0x2a>
1004a376:	014a      	lsls	r2, r1, #5
1004a378:	5a9a      	ldrh	r2, [r3, r2]
1004a37a:	2a00      	cmp	r2, #0
1004a37c:	d004      	beq.n	1004a388 <GATT_Connection_Complete_Handler+0x30>
1004a37e:	1c49      	adds	r1, r1, #1
1004a380:	b2c9      	uxtb	r1, r1
1004a382:	4288      	cmp	r0, r1
1004a384:	d8f7      	bhi.n	1004a376 <GATT_Connection_Complete_Handler+0x1e>
1004a386:	bd10      	pop	{r4, pc}
1004a388:	0148      	lsls	r0, r1, #5
1004a38a:	521c      	strh	r4, [r3, r0]
1004a38c:	18c0      	adds	r0, r0, r3
1004a38e:	6902      	ldr	r2, [r0, #16]
1004a390:	2104      	movs	r1, #4
1004a392:	430a      	orrs	r2, r1
1004a394:	6102      	str	r2, [r0, #16]
1004a396:	bd10      	pop	{r4, pc}
1004a398:	20000d64 	.word	0x20000d64

1004a39c <GATT_Send_Packet>:
1004a39c:	b510      	push	{r4, lr}
1004a39e:	4604      	mov	r4, r0
1004a3a0:	4601      	mov	r1, r0
1004a3a2:	2004      	movs	r0, #4
1004a3a4:	f003 fdec 	bl	1004df80 <L2C_Send_Data>
1004a3a8:	2800      	cmp	r0, #0
1004a3aa:	d008      	beq.n	1004a3be <GATT_Send_Packet+0x22>
1004a3ac:	4804      	ldr	r0, [pc, #16]	; (1004a3c0 <GATT_Send_Packet+0x24>)
1004a3ae:	4905      	ldr	r1, [pc, #20]	; (1004a3c4 <GATT_Send_Packet+0x28>)
1004a3b0:	6800      	ldr	r0, [r0, #0]
1004a3b2:	1840      	adds	r0, r0, r1
1004a3b4:	4621      	mov	r1, r4
1004a3b6:	303c      	adds	r0, #60	; 0x3c
1004a3b8:	f012 fbd8 	bl	1005cb6c <acl_list_insert_tail>
1004a3bc:	2043      	movs	r0, #67	; 0x43
1004a3be:	bd10      	pop	{r4, pc}
1004a3c0:	20000d64 	.word	0x20000d64
1004a3c4:	0000072c 	.word	0x0000072c

1004a3c8 <GATT_Server_Set_Flag>:
1004a3c8:	4904      	ldr	r1, [pc, #16]	; (1004a3dc <GATT_Server_Set_Flag+0x14>)
1004a3ca:	680a      	ldr	r2, [r1, #0]
1004a3cc:	213b      	movs	r1, #59	; 0x3b
1004a3ce:	0149      	lsls	r1, r1, #5
1004a3d0:	1851      	adds	r1, r2, r1
1004a3d2:	7d0a      	ldrb	r2, [r1, #20]
1004a3d4:	4302      	orrs	r2, r0
1004a3d6:	750a      	strb	r2, [r1, #20]
1004a3d8:	4770      	bx	lr
1004a3da:	0000      	.short	0x0000
1004a3dc:	20000d64 	.word	0x20000d64

1004a3e0 <GATT_TimeOut_Handler>:
1004a3e0:	b500      	push	{lr}
1004a3e2:	3811      	subs	r0, #17
1004a3e4:	b2c0      	uxtb	r0, r0
1004a3e6:	f7ff ffa7 	bl	1004a338 <Find_Timed_Out_Connection>
1004a3ea:	2800      	cmp	r0, #0
1004a3ec:	d004      	beq.n	1004a3f8 <GATT_TimeOut_Handler+0x18>
1004a3ee:	2201      	movs	r2, #1
1004a3f0:	6901      	ldr	r1, [r0, #16]
1004a3f2:	0552      	lsls	r2, r2, #21
1004a3f4:	4311      	orrs	r1, r2
1004a3f6:	6101      	str	r1, [r0, #16]
1004a3f8:	bd00      	pop	{pc}
	...

1004a3fc <Gatt_Add_Charac_Desc>:
1004a3fc:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004a3fe:	b097      	sub	sp, #92	; 0x5c
1004a400:	880d      	ldrh	r5, [r1, #0]
1004a402:	8848      	ldrh	r0, [r1, #2]
1004a404:	9005      	str	r0, [sp, #20]
1004a406:	1d08      	adds	r0, r1, #4
1004a408:	c81d      	ldmia	r0, {r0, r2, r3, r4}
1004a40a:	ae0d      	add	r6, sp, #52	; 0x34
1004a40c:	c61d      	stmia	r6!, {r0, r2, r3, r4}
1004a40e:	8a8c      	ldrh	r4, [r1, #20]
1004a410:	8ace      	ldrh	r6, [r1, #22]
1004a412:	7e08      	ldrb	r0, [r1, #24]
1004a414:	9013      	str	r0, [sp, #76]	; 0x4c
1004a416:	69c8      	ldr	r0, [r1, #28]
1004a418:	3120      	adds	r1, #32
1004a41a:	9001      	str	r0, [sp, #4]
1004a41c:	7808      	ldrb	r0, [r1, #0]
1004a41e:	9000      	str	r0, [sp, #0]
1004a420:	7848      	ldrb	r0, [r1, #1]
1004a422:	9004      	str	r0, [sp, #16]
1004a424:	7888      	ldrb	r0, [r1, #2]
1004a426:	9003      	str	r0, [sp, #12]
1004a428:	78c8      	ldrb	r0, [r1, #3]
1004a42a:	9002      	str	r0, [sp, #8]
1004a42c:	790f      	ldrb	r7, [r1, #4]
1004a42e:	f001 f865 	bl	1004b4fc <Gatt_Server_Db_Check>
1004a432:	2800      	cmp	r0, #0
1004a434:	d117      	bne.n	1004a466 <Gatt_Add_Charac_Desc+0x6a>
1004a436:	2001      	movs	r0, #1
1004a438:	0240      	lsls	r0, r0, #9
1004a43a:	4284      	cmp	r4, r0
1004a43c:	d85f      	bhi.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a43e:	42b4      	cmp	r4, r6
1004a440:	d85d      	bhi.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a442:	2f00      	cmp	r7, #0
1004a444:	d101      	bne.n	1004a44a <Gatt_Add_Charac_Desc+0x4e>
1004a446:	42b4      	cmp	r4, r6
1004a448:	d159      	bne.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a44a:	a914      	add	r1, sp, #80	; 0x50
1004a44c:	4628      	mov	r0, r5
1004a44e:	f001 fe1b 	bl	1004c088 <Gatt_search_service_handle>
1004a452:	2800      	cmp	r0, #0
1004a454:	d106      	bne.n	1004a464 <Gatt_Add_Charac_Desc+0x68>
1004a456:	aa15      	add	r2, sp, #84	; 0x54
1004a458:	9914      	ldr	r1, [sp, #80]	; 0x50
1004a45a:	9805      	ldr	r0, [sp, #20]
1004a45c:	f001 fe04 	bl	1004c068 <Gatt_search_handle>
1004a460:	2800      	cmp	r0, #0
1004a462:	d002      	beq.n	1004a46a <Gatt_Add_Charac_Desc+0x6e>
1004a464:	2060      	movs	r0, #96	; 0x60
1004a466:	b019      	add	sp, #100	; 0x64
1004a468:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004a46a:	9d14      	ldr	r5, [sp, #80]	; 0x50
1004a46c:	a911      	add	r1, sp, #68	; 0x44
1004a46e:	4628      	mov	r0, r5
1004a470:	3018      	adds	r0, #24
1004a472:	f00b fa05 	bl	10055880 <List_Circular_Get_Size>
1004a476:	a810      	add	r0, sp, #64	; 0x40
1004a478:	8880      	ldrh	r0, [r0, #4]
1004a47a:	2800      	cmp	r0, #0
1004a47c:	d010      	beq.n	1004a4a0 <Gatt_Add_Charac_Desc+0xa4>
1004a47e:	4628      	mov	r0, r5
1004a480:	a912      	add	r1, sp, #72	; 0x48
1004a482:	3020      	adds	r0, #32
1004a484:	f00b f9fc 	bl	10055880 <List_Circular_Get_Size>
1004a488:	a810      	add	r0, sp, #64	; 0x40
1004a48a:	8883      	ldrh	r3, [r0, #4]
1004a48c:	8900      	ldrh	r0, [r0, #8]
1004a48e:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
1004a490:	1818      	adds	r0, r3, r0
1004a492:	6a69      	ldr	r1, [r5, #36]	; 0x24
1004a494:	1810      	adds	r0, r2, r0
1004a496:	8b8a      	ldrh	r2, [r1, #28]
1004a498:	4290      	cmp	r0, r2
1004a49a:	d103      	bne.n	1004a4a4 <Gatt_Add_Charac_Desc+0xa8>
1004a49c:	2061      	movs	r0, #97	; 0x61
1004a49e:	e7e2      	b.n	1004a466 <Gatt_Add_Charac_Desc+0x6a>
1004a4a0:	2048      	movs	r0, #72	; 0x48
1004a4a2:	e7e0      	b.n	1004a466 <Gatt_Add_Charac_Desc+0x6a>
1004a4a4:	9815      	ldr	r0, [sp, #84]	; 0x54
1004a4a6:	4b2c      	ldr	r3, [pc, #176]	; (1004a558 <Gatt_Add_Charac_Desc+0x15c>)
1004a4a8:	8902      	ldrh	r2, [r0, #8]
1004a4aa:	429a      	cmp	r2, r3
1004a4ac:	d127      	bne.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4ae:	2223      	movs	r2, #35	; 0x23
1004a4b0:	5c12      	ldrb	r2, [r2, r0]
1004a4b2:	2a01      	cmp	r2, #1
1004a4b4:	d123      	bne.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4b6:	6800      	ldr	r0, [r0, #0]
1004a4b8:	6800      	ldr	r0, [r0, #0]
1004a4ba:	9016      	str	r0, [sp, #88]	; 0x58
1004a4bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004a4be:	2801      	cmp	r0, #1
1004a4c0:	d11f      	bne.n	1004a502 <Gatt_Add_Charac_Desc+0x106>
1004a4c2:	4668      	mov	r0, sp
1004a4c4:	8e80      	ldrh	r0, [r0, #52]	; 0x34
1004a4c6:	2229      	movs	r2, #41	; 0x29
1004a4c8:	0212      	lsls	r2, r2, #8
1004a4ca:	1a80      	subs	r0, r0, r2
1004a4cc:	0003      	movs	r3, r0
1004a4ce:	f002 f8ec 	bl	1004c6aa <__ARM_common_switch8>
1004a4d2:	0406      	.short	0x0406
1004a4d4:	07040418 	.word	0x07040418
1004a4d8:	180a      	.short	0x180a
1004a4da:	2c02      	cmp	r4, #2
1004a4dc:	d10f      	bne.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4de:	e010      	b.n	1004a502 <Gatt_Add_Charac_Desc+0x106>
1004a4e0:	2c07      	cmp	r4, #7
1004a4e2:	d10c      	bne.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4e4:	e00d      	b.n	1004a502 <Gatt_Add_Charac_Desc+0x106>
1004a4e6:	2c04      	cmp	r4, #4
1004a4e8:	d309      	bcc.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4ea:	07e0      	lsls	r0, r4, #31
1004a4ec:	d107      	bne.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4ee:	2f01      	cmp	r7, #1
1004a4f0:	d107      	bne.n	1004a502 <Gatt_Add_Charac_Desc+0x106>
1004a4f2:	42a6      	cmp	r6, r4
1004a4f4:	d303      	bcc.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4f6:	2e04      	cmp	r6, #4
1004a4f8:	d301      	bcc.n	1004a4fe <Gatt_Add_Charac_Desc+0x102>
1004a4fa:	07f0      	lsls	r0, r6, #31
1004a4fc:	d001      	beq.n	1004a502 <Gatt_Add_Charac_Desc+0x106>
1004a4fe:	2042      	movs	r0, #66	; 0x42
1004a500:	e7b1      	b.n	1004a466 <Gatt_Add_Charac_Desc+0x6a>
1004a502:	9802      	ldr	r0, [sp, #8]
1004a504:	900b      	str	r0, [sp, #44]	; 0x2c
1004a506:	9b03      	ldr	r3, [sp, #12]
1004a508:	9a04      	ldr	r2, [sp, #16]
1004a50a:	930a      	str	r3, [sp, #40]	; 0x28
1004a50c:	9209      	str	r2, [sp, #36]	; 0x24
1004a50e:	9800      	ldr	r0, [sp, #0]
1004a510:	9a01      	ldr	r2, [sp, #4]
1004a512:	970c      	str	r7, [sp, #48]	; 0x30
1004a514:	9008      	str	r0, [sp, #32]
1004a516:	9606      	str	r6, [sp, #24]
1004a518:	9405      	str	r4, [sp, #20]
1004a51a:	9207      	str	r2, [sp, #28]
1004a51c:	a80d      	add	r0, sp, #52	; 0x34
1004a51e:	c81d      	ldmia	r0, {r0, r2, r3, r4}
1004a520:	9001      	str	r0, [sp, #4]
1004a522:	a802      	add	r0, sp, #8
1004a524:	c01c      	stmia	r0!, {r2, r3, r4}
1004a526:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004a528:	460b      	mov	r3, r1
1004a52a:	9000      	str	r0, [sp, #0]
1004a52c:	462a      	mov	r2, r5
1004a52e:	9916      	ldr	r1, [sp, #88]	; 0x58
1004a530:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a532:	f000 f9b1 	bl	1004a898 <Gatt_Add_Descriptor>
1004a536:	2800      	cmp	r0, #0
1004a538:	d195      	bne.n	1004a466 <Gatt_Add_Charac_Desc+0x6a>
1004a53a:	4668      	mov	r0, sp
1004a53c:	4906      	ldr	r1, [pc, #24]	; (1004a558 <Gatt_Add_Charac_Desc+0x15c>)
1004a53e:	8e80      	ldrh	r0, [r0, #52]	; 0x34
1004a540:	31ff      	adds	r1, #255	; 0xff
1004a542:	4288      	cmp	r0, r1
1004a544:	d005      	beq.n	1004a552 <Gatt_Add_Charac_Desc+0x156>
1004a546:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a548:	8801      	ldrh	r1, [r0, #0]
1004a54a:	2000      	movs	r0, #0
1004a54c:	460a      	mov	r2, r1
1004a54e:	f001 fdb3 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004a552:	2000      	movs	r0, #0
1004a554:	e787      	b.n	1004a466 <Gatt_Add_Charac_Desc+0x6a>
1004a556:	0000      	.short	0x0000
1004a558:	00002803 	.word	0x00002803

1004a55c <Gatt_Add_Characteristic>:
1004a55c:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004a55e:	b0a5      	sub	sp, #148	; 0x94
1004a560:	8808      	ldrh	r0, [r1, #0]
1004a562:	901a      	str	r0, [sp, #104]	; 0x68
1004a564:	7888      	ldrb	r0, [r1, #2]
1004a566:	460c      	mov	r4, r1
1004a568:	9011      	str	r0, [sp, #68]	; 0x44
1004a56a:	2210      	movs	r2, #16
1004a56c:	1d09      	adds	r1, r1, #4
1004a56e:	a813      	add	r0, sp, #76	; 0x4c
1004a570:	f7fc f8fb 	bl	1004676a <__aeabi_memcpy>
1004a574:	8aa0      	ldrh	r0, [r4, #20]
1004a576:	9010      	str	r0, [sp, #64]	; 0x40
1004a578:	7da1      	ldrb	r1, [r4, #22]
1004a57a:	4668      	mov	r0, sp
1004a57c:	7201      	strb	r1, [r0, #8]
1004a57e:	7de0      	ldrb	r0, [r4, #23]
1004a580:	900f      	str	r0, [sp, #60]	; 0x3c
1004a582:	7e20      	ldrb	r0, [r4, #24]
1004a584:	9020      	str	r0, [sp, #128]	; 0x80
1004a586:	7e67      	ldrb	r7, [r4, #25]
1004a588:	7ea0      	ldrb	r0, [r4, #26]
1004a58a:	901f      	str	r0, [sp, #124]	; 0x7c
1004a58c:	2000      	movs	r0, #0
1004a58e:	4606      	mov	r6, r0
1004a590:	4601      	mov	r1, r0
1004a592:	9012      	str	r0, [sp, #72]	; 0x48
1004a594:	a820      	add	r0, sp, #128	; 0x80
1004a596:	8101      	strh	r1, [r0, #8]
1004a598:	200f      	movs	r0, #15
1004a59a:	4cbb      	ldr	r4, [pc, #748]	; (1004a888 <Gatt_Add_Characteristic+0x32c>)
1004a59c:	9023      	str	r0, [sp, #140]	; 0x8c
1004a59e:	49bb      	ldr	r1, [pc, #748]	; (1004a88c <Gatt_Add_Characteristic+0x330>)
1004a5a0:	6820      	ldr	r0, [r4, #0]
1004a5a2:	1840      	adds	r0, r0, r1
1004a5a4:	9019      	str	r0, [sp, #100]	; 0x64
1004a5a6:	f000 ffa9 	bl	1004b4fc <Gatt_Server_Db_Check>
1004a5aa:	2800      	cmp	r0, #0
1004a5ac:	d10b      	bne.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a5ae:	2101      	movs	r1, #1
1004a5b0:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a5b2:	0249      	lsls	r1, r1, #9
1004a5b4:	4288      	cmp	r0, r1
1004a5b6:	d85f      	bhi.n	1004a678 <Gatt_Add_Characteristic+0x11c>
1004a5b8:	a921      	add	r1, sp, #132	; 0x84
1004a5ba:	981a      	ldr	r0, [sp, #104]	; 0x68
1004a5bc:	f001 fd64 	bl	1004c088 <Gatt_search_service_handle>
1004a5c0:	2800      	cmp	r0, #0
1004a5c2:	d002      	beq.n	1004a5ca <Gatt_Add_Characteristic+0x6e>
1004a5c4:	2060      	movs	r0, #96	; 0x60
1004a5c6:	b027      	add	sp, #156	; 0x9c
1004a5c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004a5ca:	9821      	ldr	r0, [sp, #132]	; 0x84
1004a5cc:	9017      	str	r0, [sp, #92]	; 0x5c
1004a5ce:	f00b f8d7 	bl	10055780 <Get_GAP_Handle>
1004a5d2:	991a      	ldr	r1, [sp, #104]	; 0x68
1004a5d4:	4288      	cmp	r0, r1
1004a5d6:	d10c      	bne.n	1004a5f2 <Gatt_Add_Characteristic+0x96>
1004a5d8:	a802      	add	r0, sp, #8
1004a5da:	9001      	str	r0, [sp, #4]
1004a5dc:	9816      	ldr	r0, [sp, #88]	; 0x58
1004a5de:	9000      	str	r0, [sp, #0]
1004a5e0:	ad13      	add	r5, sp, #76	; 0x4c
1004a5e2:	cd0e      	ldmia	r5!, {r1, r2, r3}
1004a5e4:	9811      	ldr	r0, [sp, #68]	; 0x44
1004a5e6:	f00b f827 	bl	10055638 <GAP_Notify_Add_Charac>
1004a5ea:	2800      	cmp	r0, #0
1004a5ec:	d001      	beq.n	1004a5f2 <Gatt_Add_Characteristic+0x96>
1004a5ee:	2063      	movs	r0, #99	; 0x63
1004a5f0:	e7e9      	b.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a5f2:	4668      	mov	r0, sp
1004a5f4:	7a01      	ldrb	r1, [r0, #8]
1004a5f6:	0688      	lsls	r0, r1, #26
1004a5f8:	0f80      	lsrs	r0, r0, #30
1004a5fa:	d005      	beq.n	1004a608 <Gatt_Add_Characteristic+0xac>
1004a5fc:	2001      	movs	r0, #1
1004a5fe:	9012      	str	r0, [sp, #72]	; 0x48
1004a600:	6820      	ldr	r0, [r4, #0]
1004a602:	30a0      	adds	r0, #160	; 0xa0
1004a604:	7b00      	ldrb	r0, [r0, #12]
1004a606:	0046      	lsls	r6, r0, #1
1004a608:	07c8      	lsls	r0, r1, #31
1004a60a:	d003      	beq.n	1004a614 <Gatt_Add_Characteristic+0xb8>
1004a60c:	9812      	ldr	r0, [sp, #72]	; 0x48
1004a60e:	1c40      	adds	r0, r0, #1
1004a610:	1cb6      	adds	r6, r6, #2
1004a612:	9012      	str	r0, [sp, #72]	; 0x48
1004a614:	0608      	lsls	r0, r1, #24
1004a616:	d503      	bpl.n	1004a620 <Gatt_Add_Characteristic+0xc4>
1004a618:	9812      	ldr	r0, [sp, #72]	; 0x48
1004a61a:	1c40      	adds	r0, r0, #1
1004a61c:	1cb6      	adds	r6, r6, #2
1004a61e:	9012      	str	r0, [sp, #72]	; 0x48
1004a620:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a622:	a90d      	add	r1, sp, #52	; 0x34
1004a624:	3018      	adds	r0, #24
1004a626:	901d      	str	r0, [sp, #116]	; 0x74
1004a628:	f00b f92a 	bl	10055880 <List_Circular_Get_Size>
1004a62c:	4668      	mov	r0, sp
1004a62e:	9c12      	ldr	r4, [sp, #72]	; 0x48
1004a630:	8e80      	ldrh	r0, [r0, #52]	; 0x34
1004a632:	1ca4      	adds	r4, r4, #2
1004a634:	42a0      	cmp	r0, r4
1004a636:	d337      	bcc.n	1004a6a8 <Gatt_Add_Characteristic+0x14c>
1004a638:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a63a:	a90e      	add	r1, sp, #56	; 0x38
1004a63c:	3020      	adds	r0, #32
1004a63e:	9001      	str	r0, [sp, #4]
1004a640:	f00b f91e 	bl	10055880 <List_Circular_Get_Size>
1004a644:	4668      	mov	r0, sp
1004a646:	8f01      	ldrh	r1, [r0, #56]	; 0x38
1004a648:	2900      	cmp	r1, #0
1004a64a:	d00d      	beq.n	1004a668 <Gatt_Add_Characteristic+0x10c>
1004a64c:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a64e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
1004a650:	466b      	mov	r3, sp
1004a652:	6a40      	ldr	r0, [r0, #36]	; 0x24
1004a654:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
1004a656:	8d12      	ldrh	r2, [r2, #40]	; 0x28
1004a658:	1859      	adds	r1, r3, r1
1004a65a:	8b80      	ldrh	r0, [r0, #28]
1004a65c:	1851      	adds	r1, r2, r1
1004a65e:	1a08      	subs	r0, r1, r0
1004a660:	42a0      	cmp	r0, r4
1004a662:	d201      	bcs.n	1004a668 <Gatt_Add_Characteristic+0x10c>
1004a664:	2061      	movs	r0, #97	; 0x61
1004a666:	e7ae      	b.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a668:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a66a:	6984      	ldr	r4, [r0, #24]
1004a66c:	9811      	ldr	r0, [sp, #68]	; 0x44
1004a66e:	6825      	ldr	r5, [r4, #0]
1004a670:	2801      	cmp	r0, #1
1004a672:	d003      	beq.n	1004a67c <Gatt_Add_Characteristic+0x120>
1004a674:	2802      	cmp	r0, #2
1004a676:	d003      	beq.n	1004a680 <Gatt_Add_Characteristic+0x124>
1004a678:	2042      	movs	r0, #66	; 0x42
1004a67a:	e7a4      	b.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a67c:	2005      	movs	r0, #5
1004a67e:	e000      	b.n	1004a682 <Gatt_Add_Characteristic+0x126>
1004a680:	2013      	movs	r0, #19
1004a682:	83e0      	strh	r0, [r4, #30]
1004a684:	462a      	mov	r2, r5
1004a686:	4639      	mov	r1, r7
1004a688:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004a68a:	f00b f88b 	bl	100557a4 <Check_Encry_Key_Size>
1004a68e:	2842      	cmp	r0, #66	; 0x42
1004a690:	d099      	beq.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a692:	9f19      	ldr	r7, [sp, #100]	; 0x64
1004a694:	8be2      	ldrh	r2, [r4, #30]
1004a696:	3740      	adds	r7, #64	; 0x40
1004a698:	8b78      	ldrh	r0, [r7, #26]
1004a69a:	8b39      	ldrh	r1, [r7, #24]
1004a69c:	1a41      	subs	r1, r0, r1
1004a69e:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a6a0:	1810      	adds	r0, r2, r0
1004a6a2:	1980      	adds	r0, r0, r6
1004a6a4:	4281      	cmp	r1, r0
1004a6a6:	da01      	bge.n	1004a6ac <Gatt_Add_Characteristic+0x150>
1004a6a8:	2048      	movs	r0, #72	; 0x48
1004a6aa:	e78c      	b.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a6ac:	a90e      	add	r1, sp, #56	; 0x38
1004a6ae:	9801      	ldr	r0, [sp, #4]
1004a6b0:	f00b f8e6 	bl	10055880 <List_Circular_Get_Size>
1004a6b4:	4668      	mov	r0, sp
1004a6b6:	8f00      	ldrh	r0, [r0, #56]	; 0x38
1004a6b8:	2800      	cmp	r0, #0
1004a6ba:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004a6bc:	d002      	beq.n	1004a6c4 <Gatt_Add_Characteristic+0x168>
1004a6be:	6a40      	ldr	r0, [r0, #36]	; 0x24
1004a6c0:	8b80      	ldrh	r0, [r0, #28]
1004a6c2:	e000      	b.n	1004a6c6 <Gatt_Add_Characteristic+0x16a>
1004a6c4:	8d00      	ldrh	r0, [r0, #40]	; 0x28
1004a6c6:	9925      	ldr	r1, [sp, #148]	; 0x94
1004a6c8:	1c40      	adds	r0, r0, #1
1004a6ca:	8008      	strh	r0, [r1, #0]
1004a6cc:	9825      	ldr	r0, [sp, #148]	; 0x94
1004a6ce:	2101      	movs	r1, #1
1004a6d0:	8800      	ldrh	r0, [r0, #0]
1004a6d2:	83a0      	strh	r0, [r4, #28]
1004a6d4:	9825      	ldr	r0, [sp, #148]	; 0x94
1004a6d6:	2202      	movs	r2, #2
1004a6d8:	8800      	ldrh	r0, [r0, #0]
1004a6da:	1c40      	adds	r0, r0, #1
1004a6dc:	83a8      	strh	r0, [r5, #28]
1004a6de:	486c      	ldr	r0, [pc, #432]	; (1004a890 <Gatt_Add_Characteristic+0x334>)
1004a6e0:	8120      	strh	r0, [r4, #8]
1004a6e2:	4620      	mov	r0, r4
1004a6e4:	3020      	adds	r0, #32
1004a6e6:	9017      	str	r0, [sp, #92]	; 0x5c
1004a6e8:	70c1      	strb	r1, [r0, #3]
1004a6ea:	2100      	movs	r1, #0
1004a6ec:	7081      	strb	r1, [r0, #2]
1004a6ee:	7181      	strb	r1, [r0, #6]
1004a6f0:	9819      	ldr	r0, [sp, #100]	; 0x64
1004a6f2:	8b39      	ldrh	r1, [r7, #24]
1004a6f4:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004a6f6:	1840      	adds	r0, r0, r1
1004a6f8:	4669      	mov	r1, sp
1004a6fa:	61a0      	str	r0, [r4, #24]
1004a6fc:	7a09      	ldrb	r1, [r1, #8]
1004a6fe:	7001      	strb	r1, [r0, #0]
1004a700:	69a0      	ldr	r0, [r4, #24]
1004a702:	4629      	mov	r1, r5
1004a704:	311c      	adds	r1, #28
1004a706:	1c40      	adds	r0, r0, #1
1004a708:	f7f6 f83b 	bl	10040782 <Osal_MemCpy>
1004a70c:	9811      	ldr	r0, [sp, #68]	; 0x44
1004a70e:	2801      	cmp	r0, #1
1004a710:	69a0      	ldr	r0, [r4, #24]
1004a712:	d07d      	beq.n	1004a810 <Gatt_Add_Characteristic+0x2b4>
1004a714:	2210      	movs	r2, #16
1004a716:	a913      	add	r1, sp, #76	; 0x4c
1004a718:	1cc0      	adds	r0, r0, #3
1004a71a:	f7f6 f832 	bl	10040782 <Osal_MemCpy>
1004a71e:	4628      	mov	r0, r5
1004a720:	2210      	movs	r2, #16
1004a722:	a913      	add	r1, sp, #76	; 0x4c
1004a724:	3008      	adds	r0, #8
1004a726:	f7f6 f82c 	bl	10040782 <Osal_MemCpy>
1004a72a:	8b38      	ldrh	r0, [r7, #24]
1004a72c:	3013      	adds	r0, #19
1004a72e:	8338      	strh	r0, [r7, #24]
1004a730:	462e      	mov	r6, r5
1004a732:	3620      	adds	r6, #32
1004a734:	9811      	ldr	r0, [sp, #68]	; 0x44
1004a736:	70f0      	strb	r0, [r6, #3]
1004a738:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a73a:	83e8      	strh	r0, [r5, #30]
1004a73c:	981f      	ldr	r0, [sp, #124]	; 0x7c
1004a73e:	70b0      	strb	r0, [r6, #2]
1004a740:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a742:	8420      	strh	r0, [r4, #32]
1004a744:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a746:	8428      	strh	r0, [r5, #32]
1004a748:	9819      	ldr	r0, [sp, #100]	; 0x64
1004a74a:	8b39      	ldrh	r1, [r7, #24]
1004a74c:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004a74e:	1840      	adds	r0, r0, r1
1004a750:	61a8      	str	r0, [r5, #24]
1004a752:	2100      	movs	r1, #0
1004a754:	9a10      	ldr	r2, [sp, #64]	; 0x40
1004a756:	f7f6 f818 	bl	1004078a <Osal_MemSet>
1004a75a:	8b39      	ldrh	r1, [r7, #24]
1004a75c:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a75e:	1808      	adds	r0, r1, r0
1004a760:	8338      	strh	r0, [r7, #24]
1004a762:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004a764:	2001      	movs	r0, #1
1004a766:	7108      	strb	r0, [r1, #4]
1004a768:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004a76a:	2000      	movs	r0, #0
1004a76c:	7148      	strb	r0, [r1, #5]
1004a76e:	7130      	strb	r0, [r6, #4]
1004a770:	4668      	mov	r0, sp
1004a772:	7a00      	ldrb	r0, [r0, #8]
1004a774:	0781      	lsls	r1, r0, #30
1004a776:	d501      	bpl.n	1004a77c <Gatt_Add_Characteristic+0x220>
1004a778:	2101      	movs	r1, #1
1004a77a:	7131      	strb	r1, [r6, #4]
1004a77c:	0701      	lsls	r1, r0, #28
1004a77e:	2702      	movs	r7, #2
1004a780:	2900      	cmp	r1, #0
1004a782:	da02      	bge.n	1004a78a <Gatt_Add_Characteristic+0x22e>
1004a784:	7931      	ldrb	r1, [r6, #4]
1004a786:	4339      	orrs	r1, r7
1004a788:	7131      	strb	r1, [r6, #4]
1004a78a:	0741      	lsls	r1, r0, #29
1004a78c:	d503      	bpl.n	1004a796 <Gatt_Add_Characteristic+0x23a>
1004a78e:	7931      	ldrb	r1, [r6, #4]
1004a790:	2204      	movs	r2, #4
1004a792:	4311      	orrs	r1, r2
1004a794:	7131      	strb	r1, [r6, #4]
1004a796:	0640      	lsls	r0, r0, #25
1004a798:	d503      	bpl.n	1004a7a2 <Gatt_Add_Characteristic+0x246>
1004a79a:	7930      	ldrb	r0, [r6, #4]
1004a79c:	2108      	movs	r1, #8
1004a79e:	4308      	orrs	r0, r1
1004a7a0:	7130      	strb	r0, [r6, #4]
1004a7a2:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004a7a4:	7170      	strb	r0, [r6, #5]
1004a7a6:	9820      	ldr	r0, [sp, #128]	; 0x80
1004a7a8:	71b0      	strb	r0, [r6, #6]
1004a7aa:	4621      	mov	r1, r4
1004a7ac:	981d      	ldr	r0, [sp, #116]	; 0x74
1004a7ae:	f00b f890 	bl	100558d2 <List_Circular_Remove_Node>
1004a7b2:	4621      	mov	r1, r4
1004a7b4:	9801      	ldr	r0, [sp, #4]
1004a7b6:	f00b f86d 	bl	10055894 <List_Circular_Insert_Tail>
1004a7ba:	4629      	mov	r1, r5
1004a7bc:	981d      	ldr	r0, [sp, #116]	; 0x74
1004a7be:	f00b f888 	bl	100558d2 <List_Circular_Remove_Node>
1004a7c2:	4629      	mov	r1, r5
1004a7c4:	9801      	ldr	r0, [sp, #4]
1004a7c6:	f00b f865 	bl	10055894 <List_Circular_Insert_Tail>
1004a7ca:	9812      	ldr	r0, [sp, #72]	; 0x48
1004a7cc:	2800      	cmp	r0, #0
1004a7ce:	d041      	beq.n	1004a854 <Gatt_Add_Characteristic+0x2f8>
1004a7d0:	4668      	mov	r0, sp
1004a7d2:	991a      	ldr	r1, [sp, #104]	; 0x68
1004a7d4:	8181      	strh	r1, [r0, #12]
1004a7d6:	8ba1      	ldrh	r1, [r4, #28]
1004a7d8:	81c1      	strh	r1, [r0, #14]
1004a7da:	8407      	strh	r7, [r0, #32]
1004a7dc:	8447      	strh	r7, [r0, #34]	; 0x22
1004a7de:	2401      	movs	r4, #1
1004a7e0:	a808      	add	r0, sp, #32
1004a7e2:	7104      	strb	r4, [r0, #4]
1004a7e4:	a822      	add	r0, sp, #136	; 0x88
1004a7e6:	900a      	str	r0, [sp, #40]	; 0x28
1004a7e8:	a808      	add	r0, sp, #32
1004a7ea:	7384      	strb	r4, [r0, #14]
1004a7ec:	9923      	ldr	r1, [sp, #140]	; 0x8c
1004a7ee:	7341      	strb	r1, [r0, #13]
1004a7f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004a7f2:	2038      	movs	r0, #56	; 0x38
1004a7f4:	4001      	ands	r1, r0
1004a7f6:	a808      	add	r0, sp, #32
1004a7f8:	7301      	strb	r1, [r0, #12]
1004a7fa:	2107      	movs	r1, #7
1004a7fc:	73c1      	strb	r1, [r0, #15]
1004a7fe:	2500      	movs	r5, #0
1004a800:	7405      	strb	r5, [r0, #16]
1004a802:	4668      	mov	r0, sp
1004a804:	7a00      	ldrb	r0, [r0, #8]
1004a806:	07c0      	lsls	r0, r0, #31
1004a808:	d008      	beq.n	1004a81c <Gatt_Add_Characteristic+0x2c0>
1004a80a:	4822      	ldr	r0, [pc, #136]	; (1004a894 <Gatt_Add_Characteristic+0x338>)
1004a80c:	4669      	mov	r1, sp
1004a80e:	e000      	b.n	1004a812 <Gatt_Add_Characteristic+0x2b6>
1004a810:	e02b      	b.n	1004a86a <Gatt_Add_Characteristic+0x30e>
1004a812:	8208      	strh	r0, [r1, #16]
1004a814:	a903      	add	r1, sp, #12
1004a816:	a824      	add	r0, sp, #144	; 0x90
1004a818:	f7ff fdf0 	bl	1004a3fc <Gatt_Add_Charac_Desc>
1004a81c:	4668      	mov	r0, sp
1004a81e:	7a00      	ldrb	r0, [r0, #8]
1004a820:	0680      	lsls	r0, r0, #26
1004a822:	0f80      	lsrs	r0, r0, #30
1004a824:	d007      	beq.n	1004a836 <Gatt_Add_Characteristic+0x2da>
1004a826:	481b      	ldr	r0, [pc, #108]	; (1004a894 <Gatt_Add_Characteristic+0x338>)
1004a828:	4669      	mov	r1, sp
1004a82a:	1e40      	subs	r0, r0, #1
1004a82c:	8208      	strh	r0, [r1, #16]
1004a82e:	a903      	add	r1, sp, #12
1004a830:	a824      	add	r0, sp, #144	; 0x90
1004a832:	f7ff fde3 	bl	1004a3fc <Gatt_Add_Charac_Desc>
1004a836:	4668      	mov	r0, sp
1004a838:	7a00      	ldrb	r0, [r0, #8]
1004a83a:	0600      	lsls	r0, r0, #24
1004a83c:	d50a      	bpl.n	1004a854 <Gatt_Add_Characteristic+0x2f8>
1004a83e:	2129      	movs	r1, #41	; 0x29
1004a840:	0209      	lsls	r1, r1, #8
1004a842:	4668      	mov	r0, sp
1004a844:	8201      	strh	r1, [r0, #16]
1004a846:	a808      	add	r0, sp, #32
1004a848:	7344      	strb	r4, [r0, #13]
1004a84a:	7305      	strb	r5, [r0, #12]
1004a84c:	a903      	add	r1, sp, #12
1004a84e:	a824      	add	r0, sp, #144	; 0x90
1004a850:	f7ff fdd4 	bl	1004a3fc <Gatt_Add_Charac_Desc>
1004a854:	9825      	ldr	r0, [sp, #148]	; 0x94
1004a856:	8801      	ldrh	r1, [r0, #0]
1004a858:	9812      	ldr	r0, [sp, #72]	; 0x48
1004a85a:	1c40      	adds	r0, r0, #1
1004a85c:	1808      	adds	r0, r1, r0
1004a85e:	b282      	uxth	r2, r0
1004a860:	2000      	movs	r0, #0
1004a862:	f001 fc29 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004a866:	2000      	movs	r0, #0
1004a868:	e6ad      	b.n	1004a5c6 <Gatt_Add_Characteristic+0x6a>
1004a86a:	2202      	movs	r2, #2
1004a86c:	a913      	add	r1, sp, #76	; 0x4c
1004a86e:	1cc0      	adds	r0, r0, #3
1004a870:	f7f5 ff87 	bl	10040782 <Osal_MemCpy>
1004a874:	4628      	mov	r0, r5
1004a876:	2202      	movs	r2, #2
1004a878:	a913      	add	r1, sp, #76	; 0x4c
1004a87a:	3008      	adds	r0, #8
1004a87c:	f7f5 ff81 	bl	10040782 <Osal_MemCpy>
1004a880:	8b38      	ldrh	r0, [r7, #24]
1004a882:	1d40      	adds	r0, r0, #5
1004a884:	e753      	b.n	1004a72e <Gatt_Add_Characteristic+0x1d2>
1004a886:	0000      	.short	0x0000
1004a888:	20000d64 	.word	0x20000d64
1004a88c:	0000072c 	.word	0x0000072c
1004a890:	00002803 	.word	0x00002803
1004a894:	00002903 	.word	0x00002903

1004a898 <Gatt_Add_Descriptor>:
1004a898:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004a89a:	4852      	ldr	r0, [pc, #328]	; (1004a9e4 <Gatt_Add_Descriptor+0x14c>)
1004a89c:	4a52      	ldr	r2, [pc, #328]	; (1004a9e8 <Gatt_Add_Descriptor+0x150>)
1004a89e:	6800      	ldr	r0, [r0, #0]
1004a8a0:	b087      	sub	sp, #28
1004a8a2:	1882      	adds	r2, r0, r2
1004a8a4:	9206      	str	r2, [sp, #24]
1004a8a6:	aa10      	add	r2, sp, #64	; 0x40
1004a8a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
1004a8aa:	2601      	movs	r6, #1
1004a8ac:	9f16      	ldr	r7, [sp, #88]	; 0x58
1004a8ae:	8892      	ldrh	r2, [r2, #4]
1004a8b0:	2b01      	cmp	r3, #1
1004a8b2:	d104      	bne.n	1004a8be <Gatt_Add_Descriptor+0x26>
1004a8b4:	4b4d      	ldr	r3, [pc, #308]	; (1004a9ec <Gatt_Add_Descriptor+0x154>)
1004a8b6:	429a      	cmp	r2, r3
1004a8b8:	d101      	bne.n	1004a8be <Gatt_Add_Descriptor+0x26>
1004a8ba:	30a0      	adds	r0, #160	; 0xa0
1004a8bc:	7b06      	ldrb	r6, [r0, #12]
1004a8be:	9d06      	ldr	r5, [sp, #24]
1004a8c0:	4634      	mov	r4, r6
1004a8c2:	3540      	adds	r5, #64	; 0x40
1004a8c4:	8b68      	ldrh	r0, [r5, #26]
1004a8c6:	8b2b      	ldrh	r3, [r5, #24]
1004a8c8:	437c      	muls	r4, r7
1004a8ca:	1ac3      	subs	r3, r0, r3
1004a8cc:	9809      	ldr	r0, [sp, #36]	; 0x24
1004a8ce:	3020      	adds	r0, #32
1004a8d0:	9003      	str	r0, [sp, #12]
1004a8d2:	42a3      	cmp	r3, r4
1004a8d4:	da22      	bge.n	1004a91c <Gatt_Add_Descriptor+0x84>
1004a8d6:	2048      	movs	r0, #72	; 0x48
1004a8d8:	b00b      	add	sp, #44	; 0x2c
1004a8da:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004a8dc:	2023      	movs	r0, #35	; 0x23
1004a8de:	5c40      	ldrb	r0, [r0, r1]
1004a8e0:	2801      	cmp	r0, #1
1004a8e2:	d119      	bne.n	1004a918 <Gatt_Add_Descriptor+0x80>
1004a8e4:	8908      	ldrh	r0, [r1, #8]
1004a8e6:	466c      	mov	r4, sp
1004a8e8:	8020      	strh	r0, [r4, #0]
1004a8ea:	4298      	cmp	r0, r3
1004a8ec:	d00c      	beq.n	1004a908 <Gatt_Add_Descriptor+0x70>
1004a8ee:	4c3f      	ldr	r4, [pc, #252]	; (1004a9ec <Gatt_Add_Descriptor+0x154>)
1004a8f0:	1e64      	subs	r4, r4, #1
1004a8f2:	42a0      	cmp	r0, r4
1004a8f4:	d008      	beq.n	1004a908 <Gatt_Add_Descriptor+0x70>
1004a8f6:	1c64      	adds	r4, r4, #1
1004a8f8:	42a0      	cmp	r0, r4
1004a8fa:	d005      	beq.n	1004a908 <Gatt_Add_Descriptor+0x70>
1004a8fc:	1c64      	adds	r4, r4, #1
1004a8fe:	42a0      	cmp	r0, r4
1004a900:	d002      	beq.n	1004a908 <Gatt_Add_Descriptor+0x70>
1004a902:	1ca4      	adds	r4, r4, #2
1004a904:	42a0      	cmp	r0, r4
1004a906:	d107      	bne.n	1004a918 <Gatt_Add_Descriptor+0x80>
1004a908:	4c38      	ldr	r4, [pc, #224]	; (1004a9ec <Gatt_Add_Descriptor+0x154>)
1004a90a:	3cff      	subs	r4, #255	; 0xff
1004a90c:	42a0      	cmp	r0, r4
1004a90e:	d001      	beq.n	1004a914 <Gatt_Add_Descriptor+0x7c>
1004a910:	4290      	cmp	r0, r2
1004a912:	d101      	bne.n	1004a918 <Gatt_Add_Descriptor+0x80>
1004a914:	2062      	movs	r0, #98	; 0x62
1004a916:	e7df      	b.n	1004a8d8 <Gatt_Add_Descriptor+0x40>
1004a918:	6809      	ldr	r1, [r1, #0]
1004a91a:	e001      	b.n	1004a920 <Gatt_Add_Descriptor+0x88>
1004a91c:	2329      	movs	r3, #41	; 0x29
1004a91e:	021b      	lsls	r3, r3, #8
1004a920:	9803      	ldr	r0, [sp, #12]
1004a922:	4281      	cmp	r1, r0
1004a924:	d1da      	bne.n	1004a8dc <Gatt_Add_Descriptor+0x44>
1004a926:	9809      	ldr	r0, [sp, #36]	; 0x24
1004a928:	991b      	ldr	r1, [sp, #108]	; 0x6c
1004a92a:	6984      	ldr	r4, [r0, #24]
1004a92c:	9818      	ldr	r0, [sp, #96]	; 0x60
1004a92e:	4622      	mov	r2, r4
1004a930:	f00a ff38 	bl	100557a4 <Check_Encry_Key_Size>
1004a934:	2842      	cmp	r0, #66	; 0x42
1004a936:	d0cf      	beq.n	1004a8d8 <Gatt_Add_Descriptor+0x40>
1004a938:	981c      	ldr	r0, [sp, #112]	; 0x70
1004a93a:	2801      	cmp	r0, #1
1004a93c:	d104      	bne.n	1004a948 <Gatt_Add_Descriptor+0xb0>
1004a93e:	9815      	ldr	r0, [sp, #84]	; 0x54
1004a940:	4287      	cmp	r7, r0
1004a942:	d201      	bcs.n	1004a948 <Gatt_Add_Descriptor+0xb0>
1004a944:	2042      	movs	r0, #66	; 0x42
1004a946:	e7c7      	b.n	1004a8d8 <Gatt_Add_Descriptor+0x40>
1004a948:	9815      	ldr	r0, [sp, #84]	; 0x54
1004a94a:	83e0      	strh	r0, [r4, #30]
1004a94c:	4620      	mov	r0, r4
1004a94e:	3020      	adds	r0, #32
1004a950:	991c      	ldr	r1, [sp, #112]	; 0x70
1004a952:	9005      	str	r0, [sp, #20]
1004a954:	7081      	strb	r1, [r0, #2]
1004a956:	8427      	strh	r7, [r4, #32]
1004a958:	980a      	ldr	r0, [sp, #40]	; 0x28
1004a95a:	8b80      	ldrh	r0, [r0, #28]
1004a95c:	1c40      	adds	r0, r0, #1
1004a95e:	83a0      	strh	r0, [r4, #28]
1004a960:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a962:	2801      	cmp	r0, #1
1004a964:	d014      	beq.n	1004a990 <Gatt_Add_Descriptor+0xf8>
1004a966:	4620      	mov	r0, r4
1004a968:	2210      	movs	r2, #16
1004a96a:	a911      	add	r1, sp, #68	; 0x44
1004a96c:	3008      	adds	r0, #8
1004a96e:	f7f5 ff08 	bl	10040782 <Osal_MemCpy>
1004a972:	9905      	ldr	r1, [sp, #20]
1004a974:	9810      	ldr	r0, [sp, #64]	; 0x40
1004a976:	70c8      	strb	r0, [r1, #3]
1004a978:	9806      	ldr	r0, [sp, #24]
1004a97a:	8b29      	ldrh	r1, [r5, #24]
1004a97c:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004a97e:	1840      	adds	r0, r0, r1
1004a980:	61a0      	str	r0, [r4, #24]
1004a982:	8b29      	ldrh	r1, [r5, #24]
1004a984:	4638      	mov	r0, r7
1004a986:	4370      	muls	r0, r6
1004a988:	1808      	adds	r0, r1, r0
1004a98a:	8328      	strh	r0, [r5, #24]
1004a98c:	2500      	movs	r5, #0
1004a98e:	e00f      	b.n	1004a9b0 <Gatt_Add_Descriptor+0x118>
1004a990:	a811      	add	r0, sp, #68	; 0x44
1004a992:	c80f      	ldmia	r0, {r0, r1, r2, r3}
1004a994:	3408      	adds	r4, #8
1004a996:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1004a998:	3c18      	subs	r4, #24
1004a99a:	e7ea      	b.n	1004a972 <Gatt_Add_Descriptor+0xda>
1004a99c:	4628      	mov	r0, r5
1004a99e:	69a1      	ldr	r1, [r4, #24]
1004a9a0:	4378      	muls	r0, r7
1004a9a2:	1808      	adds	r0, r1, r0
1004a9a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
1004a9a6:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004a9a8:	f7f5 feeb 	bl	10040782 <Osal_MemCpy>
1004a9ac:	1c6d      	adds	r5, r5, #1
1004a9ae:	b2ed      	uxtb	r5, r5
1004a9b0:	42b5      	cmp	r5, r6
1004a9b2:	d3f3      	bcc.n	1004a99c <Gatt_Add_Descriptor+0x104>
1004a9b4:	9905      	ldr	r1, [sp, #20]
1004a9b6:	9818      	ldr	r0, [sp, #96]	; 0x60
1004a9b8:	7148      	strb	r0, [r1, #5]
1004a9ba:	9905      	ldr	r1, [sp, #20]
1004a9bc:	9819      	ldr	r0, [sp, #100]	; 0x64
1004a9be:	7108      	strb	r0, [r1, #4]
1004a9c0:	9905      	ldr	r1, [sp, #20]
1004a9c2:	981a      	ldr	r0, [sp, #104]	; 0x68
1004a9c4:	7188      	strb	r0, [r1, #6]
1004a9c6:	9809      	ldr	r0, [sp, #36]	; 0x24
1004a9c8:	4621      	mov	r1, r4
1004a9ca:	3018      	adds	r0, #24
1004a9cc:	f00a ff81 	bl	100558d2 <List_Circular_Remove_Node>
1004a9d0:	4621      	mov	r1, r4
1004a9d2:	9803      	ldr	r0, [sp, #12]
1004a9d4:	f00a ff5e 	bl	10055894 <List_Circular_Insert_Tail>
1004a9d8:	9807      	ldr	r0, [sp, #28]
1004a9da:	8ba1      	ldrh	r1, [r4, #28]
1004a9dc:	8001      	strh	r1, [r0, #0]
1004a9de:	2000      	movs	r0, #0
1004a9e0:	e77a      	b.n	1004a8d8 <Gatt_Add_Descriptor+0x40>
1004a9e2:	0000      	.short	0x0000
1004a9e4:	20000d64 	.word	0x20000d64
1004a9e8:	0000072c 	.word	0x0000072c
1004a9ec:	00002902 	.word	0x00002902

1004a9f0 <Gatt_Add_Service>:
1004a9f0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004a9f2:	b08f      	sub	sp, #60	; 0x3c
1004a9f4:	4614      	mov	r4, r2
1004a9f6:	780e      	ldrb	r6, [r1, #0]
1004a9f8:	2210      	movs	r2, #16
1004a9fa:	a805      	add	r0, sp, #20
1004a9fc:	1c89      	adds	r1, r1, #2
1004a9fe:	f7fb feb4 	bl	1004676a <__aeabi_memcpy>
1004aa02:	484f      	ldr	r0, [pc, #316]	; (1004ab40 <Gatt_Add_Service+0x150>)
1004aa04:	494f      	ldr	r1, [pc, #316]	; (1004ab44 <Gatt_Add_Service+0x154>)
1004aa06:	6800      	ldr	r0, [r0, #0]
1004aa08:	1845      	adds	r5, r0, r1
1004aa0a:	f000 fd77 	bl	1004b4fc <Gatt_Server_Db_Check>
1004aa0e:	2800      	cmp	r0, #0
1004aa10:	d11e      	bne.n	1004aa50 <Gatt_Add_Service+0x60>
1004aa12:	2c00      	cmp	r4, #0
1004aa14:	d057      	beq.n	1004aac6 <Gatt_Add_Service+0xd6>
1004aa16:	2e01      	cmp	r6, #1
1004aa18:	d109      	bne.n	1004aa2e <Gatt_Add_Service+0x3e>
1004aa1a:	4668      	mov	r0, sp
1004aa1c:	8a80      	ldrh	r0, [r0, #20]
1004aa1e:	494a      	ldr	r1, [pc, #296]	; (1004ab48 <Gatt_Add_Service+0x158>)
1004aa20:	4288      	cmp	r0, r1
1004aa22:	d104      	bne.n	1004aa2e <Gatt_Add_Service+0x3e>
1004aa24:	4628      	mov	r0, r5
1004aa26:	68a9      	ldr	r1, [r5, #8]
1004aa28:	3008      	adds	r0, #8
1004aa2a:	4281      	cmp	r1, r0
1004aa2c:	d14b      	bne.n	1004aac6 <Gatt_Add_Service+0xd6>
1004aa2e:	4628      	mov	r0, r5
1004aa30:	3010      	adds	r0, #16
1004aa32:	6929      	ldr	r1, [r5, #16]
1004aa34:	9003      	str	r0, [sp, #12]
1004aa36:	4281      	cmp	r1, r0
1004aa38:	d009      	beq.n	1004aa4e <Gatt_Add_Service+0x5e>
1004aa3a:	a90a      	add	r1, sp, #40	; 0x28
1004aa3c:	4628      	mov	r0, r5
1004aa3e:	f00a ff1f 	bl	10055880 <List_Circular_Get_Size>
1004aa42:	4668      	mov	r0, sp
1004aa44:	8d01      	ldrh	r1, [r0, #40]	; 0x28
1004aa46:	1e60      	subs	r0, r4, #1
1004aa48:	900d      	str	r0, [sp, #52]	; 0x34
1004aa4a:	4281      	cmp	r1, r0
1004aa4c:	d202      	bcs.n	1004aa54 <Gatt_Add_Service+0x64>
1004aa4e:	2048      	movs	r0, #72	; 0x48
1004aa50:	b013      	add	sp, #76	; 0x4c
1004aa52:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004aa54:	4628      	mov	r0, r5
1004aa56:	3008      	adds	r0, #8
1004aa58:	a90c      	add	r1, sp, #48	; 0x30
1004aa5a:	9004      	str	r0, [sp, #16]
1004aa5c:	f00a ff10 	bl	10055880 <List_Circular_Get_Size>
1004aa60:	4668      	mov	r0, sp
1004aa62:	8e00      	ldrh	r0, [r0, #48]	; 0x30
1004aa64:	2800      	cmp	r0, #0
1004aa66:	d014      	beq.n	1004aa92 <Gatt_Add_Service+0xa2>
1004aa68:	68ef      	ldr	r7, [r5, #12]
1004aa6a:	a90a      	add	r1, sp, #40	; 0x28
1004aa6c:	4638      	mov	r0, r7
1004aa6e:	3018      	adds	r0, #24
1004aa70:	f00a ff06 	bl	10055880 <List_Circular_Get_Size>
1004aa74:	4638      	mov	r0, r7
1004aa76:	3020      	adds	r0, #32
1004aa78:	a90c      	add	r1, sp, #48	; 0x30
1004aa7a:	f00a ff01 	bl	10055880 <List_Circular_Get_Size>
1004aa7e:	4668      	mov	r0, sp
1004aa80:	8d39      	ldrh	r1, [r7, #40]	; 0x28
1004aa82:	8d00      	ldrh	r0, [r0, #40]	; 0x28
1004aa84:	1809      	adds	r1, r1, r0
1004aa86:	4668      	mov	r0, sp
1004aa88:	8e00      	ldrh	r0, [r0, #48]	; 0x30
1004aa8a:	1c40      	adds	r0, r0, #1
1004aa8c:	1808      	adds	r0, r1, r0
1004aa8e:	b287      	uxth	r7, r0
1004aa90:	e000      	b.n	1004aa94 <Gatt_Add_Service+0xa4>
1004aa92:	2701      	movs	r7, #1
1004aa94:	2001      	movs	r0, #1
1004aa96:	0400      	lsls	r0, r0, #16
1004aa98:	1bc0      	subs	r0, r0, r7
1004aa9a:	42a0      	cmp	r0, r4
1004aa9c:	d201      	bcs.n	1004aaa2 <Gatt_Add_Service+0xb2>
1004aa9e:	2061      	movs	r0, #97	; 0x61
1004aaa0:	e7d6      	b.n	1004aa50 <Gatt_Add_Service+0x60>
1004aaa2:	692c      	ldr	r4, [r5, #16]
1004aaa4:	6828      	ldr	r0, [r5, #0]
1004aaa6:	9001      	str	r0, [sp, #4]
1004aaa8:	9812      	ldr	r0, [sp, #72]	; 0x48
1004aaaa:	2801      	cmp	r0, #1
1004aaac:	d002      	beq.n	1004aab4 <Gatt_Add_Service+0xc4>
1004aaae:	2802      	cmp	r0, #2
1004aab0:	d003      	beq.n	1004aaba <Gatt_Add_Service+0xca>
1004aab2:	e008      	b.n	1004aac6 <Gatt_Add_Service+0xd6>
1004aab4:	2005      	movs	r0, #5
1004aab6:	02c0      	lsls	r0, r0, #11
1004aab8:	e000      	b.n	1004aabc <Gatt_Add_Service+0xcc>
1004aaba:	4824      	ldr	r0, [pc, #144]	; (1004ab4c <Gatt_Add_Service+0x15c>)
1004aabc:	8560      	strh	r0, [r4, #42]	; 0x2a
1004aabe:	2e01      	cmp	r6, #1
1004aac0:	d003      	beq.n	1004aaca <Gatt_Add_Service+0xda>
1004aac2:	2e02      	cmp	r6, #2
1004aac4:	d005      	beq.n	1004aad2 <Gatt_Add_Service+0xe2>
1004aac6:	2042      	movs	r0, #66	; 0x42
1004aac8:	e7c2      	b.n	1004aa50 <Gatt_Add_Service+0x60>
1004aaca:	4620      	mov	r0, r4
1004aacc:	3008      	adds	r0, #8
1004aace:	2202      	movs	r2, #2
1004aad0:	e002      	b.n	1004aad8 <Gatt_Add_Service+0xe8>
1004aad2:	4620      	mov	r0, r4
1004aad4:	3008      	adds	r0, #8
1004aad6:	2210      	movs	r2, #16
1004aad8:	a905      	add	r1, sp, #20
1004aada:	f7f5 fe52 	bl	10040782 <Osal_MemCpy>
1004aade:	4620      	mov	r0, r4
1004aae0:	4631      	mov	r1, r6
1004aae2:	3020      	adds	r0, #32
1004aae4:	4606      	mov	r6, r0
1004aae6:	7301      	strb	r1, [r0, #12]
1004aae8:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004aaea:	4621      	mov	r1, r4
1004aaec:	8007      	strh	r7, [r0, #0]
1004aaee:	8527      	strh	r7, [r4, #40]	; 0x28
1004aaf0:	9803      	ldr	r0, [sp, #12]
1004aaf2:	f00a feee 	bl	100558d2 <List_Circular_Remove_Node>
1004aaf6:	4621      	mov	r1, r4
1004aaf8:	9804      	ldr	r0, [sp, #16]
1004aafa:	f00a fecb 	bl	10055894 <List_Circular_Insert_Tail>
1004aafe:	4627      	mov	r7, r4
1004ab00:	3718      	adds	r7, #24
1004ab02:	61e7      	str	r7, [r4, #28]
1004ab04:	6266      	str	r6, [r4, #36]	; 0x24
1004ab06:	61a7      	str	r7, [r4, #24]
1004ab08:	6226      	str	r6, [r4, #32]
1004ab0a:	980d      	ldr	r0, [sp, #52]	; 0x34
1004ab0c:	b284      	uxth	r4, r0
1004ab0e:	e00b      	b.n	1004ab28 <Gatt_Add_Service+0x138>
1004ab10:	4628      	mov	r0, r5
1004ab12:	9901      	ldr	r1, [sp, #4]
1004ab14:	f00a fedd 	bl	100558d2 <List_Circular_Remove_Node>
1004ab18:	4638      	mov	r0, r7
1004ab1a:	9901      	ldr	r1, [sp, #4]
1004ab1c:	f00a feba 	bl	10055894 <List_Circular_Insert_Tail>
1004ab20:	6828      	ldr	r0, [r5, #0]
1004ab22:	1e64      	subs	r4, r4, #1
1004ab24:	b2a4      	uxth	r4, r4
1004ab26:	9001      	str	r0, [sp, #4]
1004ab28:	2c00      	cmp	r4, #0
1004ab2a:	d1f1      	bne.n	1004ab10 <Gatt_Add_Service+0x120>
1004ab2c:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004ab2e:	8801      	ldrh	r1, [r0, #0]
1004ab30:	980d      	ldr	r0, [sp, #52]	; 0x34
1004ab32:	1808      	adds	r0, r1, r0
1004ab34:	b282      	uxth	r2, r0
1004ab36:	2000      	movs	r0, #0
1004ab38:	f001 fabe 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004ab3c:	2000      	movs	r0, #0
1004ab3e:	e787      	b.n	1004aa50 <Gatt_Add_Service+0x60>
1004ab40:	20000d64 	.word	0x20000d64
1004ab44:	0000072c 	.word	0x0000072c
1004ab48:	00001801 	.word	0x00001801
1004ab4c:	00002801 	.word	0x00002801

1004ab50 <Gatt_Appl_Auth_For_Read>:
1004ab50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004ab52:	4606      	mov	r6, r0
1004ab54:	4836      	ldr	r0, [pc, #216]	; (1004ac30 <Gatt_Appl_Auth_For_Read+0xe0>)
1004ab56:	460f      	mov	r7, r1
1004ab58:	6800      	ldr	r0, [r0, #0]
1004ab5a:	4936      	ldr	r1, [pc, #216]	; (1004ac34 <Gatt_Appl_Auth_For_Read+0xe4>)
1004ab5c:	b082      	sub	sp, #8
1004ab5e:	1844      	adds	r4, r0, r1
1004ab60:	4630      	mov	r0, r6
1004ab62:	f7fd fcdd 	bl	10048520 <Find_Gatt_Client>
1004ab66:	0005      	movs	r5, r0
1004ab68:	d060      	beq.n	1004ac2c <Gatt_Appl_Auth_For_Read+0xdc>
1004ab6a:	4620      	mov	r0, r4
1004ab6c:	3024      	adds	r0, #36	; 0x24
1004ab6e:	9000      	str	r0, [sp, #0]
1004ab70:	f012 f812 	bl	1005cb98 <acl_list_is_empty>
1004ab74:	2800      	cmp	r0, #0
1004ab76:	d159      	bne.n	1004ac2c <Gatt_Appl_Auth_For_Read+0xdc>
1004ab78:	6928      	ldr	r0, [r5, #16]
1004ab7a:	0300      	lsls	r0, r0, #12
1004ab7c:	d556      	bpl.n	1004ac2c <Gatt_Appl_Auth_For_Read+0xdc>
1004ab7e:	9800      	ldr	r0, [sp, #0]
1004ab80:	f011 ffc4 	bl	1005cb0c <acl_list_first>
1004ab84:	4604      	mov	r4, r0
1004ab86:	e04f      	b.n	1004ac28 <Gatt_Appl_Auth_For_Read+0xd8>
1004ab88:	88a0      	ldrh	r0, [r4, #4]
1004ab8a:	42b0      	cmp	r0, r6
1004ab8c:	d14b      	bne.n	1004ac26 <Gatt_Appl_Auth_For_Read+0xd6>
1004ab8e:	2220      	movs	r2, #32
1004ab90:	4631      	mov	r1, r6
1004ab92:	2000      	movs	r0, #0
1004ab94:	f009 ff4a 	bl	10054a2c <PM_Get_Pckt>
1004ab98:	0006      	movs	r6, r0
1004ab9a:	d018      	beq.n	1004abce <Gatt_Appl_Auth_For_Read+0x7e>
1004ab9c:	68a0      	ldr	r0, [r4, #8]
1004ab9e:	2f00      	cmp	r7, #0
1004aba0:	7b01      	ldrb	r1, [r0, #12]
1004aba2:	7b42      	ldrb	r2, [r0, #13]
1004aba4:	d015      	beq.n	1004abd2 <Gatt_Appl_Auth_For_Read+0x82>
1004aba6:	4633      	mov	r3, r6
1004aba8:	9804      	ldr	r0, [sp, #16]
1004abaa:	f012 fbd7 	bl	1005d35c <ATT_fill_error_resp>
1004abae:	2000      	movs	r0, #0
1004abb0:	2201      	movs	r2, #1
1004abb2:	6929      	ldr	r1, [r5, #16]
1004abb4:	04d2      	lsls	r2, r2, #19
1004abb6:	4391      	bics	r1, r2
1004abb8:	6129      	str	r1, [r5, #16]
1004abba:	2800      	cmp	r0, #0
1004abbc:	d02a      	beq.n	1004ac14 <Gatt_Appl_Auth_For_Read+0xc4>
1004abbe:	2869      	cmp	r0, #105	; 0x69
1004abc0:	d002      	beq.n	1004abc8 <Gatt_Appl_Auth_For_Read+0x78>
1004abc2:	4630      	mov	r0, r6
1004abc4:	f7ff fbea 	bl	1004a39c <GATT_Send_Packet>
1004abc8:	2000      	movs	r0, #0
1004abca:	b005      	add	sp, #20
1004abcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004abce:	2064      	movs	r0, #100	; 0x64
1004abd0:	e7fb      	b.n	1004abca <Gatt_Appl_Auth_For_Read+0x7a>
1004abd2:	290a      	cmp	r1, #10
1004abd4:	d006      	beq.n	1004abe4 <Gatt_Appl_Auth_For_Read+0x94>
1004abd6:	290c      	cmp	r1, #12
1004abd8:	d00a      	beq.n	1004abf0 <Gatt_Appl_Auth_For_Read+0xa0>
1004abda:	290e      	cmp	r1, #14
1004abdc:	d00e      	beq.n	1004abfc <Gatt_Appl_Auth_For_Read+0xac>
1004abde:	2908      	cmp	r1, #8
1004abe0:	d012      	beq.n	1004ac08 <Gatt_Appl_Auth_For_Read+0xb8>
1004abe2:	e023      	b.n	1004ac2c <Gatt_Appl_Auth_For_Read+0xdc>
1004abe4:	4632      	mov	r2, r6
1004abe6:	4621      	mov	r1, r4
1004abe8:	4628      	mov	r0, r5
1004abea:	f013 fc73 	bl	1005e4d4 <Read_Resp>
1004abee:	e7df      	b.n	1004abb0 <Gatt_Appl_Auth_For_Read+0x60>
1004abf0:	4632      	mov	r2, r6
1004abf2:	4621      	mov	r1, r4
1004abf4:	4628      	mov	r0, r5
1004abf6:	f013 f8a7 	bl	1005dd48 <Read_Blob_Resp>
1004abfa:	e7d9      	b.n	1004abb0 <Gatt_Appl_Auth_For_Read+0x60>
1004abfc:	4632      	mov	r2, r6
1004abfe:	4621      	mov	r1, r4
1004ac00:	4628      	mov	r0, r5
1004ac02:	f013 fb9d 	bl	1005e340 <Read_Multi_Resp>
1004ac06:	e7d3      	b.n	1004abb0 <Gatt_Appl_Auth_For_Read+0x60>
1004ac08:	4632      	mov	r2, r6
1004ac0a:	4621      	mov	r1, r4
1004ac0c:	4628      	mov	r0, r5
1004ac0e:	f013 fa2d 	bl	1005e06c <Read_By_Type_Resp>
1004ac12:	e7cd      	b.n	1004abb0 <Gatt_Appl_Auth_For_Read+0x60>
1004ac14:	4621      	mov	r1, r4
1004ac16:	9800      	ldr	r0, [sp, #0]
1004ac18:	f011 ffc5 	bl	1005cba6 <acl_list_remove>
1004ac1c:	2101      	movs	r1, #1
1004ac1e:	4620      	mov	r0, r4
1004ac20:	f009 ff60 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004ac24:	e7cd      	b.n	1004abc2 <Gatt_Appl_Auth_For_Read+0x72>
1004ac26:	6824      	ldr	r4, [r4, #0]
1004ac28:	2c00      	cmp	r4, #0
1004ac2a:	d1ad      	bne.n	1004ab88 <Gatt_Appl_Auth_For_Read+0x38>
1004ac2c:	2041      	movs	r0, #65	; 0x41
1004ac2e:	e7cc      	b.n	1004abca <Gatt_Appl_Auth_For_Read+0x7a>
1004ac30:	20000d64 	.word	0x20000d64
1004ac34:	0000072c 	.word	0x0000072c

1004ac38 <Gatt_Appl_Auth_For_Write>:
1004ac38:	b5f0      	push	{r4, r5, r6, r7, lr}
1004ac3a:	496b      	ldr	r1, [pc, #428]	; (1004ade8 <Gatt_Appl_Auth_For_Write+0x1b0>)
1004ac3c:	b089      	sub	sp, #36	; 0x24
1004ac3e:	680a      	ldr	r2, [r1, #0]
1004ac40:	496a      	ldr	r1, [pc, #424]	; (1004adec <Gatt_Appl_Auth_For_Write+0x1b4>)
1004ac42:	8806      	ldrh	r6, [r0, #0]
1004ac44:	1857      	adds	r7, r2, r1
1004ac46:	8841      	ldrh	r1, [r0, #2]
1004ac48:	466a      	mov	r2, sp
1004ac4a:	8011      	strh	r1, [r2, #0]
1004ac4c:	7901      	ldrb	r1, [r0, #4]
1004ac4e:	9107      	str	r1, [sp, #28]
1004ac50:	7941      	ldrb	r1, [r0, #5]
1004ac52:	9104      	str	r1, [sp, #16]
1004ac54:	88c1      	ldrh	r1, [r0, #6]
1004ac56:	9101      	str	r1, [sp, #4]
1004ac58:	6880      	ldr	r0, [r0, #8]
1004ac5a:	9003      	str	r0, [sp, #12]
1004ac5c:	4630      	mov	r0, r6
1004ac5e:	f7fd fc5f 	bl	10048520 <Find_Gatt_Client>
1004ac62:	0004      	movs	r4, r0
1004ac64:	d03e      	beq.n	1004ace4 <Gatt_Appl_Auth_For_Write+0xac>
1004ac66:	4638      	mov	r0, r7
1004ac68:	3024      	adds	r0, #36	; 0x24
1004ac6a:	9006      	str	r0, [sp, #24]
1004ac6c:	f011 ff94 	bl	1005cb98 <acl_list_is_empty>
1004ac70:	2800      	cmp	r0, #0
1004ac72:	d130      	bne.n	1004acd6 <Gatt_Appl_Auth_For_Write+0x9e>
1004ac74:	6920      	ldr	r0, [r4, #16]
1004ac76:	0380      	lsls	r0, r0, #14
1004ac78:	d52d      	bpl.n	1004acd6 <Gatt_Appl_Auth_For_Write+0x9e>
1004ac7a:	9806      	ldr	r0, [sp, #24]
1004ac7c:	f011 ff46 	bl	1005cb0c <acl_list_first>
1004ac80:	4605      	mov	r5, r0
1004ac82:	e026      	b.n	1004acd2 <Gatt_Appl_Auth_For_Write+0x9a>
1004ac84:	88a8      	ldrh	r0, [r5, #4]
1004ac86:	0500      	lsls	r0, r0, #20
1004ac88:	0d00      	lsrs	r0, r0, #20
1004ac8a:	42b0      	cmp	r0, r6
1004ac8c:	d120      	bne.n	1004acd0 <Gatt_Appl_Auth_For_Write+0x98>
1004ac8e:	68a8      	ldr	r0, [r5, #8]
1004ac90:	2302      	movs	r3, #2
1004ac92:	7b00      	ldrb	r0, [r0, #12]
1004ac94:	9002      	str	r0, [sp, #8]
1004ac96:	2003      	movs	r0, #3
1004ac98:	9005      	str	r0, [sp, #20]
1004ac9a:	2205      	movs	r2, #5
1004ac9c:	4669      	mov	r1, sp
1004ac9e:	4628      	mov	r0, r5
1004aca0:	f009 ff1a 	bl	10054ad8 <PM_Pckt_Cmp>
1004aca4:	2800      	cmp	r0, #0
1004aca6:	d113      	bne.n	1004acd0 <Gatt_Appl_Auth_For_Write+0x98>
1004aca8:	9802      	ldr	r0, [sp, #8]
1004acaa:	2816      	cmp	r0, #22
1004acac:	d101      	bne.n	1004acb2 <Gatt_Appl_Auth_For_Write+0x7a>
1004acae:	2005      	movs	r0, #5
1004acb0:	9005      	str	r0, [sp, #20]
1004acb2:	88e9      	ldrh	r1, [r5, #6]
1004acb4:	9805      	ldr	r0, [sp, #20]
1004acb6:	1a09      	subs	r1, r1, r0
1004acb8:	9801      	ldr	r0, [sp, #4]
1004acba:	4281      	cmp	r1, r0
1004acbc:	d108      	bne.n	1004acd0 <Gatt_Appl_Auth_For_Write+0x98>
1004acbe:	9a05      	ldr	r2, [sp, #20]
1004acc0:	4603      	mov	r3, r0
1004acc2:	4628      	mov	r0, r5
1004acc4:	1d12      	adds	r2, r2, #4
1004acc6:	9903      	ldr	r1, [sp, #12]
1004acc8:	f009 ff06 	bl	10054ad8 <PM_Pckt_Cmp>
1004accc:	2800      	cmp	r0, #0
1004acce:	d00a      	beq.n	1004ace6 <Gatt_Appl_Auth_For_Write+0xae>
1004acd0:	682d      	ldr	r5, [r5, #0]
1004acd2:	2d00      	cmp	r5, #0
1004acd4:	d1d6      	bne.n	1004ac84 <Gatt_Appl_Auth_For_Write+0x4c>
1004acd6:	4638      	mov	r0, r7
1004acd8:	3018      	adds	r0, #24
1004acda:	4607      	mov	r7, r0
1004acdc:	f011 ff5c 	bl	1005cb98 <acl_list_is_empty>
1004ace0:	2800      	cmp	r0, #0
1004ace2:	d03e      	beq.n	1004ad62 <Gatt_Appl_Auth_For_Write+0x12a>
1004ace4:	e063      	b.n	1004adae <Gatt_Appl_Auth_For_Write+0x176>
1004ace6:	2220      	movs	r2, #32
1004ace8:	4631      	mov	r1, r6
1004acea:	2000      	movs	r0, #0
1004acec:	f009 fe9e 	bl	10054a2c <PM_Get_Pckt>
1004acf0:	0006      	movs	r6, r0
1004acf2:	d011      	beq.n	1004ad18 <Gatt_Appl_Auth_For_Write+0xe0>
1004acf4:	2101      	movs	r1, #1
1004acf6:	6920      	ldr	r0, [r4, #16]
1004acf8:	0449      	lsls	r1, r1, #17
1004acfa:	4388      	bics	r0, r1
1004acfc:	6120      	str	r0, [r4, #16]
1004acfe:	2701      	movs	r7, #1
1004ad00:	9907      	ldr	r1, [sp, #28]
1004ad02:	063f      	lsls	r7, r7, #24
1004ad04:	2900      	cmp	r1, #0
1004ad06:	d00a      	beq.n	1004ad1e <Gatt_Appl_Auth_For_Write+0xe6>
1004ad08:	4668      	mov	r0, sp
1004ad0a:	8802      	ldrh	r2, [r0, #0]
1004ad0c:	4633      	mov	r3, r6
1004ad0e:	9902      	ldr	r1, [sp, #8]
1004ad10:	9804      	ldr	r0, [sp, #16]
1004ad12:	f012 fb23 	bl	1005d35c <ATT_fill_error_resp>
1004ad16:	e01b      	b.n	1004ad50 <Gatt_Appl_Auth_For_Write+0x118>
1004ad18:	2064      	movs	r0, #100	; 0x64
1004ad1a:	b009      	add	sp, #36	; 0x24
1004ad1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ad1e:	4338      	orrs	r0, r7
1004ad20:	6120      	str	r0, [r4, #16]
1004ad22:	9802      	ldr	r0, [sp, #8]
1004ad24:	4632      	mov	r2, r6
1004ad26:	2812      	cmp	r0, #18
1004ad28:	4629      	mov	r1, r5
1004ad2a:	4620      	mov	r0, r4
1004ad2c:	d002      	beq.n	1004ad34 <Gatt_Appl_Auth_For_Write+0xfc>
1004ad2e:	f012 ff4f 	bl	1005dbd0 <Prepare_Write_Resp>
1004ad32:	e001      	b.n	1004ad38 <Gatt_Appl_Auth_For_Write+0x100>
1004ad34:	f013 fcf9 	bl	1005e72a <Write_Resp>
1004ad38:	2800      	cmp	r0, #0
1004ad3a:	d009      	beq.n	1004ad50 <Gatt_Appl_Auth_For_Write+0x118>
1004ad3c:	2869      	cmp	r0, #105	; 0x69
1004ad3e:	d005      	beq.n	1004ad4c <Gatt_Appl_Auth_For_Write+0x114>
1004ad40:	6920      	ldr	r0, [r4, #16]
1004ad42:	43b8      	bics	r0, r7
1004ad44:	6120      	str	r0, [r4, #16]
1004ad46:	4630      	mov	r0, r6
1004ad48:	f7ff fb28 	bl	1004a39c <GATT_Send_Packet>
1004ad4c:	2000      	movs	r0, #0
1004ad4e:	e7e4      	b.n	1004ad1a <Gatt_Appl_Auth_For_Write+0xe2>
1004ad50:	4629      	mov	r1, r5
1004ad52:	9806      	ldr	r0, [sp, #24]
1004ad54:	f011 ff27 	bl	1005cba6 <acl_list_remove>
1004ad58:	2101      	movs	r1, #1
1004ad5a:	4628      	mov	r0, r5
1004ad5c:	f009 fec2 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004ad60:	e7ee      	b.n	1004ad40 <Gatt_Appl_Auth_For_Write+0x108>
1004ad62:	6920      	ldr	r0, [r4, #16]
1004ad64:	0340      	lsls	r0, r0, #13
1004ad66:	d522      	bpl.n	1004adae <Gatt_Appl_Auth_For_Write+0x176>
1004ad68:	4638      	mov	r0, r7
1004ad6a:	f011 fecf 	bl	1005cb0c <acl_list_first>
1004ad6e:	4605      	mov	r5, r0
1004ad70:	e01b      	b.n	1004adaa <Gatt_Appl_Auth_For_Write+0x172>
1004ad72:	88a8      	ldrh	r0, [r5, #4]
1004ad74:	0500      	lsls	r0, r0, #20
1004ad76:	0d00      	lsrs	r0, r0, #20
1004ad78:	42b0      	cmp	r0, r6
1004ad7a:	d115      	bne.n	1004ada8 <Gatt_Appl_Auth_For_Write+0x170>
1004ad7c:	68a8      	ldr	r0, [r5, #8]
1004ad7e:	7b00      	ldrb	r0, [r0, #12]
1004ad80:	2852      	cmp	r0, #82	; 0x52
1004ad82:	d001      	beq.n	1004ad88 <Gatt_Appl_Auth_For_Write+0x150>
1004ad84:	28d2      	cmp	r0, #210	; 0xd2
1004ad86:	d10f      	bne.n	1004ada8 <Gatt_Appl_Auth_For_Write+0x170>
1004ad88:	2302      	movs	r3, #2
1004ad8a:	2205      	movs	r2, #5
1004ad8c:	4669      	mov	r1, sp
1004ad8e:	4628      	mov	r0, r5
1004ad90:	f009 fea2 	bl	10054ad8 <PM_Pckt_Cmp>
1004ad94:	2800      	cmp	r0, #0
1004ad96:	d107      	bne.n	1004ada8 <Gatt_Appl_Auth_For_Write+0x170>
1004ad98:	2207      	movs	r2, #7
1004ad9a:	4628      	mov	r0, r5
1004ad9c:	9b01      	ldr	r3, [sp, #4]
1004ad9e:	9903      	ldr	r1, [sp, #12]
1004ada0:	f009 fe9a 	bl	10054ad8 <PM_Pckt_Cmp>
1004ada4:	2800      	cmp	r0, #0
1004ada6:	d004      	beq.n	1004adb2 <Gatt_Appl_Auth_For_Write+0x17a>
1004ada8:	682d      	ldr	r5, [r5, #0]
1004adaa:	2d00      	cmp	r5, #0
1004adac:	d1e1      	bne.n	1004ad72 <Gatt_Appl_Auth_For_Write+0x13a>
1004adae:	2041      	movs	r0, #65	; 0x41
1004adb0:	e7b3      	b.n	1004ad1a <Gatt_Appl_Auth_For_Write+0xe2>
1004adb2:	9807      	ldr	r0, [sp, #28]
1004adb4:	2800      	cmp	r0, #0
1004adb6:	d108      	bne.n	1004adca <Gatt_Appl_Auth_For_Write+0x192>
1004adb8:	2101      	movs	r1, #1
1004adba:	6920      	ldr	r0, [r4, #16]
1004adbc:	0689      	lsls	r1, r1, #26
1004adbe:	4308      	orrs	r0, r1
1004adc0:	6120      	str	r0, [r4, #16]
1004adc2:	4629      	mov	r1, r5
1004adc4:	4620      	mov	r0, r4
1004adc6:	f013 fc1a 	bl	1005e5fe <Write_Cmd>
1004adca:	2101      	movs	r1, #1
1004adcc:	6920      	ldr	r0, [r4, #16]
1004adce:	0489      	lsls	r1, r1, #18
1004add0:	4388      	bics	r0, r1
1004add2:	6120      	str	r0, [r4, #16]
1004add4:	4629      	mov	r1, r5
1004add6:	4638      	mov	r0, r7
1004add8:	f011 fee5 	bl	1005cba6 <acl_list_remove>
1004addc:	2101      	movs	r1, #1
1004adde:	4628      	mov	r0, r5
1004ade0:	f009 fe80 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004ade4:	e7b2      	b.n	1004ad4c <Gatt_Appl_Auth_For_Write+0x114>
1004ade6:	0000      	.short	0x0000
1004ade8:	20000d64 	.word	0x20000d64
1004adec:	0000072c 	.word	0x0000072c

1004adf0 <Gatt_Delete_Characteristic>:
1004adf0:	b5f0      	push	{r4, r5, r6, r7, lr}
1004adf2:	b087      	sub	sp, #28
1004adf4:	460c      	mov	r4, r1
1004adf6:	4605      	mov	r5, r0
1004adf8:	f000 fb80 	bl	1004b4fc <Gatt_Server_Db_Check>
1004adfc:	2800      	cmp	r0, #0
1004adfe:	d10d      	bne.n	1004ae1c <Gatt_Delete_Characteristic+0x2c>
1004ae00:	a904      	add	r1, sp, #16
1004ae02:	4628      	mov	r0, r5
1004ae04:	f001 f940 	bl	1004c088 <Gatt_search_service_handle>
1004ae08:	2800      	cmp	r0, #0
1004ae0a:	d106      	bne.n	1004ae1a <Gatt_Delete_Characteristic+0x2a>
1004ae0c:	aa06      	add	r2, sp, #24
1004ae0e:	4620      	mov	r0, r4
1004ae10:	9904      	ldr	r1, [sp, #16]
1004ae12:	f001 f929 	bl	1004c068 <Gatt_search_handle>
1004ae16:	2800      	cmp	r0, #0
1004ae18:	d002      	beq.n	1004ae20 <Gatt_Delete_Characteristic+0x30>
1004ae1a:	2060      	movs	r0, #96	; 0x60
1004ae1c:	b007      	add	sp, #28
1004ae1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ae20:	9c06      	ldr	r4, [sp, #24]
1004ae22:	4816      	ldr	r0, [pc, #88]	; (1004ae7c <Gatt_Delete_Characteristic+0x8c>)
1004ae24:	8921      	ldrh	r1, [r4, #8]
1004ae26:	4281      	cmp	r1, r0
1004ae28:	d103      	bne.n	1004ae32 <Gatt_Delete_Characteristic+0x42>
1004ae2a:	2123      	movs	r1, #35	; 0x23
1004ae2c:	5d09      	ldrb	r1, [r1, r4]
1004ae2e:	2901      	cmp	r1, #1
1004ae30:	d001      	beq.n	1004ae36 <Gatt_Delete_Characteristic+0x46>
1004ae32:	2042      	movs	r0, #66	; 0x42
1004ae34:	e7f2      	b.n	1004ae1c <Gatt_Delete_Characteristic+0x2c>
1004ae36:	9d04      	ldr	r5, [sp, #16]
1004ae38:	8ba1      	ldrh	r1, [r4, #28]
1004ae3a:	6826      	ldr	r6, [r4, #0]
1004ae3c:	3520      	adds	r5, #32
1004ae3e:	9101      	str	r1, [sp, #4]
1004ae40:	9804      	ldr	r0, [sp, #16]
1004ae42:	8ba7      	ldrh	r7, [r4, #28]
1004ae44:	4621      	mov	r1, r4
1004ae46:	3020      	adds	r0, #32
1004ae48:	f00a fd43 	bl	100558d2 <List_Circular_Remove_Node>
1004ae4c:	9804      	ldr	r0, [sp, #16]
1004ae4e:	4621      	mov	r1, r4
1004ae50:	3018      	adds	r0, #24
1004ae52:	f00a fd1f 	bl	10055894 <List_Circular_Insert_Tail>
1004ae56:	4634      	mov	r4, r6
1004ae58:	8921      	ldrh	r1, [r4, #8]
1004ae5a:	4808      	ldr	r0, [pc, #32]	; (1004ae7c <Gatt_Delete_Characteristic+0x8c>)
1004ae5c:	6836      	ldr	r6, [r6, #0]
1004ae5e:	4281      	cmp	r1, r0
1004ae60:	d103      	bne.n	1004ae6a <Gatt_Delete_Characteristic+0x7a>
1004ae62:	2023      	movs	r0, #35	; 0x23
1004ae64:	5d00      	ldrb	r0, [r0, r4]
1004ae66:	2801      	cmp	r0, #1
1004ae68:	d001      	beq.n	1004ae6e <Gatt_Delete_Characteristic+0x7e>
1004ae6a:	42ac      	cmp	r4, r5
1004ae6c:	d1e8      	bne.n	1004ae40 <Gatt_Delete_Characteristic+0x50>
1004ae6e:	463a      	mov	r2, r7
1004ae70:	2000      	movs	r0, #0
1004ae72:	9901      	ldr	r1, [sp, #4]
1004ae74:	f001 f920 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004ae78:	2000      	movs	r0, #0
1004ae7a:	e7cf      	b.n	1004ae1c <Gatt_Delete_Characteristic+0x2c>
1004ae7c:	00002803 	.word	0x00002803

1004ae80 <Gatt_Delete_Include_Service>:
1004ae80:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004ae82:	460c      	mov	r4, r1
1004ae84:	4605      	mov	r5, r0
1004ae86:	f000 fb39 	bl	1004b4fc <Gatt_Server_Db_Check>
1004ae8a:	2800      	cmp	r0, #0
1004ae8c:	d10d      	bne.n	1004aeaa <Gatt_Delete_Include_Service+0x2a>
1004ae8e:	4669      	mov	r1, sp
1004ae90:	4628      	mov	r0, r5
1004ae92:	f001 f8f9 	bl	1004c088 <Gatt_search_service_handle>
1004ae96:	2800      	cmp	r0, #0
1004ae98:	d106      	bne.n	1004aea8 <Gatt_Delete_Include_Service+0x28>
1004ae9a:	aa01      	add	r2, sp, #4
1004ae9c:	4620      	mov	r0, r4
1004ae9e:	9900      	ldr	r1, [sp, #0]
1004aea0:	f001 f8e2 	bl	1004c068 <Gatt_search_handle>
1004aea4:	2800      	cmp	r0, #0
1004aea6:	d001      	beq.n	1004aeac <Gatt_Delete_Include_Service+0x2c>
1004aea8:	2060      	movs	r0, #96	; 0x60
1004aeaa:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004aeac:	9901      	ldr	r1, [sp, #4]
1004aeae:	4a0d      	ldr	r2, [pc, #52]	; (1004aee4 <Gatt_Delete_Include_Service+0x64>)
1004aeb0:	8908      	ldrh	r0, [r1, #8]
1004aeb2:	4290      	cmp	r0, r2
1004aeb4:	d103      	bne.n	1004aebe <Gatt_Delete_Include_Service+0x3e>
1004aeb6:	2023      	movs	r0, #35	; 0x23
1004aeb8:	5c40      	ldrb	r0, [r0, r1]
1004aeba:	2801      	cmp	r0, #1
1004aebc:	d001      	beq.n	1004aec2 <Gatt_Delete_Include_Service+0x42>
1004aebe:	2042      	movs	r0, #66	; 0x42
1004aec0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004aec2:	9800      	ldr	r0, [sp, #0]
1004aec4:	8b8c      	ldrh	r4, [r1, #28]
1004aec6:	3020      	adds	r0, #32
1004aec8:	f00a fd03 	bl	100558d2 <List_Circular_Remove_Node>
1004aecc:	9800      	ldr	r0, [sp, #0]
1004aece:	9901      	ldr	r1, [sp, #4]
1004aed0:	3018      	adds	r0, #24
1004aed2:	f00a fcdf 	bl	10055894 <List_Circular_Insert_Tail>
1004aed6:	4622      	mov	r2, r4
1004aed8:	4611      	mov	r1, r2
1004aeda:	2000      	movs	r0, #0
1004aedc:	f001 f8ec 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004aee0:	2000      	movs	r0, #0
1004aee2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004aee4:	00002802 	.word	0x00002802

1004aee8 <Gatt_Delete_Service>:
1004aee8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1004aeea:	4605      	mov	r5, r0
1004aeec:	4827      	ldr	r0, [pc, #156]	; (1004af8c <Gatt_Delete_Service+0xa4>)
1004aeee:	4928      	ldr	r1, [pc, #160]	; (1004af90 <Gatt_Delete_Service+0xa8>)
1004aef0:	6800      	ldr	r0, [r0, #0]
1004aef2:	2400      	movs	r4, #0
1004aef4:	1846      	adds	r6, r0, r1
1004aef6:	f000 fb01 	bl	1004b4fc <Gatt_Server_Db_Check>
1004aefa:	2800      	cmp	r0, #0
1004aefc:	d108      	bne.n	1004af10 <Gatt_Delete_Service+0x28>
1004aefe:	2d01      	cmp	r5, #1
1004af00:	d007      	beq.n	1004af12 <Gatt_Delete_Service+0x2a>
1004af02:	4669      	mov	r1, sp
1004af04:	4628      	mov	r0, r5
1004af06:	f001 f8bf 	bl	1004c088 <Gatt_search_service_handle>
1004af0a:	2800      	cmp	r0, #0
1004af0c:	d003      	beq.n	1004af16 <Gatt_Delete_Service+0x2e>
1004af0e:	2060      	movs	r0, #96	; 0x60
1004af10:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004af12:	2062      	movs	r0, #98	; 0x62
1004af14:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004af16:	9d00      	ldr	r5, [sp, #0]
1004af18:	8d28      	ldrh	r0, [r5, #40]	; 0x28
1004af1a:	9001      	str	r0, [sp, #4]
1004af1c:	69af      	ldr	r7, [r5, #24]
1004af1e:	3518      	adds	r5, #24
1004af20:	e00b      	b.n	1004af3a <Gatt_Delete_Service+0x52>
1004af22:	9800      	ldr	r0, [sp, #0]
1004af24:	4639      	mov	r1, r7
1004af26:	3018      	adds	r0, #24
1004af28:	f00a fcd3 	bl	100558d2 <List_Circular_Remove_Node>
1004af2c:	4639      	mov	r1, r7
1004af2e:	4630      	mov	r0, r6
1004af30:	f00a fcb0 	bl	10055894 <List_Circular_Insert_Tail>
1004af34:	1c64      	adds	r4, r4, #1
1004af36:	682f      	ldr	r7, [r5, #0]
1004af38:	b2e4      	uxtb	r4, r4
1004af3a:	42af      	cmp	r7, r5
1004af3c:	d1f1      	bne.n	1004af22 <Gatt_Delete_Service+0x3a>
1004af3e:	9d00      	ldr	r5, [sp, #0]
1004af40:	6a2f      	ldr	r7, [r5, #32]
1004af42:	3520      	adds	r5, #32
1004af44:	e00b      	b.n	1004af5e <Gatt_Delete_Service+0x76>
1004af46:	9800      	ldr	r0, [sp, #0]
1004af48:	4639      	mov	r1, r7
1004af4a:	3020      	adds	r0, #32
1004af4c:	f00a fcc1 	bl	100558d2 <List_Circular_Remove_Node>
1004af50:	4639      	mov	r1, r7
1004af52:	4630      	mov	r0, r6
1004af54:	f00a fc9e 	bl	10055894 <List_Circular_Insert_Tail>
1004af58:	1c64      	adds	r4, r4, #1
1004af5a:	682f      	ldr	r7, [r5, #0]
1004af5c:	b2e4      	uxtb	r4, r4
1004af5e:	42af      	cmp	r7, r5
1004af60:	d1f1      	bne.n	1004af46 <Gatt_Delete_Service+0x5e>
1004af62:	4630      	mov	r0, r6
1004af64:	3008      	adds	r0, #8
1004af66:	9900      	ldr	r1, [sp, #0]
1004af68:	f00a fcb3 	bl	100558d2 <List_Circular_Remove_Node>
1004af6c:	4630      	mov	r0, r6
1004af6e:	3010      	adds	r0, #16
1004af70:	9900      	ldr	r1, [sp, #0]
1004af72:	f00a fc8f 	bl	10055894 <List_Circular_Insert_Tail>
1004af76:	1c64      	adds	r4, r4, #1
1004af78:	9901      	ldr	r1, [sp, #4]
1004af7a:	b2e0      	uxtb	r0, r4
1004af7c:	1808      	adds	r0, r1, r0
1004af7e:	b282      	uxth	r2, r0
1004af80:	2000      	movs	r0, #0
1004af82:	f001 f899 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004af86:	2000      	movs	r0, #0
1004af88:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004af8a:	0000      	.short	0x0000
1004af8c:	20000d64 	.word	0x20000d64
1004af90:	0000072c 	.word	0x0000072c

1004af94 <Gatt_Find_Srv_From_Handle>:
1004af94:	4602      	mov	r2, r0
1004af96:	4808      	ldr	r0, [pc, #32]	; (1004afb8 <Gatt_Find_Srv_From_Handle+0x24>)
1004af98:	4908      	ldr	r1, [pc, #32]	; (1004afbc <Gatt_Find_Srv_From_Handle+0x28>)
1004af9a:	6800      	ldr	r0, [r0, #0]
1004af9c:	1841      	adds	r1, r0, r1
1004af9e:	6888      	ldr	r0, [r1, #8]
1004afa0:	3108      	adds	r1, #8
1004afa2:	e003      	b.n	1004afac <Gatt_Find_Srv_From_Handle+0x18>
1004afa4:	8d03      	ldrh	r3, [r0, #40]	; 0x28
1004afa6:	4293      	cmp	r3, r2
1004afa8:	d202      	bcs.n	1004afb0 <Gatt_Find_Srv_From_Handle+0x1c>
1004afaa:	6800      	ldr	r0, [r0, #0]
1004afac:	4288      	cmp	r0, r1
1004afae:	d1f9      	bne.n	1004afa4 <Gatt_Find_Srv_From_Handle+0x10>
1004afb0:	4288      	cmp	r0, r1
1004afb2:	d100      	bne.n	1004afb6 <Gatt_Find_Srv_From_Handle+0x22>
1004afb4:	2000      	movs	r0, #0
1004afb6:	4770      	bx	lr
1004afb8:	20000d64 	.word	0x20000d64
1004afbc:	0000072c 	.word	0x0000072c

1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>:
1004afc0:	4603      	mov	r3, r0
1004afc2:	b510      	push	{r4, lr}
1004afc4:	480e      	ldr	r0, [pc, #56]	; (1004b000 <Gatt_Find_Srv_Owner_Of_Handle+0x40>)
1004afc6:	490f      	ldr	r1, [pc, #60]	; (1004b004 <Gatt_Find_Srv_Owner_Of_Handle+0x44>)
1004afc8:	6800      	ldr	r0, [r0, #0]
1004afca:	1841      	adds	r1, r0, r1
1004afcc:	6888      	ldr	r0, [r1, #8]
1004afce:	3108      	adds	r1, #8
1004afd0:	e003      	b.n	1004afda <Gatt_Find_Srv_Owner_Of_Handle+0x1a>
1004afd2:	8d14      	ldrh	r4, [r2, #40]	; 0x28
1004afd4:	429c      	cmp	r4, r3
1004afd6:	d803      	bhi.n	1004afe0 <Gatt_Find_Srv_Owner_Of_Handle+0x20>
1004afd8:	4610      	mov	r0, r2
1004afda:	6802      	ldr	r2, [r0, #0]
1004afdc:	428a      	cmp	r2, r1
1004afde:	d1f8      	bne.n	1004afd2 <Gatt_Find_Srv_Owner_Of_Handle+0x12>
1004afe0:	428a      	cmp	r2, r1
1004afe2:	d10c      	bne.n	1004affe <Gatt_Find_Srv_Owner_Of_Handle+0x3e>
1004afe4:	8d01      	ldrh	r1, [r0, #40]	; 0x28
1004afe6:	4299      	cmp	r1, r3
1004afe8:	d209      	bcs.n	1004affe <Gatt_Find_Srv_Owner_Of_Handle+0x3e>
1004afea:	4601      	mov	r1, r0
1004afec:	6a02      	ldr	r2, [r0, #32]
1004afee:	3120      	adds	r1, #32
1004aff0:	428a      	cmp	r2, r1
1004aff2:	d003      	beq.n	1004affc <Gatt_Find_Srv_Owner_Of_Handle+0x3c>
1004aff4:	6a41      	ldr	r1, [r0, #36]	; 0x24
1004aff6:	8b89      	ldrh	r1, [r1, #28]
1004aff8:	4299      	cmp	r1, r3
1004affa:	d200      	bcs.n	1004affe <Gatt_Find_Srv_Owner_Of_Handle+0x3e>
1004affc:	2000      	movs	r0, #0
1004affe:	bd10      	pop	{r4, pc}
1004b000:	20000d64 	.word	0x20000d64
1004b004:	0000072c 	.word	0x0000072c

1004b008 <Gatt_Find_Timed_Out_Connection_Index>:
1004b008:	4602      	mov	r2, r0
1004b00a:	b510      	push	{r4, lr}
1004b00c:	480b      	ldr	r0, [pc, #44]	; (1004b03c <Gatt_Find_Timed_Out_Connection_Index+0x34>)
1004b00e:	0512      	lsls	r2, r2, #20
1004b010:	6801      	ldr	r1, [r0, #0]
1004b012:	2009      	movs	r0, #9
1004b014:	0200      	lsls	r0, r0, #8
1004b016:	1808      	adds	r0, r1, r0
1004b018:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004b01a:	2000      	movs	r0, #0
1004b01c:	0d12      	lsrs	r2, r2, #20
1004b01e:	31a0      	adds	r1, #160	; 0xa0
1004b020:	7b09      	ldrb	r1, [r1, #12]
1004b022:	e007      	b.n	1004b034 <Gatt_Find_Timed_Out_Connection_Index+0x2c>
1004b024:	0144      	lsls	r4, r0, #5
1004b026:	5b1c      	ldrh	r4, [r3, r4]
1004b028:	0524      	lsls	r4, r4, #20
1004b02a:	0d24      	lsrs	r4, r4, #20
1004b02c:	4294      	cmp	r4, r2
1004b02e:	d003      	beq.n	1004b038 <Gatt_Find_Timed_Out_Connection_Index+0x30>
1004b030:	1c40      	adds	r0, r0, #1
1004b032:	b2c0      	uxtb	r0, r0
1004b034:	4281      	cmp	r1, r0
1004b036:	d8f5      	bhi.n	1004b024 <Gatt_Find_Timed_Out_Connection_Index+0x1c>
1004b038:	bd10      	pop	{r4, pc}
1004b03a:	0000      	.short	0x0000
1004b03c:	20000d64 	.word	0x20000d64

1004b040 <Gatt_Flush_Pending_AclPacket_Lists>:
1004b040:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004b042:	4605      	mov	r5, r0
1004b044:	4617      	mov	r7, r2
1004b046:	9801      	ldr	r0, [sp, #4]
1004b048:	f011 fd60 	bl	1005cb0c <acl_list_first>
1004b04c:	052e      	lsls	r6, r5, #20
1004b04e:	4604      	mov	r4, r0
1004b050:	0d36      	lsrs	r6, r6, #20
1004b052:	e00c      	b.n	1004b06e <Gatt_Flush_Pending_AclPacket_Lists+0x2e>
1004b054:	88a0      	ldrh	r0, [r4, #4]
1004b056:	6825      	ldr	r5, [r4, #0]
1004b058:	42b0      	cmp	r0, r6
1004b05a:	d107      	bne.n	1004b06c <Gatt_Flush_Pending_AclPacket_Lists+0x2c>
1004b05c:	4621      	mov	r1, r4
1004b05e:	9801      	ldr	r0, [sp, #4]
1004b060:	f011 fda1 	bl	1005cba6 <acl_list_remove>
1004b064:	4639      	mov	r1, r7
1004b066:	4620      	mov	r0, r4
1004b068:	f009 fd3c 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004b06c:	462c      	mov	r4, r5
1004b06e:	2c00      	cmp	r4, #0
1004b070:	d1f0      	bne.n	1004b054 <Gatt_Flush_Pending_AclPacket_Lists+0x14>
1004b072:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004b074 <Gatt_Include_Service>:
1004b074:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004b076:	4852      	ldr	r0, [pc, #328]	; (1004b1c0 <Gatt_Include_Service+0x14c>)
1004b078:	460c      	mov	r4, r1
1004b07a:	6800      	ldr	r0, [r0, #0]
1004b07c:	4951      	ldr	r1, [pc, #324]	; (1004b1c4 <Gatt_Include_Service+0x150>)
1004b07e:	b093      	sub	sp, #76	; 0x4c
1004b080:	1840      	adds	r0, r0, r1
1004b082:	900f      	str	r0, [sp, #60]	; 0x3c
1004b084:	8825      	ldrh	r5, [r4, #0]
1004b086:	8861      	ldrh	r1, [r4, #2]
1004b088:	4668      	mov	r0, sp
1004b08a:	8581      	strh	r1, [r0, #44]	; 0x2c
1004b08c:	88a1      	ldrh	r1, [r4, #4]
1004b08e:	8601      	strh	r1, [r0, #48]	; 0x30
1004b090:	4621      	mov	r1, r4
1004b092:	2210      	movs	r2, #16
1004b094:	3108      	adds	r1, #8
1004b096:	a807      	add	r0, sp, #28
1004b098:	f7fb fb67 	bl	1004676a <__aeabi_memcpy>
1004b09c:	79a7      	ldrb	r7, [r4, #6]
1004b09e:	f000 fa2d 	bl	1004b4fc <Gatt_Server_Db_Check>
1004b0a2:	2800      	cmp	r0, #0
1004b0a4:	d10d      	bne.n	1004b0c2 <Gatt_Include_Service+0x4e>
1004b0a6:	4669      	mov	r1, sp
1004b0a8:	8d88      	ldrh	r0, [r1, #44]	; 0x2c
1004b0aa:	8e09      	ldrh	r1, [r1, #48]	; 0x30
1004b0ac:	4288      	cmp	r0, r1
1004b0ae:	d839      	bhi.n	1004b124 <Gatt_Include_Service+0xb0>
1004b0b0:	2800      	cmp	r0, #0
1004b0b2:	d037      	beq.n	1004b124 <Gatt_Include_Service+0xb0>
1004b0b4:	a910      	add	r1, sp, #64	; 0x40
1004b0b6:	4628      	mov	r0, r5
1004b0b8:	f000 ffe6 	bl	1004c088 <Gatt_search_service_handle>
1004b0bc:	2800      	cmp	r0, #0
1004b0be:	d002      	beq.n	1004b0c6 <Gatt_Include_Service+0x52>
1004b0c0:	2060      	movs	r0, #96	; 0x60
1004b0c2:	b015      	add	sp, #84	; 0x54
1004b0c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b0c6:	9d10      	ldr	r5, [sp, #64]	; 0x40
1004b0c8:	a903      	add	r1, sp, #12
1004b0ca:	4628      	mov	r0, r5
1004b0cc:	3018      	adds	r0, #24
1004b0ce:	9005      	str	r0, [sp, #20]
1004b0d0:	f00a fbd6 	bl	10055880 <List_Circular_Get_Size>
1004b0d4:	4668      	mov	r0, sp
1004b0d6:	8980      	ldrh	r0, [r0, #12]
1004b0d8:	2800      	cmp	r0, #0
1004b0da:	d031      	beq.n	1004b140 <Gatt_Include_Service+0xcc>
1004b0dc:	4628      	mov	r0, r5
1004b0de:	3020      	adds	r0, #32
1004b0e0:	69ac      	ldr	r4, [r5, #24]
1004b0e2:	a90d      	add	r1, sp, #52	; 0x34
1004b0e4:	9004      	str	r0, [sp, #16]
1004b0e6:	f00a fbcb 	bl	10055880 <List_Circular_Get_Size>
1004b0ea:	4668      	mov	r0, sp
1004b0ec:	8e81      	ldrh	r1, [r0, #52]	; 0x34
1004b0ee:	4a36      	ldr	r2, [pc, #216]	; (1004b1c8 <Gatt_Include_Service+0x154>)
1004b0f0:	2900      	cmp	r1, #0
1004b0f2:	d013      	beq.n	1004b11c <Gatt_Include_Service+0xa8>
1004b0f4:	466e      	mov	r6, sp
1004b0f6:	89b6      	ldrh	r6, [r6, #12]
1004b0f8:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
1004b0fa:	1876      	adds	r6, r6, r1
1004b0fc:	6a68      	ldr	r0, [r5, #36]	; 0x24
1004b0fe:	199b      	adds	r3, r3, r6
1004b100:	8b86      	ldrh	r6, [r0, #28]
1004b102:	42b3      	cmp	r3, r6
1004b104:	d101      	bne.n	1004b10a <Gatt_Include_Service+0x96>
1004b106:	2061      	movs	r0, #97	; 0x61
1004b108:	e7db      	b.n	1004b0c2 <Gatt_Include_Service+0x4e>
1004b10a:	8903      	ldrh	r3, [r0, #8]
1004b10c:	4293      	cmp	r3, r2
1004b10e:	d103      	bne.n	1004b118 <Gatt_Include_Service+0xa4>
1004b110:	3020      	adds	r0, #32
1004b112:	78c0      	ldrb	r0, [r0, #3]
1004b114:	2801      	cmp	r0, #1
1004b116:	d001      	beq.n	1004b11c <Gatt_Include_Service+0xa8>
1004b118:	2062      	movs	r0, #98	; 0x62
1004b11a:	e7d2      	b.n	1004b0c2 <Gatt_Include_Service+0x4e>
1004b11c:	2f01      	cmp	r7, #1
1004b11e:	d003      	beq.n	1004b128 <Gatt_Include_Service+0xb4>
1004b120:	2f02      	cmp	r7, #2
1004b122:	d003      	beq.n	1004b12c <Gatt_Include_Service+0xb8>
1004b124:	2042      	movs	r0, #66	; 0x42
1004b126:	e7cc      	b.n	1004b0c2 <Gatt_Include_Service+0x4e>
1004b128:	2006      	movs	r0, #6
1004b12a:	e000      	b.n	1004b12e <Gatt_Include_Service+0xba>
1004b12c:	2004      	movs	r0, #4
1004b12e:	83e0      	strh	r0, [r4, #30]
1004b130:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
1004b132:	3640      	adds	r6, #64	; 0x40
1004b134:	8b70      	ldrh	r0, [r6, #26]
1004b136:	8b33      	ldrh	r3, [r6, #24]
1004b138:	1ac0      	subs	r0, r0, r3
1004b13a:	8be3      	ldrh	r3, [r4, #30]
1004b13c:	4298      	cmp	r0, r3
1004b13e:	da01      	bge.n	1004b144 <Gatt_Include_Service+0xd0>
1004b140:	2048      	movs	r0, #72	; 0x48
1004b142:	e7be      	b.n	1004b0c2 <Gatt_Include_Service+0x4e>
1004b144:	8d28      	ldrh	r0, [r5, #40]	; 0x28
1004b146:	1c49      	adds	r1, r1, #1
1004b148:	1840      	adds	r0, r0, r1
1004b14a:	9913      	ldr	r1, [sp, #76]	; 0x4c
1004b14c:	4625      	mov	r5, r4
1004b14e:	8008      	strh	r0, [r1, #0]
1004b150:	83a0      	strh	r0, [r4, #28]
1004b152:	8122      	strh	r2, [r4, #8]
1004b154:	2001      	movs	r0, #1
1004b156:	3520      	adds	r5, #32
1004b158:	70e8      	strb	r0, [r5, #3]
1004b15a:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004b15c:	8b31      	ldrh	r1, [r6, #24]
1004b15e:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004b160:	2202      	movs	r2, #2
1004b162:	1840      	adds	r0, r0, r1
1004b164:	a90b      	add	r1, sp, #44	; 0x2c
1004b166:	61a0      	str	r0, [r4, #24]
1004b168:	f7f5 fb0b 	bl	10040782 <Osal_MemCpy>
1004b16c:	69a0      	ldr	r0, [r4, #24]
1004b16e:	2202      	movs	r2, #2
1004b170:	a90c      	add	r1, sp, #48	; 0x30
1004b172:	1c80      	adds	r0, r0, #2
1004b174:	f7f5 fb05 	bl	10040782 <Osal_MemCpy>
1004b178:	8b30      	ldrh	r0, [r6, #24]
1004b17a:	1d00      	adds	r0, r0, #4
1004b17c:	8330      	strh	r0, [r6, #24]
1004b17e:	2f01      	cmp	r7, #1
1004b180:	d108      	bne.n	1004b194 <Gatt_Include_Service+0x120>
1004b182:	69a0      	ldr	r0, [r4, #24]
1004b184:	2202      	movs	r2, #2
1004b186:	a907      	add	r1, sp, #28
1004b188:	1d00      	adds	r0, r0, #4
1004b18a:	f7f5 fafa 	bl	10040782 <Osal_MemCpy>
1004b18e:	8b30      	ldrh	r0, [r6, #24]
1004b190:	1c80      	adds	r0, r0, #2
1004b192:	8330      	strh	r0, [r6, #24]
1004b194:	2000      	movs	r0, #0
1004b196:	7168      	strb	r0, [r5, #5]
1004b198:	2101      	movs	r1, #1
1004b19a:	7129      	strb	r1, [r5, #4]
1004b19c:	70a8      	strb	r0, [r5, #2]
1004b19e:	71a8      	strb	r0, [r5, #6]
1004b1a0:	4621      	mov	r1, r4
1004b1a2:	9805      	ldr	r0, [sp, #20]
1004b1a4:	f00a fb95 	bl	100558d2 <List_Circular_Remove_Node>
1004b1a8:	4621      	mov	r1, r4
1004b1aa:	9804      	ldr	r0, [sp, #16]
1004b1ac:	f00a fb72 	bl	10055894 <List_Circular_Insert_Tail>
1004b1b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004b1b2:	8801      	ldrh	r1, [r0, #0]
1004b1b4:	2000      	movs	r0, #0
1004b1b6:	460a      	mov	r2, r1
1004b1b8:	f000 ff7e 	bl	1004c0b8 <Ind_Service_Change_Charac>
1004b1bc:	2000      	movs	r0, #0
1004b1be:	e780      	b.n	1004b0c2 <Gatt_Include_Service+0x4e>
1004b1c0:	20000d64 	.word	0x20000d64
1004b1c4:	0000072c 	.word	0x0000072c
1004b1c8:	00002802 	.word	0x00002802

1004b1cc <Gatt_Process_Q>:
1004b1cc:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b1ce:	b08b      	sub	sp, #44	; 0x2c
1004b1d0:	2000      	movs	r0, #0
1004b1d2:	4963      	ldr	r1, [pc, #396]	; (1004b360 <Gatt_Process_Q+0x194>)
1004b1d4:	9002      	str	r0, [sp, #8]
1004b1d6:	4863      	ldr	r0, [pc, #396]	; (1004b364 <Gatt_Process_Q+0x198>)
1004b1d8:	680a      	ldr	r2, [r1, #0]
1004b1da:	1814      	adds	r4, r2, r0
1004b1dc:	b672      	cpsid	i
1004b1de:	4610      	mov	r0, r2
1004b1e0:	3040      	adds	r0, #64	; 0x40
1004b1e2:	79c5      	ldrb	r5, [r0, #7]
1004b1e4:	2302      	movs	r3, #2
1004b1e6:	431d      	orrs	r5, r3
1004b1e8:	71c5      	strb	r5, [r0, #7]
1004b1ea:	b662      	cpsie	i
1004b1ec:	4625      	mov	r5, r4
1004b1ee:	3540      	adds	r5, #64	; 0x40
1004b1f0:	7a28      	ldrb	r0, [r5, #8]
1004b1f2:	07c0      	lsls	r0, r0, #31
1004b1f4:	d07d      	beq.n	1004b2f2 <Gatt_Process_Q+0x126>
1004b1f6:	2009      	movs	r0, #9
1004b1f8:	0200      	lsls	r0, r0, #8
1004b1fa:	1810      	adds	r0, r2, r0
1004b1fc:	2600      	movs	r6, #0
1004b1fe:	6b47      	ldr	r7, [r0, #52]	; 0x34
1004b200:	e049      	b.n	1004b296 <Gatt_Process_Q+0xca>
1004b202:	0171      	lsls	r1, r6, #5
1004b204:	5a7a      	ldrh	r2, [r7, r1]
1004b206:	2a00      	cmp	r2, #0
1004b208:	d043      	beq.n	1004b292 <Gatt_Process_Q+0xc6>
1004b20a:	19c9      	adds	r1, r1, r7
1004b20c:	9106      	str	r1, [sp, #24]
1004b20e:	6909      	ldr	r1, [r1, #16]
1004b210:	024a      	lsls	r2, r1, #9
1004b212:	d41e      	bmi.n	1004b252 <Gatt_Process_Q+0x86>
1004b214:	028a      	lsls	r2, r1, #10
1004b216:	d526      	bpl.n	1004b266 <Gatt_Process_Q+0x9a>
1004b218:	2102      	movs	r1, #2
1004b21a:	9104      	str	r1, [sp, #16]
1004b21c:	9906      	ldr	r1, [sp, #24]
1004b21e:	2301      	movs	r3, #1
1004b220:	8809      	ldrh	r1, [r1, #0]
1004b222:	0509      	lsls	r1, r1, #20
1004b224:	0d09      	lsrs	r1, r1, #20
1004b226:	9103      	str	r1, [sp, #12]
1004b228:	2137      	movs	r1, #55	; 0x37
1004b22a:	0149      	lsls	r1, r1, #5
1004b22c:	1841      	adds	r1, r0, r1
1004b22e:	7b09      	ldrb	r1, [r1, #12]
1004b230:	0789      	lsls	r1, r1, #30
1004b232:	d50e      	bpl.n	1004b252 <Gatt_Process_Q+0x86>
1004b234:	02d9      	lsls	r1, r3, #11
1004b236:	3008      	adds	r0, #8
1004b238:	1840      	adds	r0, r0, r1
1004b23a:	2223      	movs	r2, #35	; 0x23
1004b23c:	6940      	ldr	r0, [r0, #20]
1004b23e:	2102      	movs	r1, #2
1004b240:	f010 fe54 	bl	1005beec <aci_event_fifo_push_header>
1004b244:	0001      	movs	r1, r0
1004b246:	d004      	beq.n	1004b252 <Gatt_Process_Q+0x86>
1004b248:	9a03      	ldr	r2, [sp, #12]
1004b24a:	808a      	strh	r2, [r1, #4]
1004b24c:	9804      	ldr	r0, [sp, #16]
1004b24e:	f010 fe39 	bl	1005bec4 <aci_event_fifo_push>
1004b252:	9806      	ldr	r0, [sp, #24]
1004b254:	8800      	ldrh	r0, [r0, #0]
1004b256:	9000      	str	r0, [sp, #0]
1004b258:	9806      	ldr	r0, [sp, #24]
1004b25a:	f000 f8d1 	bl	1004b400 <Gatt_Reset_To_Closed_State>
1004b25e:	9800      	ldr	r0, [sp, #0]
1004b260:	f00f fb22 	bl	1005a8a8 <SMP_forget_device_by_conn_handle>
1004b264:	e015      	b.n	1004b292 <Gatt_Process_Q+0xc6>
1004b266:	0748      	lsls	r0, r1, #29
1004b268:	d513      	bpl.n	1004b292 <Gatt_Process_Q+0xc6>
1004b26a:	9806      	ldr	r0, [sp, #24]
1004b26c:	8800      	ldrh	r0, [r0, #0]
1004b26e:	0500      	lsls	r0, r0, #20
1004b270:	0d00      	lsrs	r0, r0, #20
1004b272:	f00f faab 	bl	1005a7cc <SMP_check_is_device_bonded>
1004b276:	2800      	cmp	r0, #0
1004b278:	d105      	bne.n	1004b286 <Gatt_Process_Q+0xba>
1004b27a:	9806      	ldr	r0, [sp, #24]
1004b27c:	8800      	ldrh	r0, [r0, #0]
1004b27e:	0500      	lsls	r0, r0, #20
1004b280:	0d00      	lsrs	r0, r0, #20
1004b282:	f7fe fe8b 	bl	10049f9c <Check_For_Service_Change>
1004b286:	9906      	ldr	r1, [sp, #24]
1004b288:	2004      	movs	r0, #4
1004b28a:	6909      	ldr	r1, [r1, #16]
1004b28c:	4381      	bics	r1, r0
1004b28e:	9806      	ldr	r0, [sp, #24]
1004b290:	6101      	str	r1, [r0, #16]
1004b292:	1c76      	adds	r6, r6, #1
1004b294:	b2f6      	uxtb	r6, r6
1004b296:	4832      	ldr	r0, [pc, #200]	; (1004b360 <Gatt_Process_Q+0x194>)
1004b298:	21ac      	movs	r1, #172	; 0xac
1004b29a:	6800      	ldr	r0, [r0, #0]
1004b29c:	5c09      	ldrb	r1, [r1, r0]
1004b29e:	42b1      	cmp	r1, r6
1004b2a0:	d8af      	bhi.n	1004b202 <Gatt_Process_Q+0x36>
1004b2a2:	f001 f831 	bl	1004c308 <Process_Peer_Server_Data>
1004b2a6:	4620      	mov	r0, r4
1004b2a8:	3024      	adds	r0, #36	; 0x24
1004b2aa:	4606      	mov	r6, r0
1004b2ac:	f011 fc74 	bl	1005cb98 <acl_list_is_empty>
1004b2b0:	2801      	cmp	r0, #1
1004b2b2:	d002      	beq.n	1004b2ba <Gatt_Process_Q+0xee>
1004b2b4:	2001      	movs	r0, #1
1004b2b6:	f000 ff2b 	bl	1004c110 <Process_Peer_Client_Data>
1004b2ba:	4620      	mov	r0, r4
1004b2bc:	3018      	adds	r0, #24
1004b2be:	f011 fc6b 	bl	1005cb98 <acl_list_is_empty>
1004b2c2:	2801      	cmp	r0, #1
1004b2c4:	d002      	beq.n	1004b2cc <Gatt_Process_Q+0x100>
1004b2c6:	2000      	movs	r0, #0
1004b2c8:	f000 ff22 	bl	1004c110 <Process_Peer_Client_Data>
1004b2cc:	343c      	adds	r4, #60	; 0x3c
1004b2ce:	4620      	mov	r0, r4
1004b2d0:	f011 fc62 	bl	1005cb98 <acl_list_is_empty>
1004b2d4:	2801      	cmp	r0, #1
1004b2d6:	d00f      	beq.n	1004b2f8 <Gatt_Process_Q+0x12c>
1004b2d8:	a902      	add	r1, sp, #8
1004b2da:	4620      	mov	r0, r4
1004b2dc:	f011 fc85 	bl	1005cbea <acl_list_remove_head>
1004b2e0:	2004      	movs	r0, #4
1004b2e2:	9902      	ldr	r1, [sp, #8]
1004b2e4:	f002 fe4c 	bl	1004df80 <L2C_Send_Data>
1004b2e8:	2800      	cmp	r0, #0
1004b2ea:	d0f0      	beq.n	1004b2ce <Gatt_Process_Q+0x102>
1004b2ec:	4620      	mov	r0, r4
1004b2ee:	9902      	ldr	r1, [sp, #8]
1004b2f0:	e000      	b.n	1004b2f4 <Gatt_Process_Q+0x128>
1004b2f2:	e032      	b.n	1004b35a <Gatt_Process_Q+0x18e>
1004b2f4:	f011 fc27 	bl	1005cb46 <acl_list_insert_head>
1004b2f8:	7a28      	ldrb	r0, [r5, #8]
1004b2fa:	0600      	lsls	r0, r0, #24
1004b2fc:	d52d      	bpl.n	1004b35a <Gatt_Process_Q+0x18e>
1004b2fe:	4630      	mov	r0, r6
1004b300:	f011 fc4a 	bl	1005cb98 <acl_list_is_empty>
1004b304:	2801      	cmp	r0, #1
1004b306:	d128      	bne.n	1004b35a <Gatt_Process_Q+0x18e>
1004b308:	2000      	movs	r0, #0
1004b30a:	f009 fb6b 	bl	100549e4 <PM_Get_Available_Buffer>
1004b30e:	8ba9      	ldrh	r1, [r5, #28]
1004b310:	3123      	adds	r1, #35	; 0x23
1004b312:	0949      	lsrs	r1, r1, #5
1004b314:	1c49      	adds	r1, r1, #1
1004b316:	b2c9      	uxtb	r1, r1
1004b318:	f7f4 ffa6 	bl	10040268 <__aeabi_uidivmod>
1004b31c:	2800      	cmp	r0, #0
1004b31e:	d01c      	beq.n	1004b35a <Gatt_Process_Q+0x18e>
1004b320:	4d0f      	ldr	r5, [pc, #60]	; (1004b360 <Gatt_Process_Q+0x194>)
1004b322:	4604      	mov	r4, r0
1004b324:	6828      	ldr	r0, [r5, #0]
1004b326:	2301      	movs	r3, #1
1004b328:	02d9      	lsls	r1, r3, #11
1004b32a:	3008      	adds	r0, #8
1004b32c:	1840      	adds	r0, r0, r1
1004b32e:	2642      	movs	r6, #66	; 0x42
1004b330:	2238      	movs	r2, #56	; 0x38
1004b332:	6940      	ldr	r0, [r0, #20]
1004b334:	4631      	mov	r1, r6
1004b336:	f010 fdd9 	bl	1005beec <aci_event_fifo_push_header>
1004b33a:	0001      	movs	r1, r0
1004b33c:	d00d      	beq.n	1004b35a <Gatt_Process_Q+0x18e>
1004b33e:	2200      	movs	r2, #0
1004b340:	808a      	strh	r2, [r1, #4]
1004b342:	80cc      	strh	r4, [r1, #6]
1004b344:	4630      	mov	r0, r6
1004b346:	f010 fdbd 	bl	1005bec4 <aci_event_fifo_push>
1004b34a:	213b      	movs	r1, #59	; 0x3b
1004b34c:	682a      	ldr	r2, [r5, #0]
1004b34e:	0149      	lsls	r1, r1, #5
1004b350:	1851      	adds	r1, r2, r1
1004b352:	7d0a      	ldrb	r2, [r1, #20]
1004b354:	2080      	movs	r0, #128	; 0x80
1004b356:	4382      	bics	r2, r0
1004b358:	750a      	strb	r2, [r1, #20]
1004b35a:	b00b      	add	sp, #44	; 0x2c
1004b35c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b35e:	0000      	.short	0x0000
1004b360:	20000d64 	.word	0x20000d64
1004b364:	0000072c 	.word	0x0000072c

1004b368 <Gatt_Read_Handle_Val>:
1004b368:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b36a:	4b22      	ldr	r3, [pc, #136]	; (1004b3f4 <Gatt_Read_Handle_Val+0x8c>)
1004b36c:	4c22      	ldr	r4, [pc, #136]	; (1004b3f8 <Gatt_Read_Handle_Val+0x90>)
1004b36e:	681b      	ldr	r3, [r3, #0]
1004b370:	191e      	adds	r6, r3, r4
1004b372:	243b      	movs	r4, #59	; 0x3b
1004b374:	469c      	mov	ip, r3
1004b376:	0164      	lsls	r4, r4, #5
1004b378:	191b      	adds	r3, r3, r4
1004b37a:	7d1b      	ldrb	r3, [r3, #20]
1004b37c:	07db      	lsls	r3, r3, #31
1004b37e:	d002      	beq.n	1004b386 <Gatt_Read_Handle_Val+0x1e>
1004b380:	68b3      	ldr	r3, [r6, #8]
1004b382:	3608      	adds	r6, #8
1004b384:	e031      	b.n	1004b3ea <Gatt_Read_Handle_Val+0x82>
1004b386:	2062      	movs	r0, #98	; 0x62
1004b388:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b38a:	8d1c      	ldrh	r4, [r3, #40]	; 0x28
1004b38c:	4284      	cmp	r4, r0
1004b38e:	d10b      	bne.n	1004b3a8 <Gatt_Read_Handle_Val+0x40>
1004b390:	202c      	movs	r0, #44	; 0x2c
1004b392:	5cc0      	ldrb	r0, [r0, r3]
1004b394:	2801      	cmp	r0, #1
1004b396:	d005      	beq.n	1004b3a4 <Gatt_Read_Handle_Val+0x3c>
1004b398:	2010      	movs	r0, #16
1004b39a:	8008      	strh	r0, [r1, #0]
1004b39c:	3308      	adds	r3, #8
1004b39e:	6013      	str	r3, [r2, #0]
1004b3a0:	2000      	movs	r0, #0
1004b3a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b3a4:	2002      	movs	r0, #2
1004b3a6:	e7f8      	b.n	1004b39a <Gatt_Read_Handle_Val+0x32>
1004b3a8:	4284      	cmp	r4, r0
1004b3aa:	d220      	bcs.n	1004b3ee <Gatt_Read_Handle_Val+0x86>
1004b3ac:	461d      	mov	r5, r3
1004b3ae:	3520      	adds	r5, #32
1004b3b0:	6a1c      	ldr	r4, [r3, #32]
1004b3b2:	e017      	b.n	1004b3e4 <Gatt_Read_Handle_Val+0x7c>
1004b3b4:	8ba7      	ldrh	r7, [r4, #28]
1004b3b6:	4287      	cmp	r7, r0
1004b3b8:	d111      	bne.n	1004b3de <Gatt_Read_Handle_Val+0x76>
1004b3ba:	2323      	movs	r3, #35	; 0x23
1004b3bc:	5d1b      	ldrb	r3, [r3, r4]
1004b3be:	2001      	movs	r0, #1
1004b3c0:	2b01      	cmp	r3, #1
1004b3c2:	d106      	bne.n	1004b3d2 <Gatt_Read_Handle_Val+0x6a>
1004b3c4:	8923      	ldrh	r3, [r4, #8]
1004b3c6:	4d0d      	ldr	r5, [pc, #52]	; (1004b3fc <Gatt_Read_Handle_Val+0x94>)
1004b3c8:	42ab      	cmp	r3, r5
1004b3ca:	d102      	bne.n	1004b3d2 <Gatt_Read_Handle_Val+0x6a>
1004b3cc:	4660      	mov	r0, ip
1004b3ce:	30a0      	adds	r0, #160	; 0xa0
1004b3d0:	7b00      	ldrb	r0, [r0, #12]
1004b3d2:	8be3      	ldrh	r3, [r4, #30]
1004b3d4:	4343      	muls	r3, r0
1004b3d6:	800b      	strh	r3, [r1, #0]
1004b3d8:	69a0      	ldr	r0, [r4, #24]
1004b3da:	6010      	str	r0, [r2, #0]
1004b3dc:	e7e0      	b.n	1004b3a0 <Gatt_Read_Handle_Val+0x38>
1004b3de:	4287      	cmp	r7, r0
1004b3e0:	d805      	bhi.n	1004b3ee <Gatt_Read_Handle_Val+0x86>
1004b3e2:	6824      	ldr	r4, [r4, #0]
1004b3e4:	42ac      	cmp	r4, r5
1004b3e6:	d1e5      	bne.n	1004b3b4 <Gatt_Read_Handle_Val+0x4c>
1004b3e8:	681b      	ldr	r3, [r3, #0]
1004b3ea:	42b3      	cmp	r3, r6
1004b3ec:	d1cd      	bne.n	1004b38a <Gatt_Read_Handle_Val+0x22>
1004b3ee:	2041      	movs	r0, #65	; 0x41
1004b3f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b3f2:	0000      	.short	0x0000
1004b3f4:	20000d64 	.word	0x20000d64
1004b3f8:	0000072c 	.word	0x0000072c
1004b3fc:	00002902 	.word	0x00002902

1004b400 <Gatt_Reset_To_Closed_State>:
1004b400:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b402:	4604      	mov	r4, r0
1004b404:	483b      	ldr	r0, [pc, #236]	; (1004b4f4 <Gatt_Reset_To_Closed_State+0xf4>)
1004b406:	493c      	ldr	r1, [pc, #240]	; (1004b4f8 <Gatt_Reset_To_Closed_State+0xf8>)
1004b408:	6800      	ldr	r0, [r0, #0]
1004b40a:	b085      	sub	sp, #20
1004b40c:	1845      	adds	r5, r0, r1
1004b40e:	8a21      	ldrh	r1, [r4, #16]
1004b410:	0489      	lsls	r1, r1, #18
1004b412:	d519      	bpl.n	1004b448 <Gatt_Reset_To_Closed_State+0x48>
1004b414:	2102      	movs	r1, #2
1004b416:	9104      	str	r1, [sp, #16]
1004b418:	2137      	movs	r1, #55	; 0x37
1004b41a:	0149      	lsls	r1, r1, #5
1004b41c:	1841      	adds	r1, r0, r1
1004b41e:	7b89      	ldrb	r1, [r1, #14]
1004b420:	2641      	movs	r6, #65	; 0x41
1004b422:	8827      	ldrh	r7, [r4, #0]
1004b424:	2301      	movs	r3, #1
1004b426:	07c9      	lsls	r1, r1, #31
1004b428:	d00e      	beq.n	1004b448 <Gatt_Reset_To_Closed_State+0x48>
1004b42a:	02d9      	lsls	r1, r3, #11
1004b42c:	3008      	adds	r0, #8
1004b42e:	1840      	adds	r0, r0, r1
1004b430:	2231      	movs	r2, #49	; 0x31
1004b432:	6940      	ldr	r0, [r0, #20]
1004b434:	2102      	movs	r1, #2
1004b436:	f010 fd59 	bl	1005beec <aci_event_fifo_push_header>
1004b43a:	0001      	movs	r1, r0
1004b43c:	d004      	beq.n	1004b448 <Gatt_Reset_To_Closed_State+0x48>
1004b43e:	808f      	strh	r7, [r1, #4]
1004b440:	718e      	strb	r6, [r1, #6]
1004b442:	9804      	ldr	r0, [sp, #16]
1004b444:	f010 fd3e 	bl	1005bec4 <aci_event_fifo_push>
1004b448:	4629      	mov	r1, r5
1004b44a:	8820      	ldrh	r0, [r4, #0]
1004b44c:	2201      	movs	r2, #1
1004b44e:	3118      	adds	r1, #24
1004b450:	f7ff fdf6 	bl	1004b040 <Gatt_Flush_Pending_AclPacket_Lists>
1004b454:	4629      	mov	r1, r5
1004b456:	8820      	ldrh	r0, [r4, #0]
1004b458:	2201      	movs	r2, #1
1004b45a:	3130      	adds	r1, #48	; 0x30
1004b45c:	f7ff fdf0 	bl	1004b040 <Gatt_Flush_Pending_AclPacket_Lists>
1004b460:	4629      	mov	r1, r5
1004b462:	8820      	ldrh	r0, [r4, #0]
1004b464:	2201      	movs	r2, #1
1004b466:	3124      	adds	r1, #36	; 0x24
1004b468:	f7ff fdea 	bl	1004b040 <Gatt_Flush_Pending_AclPacket_Lists>
1004b46c:	4629      	mov	r1, r5
1004b46e:	8820      	ldrh	r0, [r4, #0]
1004b470:	2200      	movs	r2, #0
1004b472:	313c      	adds	r1, #60	; 0x3c
1004b474:	f7ff fde4 	bl	1004b040 <Gatt_Flush_Pending_AclPacket_Lists>
1004b478:	8820      	ldrh	r0, [r4, #0]
1004b47a:	0500      	lsls	r0, r0, #20
1004b47c:	0d00      	lsrs	r0, r0, #20
1004b47e:	f7ff fdc3 	bl	1004b008 <Gatt_Find_Timed_Out_Connection_Index>
1004b482:	0085      	lsls	r5, r0, #2
1004b484:	4629      	mov	r1, r5
1004b486:	3111      	adds	r1, #17
1004b488:	4668      	mov	r0, sp
1004b48a:	7301      	strb	r1, [r0, #12]
1004b48c:	f002 fa88 	bl	1004d9a0 <Timer_StopOneShot>
1004b490:	4629      	mov	r1, r5
1004b492:	3112      	adds	r1, #18
1004b494:	4668      	mov	r0, sp
1004b496:	7301      	strb	r1, [r0, #12]
1004b498:	f002 fa82 	bl	1004d9a0 <Timer_StopOneShot>
1004b49c:	4629      	mov	r1, r5
1004b49e:	3113      	adds	r1, #19
1004b4a0:	4668      	mov	r0, sp
1004b4a2:	7301      	strb	r1, [r0, #12]
1004b4a4:	f002 fa7c 	bl	1004d9a0 <Timer_StopOneShot>
1004b4a8:	4668      	mov	r0, sp
1004b4aa:	3514      	adds	r5, #20
1004b4ac:	7305      	strb	r5, [r0, #12]
1004b4ae:	f002 fa77 	bl	1004d9a0 <Timer_StopOneShot>
1004b4b2:	8820      	ldrh	r0, [r4, #0]
1004b4b4:	f000 fb06 	bl	1004bac4 <Gatt_Store_Server_Database_And_Reset_CCCD>
1004b4b8:	8820      	ldrh	r0, [r4, #0]
1004b4ba:	0501      	lsls	r1, r0, #20
1004b4bc:	480d      	ldr	r0, [pc, #52]	; (1004b4f4 <Gatt_Reset_To_Closed_State+0xf4>)
1004b4be:	0d09      	lsrs	r1, r1, #20
1004b4c0:	6802      	ldr	r2, [r0, #0]
1004b4c2:	2025      	movs	r0, #37	; 0x25
1004b4c4:	0180      	lsls	r0, r0, #6
1004b4c6:	1810      	adds	r0, r2, r0
1004b4c8:	8b02      	ldrh	r2, [r0, #24]
1004b4ca:	4291      	cmp	r1, r2
1004b4cc:	d101      	bne.n	1004b4d2 <Gatt_Reset_To_Closed_State+0xd2>
1004b4ce:	2100      	movs	r1, #0
1004b4d0:	8301      	strh	r1, [r0, #24]
1004b4d2:	69e0      	ldr	r0, [r4, #28]
1004b4d4:	2800      	cmp	r0, #0
1004b4d6:	d002      	beq.n	1004b4de <Gatt_Reset_To_Closed_State+0xde>
1004b4d8:	2101      	movs	r1, #1
1004b4da:	f009 fb03 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004b4de:	2220      	movs	r2, #32
1004b4e0:	2100      	movs	r1, #0
1004b4e2:	4620      	mov	r0, r4
1004b4e4:	68a5      	ldr	r5, [r4, #8]
1004b4e6:	f7f5 f950 	bl	1004078a <Osal_MemSet>
1004b4ea:	2017      	movs	r0, #23
1004b4ec:	60a5      	str	r5, [r4, #8]
1004b4ee:	8060      	strh	r0, [r4, #2]
1004b4f0:	b005      	add	sp, #20
1004b4f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b4f4:	20000d64 	.word	0x20000d64
1004b4f8:	0000072c 	.word	0x0000072c

1004b4fc <Gatt_Server_Db_Check>:
1004b4fc:	b510      	push	{r4, lr}
1004b4fe:	480b      	ldr	r0, [pc, #44]	; (1004b52c <Gatt_Server_Db_Check+0x30>)
1004b500:	490b      	ldr	r1, [pc, #44]	; (1004b530 <Gatt_Server_Db_Check+0x34>)
1004b502:	6800      	ldr	r0, [r0, #0]
1004b504:	1844      	adds	r4, r0, r1
1004b506:	3440      	adds	r4, #64	; 0x40
1004b508:	7a20      	ldrb	r0, [r4, #8]
1004b50a:	07c0      	lsls	r0, r0, #31
1004b50c:	d009      	beq.n	1004b522 <Gatt_Server_Db_Check+0x26>
1004b50e:	2000      	movs	r0, #0
1004b510:	f009 fa68 	bl	100549e4 <PM_Get_Available_Buffer>
1004b514:	7a21      	ldrb	r1, [r4, #8]
1004b516:	0789      	lsls	r1, r1, #30
1004b518:	d501      	bpl.n	1004b51e <Gatt_Server_Db_Check+0x22>
1004b51a:	2800      	cmp	r0, #0
1004b51c:	d003      	beq.n	1004b526 <Gatt_Server_Db_Check+0x2a>
1004b51e:	2000      	movs	r0, #0
1004b520:	bd10      	pop	{r4, pc}
1004b522:	2047      	movs	r0, #71	; 0x47
1004b524:	bd10      	pop	{r4, pc}
1004b526:	2064      	movs	r0, #100	; 0x64
1004b528:	bd10      	pop	{r4, pc}
1004b52a:	0000      	.short	0x0000
1004b52c:	20000d64 	.word	0x20000d64
1004b530:	0000072c 	.word	0x0000072c

1004b534 <Gatt_Server_Init>:
1004b534:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b536:	a05f      	add	r0, pc, #380	; (adr r0, 1004b6b4 <Gatt_Server_Init+0x180>)
1004b538:	b099      	sub	sp, #100	; 0x64
1004b53a:	6800      	ldr	r0, [r0, #0]
1004b53c:	495e      	ldr	r1, [pc, #376]	; (1004b6b8 <Gatt_Server_Init+0x184>)
1004b53e:	9015      	str	r0, [sp, #84]	; 0x54
1004b540:	4a5e      	ldr	r2, [pc, #376]	; (1004b6bc <Gatt_Server_Init+0x188>)
1004b542:	6808      	ldr	r0, [r1, #0]
1004b544:	1884      	adds	r4, r0, r2
1004b546:	2209      	movs	r2, #9
1004b548:	0212      	lsls	r2, r2, #8
1004b54a:	1882      	adds	r2, r0, r2
1004b54c:	6b52      	ldr	r2, [r2, #52]	; 0x34
1004b54e:	4625      	mov	r5, r4
1004b550:	3540      	adds	r5, #64	; 0x40
1004b552:	9214      	str	r2, [sp, #80]	; 0x50
1004b554:	7a2a      	ldrb	r2, [r5, #8]
1004b556:	07d2      	lsls	r2, r2, #31
1004b558:	d002      	beq.n	1004b560 <Gatt_Server_Init+0x2c>
1004b55a:	2062      	movs	r0, #98	; 0x62
1004b55c:	b019      	add	sp, #100	; 0x64
1004b55e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b560:	8baa      	ldrh	r2, [r5, #28]
1004b562:	2301      	movs	r3, #1
1004b564:	025b      	lsls	r3, r3, #9
1004b566:	429a      	cmp	r2, r3
1004b568:	d901      	bls.n	1004b56e <Gatt_Server_Init+0x3a>
1004b56a:	83ab      	strh	r3, [r5, #28]
1004b56c:	e003      	b.n	1004b576 <Gatt_Server_Init+0x42>
1004b56e:	2a17      	cmp	r2, #23
1004b570:	d201      	bcs.n	1004b576 <Gatt_Server_Init+0x42>
1004b572:	2217      	movs	r2, #23
1004b574:	83aa      	strh	r2, [r5, #28]
1004b576:	9a14      	ldr	r2, [sp, #80]	; 0x50
1004b578:	30a0      	adds	r0, #160	; 0xa0
1004b57a:	9213      	str	r2, [sp, #76]	; 0x4c
1004b57c:	7b06      	ldrb	r6, [r0, #12]
1004b57e:	e00d      	b.n	1004b59c <Gatt_Server_Init+0x68>
1004b580:	1e76      	subs	r6, r6, #1
1004b582:	b2f6      	uxtb	r6, r6
1004b584:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004b586:	0171      	lsls	r1, r6, #5
1004b588:	180f      	adds	r7, r1, r0
1004b58a:	68b8      	ldr	r0, [r7, #8]
1004b58c:	900f      	str	r0, [sp, #60]	; 0x3c
1004b58e:	4638      	mov	r0, r7
1004b590:	2220      	movs	r2, #32
1004b592:	2100      	movs	r1, #0
1004b594:	f7f5 f8f9 	bl	1004078a <Osal_MemSet>
1004b598:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004b59a:	60b8      	str	r0, [r7, #8]
1004b59c:	2e00      	cmp	r6, #0
1004b59e:	d1ef      	bne.n	1004b580 <Gatt_Server_Init+0x4c>
1004b5a0:	4620      	mov	r0, r4
1004b5a2:	3008      	adds	r0, #8
1004b5a4:	60e0      	str	r0, [r4, #12]
1004b5a6:	6064      	str	r4, [r4, #4]
1004b5a8:	60a0      	str	r0, [r4, #8]
1004b5aa:	6024      	str	r4, [r4, #0]
1004b5ac:	3008      	adds	r0, #8
1004b5ae:	9013      	str	r0, [sp, #76]	; 0x4c
1004b5b0:	6160      	str	r0, [r4, #20]
1004b5b2:	6120      	str	r0, [r4, #16]
1004b5b4:	22ff      	movs	r2, #255	; 0xff
1004b5b6:	2100      	movs	r1, #0
1004b5b8:	3008      	adds	r0, #8
1004b5ba:	f011 fabc 	bl	1005cb36 <acl_list_init>
1004b5be:	4620      	mov	r0, r4
1004b5c0:	22ff      	movs	r2, #255	; 0xff
1004b5c2:	2100      	movs	r1, #0
1004b5c4:	3024      	adds	r0, #36	; 0x24
1004b5c6:	f011 fab6 	bl	1005cb36 <acl_list_init>
1004b5ca:	4620      	mov	r0, r4
1004b5cc:	7faa      	ldrb	r2, [r5, #30]
1004b5ce:	2100      	movs	r1, #0
1004b5d0:	3030      	adds	r0, #48	; 0x30
1004b5d2:	f011 fab0 	bl	1005cb36 <acl_list_init>
1004b5d6:	4620      	mov	r0, r4
1004b5d8:	22ff      	movs	r2, #255	; 0xff
1004b5da:	2100      	movs	r1, #0
1004b5dc:	303c      	adds	r0, #60	; 0x3c
1004b5de:	f011 faaa 	bl	1005cb36 <acl_list_init>
1004b5e2:	2200      	movs	r2, #0
1004b5e4:	722a      	strb	r2, [r5, #8]
1004b5e6:	4610      	mov	r0, r2
1004b5e8:	2117      	movs	r1, #23
1004b5ea:	4b33      	ldr	r3, [pc, #204]	; (1004b6b8 <Gatt_Server_Init+0x184>)
1004b5ec:	e005      	b.n	1004b5fa <Gatt_Server_Init+0xc6>
1004b5ee:	9e14      	ldr	r6, [sp, #80]	; 0x50
1004b5f0:	0147      	lsls	r7, r0, #5
1004b5f2:	19be      	adds	r6, r7, r6
1004b5f4:	1c40      	adds	r0, r0, #1
1004b5f6:	8071      	strh	r1, [r6, #2]
1004b5f8:	b2c0      	uxtb	r0, r0
1004b5fa:	681e      	ldr	r6, [r3, #0]
1004b5fc:	36a0      	adds	r6, #160	; 0xa0
1004b5fe:	7b36      	ldrb	r6, [r6, #12]
1004b600:	4286      	cmp	r6, r0
1004b602:	d8f4      	bhi.n	1004b5ee <Gatt_Server_Init+0xba>
1004b604:	2000      	movs	r0, #0
1004b606:	8328      	strh	r0, [r5, #24]
1004b608:	8c2f      	ldrh	r7, [r5, #32]
1004b60a:	8c68      	ldrh	r0, [r5, #34]	; 0x22
1004b60c:	2600      	movs	r6, #0
1004b60e:	9014      	str	r0, [sp, #80]	; 0x50
1004b610:	e008      	b.n	1004b624 <Gatt_Server_Init+0xf0>
1004b612:	2028      	movs	r0, #40	; 0x28
1004b614:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
1004b616:	4370      	muls	r0, r6
1004b618:	1809      	adds	r1, r1, r0
1004b61a:	4620      	mov	r0, r4
1004b61c:	f00a f93a 	bl	10055894 <List_Circular_Insert_Tail>
1004b620:	1c76      	adds	r6, r6, #1
1004b622:	b2b6      	uxth	r6, r6
1004b624:	42be      	cmp	r6, r7
1004b626:	d3f4      	bcc.n	1004b612 <Gatt_Server_Init+0xde>
1004b628:	2600      	movs	r6, #0
1004b62a:	e008      	b.n	1004b63e <Gatt_Server_Init+0x10a>
1004b62c:	2030      	movs	r0, #48	; 0x30
1004b62e:	6d21      	ldr	r1, [r4, #80]	; 0x50
1004b630:	4370      	muls	r0, r6
1004b632:	1809      	adds	r1, r1, r0
1004b634:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004b636:	f00a f92d 	bl	10055894 <List_Circular_Insert_Tail>
1004b63a:	1c76      	adds	r6, r6, #1
1004b63c:	b2b6      	uxth	r6, r6
1004b63e:	9814      	ldr	r0, [sp, #80]	; 0x50
1004b640:	4286      	cmp	r6, r0
1004b642:	d3f3      	bcc.n	1004b62c <Gatt_Server_Init+0xf8>
1004b644:	2001      	movs	r0, #1
1004b646:	f7fe febf 	bl	1004a3c8 <GATT_Server_Set_Flag>
1004b64a:	2401      	movs	r4, #1
1004b64c:	4668      	mov	r0, sp
1004b64e:	7004      	strb	r4, [r0, #0]
1004b650:	491b      	ldr	r1, [pc, #108]	; (1004b6c0 <Gatt_Server_Init+0x18c>)
1004b652:	8041      	strh	r1, [r0, #2]
1004b654:	4623      	mov	r3, r4
1004b656:	2204      	movs	r2, #4
1004b658:	4669      	mov	r1, sp
1004b65a:	a80c      	add	r0, sp, #48	; 0x30
1004b65c:	f7ff f9c8 	bl	1004a9f0 <Gatt_Add_Service>
1004b660:	2800      	cmp	r0, #0
1004b662:	d122      	bne.n	1004b6aa <Gatt_Server_Init+0x176>
1004b664:	4668      	mov	r0, sp
1004b666:	8e01      	ldrh	r1, [r0, #48]	; 0x30
1004b668:	8281      	strh	r1, [r0, #20]
1004b66a:	4916      	ldr	r1, [pc, #88]	; (1004b6c4 <Gatt_Server_Init+0x190>)
1004b66c:	8301      	strh	r1, [r0, #24]
1004b66e:	2604      	movs	r6, #4
1004b670:	8506      	strh	r6, [r0, #40]	; 0x28
1004b672:	7584      	strb	r4, [r0, #22]
1004b674:	2120      	movs	r1, #32
1004b676:	a808      	add	r0, sp, #32
1004b678:	7281      	strb	r1, [r0, #10]
1004b67a:	2400      	movs	r4, #0
1004b67c:	72c4      	strb	r4, [r0, #11]
1004b67e:	7304      	strb	r4, [r0, #12]
1004b680:	2107      	movs	r1, #7
1004b682:	7341      	strb	r1, [r0, #13]
1004b684:	7384      	strb	r4, [r0, #14]
1004b686:	a905      	add	r1, sp, #20
1004b688:	a80d      	add	r0, sp, #52	; 0x34
1004b68a:	f7fe ff67 	bl	1004a55c <Gatt_Add_Characteristic>
1004b68e:	2800      	cmp	r0, #0
1004b690:	d10b      	bne.n	1004b6aa <Gatt_Server_Init+0x176>
1004b692:	4668      	mov	r0, sp
1004b694:	8704      	strh	r4, [r0, #56]	; 0x38
1004b696:	8746      	strh	r6, [r0, #58]	; 0x3a
1004b698:	8e81      	ldrh	r1, [r0, #52]	; 0x34
1004b69a:	ab15      	add	r3, sp, #84	; 0x54
1004b69c:	aa0e      	add	r2, sp, #56	; 0x38
1004b69e:	8e00      	ldrh	r0, [r0, #48]	; 0x30
1004b6a0:	f000 fac8 	bl	1004bc34 <Gatt_Update_Charac_Value>
1004b6a4:	2800      	cmp	r0, #0
1004b6a6:	d100      	bne.n	1004b6aa <Gatt_Server_Init+0x176>
1004b6a8:	e758      	b.n	1004b55c <Gatt_Server_Init+0x28>
1004b6aa:	2000      	movs	r0, #0
1004b6ac:	7228      	strb	r0, [r5, #8]
1004b6ae:	2047      	movs	r0, #71	; 0x47
1004b6b0:	e754      	b.n	1004b55c <Gatt_Server_Init+0x28>
1004b6b2:	0000      	.short	0x0000
1004b6b4:	ffff0000 	.word	0xffff0000
1004b6b8:	20000d64 	.word	0x20000d64
1004b6bc:	0000072c 	.word	0x0000072c
1004b6c0:	00001801 	.word	0x00001801
1004b6c4:	00002a05 	.word	0x00002a05

1004b6c8 <Gatt_Server_L2C_Handler>:
1004b6c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004b6ca:	4604      	mov	r4, r0
1004b6cc:	4883      	ldr	r0, [pc, #524]	; (1004b8dc <Gatt_Server_L2C_Handler+0x214>)
1004b6ce:	460e      	mov	r6, r1
1004b6d0:	6800      	ldr	r0, [r0, #0]
1004b6d2:	4983      	ldr	r1, [pc, #524]	; (1004b8e0 <Gatt_Server_L2C_Handler+0x218>)
1004b6d4:	1847      	adds	r7, r0, r1
1004b6d6:	2048      	movs	r0, #72	; 0x48
1004b6d8:	5dc0      	ldrb	r0, [r0, r7]
1004b6da:	07c0      	lsls	r0, r0, #31
1004b6dc:	d06f      	beq.n	1004b7be <Gatt_Server_L2C_Handler+0xf6>
1004b6de:	88b0      	ldrh	r0, [r6, #4]
1004b6e0:	f7fc ff1e 	bl	10048520 <Find_Gatt_Client>
1004b6e4:	4605      	mov	r5, r0
1004b6e6:	2c01      	cmp	r4, #1
1004b6e8:	d002      	beq.n	1004b6f0 <Gatt_Server_L2C_Handler+0x28>
1004b6ea:	2c00      	cmp	r4, #0
1004b6ec:	d068      	beq.n	1004b7c0 <Gatt_Server_L2C_Handler+0xf8>
1004b6ee:	e0f3      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b6f0:	2d00      	cmp	r5, #0
1004b6f2:	d004      	beq.n	1004b6fe <Gatt_Server_L2C_Handler+0x36>
1004b6f4:	6928      	ldr	r0, [r5, #16]
1004b6f6:	0741      	lsls	r1, r0, #29
1004b6f8:	d503      	bpl.n	1004b702 <Gatt_Server_L2C_Handler+0x3a>
1004b6fa:	2045      	movs	r0, #69	; 0x45
1004b6fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004b6fe:	2101      	movs	r1, #1
1004b700:	e0c7      	b.n	1004b892 <Gatt_Server_L2C_Handler+0x1ca>
1004b702:	68b2      	ldr	r2, [r6, #8]
1004b704:	88f1      	ldrh	r1, [r6, #6]
1004b706:	7b14      	ldrb	r4, [r2, #12]
1004b708:	2900      	cmp	r1, #0
1004b70a:	d0f0      	beq.n	1004b6ee <Gatt_Server_L2C_Handler+0x26>
1004b70c:	0662      	lsls	r2, r4, #25
1004b70e:	d50a      	bpl.n	1004b726 <Gatt_Server_L2C_Handler+0x5e>
1004b710:	8868      	ldrh	r0, [r5, #2]
1004b712:	4288      	cmp	r0, r1
1004b714:	d3f3      	bcc.n	1004b6fe <Gatt_Server_L2C_Handler+0x36>
1004b716:	2cd2      	cmp	r4, #210	; 0xd2
1004b718:	d001      	beq.n	1004b71e <Gatt_Server_L2C_Handler+0x56>
1004b71a:	2c52      	cmp	r4, #82	; 0x52
1004b71c:	d1ef      	bne.n	1004b6fe <Gatt_Server_L2C_Handler+0x36>
1004b71e:	4638      	mov	r0, r7
1004b720:	4631      	mov	r1, r6
1004b722:	3018      	adds	r0, #24
1004b724:	e048      	b.n	1004b7b8 <Gatt_Server_L2C_Handler+0xf0>
1004b726:	06a1      	lsls	r1, r4, #26
1004b728:	0e89      	lsrs	r1, r1, #26
1004b72a:	291e      	cmp	r1, #30
1004b72c:	d849      	bhi.n	1004b7c2 <Gatt_Server_L2C_Handler+0xfa>
1004b72e:	2c1e      	cmp	r4, #30
1004b730:	d120      	bne.n	1004b774 <Gatt_Server_L2C_Handler+0xac>
1004b732:	0701      	lsls	r1, r0, #28
1004b734:	d51e      	bpl.n	1004b774 <Gatt_Server_L2C_Handler+0xac>
1004b736:	2108      	movs	r1, #8
1004b738:	4388      	bics	r0, r1
1004b73a:	6128      	str	r0, [r5, #16]
1004b73c:	8829      	ldrh	r1, [r5, #0]
1004b73e:	2001      	movs	r0, #1
1004b740:	f00a f890 	bl	10055864 <Stop_Gatt_Timer>
1004b744:	2101      	movs	r1, #1
1004b746:	4630      	mov	r0, r6
1004b748:	f009 f9cc 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004b74c:	4863      	ldr	r0, [pc, #396]	; (1004b8dc <Gatt_Server_L2C_Handler+0x214>)
1004b74e:	2301      	movs	r3, #1
1004b750:	6800      	ldr	r0, [r0, #0]
1004b752:	02d9      	lsls	r1, r3, #11
1004b754:	3008      	adds	r0, #8
1004b756:	1840      	adds	r0, r0, r1
1004b758:	2442      	movs	r4, #66	; 0x42
1004b75a:	882d      	ldrh	r5, [r5, #0]
1004b75c:	2239      	movs	r2, #57	; 0x39
1004b75e:	6940      	ldr	r0, [r0, #20]
1004b760:	4621      	mov	r1, r4
1004b762:	f010 fbc3 	bl	1005beec <aci_event_fifo_push_header>
1004b766:	0001      	movs	r1, r0
1004b768:	d003      	beq.n	1004b772 <Gatt_Server_L2C_Handler+0xaa>
1004b76a:	808d      	strh	r5, [r1, #4]
1004b76c:	4620      	mov	r0, r4
1004b76e:	f010 fba9 	bl	1005bec4 <aci_event_fifo_push>
1004b772:	e0b1      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b774:	07e1      	lsls	r1, r4, #31
1004b776:	d00b      	beq.n	1004b790 <Gatt_Server_L2C_Handler+0xc8>
1004b778:	2c1d      	cmp	r4, #29
1004b77a:	d01a      	beq.n	1004b7b2 <Gatt_Server_L2C_Handler+0xea>
1004b77c:	2c1b      	cmp	r4, #27
1004b77e:	d018      	beq.n	1004b7b2 <Gatt_Server_L2C_Handler+0xea>
1004b780:	0541      	lsls	r1, r0, #21
1004b782:	d433      	bmi.n	1004b7ec <Gatt_Server_L2C_Handler+0x124>
1004b784:	2101      	movs	r1, #1
1004b786:	0289      	lsls	r1, r1, #10
1004b788:	4308      	orrs	r0, r1
1004b78a:	61ee      	str	r6, [r5, #28]
1004b78c:	6128      	str	r0, [r5, #16]
1004b78e:	e0a3      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b790:	06c0      	lsls	r0, r0, #27
1004b792:	d506      	bpl.n	1004b7a2 <Gatt_Server_L2C_Handler+0xda>
1004b794:	462b      	mov	r3, r5
1004b796:	2202      	movs	r2, #2
1004b798:	2103      	movs	r1, #3
1004b79a:	2042      	movs	r0, #66	; 0x42
1004b79c:	f000 ff48 	bl	1004c630 <aci_hal_fw_error_event_push>
1004b7a0:	e7ad      	b.n	1004b6fe <Gatt_Server_L2C_Handler+0x36>
1004b7a2:	8829      	ldrh	r1, [r5, #0]
1004b7a4:	2000      	movs	r0, #0
1004b7a6:	f00a f84b 	bl	10055840 <Start_Gatt_Timer>
1004b7aa:	6929      	ldr	r1, [r5, #16]
1004b7ac:	2010      	movs	r0, #16
1004b7ae:	4301      	orrs	r1, r0
1004b7b0:	6129      	str	r1, [r5, #16]
1004b7b2:	4638      	mov	r0, r7
1004b7b4:	4631      	mov	r1, r6
1004b7b6:	3024      	adds	r0, #36	; 0x24
1004b7b8:	f011 f9d8 	bl	1005cb6c <acl_list_insert_tail>
1004b7bc:	e08c      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b7be:	e015      	b.n	1004b7ec <Gatt_Server_L2C_Handler+0x124>
1004b7c0:	e016      	b.n	1004b7f0 <Gatt_Server_L2C_Handler+0x128>
1004b7c2:	8829      	ldrh	r1, [r5, #0]
1004b7c4:	2220      	movs	r2, #32
1004b7c6:	2000      	movs	r0, #0
1004b7c8:	f009 f930 	bl	10054a2c <PM_Get_Pckt>
1004b7cc:	0005      	movs	r5, r0
1004b7ce:	d00d      	beq.n	1004b7ec <Gatt_Server_L2C_Handler+0x124>
1004b7d0:	2101      	movs	r1, #1
1004b7d2:	4630      	mov	r0, r6
1004b7d4:	f009 f986 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004b7d8:	462b      	mov	r3, r5
1004b7da:	2200      	movs	r2, #0
1004b7dc:	4621      	mov	r1, r4
1004b7de:	2006      	movs	r0, #6
1004b7e0:	f011 fdbc 	bl	1005d35c <ATT_fill_error_resp>
1004b7e4:	4628      	mov	r0, r5
1004b7e6:	f7fe fdd9 	bl	1004a39c <GATT_Send_Packet>
1004b7ea:	e075      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b7ec:	2041      	movs	r0, #65	; 0x41
1004b7ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004b7f0:	68b0      	ldr	r0, [r6, #8]
1004b7f2:	7b04      	ldrb	r4, [r0, #12]
1004b7f4:	2c1d      	cmp	r4, #29
1004b7f6:	d03c      	beq.n	1004b872 <Gatt_Server_L2C_Handler+0x1aa>
1004b7f8:	2c1b      	cmp	r4, #27
1004b7fa:	d043      	beq.n	1004b884 <Gatt_Server_L2C_Handler+0x1bc>
1004b7fc:	2100      	movs	r1, #0
1004b7fe:	4630      	mov	r0, r6
1004b800:	f009 f970 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004b804:	2d00      	cmp	r5, #0
1004b806:	d067      	beq.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b808:	2c03      	cmp	r4, #3
1004b80a:	d046      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b80c:	2c05      	cmp	r4, #5
1004b80e:	d044      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b810:	2c07      	cmp	r4, #7
1004b812:	d042      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b814:	2c09      	cmp	r4, #9
1004b816:	d040      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b818:	2c0b      	cmp	r4, #11
1004b81a:	d03e      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b81c:	2c0d      	cmp	r4, #13
1004b81e:	d03c      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b820:	2c0f      	cmp	r4, #15
1004b822:	d03a      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b824:	2c11      	cmp	r4, #17
1004b826:	d038      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b828:	2c13      	cmp	r4, #19
1004b82a:	d036      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b82c:	2c17      	cmp	r4, #23
1004b82e:	d034      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b830:	2c19      	cmp	r4, #25
1004b832:	d032      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b834:	2c01      	cmp	r4, #1
1004b836:	d030      	beq.n	1004b89a <Gatt_Server_L2C_Handler+0x1d2>
1004b838:	2c02      	cmp	r4, #2
1004b83a:	d035      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b83c:	2c04      	cmp	r4, #4
1004b83e:	d033      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b840:	2c06      	cmp	r4, #6
1004b842:	d031      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b844:	2c08      	cmp	r4, #8
1004b846:	d02f      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b848:	2c0a      	cmp	r4, #10
1004b84a:	d02d      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b84c:	2c0c      	cmp	r4, #12
1004b84e:	d02b      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b850:	2c0e      	cmp	r4, #14
1004b852:	d029      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b854:	2c10      	cmp	r4, #16
1004b856:	d027      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b858:	2c12      	cmp	r4, #18
1004b85a:	d025      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b85c:	2c16      	cmp	r4, #22
1004b85e:	d023      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b860:	2c18      	cmp	r4, #24
1004b862:	d021      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b864:	2c52      	cmp	r4, #82	; 0x52
1004b866:	d01f      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b868:	2cd2      	cmp	r4, #210	; 0xd2
1004b86a:	d01d      	beq.n	1004b8a8 <Gatt_Server_L2C_Handler+0x1e0>
1004b86c:	2c1e      	cmp	r4, #30
1004b86e:	d02f      	beq.n	1004b8d0 <Gatt_Server_L2C_Handler+0x208>
1004b870:	e032      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b872:	2d00      	cmp	r5, #0
1004b874:	d003      	beq.n	1004b87e <Gatt_Server_L2C_Handler+0x1b6>
1004b876:	8829      	ldrh	r1, [r5, #0]
1004b878:	2001      	movs	r0, #1
1004b87a:	f009 ffe1 	bl	10055840 <Start_Gatt_Timer>
1004b87e:	4631      	mov	r1, r6
1004b880:	2002      	movs	r0, #2
1004b882:	e001      	b.n	1004b888 <Gatt_Server_L2C_Handler+0x1c0>
1004b884:	4631      	mov	r1, r6
1004b886:	2001      	movs	r0, #1
1004b888:	f000 fe1c 	bl	1004c4c4 <Send_Notif_Or_Ind>
1004b88c:	2800      	cmp	r0, #0
1004b88e:	d023      	beq.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b890:	2100      	movs	r1, #0
1004b892:	4630      	mov	r0, r6
1004b894:	f009 f926 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004b898:	e01e      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b89a:	6929      	ldr	r1, [r5, #16]
1004b89c:	2010      	movs	r0, #16
1004b89e:	4381      	bics	r1, r0
1004b8a0:	6129      	str	r1, [r5, #16]
1004b8a2:	8829      	ldrh	r1, [r5, #0]
1004b8a4:	2000      	movs	r0, #0
1004b8a6:	e015      	b.n	1004b8d4 <Gatt_Server_L2C_Handler+0x20c>
1004b8a8:	6928      	ldr	r0, [r5, #16]
1004b8aa:	2140      	movs	r1, #64	; 0x40
1004b8ac:	4388      	bics	r0, r1
1004b8ae:	6128      	str	r0, [r5, #16]
1004b8b0:	0501      	lsls	r1, r0, #20
1004b8b2:	d511      	bpl.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b8b4:	21ff      	movs	r1, #255	; 0xff
1004b8b6:	3101      	adds	r1, #1
1004b8b8:	4308      	orrs	r0, r1
1004b8ba:	6128      	str	r0, [r5, #16]
1004b8bc:	8829      	ldrh	r1, [r5, #0]
1004b8be:	2002      	movs	r0, #2
1004b8c0:	f009 ffbe 	bl	10055840 <Start_Gatt_Timer>
1004b8c4:	2001      	movs	r0, #1
1004b8c6:	6929      	ldr	r1, [r5, #16]
1004b8c8:	02c0      	lsls	r0, r0, #11
1004b8ca:	4381      	bics	r1, r0
1004b8cc:	6129      	str	r1, [r5, #16]
1004b8ce:	e003      	b.n	1004b8d8 <Gatt_Server_L2C_Handler+0x210>
1004b8d0:	8829      	ldrh	r1, [r5, #0]
1004b8d2:	2003      	movs	r0, #3
1004b8d4:	f009 ffc6 	bl	10055864 <Stop_Gatt_Timer>
1004b8d8:	2000      	movs	r0, #0
1004b8da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004b8dc:	20000d64 	.word	0x20000d64
1004b8e0:	0000072c 	.word	0x0000072c

1004b8e4 <Gatt_Server_L2C_Handler_ISR>:
1004b8e4:	b510      	push	{r4, lr}
1004b8e6:	4a10      	ldr	r2, [pc, #64]	; (1004b928 <Gatt_Server_L2C_Handler_ISR+0x44>)
1004b8e8:	4b10      	ldr	r3, [pc, #64]	; (1004b92c <Gatt_Server_L2C_Handler_ISR+0x48>)
1004b8ea:	6812      	ldr	r2, [r2, #0]
1004b8ec:	18d2      	adds	r2, r2, r3
1004b8ee:	3240      	adds	r2, #64	; 0x40
1004b8f0:	7a12      	ldrb	r2, [r2, #8]
1004b8f2:	07d2      	lsls	r2, r2, #31
1004b8f4:	d006      	beq.n	1004b904 <Gatt_Server_L2C_Handler_ISR+0x20>
1004b8f6:	2802      	cmp	r0, #2
1004b8f8:	d00a      	beq.n	1004b910 <Gatt_Server_L2C_Handler_ISR+0x2c>
1004b8fa:	2805      	cmp	r0, #5
1004b8fc:	d004      	beq.n	1004b908 <Gatt_Server_L2C_Handler_ISR+0x24>
1004b8fe:	280b      	cmp	r0, #11
1004b900:	d110      	bne.n	1004b924 <Gatt_Server_L2C_Handler_ISR+0x40>
1004b902:	e001      	b.n	1004b908 <Gatt_Server_L2C_Handler_ISR+0x24>
1004b904:	2041      	movs	r0, #65	; 0x41
1004b906:	bd10      	pop	{r4, pc}
1004b908:	8848      	ldrh	r0, [r1, #2]
1004b90a:	f7fe fd25 	bl	1004a358 <GATT_Connection_Complete_Handler>
1004b90e:	e009      	b.n	1004b924 <Gatt_Server_L2C_Handler_ISR+0x40>
1004b910:	8848      	ldrh	r0, [r1, #2]
1004b912:	f7fc fe05 	bl	10048520 <Find_Gatt_Client>
1004b916:	2800      	cmp	r0, #0
1004b918:	d004      	beq.n	1004b924 <Gatt_Server_L2C_Handler_ISR+0x40>
1004b91a:	2201      	movs	r2, #1
1004b91c:	6901      	ldr	r1, [r0, #16]
1004b91e:	0592      	lsls	r2, r2, #22
1004b920:	4311      	orrs	r1, r2
1004b922:	6101      	str	r1, [r0, #16]
1004b924:	2000      	movs	r0, #0
1004b926:	bd10      	pop	{r4, pc}
1004b928:	20000d64 	.word	0x20000d64
1004b92c:	0000072c 	.word	0x0000072c

1004b930 <Gatt_Set_Attr_Access_Permission>:
1004b930:	b538      	push	{r3, r4, r5, lr}
1004b932:	460d      	mov	r5, r1
1004b934:	4614      	mov	r4, r2
1004b936:	4669      	mov	r1, sp
1004b938:	f000 fba6 	bl	1004c088 <Gatt_search_service_handle>
1004b93c:	2800      	cmp	r0, #0
1004b93e:	d134      	bne.n	1004b9aa <Gatt_Set_Attr_Access_Permission+0x7a>
1004b940:	9900      	ldr	r1, [sp, #0]
1004b942:	6a08      	ldr	r0, [r1, #32]
1004b944:	3120      	adds	r1, #32
1004b946:	e02e      	b.n	1004b9a6 <Gatt_Set_Attr_Access_Permission+0x76>
1004b948:	8b82      	ldrh	r2, [r0, #28]
1004b94a:	42aa      	cmp	r2, r5
1004b94c:	d12a      	bne.n	1004b9a4 <Gatt_Set_Attr_Access_Permission+0x74>
1004b94e:	4601      	mov	r1, r0
1004b950:	3120      	adds	r1, #32
1004b952:	78ca      	ldrb	r2, [r1, #3]
1004b954:	2a01      	cmp	r2, #1
1004b956:	d120      	bne.n	1004b99a <Gatt_Set_Attr_Access_Permission+0x6a>
1004b958:	8900      	ldrh	r0, [r0, #8]
1004b95a:	4a15      	ldr	r2, [pc, #84]	; (1004b9b0 <Gatt_Set_Attr_Access_Permission+0x80>)
1004b95c:	4290      	cmp	r0, r2
1004b95e:	d01a      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b960:	1c52      	adds	r2, r2, #1
1004b962:	4290      	cmp	r0, r2
1004b964:	d017      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b966:	4a13      	ldr	r2, [pc, #76]	; (1004b9b4 <Gatt_Set_Attr_Access_Permission+0x84>)
1004b968:	4290      	cmp	r0, r2
1004b96a:	d014      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b96c:	1e52      	subs	r2, r2, #1
1004b96e:	4290      	cmp	r0, r2
1004b970:	d011      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b972:	4a10      	ldr	r2, [pc, #64]	; (1004b9b4 <Gatt_Set_Attr_Access_Permission+0x84>)
1004b974:	32a1      	adds	r2, #161	; 0xa1
1004b976:	4290      	cmp	r0, r2
1004b978:	d00d      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b97a:	4a0e      	ldr	r2, [pc, #56]	; (1004b9b4 <Gatt_Set_Attr_Access_Permission+0x84>)
1004b97c:	32c4      	adds	r2, #196	; 0xc4
1004b97e:	4290      	cmp	r0, r2
1004b980:	d009      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b982:	4a0d      	ldr	r2, [pc, #52]	; (1004b9b8 <Gatt_Set_Attr_Access_Permission+0x88>)
1004b984:	4290      	cmp	r0, r2
1004b986:	d006      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b988:	1c52      	adds	r2, r2, #1
1004b98a:	4290      	cmp	r0, r2
1004b98c:	d003      	beq.n	1004b996 <Gatt_Set_Attr_Access_Permission+0x66>
1004b98e:	2229      	movs	r2, #41	; 0x29
1004b990:	0212      	lsls	r2, r2, #8
1004b992:	4290      	cmp	r0, r2
1004b994:	d101      	bne.n	1004b99a <Gatt_Set_Attr_Access_Permission+0x6a>
1004b996:	2046      	movs	r0, #70	; 0x46
1004b998:	bd38      	pop	{r3, r4, r5, pc}
1004b99a:	0720      	lsls	r0, r4, #28
1004b99c:	0f00      	lsrs	r0, r0, #28
1004b99e:	7108      	strb	r0, [r1, #4]
1004b9a0:	2000      	movs	r0, #0
1004b9a2:	bd38      	pop	{r3, r4, r5, pc}
1004b9a4:	6800      	ldr	r0, [r0, #0]
1004b9a6:	4288      	cmp	r0, r1
1004b9a8:	d1ce      	bne.n	1004b948 <Gatt_Set_Attr_Access_Permission+0x18>
1004b9aa:	2041      	movs	r0, #65	; 0x41
1004b9ac:	bd38      	pop	{r3, r4, r5, pc}
1004b9ae:	0000      	.short	0x0000
1004b9b0:	00002904 	.word	0x00002904
1004b9b4:	00002a05 	.word	0x00002a05
1004b9b8:	00002802 	.word	0x00002802

1004b9bc <Gatt_Set_Desc_Value>:
1004b9bc:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004b9be:	b085      	sub	sp, #20
1004b9c0:	8802      	ldrh	r2, [r0, #0]
1004b9c2:	8844      	ldrh	r4, [r0, #2]
1004b9c4:	8881      	ldrh	r1, [r0, #4]
1004b9c6:	9101      	str	r1, [sp, #4]
1004b9c8:	4f3c      	ldr	r7, [pc, #240]	; (1004babc <Gatt_Set_Desc_Value+0x100>)
1004b9ca:	88c6      	ldrh	r6, [r0, #6]
1004b9cc:	8905      	ldrh	r5, [r0, #8]
1004b9ce:	213b      	movs	r1, #59	; 0x3b
1004b9d0:	6838      	ldr	r0, [r7, #0]
1004b9d2:	0149      	lsls	r1, r1, #5
1004b9d4:	1840      	adds	r0, r0, r1
1004b9d6:	7d00      	ldrb	r0, [r0, #20]
1004b9d8:	07c0      	lsls	r0, r0, #31
1004b9da:	d067      	beq.n	1004baac <Gatt_Set_Desc_Value+0xf0>
1004b9dc:	2001      	movs	r0, #1
1004b9de:	0240      	lsls	r0, r0, #9
1004b9e0:	4285      	cmp	r5, r0
1004b9e2:	d815      	bhi.n	1004ba10 <Gatt_Set_Desc_Value+0x54>
1004b9e4:	4669      	mov	r1, sp
1004b9e6:	4610      	mov	r0, r2
1004b9e8:	f000 fb4e 	bl	1004c088 <Gatt_search_service_handle>
1004b9ec:	2800      	cmp	r0, #0
1004b9ee:	d162      	bne.n	1004bab6 <Gatt_Set_Desc_Value+0xfa>
1004b9f0:	aa02      	add	r2, sp, #8
1004b9f2:	4620      	mov	r0, r4
1004b9f4:	9900      	ldr	r1, [sp, #0]
1004b9f6:	f000 fb37 	bl	1004c068 <Gatt_search_handle>
1004b9fa:	2800      	cmp	r0, #0
1004b9fc:	d15b      	bne.n	1004bab6 <Gatt_Set_Desc_Value+0xfa>
1004b9fe:	9902      	ldr	r1, [sp, #8]
1004ba00:	482f      	ldr	r0, [pc, #188]	; (1004bac0 <Gatt_Set_Desc_Value+0x104>)
1004ba02:	890a      	ldrh	r2, [r1, #8]
1004ba04:	4282      	cmp	r2, r0
1004ba06:	d103      	bne.n	1004ba10 <Gatt_Set_Desc_Value+0x54>
1004ba08:	2223      	movs	r2, #35	; 0x23
1004ba0a:	5c52      	ldrb	r2, [r2, r1]
1004ba0c:	2a01      	cmp	r2, #1
1004ba0e:	d002      	beq.n	1004ba16 <Gatt_Set_Desc_Value+0x5a>
1004ba10:	2042      	movs	r0, #66	; 0x42
1004ba12:	b007      	add	sp, #28
1004ba14:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ba16:	6809      	ldr	r1, [r1, #0]
1004ba18:	680c      	ldr	r4, [r1, #0]
1004ba1a:	9900      	ldr	r1, [sp, #0]
1004ba1c:	3120      	adds	r1, #32
1004ba1e:	e048      	b.n	1004bab2 <Gatt_Set_Desc_Value+0xf6>
1004ba20:	8922      	ldrh	r2, [r4, #8]
1004ba22:	4282      	cmp	r2, r0
1004ba24:	d103      	bne.n	1004ba2e <Gatt_Set_Desc_Value+0x72>
1004ba26:	2223      	movs	r2, #35	; 0x23
1004ba28:	5d12      	ldrb	r2, [r2, r4]
1004ba2a:	2a01      	cmp	r2, #1
1004ba2c:	d043      	beq.n	1004bab6 <Gatt_Set_Desc_Value+0xfa>
1004ba2e:	8ba3      	ldrh	r3, [r4, #28]
1004ba30:	9a01      	ldr	r2, [sp, #4]
1004ba32:	4293      	cmp	r3, r2
1004ba34:	d13c      	bne.n	1004bab0 <Gatt_Set_Desc_Value+0xf4>
1004ba36:	4620      	mov	r0, r4
1004ba38:	3020      	adds	r0, #32
1004ba3a:	9003      	str	r0, [sp, #12]
1004ba3c:	7881      	ldrb	r1, [r0, #2]
1004ba3e:	2900      	cmp	r1, #0
1004ba40:	d103      	bne.n	1004ba4a <Gatt_Set_Desc_Value+0x8e>
1004ba42:	8be0      	ldrh	r0, [r4, #30]
1004ba44:	19aa      	adds	r2, r5, r6
1004ba46:	4290      	cmp	r0, r2
1004ba48:	d205      	bcs.n	1004ba56 <Gatt_Set_Desc_Value+0x9a>
1004ba4a:	2901      	cmp	r1, #1
1004ba4c:	d12e      	bne.n	1004baac <Gatt_Set_Desc_Value+0xf0>
1004ba4e:	8c20      	ldrh	r0, [r4, #32]
1004ba50:	19a9      	adds	r1, r5, r6
1004ba52:	4288      	cmp	r0, r1
1004ba54:	d32a      	bcc.n	1004baac <Gatt_Set_Desc_Value+0xf0>
1004ba56:	2001      	movs	r0, #1
1004ba58:	9001      	str	r0, [sp, #4]
1004ba5a:	9803      	ldr	r0, [sp, #12]
1004ba5c:	78c0      	ldrb	r0, [r0, #3]
1004ba5e:	2801      	cmp	r0, #1
1004ba60:	d10a      	bne.n	1004ba78 <Gatt_Set_Desc_Value+0xbc>
1004ba62:	4917      	ldr	r1, [pc, #92]	; (1004bac0 <Gatt_Set_Desc_Value+0x104>)
1004ba64:	8920      	ldrh	r0, [r4, #8]
1004ba66:	31ff      	adds	r1, #255	; 0xff
1004ba68:	4288      	cmp	r0, r1
1004ba6a:	d105      	bne.n	1004ba78 <Gatt_Set_Desc_Value+0xbc>
1004ba6c:	6838      	ldr	r0, [r7, #0]
1004ba6e:	30a0      	adds	r0, #160	; 0xa0
1004ba70:	7b00      	ldrb	r0, [r0, #12]
1004ba72:	2700      	movs	r7, #0
1004ba74:	9001      	str	r0, [sp, #4]
1004ba76:	e00a      	b.n	1004ba8e <Gatt_Set_Desc_Value+0xd2>
1004ba78:	2700      	movs	r7, #0
1004ba7a:	4638      	mov	r0, r7
1004ba7c:	69a1      	ldr	r1, [r4, #24]
1004ba7e:	4368      	muls	r0, r5
1004ba80:	1808      	adds	r0, r1, r0
1004ba82:	462a      	mov	r2, r5
1004ba84:	9906      	ldr	r1, [sp, #24]
1004ba86:	f7f4 fe7c 	bl	10040782 <Osal_MemCpy>
1004ba8a:	1c7f      	adds	r7, r7, #1
1004ba8c:	b2ff      	uxtb	r7, r7
1004ba8e:	9801      	ldr	r0, [sp, #4]
1004ba90:	4287      	cmp	r7, r0
1004ba92:	d3f2      	bcc.n	1004ba7a <Gatt_Set_Desc_Value+0xbe>
1004ba94:	9803      	ldr	r0, [sp, #12]
1004ba96:	7880      	ldrb	r0, [r0, #2]
1004ba98:	2801      	cmp	r0, #1
1004ba9a:	d105      	bne.n	1004baa8 <Gatt_Set_Desc_Value+0xec>
1004ba9c:	2e00      	cmp	r6, #0
1004ba9e:	d002      	beq.n	1004baa6 <Gatt_Set_Desc_Value+0xea>
1004baa0:	8c20      	ldrh	r0, [r4, #32]
1004baa2:	83e0      	strh	r0, [r4, #30]
1004baa4:	e000      	b.n	1004baa8 <Gatt_Set_Desc_Value+0xec>
1004baa6:	83e5      	strh	r5, [r4, #30]
1004baa8:	2000      	movs	r0, #0
1004baaa:	e7b2      	b.n	1004ba12 <Gatt_Set_Desc_Value+0x56>
1004baac:	2047      	movs	r0, #71	; 0x47
1004baae:	e7b0      	b.n	1004ba12 <Gatt_Set_Desc_Value+0x56>
1004bab0:	6824      	ldr	r4, [r4, #0]
1004bab2:	428c      	cmp	r4, r1
1004bab4:	d1b4      	bne.n	1004ba20 <Gatt_Set_Desc_Value+0x64>
1004bab6:	2060      	movs	r0, #96	; 0x60
1004bab8:	e7ab      	b.n	1004ba12 <Gatt_Set_Desc_Value+0x56>
1004baba:	0000      	.short	0x0000
1004babc:	20000d64 	.word	0x20000d64
1004bac0:	00002803 	.word	0x00002803

1004bac4 <Gatt_Store_Server_Database_And_Reset_CCCD>:
1004bac4:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1004bac6:	b0ff      	sub	sp, #508	; 0x1fc
1004bac8:	b085      	sub	sp, #20
1004baca:	2047      	movs	r0, #71	; 0x47
1004bacc:	9001      	str	r0, [sp, #4]
1004bace:	2000      	movs	r0, #0
1004bad0:	4669      	mov	r1, sp
1004bad2:	8008      	strh	r0, [r1, #0]
1004bad4:	4853      	ldr	r0, [pc, #332]	; (1004bc24 <Gatt_Store_Server_Database_And_Reset_CCCD+0x160>)
1004bad6:	4954      	ldr	r1, [pc, #336]	; (1004bc28 <Gatt_Store_Server_Database_And_Reset_CCCD+0x164>)
1004bad8:	6800      	ldr	r0, [r0, #0]
1004bada:	1847      	adds	r7, r0, r1
1004badc:	9884      	ldr	r0, [sp, #528]	; 0x210
1004bade:	f7fc fd1f 	bl	10048520 <Find_Gatt_Client>
1004bae2:	9002      	str	r0, [sp, #8]
1004bae4:	2800      	cmp	r0, #0
1004bae6:	d074      	beq.n	1004bbd2 <Gatt_Store_Server_Database_And_Reset_CCCD+0x10e>
1004bae8:	68b9      	ldr	r1, [r7, #8]
1004baea:	3708      	adds	r7, #8
1004baec:	e04f      	b.n	1004bb8e <Gatt_Store_Server_Database_And_Reset_CCCD+0xca>
1004baee:	4668      	mov	r0, sp
1004baf0:	8800      	ldrh	r0, [r0, #0]
1004baf2:	460d      	mov	r5, r1
1004baf4:	ac04      	add	r4, sp, #16
1004baf6:	1820      	adds	r0, r4, r0
1004baf8:	466b      	mov	r3, sp
1004bafa:	2202      	movs	r2, #2
1004bafc:	3128      	adds	r1, #40	; 0x28
1004bafe:	f000 fdc5 	bl	1004c68c <store_data>
1004bb02:	4668      	mov	r0, sp
1004bb04:	8800      	ldrh	r0, [r0, #0]
1004bb06:	4629      	mov	r1, r5
1004bb08:	1820      	adds	r0, r4, r0
1004bb0a:	466b      	mov	r3, sp
1004bb0c:	2201      	movs	r2, #1
1004bb0e:	312c      	adds	r1, #44	; 0x2c
1004bb10:	f000 fdbc 	bl	1004c68c <store_data>
1004bb14:	462e      	mov	r6, r5
1004bb16:	3620      	adds	r6, #32
1004bb18:	7b30      	ldrb	r0, [r6, #12]
1004bb1a:	4669      	mov	r1, sp
1004bb1c:	2801      	cmp	r0, #1
1004bb1e:	8809      	ldrh	r1, [r1, #0]
1004bb20:	a804      	add	r0, sp, #16
1004bb22:	d009      	beq.n	1004bb38 <Gatt_Store_Server_Database_And_Reset_CCCD+0x74>
1004bb24:	1840      	adds	r0, r0, r1
1004bb26:	466b      	mov	r3, sp
1004bb28:	2210      	movs	r2, #16
1004bb2a:	4629      	mov	r1, r5
1004bb2c:	3108      	adds	r1, #8
1004bb2e:	f000 fdad 	bl	1004c68c <store_data>
1004bb32:	9001      	str	r0, [sp, #4]
1004bb34:	6a2c      	ldr	r4, [r5, #32]
1004bb36:	e027      	b.n	1004bb88 <Gatt_Store_Server_Database_And_Reset_CCCD+0xc4>
1004bb38:	1840      	adds	r0, r0, r1
1004bb3a:	466b      	mov	r3, sp
1004bb3c:	2202      	movs	r2, #2
1004bb3e:	e7f4      	b.n	1004bb2a <Gatt_Store_Server_Database_And_Reset_CCCD+0x66>
1004bb40:	4669      	mov	r1, sp
1004bb42:	8809      	ldrh	r1, [r1, #0]
1004bb44:	a804      	add	r0, sp, #16
1004bb46:	1840      	adds	r0, r0, r1
1004bb48:	4621      	mov	r1, r4
1004bb4a:	466b      	mov	r3, sp
1004bb4c:	2202      	movs	r2, #2
1004bb4e:	311c      	adds	r1, #28
1004bb50:	f000 fd9c 	bl	1004c68c <store_data>
1004bb54:	4669      	mov	r1, sp
1004bb56:	8809      	ldrh	r1, [r1, #0]
1004bb58:	a804      	add	r0, sp, #16
1004bb5a:	1840      	adds	r0, r0, r1
1004bb5c:	4621      	mov	r1, r4
1004bb5e:	466b      	mov	r3, sp
1004bb60:	2201      	movs	r2, #1
1004bb62:	3123      	adds	r1, #35	; 0x23
1004bb64:	f000 fd92 	bl	1004c68c <store_data>
1004bb68:	2023      	movs	r0, #35	; 0x23
1004bb6a:	5d00      	ldrb	r0, [r0, r4]
1004bb6c:	4669      	mov	r1, sp
1004bb6e:	2801      	cmp	r0, #1
1004bb70:	8809      	ldrh	r1, [r1, #0]
1004bb72:	a804      	add	r0, sp, #16
1004bb74:	d030      	beq.n	1004bbd8 <Gatt_Store_Server_Database_And_Reset_CCCD+0x114>
1004bb76:	1840      	adds	r0, r0, r1
1004bb78:	4621      	mov	r1, r4
1004bb7a:	466b      	mov	r3, sp
1004bb7c:	2210      	movs	r2, #16
1004bb7e:	3108      	adds	r1, #8
1004bb80:	f000 fd84 	bl	1004c68c <store_data>
1004bb84:	9001      	str	r0, [sp, #4]
1004bb86:	6824      	ldr	r4, [r4, #0]
1004bb88:	42b4      	cmp	r4, r6
1004bb8a:	d1d9      	bne.n	1004bb40 <Gatt_Store_Server_Database_And_Reset_CCCD+0x7c>
1004bb8c:	6829      	ldr	r1, [r5, #0]
1004bb8e:	42b9      	cmp	r1, r7
1004bb90:	d1ad      	bne.n	1004baee <Gatt_Store_Server_Database_And_Reset_CCCD+0x2a>
1004bb92:	9801      	ldr	r0, [sp, #4]
1004bb94:	2800      	cmp	r0, #0
1004bb96:	d11c      	bne.n	1004bbd2 <Gatt_Store_Server_Database_And_Reset_CCCD+0x10e>
1004bb98:	4668      	mov	r0, sp
1004bb9a:	8800      	ldrh	r0, [r0, #0]
1004bb9c:	0781      	lsls	r1, r0, #30
1004bb9e:	d00a      	beq.n	1004bbb6 <Gatt_Store_Server_Database_And_Reset_CCCD+0xf2>
1004bba0:	4a22      	ldr	r2, [pc, #136]	; (1004bc2c <Gatt_Store_Server_Database_And_Reset_CCCD+0x168>)
1004bba2:	1d01      	adds	r1, r0, #4
1004bba4:	4011      	ands	r1, r2
1004bba6:	466a      	mov	r2, sp
1004bba8:	8011      	strh	r1, [r2, #0]
1004bbaa:	1a0a      	subs	r2, r1, r0
1004bbac:	a904      	add	r1, sp, #16
1004bbae:	1808      	adds	r0, r1, r0
1004bbb0:	210b      	movs	r1, #11
1004bbb2:	f7f4 fdea 	bl	1004078a <Osal_MemSet>
1004bbb6:	9802      	ldr	r0, [sp, #8]
1004bbb8:	8800      	ldrh	r0, [r0, #0]
1004bbba:	f00e fe07 	bl	1005a7cc <SMP_check_is_device_bonded>
1004bbbe:	2800      	cmp	r0, #0
1004bbc0:	d107      	bne.n	1004bbd2 <Gatt_Store_Server_Database_And_Reset_CCCD+0x10e>
1004bbc2:	9884      	ldr	r0, [sp, #528]	; 0x210
1004bbc4:	4669      	mov	r1, sp
1004bbc6:	0500      	lsls	r0, r0, #20
1004bbc8:	0d00      	lsrs	r0, r0, #20
1004bbca:	aa04      	add	r2, sp, #16
1004bbcc:	8809      	ldrh	r1, [r1, #0]
1004bbce:	f00c fa0b 	bl	10057fe8 <SDB_flash_write_client_data>
1004bbd2:	b07f      	add	sp, #508	; 0x1fc
1004bbd4:	b006      	add	sp, #24
1004bbd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004bbd8:	1840      	adds	r0, r0, r1
1004bbda:	4621      	mov	r1, r4
1004bbdc:	466b      	mov	r3, sp
1004bbde:	2202      	movs	r2, #2
1004bbe0:	3108      	adds	r1, #8
1004bbe2:	f000 fd53 	bl	1004c68c <store_data>
1004bbe6:	9001      	str	r0, [sp, #4]
1004bbe8:	8920      	ldrh	r0, [r4, #8]
1004bbea:	4911      	ldr	r1, [pc, #68]	; (1004bc30 <Gatt_Store_Server_Database_And_Reset_CCCD+0x16c>)
1004bbec:	4288      	cmp	r0, r1
1004bbee:	d1ca      	bne.n	1004bb86 <Gatt_Store_Server_Database_And_Reset_CCCD+0xc2>
1004bbf0:	4620      	mov	r0, r4
1004bbf2:	9902      	ldr	r1, [sp, #8]
1004bbf4:	f7fe fb78 	bl	1004a2e8 <Find_Attr_Index>
1004bbf8:	0040      	lsls	r0, r0, #1
1004bbfa:	69a1      	ldr	r1, [r4, #24]
1004bbfc:	9003      	str	r0, [sp, #12]
1004bbfe:	466a      	mov	r2, sp
1004bc00:	1809      	adds	r1, r1, r0
1004bc02:	8812      	ldrh	r2, [r2, #0]
1004bc04:	a804      	add	r0, sp, #16
1004bc06:	1880      	adds	r0, r0, r2
1004bc08:	466b      	mov	r3, sp
1004bc0a:	2202      	movs	r2, #2
1004bc0c:	f000 fd3e 	bl	1004c68c <store_data>
1004bc10:	9001      	str	r0, [sp, #4]
1004bc12:	69a1      	ldr	r1, [r4, #24]
1004bc14:	9803      	ldr	r0, [sp, #12]
1004bc16:	2202      	movs	r2, #2
1004bc18:	1808      	adds	r0, r1, r0
1004bc1a:	2100      	movs	r1, #0
1004bc1c:	f7f4 fdb5 	bl	1004078a <Osal_MemSet>
1004bc20:	e7b1      	b.n	1004bb86 <Gatt_Store_Server_Database_And_Reset_CCCD+0xc2>
1004bc22:	0000      	.short	0x0000
1004bc24:	20000d64 	.word	0x20000d64
1004bc28:	0000072c 	.word	0x0000072c
1004bc2c:	0000fffc 	.word	0x0000fffc
1004bc30:	00002902 	.word	0x00002902

1004bc34 <Gatt_Update_Charac_Value>:
1004bc34:	b5f0      	push	{r4, r5, r6, r7, lr}
1004bc36:	4607      	mov	r7, r0
1004bc38:	4817      	ldr	r0, [pc, #92]	; (1004bc98 <Gatt_Update_Charac_Value+0x64>)
1004bc3a:	460e      	mov	r6, r1
1004bc3c:	6800      	ldr	r0, [r0, #0]
1004bc3e:	213b      	movs	r1, #59	; 0x3b
1004bc40:	0149      	lsls	r1, r1, #5
1004bc42:	1840      	adds	r0, r0, r1
1004bc44:	7d00      	ldrb	r0, [r0, #20]
1004bc46:	b085      	sub	sp, #20
1004bc48:	461d      	mov	r5, r3
1004bc4a:	4614      	mov	r4, r2
1004bc4c:	07c0      	lsls	r0, r0, #31
1004bc4e:	d006      	beq.n	1004bc5e <Gatt_Update_Charac_Value+0x2a>
1004bc50:	a903      	add	r1, sp, #12
1004bc52:	4638      	mov	r0, r7
1004bc54:	f000 fa18 	bl	1004c088 <Gatt_search_service_handle>
1004bc58:	2800      	cmp	r0, #0
1004bc5a:	d10a      	bne.n	1004bc72 <Gatt_Update_Charac_Value+0x3e>
1004bc5c:	e002      	b.n	1004bc64 <Gatt_Update_Charac_Value+0x30>
1004bc5e:	2047      	movs	r0, #71	; 0x47
1004bc60:	b005      	add	sp, #20
1004bc62:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004bc64:	aa04      	add	r2, sp, #16
1004bc66:	4630      	mov	r0, r6
1004bc68:	9903      	ldr	r1, [sp, #12]
1004bc6a:	f000 f9fd 	bl	1004c068 <Gatt_search_handle>
1004bc6e:	2800      	cmp	r0, #0
1004bc70:	d001      	beq.n	1004bc76 <Gatt_Update_Charac_Value+0x42>
1004bc72:	2060      	movs	r0, #96	; 0x60
1004bc74:	e7f4      	b.n	1004bc60 <Gatt_Update_Charac_Value+0x2c>
1004bc76:	9904      	ldr	r1, [sp, #16]
1004bc78:	8822      	ldrh	r2, [r4, #0]
1004bc7a:	8860      	ldrh	r0, [r4, #2]
1004bc7c:	6809      	ldr	r1, [r1, #0]
1004bc7e:	2a00      	cmp	r2, #0
1004bc80:	d000      	beq.n	1004bc84 <Gatt_Update_Charac_Value+0x50>
1004bc82:	8c08      	ldrh	r0, [r1, #32]
1004bc84:	4632      	mov	r2, r6
1004bc86:	466e      	mov	r6, sp
1004bc88:	c631      	stmia	r6!, {r0, r4, r5}
1004bc8a:	2303      	movs	r3, #3
1004bc8c:	4639      	mov	r1, r7
1004bc8e:	2000      	movs	r0, #0
1004bc90:	f000 f804 	bl	1004bc9c <Gatt_Update_Charac_Value_Ext>
1004bc94:	e7e4      	b.n	1004bc60 <Gatt_Update_Charac_Value+0x2c>
1004bc96:	0000      	.short	0x0000
1004bc98:	20000d64 	.word	0x20000d64

1004bc9c <Gatt_Update_Charac_Value_Ext>:
1004bc9c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004bc9e:	2000      	movs	r0, #0
1004bca0:	b099      	sub	sp, #100	; 0x64
1004bca2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
1004bca4:	900b      	str	r0, [sp, #44]	; 0x2c
1004bca6:	9012      	str	r0, [sp, #72]	; 0x48
1004bca8:	4605      	mov	r5, r0
1004bcaa:	9014      	str	r0, [sp, #80]	; 0x50
1004bcac:	4606      	mov	r6, r0
1004bcae:	9015      	str	r0, [sp, #84]	; 0x54
1004bcb0:	461c      	mov	r4, r3
1004bcb2:	48db      	ldr	r0, [pc, #876]	; (1004c020 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bcb4:	460b      	mov	r3, r1
1004bcb6:	6800      	ldr	r0, [r0, #0]
1004bcb8:	49da      	ldr	r1, [pc, #872]	; (1004c024 <Gatt_Update_Charac_Value_Ext+0x388>)
1004bcba:	9f22      	ldr	r7, [sp, #136]	; 0x88
1004bcbc:	1841      	adds	r1, r0, r1
1004bcbe:	9103      	str	r1, [sp, #12]
1004bcc0:	2100      	movs	r1, #0
1004bcc2:	9108      	str	r1, [sp, #32]
1004bcc4:	9109      	str	r1, [sp, #36]	; 0x24
1004bcc6:	8851      	ldrh	r1, [r2, #2]
1004bcc8:	9106      	str	r1, [sp, #24]
1004bcca:	8811      	ldrh	r1, [r2, #0]
1004bccc:	910a      	str	r1, [sp, #40]	; 0x28
1004bcce:	213b      	movs	r1, #59	; 0x3b
1004bcd0:	0149      	lsls	r1, r1, #5
1004bcd2:	1840      	adds	r0, r0, r1
1004bcd4:	7d00      	ldrb	r0, [r0, #20]
1004bcd6:	07c0      	lsls	r0, r0, #31
1004bcd8:	d006      	beq.n	1004bce8 <Gatt_Update_Charac_Value_Ext+0x4c>
1004bcda:	a90f      	add	r1, sp, #60	; 0x3c
1004bcdc:	4618      	mov	r0, r3
1004bcde:	f000 f9d3 	bl	1004c088 <Gatt_search_service_handle>
1004bce2:	2800      	cmp	r0, #0
1004bce4:	d10a      	bne.n	1004bcfc <Gatt_Update_Charac_Value_Ext+0x60>
1004bce6:	e002      	b.n	1004bcee <Gatt_Update_Charac_Value_Ext+0x52>
1004bce8:	2047      	movs	r0, #71	; 0x47
1004bcea:	b01d      	add	sp, #116	; 0x74
1004bcec:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004bcee:	aa10      	add	r2, sp, #64	; 0x40
1004bcf0:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004bcf2:	981b      	ldr	r0, [sp, #108]	; 0x6c
1004bcf4:	f000 f9b8 	bl	1004c068 <Gatt_search_handle>
1004bcf8:	2800      	cmp	r0, #0
1004bcfa:	d001      	beq.n	1004bd00 <Gatt_Update_Charac_Value_Ext+0x64>
1004bcfc:	2060      	movs	r0, #96	; 0x60
1004bcfe:	e7f4      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004bd00:	9819      	ldr	r0, [sp, #100]	; 0x64
1004bd02:	2800      	cmp	r0, #0
1004bd04:	d003      	beq.n	1004bd0e <Gatt_Update_Charac_Value_Ext+0x72>
1004bd06:	0760      	lsls	r0, r4, #29
1004bd08:	d501      	bpl.n	1004bd0e <Gatt_Update_Charac_Value_Ext+0x72>
1004bd0a:	2001      	movs	r0, #1
1004bd0c:	e000      	b.n	1004bd10 <Gatt_Update_Charac_Value_Ext+0x74>
1004bd0e:	2000      	movs	r0, #0
1004bd10:	9013      	str	r0, [sp, #76]	; 0x4c
1004bd12:	07a0      	lsls	r0, r4, #30
1004bd14:	0f80      	lsrs	r0, r0, #30
1004bd16:	901c      	str	r0, [sp, #112]	; 0x70
1004bd18:	9810      	ldr	r0, [sp, #64]	; 0x40
1004bd1a:	9017      	str	r0, [sp, #92]	; 0x5c
1004bd1c:	3020      	adds	r0, #32
1004bd1e:	78c0      	ldrb	r0, [r0, #3]
1004bd20:	2801      	cmp	r0, #1
1004bd22:	d140      	bne.n	1004bda6 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd24:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bd26:	4bc0      	ldr	r3, [pc, #768]	; (1004c028 <Gatt_Update_Charac_Value_Ext+0x38c>)
1004bd28:	8901      	ldrh	r1, [r0, #8]
1004bd2a:	4299      	cmp	r1, r3
1004bd2c:	d1f9      	bne.n	1004bd22 <Gatt_Update_Charac_Value_Ext+0x86>
1004bd2e:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bd30:	9906      	ldr	r1, [sp, #24]
1004bd32:	6804      	ldr	r4, [r0, #0]
1004bd34:	980a      	ldr	r0, [sp, #40]	; 0x28
1004bd36:	8c22      	ldrh	r2, [r4, #32]
1004bd38:	1841      	adds	r1, r0, r1
1004bd3a:	4291      	cmp	r1, r2
1004bd3c:	d833      	bhi.n	1004bda6 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd3e:	4620      	mov	r0, r4
1004bd40:	3020      	adds	r0, #32
1004bd42:	9016      	str	r0, [sp, #88]	; 0x58
1004bd44:	7880      	ldrb	r0, [r0, #2]
1004bd46:	2801      	cmp	r0, #1
1004bd48:	d016      	beq.n	1004bd78 <Gatt_Update_Charac_Value_Ext+0xdc>
1004bd4a:	8be0      	ldrh	r0, [r4, #30]
1004bd4c:	9004      	str	r0, [sp, #16]
1004bd4e:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bd50:	6980      	ldr	r0, [r0, #24]
1004bd52:	7800      	ldrb	r0, [r0, #0]
1004bd54:	0680      	lsls	r0, r0, #26
1004bd56:	0f80      	lsrs	r0, r0, #30
1004bd58:	d07e      	beq.n	1004be58 <Gatt_Update_Charac_Value_Ext+0x1bc>
1004bd5a:	9803      	ldr	r0, [sp, #12]
1004bd5c:	3040      	adds	r0, #64	; 0x40
1004bd5e:	9018      	str	r0, [sp, #96]	; 0x60
1004bd60:	7a00      	ldrb	r0, [r0, #8]
1004bd62:	0780      	lsls	r0, r0, #30
1004bd64:	d578      	bpl.n	1004be58 <Gatt_Update_Charac_Value_Ext+0x1bc>
1004bd66:	981c      	ldr	r0, [sp, #112]	; 0x70
1004bd68:	2800      	cmp	r0, #0
1004bd6a:	d0f5      	beq.n	1004bd58 <Gatt_Update_Charac_Value_Ext+0xbc>
1004bd6c:	4fae      	ldr	r7, [pc, #696]	; (1004c028 <Gatt_Update_Charac_Value_Ext+0x38c>)
1004bd6e:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004bd70:	37ff      	adds	r7, #255	; 0xff
1004bd72:	3120      	adds	r1, #32
1004bd74:	6820      	ldr	r0, [r4, #0]
1004bd76:	e014      	b.n	1004bda2 <Gatt_Update_Charac_Value_Ext+0x106>
1004bd78:	42ba      	cmp	r2, r7
1004bd7a:	d314      	bcc.n	1004bda6 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd7c:	42b9      	cmp	r1, r7
1004bd7e:	d8dd      	bhi.n	1004bd3c <Gatt_Update_Charac_Value_Ext+0xa0>
1004bd80:	9704      	str	r7, [sp, #16]
1004bd82:	e7e4      	b.n	1004bd4e <Gatt_Update_Charac_Value_Ext+0xb2>
1004bd84:	8903      	ldrh	r3, [r0, #8]
1004bd86:	4aa8      	ldr	r2, [pc, #672]	; (1004c028 <Gatt_Update_Charac_Value_Ext+0x38c>)
1004bd88:	4293      	cmp	r3, r2
1004bd8a:	d103      	bne.n	1004bd94 <Gatt_Update_Charac_Value_Ext+0xf8>
1004bd8c:	2223      	movs	r2, #35	; 0x23
1004bd8e:	5c12      	ldrb	r2, [r2, r0]
1004bd90:	2a01      	cmp	r2, #1
1004bd92:	d008      	beq.n	1004bda6 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd94:	42bb      	cmp	r3, r7
1004bd96:	d103      	bne.n	1004bda0 <Gatt_Update_Charac_Value_Ext+0x104>
1004bd98:	2223      	movs	r2, #35	; 0x23
1004bd9a:	5c12      	ldrb	r2, [r2, r0]
1004bd9c:	2a01      	cmp	r2, #1
1004bd9e:	d003      	beq.n	1004bda8 <Gatt_Update_Charac_Value_Ext+0x10c>
1004bda0:	6800      	ldr	r0, [r0, #0]
1004bda2:	4288      	cmp	r0, r1
1004bda4:	d1ee      	bne.n	1004bd84 <Gatt_Update_Charac_Value_Ext+0xe8>
1004bda6:	e134      	b.n	1004c012 <Gatt_Update_Charac_Value_Ext+0x376>
1004bda8:	9005      	str	r0, [sp, #20]
1004bdaa:	2800      	cmp	r0, #0
1004bdac:	d0fb      	beq.n	1004bda6 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bdae:	489c      	ldr	r0, [pc, #624]	; (1004c020 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bdb0:	2109      	movs	r1, #9
1004bdb2:	6802      	ldr	r2, [r0, #0]
1004bdb4:	0209      	lsls	r1, r1, #8
1004bdb6:	1851      	adds	r1, r2, r1
1004bdb8:	6b49      	ldr	r1, [r1, #52]	; 0x34
1004bdba:	2700      	movs	r7, #0
1004bdbc:	9100      	str	r1, [sp, #0]
1004bdbe:	e062      	b.n	1004be86 <Gatt_Update_Charac_Value_Ext+0x1ea>
1004bdc0:	0178      	lsls	r0, r7, #5
1004bdc2:	9900      	ldr	r1, [sp, #0]
1004bdc4:	9003      	str	r0, [sp, #12]
1004bdc6:	5a08      	ldrh	r0, [r1, r0]
1004bdc8:	0501      	lsls	r1, r0, #20
1004bdca:	d05a      	beq.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bdcc:	9919      	ldr	r1, [sp, #100]	; 0x64
1004bdce:	2900      	cmp	r1, #0
1004bdd0:	d001      	beq.n	1004bdd6 <Gatt_Update_Charac_Value_Ext+0x13a>
1004bdd2:	4288      	cmp	r0, r1
1004bdd4:	d155      	bne.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bdd6:	9905      	ldr	r1, [sp, #20]
1004bdd8:	007a      	lsls	r2, r7, #1
1004bdda:	698b      	ldr	r3, [r1, #24]
1004bddc:	1c51      	adds	r1, r2, #1
1004bdde:	5c59      	ldrb	r1, [r3, r1]
1004bde0:	5c9a      	ldrb	r2, [r3, r2]
1004bde2:	0209      	lsls	r1, r1, #8
1004bde4:	1889      	adds	r1, r1, r2
1004bde6:	b289      	uxth	r1, r1
1004bde8:	910d      	str	r1, [sp, #52]	; 0x34
1004bdea:	0789      	lsls	r1, r1, #30
1004bdec:	d049      	beq.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bdee:	2202      	movs	r2, #2
1004bdf0:	9905      	ldr	r1, [sp, #20]
1004bdf2:	f011 fb31 	bl	1005d458 <Att_Check_Perms>
1004bdf6:	2800      	cmp	r0, #0
1004bdf8:	d004      	beq.n	1004be04 <Gatt_Update_Charac_Value_Ext+0x168>
1004bdfa:	9819      	ldr	r0, [sp, #100]	; 0x64
1004bdfc:	2800      	cmp	r0, #0
1004bdfe:	d040      	beq.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be00:	2065      	movs	r0, #101	; 0x65
1004be02:	e772      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004be04:	2000      	movs	r0, #0
1004be06:	a908      	add	r1, sp, #32
1004be08:	55c8      	strb	r0, [r1, r7]
1004be0a:	981c      	ldr	r0, [sp, #112]	; 0x70
1004be0c:	07c0      	lsls	r0, r0, #31
1004be0e:	d018      	beq.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004be10:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004be12:	6980      	ldr	r0, [r0, #24]
1004be14:	7800      	ldrb	r0, [r0, #0]
1004be16:	06c0      	lsls	r0, r0, #27
1004be18:	d513      	bpl.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004be1a:	980d      	ldr	r0, [sp, #52]	; 0x34
1004be1c:	07c0      	lsls	r0, r0, #31
1004be1e:	d010      	beq.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004be20:	2001      	movs	r0, #1
1004be22:	55c8      	strb	r0, [r1, r7]
1004be24:	4305      	orrs	r5, r0
1004be26:	9a00      	ldr	r2, [sp, #0]
1004be28:	9803      	ldr	r0, [sp, #12]
1004be2a:	1880      	adds	r0, r0, r2
1004be2c:	8840      	ldrh	r0, [r0, #2]
1004be2e:	9a15      	ldr	r2, [sp, #84]	; 0x54
1004be30:	4290      	cmp	r0, r2
1004be32:	d906      	bls.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004be34:	9015      	str	r0, [sp, #84]	; 0x54
1004be36:	9a00      	ldr	r2, [sp, #0]
1004be38:	9803      	ldr	r0, [sp, #12]
1004be3a:	5a10      	ldrh	r0, [r2, r0]
1004be3c:	0500      	lsls	r0, r0, #20
1004be3e:	0d00      	lsrs	r0, r0, #20
1004be40:	9014      	str	r0, [sp, #80]	; 0x50
1004be42:	981c      	ldr	r0, [sp, #112]	; 0x70
1004be44:	0780      	lsls	r0, r0, #30
1004be46:	d51c      	bpl.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be48:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004be4a:	6980      	ldr	r0, [r0, #24]
1004be4c:	7800      	ldrb	r0, [r0, #0]
1004be4e:	0680      	lsls	r0, r0, #26
1004be50:	d517      	bpl.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be52:	980d      	ldr	r0, [sp, #52]	; 0x34
1004be54:	0780      	lsls	r0, r0, #30
1004be56:	e000      	b.n	1004be5a <Gatt_Update_Charac_Value_Ext+0x1be>
1004be58:	e083      	b.n	1004bf62 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004be5a:	d512      	bpl.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be5c:	2002      	movs	r0, #2
1004be5e:	5dca      	ldrb	r2, [r1, r7]
1004be60:	4305      	orrs	r5, r0
1004be62:	4302      	orrs	r2, r0
1004be64:	55ca      	strb	r2, [r1, r7]
1004be66:	9900      	ldr	r1, [sp, #0]
1004be68:	9803      	ldr	r0, [sp, #12]
1004be6a:	1840      	adds	r0, r0, r1
1004be6c:	8840      	ldrh	r0, [r0, #2]
1004be6e:	9915      	ldr	r1, [sp, #84]	; 0x54
1004be70:	4288      	cmp	r0, r1
1004be72:	d906      	bls.n	1004be82 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be74:	9015      	str	r0, [sp, #84]	; 0x54
1004be76:	9900      	ldr	r1, [sp, #0]
1004be78:	9803      	ldr	r0, [sp, #12]
1004be7a:	5a08      	ldrh	r0, [r1, r0]
1004be7c:	0500      	lsls	r0, r0, #20
1004be7e:	0d00      	lsrs	r0, r0, #20
1004be80:	9014      	str	r0, [sp, #80]	; 0x50
1004be82:	1c7f      	adds	r7, r7, #1
1004be84:	b2ff      	uxtb	r7, r7
1004be86:	4866      	ldr	r0, [pc, #408]	; (1004c020 <Gatt_Update_Charac_Value_Ext+0x384>)
1004be88:	6800      	ldr	r0, [r0, #0]
1004be8a:	30a0      	adds	r0, #160	; 0xa0
1004be8c:	7b03      	ldrb	r3, [r0, #12]
1004be8e:	42bb      	cmp	r3, r7
1004be90:	d896      	bhi.n	1004bdc0 <Gatt_Update_Charac_Value_Ext+0x124>
1004be92:	2d00      	cmp	r5, #0
1004be94:	d065      	beq.n	1004bf62 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004be96:	9818      	ldr	r0, [sp, #96]	; 0x60
1004be98:	7a00      	ldrb	r0, [r0, #8]
1004be9a:	0600      	lsls	r0, r0, #24
1004be9c:	d45f      	bmi.n	1004bf5e <Gatt_Update_Charac_Value_Ext+0x2c2>
1004be9e:	4860      	ldr	r0, [pc, #384]	; (1004c020 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bea0:	6801      	ldr	r1, [r0, #0]
1004bea2:	2009      	movs	r0, #9
1004bea4:	0200      	lsls	r0, r0, #8
1004bea6:	1808      	adds	r0, r1, r0
1004bea8:	6b41      	ldr	r1, [r0, #52]	; 0x34
1004beaa:	2000      	movs	r0, #0
1004beac:	e01b      	b.n	1004bee6 <Gatt_Update_Charac_Value_Ext+0x24a>
1004beae:	0142      	lsls	r2, r0, #5
1004beb0:	5a8e      	ldrh	r6, [r1, r2]
1004beb2:	0536      	lsls	r6, r6, #20
1004beb4:	d015      	beq.n	1004bee2 <Gatt_Update_Charac_Value_Ext+0x246>
1004beb6:	07ae      	lsls	r6, r5, #30
1004beb8:	d50b      	bpl.n	1004bed2 <Gatt_Update_Charac_Value_Ext+0x236>
1004beba:	1856      	adds	r6, r2, r1
1004bebc:	6936      	ldr	r6, [r6, #16]
1004bebe:	07b7      	lsls	r7, r6, #30
1004bec0:	d40d      	bmi.n	1004bede <Gatt_Update_Charac_Value_Ext+0x242>
1004bec2:	af08      	add	r7, sp, #32
1004bec4:	5c3f      	ldrb	r7, [r7, r0]
1004bec6:	07bf      	lsls	r7, r7, #30
1004bec8:	d503      	bpl.n	1004bed2 <Gatt_Update_Charac_Value_Ext+0x236>
1004beca:	0736      	lsls	r6, r6, #28
1004becc:	d501      	bpl.n	1004bed2 <Gatt_Update_Charac_Value_Ext+0x236>
1004bece:	2046      	movs	r0, #70	; 0x46
1004bed0:	e70b      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004bed2:	07ee      	lsls	r6, r5, #31
1004bed4:	d005      	beq.n	1004bee2 <Gatt_Update_Charac_Value_Ext+0x246>
1004bed6:	1852      	adds	r2, r2, r1
1004bed8:	7c12      	ldrb	r2, [r2, #16]
1004beda:	07d2      	lsls	r2, r2, #31
1004bedc:	d001      	beq.n	1004bee2 <Gatt_Update_Charac_Value_Ext+0x246>
1004bede:	2043      	movs	r0, #67	; 0x43
1004bee0:	e703      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004bee2:	1c40      	adds	r0, r0, #1
1004bee4:	b2c0      	uxtb	r0, r0
1004bee6:	4283      	cmp	r3, r0
1004bee8:	d8e1      	bhi.n	1004beae <Gatt_Update_Charac_Value_Ext+0x212>
1004beea:	9815      	ldr	r0, [sp, #84]	; 0x54
1004beec:	1ec0      	subs	r0, r0, #3
1004beee:	b286      	uxth	r6, r0
1004bef0:	9804      	ldr	r0, [sp, #16]
1004bef2:	4286      	cmp	r6, r0
1004bef4:	d900      	bls.n	1004bef8 <Gatt_Update_Charac_Value_Ext+0x25c>
1004bef6:	4606      	mov	r6, r0
1004bef8:	07a8      	lsls	r0, r5, #30
1004befa:	d50f      	bpl.n	1004bf1c <Gatt_Update_Charac_Value_Ext+0x280>
1004befc:	2220      	movs	r2, #32
1004befe:	2000      	movs	r0, #0
1004bf00:	9914      	ldr	r1, [sp, #80]	; 0x50
1004bf02:	f008 fd93 	bl	10054a2c <PM_Get_Pckt>
1004bf06:	9012      	str	r0, [sp, #72]	; 0x48
1004bf08:	2800      	cmp	r0, #0
1004bf0a:	d07d      	beq.n	1004c008 <Gatt_Update_Charac_Value_Ext+0x36c>
1004bf0c:	1cf0      	adds	r0, r6, #3
1004bf0e:	b282      	uxth	r2, r0
1004bf10:	2100      	movs	r1, #0
1004bf12:	9812      	ldr	r0, [sp, #72]	; 0x48
1004bf14:	f000 f8f4 	bl	1004c100 <Pm_Resize_Host_Acl_Pckt>
1004bf18:	2800      	cmp	r0, #0
1004bf1a:	d111      	bne.n	1004bf40 <Gatt_Update_Charac_Value_Ext+0x2a4>
1004bf1c:	07e8      	lsls	r0, r5, #31
1004bf1e:	d020      	beq.n	1004bf62 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004bf20:	2220      	movs	r2, #32
1004bf22:	2000      	movs	r0, #0
1004bf24:	9914      	ldr	r1, [sp, #80]	; 0x50
1004bf26:	f008 fd81 	bl	10054a2c <PM_Get_Pckt>
1004bf2a:	900b      	str	r0, [sp, #44]	; 0x2c
1004bf2c:	2800      	cmp	r0, #0
1004bf2e:	d007      	beq.n	1004bf40 <Gatt_Update_Charac_Value_Ext+0x2a4>
1004bf30:	1cf0      	adds	r0, r6, #3
1004bf32:	b282      	uxth	r2, r0
1004bf34:	2100      	movs	r1, #0
1004bf36:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bf38:	f000 f8e2 	bl	1004c100 <Pm_Resize_Host_Acl_Pckt>
1004bf3c:	2800      	cmp	r0, #0
1004bf3e:	d010      	beq.n	1004bf62 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004bf40:	2080      	movs	r0, #128	; 0x80
1004bf42:	f7fe fa41 	bl	1004a3c8 <GATT_Server_Set_Flag>
1004bf46:	9812      	ldr	r0, [sp, #72]	; 0x48
1004bf48:	2800      	cmp	r0, #0
1004bf4a:	d002      	beq.n	1004bf52 <Gatt_Update_Charac_Value_Ext+0x2b6>
1004bf4c:	2100      	movs	r1, #0
1004bf4e:	f008 fdc9 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004bf52:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bf54:	2800      	cmp	r0, #0
1004bf56:	d002      	beq.n	1004bf5e <Gatt_Update_Charac_Value_Ext+0x2c2>
1004bf58:	2100      	movs	r1, #0
1004bf5a:	f008 fdc3 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004bf5e:	2064      	movs	r0, #100	; 0x64
1004bf60:	e6c3      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004bf62:	69a1      	ldr	r1, [r4, #24]
1004bf64:	980a      	ldr	r0, [sp, #40]	; 0x28
1004bf66:	9a06      	ldr	r2, [sp, #24]
1004bf68:	1808      	adds	r0, r1, r0
1004bf6a:	9924      	ldr	r1, [sp, #144]	; 0x90
1004bf6c:	f7f4 fc09 	bl	10040782 <Osal_MemCpy>
1004bf70:	9816      	ldr	r0, [sp, #88]	; 0x58
1004bf72:	7880      	ldrb	r0, [r0, #2]
1004bf74:	2801      	cmp	r0, #1
1004bf76:	d101      	bne.n	1004bf7c <Gatt_Update_Charac_Value_Ext+0x2e0>
1004bf78:	9804      	ldr	r0, [sp, #16]
1004bf7a:	83e0      	strh	r0, [r4, #30]
1004bf7c:	2d00      	cmp	r5, #0
1004bf7e:	d046      	beq.n	1004c00e <Gatt_Update_Charac_Value_Ext+0x372>
1004bf80:	4b27      	ldr	r3, [pc, #156]	; (1004c020 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bf82:	2009      	movs	r0, #9
1004bf84:	6819      	ldr	r1, [r3, #0]
1004bf86:	0200      	lsls	r0, r0, #8
1004bf88:	1808      	adds	r0, r1, r0
1004bf8a:	6b41      	ldr	r1, [r0, #52]	; 0x34
1004bf8c:	2000      	movs	r0, #0
1004bf8e:	aa08      	add	r2, sp, #32
1004bf90:	e00c      	b.n	1004bfac <Gatt_Update_Charac_Value_Ext+0x310>
1004bf92:	0143      	lsls	r3, r0, #5
1004bf94:	5acf      	ldrh	r7, [r1, r3]
1004bf96:	053f      	lsls	r7, r7, #20
1004bf98:	d006      	beq.n	1004bfa8 <Gatt_Update_Charac_Value_Ext+0x30c>
1004bf9a:	185f      	adds	r7, r3, r1
1004bf9c:	46bc      	mov	ip, r7
1004bf9e:	693b      	ldr	r3, [r7, #16]
1004bfa0:	5c17      	ldrb	r7, [r2, r0]
1004bfa2:	433b      	orrs	r3, r7
1004bfa4:	4667      	mov	r7, ip
1004bfa6:	613b      	str	r3, [r7, #16]
1004bfa8:	1c40      	adds	r0, r0, #1
1004bfaa:	b2c0      	uxtb	r0, r0
1004bfac:	4b1c      	ldr	r3, [pc, #112]	; (1004c020 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bfae:	681b      	ldr	r3, [r3, #0]
1004bfb0:	33a0      	adds	r3, #160	; 0xa0
1004bfb2:	7b1b      	ldrb	r3, [r3, #12]
1004bfb4:	4283      	cmp	r3, r0
1004bfb6:	d8ec      	bhi.n	1004bf92 <Gatt_Update_Charac_Value_Ext+0x2f6>
1004bfb8:	07a8      	lsls	r0, r5, #30
1004bfba:	d50d      	bpl.n	1004bfd8 <Gatt_Update_Charac_Value_Ext+0x33c>
1004bfbc:	9812      	ldr	r0, [sp, #72]	; 0x48
1004bfbe:	9000      	str	r0, [sp, #0]
1004bfc0:	1cf0      	adds	r0, r6, #3
1004bfc2:	b282      	uxth	r2, r0
1004bfc4:	4621      	mov	r1, r4
1004bfc6:	311c      	adds	r1, #28
1004bfc8:	2002      	movs	r0, #2
1004bfca:	69a3      	ldr	r3, [r4, #24]
1004bfcc:	f7fd ffc7 	bl	10049f5e <Build_Notif_Or_Ind>
1004bfd0:	2002      	movs	r0, #2
1004bfd2:	9912      	ldr	r1, [sp, #72]	; 0x48
1004bfd4:	f000 fa76 	bl	1004c4c4 <Send_Notif_Or_Ind>
1004bfd8:	07e8      	lsls	r0, r5, #31
1004bfda:	d018      	beq.n	1004c00e <Gatt_Update_Charac_Value_Ext+0x372>
1004bfdc:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bfde:	9000      	str	r0, [sp, #0]
1004bfe0:	1cf6      	adds	r6, r6, #3
1004bfe2:	4621      	mov	r1, r4
1004bfe4:	b2b2      	uxth	r2, r6
1004bfe6:	311c      	adds	r1, #28
1004bfe8:	2001      	movs	r0, #1
1004bfea:	69a3      	ldr	r3, [r4, #24]
1004bfec:	f7fd ffb7 	bl	10049f5e <Build_Notif_Or_Ind>
1004bff0:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004bff2:	2800      	cmp	r0, #0
1004bff4:	d005      	beq.n	1004c002 <Gatt_Update_Charac_Value_Ext+0x366>
1004bff6:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bff8:	2180      	movs	r1, #128	; 0x80
1004bffa:	7cc0      	ldrb	r0, [r0, #19]
1004bffc:	4308      	orrs	r0, r1
1004bffe:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004c000:	74c8      	strb	r0, [r1, #19]
1004c002:	2001      	movs	r0, #1
1004c004:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004c006:	e000      	b.n	1004c00a <Gatt_Update_Charac_Value_Ext+0x36e>
1004c008:	e005      	b.n	1004c016 <Gatt_Update_Charac_Value_Ext+0x37a>
1004c00a:	f000 fa5b 	bl	1004c4c4 <Send_Notif_Or_Ind>
1004c00e:	2000      	movs	r0, #0
1004c010:	e66b      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004c012:	2042      	movs	r0, #66	; 0x42
1004c014:	e669      	b.n	1004bcea <Gatt_Update_Charac_Value_Ext+0x4e>
1004c016:	2080      	movs	r0, #128	; 0x80
1004c018:	f7fe f9d6 	bl	1004a3c8 <GATT_Server_Set_Flag>
1004c01c:	e79f      	b.n	1004bf5e <Gatt_Update_Charac_Value_Ext+0x2c2>
1004c01e:	0000      	.short	0x0000
1004c020:	20000d64 	.word	0x20000d64
1004c024:	0000072c 	.word	0x0000072c
1004c028:	00002803 	.word	0x00002803

1004c02c <Gatt_fetch_handle>:
1004c02c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c02e:	6884      	ldr	r4, [r0, #8]
1004c030:	3008      	adds	r0, #8
1004c032:	e015      	b.n	1004c060 <Gatt_fetch_handle+0x34>
1004c034:	8d25      	ldrh	r5, [r4, #40]	; 0x28
1004c036:	428d      	cmp	r5, r1
1004c038:	d103      	bne.n	1004c042 <Gatt_fetch_handle+0x16>
1004c03a:	6014      	str	r4, [r2, #0]
1004c03c:	6018      	str	r0, [r3, #0]
1004c03e:	2001      	movs	r0, #1
1004c040:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c042:	4626      	mov	r6, r4
1004c044:	601c      	str	r4, [r3, #0]
1004c046:	3620      	adds	r6, #32
1004c048:	6a25      	ldr	r5, [r4, #32]
1004c04a:	e006      	b.n	1004c05a <Gatt_fetch_handle+0x2e>
1004c04c:	8baf      	ldrh	r7, [r5, #28]
1004c04e:	428f      	cmp	r7, r1
1004c050:	d102      	bne.n	1004c058 <Gatt_fetch_handle+0x2c>
1004c052:	2002      	movs	r0, #2
1004c054:	6015      	str	r5, [r2, #0]
1004c056:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c058:	682d      	ldr	r5, [r5, #0]
1004c05a:	42b5      	cmp	r5, r6
1004c05c:	d1f6      	bne.n	1004c04c <Gatt_fetch_handle+0x20>
1004c05e:	6824      	ldr	r4, [r4, #0]
1004c060:	4284      	cmp	r4, r0
1004c062:	d1e7      	bne.n	1004c034 <Gatt_fetch_handle+0x8>
1004c064:	2000      	movs	r0, #0
1004c066:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004c068 <Gatt_search_handle>:
1004c068:	b510      	push	{r4, lr}
1004c06a:	6a0b      	ldr	r3, [r1, #32]
1004c06c:	3120      	adds	r1, #32
1004c06e:	e006      	b.n	1004c07e <Gatt_search_handle+0x16>
1004c070:	8b9c      	ldrh	r4, [r3, #28]
1004c072:	4284      	cmp	r4, r0
1004c074:	d102      	bne.n	1004c07c <Gatt_search_handle+0x14>
1004c076:	2000      	movs	r0, #0
1004c078:	6013      	str	r3, [r2, #0]
1004c07a:	bd10      	pop	{r4, pc}
1004c07c:	681b      	ldr	r3, [r3, #0]
1004c07e:	428b      	cmp	r3, r1
1004c080:	d1f6      	bne.n	1004c070 <Gatt_search_handle+0x8>
1004c082:	2041      	movs	r0, #65	; 0x41
1004c084:	bd10      	pop	{r4, pc}
	...

1004c088 <Gatt_search_service_handle>:
1004c088:	b510      	push	{r4, lr}
1004c08a:	4a09      	ldr	r2, [pc, #36]	; (1004c0b0 <Gatt_search_service_handle+0x28>)
1004c08c:	4b09      	ldr	r3, [pc, #36]	; (1004c0b4 <Gatt_search_service_handle+0x2c>)
1004c08e:	6812      	ldr	r2, [r2, #0]
1004c090:	18d2      	adds	r2, r2, r3
1004c092:	6893      	ldr	r3, [r2, #8]
1004c094:	3208      	adds	r2, #8
1004c096:	e006      	b.n	1004c0a6 <Gatt_search_service_handle+0x1e>
1004c098:	8d1c      	ldrh	r4, [r3, #40]	; 0x28
1004c09a:	4284      	cmp	r4, r0
1004c09c:	d102      	bne.n	1004c0a4 <Gatt_search_service_handle+0x1c>
1004c09e:	2000      	movs	r0, #0
1004c0a0:	600b      	str	r3, [r1, #0]
1004c0a2:	bd10      	pop	{r4, pc}
1004c0a4:	681b      	ldr	r3, [r3, #0]
1004c0a6:	4293      	cmp	r3, r2
1004c0a8:	d1f6      	bne.n	1004c098 <Gatt_search_service_handle+0x10>
1004c0aa:	2041      	movs	r0, #65	; 0x41
1004c0ac:	bd10      	pop	{r4, pc}
1004c0ae:	0000      	.short	0x0000
1004c0b0:	20000d64 	.word	0x20000d64
1004c0b4:	0000072c 	.word	0x0000072c

1004c0b8 <Ind_Service_Change_Charac>:
1004c0b8:	b530      	push	{r4, r5, lr}
1004c0ba:	4b0f      	ldr	r3, [pc, #60]	; (1004c0f8 <Ind_Service_Change_Charac+0x40>)
1004c0bc:	4d0f      	ldr	r5, [pc, #60]	; (1004c0fc <Ind_Service_Change_Charac+0x44>)
1004c0be:	681b      	ldr	r3, [r3, #0]
1004c0c0:	4604      	mov	r4, r0
1004c0c2:	195b      	adds	r3, r3, r5
1004c0c4:	3340      	adds	r3, #64	; 0x40
1004c0c6:	7a1b      	ldrb	r3, [r3, #8]
1004c0c8:	2041      	movs	r0, #65	; 0x41
1004c0ca:	b085      	sub	sp, #20
1004c0cc:	079b      	lsls	r3, r3, #30
1004c0ce:	d510      	bpl.n	1004c0f2 <Ind_Service_Change_Charac+0x3a>
1004c0d0:	466b      	mov	r3, sp
1004c0d2:	8199      	strh	r1, [r3, #12]
1004c0d4:	81da      	strh	r2, [r3, #14]
1004c0d6:	2000      	movs	r0, #0
1004c0d8:	8218      	strh	r0, [r3, #16]
1004c0da:	2004      	movs	r0, #4
1004c0dc:	8258      	strh	r0, [r3, #18]
1004c0de:	aa03      	add	r2, sp, #12
1004c0e0:	a904      	add	r1, sp, #16
1004c0e2:	466d      	mov	r5, sp
1004c0e4:	c507      	stmia	r5!, {r0, r1, r2}
1004c0e6:	2302      	movs	r3, #2
1004c0e8:	461a      	mov	r2, r3
1004c0ea:	2101      	movs	r1, #1
1004c0ec:	4620      	mov	r0, r4
1004c0ee:	f7ff fdd5 	bl	1004bc9c <Gatt_Update_Charac_Value_Ext>
1004c0f2:	b005      	add	sp, #20
1004c0f4:	bd30      	pop	{r4, r5, pc}
1004c0f6:	0000      	.short	0x0000
1004c0f8:	20000d64 	.word	0x20000d64
1004c0fc:	0000072c 	.word	0x0000072c

1004c100 <Pm_Resize_Host_Acl_Pckt>:
1004c100:	b510      	push	{r4, lr}
1004c102:	1d12      	adds	r2, r2, #4
1004c104:	6880      	ldr	r0, [r0, #8]
1004c106:	b292      	uxth	r2, r2
1004c108:	f008 fd0a 	bl	10054b20 <PM_Resize_Pckt_Pdu_Size>
1004c10c:	bd10      	pop	{r4, pc}
	...

1004c110 <Process_Peer_Client_Data>:
1004c110:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c112:	497b      	ldr	r1, [pc, #492]	; (1004c300 <Process_Peer_Client_Data+0x1f0>)
1004c114:	4a7b      	ldr	r2, [pc, #492]	; (1004c304 <Process_Peer_Client_Data+0x1f4>)
1004c116:	6809      	ldr	r1, [r1, #0]
1004c118:	b085      	sub	sp, #20
1004c11a:	188e      	adds	r6, r1, r2
1004c11c:	2801      	cmp	r0, #1
1004c11e:	d006      	beq.n	1004c12e <Process_Peer_Client_Data+0x1e>
1004c120:	4630      	mov	r0, r6
1004c122:	3018      	adds	r0, #24
1004c124:	9000      	str	r0, [sp, #0]
1004c126:	f010 fcf1 	bl	1005cb0c <acl_list_first>
1004c12a:	4604      	mov	r4, r0
1004c12c:	e0e5      	b.n	1004c2fa <Process_Peer_Client_Data+0x1ea>
1004c12e:	4630      	mov	r0, r6
1004c130:	3024      	adds	r0, #36	; 0x24
1004c132:	9003      	str	r0, [sp, #12]
1004c134:	f010 fcea 	bl	1005cb0c <acl_list_first>
1004c138:	4605      	mov	r5, r0
1004c13a:	e0ba      	b.n	1004c2b2 <Process_Peer_Client_Data+0x1a2>
1004c13c:	68a8      	ldr	r0, [r5, #8]
1004c13e:	682f      	ldr	r7, [r5, #0]
1004c140:	7b00      	ldrb	r0, [r0, #12]
1004c142:	9002      	str	r0, [sp, #8]
1004c144:	88a8      	ldrh	r0, [r5, #4]
1004c146:	f7fc f9eb 	bl	10048520 <Find_Gatt_Client>
1004c14a:	0004      	movs	r4, r0
1004c14c:	d073      	beq.n	1004c236 <Process_Peer_Client_Data+0x126>
1004c14e:	8821      	ldrh	r1, [r4, #0]
1004c150:	2220      	movs	r2, #32
1004c152:	2000      	movs	r0, #0
1004c154:	f008 fc6a 	bl	10054a2c <PM_Get_Pckt>
1004c158:	9001      	str	r0, [sp, #4]
1004c15a:	2800      	cmp	r0, #0
1004c15c:	d06c      	beq.n	1004c238 <Process_Peer_Client_Data+0x128>
1004c15e:	88e8      	ldrh	r0, [r5, #6]
1004c160:	8861      	ldrh	r1, [r4, #2]
1004c162:	4288      	cmp	r0, r1
1004c164:	d904      	bls.n	1004c170 <Process_Peer_Client_Data+0x60>
1004c166:	2200      	movs	r2, #0
1004c168:	2004      	movs	r0, #4
1004c16a:	9b01      	ldr	r3, [sp, #4]
1004c16c:	9902      	ldr	r1, [sp, #8]
1004c16e:	e020      	b.n	1004c1b2 <Process_Peer_Client_Data+0xa2>
1004c170:	2046      	movs	r0, #70	; 0x46
1004c172:	9000      	str	r0, [sp, #0]
1004c174:	9802      	ldr	r0, [sp, #8]
1004c176:	280e      	cmp	r0, #14
1004c178:	d04e      	beq.n	1004c218 <Process_Peer_Client_Data+0x108>
1004c17a:	dc0a      	bgt.n	1004c192 <Process_Peer_Client_Data+0x82>
1004c17c:	1e80      	subs	r0, r0, #2
1004c17e:	0003      	movs	r3, r0
1004c180:	f000 fa93 	bl	1004c6aa <__ARM_common_switch8>
1004c184:	22131c0b 	.word	0x22131c0b
1004c188:	2f132913 	.word	0x2f132913
1004c18c:	41133813 	.word	0x41133813
1004c190:	0013      	.short	0x0013
1004c192:	2816      	cmp	r0, #22
1004c194:	d05a      	beq.n	1004c24c <Process_Peer_Client_Data+0x13c>
1004c196:	dc04      	bgt.n	1004c1a2 <Process_Peer_Client_Data+0x92>
1004c198:	2810      	cmp	r0, #16
1004c19a:	d046      	beq.n	1004c22a <Process_Peer_Client_Data+0x11a>
1004c19c:	2812      	cmp	r0, #18
1004c19e:	d104      	bne.n	1004c1aa <Process_Peer_Client_Data+0x9a>
1004c1a0:	e04b      	b.n	1004c23a <Process_Peer_Client_Data+0x12a>
1004c1a2:	2818      	cmp	r0, #24
1004c1a4:	d05b      	beq.n	1004c25e <Process_Peer_Client_Data+0x14e>
1004c1a6:	281d      	cmp	r0, #29
1004c1a8:	d072      	beq.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c1aa:	2200      	movs	r2, #0
1004c1ac:	2006      	movs	r0, #6
1004c1ae:	9b01      	ldr	r3, [sp, #4]
1004c1b0:	9902      	ldr	r1, [sp, #8]
1004c1b2:	f011 f8d3 	bl	1005d35c <ATT_fill_error_resp>
1004c1b6:	2000      	movs	r0, #0
1004c1b8:	9000      	str	r0, [sp, #0]
1004c1ba:	e05c      	b.n	1004c276 <Process_Peer_Client_Data+0x166>
1004c1bc:	4629      	mov	r1, r5
1004c1be:	4620      	mov	r0, r4
1004c1c0:	9a01      	ldr	r2, [sp, #4]
1004c1c2:	f011 f9d7 	bl	1005d574 <Exchg_Mtu_Resp>
1004c1c6:	e04f      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c1c8:	462a      	mov	r2, r5
1004c1ca:	4621      	mov	r1, r4
1004c1cc:	4630      	mov	r0, r6
1004c1ce:	9b01      	ldr	r3, [sp, #4]
1004c1d0:	f011 fc02 	bl	1005d9d8 <Find_Info_Resp>
1004c1d4:	e048      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c1d6:	4629      	mov	r1, r5
1004c1d8:	4620      	mov	r0, r4
1004c1da:	9a01      	ldr	r2, [sp, #4]
1004c1dc:	f011 fb04 	bl	1005d7e8 <Find_By_Type_Val_Resp>
1004c1e0:	e042      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c1e2:	6920      	ldr	r0, [r4, #16]
1004c1e4:	0300      	lsls	r0, r0, #12
1004c1e6:	d453      	bmi.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c1e8:	4629      	mov	r1, r5
1004c1ea:	4620      	mov	r0, r4
1004c1ec:	9a01      	ldr	r2, [sp, #4]
1004c1ee:	f011 ff3d 	bl	1005e06c <Read_By_Type_Resp>
1004c1f2:	e039      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c1f4:	6920      	ldr	r0, [r4, #16]
1004c1f6:	0300      	lsls	r0, r0, #12
1004c1f8:	d44a      	bmi.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c1fa:	4629      	mov	r1, r5
1004c1fc:	4620      	mov	r0, r4
1004c1fe:	9a01      	ldr	r2, [sp, #4]
1004c200:	f012 f968 	bl	1005e4d4 <Read_Resp>
1004c204:	e030      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c206:	6920      	ldr	r0, [r4, #16]
1004c208:	0300      	lsls	r0, r0, #12
1004c20a:	d441      	bmi.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c20c:	4629      	mov	r1, r5
1004c20e:	4620      	mov	r0, r4
1004c210:	9a01      	ldr	r2, [sp, #4]
1004c212:	f011 fd99 	bl	1005dd48 <Read_Blob_Resp>
1004c216:	e027      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c218:	6920      	ldr	r0, [r4, #16]
1004c21a:	0300      	lsls	r0, r0, #12
1004c21c:	d438      	bmi.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c21e:	4629      	mov	r1, r5
1004c220:	4620      	mov	r0, r4
1004c222:	9a01      	ldr	r2, [sp, #4]
1004c224:	f012 f88c 	bl	1005e340 <Read_Multi_Resp>
1004c228:	e01e      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c22a:	4629      	mov	r1, r5
1004c22c:	4620      	mov	r0, r4
1004c22e:	9a01      	ldr	r2, [sp, #4]
1004c230:	f011 fe2a 	bl	1005de88 <Read_By_Grp_Type_Resp>
1004c234:	e018      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c236:	e033      	b.n	1004c2a0 <Process_Peer_Client_Data+0x190>
1004c238:	e03e      	b.n	1004c2b8 <Process_Peer_Client_Data+0x1a8>
1004c23a:	6920      	ldr	r0, [r4, #16]
1004c23c:	0380      	lsls	r0, r0, #14
1004c23e:	d427      	bmi.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c240:	4629      	mov	r1, r5
1004c242:	4620      	mov	r0, r4
1004c244:	9a01      	ldr	r2, [sp, #4]
1004c246:	f012 fa70 	bl	1005e72a <Write_Resp>
1004c24a:	e00d      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c24c:	6920      	ldr	r0, [r4, #16]
1004c24e:	0380      	lsls	r0, r0, #14
1004c250:	d41e      	bmi.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c252:	4629      	mov	r1, r5
1004c254:	4620      	mov	r0, r4
1004c256:	9a01      	ldr	r2, [sp, #4]
1004c258:	f011 fcba 	bl	1005dbd0 <Prepare_Write_Resp>
1004c25c:	e004      	b.n	1004c268 <Process_Peer_Client_Data+0x158>
1004c25e:	4629      	mov	r1, r5
1004c260:	4620      	mov	r0, r4
1004c262:	9a01      	ldr	r2, [sp, #4]
1004c264:	f011 f9e0 	bl	1005d628 <Exec_Write_Resp>
1004c268:	9000      	str	r0, [sp, #0]
1004c26a:	2845      	cmp	r0, #69	; 0x45
1004c26c:	d010      	beq.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c26e:	2869      	cmp	r0, #105	; 0x69
1004c270:	d00e      	beq.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c272:	2846      	cmp	r0, #70	; 0x46
1004c274:	d00c      	beq.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c276:	2101      	movs	r1, #1
1004c278:	6920      	ldr	r0, [r4, #16]
1004c27a:	0609      	lsls	r1, r1, #24
1004c27c:	4388      	bics	r0, r1
1004c27e:	6120      	str	r0, [r4, #16]
1004c280:	9801      	ldr	r0, [sp, #4]
1004c282:	f7fe f88b 	bl	1004a39c <GATT_Send_Packet>
1004c286:	9800      	ldr	r0, [sp, #0]
1004c288:	2800      	cmp	r0, #0
1004c28a:	d009      	beq.n	1004c2a0 <Process_Peer_Client_Data+0x190>
1004c28c:	e010      	b.n	1004c2b0 <Process_Peer_Client_Data+0x1a0>
1004c28e:	e7ff      	b.n	1004c290 <Process_Peer_Client_Data+0x180>
1004c290:	2100      	movs	r1, #0
1004c292:	9801      	ldr	r0, [sp, #4]
1004c294:	f008 fc26 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004c298:	9800      	ldr	r0, [sp, #0]
1004c29a:	2845      	cmp	r0, #69	; 0x45
1004c29c:	d00c      	beq.n	1004c2b8 <Process_Peer_Client_Data+0x1a8>
1004c29e:	e7f2      	b.n	1004c286 <Process_Peer_Client_Data+0x176>
1004c2a0:	4629      	mov	r1, r5
1004c2a2:	9803      	ldr	r0, [sp, #12]
1004c2a4:	f010 fc7f 	bl	1005cba6 <acl_list_remove>
1004c2a8:	2101      	movs	r1, #1
1004c2aa:	4628      	mov	r0, r5
1004c2ac:	f008 fc1a 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004c2b0:	463d      	mov	r5, r7
1004c2b2:	2d00      	cmp	r5, #0
1004c2b4:	d000      	beq.n	1004c2b8 <Process_Peer_Client_Data+0x1a8>
1004c2b6:	e741      	b.n	1004c13c <Process_Peer_Client_Data+0x2c>
1004c2b8:	b005      	add	sp, #20
1004c2ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c2bc:	68a0      	ldr	r0, [r4, #8]
1004c2be:	6826      	ldr	r6, [r4, #0]
1004c2c0:	7b07      	ldrb	r7, [r0, #12]
1004c2c2:	88a0      	ldrh	r0, [r4, #4]
1004c2c4:	f7fc f92c 	bl	10048520 <Find_Gatt_Client>
1004c2c8:	0005      	movs	r5, r0
1004c2ca:	d00d      	beq.n	1004c2e8 <Process_Peer_Client_Data+0x1d8>
1004c2cc:	2f52      	cmp	r7, #82	; 0x52
1004c2ce:	d001      	beq.n	1004c2d4 <Process_Peer_Client_Data+0x1c4>
1004c2d0:	2fd2      	cmp	r7, #210	; 0xd2
1004c2d2:	d106      	bne.n	1004c2e2 <Process_Peer_Client_Data+0x1d2>
1004c2d4:	6928      	ldr	r0, [r5, #16]
1004c2d6:	0340      	lsls	r0, r0, #13
1004c2d8:	d40e      	bmi.n	1004c2f8 <Process_Peer_Client_Data+0x1e8>
1004c2da:	4621      	mov	r1, r4
1004c2dc:	4628      	mov	r0, r5
1004c2de:	f012 f98e 	bl	1005e5fe <Write_Cmd>
1004c2e2:	6928      	ldr	r0, [r5, #16]
1004c2e4:	0340      	lsls	r0, r0, #13
1004c2e6:	d407      	bmi.n	1004c2f8 <Process_Peer_Client_Data+0x1e8>
1004c2e8:	4621      	mov	r1, r4
1004c2ea:	9800      	ldr	r0, [sp, #0]
1004c2ec:	f010 fc5b 	bl	1005cba6 <acl_list_remove>
1004c2f0:	2101      	movs	r1, #1
1004c2f2:	4620      	mov	r0, r4
1004c2f4:	f008 fbf6 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004c2f8:	4634      	mov	r4, r6
1004c2fa:	2c00      	cmp	r4, #0
1004c2fc:	d1de      	bne.n	1004c2bc <Process_Peer_Client_Data+0x1ac>
1004c2fe:	e7db      	b.n	1004c2b8 <Process_Peer_Client_Data+0x1a8>
1004c300:	20000d64 	.word	0x20000d64
1004c304:	0000072c 	.word	0x0000072c

1004c308 <Process_Peer_Server_Data>:
1004c308:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c30a:	4858      	ldr	r0, [pc, #352]	; (1004c46c <Process_Peer_Server_Data+0x164>)
1004c30c:	4a58      	ldr	r2, [pc, #352]	; (1004c470 <Process_Peer_Server_Data+0x168>)
1004c30e:	6801      	ldr	r1, [r0, #0]
1004c310:	b085      	sub	sp, #20
1004c312:	188a      	adds	r2, r1, r2
1004c314:	9204      	str	r2, [sp, #16]
1004c316:	2209      	movs	r2, #9
1004c318:	0212      	lsls	r2, r2, #8
1004c31a:	1889      	adds	r1, r1, r2
1004c31c:	2700      	movs	r7, #0
1004c31e:	6b4d      	ldr	r5, [r1, #52]	; 0x34
1004c320:	e095      	b.n	1004c44e <Process_Peer_Server_Data+0x146>
1004c322:	017e      	lsls	r6, r7, #5
1004c324:	5ba8      	ldrh	r0, [r5, r6]
1004c326:	2800      	cmp	r0, #0
1004c328:	d07b      	beq.n	1004c422 <Process_Peer_Server_Data+0x11a>
1004c32a:	1970      	adds	r0, r6, r5
1004c32c:	9000      	str	r0, [sp, #0]
1004c32e:	69c0      	ldr	r0, [r0, #28]
1004c330:	2800      	cmp	r0, #0
1004c332:	d04b      	beq.n	1004c3cc <Process_Peer_Server_Data+0xc4>
1004c334:	9900      	ldr	r1, [sp, #0]
1004c336:	6909      	ldr	r1, [r1, #16]
1004c338:	05ca      	lsls	r2, r1, #23
1004c33a:	d532      	bpl.n	1004c3a2 <Process_Peer_Server_Data+0x9a>
1004c33c:	054a      	lsls	r2, r1, #21
1004c33e:	d530      	bpl.n	1004c3a2 <Process_Peer_Server_Data+0x9a>
1004c340:	6880      	ldr	r0, [r0, #8]
1004c342:	2401      	movs	r4, #1
1004c344:	02a4      	lsls	r4, r4, #10
1004c346:	7b00      	ldrb	r0, [r0, #12]
1004c348:	43a1      	bics	r1, r4
1004c34a:	9a00      	ldr	r2, [sp, #0]
1004c34c:	281d      	cmp	r0, #29
1004c34e:	6111      	str	r1, [r2, #16]
1004c350:	d039      	beq.n	1004c3c6 <Process_Peer_Server_Data+0xbe>
1004c352:	281b      	cmp	r0, #27
1004c354:	d037      	beq.n	1004c3c6 <Process_Peer_Server_Data+0xbe>
1004c356:	9a00      	ldr	r2, [sp, #0]
1004c358:	7b92      	ldrb	r2, [r2, #14]
1004c35a:	4282      	cmp	r2, r0
1004c35c:	d002      	beq.n	1004c364 <Process_Peer_Server_Data+0x5c>
1004c35e:	2801      	cmp	r0, #1
1004c360:	d002      	beq.n	1004c368 <Process_Peer_Server_Data+0x60>
1004c362:	e030      	b.n	1004c3c6 <Process_Peer_Server_Data+0xbe>
1004c364:	2801      	cmp	r0, #1
1004c366:	d106      	bne.n	1004c376 <Process_Peer_Server_Data+0x6e>
1004c368:	9800      	ldr	r0, [sp, #0]
1004c36a:	69c0      	ldr	r0, [r0, #28]
1004c36c:	6880      	ldr	r0, [r0, #8]
1004c36e:	7b40      	ldrb	r0, [r0, #13]
1004c370:	1c40      	adds	r0, r0, #1
1004c372:	4282      	cmp	r2, r0
1004c374:	d169      	bne.n	1004c44a <Process_Peer_Server_Data+0x142>
1004c376:	05c8      	lsls	r0, r1, #23
1004c378:	d509      	bpl.n	1004c38e <Process_Peer_Server_Data+0x86>
1004c37a:	5ba9      	ldrh	r1, [r5, r6]
1004c37c:	2002      	movs	r0, #2
1004c37e:	f009 fa71 	bl	10055864 <Stop_Gatt_Timer>
1004c382:	9800      	ldr	r0, [sp, #0]
1004c384:	22ff      	movs	r2, #255	; 0xff
1004c386:	6901      	ldr	r1, [r0, #16]
1004c388:	3201      	adds	r2, #1
1004c38a:	4391      	bics	r1, r2
1004c38c:	6101      	str	r1, [r0, #16]
1004c38e:	9800      	ldr	r0, [sp, #0]
1004c390:	6981      	ldr	r1, [r0, #24]
1004c392:	4788      	blx	r1
1004c394:	2845      	cmp	r0, #69	; 0x45
1004c396:	d116      	bne.n	1004c3c6 <Process_Peer_Server_Data+0xbe>
1004c398:	9800      	ldr	r0, [sp, #0]
1004c39a:	6901      	ldr	r1, [r0, #16]
1004c39c:	4321      	orrs	r1, r4
1004c39e:	6101      	str	r1, [r0, #16]
1004c3a0:	e011      	b.n	1004c3c6 <Process_Peer_Server_Data+0xbe>
1004c3a2:	2101      	movs	r1, #1
1004c3a4:	f008 fb9e 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004c3a8:	9800      	ldr	r0, [sp, #0]
1004c3aa:	2100      	movs	r1, #0
1004c3ac:	61c1      	str	r1, [r0, #28]
1004c3ae:	9800      	ldr	r0, [sp, #0]
1004c3b0:	2201      	movs	r2, #1
1004c3b2:	6901      	ldr	r1, [r0, #16]
1004c3b4:	0292      	lsls	r2, r2, #10
1004c3b6:	4391      	bics	r1, r2
1004c3b8:	6101      	str	r1, [r0, #16]
1004c3ba:	2202      	movs	r2, #2
1004c3bc:	4611      	mov	r1, r2
1004c3be:	2042      	movs	r0, #66	; 0x42
1004c3c0:	9b00      	ldr	r3, [sp, #0]
1004c3c2:	f000 f935 	bl	1004c630 <aci_hal_fw_error_event_push>
1004c3c6:	5ba8      	ldrh	r0, [r5, r6]
1004c3c8:	2800      	cmp	r0, #0
1004c3ca:	d03e      	beq.n	1004c44a <Process_Peer_Server_Data+0x142>
1004c3cc:	9804      	ldr	r0, [sp, #16]
1004c3ce:	3024      	adds	r0, #36	; 0x24
1004c3d0:	9001      	str	r0, [sp, #4]
1004c3d2:	f010 fb9b 	bl	1005cb0c <acl_list_first>
1004c3d6:	4604      	mov	r4, r0
1004c3d8:	e035      	b.n	1004c446 <Process_Peer_Server_Data+0x13e>
1004c3da:	6820      	ldr	r0, [r4, #0]
1004c3dc:	9003      	str	r0, [sp, #12]
1004c3de:	68a0      	ldr	r0, [r4, #8]
1004c3e0:	5bab      	ldrh	r3, [r5, r6]
1004c3e2:	7b01      	ldrb	r1, [r0, #12]
1004c3e4:	88a0      	ldrh	r0, [r4, #4]
1004c3e6:	051a      	lsls	r2, r3, #20
1004c3e8:	0d12      	lsrs	r2, r2, #20
1004c3ea:	4290      	cmp	r0, r2
1004c3ec:	d101      	bne.n	1004c3f2 <Process_Peer_Server_Data+0xea>
1004c3ee:	291d      	cmp	r1, #29
1004c3f0:	d004      	beq.n	1004c3fc <Process_Peer_Server_Data+0xf4>
1004c3f2:	4290      	cmp	r0, r2
1004c3f4:	d126      	bne.n	1004c444 <Process_Peer_Server_Data+0x13c>
1004c3f6:	291b      	cmp	r1, #27
1004c3f8:	d032      	beq.n	1004c460 <Process_Peer_Server_Data+0x158>
1004c3fa:	e023      	b.n	1004c444 <Process_Peer_Server_Data+0x13c>
1004c3fc:	9900      	ldr	r1, [sp, #0]
1004c3fe:	6909      	ldr	r1, [r1, #16]
1004c400:	04ca      	lsls	r2, r1, #19
1004c402:	d40f      	bmi.n	1004c424 <Process_Peer_Server_Data+0x11c>
1004c404:	2201      	movs	r2, #1
1004c406:	0312      	lsls	r2, r2, #12
1004c408:	9800      	ldr	r0, [sp, #0]
1004c40a:	4311      	orrs	r1, r2
1004c40c:	6101      	str	r1, [r0, #16]
1004c40e:	5ba9      	ldrh	r1, [r5, r6]
1004c410:	2003      	movs	r0, #3
1004c412:	f009 fa15 	bl	10055840 <Start_Gatt_Timer>
1004c416:	5ba9      	ldrh	r1, [r5, r6]
1004c418:	4622      	mov	r2, r4
1004c41a:	2002      	movs	r0, #2
1004c41c:	f000 f878 	bl	1004c510 <aci_gatt_indication_event_push>
1004c420:	e008      	b.n	1004c434 <Process_Peer_Server_Data+0x12c>
1004c422:	e012      	b.n	1004c44a <Process_Peer_Server_Data+0x142>
1004c424:	4669      	mov	r1, sp
1004c426:	8108      	strh	r0, [r1, #8]
1004c428:	ab02      	add	r3, sp, #8
1004c42a:	2202      	movs	r2, #2
1004c42c:	2103      	movs	r1, #3
1004c42e:	2042      	movs	r0, #66	; 0x42
1004c430:	f000 f8fe 	bl	1004c630 <aci_hal_fw_error_event_push>
1004c434:	4621      	mov	r1, r4
1004c436:	9801      	ldr	r0, [sp, #4]
1004c438:	f010 fbb5 	bl	1005cba6 <acl_list_remove>
1004c43c:	2101      	movs	r1, #1
1004c43e:	4620      	mov	r0, r4
1004c440:	f008 fb50 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004c444:	9c03      	ldr	r4, [sp, #12]
1004c446:	2c00      	cmp	r4, #0
1004c448:	d1c7      	bne.n	1004c3da <Process_Peer_Server_Data+0xd2>
1004c44a:	1c7f      	adds	r7, r7, #1
1004c44c:	b2ff      	uxtb	r7, r7
1004c44e:	4807      	ldr	r0, [pc, #28]	; (1004c46c <Process_Peer_Server_Data+0x164>)
1004c450:	6800      	ldr	r0, [r0, #0]
1004c452:	30a0      	adds	r0, #160	; 0xa0
1004c454:	7b00      	ldrb	r0, [r0, #12]
1004c456:	42b8      	cmp	r0, r7
1004c458:	d900      	bls.n	1004c45c <Process_Peer_Server_Data+0x154>
1004c45a:	e762      	b.n	1004c322 <Process_Peer_Server_Data+0x1a>
1004c45c:	b005      	add	sp, #20
1004c45e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c460:	4622      	mov	r2, r4
1004c462:	4619      	mov	r1, r3
1004c464:	2002      	movs	r0, #2
1004c466:	f000 f89b 	bl	1004c5a0 <aci_gatt_notification_event_push>
1004c46a:	e7e3      	b.n	1004c434 <Process_Peer_Server_Data+0x12c>
1004c46c:	20000d64 	.word	0x20000d64
1004c470:	0000072c 	.word	0x0000072c

1004c474 <Select_Next_Notification_Client>:
1004c474:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c476:	4694      	mov	ip, r2
1004c478:	2200      	movs	r2, #0
1004c47a:	800a      	strh	r2, [r1, #0]
1004c47c:	4663      	mov	r3, ip
1004c47e:	4c10      	ldr	r4, [pc, #64]	; (1004c4c0 <Select_Next_Notification_Client+0x4c>)
1004c480:	601a      	str	r2, [r3, #0]
1004c482:	2309      	movs	r3, #9
1004c484:	6822      	ldr	r2, [r4, #0]
1004c486:	021b      	lsls	r3, r3, #8
1004c488:	4686      	mov	lr, r0
1004c48a:	18d2      	adds	r2, r2, r3
1004c48c:	2041      	movs	r0, #65	; 0x41
1004c48e:	6b52      	ldr	r2, [r2, #52]	; 0x34
1004c490:	2300      	movs	r3, #0
1004c492:	e00f      	b.n	1004c4b4 <Select_Next_Notification_Client+0x40>
1004c494:	015d      	lsls	r5, r3, #5
1004c496:	18ad      	adds	r5, r5, r2
1004c498:	692f      	ldr	r7, [r5, #16]
1004c49a:	4676      	mov	r6, lr
1004c49c:	4237      	tst	r7, r6
1004c49e:	d007      	beq.n	1004c4b0 <Select_Next_Notification_Client+0x3c>
1004c4a0:	886f      	ldrh	r7, [r5, #2]
1004c4a2:	880e      	ldrh	r6, [r1, #0]
1004c4a4:	42b7      	cmp	r7, r6
1004c4a6:	d903      	bls.n	1004c4b0 <Select_Next_Notification_Client+0x3c>
1004c4a8:	800f      	strh	r7, [r1, #0]
1004c4aa:	4660      	mov	r0, ip
1004c4ac:	6005      	str	r5, [r0, #0]
1004c4ae:	2000      	movs	r0, #0
1004c4b0:	1c5b      	adds	r3, r3, #1
1004c4b2:	b2db      	uxtb	r3, r3
1004c4b4:	6825      	ldr	r5, [r4, #0]
1004c4b6:	35a0      	adds	r5, #160	; 0xa0
1004c4b8:	7b2d      	ldrb	r5, [r5, #12]
1004c4ba:	429d      	cmp	r5, r3
1004c4bc:	d8ea      	bhi.n	1004c494 <Select_Next_Notification_Client+0x20>
1004c4be:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c4c0:	20000d64 	.word	0x20000d64

1004c4c4 <Send_Notif_Or_Ind>:
1004c4c4:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004c4c6:	460c      	mov	r4, r1
1004c4c8:	4605      	mov	r5, r0
1004c4ca:	466a      	mov	r2, sp
1004c4cc:	a901      	add	r1, sp, #4
1004c4ce:	f7ff ffd1 	bl	1004c474 <Select_Next_Notification_Client>
1004c4d2:	2800      	cmp	r0, #0
1004c4d4:	d001      	beq.n	1004c4da <Send_Notif_Or_Ind+0x16>
1004c4d6:	2041      	movs	r0, #65	; 0x41
1004c4d8:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004c4da:	4668      	mov	r0, sp
1004c4dc:	88e1      	ldrh	r1, [r4, #6]
1004c4de:	8880      	ldrh	r0, [r0, #4]
1004c4e0:	4281      	cmp	r1, r0
1004c4e2:	d900      	bls.n	1004c4e6 <Send_Notif_Or_Ind+0x22>
1004c4e4:	80e0      	strh	r0, [r4, #6]
1004c4e6:	9800      	ldr	r0, [sp, #0]
1004c4e8:	8800      	ldrh	r0, [r0, #0]
1004c4ea:	80a0      	strh	r0, [r4, #4]
1004c4ec:	4620      	mov	r0, r4
1004c4ee:	f7fd ff55 	bl	1004a39c <GATT_Send_Packet>
1004c4f2:	9800      	ldr	r0, [sp, #0]
1004c4f4:	2d01      	cmp	r5, #1
1004c4f6:	d007      	beq.n	1004c508 <Send_Notif_Or_Ind+0x44>
1004c4f8:	6901      	ldr	r1, [r0, #16]
1004c4fa:	2208      	movs	r2, #8
1004c4fc:	4311      	orrs	r1, r2
1004c4fe:	2202      	movs	r2, #2
1004c500:	4391      	bics	r1, r2
1004c502:	6101      	str	r1, [r0, #16]
1004c504:	2000      	movs	r0, #0
1004c506:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004c508:	6901      	ldr	r1, [r0, #16]
1004c50a:	0849      	lsrs	r1, r1, #1
1004c50c:	0049      	lsls	r1, r1, #1
1004c50e:	e7f8      	b.n	1004c502 <Send_Notif_Or_Ind+0x3e>

1004c510 <aci_gatt_indication_event_push>:
1004c510:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004c512:	4606      	mov	r6, r0
1004c514:	7990      	ldrb	r0, [r2, #6]
1004c516:	6891      	ldr	r1, [r2, #8]
1004c518:	1ec0      	subs	r0, r0, #3
1004c51a:	b082      	sub	sp, #8
1004c51c:	4617      	mov	r7, r2
1004c51e:	b2c5      	uxtb	r5, r0
1004c520:	2202      	movs	r2, #2
1004c522:	4668      	mov	r0, sp
1004c524:	310d      	adds	r1, #13
1004c526:	f7f4 f92c 	bl	10040782 <Osal_MemCpy>
1004c52a:	1d68      	adds	r0, r5, #5
1004c52c:	2103      	movs	r1, #3
1004c52e:	4308      	orrs	r0, r1
1004c530:	1c40      	adds	r0, r0, #1
1004c532:	0883      	lsrs	r3, r0, #2
1004c534:	4819      	ldr	r0, [pc, #100]	; (1004c59c <aci_gatt_indication_event_push+0x8c>)
1004c536:	06f1      	lsls	r1, r6, #27
1004c538:	d503      	bpl.n	1004c542 <aci_gatt_indication_event_push+0x32>
1004c53a:	2232      	movs	r2, #50	; 0x32
1004c53c:	21bf      	movs	r1, #191	; 0xbf
1004c53e:	400e      	ands	r6, r1
1004c540:	e00a      	b.n	1004c558 <aci_gatt_indication_event_push+0x48>
1004c542:	2237      	movs	r2, #55	; 0x37
1004c544:	6801      	ldr	r1, [r0, #0]
1004c546:	0152      	lsls	r2, r2, #5
1004c548:	1889      	adds	r1, r1, r2
1004c54a:	7b49      	ldrb	r1, [r1, #13]
1004c54c:	0689      	lsls	r1, r1, #26
1004c54e:	d402      	bmi.n	1004c556 <aci_gatt_indication_event_push+0x46>
1004c550:	2000      	movs	r0, #0
1004c552:	b005      	add	sp, #20
1004c554:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c556:	222f      	movs	r2, #47	; 0x2f
1004c558:	0731      	lsls	r1, r6, #28
1004c55a:	6800      	ldr	r0, [r0, #0]
1004c55c:	0e89      	lsrs	r1, r1, #26
1004c55e:	1808      	adds	r0, r1, r0
1004c560:	2101      	movs	r1, #1
1004c562:	02c9      	lsls	r1, r1, #11
1004c564:	1840      	adds	r0, r0, r1
1004c566:	6940      	ldr	r0, [r0, #20]
1004c568:	4631      	mov	r1, r6
1004c56a:	f00f fcbf 	bl	1005beec <aci_event_fifo_push_header>
1004c56e:	0004      	movs	r4, r0
1004c570:	d011      	beq.n	1004c596 <aci_gatt_indication_event_push+0x86>
1004c572:	9803      	ldr	r0, [sp, #12]
1004c574:	80a0      	strh	r0, [r4, #4]
1004c576:	4668      	mov	r0, sp
1004c578:	8800      	ldrh	r0, [r0, #0]
1004c57a:	80e0      	strh	r0, [r4, #6]
1004c57c:	4623      	mov	r3, r4
1004c57e:	7225      	strb	r5, [r4, #8]
1004c580:	462a      	mov	r2, r5
1004c582:	2107      	movs	r1, #7
1004c584:	4638      	mov	r0, r7
1004c586:	3309      	adds	r3, #9
1004c588:	f008 fa10 	bl	100549ac <PM_Copy_Pckt_Data>
1004c58c:	4621      	mov	r1, r4
1004c58e:	4630      	mov	r0, r6
1004c590:	f00f fc98 	bl	1005bec4 <aci_event_fifo_push>
1004c594:	e7dc      	b.n	1004c550 <aci_gatt_indication_event_push+0x40>
1004c596:	2007      	movs	r0, #7
1004c598:	e7db      	b.n	1004c552 <aci_gatt_indication_event_push+0x42>
1004c59a:	0000      	.short	0x0000
1004c59c:	20000d64 	.word	0x20000d64

1004c5a0 <aci_gatt_notification_event_push>:
1004c5a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004c5a2:	4606      	mov	r6, r0
1004c5a4:	7990      	ldrb	r0, [r2, #6]
1004c5a6:	6891      	ldr	r1, [r2, #8]
1004c5a8:	1ec0      	subs	r0, r0, #3
1004c5aa:	b082      	sub	sp, #8
1004c5ac:	4617      	mov	r7, r2
1004c5ae:	b2c5      	uxtb	r5, r0
1004c5b0:	2202      	movs	r2, #2
1004c5b2:	4668      	mov	r0, sp
1004c5b4:	310d      	adds	r1, #13
1004c5b6:	f7f4 f8e4 	bl	10040782 <Osal_MemCpy>
1004c5ba:	1d68      	adds	r0, r5, #5
1004c5bc:	2103      	movs	r1, #3
1004c5be:	4308      	orrs	r0, r1
1004c5c0:	1c40      	adds	r0, r0, #1
1004c5c2:	0883      	lsrs	r3, r0, #2
1004c5c4:	4819      	ldr	r0, [pc, #100]	; (1004c62c <aci_gatt_notification_event_push+0x8c>)
1004c5c6:	06f1      	lsls	r1, r6, #27
1004c5c8:	d503      	bpl.n	1004c5d2 <aci_gatt_notification_event_push+0x32>
1004c5ca:	2233      	movs	r2, #51	; 0x33
1004c5cc:	21bf      	movs	r1, #191	; 0xbf
1004c5ce:	400e      	ands	r6, r1
1004c5d0:	e00a      	b.n	1004c5e8 <aci_gatt_notification_event_push+0x48>
1004c5d2:	2237      	movs	r2, #55	; 0x37
1004c5d4:	6801      	ldr	r1, [r0, #0]
1004c5d6:	0152      	lsls	r2, r2, #5
1004c5d8:	1889      	adds	r1, r1, r2
1004c5da:	7b49      	ldrb	r1, [r1, #13]
1004c5dc:	0649      	lsls	r1, r1, #25
1004c5de:	d402      	bmi.n	1004c5e6 <aci_gatt_notification_event_push+0x46>
1004c5e0:	2000      	movs	r0, #0
1004c5e2:	b005      	add	sp, #20
1004c5e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c5e6:	2230      	movs	r2, #48	; 0x30
1004c5e8:	0731      	lsls	r1, r6, #28
1004c5ea:	6800      	ldr	r0, [r0, #0]
1004c5ec:	0e89      	lsrs	r1, r1, #26
1004c5ee:	1808      	adds	r0, r1, r0
1004c5f0:	2101      	movs	r1, #1
1004c5f2:	02c9      	lsls	r1, r1, #11
1004c5f4:	1840      	adds	r0, r0, r1
1004c5f6:	6940      	ldr	r0, [r0, #20]
1004c5f8:	4631      	mov	r1, r6
1004c5fa:	f00f fc77 	bl	1005beec <aci_event_fifo_push_header>
1004c5fe:	0004      	movs	r4, r0
1004c600:	d011      	beq.n	1004c626 <aci_gatt_notification_event_push+0x86>
1004c602:	9803      	ldr	r0, [sp, #12]
1004c604:	80a0      	strh	r0, [r4, #4]
1004c606:	4668      	mov	r0, sp
1004c608:	8800      	ldrh	r0, [r0, #0]
1004c60a:	80e0      	strh	r0, [r4, #6]
1004c60c:	4623      	mov	r3, r4
1004c60e:	7225      	strb	r5, [r4, #8]
1004c610:	462a      	mov	r2, r5
1004c612:	2107      	movs	r1, #7
1004c614:	4638      	mov	r0, r7
1004c616:	3309      	adds	r3, #9
1004c618:	f008 f9c8 	bl	100549ac <PM_Copy_Pckt_Data>
1004c61c:	4621      	mov	r1, r4
1004c61e:	4630      	mov	r0, r6
1004c620:	f00f fc50 	bl	1005bec4 <aci_event_fifo_push>
1004c624:	e7dc      	b.n	1004c5e0 <aci_gatt_notification_event_push+0x40>
1004c626:	2007      	movs	r0, #7
1004c628:	e7db      	b.n	1004c5e2 <aci_gatt_notification_event_push+0x42>
1004c62a:	0000      	.short	0x0000
1004c62c:	20000d64 	.word	0x20000d64

1004c630 <aci_hal_fw_error_event_push>:
1004c630:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004c632:	4605      	mov	r5, r0
1004c634:	2301      	movs	r3, #1
1004c636:	b081      	sub	sp, #4
1004c638:	4616      	mov	r6, r2
1004c63a:	460f      	mov	r7, r1
1004c63c:	06c0      	lsls	r0, r0, #27
1004c63e:	d503      	bpl.n	1004c648 <aci_hal_fw_error_event_push+0x18>
1004c640:	2224      	movs	r2, #36	; 0x24
1004c642:	20bf      	movs	r0, #191	; 0xbf
1004c644:	4005      	ands	r5, r0
1004c646:	e000      	b.n	1004c64a <aci_hal_fw_error_event_push+0x1a>
1004c648:	2221      	movs	r2, #33	; 0x21
1004c64a:	490f      	ldr	r1, [pc, #60]	; (1004c688 <aci_hal_fw_error_event_push+0x58>)
1004c64c:	0728      	lsls	r0, r5, #28
1004c64e:	6809      	ldr	r1, [r1, #0]
1004c650:	0e80      	lsrs	r0, r0, #26
1004c652:	1840      	adds	r0, r0, r1
1004c654:	2101      	movs	r1, #1
1004c656:	02c9      	lsls	r1, r1, #11
1004c658:	1840      	adds	r0, r0, r1
1004c65a:	6940      	ldr	r0, [r0, #20]
1004c65c:	4629      	mov	r1, r5
1004c65e:	f00f fc45 	bl	1005beec <aci_event_fifo_push_header>
1004c662:	0004      	movs	r4, r0
1004c664:	d00d      	beq.n	1004c682 <aci_hal_fw_error_event_push+0x52>
1004c666:	7127      	strb	r7, [r4, #4]
1004c668:	7166      	strb	r6, [r4, #5]
1004c66a:	4632      	mov	r2, r6
1004c66c:	1da0      	adds	r0, r4, #6
1004c66e:	9904      	ldr	r1, [sp, #16]
1004c670:	f7f4 f887 	bl	10040782 <Osal_MemCpy>
1004c674:	4621      	mov	r1, r4
1004c676:	4628      	mov	r0, r5
1004c678:	f00f fc24 	bl	1005bec4 <aci_event_fifo_push>
1004c67c:	2000      	movs	r0, #0
1004c67e:	b005      	add	sp, #20
1004c680:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c682:	2007      	movs	r0, #7
1004c684:	e7fb      	b.n	1004c67e <aci_hal_fw_error_event_push+0x4e>
1004c686:	0000      	.short	0x0000
1004c688:	20000d64 	.word	0x20000d64

1004c68c <store_data>:
1004c68c:	b510      	push	{r4, lr}
1004c68e:	881c      	ldrh	r4, [r3, #0]
1004c690:	18a4      	adds	r4, r4, r2
1004c692:	b2a4      	uxth	r4, r4
1004c694:	801c      	strh	r4, [r3, #0]
1004c696:	2301      	movs	r3, #1
1004c698:	025b      	lsls	r3, r3, #9
1004c69a:	429c      	cmp	r4, r3
1004c69c:	d803      	bhi.n	1004c6a6 <store_data+0x1a>
1004c69e:	f7f4 f870 	bl	10040782 <Osal_MemCpy>
1004c6a2:	2000      	movs	r0, #0
1004c6a4:	bd10      	pop	{r4, pc}
1004c6a6:	2041      	movs	r0, #65	; 0x41
1004c6a8:	bd10      	pop	{r4, pc}

1004c6aa <__ARM_common_switch8>:
1004c6aa:	b430      	push	{r4, r5}
1004c6ac:	4674      	mov	r4, lr
1004c6ae:	1e64      	subs	r4, r4, #1
1004c6b0:	7825      	ldrb	r5, [r4, #0]
1004c6b2:	1c64      	adds	r4, r4, #1
1004c6b4:	42ab      	cmp	r3, r5
1004c6b6:	d200      	bcs.n	1004c6ba <__ARM_common_switch8+0x10>
1004c6b8:	461d      	mov	r5, r3
1004c6ba:	5d63      	ldrb	r3, [r4, r5]
1004c6bc:	005b      	lsls	r3, r3, #1
1004c6be:	18e3      	adds	r3, r4, r3
1004c6c0:	bc30      	pop	{r4, r5}
1004c6c2:	4718      	bx	r3

1004c6c4 <HAL_Flash_Store_Data>:
1004c6c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004c6c6:	4616      	mov	r6, r2
1004c6c8:	2400      	movs	r4, #0
1004c6ca:	e01c      	b.n	1004c706 <HAL_Flash_Store_Data+0x42>
1004c6cc:	9800      	ldr	r0, [sp, #0]
1004c6ce:	4911      	ldr	r1, [pc, #68]	; (1004c714 <HAL_Flash_Store_Data+0x50>)
1004c6d0:	1900      	adds	r0, r0, r4
1004c6d2:	1840      	adds	r0, r0, r1
1004c6d4:	0881      	lsrs	r1, r0, #2
1004c6d6:	9801      	ldr	r0, [sp, #4]
1004c6d8:	0089      	lsls	r1, r1, #2
1004c6da:	1900      	adds	r0, r0, r4
1004c6dc:	7842      	ldrb	r2, [r0, #1]
1004c6de:	7805      	ldrb	r5, [r0, #0]
1004c6e0:	0212      	lsls	r2, r2, #8
1004c6e2:	4315      	orrs	r5, r2
1004c6e4:	7882      	ldrb	r2, [r0, #2]
1004c6e6:	78c0      	ldrb	r0, [r0, #3]
1004c6e8:	0412      	lsls	r2, r2, #16
1004c6ea:	0600      	lsls	r0, r0, #24
1004c6ec:	4302      	orrs	r2, r0
1004c6ee:	4809      	ldr	r0, [pc, #36]	; (1004c714 <HAL_Flash_Store_Data+0x50>)
1004c6f0:	4315      	orrs	r5, r2
1004c6f2:	4240      	negs	r0, r0
1004c6f4:	180f      	adds	r7, r1, r0
1004c6f6:	4629      	mov	r1, r5
1004c6f8:	4638      	mov	r0, r7
1004c6fa:	f7f4 fd83 	bl	10041204 <FLASH_ProgramWord>
1004c6fe:	6838      	ldr	r0, [r7, #0]
1004c700:	4285      	cmp	r5, r0
1004c702:	d104      	bne.n	1004c70e <HAL_Flash_Store_Data+0x4a>
1004c704:	1d24      	adds	r4, r4, #4
1004c706:	42b4      	cmp	r4, r6
1004c708:	d3e0      	bcc.n	1004c6cc <HAL_Flash_Store_Data+0x8>
1004c70a:	2000      	movs	r0, #0
1004c70c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004c70e:	20fb      	movs	r0, #251	; 0xfb
1004c710:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004c712:	0000      	.short	0x0000
1004c714:	effc0000 	.word	0xeffc0000

1004c718 <HAL_Generate_Random_Bytes_To>:
1004c718:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c71a:	460e      	mov	r6, r1
1004c71c:	4607      	mov	r7, r0
1004c71e:	2400      	movs	r4, #0
1004c720:	e007      	b.n	1004c732 <HAL_Generate_Random_Bytes_To+0x1a>
1004c722:	193d      	adds	r5, r7, r4
1004c724:	f000 f8f2 	bl	1004c90c <Hal_Get_Random_Number>
1004c728:	7028      	strb	r0, [r5, #0]
1004c72a:	0a00      	lsrs	r0, r0, #8
1004c72c:	7068      	strb	r0, [r5, #1]
1004c72e:	1ca4      	adds	r4, r4, #2
1004c730:	b2e4      	uxtb	r4, r4
1004c732:	42b4      	cmp	r4, r6
1004c734:	d3f5      	bcc.n	1004c722 <HAL_Generate_Random_Bytes_To+0xa>
1004c736:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004c738 <HAL_Read_ConfigData>:
1004c738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004c73a:	4e1b      	ldr	r6, [pc, #108]	; (1004c7a8 <HAL_Read_ConfigData+0x70>)
1004c73c:	4614      	mov	r4, r2
1004c73e:	6833      	ldr	r3, [r6, #0]
1004c740:	2206      	movs	r2, #6
1004c742:	3378      	adds	r3, #120	; 0x78
1004c744:	2800      	cmp	r0, #0
1004c746:	d01d      	beq.n	1004c784 <HAL_Read_ConfigData+0x4c>
1004c748:	2502      	movs	r5, #2
1004c74a:	2806      	cmp	r0, #6
1004c74c:	d012      	beq.n	1004c774 <HAL_Read_ConfigData+0x3c>
1004c74e:	2710      	movs	r7, #16
1004c750:	2808      	cmp	r0, #8
1004c752:	d00d      	beq.n	1004c770 <HAL_Read_ConfigData+0x38>
1004c754:	2818      	cmp	r0, #24
1004c756:	d00b      	beq.n	1004c770 <HAL_Read_ConfigData+0x38>
1004c758:	2828      	cmp	r0, #40	; 0x28
1004c75a:	d00b      	beq.n	1004c774 <HAL_Read_ConfigData+0x3c>
1004c75c:	282a      	cmp	r0, #42	; 0x2a
1004c75e:	d009      	beq.n	1004c774 <HAL_Read_ConfigData+0x3c>
1004c760:	282c      	cmp	r0, #44	; 0x2c
1004c762:	d009      	beq.n	1004c778 <HAL_Read_ConfigData+0x40>
1004c764:	282e      	cmp	r0, #46	; 0x2e
1004c766:	d00d      	beq.n	1004c784 <HAL_Read_ConfigData+0x4c>
1004c768:	2880      	cmp	r0, #128	; 0x80
1004c76a:	d010      	beq.n	1004c78e <HAL_Read_ConfigData+0x56>
1004c76c:	2012      	movs	r0, #18
1004c76e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004c770:	700f      	strb	r7, [r1, #0]
1004c772:	e008      	b.n	1004c786 <HAL_Read_ConfigData+0x4e>
1004c774:	700d      	strb	r5, [r1, #0]
1004c776:	e006      	b.n	1004c786 <HAL_Read_ConfigData+0x4e>
1004c778:	2201      	movs	r2, #1
1004c77a:	700a      	strb	r2, [r1, #0]
1004c77c:	5c18      	ldrb	r0, [r3, r0]
1004c77e:	4010      	ands	r0, r2
1004c780:	7020      	strb	r0, [r4, #0]
1004c782:	e00e      	b.n	1004c7a2 <HAL_Read_ConfigData+0x6a>
1004c784:	700a      	strb	r2, [r1, #0]
1004c786:	780a      	ldrb	r2, [r1, #0]
1004c788:	1819      	adds	r1, r3, r0
1004c78a:	4620      	mov	r0, r4
1004c78c:	e007      	b.n	1004c79e <HAL_Read_ConfigData+0x66>
1004c78e:	700a      	strb	r2, [r1, #0]
1004c790:	2109      	movs	r1, #9
1004c792:	6830      	ldr	r0, [r6, #0]
1004c794:	0209      	lsls	r1, r1, #8
1004c796:	1840      	adds	r0, r0, r1
1004c798:	6e01      	ldr	r1, [r0, #96]	; 0x60
1004c79a:	4620      	mov	r0, r4
1004c79c:	3124      	adds	r1, #36	; 0x24
1004c79e:	f7f3 fff0 	bl	10040782 <Osal_MemCpy>
1004c7a2:	2000      	movs	r0, #0
1004c7a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004c7a6:	0000      	.short	0x0000
1004c7a8:	20000d64 	.word	0x20000d64

1004c7ac <HAL_Set_TX_Power_Level>:
1004c7ac:	b510      	push	{r4, lr}
1004c7ae:	2801      	cmp	r0, #1
1004c7b0:	d818      	bhi.n	1004c7e4 <HAL_Set_TX_Power_Level+0x38>
1004c7b2:	2907      	cmp	r1, #7
1004c7b4:	d816      	bhi.n	1004c7e4 <HAL_Set_TX_Power_Level+0x38>
1004c7b6:	4a0c      	ldr	r2, [pc, #48]	; (1004c7e8 <HAL_Set_TX_Power_Level+0x3c>)
1004c7b8:	6812      	ldr	r2, [r2, #0]
1004c7ba:	4613      	mov	r3, r2
1004c7bc:	3320      	adds	r3, #32
1004c7be:	7718      	strb	r0, [r3, #28]
1004c7c0:	7759      	strb	r1, [r3, #29]
1004c7c2:	0780      	lsls	r0, r0, #30
1004c7c4:	06c9      	lsls	r1, r1, #27
1004c7c6:	0e00      	lsrs	r0, r0, #24
1004c7c8:	0e09      	lsrs	r1, r1, #24
1004c7ca:	4301      	orrs	r1, r0
1004c7cc:	2000      	movs	r0, #0
1004c7ce:	4b07      	ldr	r3, [pc, #28]	; (1004c7ec <HAL_Set_TX_Power_Level+0x40>)
1004c7d0:	32a0      	adds	r2, #160	; 0xa0
1004c7d2:	e004      	b.n	1004c7de <HAL_Set_TX_Power_Level+0x32>
1004c7d4:	0184      	lsls	r4, r0, #6
1004c7d6:	18e4      	adds	r4, r4, r3
1004c7d8:	72a1      	strb	r1, [r4, #10]
1004c7da:	1c40      	adds	r0, r0, #1
1004c7dc:	b2c0      	uxtb	r0, r0
1004c7de:	7b14      	ldrb	r4, [r2, #12]
1004c7e0:	4284      	cmp	r4, r0
1004c7e2:	d8f7      	bhi.n	1004c7d4 <HAL_Set_TX_Power_Level+0x28>
1004c7e4:	2000      	movs	r0, #0
1004c7e6:	bd10      	pop	{r4, pc}
1004c7e8:	20000d64 	.word	0x20000d64
1004c7ec:	20000100 	.word	0x20000100

1004c7f0 <HAL_Write_ConfigData>:
1004c7f0:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c7f2:	4f44      	ldr	r7, [pc, #272]	; (1004c904 <HAL_Write_ConfigData+0x114>)
1004c7f4:	4604      	mov	r4, r0
1004c7f6:	6838      	ldr	r0, [r7, #0]
1004c7f8:	b085      	sub	sp, #20
1004c7fa:	3078      	adds	r0, #120	; 0x78
1004c7fc:	4616      	mov	r6, r2
1004c7fe:	460d      	mov	r5, r1
1004c800:	2c00      	cmp	r4, #0
1004c802:	d019      	beq.n	1004c838 <HAL_Write_ConfigData+0x48>
1004c804:	2c06      	cmp	r4, #6
1004c806:	d011      	beq.n	1004c82c <HAL_Write_ConfigData+0x3c>
1004c808:	2c08      	cmp	r4, #8
1004c80a:	d00c      	beq.n	1004c826 <HAL_Write_ConfigData+0x36>
1004c80c:	2c18      	cmp	r4, #24
1004c80e:	d00a      	beq.n	1004c826 <HAL_Write_ConfigData+0x36>
1004c810:	2c28      	cmp	r4, #40	; 0x28
1004c812:	d00b      	beq.n	1004c82c <HAL_Write_ConfigData+0x3c>
1004c814:	2c2a      	cmp	r4, #42	; 0x2a
1004c816:	d009      	beq.n	1004c82c <HAL_Write_ConfigData+0x3c>
1004c818:	2c2c      	cmp	r4, #44	; 0x2c
1004c81a:	d00a      	beq.n	1004c832 <HAL_Write_ConfigData+0x42>
1004c81c:	2c2e      	cmp	r4, #46	; 0x2e
1004c81e:	d00b      	beq.n	1004c838 <HAL_Write_ConfigData+0x48>
1004c820:	2cd0      	cmp	r4, #208	; 0xd0
1004c822:	d042      	beq.n	1004c8aa <HAL_Write_ConfigData+0xba>
1004c824:	e043      	b.n	1004c8ae <HAL_Write_ConfigData+0xbe>
1004c826:	2d10      	cmp	r5, #16
1004c828:	d008      	beq.n	1004c83c <HAL_Write_ConfigData+0x4c>
1004c82a:	e040      	b.n	1004c8ae <HAL_Write_ConfigData+0xbe>
1004c82c:	2d02      	cmp	r5, #2
1004c82e:	d005      	beq.n	1004c83c <HAL_Write_ConfigData+0x4c>
1004c830:	e03d      	b.n	1004c8ae <HAL_Write_ConfigData+0xbe>
1004c832:	2d01      	cmp	r5, #1
1004c834:	d002      	beq.n	1004c83c <HAL_Write_ConfigData+0x4c>
1004c836:	e03a      	b.n	1004c8ae <HAL_Write_ConfigData+0xbe>
1004c838:	2d06      	cmp	r5, #6
1004c83a:	d138      	bne.n	1004c8ae <HAL_Write_ConfigData+0xbe>
1004c83c:	460a      	mov	r2, r1
1004c83e:	1900      	adds	r0, r0, r4
1004c840:	4631      	mov	r1, r6
1004c842:	f7f3 ff9e 	bl	10040782 <Osal_MemCpy>
1004c846:	2c2c      	cmp	r4, #44	; 0x2c
1004c848:	d128      	bne.n	1004c89c <HAL_Write_ConfigData+0xac>
1004c84a:	7830      	ldrb	r0, [r6, #0]
1004c84c:	2800      	cmp	r0, #0
1004c84e:	d025      	beq.n	1004c89c <HAL_Write_ConfigData+0xac>
1004c850:	f7f5 f99c 	bl	10041b8c <data_length_extension_csr_ucfg>
1004c854:	2801      	cmp	r0, #1
1004c856:	d024      	beq.n	1004c8a2 <HAL_Write_ConfigData+0xb2>
1004c858:	201b      	movs	r0, #27
1004c85a:	301f      	adds	r0, #31
1004c85c:	0940      	lsrs	r0, r0, #5
1004c85e:	1c40      	adds	r0, r0, #1
1004c860:	0041      	lsls	r1, r0, #1
1004c862:	1841      	adds	r1, r0, r1
1004c864:	2001      	movs	r0, #1
1004c866:	f008 f8ab 	bl	100549c0 <PM_Eng_Config>
1004c86a:	f7f5 f98f 	bl	10041b8c <data_length_extension_csr_ucfg>
1004c86e:	2801      	cmp	r0, #1
1004c870:	d019      	beq.n	1004c8a6 <HAL_Write_ConfigData+0xb6>
1004c872:	201b      	movs	r0, #27
1004c874:	301f      	adds	r0, #31
1004c876:	0940      	lsrs	r0, r0, #5
1004c878:	0041      	lsls	r1, r0, #1
1004c87a:	1841      	adds	r1, r0, r1
1004c87c:	4822      	ldr	r0, [pc, #136]	; (1004c908 <HAL_Write_ConfigData+0x118>)
1004c87e:	7840      	ldrb	r0, [r0, #1]
1004c880:	1a40      	subs	r0, r0, r1
1004c882:	1ec0      	subs	r0, r0, #3
1004c884:	b2c1      	uxtb	r1, r0
1004c886:	2000      	movs	r0, #0
1004c888:	f008 f89a 	bl	100549c0 <PM_Eng_Config>
1004c88c:	6838      	ldr	r0, [r7, #0]
1004c88e:	2240      	movs	r2, #64	; 0x40
1004c890:	3040      	adds	r0, #64	; 0x40
1004c892:	7801      	ldrb	r1, [r0, #0]
1004c894:	4311      	orrs	r1, r2
1004c896:	22f9      	movs	r2, #249	; 0xf9
1004c898:	4011      	ands	r1, r2
1004c89a:	7001      	strb	r1, [r0, #0]
1004c89c:	2000      	movs	r0, #0
1004c89e:	b005      	add	sp, #20
1004c8a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c8a2:	20fb      	movs	r0, #251	; 0xfb
1004c8a4:	e7d9      	b.n	1004c85a <HAL_Write_ConfigData+0x6a>
1004c8a6:	20fb      	movs	r0, #251	; 0xfb
1004c8a8:	e7e4      	b.n	1004c874 <HAL_Write_ConfigData+0x84>
1004c8aa:	2d01      	cmp	r5, #1
1004c8ac:	d004      	beq.n	1004c8b8 <HAL_Write_ConfigData+0xc8>
1004c8ae:	f7f5 f96d 	bl	10041b8c <data_length_extension_csr_ucfg>
1004c8b2:	2801      	cmp	r0, #1
1004c8b4:	d004      	beq.n	1004c8c0 <HAL_Write_ConfigData+0xd0>
1004c8b6:	e007      	b.n	1004c8c8 <HAL_Write_ConfigData+0xd8>
1004c8b8:	7810      	ldrb	r0, [r2, #0]
1004c8ba:	f00f f9c5 	bl	1005bc48 <SMP_sc_force_debug_key_usage>
1004c8be:	e7ee      	b.n	1004c89e <HAL_Write_ConfigData+0xae>
1004c8c0:	2cd1      	cmp	r4, #209	; 0xd1
1004c8c2:	d101      	bne.n	1004c8c8 <HAL_Write_ConfigData+0xd8>
1004c8c4:	2d08      	cmp	r5, #8
1004c8c6:	d001      	beq.n	1004c8cc <HAL_Write_ConfigData+0xdc>
1004c8c8:	2012      	movs	r0, #18
1004c8ca:	e7e8      	b.n	1004c89e <HAL_Write_ConfigData+0xae>
1004c8cc:	2202      	movs	r2, #2
1004c8ce:	4631      	mov	r1, r6
1004c8d0:	4668      	mov	r0, sp
1004c8d2:	f7f3 ff56 	bl	10040782 <Osal_MemCpy>
1004c8d6:	2202      	movs	r2, #2
1004c8d8:	1cb1      	adds	r1, r6, #2
1004c8da:	a801      	add	r0, sp, #4
1004c8dc:	f7f3 ff51 	bl	10040782 <Osal_MemCpy>
1004c8e0:	2202      	movs	r2, #2
1004c8e2:	1d31      	adds	r1, r6, #4
1004c8e4:	a802      	add	r0, sp, #8
1004c8e6:	f7f3 ff4c 	bl	10040782 <Osal_MemCpy>
1004c8ea:	2202      	movs	r2, #2
1004c8ec:	1db1      	adds	r1, r6, #6
1004c8ee:	a803      	add	r0, sp, #12
1004c8f0:	f7f3 ff47 	bl	10040782 <Osal_MemCpy>
1004c8f4:	4668      	mov	r0, sp
1004c8f6:	8983      	ldrh	r3, [r0, #12]
1004c8f8:	8902      	ldrh	r2, [r0, #8]
1004c8fa:	8881      	ldrh	r1, [r0, #4]
1004c8fc:	8800      	ldrh	r0, [r0, #0]
1004c8fe:	f7f5 f939 	bl	10041b74 <ll_write_supported_data_ucfg>
1004c902:	e7cc      	b.n	1004c89e <HAL_Write_ConfigData+0xae>
1004c904:	20000d64 	.word	0x20000d64
1004c908:	200002fc 	.word	0x200002fc

1004c90c <Hal_Get_Random_Number>:
1004c90c:	2100      	movs	r1, #0
1004c90e:	200b      	movs	r0, #11
1004c910:	0700      	lsls	r0, r0, #28
1004c912:	6802      	ldr	r2, [r0, #0]
1004c914:	0752      	lsls	r2, r2, #29
1004c916:	d50d      	bpl.n	1004c934 <Hal_Get_Random_Number+0x28>
1004c918:	6802      	ldr	r2, [r0, #0]
1004c91a:	2304      	movs	r3, #4
1004c91c:	439a      	bics	r2, r3
1004c91e:	6002      	str	r2, [r0, #0]
1004c920:	6802      	ldr	r2, [r0, #0]
1004c922:	2308      	movs	r3, #8
1004c924:	431a      	orrs	r2, r3
1004c926:	6002      	str	r2, [r0, #0]
1004c928:	e004      	b.n	1004c934 <Hal_Get_Random_Number+0x28>
1004c92a:	1c49      	adds	r1, r1, #1
1004c92c:	2905      	cmp	r1, #5
1004c92e:	dd01      	ble.n	1004c934 <Hal_Get_Random_Number+0x28>
1004c930:	2000      	movs	r0, #0
1004c932:	4770      	bx	lr
1004c934:	6842      	ldr	r2, [r0, #4]
1004c936:	0792      	lsls	r2, r2, #30
1004c938:	d5f7      	bpl.n	1004c92a <Hal_Get_Random_Number+0x1e>
1004c93a:	6841      	ldr	r1, [r0, #4]
1004c93c:	07c9      	lsls	r1, r1, #31
1004c93e:	d0fc      	beq.n	1004c93a <Hal_Get_Random_Number+0x2e>
1004c940:	6880      	ldr	r0, [r0, #8]
1004c942:	b280      	uxth	r0, r0
1004c944:	4770      	bx	lr

1004c946 <Hal_Get_Random_Number32>:
1004c946:	b510      	push	{r4, lr}
1004c948:	f7ff ffe0 	bl	1004c90c <Hal_Get_Random_Number>
1004c94c:	4604      	mov	r4, r0
1004c94e:	f7ff ffdd 	bl	1004c90c <Hal_Get_Random_Number>
1004c952:	0400      	lsls	r0, r0, #16
1004c954:	1820      	adds	r0, r4, r0
1004c956:	bd10      	pop	{r4, pc}

1004c958 <aci_hal_set_radio_activity_mask>:
1004c958:	4902      	ldr	r1, [pc, #8]	; (1004c964 <aci_hal_set_radio_activity_mask+0xc>)
1004c95a:	6809      	ldr	r1, [r1, #0]
1004c95c:	3168      	adds	r1, #104	; 0x68
1004c95e:	80c8      	strh	r0, [r1, #6]
1004c960:	2000      	movs	r0, #0
1004c962:	4770      	bx	lr
1004c964:	20000d64 	.word	0x20000d64

1004c968 <ble_HAL_Init>:
1004c968:	b510      	push	{r4, lr}
1004c96a:	4804      	ldr	r0, [pc, #16]	; (1004c97c <ble_HAL_Init+0x14>)
1004c96c:	4b04      	ldr	r3, [pc, #16]	; (1004c980 <ble_HAL_Init+0x18>)
1004c96e:	6800      	ldr	r0, [r0, #0]
1004c970:	2204      	movs	r2, #4
1004c972:	2100      	movs	r1, #0
1004c974:	18c0      	adds	r0, r0, r3
1004c976:	f7f3 ff08 	bl	1004078a <Osal_MemSet>
1004c97a:	bd10      	pop	{r4, pc}
1004c97c:	20000d64 	.word	0x20000d64
1004c980:	00000704 	.word	0x00000704

1004c984 <char_copy>:
1004c984:	e004      	b.n	1004c990 <char_copy+0xc>
1004c986:	7803      	ldrb	r3, [r0, #0]
1004c988:	700b      	strb	r3, [r1, #0]
1004c98a:	1c40      	adds	r0, r0, #1
1004c98c:	1c49      	adds	r1, r1, #1
1004c98e:	1e52      	subs	r2, r2, #1
1004c990:	2a00      	cmp	r2, #0
1004c992:	d1f8      	bne.n	1004c986 <char_copy+0x2>
1004c994:	4770      	bx	lr
	...

1004c998 <hal_radio_activity_state_callback_check>:
1004c998:	b53e      	push	{r1, r2, r3, r4, r5, lr}
1004c99a:	480b      	ldr	r0, [pc, #44]	; (1004c9c8 <hal_radio_activity_state_callback_check+0x30>)
1004c99c:	aa01      	add	r2, sp, #4
1004c99e:	6804      	ldr	r4, [r0, #0]
1004c9a0:	4669      	mov	r1, sp
1004c9a2:	a802      	add	r0, sp, #8
1004c9a4:	3468      	adds	r4, #104	; 0x68
1004c9a6:	f000 f81f 	bl	1004c9e8 <hal_read_radio_activity_state>
1004c9aa:	2800      	cmp	r0, #0
1004c9ac:	d00b      	beq.n	1004c9c6 <hal_radio_activity_state_callback_check+0x2e>
1004c9ae:	4668      	mov	r0, sp
1004c9b0:	7a00      	ldrb	r0, [r0, #8]
1004c9b2:	88e1      	ldrh	r1, [r4, #6]
1004c9b4:	2201      	movs	r2, #1
1004c9b6:	4082      	lsls	r2, r0
1004c9b8:	4211      	tst	r1, r2
1004c9ba:	d004      	beq.n	1004c9c6 <hal_radio_activity_state_callback_check+0x2e>
1004c9bc:	4669      	mov	r1, sp
1004c9be:	7809      	ldrb	r1, [r1, #0]
1004c9c0:	9a01      	ldr	r2, [sp, #4]
1004c9c2:	f7f8 fc19 	bl	100451f8 <aci_hal_end_of_radio_activity_event>
1004c9c6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1004c9c8:	20000d64 	.word	0x20000d64

1004c9cc <hal_radio_activity_state_init>:
1004c9cc:	4805      	ldr	r0, [pc, #20]	; (1004c9e4 <hal_radio_activity_state_init+0x18>)
1004c9ce:	2100      	movs	r1, #0
1004c9d0:	6800      	ldr	r0, [r0, #0]
1004c9d2:	3068      	adds	r0, #104	; 0x68
1004c9d4:	7101      	strb	r1, [r0, #4]
1004c9d6:	7141      	strb	r1, [r0, #5]
1004c9d8:	6802      	ldr	r2, [r0, #0]
1004c9da:	08d2      	lsrs	r2, r2, #3
1004c9dc:	00d2      	lsls	r2, r2, #3
1004c9de:	6002      	str	r2, [r0, #0]
1004c9e0:	80c1      	strh	r1, [r0, #6]
1004c9e2:	4770      	bx	lr
1004c9e4:	20000d64 	.word	0x20000d64

1004c9e8 <hal_read_radio_activity_state>:
1004c9e8:	b570      	push	{r4, r5, r6, lr}
1004c9ea:	4614      	mov	r4, r2
1004c9ec:	4a0d      	ldr	r2, [pc, #52]	; (1004ca24 <hal_read_radio_activity_state+0x3c>)
1004c9ee:	6813      	ldr	r3, [r2, #0]
1004c9f0:	b672      	cpsid	i
1004c9f2:	3368      	adds	r3, #104	; 0x68
1004c9f4:	791a      	ldrb	r2, [r3, #4]
1004c9f6:	2a00      	cmp	r2, #0
1004c9f8:	d001      	beq.n	1004c9fe <hal_read_radio_activity_state+0x16>
1004c9fa:	2501      	movs	r5, #1
1004c9fc:	e000      	b.n	1004ca00 <hal_read_radio_activity_state+0x18>
1004c9fe:	2500      	movs	r5, #0
1004ca00:	2200      	movs	r2, #0
1004ca02:	711a      	strb	r2, [r3, #4]
1004ca04:	795a      	ldrb	r2, [r3, #5]
1004ca06:	7002      	strb	r2, [r0, #0]
1004ca08:	7818      	ldrb	r0, [r3, #0]
1004ca0a:	0740      	lsls	r0, r0, #29
1004ca0c:	0f40      	lsrs	r0, r0, #29
1004ca0e:	7008      	strb	r0, [r1, #0]
1004ca10:	6818      	ldr	r0, [r3, #0]
1004ca12:	0140      	lsls	r0, r0, #5
1004ca14:	0a00      	lsrs	r0, r0, #8
1004ca16:	f000 ffef 	bl	1004d9f8 <Timer_sysTime32_convMachineTime>
1004ca1a:	6020      	str	r0, [r4, #0]
1004ca1c:	b662      	cpsie	i
1004ca1e:	4628      	mov	r0, r5
1004ca20:	bd70      	pop	{r4, r5, r6, pc}
1004ca22:	0000      	.short	0x0000
1004ca24:	20000d64 	.word	0x20000d64

1004ca28 <set_string>:
1004ca28:	e003      	b.n	1004ca32 <set_string+0xa>
1004ca2a:	7008      	strb	r0, [r1, #0]
1004ca2c:	0a00      	lsrs	r0, r0, #8
1004ca2e:	1c49      	adds	r1, r1, #1
1004ca30:	1e52      	subs	r2, r2, #1
1004ca32:	2a00      	cmp	r2, #0
1004ca34:	d1f9      	bne.n	1004ca2a <set_string+0x2>
1004ca36:	4770      	bx	lr

1004ca38 <Controller_Process_Q>:
1004ca38:	b510      	push	{r4, lr}
1004ca3a:	f7f4 ff25 	bl	10041888 <PRIV_u8OfflineProcessing_ucfg>
1004ca3e:	f7f5 f8b7 	bl	10041bb0 <PKA_Offline_Processing_ucfg>
1004ca42:	f7f5 f8a3 	bl	10041b8c <data_length_extension_csr_ucfg>
1004ca46:	2801      	cmp	r0, #1
1004ca48:	d101      	bne.n	1004ca4e <Controller_Process_Q+0x16>
1004ca4a:	f7f5 f88b 	bl	10041b64 <Data_Len_Update_Offline_Processing_ucfg>
1004ca4e:	f004 fe77 	bl	10051740 <Disconnection_Offline_Processing>
1004ca52:	bd10      	pop	{r4, pc}

1004ca54 <Get_Random_Addr>:
1004ca54:	b510      	push	{r4, lr}
1004ca56:	4904      	ldr	r1, [pc, #16]	; (1004ca68 <Get_Random_Addr+0x14>)
1004ca58:	4b04      	ldr	r3, [pc, #16]	; (1004ca6c <Get_Random_Addr+0x18>)
1004ca5a:	6809      	ldr	r1, [r1, #0]
1004ca5c:	2206      	movs	r2, #6
1004ca5e:	18c9      	adds	r1, r1, r3
1004ca60:	f7f3 fe8f 	bl	10040782 <Osal_MemCpy>
1004ca64:	bd10      	pop	{r4, pc}
1004ca66:	0000      	.short	0x0000
1004ca68:	20000d64 	.word	0x20000d64
1004ca6c:	000006ef 	.word	0x000006ef

1004ca70 <HCI_Init>:
1004ca70:	b570      	push	{r4, r5, r6, lr}
1004ca72:	4c1c      	ldr	r4, [pc, #112]	; (1004cae4 <HCI_Init+0x74>)
1004ca74:	211b      	movs	r1, #27
1004ca76:	6820      	ldr	r0, [r4, #0]
1004ca78:	0189      	lsls	r1, r1, #6
1004ca7a:	1841      	adds	r1, r0, r1
1004ca7c:	2600      	movs	r6, #0
1004ca7e:	760e      	strb	r6, [r1, #24]
1004ca80:	4b19      	ldr	r3, [pc, #100]	; (1004cae8 <HCI_Init+0x78>)
1004ca82:	764e      	strb	r6, [r1, #25]
1004ca84:	2206      	movs	r2, #6
1004ca86:	21ff      	movs	r1, #255	; 0xff
1004ca88:	18c0      	adds	r0, r0, r3
1004ca8a:	f7f3 fe7e 	bl	1004078a <Osal_MemSet>
1004ca8e:	2537      	movs	r5, #55	; 0x37
1004ca90:	6820      	ldr	r0, [r4, #0]
1004ca92:	016d      	lsls	r5, r5, #5
1004ca94:	1940      	adds	r0, r0, r5
1004ca96:	7006      	strb	r6, [r0, #0]
1004ca98:	2120      	movs	r1, #32
1004ca9a:	7041      	strb	r1, [r0, #1]
1004ca9c:	f7f5 f876 	bl	10041b8c <data_length_extension_csr_ucfg>
1004caa0:	2801      	cmp	r0, #1
1004caa2:	d01c      	beq.n	1004cade <HCI_Init+0x6e>
1004caa4:	201f      	movs	r0, #31
1004caa6:	6821      	ldr	r1, [r4, #0]
1004caa8:	4b0f      	ldr	r3, [pc, #60]	; (1004cae8 <HCI_Init+0x78>)
1004caaa:	1949      	adds	r1, r1, r5
1004caac:	7088      	strb	r0, [r1, #2]
1004caae:	6820      	ldr	r0, [r4, #0]
1004cab0:	3309      	adds	r3, #9
1004cab2:	2207      	movs	r2, #7
1004cab4:	2100      	movs	r1, #0
1004cab6:	18c0      	adds	r0, r0, r3
1004cab8:	f7f3 fe67 	bl	1004078a <Osal_MemSet>
1004cabc:	4b0a      	ldr	r3, [pc, #40]	; (1004cae8 <HCI_Init+0x78>)
1004cabe:	6820      	ldr	r0, [r4, #0]
1004cac0:	3310      	adds	r3, #16
1004cac2:	2205      	movs	r2, #5
1004cac4:	21ff      	movs	r1, #255	; 0xff
1004cac6:	18c0      	adds	r0, r0, r3
1004cac8:	f7f3 fe5f 	bl	1004078a <Osal_MemSet>
1004cacc:	23df      	movs	r3, #223	; 0xdf
1004cace:	6820      	ldr	r0, [r4, #0]
1004cad0:	00db      	lsls	r3, r3, #3
1004cad2:	22ff      	movs	r2, #255	; 0xff
1004cad4:	2100      	movs	r1, #0
1004cad6:	18c0      	adds	r0, r0, r3
1004cad8:	f010 f82d 	bl	1005cb36 <acl_list_init>
1004cadc:	bd70      	pop	{r4, r5, r6, pc}
1004cade:	205f      	movs	r0, #95	; 0x5f
1004cae0:	e7e1      	b.n	1004caa6 <HCI_Init+0x36>
1004cae2:	0000      	.short	0x0000
1004cae4:	20000d64 	.word	0x20000d64
1004cae8:	000006da 	.word	0x000006da

1004caec <PKA_Offline_Processing>:
1004caec:	b5f0      	push	{r4, r5, r6, r7, lr}
1004caee:	4d57      	ldr	r5, [pc, #348]	; (1004cc4c <PKA_Offline_Processing+0x160>)
1004caf0:	201b      	movs	r0, #27
1004caf2:	6829      	ldr	r1, [r5, #0]
1004caf4:	0180      	lsls	r0, r0, #6
1004caf6:	1808      	adds	r0, r1, r0
1004caf8:	7e00      	ldrb	r0, [r0, #24]
1004cafa:	b091      	sub	sp, #68	; 0x44
1004cafc:	0780      	lsls	r0, r0, #30
1004cafe:	d56f      	bpl.n	1004cbe0 <PKA_Offline_Processing+0xf4>
1004cb00:	f7f4 fc2c 	bl	1004135c <PKA_GetProcessStatus>
1004cb04:	2801      	cmp	r0, #1
1004cb06:	d16c      	bne.n	1004cbe2 <PKA_Offline_Processing+0xf6>
1004cb08:	2400      	movs	r4, #0
1004cb0a:	f007 fe83 	bl	10054814 <BLEPLAT_PKA_Get_Current_Operation>
1004cb0e:	4606      	mov	r6, r0
1004cb10:	f7f4 fc2a 	bl	10041368 <PKA_VerifyProcess>
1004cb14:	2801      	cmp	r0, #1
1004cb16:	d100      	bne.n	1004cb1a <PKA_Offline_Processing+0x2e>
1004cb18:	2403      	movs	r4, #3
1004cb1a:	0030      	movs	r0, r6
1004cb1c:	d07e      	beq.n	1004cc1c <PKA_Offline_Processing+0x130>
1004cb1e:	2737      	movs	r7, #55	; 0x37
1004cb20:	2602      	movs	r6, #2
1004cb22:	017f      	lsls	r7, r7, #5
1004cb24:	2801      	cmp	r0, #1
1004cb26:	d002      	beq.n	1004cb2e <PKA_Offline_Processing+0x42>
1004cb28:	2802      	cmp	r0, #2
1004cb2a:	d17c      	bne.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cb2c:	e03b      	b.n	1004cba6 <PKA_Offline_Processing+0xba>
1004cb2e:	4669      	mov	r1, sp
1004cb30:	2002      	movs	r0, #2
1004cb32:	f7f4 fc87 	bl	10041444 <PKA_GetData>
1004cb36:	2003      	movs	r0, #3
1004cb38:	a908      	add	r1, sp, #32
1004cb3a:	f7f4 fc83 	bl	10041444 <PKA_GetData>
1004cb3e:	2c00      	cmp	r4, #0
1004cb40:	d106      	bne.n	1004cb50 <PKA_Offline_Processing+0x64>
1004cb42:	2179      	movs	r1, #121	; 0x79
1004cb44:	6828      	ldr	r0, [r5, #0]
1004cb46:	0109      	lsls	r1, r1, #4
1004cb48:	1841      	adds	r1, r0, r1
1004cb4a:	2001      	movs	r0, #1
1004cb4c:	f7f4 fc7a 	bl	10041444 <PKA_GetData>
1004cb50:	6828      	ldr	r0, [r5, #0]
1004cb52:	21a4      	movs	r1, #164	; 0xa4
1004cb54:	5c09      	ldrb	r1, [r1, r0]
1004cb56:	07c9      	lsls	r1, r1, #31
1004cb58:	d001      	beq.n	1004cb5e <PKA_Offline_Processing+0x72>
1004cb5a:	2100      	movs	r1, #0
1004cb5c:	e000      	b.n	1004cb60 <PKA_Offline_Processing+0x74>
1004cb5e:	2110      	movs	r1, #16
1004cb60:	430e      	orrs	r6, r1
1004cb62:	4669      	mov	r1, sp
1004cb64:	2311      	movs	r3, #17
1004cb66:	9110      	str	r1, [sp, #64]	; 0x40
1004cb68:	06f1      	lsls	r1, r6, #27
1004cb6a:	d503      	bpl.n	1004cb74 <PKA_Offline_Processing+0x88>
1004cb6c:	2209      	movs	r2, #9
1004cb6e:	21bf      	movs	r1, #191	; 0xbf
1004cb70:	400e      	ands	r6, r1
1004cb72:	e007      	b.n	1004cb84 <PKA_Offline_Processing+0x98>
1004cb74:	19c1      	adds	r1, r0, r7
1004cb76:	784a      	ldrb	r2, [r1, #1]
1004cb78:	0692      	lsls	r2, r2, #26
1004cb7a:	d554      	bpl.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cb7c:	7889      	ldrb	r1, [r1, #2]
1004cb7e:	0609      	lsls	r1, r1, #24
1004cb80:	d551      	bpl.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cb82:	2207      	movs	r2, #7
1004cb84:	0731      	lsls	r1, r6, #28
1004cb86:	0e89      	lsrs	r1, r1, #26
1004cb88:	1809      	adds	r1, r1, r0
1004cb8a:	2001      	movs	r0, #1
1004cb8c:	02c0      	lsls	r0, r0, #11
1004cb8e:	1808      	adds	r0, r1, r0
1004cb90:	6940      	ldr	r0, [r0, #20]
1004cb92:	4631      	mov	r1, r6
1004cb94:	f00f f9aa 	bl	1005beec <aci_event_fifo_push_header>
1004cb98:	0007      	movs	r7, r0
1004cb9a:	d044      	beq.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cb9c:	1d38      	adds	r0, r7, #4
1004cb9e:	713c      	strb	r4, [r7, #4]
1004cba0:	2240      	movs	r2, #64	; 0x40
1004cba2:	9910      	ldr	r1, [sp, #64]	; 0x40
1004cba4:	e036      	b.n	1004cc14 <PKA_Offline_Processing+0x128>
1004cba6:	4669      	mov	r1, sp
1004cba8:	2002      	movs	r0, #2
1004cbaa:	f7f4 fc4b 	bl	10041444 <PKA_GetData>
1004cbae:	2c00      	cmp	r4, #0
1004cbb0:	d004      	beq.n	1004cbbc <PKA_Offline_Processing+0xd0>
1004cbb2:	2220      	movs	r2, #32
1004cbb4:	21ff      	movs	r1, #255	; 0xff
1004cbb6:	4668      	mov	r0, sp
1004cbb8:	f7f3 fde7 	bl	1004078a <Osal_MemSet>
1004cbbc:	6828      	ldr	r0, [r5, #0]
1004cbbe:	21a4      	movs	r1, #164	; 0xa4
1004cbc0:	5c09      	ldrb	r1, [r1, r0]
1004cbc2:	07c9      	lsls	r1, r1, #31
1004cbc4:	d001      	beq.n	1004cbca <PKA_Offline_Processing+0xde>
1004cbc6:	2100      	movs	r1, #0
1004cbc8:	e000      	b.n	1004cbcc <PKA_Offline_Processing+0xe0>
1004cbca:	2110      	movs	r1, #16
1004cbcc:	430e      	orrs	r6, r1
1004cbce:	4669      	mov	r1, sp
1004cbd0:	2309      	movs	r3, #9
1004cbd2:	9108      	str	r1, [sp, #32]
1004cbd4:	06f1      	lsls	r1, r6, #27
1004cbd6:	d505      	bpl.n	1004cbe4 <PKA_Offline_Processing+0xf8>
1004cbd8:	220a      	movs	r2, #10
1004cbda:	21bf      	movs	r1, #191	; 0xbf
1004cbdc:	400e      	ands	r6, r1
1004cbde:	e009      	b.n	1004cbf4 <PKA_Offline_Processing+0x108>
1004cbe0:	e029      	b.n	1004cc36 <PKA_Offline_Processing+0x14a>
1004cbe2:	e030      	b.n	1004cc46 <PKA_Offline_Processing+0x15a>
1004cbe4:	19c1      	adds	r1, r0, r7
1004cbe6:	784a      	ldrb	r2, [r1, #1]
1004cbe8:	0692      	lsls	r2, r2, #26
1004cbea:	d51c      	bpl.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cbec:	78c9      	ldrb	r1, [r1, #3]
1004cbee:	07c9      	lsls	r1, r1, #31
1004cbf0:	d019      	beq.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cbf2:	2208      	movs	r2, #8
1004cbf4:	0731      	lsls	r1, r6, #28
1004cbf6:	0e89      	lsrs	r1, r1, #26
1004cbf8:	1809      	adds	r1, r1, r0
1004cbfa:	2001      	movs	r0, #1
1004cbfc:	02c0      	lsls	r0, r0, #11
1004cbfe:	1808      	adds	r0, r1, r0
1004cc00:	6940      	ldr	r0, [r0, #20]
1004cc02:	4631      	mov	r1, r6
1004cc04:	f00f f972 	bl	1005beec <aci_event_fifo_push_header>
1004cc08:	0007      	movs	r7, r0
1004cc0a:	d00c      	beq.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cc0c:	713c      	strb	r4, [r7, #4]
1004cc0e:	1d38      	adds	r0, r7, #4
1004cc10:	9908      	ldr	r1, [sp, #32]
1004cc12:	2220      	movs	r2, #32
1004cc14:	1c40      	adds	r0, r0, #1
1004cc16:	f7f3 fdb4 	bl	10040782 <Osal_MemCpy>
1004cc1a:	e000      	b.n	1004cc1e <PKA_Offline_Processing+0x132>
1004cc1c:	e003      	b.n	1004cc26 <PKA_Offline_Processing+0x13a>
1004cc1e:	4639      	mov	r1, r7
1004cc20:	4630      	mov	r0, r6
1004cc22:	f00f f94f 	bl	1005bec4 <aci_event_fifo_push>
1004cc26:	201b      	movs	r0, #27
1004cc28:	6829      	ldr	r1, [r5, #0]
1004cc2a:	0180      	lsls	r0, r0, #6
1004cc2c:	1808      	adds	r0, r1, r0
1004cc2e:	7e01      	ldrb	r1, [r0, #24]
1004cc30:	22fd      	movs	r2, #253	; 0xfd
1004cc32:	4011      	ands	r1, r2
1004cc34:	7601      	strb	r1, [r0, #24]
1004cc36:	b672      	cpsid	i
1004cc38:	6828      	ldr	r0, [r5, #0]
1004cc3a:	2280      	movs	r2, #128	; 0x80
1004cc3c:	3040      	adds	r0, #64	; 0x40
1004cc3e:	79c1      	ldrb	r1, [r0, #7]
1004cc40:	4311      	orrs	r1, r2
1004cc42:	71c1      	strb	r1, [r0, #7]
1004cc44:	b662      	cpsie	i
1004cc46:	b011      	add	sp, #68	; 0x44
1004cc48:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004cc4a:	0000      	.short	0x0000
1004cc4c:	20000d64 	.word	0x20000d64

1004cc50 <aci_hal_get_anchor_period>:
1004cc50:	b510      	push	{r4, lr}
1004cc52:	f006 fe73 	bl	1005393c <LL_Get_Anchor_Interval>
1004cc56:	bd10      	pop	{r4, pc}

1004cc58 <hci_acl_Process_Q>:
1004cc58:	b570      	push	{r4, r5, r6, lr}
1004cc5a:	b672      	cpsid	i
1004cc5c:	4d18      	ldr	r5, [pc, #96]	; (1004ccc0 <hci_acl_Process_Q+0x68>)
1004cc5e:	2340      	movs	r3, #64	; 0x40
1004cc60:	6828      	ldr	r0, [r5, #0]
1004cc62:	4601      	mov	r1, r0
1004cc64:	3040      	adds	r0, #64	; 0x40
1004cc66:	79c2      	ldrb	r2, [r0, #7]
1004cc68:	431a      	orrs	r2, r3
1004cc6a:	71c2      	strb	r2, [r0, #7]
1004cc6c:	b662      	cpsie	i
1004cc6e:	26df      	movs	r6, #223	; 0xdf
1004cc70:	00f6      	lsls	r6, r6, #3
1004cc72:	1988      	adds	r0, r1, r6
1004cc74:	f00f ff90 	bl	1005cb98 <acl_list_is_empty>
1004cc78:	2800      	cmp	r0, #0
1004cc7a:	d112      	bne.n	1004cca2 <hci_acl_Process_Q+0x4a>
1004cc7c:	6828      	ldr	r0, [r5, #0]
1004cc7e:	1980      	adds	r0, r0, r6
1004cc80:	f00f ff44 	bl	1005cb0c <acl_list_first>
1004cc84:	4604      	mov	r4, r0
1004cc86:	e00a      	b.n	1004cc9e <hci_acl_Process_Q+0x46>
1004cc88:	4620      	mov	r0, r4
1004cc8a:	f00f fe81 	bl	1005c990 <Acl_Transmit_Data>
1004cc8e:	2800      	cmp	r0, #0
1004cc90:	d107      	bne.n	1004cca2 <hci_acl_Process_Q+0x4a>
1004cc92:	6828      	ldr	r0, [r5, #0]
1004cc94:	4621      	mov	r1, r4
1004cc96:	1980      	adds	r0, r0, r6
1004cc98:	f00f ff85 	bl	1005cba6 <acl_list_remove>
1004cc9c:	6824      	ldr	r4, [r4, #0]
1004cc9e:	2c00      	cmp	r4, #0
1004cca0:	d1f2      	bne.n	1004cc88 <hci_acl_Process_Q+0x30>
1004cca2:	6828      	ldr	r0, [r5, #0]
1004cca4:	1980      	adds	r0, r0, r6
1004cca6:	f00f ff77 	bl	1005cb98 <acl_list_is_empty>
1004ccaa:	2801      	cmp	r0, #1
1004ccac:	d007      	beq.n	1004ccbe <hci_acl_Process_Q+0x66>
1004ccae:	b672      	cpsid	i
1004ccb0:	6828      	ldr	r0, [r5, #0]
1004ccb2:	22bf      	movs	r2, #191	; 0xbf
1004ccb4:	3040      	adds	r0, #64	; 0x40
1004ccb6:	79c1      	ldrb	r1, [r0, #7]
1004ccb8:	4011      	ands	r1, r2
1004ccba:	71c1      	strb	r1, [r0, #7]
1004ccbc:	b662      	cpsie	i
1004ccbe:	bd70      	pop	{r4, r5, r6, pc}
1004ccc0:	20000d64 	.word	0x20000d64

1004ccc4 <hci_disconnect>:
1004ccc4:	b510      	push	{r4, lr}
1004ccc6:	f004 fda5 	bl	10051814 <LL_Disconnect_Link>
1004ccca:	bd10      	pop	{r4, pc}

1004cccc <hci_le_add_device_to_white_list>:
1004cccc:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004ccce:	4604      	mov	r4, r0
1004ccd0:	460d      	mov	r5, r1
1004ccd2:	2801      	cmp	r0, #1
1004ccd4:	d003      	beq.n	1004ccde <hci_le_add_device_to_white_list+0x12>
1004ccd6:	2c00      	cmp	r4, #0
1004ccd8:	d001      	beq.n	1004ccde <hci_le_add_device_to_white_list+0x12>
1004ccda:	2012      	movs	r0, #18
1004ccdc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004ccde:	4608      	mov	r0, r1
1004cce0:	f7f3 fbb2 	bl	10040448 <__aeabi_uread4>
1004cce4:	0200      	lsls	r0, r0, #8
1004cce6:	4320      	orrs	r0, r4
1004cce8:	9000      	str	r0, [sp, #0]
1004ccea:	1ce8      	adds	r0, r5, #3
1004ccec:	f7f3 fbac 	bl	10040448 <__aeabi_uread4>
1004ccf0:	0200      	lsls	r0, r0, #8
1004ccf2:	0a00      	lsrs	r0, r0, #8
1004ccf4:	9001      	str	r0, [sp, #4]
1004ccf6:	4668      	mov	r0, sp
1004ccf8:	f003 fa96 	bl	10050228 <LL_LE_Add_Device_To_White_List>
1004ccfc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1004ccfe <hci_le_clear_white_list>:
1004ccfe:	b510      	push	{r4, lr}
1004cd00:	f003 fb20 	bl	10050344 <LL_LE_Clear_White_List>
1004cd04:	bd10      	pop	{r4, pc}

1004cd06 <hci_le_connection_update_api>:
1004cd06:	b5f0      	push	{r4, r5, r6, r7, lr}
1004cd08:	b089      	sub	sp, #36	; 0x24
1004cd0a:	af0e      	add	r7, sp, #56	; 0x38
1004cd0c:	cf70      	ldmia	r7!, {r4, r5, r6}
1004cd0e:	af04      	add	r7, sp, #16
1004cd10:	9703      	str	r7, [sp, #12]
1004cd12:	466f      	mov	r7, sp
1004cd14:	c770      	stmia	r7!, {r4, r5, r6}
1004cd16:	f000 f807 	bl	1004cd28 <hci_le_connection_update_param_check>
1004cd1a:	2800      	cmp	r0, #0
1004cd1c:	d102      	bne.n	1004cd24 <hci_le_connection_update_api+0x1e>
1004cd1e:	a804      	add	r0, sp, #16
1004cd20:	f005 faba 	bl	10052298 <LL_Start_Connection_Update>
1004cd24:	b009      	add	sp, #36	; 0x24
1004cd26:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004cd28 <hci_le_connection_update_param_check>:
1004cd28:	b5f0      	push	{r4, r5, r6, r7, lr}
1004cd2a:	4606      	mov	r6, r0
1004cd2c:	9c08      	ldr	r4, [sp, #32]
1004cd2e:	4f12      	ldr	r7, [pc, #72]	; (1004cd78 <hci_le_connection_update_param_check+0x50>)
1004cd30:	2012      	movs	r0, #18
1004cd32:	9d05      	ldr	r5, [sp, #20]
1004cd34:	8026      	strh	r6, [r4, #0]
1004cd36:	42be      	cmp	r6, r7
1004cd38:	d901      	bls.n	1004cd3e <hci_le_connection_update_param_check+0x16>
1004cd3a:	2002      	movs	r0, #2
1004cd3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004cd3e:	4e0f      	ldr	r6, [pc, #60]	; (1004cd7c <hci_le_connection_update_param_check+0x54>)
1004cd40:	1f8f      	subs	r7, r1, #6
1004cd42:	8061      	strh	r1, [r4, #2]
1004cd44:	42b7      	cmp	r7, r6
1004cd46:	d2f9      	bcs.n	1004cd3c <hci_le_connection_update_param_check+0x14>
1004cd48:	1f97      	subs	r7, r2, #6
1004cd4a:	80a2      	strh	r2, [r4, #4]
1004cd4c:	42b7      	cmp	r7, r6
1004cd4e:	d2f5      	bcs.n	1004cd3c <hci_le_connection_update_param_check+0x14>
1004cd50:	428a      	cmp	r2, r1
1004cd52:	d3f3      	bcc.n	1004cd3c <hci_le_connection_update_param_check+0x14>
1004cd54:	21ff      	movs	r1, #255	; 0xff
1004cd56:	31f4      	adds	r1, #244	; 0xf4
1004cd58:	80e3      	strh	r3, [r4, #6]
1004cd5a:	428b      	cmp	r3, r1
1004cd5c:	d8ee      	bhi.n	1004cd3c <hci_le_connection_update_param_check+0x14>
1004cd5e:	8125      	strh	r5, [r4, #8]
1004cd60:	1f31      	subs	r1, r6, #4
1004cd62:	3d0a      	subs	r5, #10
1004cd64:	428d      	cmp	r5, r1
1004cd66:	d2e9      	bcs.n	1004cd3c <hci_le_connection_update_param_check+0x14>
1004cd68:	9906      	ldr	r1, [sp, #24]
1004cd6a:	8161      	strh	r1, [r4, #10]
1004cd6c:	9a07      	ldr	r2, [sp, #28]
1004cd6e:	81a2      	strh	r2, [r4, #12]
1004cd70:	428a      	cmp	r2, r1
1004cd72:	d3e3      	bcc.n	1004cd3c <hci_le_connection_update_param_check+0x14>
1004cd74:	2000      	movs	r0, #0
1004cd76:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004cd78:	00000eff 	.word	0x00000eff
1004cd7c:	00000c7b 	.word	0x00000c7b

1004cd80 <hci_le_create_connection_api>:
1004cd80:	b5f0      	push	{r4, r5, r6, r7, lr}
1004cd82:	b08d      	sub	sp, #52	; 0x34
1004cd84:	4684      	mov	ip, r0
1004cd86:	461d      	mov	r5, r3
1004cd88:	4616      	mov	r6, r2
1004cd8a:	a816      	add	r0, sp, #88	; 0x58
1004cd8c:	c88d      	ldmia	r0, {r0, r2, r3, r7}
1004cd8e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
1004cd90:	9704      	str	r7, [sp, #16]
1004cd92:	af01      	add	r7, sp, #4
1004cd94:	c70d      	stmia	r7!, {r0, r2, r3}
1004cd96:	9815      	ldr	r0, [sp, #84]	; 0x54
1004cd98:	9000      	str	r0, [sp, #0]
1004cd9a:	460a      	mov	r2, r1
1004cd9c:	4661      	mov	r1, ip
1004cd9e:	a805      	add	r0, sp, #20
1004cda0:	9b14      	ldr	r3, [sp, #80]	; 0x50
1004cda2:	f000 faa9 	bl	1004d2f8 <hci_load_connParams>
1004cda6:	2800      	cmp	r0, #0
1004cda8:	d106      	bne.n	1004cdb8 <hci_le_create_connection_api+0x38>
1004cdaa:	a808      	add	r0, sp, #32
1004cdac:	7106      	strb	r6, [r0, #4]
1004cdae:	2e00      	cmp	r6, #0
1004cdb0:	d004      	beq.n	1004cdbc <hci_le_create_connection_api+0x3c>
1004cdb2:	2e01      	cmp	r6, #1
1004cdb4:	d002      	beq.n	1004cdbc <hci_le_create_connection_api+0x3c>
1004cdb6:	2012      	movs	r0, #18
1004cdb8:	b00d      	add	sp, #52	; 0x34
1004cdba:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004cdbc:	7145      	strb	r5, [r0, #5]
1004cdbe:	2d01      	cmp	r5, #1
1004cdc0:	d005      	beq.n	1004cdce <hci_le_create_connection_api+0x4e>
1004cdc2:	2d00      	cmp	r5, #0
1004cdc4:	d003      	beq.n	1004cdce <hci_le_create_connection_api+0x4e>
1004cdc6:	2d02      	cmp	r5, #2
1004cdc8:	d001      	beq.n	1004cdce <hci_le_create_connection_api+0x4e>
1004cdca:	2d03      	cmp	r5, #3
1004cdcc:	d1f3      	bne.n	1004cdb6 <hci_le_create_connection_api+0x36>
1004cdce:	a809      	add	r0, sp, #36	; 0x24
1004cdd0:	2206      	movs	r2, #6
1004cdd2:	3002      	adds	r0, #2
1004cdd4:	9912      	ldr	r1, [sp, #72]	; 0x48
1004cdd6:	f7f3 fcd4 	bl	10040782 <Osal_MemCpy>
1004cdda:	a808      	add	r0, sp, #32
1004cddc:	7304      	strb	r4, [r0, #12]
1004cdde:	b2e0      	uxtb	r0, r4
1004cde0:	2801      	cmp	r0, #1
1004cde2:	d006      	beq.n	1004cdf2 <hci_le_create_connection_api+0x72>
1004cde4:	2c00      	cmp	r4, #0
1004cde6:	d010      	beq.n	1004ce0a <hci_le_create_connection_api+0x8a>
1004cde8:	2c02      	cmp	r4, #2
1004cdea:	d00e      	beq.n	1004ce0a <hci_le_create_connection_api+0x8a>
1004cdec:	2c03      	cmp	r4, #3
1004cdee:	d1e2      	bne.n	1004cdb6 <hci_le_create_connection_api+0x36>
1004cdf0:	e003      	b.n	1004cdfa <hci_le_create_connection_api+0x7a>
1004cdf2:	2c01      	cmp	r4, #1
1004cdf4:	d001      	beq.n	1004cdfa <hci_le_create_connection_api+0x7a>
1004cdf6:	2c03      	cmp	r4, #3
1004cdf8:	d107      	bne.n	1004ce0a <hci_le_create_connection_api+0x8a>
1004cdfa:	4668      	mov	r0, sp
1004cdfc:	f7ff fe2a 	bl	1004ca54 <Get_Random_Addr>
1004ce00:	4668      	mov	r0, sp
1004ce02:	f009 f8da 	bl	10055fba <Is_Address_Initialized>
1004ce06:	2800      	cmp	r0, #0
1004ce08:	d0d5      	beq.n	1004cdb6 <hci_le_create_connection_api+0x36>
1004ce0a:	a805      	add	r0, sp, #20
1004ce0c:	f004 ffd2 	bl	10051db4 <LL_Create_Connection>
1004ce10:	e7d2      	b.n	1004cdb8 <hci_le_create_connection_api+0x38>

1004ce12 <hci_le_create_connection_cancel_api>:
1004ce12:	b510      	push	{r4, lr}
1004ce14:	f005 f906 	bl	10052024 <LL_Create_Connection_Cancel>
1004ce18:	bd10      	pop	{r4, pc}

1004ce1a <hci_le_encrypt>:
1004ce1a:	b510      	push	{r4, lr}
1004ce1c:	2300      	movs	r3, #0
1004ce1e:	f7f4 fd57 	bl	100418d0 <LL_Encrypt_Plain_Data_ucfg>
1004ce22:	bd10      	pop	{r4, pc}

1004ce24 <hci_le_generate_dhkey_api>:
1004ce24:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1004ce26:	4c1d      	ldr	r4, [pc, #116]	; (1004ce9c <hci_le_generate_dhkey_api+0x78>)
1004ce28:	251b      	movs	r5, #27
1004ce2a:	6820      	ldr	r0, [r4, #0]
1004ce2c:	01ad      	lsls	r5, r5, #6
1004ce2e:	1941      	adds	r1, r0, r5
1004ce30:	7e09      	ldrb	r1, [r1, #24]
1004ce32:	2600      	movs	r6, #0
1004ce34:	b090      	sub	sp, #64	; 0x40
1004ce36:	0789      	lsls	r1, r1, #30
1004ce38:	d501      	bpl.n	1004ce3e <hci_le_generate_dhkey_api+0x1a>
1004ce3a:	263a      	movs	r6, #58	; 0x3a
1004ce3c:	e02b      	b.n	1004ce96 <hci_le_generate_dhkey_api+0x72>
1004ce3e:	2779      	movs	r7, #121	; 0x79
1004ce40:	013f      	lsls	r7, r7, #4
1004ce42:	19c2      	adds	r2, r0, r7
1004ce44:	2120      	movs	r1, #32
1004ce46:	2000      	movs	r0, #0
1004ce48:	f00e ff7f 	bl	1005bd4a <is_Buffer_All_Set_To>
1004ce4c:	2800      	cmp	r0, #0
1004ce4e:	d001      	beq.n	1004ce54 <hci_le_generate_dhkey_api+0x30>
1004ce50:	261f      	movs	r6, #31
1004ce52:	e020      	b.n	1004ce96 <hci_le_generate_dhkey_api+0x72>
1004ce54:	2240      	movs	r2, #64	; 0x40
1004ce56:	4668      	mov	r0, sp
1004ce58:	9910      	ldr	r1, [sp, #64]	; 0x40
1004ce5a:	f7f3 fc92 	bl	10040782 <Osal_MemCpy>
1004ce5e:	6820      	ldr	r0, [r4, #0]
1004ce60:	2302      	movs	r3, #2
1004ce62:	1941      	adds	r1, r0, r5
1004ce64:	7e0a      	ldrb	r2, [r1, #24]
1004ce66:	19c0      	adds	r0, r0, r7
1004ce68:	431a      	orrs	r2, r3
1004ce6a:	760a      	strb	r2, [r1, #24]
1004ce6c:	4669      	mov	r1, sp
1004ce6e:	f007 fcdb 	bl	10054828 <BLEPLAT_PKA_Start_P256_DHKey_Generation>
1004ce72:	2800      	cmp	r0, #0
1004ce74:	d007      	beq.n	1004ce86 <hci_le_generate_dhkey_api+0x62>
1004ce76:	6820      	ldr	r0, [r4, #0]
1004ce78:	2612      	movs	r6, #18
1004ce7a:	1940      	adds	r0, r0, r5
1004ce7c:	7e01      	ldrb	r1, [r0, #24]
1004ce7e:	22fd      	movs	r2, #253	; 0xfd
1004ce80:	4011      	ands	r1, r2
1004ce82:	7601      	strb	r1, [r0, #24]
1004ce84:	e007      	b.n	1004ce96 <hci_le_generate_dhkey_api+0x72>
1004ce86:	b672      	cpsid	i
1004ce88:	6820      	ldr	r0, [r4, #0]
1004ce8a:	3040      	adds	r0, #64	; 0x40
1004ce8c:	79c1      	ldrb	r1, [r0, #7]
1004ce8e:	0649      	lsls	r1, r1, #25
1004ce90:	0e49      	lsrs	r1, r1, #25
1004ce92:	71c1      	strb	r1, [r0, #7]
1004ce94:	b662      	cpsie	i
1004ce96:	4630      	mov	r0, r6
1004ce98:	b011      	add	sp, #68	; 0x44
1004ce9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ce9c:	20000d64 	.word	0x20000d64

1004cea0 <hci_le_long_term_key_request_reply>:
1004cea0:	460a      	mov	r2, r1
1004cea2:	b510      	push	{r4, lr}
1004cea4:	4601      	mov	r1, r0
1004cea6:	2000      	movs	r0, #0
1004cea8:	f006 f90c 	bl	100530c4 <LL_Set_LTK>
1004ceac:	bd10      	pop	{r4, pc}

1004ceae <hci_le_long_term_key_requested_negative_reply>:
1004ceae:	b510      	push	{r4, lr}
1004ceb0:	4601      	mov	r1, r0
1004ceb2:	2200      	movs	r2, #0
1004ceb4:	2041      	movs	r0, #65	; 0x41
1004ceb6:	f006 f905 	bl	100530c4 <LL_Set_LTK>
1004ceba:	bd10      	pop	{r4, pc}

1004cebc <hci_le_rand>:
1004cebc:	b510      	push	{r4, lr}
1004cebe:	f00a f8bd 	bl	1005703c <LL_Get_Random_data>
1004cec2:	bd10      	pop	{r4, pc}

1004cec4 <hci_le_read_advertising_channel_tx_power>:
1004cec4:	b510      	push	{r4, lr}
1004cec6:	f00a f8a1 	bl	1005700c <LL_Get_Adv_Tx_Power_Level>
1004ceca:	bd10      	pop	{r4, pc}

1004cecc <hci_le_read_buffer_size>:
1004cecc:	b510      	push	{r4, lr}
1004cece:	460c      	mov	r4, r1
1004ced0:	21fb      	movs	r1, #251	; 0xfb
1004ced2:	8001      	strh	r1, [r0, #0]
1004ced4:	f7f4 fe5a 	bl	10041b8c <data_length_extension_csr_ucfg>
1004ced8:	2801      	cmp	r0, #1
1004ceda:	d00e      	beq.n	1004cefa <hci_le_read_buffer_size+0x2e>
1004cedc:	201b      	movs	r0, #27
1004cede:	301f      	adds	r0, #31
1004cee0:	0940      	lsrs	r0, r0, #5
1004cee2:	0041      	lsls	r1, r0, #1
1004cee4:	1841      	adds	r1, r0, r1
1004cee6:	4806      	ldr	r0, [pc, #24]	; (1004cf00 <hci_le_read_buffer_size+0x34>)
1004cee8:	7840      	ldrb	r0, [r0, #1]
1004ceea:	1a40      	subs	r0, r0, r1
1004ceec:	2109      	movs	r1, #9
1004ceee:	1ec0      	subs	r0, r0, #3
1004cef0:	f7f3 f9ba 	bl	10040268 <__aeabi_uidivmod>
1004cef4:	7020      	strb	r0, [r4, #0]
1004cef6:	2000      	movs	r0, #0
1004cef8:	bd10      	pop	{r4, pc}
1004cefa:	20fb      	movs	r0, #251	; 0xfb
1004cefc:	e7ef      	b.n	1004cede <hci_le_read_buffer_size+0x12>
1004cefe:	0000      	.short	0x0000
1004cf00:	200002fc 	.word	0x200002fc

1004cf04 <hci_le_read_channel_map>:
1004cf04:	b510      	push	{r4, lr}
1004cf06:	f009 fae3 	bl	100564d0 <LL_Get_Channel_Map>
1004cf0a:	bd10      	pop	{r4, pc}

1004cf0c <hci_le_read_local_p256_public_key_api>:
1004cf0c:	b510      	push	{r4, lr}
1004cf0e:	480d      	ldr	r0, [pc, #52]	; (1004cf44 <hci_le_read_local_p256_public_key_api+0x38>)
1004cf10:	211b      	movs	r1, #27
1004cf12:	6800      	ldr	r0, [r0, #0]
1004cf14:	0189      	lsls	r1, r1, #6
1004cf16:	1841      	adds	r1, r0, r1
1004cf18:	7e0a      	ldrb	r2, [r1, #24]
1004cf1a:	2400      	movs	r4, #0
1004cf1c:	0793      	lsls	r3, r2, #30
1004cf1e:	d40d      	bmi.n	1004cf3c <hci_le_read_local_p256_public_key_api+0x30>
1004cf20:	2302      	movs	r3, #2
1004cf22:	431a      	orrs	r2, r3
1004cf24:	760a      	strb	r2, [r1, #24]
1004cf26:	b672      	cpsid	i
1004cf28:	3040      	adds	r0, #64	; 0x40
1004cf2a:	79c1      	ldrb	r1, [r0, #7]
1004cf2c:	0649      	lsls	r1, r1, #25
1004cf2e:	0e49      	lsrs	r1, r1, #25
1004cf30:	71c1      	strb	r1, [r0, #7]
1004cf32:	b662      	cpsie	i
1004cf34:	f007 fca0 	bl	10054878 <BLEPLAT_PKA_Start_P256_Public_Key_Generation>
1004cf38:	2800      	cmp	r0, #0
1004cf3a:	d000      	beq.n	1004cf3e <hci_le_read_local_p256_public_key_api+0x32>
1004cf3c:	243a      	movs	r4, #58	; 0x3a
1004cf3e:	4620      	mov	r0, r4
1004cf40:	bd10      	pop	{r4, pc}
1004cf42:	0000      	.short	0x0000
1004cf44:	20000d64 	.word	0x20000d64

1004cf48 <hci_le_read_local_supported_features>:
1004cf48:	b510      	push	{r4, lr}
1004cf4a:	f004 fca3 	bl	10051894 <LL_Get_Supported_Features>
1004cf4e:	2000      	movs	r0, #0
1004cf50:	bd10      	pop	{r4, pc}

1004cf52 <hci_le_read_maximum_data_length_api>:
1004cf52:	b510      	push	{r4, lr}
1004cf54:	f004 fc8a 	bl	1005186c <LL_Get_Maximum_Data_Length>
1004cf58:	bd10      	pop	{r4, pc}
	...

1004cf5c <hci_le_read_remote_used_features>:
1004cf5c:	4904      	ldr	r1, [pc, #16]	; (1004cf70 <hci_le_read_remote_used_features+0x14>)
1004cf5e:	b510      	push	{r4, lr}
1004cf60:	4288      	cmp	r0, r1
1004cf62:	d901      	bls.n	1004cf68 <hci_le_read_remote_used_features+0xc>
1004cf64:	2002      	movs	r0, #2
1004cf66:	bd10      	pop	{r4, pc}
1004cf68:	f009 fee8 	bl	10056d3c <LL_Read_Remote_Used_Features>
1004cf6c:	bd10      	pop	{r4, pc}
1004cf6e:	0000      	.short	0x0000
1004cf70:	00000eff 	.word	0x00000eff

1004cf74 <hci_le_read_suggested_default_data_length_api>:
1004cf74:	b510      	push	{r4, lr}
1004cf76:	f004 fc6b 	bl	10051850 <LL_Get_Default_Data_Length>
1004cf7a:	bd10      	pop	{r4, pc}

1004cf7c <hci_le_read_supported_states>:
1004cf7c:	b510      	push	{r4, lr}
1004cf7e:	f00a f86b 	bl	10057058 <LL_Get_Supported_States>
1004cf82:	2000      	movs	r0, #0
1004cf84:	bd10      	pop	{r4, pc}

1004cf86 <hci_le_read_white_list_size>:
1004cf86:	b510      	push	{r4, lr}
1004cf88:	4604      	mov	r4, r0
1004cf8a:	f003 fa1f 	bl	100503cc <LL_LE_Read_White_List_Size>
1004cf8e:	7020      	strb	r0, [r4, #0]
1004cf90:	2000      	movs	r0, #0
1004cf92:	bd10      	pop	{r4, pc}

1004cf94 <hci_le_receiver_test>:
1004cf94:	b510      	push	{r4, lr}
1004cf96:	2827      	cmp	r0, #39	; 0x27
1004cf98:	d901      	bls.n	1004cf9e <hci_le_receiver_test+0xa>
1004cf9a:	2012      	movs	r0, #18
1004cf9c:	bd10      	pop	{r4, pc}
1004cf9e:	f00a f881 	bl	100570a4 <LL_Test_Receiver>
1004cfa2:	2800      	cmp	r0, #0
1004cfa4:	d1fa      	bne.n	1004cf9c <hci_le_receiver_test+0x8>
1004cfa6:	4905      	ldr	r1, [pc, #20]	; (1004cfbc <hci_le_receiver_test+0x28>)
1004cfa8:	2301      	movs	r3, #1
1004cfaa:	680a      	ldr	r2, [r1, #0]
1004cfac:	211b      	movs	r1, #27
1004cfae:	0189      	lsls	r1, r1, #6
1004cfb0:	1851      	adds	r1, r2, r1
1004cfb2:	7e0a      	ldrb	r2, [r1, #24]
1004cfb4:	431a      	orrs	r2, r3
1004cfb6:	760a      	strb	r2, [r1, #24]
1004cfb8:	bd10      	pop	{r4, pc}
1004cfba:	0000      	.short	0x0000
1004cfbc:	20000d64 	.word	0x20000d64

1004cfc0 <hci_le_remove_device_from_white_list>:
1004cfc0:	b51c      	push	{r2, r3, r4, lr}
1004cfc2:	2801      	cmp	r0, #1
1004cfc4:	d003      	beq.n	1004cfce <hci_le_remove_device_from_white_list+0xe>
1004cfc6:	2800      	cmp	r0, #0
1004cfc8:	d001      	beq.n	1004cfce <hci_le_remove_device_from_white_list+0xe>
1004cfca:	2012      	movs	r0, #18
1004cfcc:	bd1c      	pop	{r2, r3, r4, pc}
1004cfce:	466a      	mov	r2, sp
1004cfd0:	7010      	strb	r0, [r2, #0]
1004cfd2:	a800      	add	r0, sp, #0
1004cfd4:	2206      	movs	r2, #6
1004cfd6:	3001      	adds	r0, #1
1004cfd8:	f7f3 fbd3 	bl	10040782 <Osal_MemCpy>
1004cfdc:	4668      	mov	r0, sp
1004cfde:	f003 fa3d 	bl	1005045c <LL_LE_Remove_Device_From_White_List>
1004cfe2:	bd1c      	pop	{r2, r3, r4, pc}

1004cfe4 <hci_le_set_advertise_enable>:
1004cfe4:	b51c      	push	{r2, r3, r4, lr}
1004cfe6:	4604      	mov	r4, r0
1004cfe8:	480d      	ldr	r0, [pc, #52]	; (1004d020 <hci_le_set_advertise_enable+0x3c>)
1004cfea:	6801      	ldr	r1, [r0, #0]
1004cfec:	2023      	movs	r0, #35	; 0x23
1004cfee:	0140      	lsls	r0, r0, #5
1004cff0:	1808      	adds	r0, r1, r0
1004cff2:	7940      	ldrb	r0, [r0, #5]
1004cff4:	2801      	cmp	r0, #1
1004cff6:	d001      	beq.n	1004cffc <hci_le_set_advertise_enable+0x18>
1004cff8:	2803      	cmp	r0, #3
1004cffa:	d107      	bne.n	1004d00c <hci_le_set_advertise_enable+0x28>
1004cffc:	4668      	mov	r0, sp
1004cffe:	f7ff fd29 	bl	1004ca54 <Get_Random_Addr>
1004d002:	4668      	mov	r0, sp
1004d004:	f008 ffd9 	bl	10055fba <Is_Address_Initialized>
1004d008:	2800      	cmp	r0, #0
1004d00a:	d003      	beq.n	1004d014 <hci_le_set_advertise_enable+0x30>
1004d00c:	2c01      	cmp	r4, #1
1004d00e:	d003      	beq.n	1004d018 <hci_le_set_advertise_enable+0x34>
1004d010:	2c00      	cmp	r4, #0
1004d012:	d001      	beq.n	1004d018 <hci_le_set_advertise_enable+0x34>
1004d014:	2012      	movs	r0, #18
1004d016:	bd1c      	pop	{r2, r3, r4, pc}
1004d018:	4620      	mov	r0, r4
1004d01a:	f009 f8f9 	bl	10056210 <LL_Enable_Disable_Adv>
1004d01e:	bd1c      	pop	{r2, r3, r4, pc}
1004d020:	20000d64 	.word	0x20000d64

1004d024 <hci_le_set_advertising_data>:
1004d024:	b510      	push	{r4, lr}
1004d026:	460a      	mov	r2, r1
1004d028:	281f      	cmp	r0, #31
1004d02a:	d901      	bls.n	1004d030 <hci_le_set_advertising_data+0xc>
1004d02c:	2012      	movs	r0, #18
1004d02e:	bd10      	pop	{r4, pc}
1004d030:	4601      	mov	r1, r0
1004d032:	4610      	mov	r0, r2
1004d034:	f009 fb74 	bl	10056720 <LL_Set_Adv_Data>
1004d038:	bd10      	pop	{r4, pc}
	...

1004d03c <hci_le_set_advertising_parameters>:
1004d03c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004d03e:	b085      	sub	sp, #20
1004d040:	466f      	mov	r7, sp
1004d042:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1004d044:	9d0d      	ldr	r5, [sp, #52]	; 0x34
1004d046:	9c0c      	ldr	r4, [sp, #48]	; 0x30
1004d048:	8038      	strh	r0, [r7, #0]
1004d04a:	8079      	strh	r1, [r7, #2]
1004d04c:	713a      	strb	r2, [r7, #4]
1004d04e:	2a05      	cmp	r2, #5
1004d050:	d302      	bcc.n	1004d058 <hci_le_set_advertising_parameters+0x1c>
1004d052:	2012      	movs	r0, #18
1004d054:	b005      	add	sp, #20
1004d056:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004d058:	71fb      	strb	r3, [r7, #7]
1004d05a:	723e      	strb	r6, [r7, #8]
1004d05c:	4638      	mov	r0, r7
1004d05e:	2206      	movs	r2, #6
1004d060:	3009      	adds	r0, #9
1004d062:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004d064:	f7f3 fb8d 	bl	10040782 <Osal_MemCpy>
1004d068:	4668      	mov	r0, sp
1004d06a:	7144      	strb	r4, [r0, #5]
1004d06c:	7185      	strb	r5, [r0, #6]
1004d06e:	7900      	ldrb	r0, [r0, #4]
1004d070:	2801      	cmp	r0, #1
1004d072:	d004      	beq.n	1004d07e <hci_le_set_advertising_parameters+0x42>
1004d074:	2804      	cmp	r0, #4
1004d076:	d002      	beq.n	1004d07e <hci_le_set_advertising_parameters+0x42>
1004d078:	2d03      	cmp	r5, #3
1004d07a:	d8ea      	bhi.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d07c:	e007      	b.n	1004d08e <hci_le_set_advertising_parameters+0x52>
1004d07e:	4669      	mov	r1, sp
1004d080:	7a09      	ldrb	r1, [r1, #8]
1004d082:	2901      	cmp	r1, #1
1004d084:	d001      	beq.n	1004d08a <hci_le_set_advertising_parameters+0x4e>
1004d086:	2900      	cmp	r1, #0
1004d088:	d1e3      	bne.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d08a:	2801      	cmp	r0, #1
1004d08c:	d010      	beq.n	1004d0b0 <hci_le_set_advertising_parameters+0x74>
1004d08e:	4668      	mov	r0, sp
1004d090:	8801      	ldrh	r1, [r0, #0]
1004d092:	4a0f      	ldr	r2, [pc, #60]	; (1004d0d0 <hci_le_set_advertising_parameters+0x94>)
1004d094:	4608      	mov	r0, r1
1004d096:	3820      	subs	r0, #32
1004d098:	4290      	cmp	r0, r2
1004d09a:	d2da      	bcs.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d09c:	4668      	mov	r0, sp
1004d09e:	8840      	ldrh	r0, [r0, #2]
1004d0a0:	2820      	cmp	r0, #32
1004d0a2:	d3d6      	bcc.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d0a4:	2201      	movs	r2, #1
1004d0a6:	0392      	lsls	r2, r2, #14
1004d0a8:	4290      	cmp	r0, r2
1004d0aa:	d8d2      	bhi.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d0ac:	4281      	cmp	r1, r0
1004d0ae:	d8d0      	bhi.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d0b0:	4668      	mov	r0, sp
1004d0b2:	79c0      	ldrb	r0, [r0, #7]
1004d0b4:	2800      	cmp	r0, #0
1004d0b6:	d005      	beq.n	1004d0c4 <hci_le_set_advertising_parameters+0x88>
1004d0b8:	2801      	cmp	r0, #1
1004d0ba:	d003      	beq.n	1004d0c4 <hci_le_set_advertising_parameters+0x88>
1004d0bc:	2802      	cmp	r0, #2
1004d0be:	d001      	beq.n	1004d0c4 <hci_le_set_advertising_parameters+0x88>
1004d0c0:	2803      	cmp	r0, #3
1004d0c2:	d1c6      	bne.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d0c4:	0760      	lsls	r0, r4, #29
1004d0c6:	d0c4      	beq.n	1004d052 <hci_le_set_advertising_parameters+0x16>
1004d0c8:	4668      	mov	r0, sp
1004d0ca:	f009 fbcb 	bl	10056864 <LL_Set_Adv_Params>
1004d0ce:	e7c1      	b.n	1004d054 <hci_le_set_advertising_parameters+0x18>
1004d0d0:	00003fe1 	.word	0x00003fe1

1004d0d4 <hci_le_set_data_length_api>:
1004d0d4:	b570      	push	{r4, r5, r6, lr}
1004d0d6:	4614      	mov	r4, r2
1004d0d8:	460d      	mov	r5, r1
1004d0da:	4606      	mov	r6, r0
1004d0dc:	f7f4 fd56 	bl	10041b8c <data_length_extension_csr_ucfg>
1004d0e0:	2800      	cmp	r0, #0
1004d0e2:	d005      	beq.n	1004d0f0 <hci_le_set_data_length_api+0x1c>
1004d0e4:	4622      	mov	r2, r4
1004d0e6:	4629      	mov	r1, r5
1004d0e8:	4630      	mov	r0, r6
1004d0ea:	f004 fd61 	bl	10051bb0 <LL_Set_Data_Length>
1004d0ee:	bd70      	pop	{r4, r5, r6, pc}
1004d0f0:	2011      	movs	r0, #17
1004d0f2:	bd70      	pop	{r4, r5, r6, pc}

1004d0f4 <hci_le_set_event_mask>:
1004d0f4:	b570      	push	{r4, r5, r6, lr}
1004d0f6:	4605      	mov	r5, r0
1004d0f8:	2400      	movs	r4, #0
1004d0fa:	7840      	ldrb	r0, [r0, #1]
1004d0fc:	4626      	mov	r6, r4
1004d0fe:	2802      	cmp	r0, #2
1004d100:	d001      	beq.n	1004d106 <hci_le_set_event_mask+0x12>
1004d102:	2804      	cmp	r0, #4
1004d104:	d103      	bne.n	1004d10e <hci_le_set_event_mask+0x1a>
1004d106:	f7f4 fbe7 	bl	100418d8 <PRIV_controller_privacy_csr_ucfg>
1004d10a:	2800      	cmp	r0, #0
1004d10c:	d00d      	beq.n	1004d12a <hci_le_set_event_mask+0x36>
1004d10e:	4808      	ldr	r0, [pc, #32]	; (1004d130 <hci_le_set_event_mask+0x3c>)
1004d110:	2137      	movs	r1, #55	; 0x37
1004d112:	6800      	ldr	r0, [r0, #0]
1004d114:	0149      	lsls	r1, r1, #5
1004d116:	1903      	adds	r3, r0, r4
1004d118:	5d2a      	ldrb	r2, [r5, r4]
1004d11a:	185b      	adds	r3, r3, r1
1004d11c:	1c64      	adds	r4, r4, #1
1004d11e:	b2e4      	uxtb	r4, r4
1004d120:	709a      	strb	r2, [r3, #2]
1004d122:	2c08      	cmp	r4, #8
1004d124:	d3f7      	bcc.n	1004d116 <hci_le_set_event_mask+0x22>
1004d126:	4630      	mov	r0, r6
1004d128:	bd70      	pop	{r4, r5, r6, pc}
1004d12a:	2611      	movs	r6, #17
1004d12c:	e7fb      	b.n	1004d126 <hci_le_set_event_mask+0x32>
1004d12e:	0000      	.short	0x0000
1004d130:	20000d64 	.word	0x20000d64

1004d134 <hci_le_set_host_channel_classification_api>:
1004d134:	b510      	push	{r4, lr}
1004d136:	f009 fe59 	bl	10056dec <LL_Set_Channel_Classification>
1004d13a:	bd10      	pop	{r4, pc}

1004d13c <hci_le_set_random_address>:
1004d13c:	b570      	push	{r4, r5, r6, lr}
1004d13e:	4604      	mov	r4, r0
1004d140:	2500      	movs	r5, #0
1004d142:	f007 f839 	bl	100541b8 <get_scan_connection>
1004d146:	4606      	mov	r6, r0
1004d148:	f006 ffb4 	bl	100540b4 <get_advertiser>
1004d14c:	2e08      	cmp	r6, #8
1004d14e:	d101      	bne.n	1004d154 <hci_le_set_random_address+0x18>
1004d150:	2808      	cmp	r0, #8
1004d152:	d001      	beq.n	1004d158 <hci_le_set_random_address+0x1c>
1004d154:	200c      	movs	r0, #12
1004d156:	bd70      	pop	{r4, r5, r6, pc}
1004d158:	4e0c      	ldr	r6, [pc, #48]	; (1004d18c <hci_le_set_random_address+0x50>)
1004d15a:	4b0d      	ldr	r3, [pc, #52]	; (1004d190 <hci_le_set_random_address+0x54>)
1004d15c:	6830      	ldr	r0, [r6, #0]
1004d15e:	2206      	movs	r2, #6
1004d160:	4621      	mov	r1, r4
1004d162:	18c0      	adds	r0, r0, r3
1004d164:	f7f3 fb0d 	bl	10040782 <Osal_MemCpy>
1004d168:	4620      	mov	r0, r4
1004d16a:	f7f3 f96d 	bl	10040448 <__aeabi_uread4>
1004d16e:	2101      	movs	r1, #1
1004d170:	6832      	ldr	r2, [r6, #0]
1004d172:	0200      	lsls	r0, r0, #8
1004d174:	0289      	lsls	r1, r1, #10
1004d176:	1856      	adds	r6, r2, r1
1004d178:	1c40      	adds	r0, r0, #1
1004d17a:	65f0      	str	r0, [r6, #92]	; 0x5c
1004d17c:	1ce0      	adds	r0, r4, #3
1004d17e:	f7f3 f963 	bl	10040448 <__aeabi_uread4>
1004d182:	0200      	lsls	r0, r0, #8
1004d184:	0a00      	lsrs	r0, r0, #8
1004d186:	6630      	str	r0, [r6, #96]	; 0x60
1004d188:	4628      	mov	r0, r5
1004d18a:	bd70      	pop	{r4, r5, r6, pc}
1004d18c:	20000d64 	.word	0x20000d64
1004d190:	000006ef 	.word	0x000006ef

1004d194 <hci_le_set_scan_enable_api>:
1004d194:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004d196:	4605      	mov	r5, r0
1004d198:	4810      	ldr	r0, [pc, #64]	; (1004d1dc <hci_le_set_scan_enable_api+0x48>)
1004d19a:	460c      	mov	r4, r1
1004d19c:	6801      	ldr	r1, [r0, #0]
1004d19e:	2023      	movs	r0, #35	; 0x23
1004d1a0:	0140      	lsls	r0, r0, #5
1004d1a2:	1808      	adds	r0, r1, r0
1004d1a4:	7940      	ldrb	r0, [r0, #5]
1004d1a6:	2801      	cmp	r0, #1
1004d1a8:	d001      	beq.n	1004d1ae <hci_le_set_scan_enable_api+0x1a>
1004d1aa:	2803      	cmp	r0, #3
1004d1ac:	d107      	bne.n	1004d1be <hci_le_set_scan_enable_api+0x2a>
1004d1ae:	4668      	mov	r0, sp
1004d1b0:	f7ff fc50 	bl	1004ca54 <Get_Random_Addr>
1004d1b4:	4668      	mov	r0, sp
1004d1b6:	f008 ff00 	bl	10055fba <Is_Address_Initialized>
1004d1ba:	2800      	cmp	r0, #0
1004d1bc:	d003      	beq.n	1004d1c6 <hci_le_set_scan_enable_api+0x32>
1004d1be:	2d01      	cmp	r5, #1
1004d1c0:	d003      	beq.n	1004d1ca <hci_le_set_scan_enable_api+0x36>
1004d1c2:	2d00      	cmp	r5, #0
1004d1c4:	d001      	beq.n	1004d1ca <hci_le_set_scan_enable_api+0x36>
1004d1c6:	2012      	movs	r0, #18
1004d1c8:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004d1ca:	2c01      	cmp	r4, #1
1004d1cc:	d001      	beq.n	1004d1d2 <hci_le_set_scan_enable_api+0x3e>
1004d1ce:	2c00      	cmp	r4, #0
1004d1d0:	d1f9      	bne.n	1004d1c6 <hci_le_set_scan_enable_api+0x32>
1004d1d2:	4621      	mov	r1, r4
1004d1d4:	4628      	mov	r0, r5
1004d1d6:	f004 ff41 	bl	1005205c <LL_Enable_Disable_Scan>
1004d1da:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004d1dc:	20000d64 	.word	0x20000d64

1004d1e0 <hci_le_set_scan_parameters_api>:
1004d1e0:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004d1e2:	9c06      	ldr	r4, [sp, #24]
1004d1e4:	2800      	cmp	r0, #0
1004d1e6:	d003      	beq.n	1004d1f0 <hci_le_set_scan_parameters_api+0x10>
1004d1e8:	2801      	cmp	r0, #1
1004d1ea:	d001      	beq.n	1004d1f0 <hci_le_set_scan_parameters_api+0x10>
1004d1ec:	2012      	movs	r0, #18
1004d1ee:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004d1f0:	4d10      	ldr	r5, [pc, #64]	; (1004d234 <hci_le_set_scan_parameters_api+0x54>)
1004d1f2:	1f0e      	subs	r6, r1, #4
1004d1f4:	42ae      	cmp	r6, r5
1004d1f6:	d2f9      	bcs.n	1004d1ec <hci_le_set_scan_parameters_api+0xc>
1004d1f8:	1f16      	subs	r6, r2, #4
1004d1fa:	42ae      	cmp	r6, r5
1004d1fc:	d2f6      	bcs.n	1004d1ec <hci_le_set_scan_parameters_api+0xc>
1004d1fe:	2c00      	cmp	r4, #0
1004d200:	d005      	beq.n	1004d20e <hci_le_set_scan_parameters_api+0x2e>
1004d202:	2c01      	cmp	r4, #1
1004d204:	d003      	beq.n	1004d20e <hci_le_set_scan_parameters_api+0x2e>
1004d206:	2c02      	cmp	r4, #2
1004d208:	d001      	beq.n	1004d20e <hci_le_set_scan_parameters_api+0x2e>
1004d20a:	2c03      	cmp	r4, #3
1004d20c:	d1ee      	bne.n	1004d1ec <hci_le_set_scan_parameters_api+0xc>
1004d20e:	2b01      	cmp	r3, #1
1004d210:	d005      	beq.n	1004d21e <hci_le_set_scan_parameters_api+0x3e>
1004d212:	2b00      	cmp	r3, #0
1004d214:	d003      	beq.n	1004d21e <hci_le_set_scan_parameters_api+0x3e>
1004d216:	2b02      	cmp	r3, #2
1004d218:	d001      	beq.n	1004d21e <hci_le_set_scan_parameters_api+0x3e>
1004d21a:	2b03      	cmp	r3, #3
1004d21c:	d1e6      	bne.n	1004d1ec <hci_le_set_scan_parameters_api+0xc>
1004d21e:	466d      	mov	r5, sp
1004d220:	7128      	strb	r0, [r5, #4]
1004d222:	8029      	strh	r1, [r5, #0]
1004d224:	806a      	strh	r2, [r5, #2]
1004d226:	71ab      	strb	r3, [r5, #6]
1004d228:	716c      	strb	r4, [r5, #5]
1004d22a:	4668      	mov	r0, sp
1004d22c:	f009 fdfa 	bl	10056e24 <LL_Set_Scan_Params>
1004d230:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004d232:	0000      	.short	0x0000
1004d234:	00003ffd 	.word	0x00003ffd

1004d238 <hci_le_set_scan_response_data>:
1004d238:	b510      	push	{r4, lr}
1004d23a:	460a      	mov	r2, r1
1004d23c:	281f      	cmp	r0, #31
1004d23e:	d901      	bls.n	1004d244 <hci_le_set_scan_response_data+0xc>
1004d240:	2012      	movs	r0, #18
1004d242:	bd10      	pop	{r4, pc}
1004d244:	4601      	mov	r1, r0
1004d246:	4610      	mov	r0, r2
1004d248:	f009 fc24 	bl	10056a94 <LL_Set_Scan_Resp_Data>
1004d24c:	bd10      	pop	{r4, pc}
	...

1004d250 <hci_le_start_encryption_api>:
1004d250:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1004d252:	4a05      	ldr	r2, [pc, #20]	; (1004d268 <hci_le_start_encryption_api+0x18>)
1004d254:	4290      	cmp	r0, r2
1004d256:	d902      	bls.n	1004d25e <hci_le_start_encryption_api+0xe>
1004d258:	2002      	movs	r0, #2
1004d25a:	b004      	add	sp, #16
1004d25c:	bd10      	pop	{r4, pc}
1004d25e:	aa02      	add	r2, sp, #8
1004d260:	f009 fe0a 	bl	10056e78 <LL_Start_Encryption>
1004d264:	e7f9      	b.n	1004d25a <hci_le_start_encryption_api+0xa>
1004d266:	0000      	.short	0x0000
1004d268:	00000eff 	.word	0x00000eff

1004d26c <hci_le_test_end>:
1004d26c:	b510      	push	{r4, lr}
1004d26e:	f009 ffbb 	bl	100571e8 <LL_Test_Stop>
1004d272:	2800      	cmp	r0, #0
1004d274:	d108      	bne.n	1004d288 <hci_le_test_end+0x1c>
1004d276:	4905      	ldr	r1, [pc, #20]	; (1004d28c <hci_le_test_end+0x20>)
1004d278:	680a      	ldr	r2, [r1, #0]
1004d27a:	211b      	movs	r1, #27
1004d27c:	0189      	lsls	r1, r1, #6
1004d27e:	1851      	adds	r1, r2, r1
1004d280:	7e0a      	ldrb	r2, [r1, #24]
1004d282:	0852      	lsrs	r2, r2, #1
1004d284:	0052      	lsls	r2, r2, #1
1004d286:	760a      	strb	r2, [r1, #24]
1004d288:	bd10      	pop	{r4, pc}
1004d28a:	0000      	.short	0x0000
1004d28c:	20000d64 	.word	0x20000d64

1004d290 <hci_le_transmitter_test>:
1004d290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d292:	4615      	mov	r5, r2
1004d294:	460e      	mov	r6, r1
1004d296:	4607      	mov	r7, r0
1004d298:	2425      	movs	r4, #37	; 0x25
1004d29a:	f7f4 fc77 	bl	10041b8c <data_length_extension_csr_ucfg>
1004d29e:	2801      	cmp	r0, #1
1004d2a0:	d100      	bne.n	1004d2a4 <hci_le_transmitter_test+0x14>
1004d2a2:	24ff      	movs	r4, #255	; 0xff
1004d2a4:	2f27      	cmp	r7, #39	; 0x27
1004d2a6:	d803      	bhi.n	1004d2b0 <hci_le_transmitter_test+0x20>
1004d2a8:	42a6      	cmp	r6, r4
1004d2aa:	d801      	bhi.n	1004d2b0 <hci_le_transmitter_test+0x20>
1004d2ac:	2d07      	cmp	r5, #7
1004d2ae:	d901      	bls.n	1004d2b4 <hci_le_transmitter_test+0x24>
1004d2b0:	2012      	movs	r0, #18
1004d2b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d2b4:	462a      	mov	r2, r5
1004d2b6:	4631      	mov	r1, r6
1004d2b8:	4638      	mov	r0, r7
1004d2ba:	f009 ffc3 	bl	10057244 <LL_Test_Transmitter>
1004d2be:	2800      	cmp	r0, #0
1004d2c0:	d1f7      	bne.n	1004d2b2 <hci_le_transmitter_test+0x22>
1004d2c2:	4905      	ldr	r1, [pc, #20]	; (1004d2d8 <hci_le_transmitter_test+0x48>)
1004d2c4:	2301      	movs	r3, #1
1004d2c6:	680a      	ldr	r2, [r1, #0]
1004d2c8:	211b      	movs	r1, #27
1004d2ca:	0189      	lsls	r1, r1, #6
1004d2cc:	1851      	adds	r1, r2, r1
1004d2ce:	7e0a      	ldrb	r2, [r1, #24]
1004d2d0:	431a      	orrs	r2, r3
1004d2d2:	760a      	strb	r2, [r1, #24]
1004d2d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d2d6:	0000      	.short	0x0000
1004d2d8:	20000d64 	.word	0x20000d64

1004d2dc <hci_le_write_suggested_default_data_length_api>:
1004d2dc:	b570      	push	{r4, r5, r6, lr}
1004d2de:	460c      	mov	r4, r1
1004d2e0:	4605      	mov	r5, r0
1004d2e2:	f7f4 fc53 	bl	10041b8c <data_length_extension_csr_ucfg>
1004d2e6:	2800      	cmp	r0, #0
1004d2e8:	d004      	beq.n	1004d2f4 <hci_le_write_suggested_default_data_length_api+0x18>
1004d2ea:	4621      	mov	r1, r4
1004d2ec:	4628      	mov	r0, r5
1004d2ee:	f004 fcbd 	bl	10051c6c <LL_Write_Default_Data_Length>
1004d2f2:	bd70      	pop	{r4, r5, r6, pc}
1004d2f4:	2011      	movs	r0, #17
1004d2f6:	bd70      	pop	{r4, r5, r6, pc}

1004d2f8 <hci_load_connParams>:
1004d2f8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004d2fa:	9e06      	ldr	r6, [sp, #24]
1004d2fc:	9d07      	ldr	r5, [sp, #28]
1004d2fe:	9c05      	ldr	r4, [sp, #20]
1004d300:	8001      	strh	r1, [r0, #0]
1004d302:	4f14      	ldr	r7, [pc, #80]	; (1004d354 <hci_load_connParams+0x5c>)
1004d304:	1f09      	subs	r1, r1, #4
1004d306:	42b9      	cmp	r1, r7
1004d308:	d21f      	bcs.n	1004d34a <hci_load_connParams+0x52>
1004d30a:	8042      	strh	r2, [r0, #2]
1004d30c:	1f12      	subs	r2, r2, #4
1004d30e:	42ba      	cmp	r2, r7
1004d310:	d21b      	bcs.n	1004d34a <hci_load_connParams+0x52>
1004d312:	4911      	ldr	r1, [pc, #68]	; (1004d358 <hci_load_connParams+0x60>)
1004d314:	1f9a      	subs	r2, r3, #6
1004d316:	8083      	strh	r3, [r0, #4]
1004d318:	428a      	cmp	r2, r1
1004d31a:	d216      	bcs.n	1004d34a <hci_load_connParams+0x52>
1004d31c:	1fa2      	subs	r2, r4, #6
1004d31e:	80c4      	strh	r4, [r0, #6]
1004d320:	428a      	cmp	r2, r1
1004d322:	d212      	bcs.n	1004d34a <hci_load_connParams+0x52>
1004d324:	429c      	cmp	r4, r3
1004d326:	d310      	bcc.n	1004d34a <hci_load_connParams+0x52>
1004d328:	21ff      	movs	r1, #255	; 0xff
1004d32a:	31f4      	adds	r1, #244	; 0xf4
1004d32c:	8106      	strh	r6, [r0, #8]
1004d32e:	428e      	cmp	r6, r1
1004d330:	d80b      	bhi.n	1004d34a <hci_load_connParams+0x52>
1004d332:	4909      	ldr	r1, [pc, #36]	; (1004d358 <hci_load_connParams+0x60>)
1004d334:	8145      	strh	r5, [r0, #10]
1004d336:	1f09      	subs	r1, r1, #4
1004d338:	3d0a      	subs	r5, #10
1004d33a:	428d      	cmp	r5, r1
1004d33c:	d205      	bcs.n	1004d34a <hci_load_connParams+0x52>
1004d33e:	9908      	ldr	r1, [sp, #32]
1004d340:	8181      	strh	r1, [r0, #12]
1004d342:	9a09      	ldr	r2, [sp, #36]	; 0x24
1004d344:	81c2      	strh	r2, [r0, #14]
1004d346:	428a      	cmp	r2, r1
1004d348:	d201      	bcs.n	1004d34e <hci_load_connParams+0x56>
1004d34a:	2012      	movs	r0, #18
1004d34c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004d34e:	2000      	movs	r0, #0
1004d350:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004d352:	0000      	.short	0x0000
1004d354:	00003ffd 	.word	0x00003ffd
1004d358:	00000c7b 	.word	0x00000c7b

1004d35c <hci_read_bd_addr>:
1004d35c:	b510      	push	{r4, lr}
1004d35e:	4904      	ldr	r1, [pc, #16]	; (1004d370 <hci_read_bd_addr+0x14>)
1004d360:	2206      	movs	r2, #6
1004d362:	6809      	ldr	r1, [r1, #0]
1004d364:	3178      	adds	r1, #120	; 0x78
1004d366:	f7f3 fa0c 	bl	10040782 <Osal_MemCpy>
1004d36a:	2000      	movs	r0, #0
1004d36c:	bd10      	pop	{r4, pc}
1004d36e:	0000      	.short	0x0000
1004d370:	20000d64 	.word	0x20000d64

1004d374 <hci_read_local_supported_commands>:
1004d374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d376:	4604      	mov	r4, r0
1004d378:	2240      	movs	r2, #64	; 0x40
1004d37a:	2100      	movs	r1, #0
1004d37c:	f7f3 fa05 	bl	1004078a <Osal_MemSet>
1004d380:	f7f4 faaa 	bl	100418d8 <PRIV_controller_privacy_csr_ucfg>
1004d384:	4606      	mov	r6, r0
1004d386:	f7f4 fbcb 	bl	10041b20 <master_csr_ucfg>
1004d38a:	4605      	mov	r5, r0
1004d38c:	f7f4 fc28 	bl	10041be0 <secure_connections_csr_ucfg>
1004d390:	4607      	mov	r7, r0
1004d392:	2020      	movs	r0, #32
1004d394:	7020      	strb	r0, [r4, #0]
1004d396:	2080      	movs	r0, #128	; 0x80
1004d398:	70a0      	strb	r0, [r4, #2]
1004d39a:	20c0      	movs	r0, #192	; 0xc0
1004d39c:	7160      	strb	r0, [r4, #5]
1004d39e:	2004      	movs	r0, #4
1004d3a0:	72a0      	strb	r0, [r4, #10]
1004d3a2:	2028      	movs	r0, #40	; 0x28
1004d3a4:	73a0      	strb	r0, [r4, #14]
1004d3a6:	2022      	movs	r0, #34	; 0x22
1004d3a8:	73e0      	strb	r0, [r4, #15]
1004d3aa:	20f7      	movs	r0, #247	; 0xf7
1004d3ac:	7660      	strb	r0, [r4, #25]
1004d3ae:	203c      	movs	r0, #60	; 0x3c
1004d3b0:	4368      	muls	r0, r5
1004d3b2:	21c3      	movs	r1, #195	; 0xc3
1004d3b4:	4308      	orrs	r0, r1
1004d3b6:	76a0      	strb	r0, [r4, #26]
1004d3b8:	200c      	movs	r0, #12
1004d3ba:	4368      	muls	r0, r5
1004d3bc:	21f3      	movs	r1, #243	; 0xf3
1004d3be:	4308      	orrs	r0, r1
1004d3c0:	76e0      	strb	r0, [r4, #27]
1004d3c2:	207e      	movs	r0, #126	; 0x7e
1004d3c4:	4305      	orrs	r5, r0
1004d3c6:	7725      	strb	r5, [r4, #28]
1004d3c8:	f7f4 fbe0 	bl	10041b8c <data_length_extension_csr_ucfg>
1004d3cc:	21c0      	movs	r1, #192	; 0xc0
1004d3ce:	4348      	muls	r0, r1
1004d3d0:	3420      	adds	r4, #32
1004d3d2:	7060      	strb	r0, [r4, #1]
1004d3d4:	f7f4 fbda 	bl	10041b8c <data_length_extension_csr_ucfg>
1004d3d8:	4601      	mov	r1, r0
1004d3da:	4638      	mov	r0, r7
1004d3dc:	2206      	movs	r2, #6
1004d3de:	4350      	muls	r0, r2
1004d3e0:	4301      	orrs	r1, r0
1004d3e2:	4630      	mov	r0, r6
1004d3e4:	22f8      	movs	r2, #248	; 0xf8
1004d3e6:	4350      	muls	r0, r2
1004d3e8:	4301      	orrs	r1, r0
1004d3ea:	70a1      	strb	r1, [r4, #2]
1004d3ec:	f7f4 fbce 	bl	10041b8c <data_length_extension_csr_ucfg>
1004d3f0:	00c1      	lsls	r1, r0, #3
1004d3f2:	00f2      	lsls	r2, r6, #3
1004d3f4:	1b90      	subs	r0, r2, r6
1004d3f6:	4301      	orrs	r1, r0
1004d3f8:	70e1      	strb	r1, [r4, #3]
1004d3fa:	00b0      	lsls	r0, r6, #2
1004d3fc:	71e0      	strb	r0, [r4, #7]
1004d3fe:	2000      	movs	r0, #0
1004d400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1004d402 <hci_read_local_supported_features>:
1004d402:	b510      	push	{r4, lr}
1004d404:	4604      	mov	r4, r0
1004d406:	2208      	movs	r2, #8
1004d408:	2100      	movs	r1, #0
1004d40a:	f7f3 f9be 	bl	1004078a <Osal_MemSet>
1004d40e:	2060      	movs	r0, #96	; 0x60
1004d410:	7120      	strb	r0, [r4, #4]
1004d412:	2000      	movs	r0, #0
1004d414:	bd10      	pop	{r4, pc}
	...

1004d418 <hci_read_local_version_information>:
1004d418:	b530      	push	{r4, r5, lr}
1004d41a:	240b      	movs	r4, #11
1004d41c:	9d03      	ldr	r5, [sp, #12]
1004d41e:	7004      	strb	r4, [r0, #0]
1004d420:	4805      	ldr	r0, [pc, #20]	; (1004d438 <hci_read_local_version_information+0x20>)
1004d422:	6800      	ldr	r0, [r0, #0]
1004d424:	3080      	adds	r0, #128	; 0x80
1004d426:	8c40      	ldrh	r0, [r0, #34]	; 0x22
1004d428:	8008      	strh	r0, [r1, #0]
1004d42a:	7014      	strb	r4, [r2, #0]
1004d42c:	2030      	movs	r0, #48	; 0x30
1004d42e:	8018      	strh	r0, [r3, #0]
1004d430:	2013      	movs	r0, #19
1004d432:	8028      	strh	r0, [r5, #0]
1004d434:	2000      	movs	r0, #0
1004d436:	bd30      	pop	{r4, r5, pc}
1004d438:	20000d64 	.word	0x20000d64

1004d43c <hci_read_remote_version_information>:
1004d43c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d43e:	4606      	mov	r6, r0
1004d440:	2000      	movs	r0, #0
1004d442:	9000      	str	r0, [sp, #0]
1004d444:	4669      	mov	r1, sp
1004d446:	4630      	mov	r0, r6
1004d448:	f004 fa44 	bl	100518d4 <LL_Read_Remote_Version_Info>
1004d44c:	0005      	movs	r5, r0
1004d44e:	d002      	beq.n	1004d456 <hci_read_remote_version_information+0x1a>
1004d450:	2d45      	cmp	r5, #69	; 0x45
1004d452:	d026      	beq.n	1004d4a2 <hci_read_remote_version_information+0x66>
1004d454:	e026      	b.n	1004d4a4 <hci_read_remote_version_information+0x68>
1004d456:	4814      	ldr	r0, [pc, #80]	; (1004d4a8 <hci_read_remote_version_information+0x6c>)
1004d458:	211b      	movs	r1, #27
1004d45a:	6800      	ldr	r0, [r0, #0]
1004d45c:	0189      	lsls	r1, r1, #6
1004d45e:	1841      	adds	r1, r0, r1
1004d460:	7ec9      	ldrb	r1, [r1, #27]
1004d462:	2702      	movs	r7, #2
1004d464:	9c00      	ldr	r4, [sp, #0]
1004d466:	0709      	lsls	r1, r1, #28
1004d468:	d51c      	bpl.n	1004d4a4 <hci_read_remote_version_information+0x68>
1004d46a:	2102      	movs	r1, #2
1004d46c:	028b      	lsls	r3, r1, #10
1004d46e:	3008      	adds	r0, #8
1004d470:	18c0      	adds	r0, r0, r3
1004d472:	220c      	movs	r2, #12
1004d474:	6940      	ldr	r0, [r0, #20]
1004d476:	460b      	mov	r3, r1
1004d478:	f00e fd38 	bl	1005beec <aci_event_fifo_push_header>
1004d47c:	0001      	movs	r1, r0
1004d47e:	d011      	beq.n	1004d4a4 <hci_read_remote_version_information+0x68>
1004d480:	808e      	strh	r6, [r1, #4]
1004d482:	7822      	ldrb	r2, [r4, #0]
1004d484:	718a      	strb	r2, [r1, #6]
1004d486:	7862      	ldrb	r2, [r4, #1]
1004d488:	78a3      	ldrb	r3, [r4, #2]
1004d48a:	021b      	lsls	r3, r3, #8
1004d48c:	4313      	orrs	r3, r2
1004d48e:	810b      	strh	r3, [r1, #8]
1004d490:	78e3      	ldrb	r3, [r4, #3]
1004d492:	7922      	ldrb	r2, [r4, #4]
1004d494:	4638      	mov	r0, r7
1004d496:	0212      	lsls	r2, r2, #8
1004d498:	431a      	orrs	r2, r3
1004d49a:	814a      	strh	r2, [r1, #10]
1004d49c:	f00e fd12 	bl	1005bec4 <aci_event_fifo_push>
1004d4a0:	e000      	b.n	1004d4a4 <hci_read_remote_version_information+0x68>
1004d4a2:	2500      	movs	r5, #0
1004d4a4:	4628      	mov	r0, r5
1004d4a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d4a8:	20000d64 	.word	0x20000d64

1004d4ac <hci_read_rssi>:
1004d4ac:	b510      	push	{r4, lr}
1004d4ae:	460c      	mov	r4, r1
1004d4b0:	4601      	mov	r1, r0
1004d4b2:	4620      	mov	r0, r4
1004d4b4:	f009 fddc 	bl	10057070 <LL_Read_RSSI>
1004d4b8:	2800      	cmp	r0, #0
1004d4ba:	d001      	beq.n	1004d4c0 <hci_read_rssi+0x14>
1004d4bc:	217e      	movs	r1, #126	; 0x7e
1004d4be:	7021      	strb	r1, [r4, #0]
1004d4c0:	bd10      	pop	{r4, pc}

1004d4c2 <hci_read_transmit_power_level>:
1004d4c2:	b510      	push	{r4, lr}
1004d4c4:	4614      	mov	r4, r2
1004d4c6:	0008      	movs	r0, r1
1004d4c8:	d003      	beq.n	1004d4d2 <hci_read_transmit_power_level+0x10>
1004d4ca:	2801      	cmp	r0, #1
1004d4cc:	d001      	beq.n	1004d4d2 <hci_read_transmit_power_level+0x10>
1004d4ce:	2012      	movs	r0, #18
1004d4d0:	e004      	b.n	1004d4dc <hci_read_transmit_power_level+0x1a>
1004d4d2:	4611      	mov	r1, r2
1004d4d4:	f009 fda6 	bl	10057024 <LL_Get_Link_Tx_Power_Level>
1004d4d8:	2800      	cmp	r0, #0
1004d4da:	d001      	beq.n	1004d4e0 <hci_read_transmit_power_level+0x1e>
1004d4dc:	217f      	movs	r1, #127	; 0x7f
1004d4de:	7021      	strb	r1, [r4, #0]
1004d4e0:	bd10      	pop	{r4, pc}

1004d4e2 <hci_reset>:
1004d4e2:	b510      	push	{r4, lr}
1004d4e4:	f7fa f8bc 	bl	10047660 <_BlueNRG_Stack_Initialization>
1004d4e8:	2000      	movs	r0, #0
1004d4ea:	bd10      	pop	{r4, pc}

1004d4ec <hci_rx_acl_data>:
1004d4ec:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1004d4ee:	4606      	mov	r6, r0
1004d4f0:	2002      	movs	r0, #2
1004d4f2:	9001      	str	r0, [sp, #4]
1004d4f4:	88b0      	ldrh	r0, [r6, #4]
1004d4f6:	9000      	str	r0, [sp, #0]
1004d4f8:	79b5      	ldrb	r5, [r6, #6]
1004d4fa:	2103      	movs	r1, #3
1004d4fc:	1d68      	adds	r0, r5, #5
1004d4fe:	4308      	orrs	r0, r1
1004d500:	1c40      	adds	r0, r0, #1
1004d502:	0883      	lsrs	r3, r0, #2
1004d504:	4813      	ldr	r0, [pc, #76]	; (1004d554 <hci_rx_acl_data+0x68>)
1004d506:	2102      	movs	r1, #2
1004d508:	6800      	ldr	r0, [r0, #0]
1004d50a:	028c      	lsls	r4, r1, #10
1004d50c:	3008      	adds	r0, #8
1004d50e:	1900      	adds	r0, r0, r4
1004d510:	7b37      	ldrb	r7, [r6, #12]
1004d512:	2211      	movs	r2, #17
1004d514:	6940      	ldr	r0, [r0, #20]
1004d516:	f00e fce9 	bl	1005beec <aci_event_fifo_push_header>
1004d51a:	0004      	movs	r4, r0
1004d51c:	d017      	beq.n	1004d54e <hci_rx_acl_data+0x62>
1004d51e:	9800      	ldr	r0, [sp, #0]
1004d520:	80a0      	strh	r0, [r4, #4]
1004d522:	2000      	movs	r0, #0
1004d524:	71a7      	strb	r7, [r4, #6]
1004d526:	71e0      	strb	r0, [r4, #7]
1004d528:	4601      	mov	r1, r0
1004d52a:	4623      	mov	r3, r4
1004d52c:	8125      	strh	r5, [r4, #8]
1004d52e:	462a      	mov	r2, r5
1004d530:	4630      	mov	r0, r6
1004d532:	330a      	adds	r3, #10
1004d534:	f007 fa3a 	bl	100549ac <PM_Copy_Pckt_Data>
1004d538:	4621      	mov	r1, r4
1004d53a:	9801      	ldr	r0, [sp, #4]
1004d53c:	f00e fcc2 	bl	1005bec4 <aci_event_fifo_push>
1004d540:	2400      	movs	r4, #0
1004d542:	2101      	movs	r1, #1
1004d544:	4630      	mov	r0, r6
1004d546:	f007 facd 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004d54a:	4620      	mov	r0, r4
1004d54c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004d54e:	2407      	movs	r4, #7
1004d550:	e7fb      	b.n	1004d54a <hci_rx_acl_data+0x5e>
1004d552:	0000      	.short	0x0000
1004d554:	20000d64 	.word	0x20000d64

1004d558 <hci_set_event_mask>:
1004d558:	b570      	push	{r4, r5, r6, lr}
1004d55a:	4a08      	ldr	r2, [pc, #32]	; (1004d57c <hci_set_event_mask+0x24>)
1004d55c:	2100      	movs	r1, #0
1004d55e:	4603      	mov	r3, r0
1004d560:	241b      	movs	r4, #27
1004d562:	6812      	ldr	r2, [r2, #0]
1004d564:	4608      	mov	r0, r1
1004d566:	01a4      	lsls	r4, r4, #6
1004d568:	1856      	adds	r6, r2, r1
1004d56a:	5c5d      	ldrb	r5, [r3, r1]
1004d56c:	1936      	adds	r6, r6, r4
1004d56e:	1c49      	adds	r1, r1, #1
1004d570:	b2c9      	uxtb	r1, r1
1004d572:	76b5      	strb	r5, [r6, #26]
1004d574:	2908      	cmp	r1, #8
1004d576:	d3f7      	bcc.n	1004d568 <hci_set_event_mask+0x10>
1004d578:	bd70      	pop	{r4, r5, r6, pc}
1004d57a:	0000      	.short	0x0000
1004d57c:	20000d64 	.word	0x20000d64

1004d580 <hci_tx_acl_data_done>:
1004d580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d582:	4607      	mov	r7, r0
1004d584:	8885      	ldrh	r5, [r0, #4]
1004d586:	480e      	ldr	r0, [pc, #56]	; (1004d5c0 <hci_tx_acl_data_done+0x40>)
1004d588:	2210      	movs	r2, #16
1004d58a:	6800      	ldr	r0, [r0, #0]
1004d58c:	01d4      	lsls	r4, r2, #7
1004d58e:	3008      	adds	r0, #8
1004d590:	2602      	movs	r6, #2
1004d592:	1900      	adds	r0, r0, r4
1004d594:	2301      	movs	r3, #1
1004d596:	4631      	mov	r1, r6
1004d598:	6940      	ldr	r0, [r0, #20]
1004d59a:	f00e fca7 	bl	1005beec <aci_event_fifo_push_header>
1004d59e:	0001      	movs	r1, r0
1004d5a0:	d00c      	beq.n	1004d5bc <hci_tx_acl_data_done+0x3c>
1004d5a2:	808d      	strh	r5, [r1, #4]
1004d5a4:	2201      	movs	r2, #1
1004d5a6:	2400      	movs	r4, #0
1004d5a8:	80ca      	strh	r2, [r1, #6]
1004d5aa:	4630      	mov	r0, r6
1004d5ac:	f00e fc8a 	bl	1005bec4 <aci_event_fifo_push>
1004d5b0:	2100      	movs	r1, #0
1004d5b2:	4638      	mov	r0, r7
1004d5b4:	f007 fa96 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004d5b8:	4620      	mov	r0, r4
1004d5ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d5bc:	2407      	movs	r4, #7
1004d5be:	e7fb      	b.n	1004d5b8 <hci_tx_acl_data_done+0x38>
1004d5c0:	20000d64 	.word	0x20000d64

1004d5c4 <hci_le_add_device_to_resolving_list_api>:
1004d5c4:	b570      	push	{r4, r5, r6, lr}
1004d5c6:	b08a      	sub	sp, #40	; 0x28
1004d5c8:	461d      	mov	r5, r3
1004d5ca:	4616      	mov	r6, r2
1004d5cc:	2800      	cmp	r0, #0
1004d5ce:	d004      	beq.n	1004d5da <hci_le_add_device_to_resolving_list_api+0x16>
1004d5d0:	2801      	cmp	r0, #1
1004d5d2:	d002      	beq.n	1004d5da <hci_le_add_device_to_resolving_list_api+0x16>
1004d5d4:	2012      	movs	r0, #18
1004d5d6:	b00a      	add	sp, #40	; 0x28
1004d5d8:	bd70      	pop	{r4, r5, r6, pc}
1004d5da:	466a      	mov	r2, sp
1004d5dc:	7010      	strb	r0, [r2, #0]
1004d5de:	466c      	mov	r4, sp
1004d5e0:	2206      	movs	r2, #6
1004d5e2:	1c60      	adds	r0, r4, #1
1004d5e4:	f7f3 f8cd 	bl	10040782 <Osal_MemCpy>
1004d5e8:	2210      	movs	r2, #16
1004d5ea:	4631      	mov	r1, r6
1004d5ec:	1de0      	adds	r0, r4, #7
1004d5ee:	f7f3 f8c8 	bl	10040782 <Osal_MemCpy>
1004d5f2:	a805      	add	r0, sp, #20
1004d5f4:	2210      	movs	r2, #16
1004d5f6:	4629      	mov	r1, r5
1004d5f8:	3003      	adds	r0, #3
1004d5fa:	f7f3 f8c2 	bl	10040782 <Osal_MemCpy>
1004d5fe:	4668      	mov	r0, sp
1004d600:	f002 fd60 	bl	100500c4 <LL_LE_Add_Device_To_Resolving_List>
1004d604:	e7e7      	b.n	1004d5d6 <hci_le_add_device_to_resolving_list_api+0x12>

1004d606 <hci_le_clear_resolving_list_api>:
1004d606:	b510      	push	{r4, lr}
1004d608:	f002 fe46 	bl	10050298 <LL_LE_Clear_Resolving_List>
1004d60c:	bd10      	pop	{r4, pc}

1004d60e <hci_le_read_local_resolvable_address_api>:
1004d60e:	b51c      	push	{r2, r3, r4, lr}
1004d610:	4614      	mov	r4, r2
1004d612:	466a      	mov	r2, sp
1004d614:	7010      	strb	r0, [r2, #0]
1004d616:	a800      	add	r0, sp, #0
1004d618:	2206      	movs	r2, #6
1004d61a:	3001      	adds	r0, #1
1004d61c:	f7f3 f8b1 	bl	10040782 <Osal_MemCpy>
1004d620:	4622      	mov	r2, r4
1004d622:	4669      	mov	r1, sp
1004d624:	2001      	movs	r0, #1
1004d626:	f002 fea1 	bl	1005036c <LL_LE_Read_Resolvable_Address>
1004d62a:	28ff      	cmp	r0, #255	; 0xff
1004d62c:	d001      	beq.n	1004d632 <hci_le_read_local_resolvable_address_api+0x24>
1004d62e:	2000      	movs	r0, #0
1004d630:	bd1c      	pop	{r2, r3, r4, pc}
1004d632:	2002      	movs	r0, #2
1004d634:	bd1c      	pop	{r2, r3, r4, pc}

1004d636 <hci_le_read_peer_resolvable_address_api>:
1004d636:	b51c      	push	{r2, r3, r4, lr}
1004d638:	4614      	mov	r4, r2
1004d63a:	466a      	mov	r2, sp
1004d63c:	7010      	strb	r0, [r2, #0]
1004d63e:	a800      	add	r0, sp, #0
1004d640:	2206      	movs	r2, #6
1004d642:	3001      	adds	r0, #1
1004d644:	f7f3 f89d 	bl	10040782 <Osal_MemCpy>
1004d648:	4622      	mov	r2, r4
1004d64a:	4669      	mov	r1, sp
1004d64c:	2000      	movs	r0, #0
1004d64e:	f002 fe8d 	bl	1005036c <LL_LE_Read_Resolvable_Address>
1004d652:	28ff      	cmp	r0, #255	; 0xff
1004d654:	d001      	beq.n	1004d65a <hci_le_read_peer_resolvable_address_api+0x24>
1004d656:	2000      	movs	r0, #0
1004d658:	bd1c      	pop	{r2, r3, r4, pc}
1004d65a:	2002      	movs	r0, #2
1004d65c:	bd1c      	pop	{r2, r3, r4, pc}

1004d65e <hci_le_read_resolving_list_size_api>:
1004d65e:	b510      	push	{r4, lr}
1004d660:	4604      	mov	r4, r0
1004d662:	f002 feb1 	bl	100503c8 <LL_LE_Read_Resolving_List_Size>
1004d666:	7020      	strb	r0, [r4, #0]
1004d668:	2000      	movs	r0, #0
1004d66a:	bd10      	pop	{r4, pc}

1004d66c <hci_le_remove_device_from_resolving_list_api>:
1004d66c:	b51c      	push	{r2, r3, r4, lr}
1004d66e:	466a      	mov	r2, sp
1004d670:	7010      	strb	r0, [r2, #0]
1004d672:	a800      	add	r0, sp, #0
1004d674:	2206      	movs	r2, #6
1004d676:	3001      	adds	r0, #1
1004d678:	f7f3 f883 	bl	10040782 <Osal_MemCpy>
1004d67c:	4668      	mov	r0, sp
1004d67e:	f002 fea7 	bl	100503d0 <LL_LE_Remove_Device_From_Resolving_List>
1004d682:	bd1c      	pop	{r2, r3, r4, pc}

1004d684 <hci_le_set_address_resolution_enable_api>:
1004d684:	b510      	push	{r4, lr}
1004d686:	2800      	cmp	r0, #0
1004d688:	d003      	beq.n	1004d692 <hci_le_set_address_resolution_enable_api+0xe>
1004d68a:	2801      	cmp	r0, #1
1004d68c:	d001      	beq.n	1004d692 <hci_le_set_address_resolution_enable_api+0xe>
1004d68e:	2012      	movs	r0, #18
1004d690:	bd10      	pop	{r4, pc}
1004d692:	f002 ff0f 	bl	100504b4 <LL_LE_Set_Address_Resolution_Enable>
1004d696:	bd10      	pop	{r4, pc}

1004d698 <hci_le_set_resolvable_private_address_timeout_api>:
1004d698:	b510      	push	{r4, lr}
1004d69a:	f002 ff1b 	bl	100504d4 <LL_LE_Set_Resolvable_Private_Address_Timeout>
1004d69e:	bd10      	pop	{r4, pc}

1004d6a0 <HAL_VTimerAcc_sysT32_ms>:
1004d6a0:	4a07      	ldr	r2, [pc, #28]	; (1004d6c0 <HAL_VTimerAcc_sysT32_ms+0x20>)
1004d6a2:	4291      	cmp	r1, r2
1004d6a4:	dc02      	bgt.n	1004d6ac <HAL_VTimerAcc_sysT32_ms+0xc>
1004d6a6:	4252      	negs	r2, r2
1004d6a8:	4291      	cmp	r1, r2
1004d6aa:	da00      	bge.n	1004d6ae <HAL_VTimerAcc_sysT32_ms+0xe>
1004d6ac:	4611      	mov	r1, r2
1004d6ae:	22ff      	movs	r2, #255	; 0xff
1004d6b0:	3299      	adds	r2, #153	; 0x99
1004d6b2:	4351      	muls	r1, r2
1004d6b4:	120a      	asrs	r2, r1, #8
1004d6b6:	1851      	adds	r1, r2, r1
1004d6b8:	140a      	asrs	r2, r1, #16
1004d6ba:	1851      	adds	r1, r2, r1
1004d6bc:	1808      	adds	r0, r1, r0
1004d6be:	4770      	bx	lr
1004d6c0:	004fffff 	.word	0x004fffff

1004d6c4 <HAL_VTimerGetCurrentTime_sysT32>:
1004d6c4:	b510      	push	{r4, lr}
1004d6c6:	2009      	movs	r0, #9
1004d6c8:	06c0      	lsls	r0, r0, #27
1004d6ca:	6900      	ldr	r0, [r0, #16]
1004d6cc:	0200      	lsls	r0, r0, #8
1004d6ce:	0a00      	lsrs	r0, r0, #8
1004d6d0:	f000 f992 	bl	1004d9f8 <Timer_sysTime32_convMachineTime>
1004d6d4:	bd10      	pop	{r4, pc}

1004d6d6 <HAL_VTimerTimeoutCallback>:
1004d6d6:	4770      	bx	lr

1004d6d8 <Set_Host_Timer_value>:
1004d6d8:	b530      	push	{r4, r5, lr}
1004d6da:	f3ef 8110 	mrs	r1, PRIMASK
1004d6de:	b672      	cpsid	i
1004d6e0:	2209      	movs	r2, #9
1004d6e2:	06d2      	lsls	r2, r2, #27
1004d6e4:	6912      	ldr	r2, [r2, #16]
1004d6e6:	25ff      	movs	r5, #255	; 0xff
1004d6e8:	1a82      	subs	r2, r0, r2
1004d6ea:	0212      	lsls	r2, r2, #8
1004d6ec:	1214      	asrs	r4, r2, #8
1004d6ee:	4a0c      	ldr	r2, [pc, #48]	; (1004d720 <Set_Host_Timer_value+0x48>)
1004d6f0:	3591      	adds	r5, #145	; 0x91
1004d6f2:	6813      	ldr	r3, [r2, #0]
1004d6f4:	42ac      	cmp	r4, r5
1004d6f6:	dc08      	bgt.n	1004d70a <Set_Host_Timer_value+0x32>
1004d6f8:	2201      	movs	r2, #1
1004d6fa:	0612      	lsls	r2, r2, #24
1004d6fc:	4390      	bics	r0, r2
1004d6fe:	461a      	mov	r2, r3
1004d700:	3240      	adds	r2, #64	; 0x40
1004d702:	79d4      	ldrb	r4, [r2, #7]
1004d704:	25df      	movs	r5, #223	; 0xdf
1004d706:	402c      	ands	r4, r5
1004d708:	71d4      	strb	r4, [r2, #7]
1004d70a:	01c2      	lsls	r2, r0, #7
1004d70c:	2407      	movs	r4, #7
1004d70e:	09d2      	lsrs	r2, r2, #7
1004d710:	0224      	lsls	r4, r4, #8
1004d712:	191b      	adds	r3, r3, r4
1004d714:	625a      	str	r2, [r3, #36]	; 0x24
1004d716:	4a03      	ldr	r2, [pc, #12]	; (1004d724 <Set_Host_Timer_value+0x4c>)
1004d718:	6090      	str	r0, [r2, #8]
1004d71a:	f381 8810 	msr	PRIMASK, r1
1004d71e:	bd30      	pop	{r4, r5, pc}
1004d720:	20000d64 	.word	0x20000d64
1004d724:	48000040 	.word	0x48000040

1004d728 <TimerCallback>:
1004d728:	b510      	push	{r4, lr}
1004d72a:	0003      	movs	r3, r0
1004d72c:	f7fe ffbd 	bl	1004c6aa <__ARM_common_switch8>
1004d730:	2d2d333a 	.word	0x2d2d333a
1004d734:	30211e2d 	.word	0x30211e2d
1004d738:	2a2a2a33 	.word	0x2a2a2a33
1004d73c:	2a2a2a2a 	.word	0x2a2a2a2a
1004d740:	24242a2a 	.word	0x24242a2a
1004d744:	24242424 	.word	0x24242424
1004d748:	24242424 	.word	0x24242424
1004d74c:	24242424 	.word	0x24242424
1004d750:	24242424 	.word	0x24242424
1004d754:	24242424 	.word	0x24242424
1004d758:	24242424 	.word	0x24242424
1004d75c:	24242424 	.word	0x24242424
1004d760:	27242424 	.word	0x27242424
1004d764:	27272727 	.word	0x27272727
1004d768:	33272727 	.word	0x33272727
1004d76c:	f7fa f9d0 	bl	10047b10 <GAP_LimDiscTimeoutcb>
1004d770:	bd10      	pop	{r4, pc}
1004d772:	f007 fe09 	bl	10055388 <GAP_PrivateAddrTimercb>
1004d776:	bd10      	pop	{r4, pc}
1004d778:	f7fc fe32 	bl	1004a3e0 <GATT_TimeOut_Handler>
1004d77c:	bd10      	pop	{r4, pc}
1004d77e:	f000 fc25 	bl	1004dfcc <L2C_SigChan_Req_TimeOut_Handler>
1004d782:	bd10      	pop	{r4, pc}
1004d784:	f00c febc 	bl	1005a500 <SMP_Protocol_Timer_cb>
1004d788:	bd10      	pop	{r4, pc}
1004d78a:	f00d fa07 	bl	1005ab9c <SMP_repeated_attacks_timer_cb>
1004d78e:	bd10      	pop	{r4, pc}
1004d790:	f7f4 f9aa 	bl	10041ae8 <GAP_DiscProcTimeoutcb_ucfg>
1004d794:	bd10      	pop	{r4, pc}
1004d796:	383a      	subs	r0, #58	; 0x3a
1004d798:	b2c0      	uxtb	r0, r0
1004d79a:	2804      	cmp	r0, #4
1004d79c:	d2fa      	bcs.n	1004d794 <TimerCallback+0x6c>
1004d79e:	f7ff ff9a 	bl	1004d6d6 <HAL_VTimerTimeoutCallback>
1004d7a2:	bd10      	pop	{r4, pc}

1004d7a4 <Timer_ExpiryCallback>:
1004d7a4:	4803      	ldr	r0, [pc, #12]	; (1004d7b4 <Timer_ExpiryCallback+0x10>)
1004d7a6:	22df      	movs	r2, #223	; 0xdf
1004d7a8:	6800      	ldr	r0, [r0, #0]
1004d7aa:	3040      	adds	r0, #64	; 0x40
1004d7ac:	79c1      	ldrb	r1, [r0, #7]
1004d7ae:	4011      	ands	r1, r2
1004d7b0:	71c1      	strb	r1, [r0, #7]
1004d7b2:	4770      	bx	lr
1004d7b4:	20000d64 	.word	0x20000d64

1004d7b8 <Timer_Init>:
1004d7b8:	b570      	push	{r4, r5, r6, lr}
1004d7ba:	480b      	ldr	r0, [pc, #44]	; (1004d7e8 <Timer_Init+0x30>)
1004d7bc:	21e1      	movs	r1, #225	; 0xe1
1004d7be:	6800      	ldr	r0, [r0, #0]
1004d7c0:	00c9      	lsls	r1, r1, #3
1004d7c2:	1844      	adds	r4, r0, r1
1004d7c4:	4626      	mov	r6, r4
1004d7c6:	6064      	str	r4, [r4, #4]
1004d7c8:	3608      	adds	r6, #8
1004d7ca:	6024      	str	r4, [r4, #0]
1004d7cc:	60e6      	str	r6, [r4, #12]
1004d7ce:	2500      	movs	r5, #0
1004d7d0:	60a6      	str	r6, [r4, #8]
1004d7d2:	6920      	ldr	r0, [r4, #16]
1004d7d4:	0129      	lsls	r1, r5, #4
1004d7d6:	1841      	adds	r1, r0, r1
1004d7d8:	4630      	mov	r0, r6
1004d7da:	f008 f85b 	bl	10055894 <List_Circular_Insert_Tail>
1004d7de:	1c6d      	adds	r5, r5, #1
1004d7e0:	b2ed      	uxtb	r5, r5
1004d7e2:	2d0b      	cmp	r5, #11
1004d7e4:	d3f5      	bcc.n	1004d7d2 <Timer_Init+0x1a>
1004d7e6:	bd70      	pop	{r4, r5, r6, pc}
1004d7e8:	20000d64 	.word	0x20000d64

1004d7ec <Timer_ProcessQ>:
1004d7ec:	b5f0      	push	{r4, r5, r6, r7, lr}
1004d7ee:	2600      	movs	r6, #0
1004d7f0:	b093      	sub	sp, #76	; 0x4c
1004d7f2:	1e70      	subs	r0, r6, #1
1004d7f4:	900e      	str	r0, [sp, #56]	; 0x38
1004d7f6:	4842      	ldr	r0, [pc, #264]	; (1004d900 <Timer_ProcessQ+0x114>)
1004d7f8:	21e1      	movs	r1, #225	; 0xe1
1004d7fa:	6800      	ldr	r0, [r0, #0]
1004d7fc:	00c9      	lsls	r1, r1, #3
1004d7fe:	1844      	adds	r4, r0, r1
1004d800:	2009      	movs	r0, #9
1004d802:	06c0      	lsls	r0, r0, #27
1004d804:	6900      	ldr	r0, [r0, #16]
1004d806:	4637      	mov	r7, r6
1004d808:	0205      	lsls	r5, r0, #8
1004d80a:	0a2d      	lsrs	r5, r5, #8
1004d80c:	b672      	cpsid	i
1004d80e:	69a0      	ldr	r0, [r4, #24]
1004d810:	4621      	mov	r1, r4
1004d812:	1a28      	subs	r0, r5, r0
1004d814:	0200      	lsls	r0, r0, #8
1004d816:	0a00      	lsrs	r0, r0, #8
1004d818:	3122      	adds	r1, #34	; 0x22
1004d81a:	f009 ff09 	bl	10057630 <system_time_trans_ext>
1004d81e:	6961      	ldr	r1, [r4, #20]
1004d820:	61a5      	str	r5, [r4, #24]
1004d822:	1840      	adds	r0, r0, r1
1004d824:	6160      	str	r0, [r4, #20]
1004d826:	4836      	ldr	r0, [pc, #216]	; (1004d900 <Timer_ProcessQ+0x114>)
1004d828:	6800      	ldr	r0, [r0, #0]
1004d82a:	3040      	adds	r0, #64	; 0x40
1004d82c:	79c1      	ldrb	r1, [r0, #7]
1004d82e:	068a      	lsls	r2, r1, #26
1004d830:	d463      	bmi.n	1004d8fa <Timer_ProcessQ+0x10e>
1004d832:	2220      	movs	r2, #32
1004d834:	4311      	orrs	r1, r2
1004d836:	71c1      	strb	r1, [r0, #7]
1004d838:	b662      	cpsie	i
1004d83a:	6825      	ldr	r5, [r4, #0]
1004d83c:	e014      	b.n	1004d868 <Timer_ProcessQ+0x7c>
1004d83e:	68a8      	ldr	r0, [r5, #8]
1004d840:	6961      	ldr	r1, [r4, #20]
1004d842:	1a40      	subs	r0, r0, r1
1004d844:	2800      	cmp	r0, #0
1004d846:	dc0a      	bgt.n	1004d85e <Timer_ProcessQ+0x72>
1004d848:	00ba      	lsls	r2, r7, #2
1004d84a:	a801      	add	r0, sp, #4
1004d84c:	1c76      	adds	r6, r6, #1
1004d84e:	5085      	str	r5, [r0, r2]
1004d850:	1c7f      	adds	r7, r7, #1
1004d852:	b2f6      	uxtb	r6, r6
1004d854:	b2ff      	uxtb	r7, r7
1004d856:	7b28      	ldrb	r0, [r5, #12]
1004d858:	f7ff ff66 	bl	1004d728 <TimerCallback>
1004d85c:	e003      	b.n	1004d866 <Timer_ProcessQ+0x7a>
1004d85e:	990e      	ldr	r1, [sp, #56]	; 0x38
1004d860:	4288      	cmp	r0, r1
1004d862:	d200      	bcs.n	1004d866 <Timer_ProcessQ+0x7a>
1004d864:	900e      	str	r0, [sp, #56]	; 0x38
1004d866:	682d      	ldr	r5, [r5, #0]
1004d868:	42a5      	cmp	r5, r4
1004d86a:	d1e8      	bne.n	1004d83e <Timer_ProcessQ+0x52>
1004d86c:	4620      	mov	r0, r4
1004d86e:	3008      	adds	r0, #8
1004d870:	2500      	movs	r5, #0
1004d872:	900c      	str	r0, [sp, #48]	; 0x30
1004d874:	3018      	adds	r0, #24
1004d876:	9012      	str	r0, [sp, #72]	; 0x48
1004d878:	e018      	b.n	1004d8ac <Timer_ProcessQ+0xc0>
1004d87a:	00af      	lsls	r7, r5, #2
1004d87c:	a801      	add	r0, sp, #4
1004d87e:	1e76      	subs	r6, r6, #1
1004d880:	59c1      	ldr	r1, [r0, r7]
1004d882:	b2f6      	uxtb	r6, r6
1004d884:	4620      	mov	r0, r4
1004d886:	f008 f824 	bl	100558d2 <List_Circular_Remove_Node>
1004d88a:	a801      	add	r0, sp, #4
1004d88c:	59c1      	ldr	r1, [r0, r7]
1004d88e:	980c      	ldr	r0, [sp, #48]	; 0x30
1004d890:	f008 f800 	bl	10055894 <List_Circular_Insert_Tail>
1004d894:	a801      	add	r0, sp, #4
1004d896:	59c0      	ldr	r0, [r0, r7]
1004d898:	7b00      	ldrb	r0, [r0, #12]
1004d89a:	283a      	cmp	r0, #58	; 0x3a
1004d89c:	d204      	bcs.n	1004d8a8 <Timer_ProcessQ+0xbc>
1004d89e:	9812      	ldr	r0, [sp, #72]	; 0x48
1004d8a0:	9912      	ldr	r1, [sp, #72]	; 0x48
1004d8a2:	7800      	ldrb	r0, [r0, #0]
1004d8a4:	1e40      	subs	r0, r0, #1
1004d8a6:	7008      	strb	r0, [r1, #0]
1004d8a8:	1c6d      	adds	r5, r5, #1
1004d8aa:	b2ed      	uxtb	r5, r5
1004d8ac:	2e00      	cmp	r6, #0
1004d8ae:	d1e4      	bne.n	1004d87a <Timer_ProcessQ+0x8e>
1004d8b0:	6820      	ldr	r0, [r4, #0]
1004d8b2:	42a0      	cmp	r0, r4
1004d8b4:	d017      	beq.n	1004d8e6 <Timer_ProcessQ+0xfa>
1004d8b6:	253d      	movs	r5, #61	; 0x3d
1004d8b8:	046d      	lsls	r5, r5, #17
1004d8ba:	4628      	mov	r0, r5
1004d8bc:	f009 feb0 	bl	10057620 <system_time_trans>
1004d8c0:	4601      	mov	r1, r0
1004d8c2:	980e      	ldr	r0, [sp, #56]	; 0x38
1004d8c4:	4281      	cmp	r1, r0
1004d8c6:	d801      	bhi.n	1004d8cc <Timer_ProcessQ+0xe0>
1004d8c8:	4628      	mov	r0, r5
1004d8ca:	e001      	b.n	1004d8d0 <Timer_ProcessQ+0xe4>
1004d8cc:	f009 fe46 	bl	1005755c <machine_time_trans>
1004d8d0:	69a1      	ldr	r1, [r4, #24]
1004d8d2:	1808      	adds	r0, r1, r0
1004d8d4:	0200      	lsls	r0, r0, #8
1004d8d6:	2101      	movs	r1, #1
1004d8d8:	0a00      	lsrs	r0, r0, #8
1004d8da:	0609      	lsls	r1, r1, #24
1004d8dc:	1840      	adds	r0, r0, r1
1004d8de:	f7ff fefb 	bl	1004d6d8 <Set_Host_Timer_value>
1004d8e2:	b013      	add	sp, #76	; 0x4c
1004d8e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004d8e6:	b672      	cpsid	i
1004d8e8:	2000      	movs	r0, #0
1004d8ea:	4905      	ldr	r1, [pc, #20]	; (1004d900 <Timer_ProcessQ+0x114>)
1004d8ec:	2207      	movs	r2, #7
1004d8ee:	6809      	ldr	r1, [r1, #0]
1004d8f0:	0212      	lsls	r2, r2, #8
1004d8f2:	1889      	adds	r1, r1, r2
1004d8f4:	6248      	str	r0, [r1, #36]	; 0x24
1004d8f6:	4903      	ldr	r1, [pc, #12]	; (1004d904 <Timer_ProcessQ+0x118>)
1004d8f8:	6088      	str	r0, [r1, #8]
1004d8fa:	b662      	cpsie	i
1004d8fc:	e7f1      	b.n	1004d8e2 <Timer_ProcessQ+0xf6>
1004d8fe:	0000      	.short	0x0000
1004d900:	20000d64 	.word	0x20000d64
1004d904:	48000040 	.word	0x48000040

1004d908 <Timer_StartOneShot>:
1004d908:	b510      	push	{r4, lr}
1004d90a:	4604      	mov	r4, r0
1004d90c:	2009      	movs	r0, #9
1004d90e:	06c0      	lsls	r0, r0, #27
1004d910:	6900      	ldr	r0, [r0, #16]
1004d912:	0200      	lsls	r0, r0, #8
1004d914:	0a00      	lsrs	r0, r0, #8
1004d916:	f000 f86f 	bl	1004d9f8 <Timer_sysTime32_convMachineTime>
1004d91a:	68a1      	ldr	r1, [r4, #8]
1004d91c:	f7ff fec0 	bl	1004d6a0 <HAL_VTimerAcc_sysT32_ms>
1004d920:	60a0      	str	r0, [r4, #8]
1004d922:	4620      	mov	r0, r4
1004d924:	f000 f802 	bl	1004d92c <Timer_StartOneShot_sysTime32>
1004d928:	bd10      	pop	{r4, pc}
	...

1004d92c <Timer_StartOneShot_sysTime32>:
1004d92c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d92e:	4d1b      	ldr	r5, [pc, #108]	; (1004d99c <Timer_StartOneShot_sysTime32+0x70>)
1004d930:	4606      	mov	r6, r0
1004d932:	21e1      	movs	r1, #225	; 0xe1
1004d934:	6828      	ldr	r0, [r5, #0]
1004d936:	00c9      	lsls	r1, r1, #3
1004d938:	1844      	adds	r4, r0, r1
1004d93a:	7b31      	ldrb	r1, [r6, #12]
1004d93c:	1e48      	subs	r0, r1, #1
1004d93e:	283e      	cmp	r0, #62	; 0x3e
1004d940:	d301      	bcc.n	1004d946 <Timer_StartOneShot_sysTime32+0x1a>
1004d942:	2042      	movs	r0, #66	; 0x42
1004d944:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d946:	4620      	mov	r0, r4
1004d948:	68a2      	ldr	r2, [r4, #8]
1004d94a:	3008      	adds	r0, #8
1004d94c:	4282      	cmp	r2, r0
1004d94e:	d005      	beq.n	1004d95c <Timer_StartOneShot_sysTime32+0x30>
1004d950:	293a      	cmp	r1, #58	; 0x3a
1004d952:	d205      	bcs.n	1004d960 <Timer_StartOneShot_sysTime32+0x34>
1004d954:	2120      	movs	r1, #32
1004d956:	5d09      	ldrb	r1, [r1, r4]
1004d958:	2907      	cmp	r1, #7
1004d95a:	d301      	bcc.n	1004d960 <Timer_StartOneShot_sysTime32+0x34>
1004d95c:	2064      	movs	r0, #100	; 0x64
1004d95e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d960:	4669      	mov	r1, sp
1004d962:	f007 ffa9 	bl	100558b8 <List_Circular_Remove_Head>
1004d966:	2210      	movs	r2, #16
1004d968:	4631      	mov	r1, r6
1004d96a:	9800      	ldr	r0, [sp, #0]
1004d96c:	f7f2 ff09 	bl	10040782 <Osal_MemCpy>
1004d970:	4620      	mov	r0, r4
1004d972:	9900      	ldr	r1, [sp, #0]
1004d974:	f007 ff8e 	bl	10055894 <List_Circular_Insert_Tail>
1004d978:	9800      	ldr	r0, [sp, #0]
1004d97a:	7b00      	ldrb	r0, [r0, #12]
1004d97c:	283a      	cmp	r0, #58	; 0x3a
1004d97e:	d203      	bcs.n	1004d988 <Timer_StartOneShot_sysTime32+0x5c>
1004d980:	3420      	adds	r4, #32
1004d982:	7820      	ldrb	r0, [r4, #0]
1004d984:	1c40      	adds	r0, r0, #1
1004d986:	7020      	strb	r0, [r4, #0]
1004d988:	b672      	cpsid	i
1004d98a:	6828      	ldr	r0, [r5, #0]
1004d98c:	22df      	movs	r2, #223	; 0xdf
1004d98e:	3040      	adds	r0, #64	; 0x40
1004d990:	79c1      	ldrb	r1, [r0, #7]
1004d992:	4011      	ands	r1, r2
1004d994:	71c1      	strb	r1, [r0, #7]
1004d996:	b662      	cpsie	i
1004d998:	2000      	movs	r0, #0
1004d99a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d99c:	20000d64 	.word	0x20000d64

1004d9a0 <Timer_StopOneShot>:
1004d9a0:	b570      	push	{r4, r5, r6, lr}
1004d9a2:	4e14      	ldr	r6, [pc, #80]	; (1004d9f4 <Timer_StopOneShot+0x54>)
1004d9a4:	22e1      	movs	r2, #225	; 0xe1
1004d9a6:	6831      	ldr	r1, [r6, #0]
1004d9a8:	00d2      	lsls	r2, r2, #3
1004d9aa:	188d      	adds	r5, r1, r2
1004d9ac:	682c      	ldr	r4, [r5, #0]
1004d9ae:	e01d      	b.n	1004d9ec <Timer_StopOneShot+0x4c>
1004d9b0:	7b01      	ldrb	r1, [r0, #12]
1004d9b2:	7b22      	ldrb	r2, [r4, #12]
1004d9b4:	4291      	cmp	r1, r2
1004d9b6:	d118      	bne.n	1004d9ea <Timer_StopOneShot+0x4a>
1004d9b8:	4621      	mov	r1, r4
1004d9ba:	4628      	mov	r0, r5
1004d9bc:	f007 ff89 	bl	100558d2 <List_Circular_Remove_Node>
1004d9c0:	4628      	mov	r0, r5
1004d9c2:	4621      	mov	r1, r4
1004d9c4:	3008      	adds	r0, #8
1004d9c6:	f007 ff65 	bl	10055894 <List_Circular_Insert_Tail>
1004d9ca:	7b20      	ldrb	r0, [r4, #12]
1004d9cc:	283a      	cmp	r0, #58	; 0x3a
1004d9ce:	d203      	bcs.n	1004d9d8 <Timer_StopOneShot+0x38>
1004d9d0:	3520      	adds	r5, #32
1004d9d2:	7828      	ldrb	r0, [r5, #0]
1004d9d4:	1e40      	subs	r0, r0, #1
1004d9d6:	7028      	strb	r0, [r5, #0]
1004d9d8:	b672      	cpsid	i
1004d9da:	6830      	ldr	r0, [r6, #0]
1004d9dc:	22df      	movs	r2, #223	; 0xdf
1004d9de:	3040      	adds	r0, #64	; 0x40
1004d9e0:	79c1      	ldrb	r1, [r0, #7]
1004d9e2:	4011      	ands	r1, r2
1004d9e4:	71c1      	strb	r1, [r0, #7]
1004d9e6:	b662      	cpsie	i
1004d9e8:	bd70      	pop	{r4, r5, r6, pc}
1004d9ea:	6824      	ldr	r4, [r4, #0]
1004d9ec:	42ac      	cmp	r4, r5
1004d9ee:	d1df      	bne.n	1004d9b0 <Timer_StopOneShot+0x10>
1004d9f0:	bd70      	pop	{r4, r5, r6, pc}
1004d9f2:	0000      	.short	0x0000
1004d9f4:	20000d64 	.word	0x20000d64

1004d9f8 <Timer_sysTime32_convMachineTime>:
1004d9f8:	b510      	push	{r4, lr}
1004d9fa:	4907      	ldr	r1, [pc, #28]	; (1004da18 <Timer_sysTime32_convMachineTime+0x20>)
1004d9fc:	22e1      	movs	r2, #225	; 0xe1
1004d9fe:	6809      	ldr	r1, [r1, #0]
1004da00:	00d2      	lsls	r2, r2, #3
1004da02:	188c      	adds	r4, r1, r2
1004da04:	69a1      	ldr	r1, [r4, #24]
1004da06:	1a40      	subs	r0, r0, r1
1004da08:	0200      	lsls	r0, r0, #8
1004da0a:	0a00      	lsrs	r0, r0, #8
1004da0c:	f009 fe08 	bl	10057620 <system_time_trans>
1004da10:	6961      	ldr	r1, [r4, #20]
1004da12:	1808      	adds	r0, r1, r0
1004da14:	bd10      	pop	{r4, pc}
1004da16:	0000      	.short	0x0000
1004da18:	20000d64 	.word	0x20000d64

1004da1c <L2C_Build_Command_Reject_Pdu>:
1004da1c:	b570      	push	{r4, r5, r6, lr}
1004da1e:	460e      	mov	r6, r1
1004da20:	4605      	mov	r5, r0
1004da22:	4601      	mov	r1, r0
1004da24:	2220      	movs	r2, #32
1004da26:	2000      	movs	r0, #0
1004da28:	f007 f800 	bl	10054a2c <PM_Get_Pckt>
1004da2c:	0004      	movs	r4, r0
1004da2e:	d023      	beq.n	1004da78 <L2C_Build_Command_Reject_Pdu+0x5c>
1004da30:	4628      	mov	r0, r5
1004da32:	f000 f935 	bl	1004dca0 <L2C_Get_Connection_Info>
1004da36:	0005      	movs	r5, r0
1004da38:	d027      	beq.n	1004da8a <L2C_Build_Command_Reject_Pdu+0x6e>
1004da3a:	7928      	ldrb	r0, [r5, #4]
1004da3c:	42b0      	cmp	r0, r6
1004da3e:	d124      	bne.n	1004da8a <L2C_Build_Command_Reject_Pdu+0x6e>
1004da40:	78a8      	ldrb	r0, [r5, #2]
1004da42:	0780      	lsls	r0, r0, #30
1004da44:	d41f      	bmi.n	1004da86 <L2C_Build_Command_Reject_Pdu+0x6a>
1004da46:	68a0      	ldr	r0, [r4, #8]
1004da48:	2101      	movs	r1, #1
1004da4a:	7301      	strb	r1, [r0, #12]
1004da4c:	68a0      	ldr	r0, [r4, #8]
1004da4e:	2100      	movs	r1, #0
1004da50:	7346      	strb	r6, [r0, #13]
1004da52:	68a0      	ldr	r0, [r4, #8]
1004da54:	2602      	movs	r6, #2
1004da56:	7386      	strb	r6, [r0, #14]
1004da58:	68a0      	ldr	r0, [r4, #8]
1004da5a:	73c1      	strb	r1, [r0, #15]
1004da5c:	68a0      	ldr	r0, [r4, #8]
1004da5e:	7401      	strb	r1, [r0, #16]
1004da60:	68a0      	ldr	r0, [r4, #8]
1004da62:	7441      	strb	r1, [r0, #17]
1004da64:	2006      	movs	r0, #6
1004da66:	80e0      	strh	r0, [r4, #6]
1004da68:	4621      	mov	r1, r4
1004da6a:	2005      	movs	r0, #5
1004da6c:	f000 fa88 	bl	1004df80 <L2C_Send_Data>
1004da70:	2800      	cmp	r0, #0
1004da72:	d003      	beq.n	1004da7c <L2C_Build_Command_Reject_Pdu+0x60>
1004da74:	2541      	movs	r5, #65	; 0x41
1004da76:	e009      	b.n	1004da8c <L2C_Build_Command_Reject_Pdu+0x70>
1004da78:	2564      	movs	r5, #100	; 0x64
1004da7a:	e00b      	b.n	1004da94 <L2C_Build_Command_Reject_Pdu+0x78>
1004da7c:	78a8      	ldrb	r0, [r5, #2]
1004da7e:	4330      	orrs	r0, r6
1004da80:	70a8      	strb	r0, [r5, #2]
1004da82:	2500      	movs	r5, #0
1004da84:	e006      	b.n	1004da94 <L2C_Build_Command_Reject_Pdu+0x78>
1004da86:	2546      	movs	r5, #70	; 0x46
1004da88:	e000      	b.n	1004da8c <L2C_Build_Command_Reject_Pdu+0x70>
1004da8a:	2542      	movs	r5, #66	; 0x42
1004da8c:	2100      	movs	r1, #0
1004da8e:	4620      	mov	r0, r4
1004da90:	f007 f828 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004da94:	4628      	mov	r0, r5
1004da96:	bd70      	pop	{r4, r5, r6, pc}

1004da98 <L2C_Build_Connect_Update_Req>:
1004da98:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1004da9a:	8804      	ldrh	r4, [r0, #0]
1004da9c:	8841      	ldrh	r1, [r0, #2]
1004da9e:	9101      	str	r1, [sp, #4]
1004daa0:	8886      	ldrh	r6, [r0, #4]
1004daa2:	88c7      	ldrh	r7, [r0, #6]
1004daa4:	8900      	ldrh	r0, [r0, #8]
1004daa6:	9000      	str	r0, [sp, #0]
1004daa8:	4620      	mov	r0, r4
1004daaa:	f000 f8f9 	bl	1004dca0 <L2C_Get_Connection_Info>
1004daae:	0005      	movs	r5, r0
1004dab0:	d066      	beq.n	1004db80 <L2C_Build_Connect_Update_Req+0xe8>
1004dab2:	78e8      	ldrb	r0, [r5, #3]
1004dab4:	2800      	cmp	r0, #0
1004dab6:	d063      	beq.n	1004db80 <L2C_Build_Connect_Update_Req+0xe8>
1004dab8:	78a8      	ldrb	r0, [r5, #2]
1004daba:	0700      	lsls	r0, r0, #28
1004dabc:	0f40      	lsrs	r0, r0, #29
1004dabe:	d001      	beq.n	1004dac4 <L2C_Build_Connect_Update_Req+0x2c>
1004dac0:	2546      	movs	r5, #70	; 0x46
1004dac2:	e05e      	b.n	1004db82 <L2C_Build_Connect_Update_Req+0xea>
1004dac4:	2220      	movs	r2, #32
1004dac6:	4621      	mov	r1, r4
1004dac8:	2000      	movs	r0, #0
1004daca:	f006 ffaf 	bl	10054a2c <PM_Get_Pckt>
1004dace:	0004      	movs	r4, r0
1004dad0:	d048      	beq.n	1004db64 <L2C_Build_Connect_Update_Req+0xcc>
1004dad2:	9901      	ldr	r1, [sp, #4]
1004dad4:	482c      	ldr	r0, [pc, #176]	; (1004db88 <L2C_Build_Connect_Update_Req+0xf0>)
1004dad6:	1f89      	subs	r1, r1, #6
1004dad8:	4281      	cmp	r1, r0
1004dada:	d84b      	bhi.n	1004db74 <L2C_Build_Connect_Update_Req+0xdc>
1004dadc:	1fb1      	subs	r1, r6, #6
1004dade:	4281      	cmp	r1, r0
1004dae0:	d848      	bhi.n	1004db74 <L2C_Build_Connect_Update_Req+0xdc>
1004dae2:	9801      	ldr	r0, [sp, #4]
1004dae4:	42b0      	cmp	r0, r6
1004dae6:	d845      	bhi.n	1004db74 <L2C_Build_Connect_Update_Req+0xdc>
1004dae8:	20ff      	movs	r0, #255	; 0xff
1004daea:	30f5      	adds	r0, #245	; 0xf5
1004daec:	4287      	cmp	r7, r0
1004daee:	d241      	bcs.n	1004db74 <L2C_Build_Connect_Update_Req+0xdc>
1004daf0:	9900      	ldr	r1, [sp, #0]
1004daf2:	1c78      	adds	r0, r7, #1
1004daf4:	4370      	muls	r0, r6
1004daf6:	0089      	lsls	r1, r1, #2
1004daf8:	4288      	cmp	r0, r1
1004dafa:	d83b      	bhi.n	1004db74 <L2C_Build_Connect_Update_Req+0xdc>
1004dafc:	4922      	ldr	r1, [pc, #136]	; (1004db88 <L2C_Build_Connect_Update_Req+0xf0>)
1004dafe:	9800      	ldr	r0, [sp, #0]
1004db00:	1f09      	subs	r1, r1, #4
1004db02:	380a      	subs	r0, #10
1004db04:	4288      	cmp	r0, r1
1004db06:	d835      	bhi.n	1004db74 <L2C_Build_Connect_Update_Req+0xdc>
1004db08:	68a0      	ldr	r0, [r4, #8]
1004db0a:	2112      	movs	r1, #18
1004db0c:	7301      	strb	r1, [r0, #12]
1004db0e:	68a0      	ldr	r0, [r4, #8]
1004db10:	78e9      	ldrb	r1, [r5, #3]
1004db12:	7341      	strb	r1, [r0, #13]
1004db14:	68a0      	ldr	r0, [r4, #8]
1004db16:	2108      	movs	r1, #8
1004db18:	7381      	strb	r1, [r0, #14]
1004db1a:	68a0      	ldr	r0, [r4, #8]
1004db1c:	2100      	movs	r1, #0
1004db1e:	73c1      	strb	r1, [r0, #15]
1004db20:	68a0      	ldr	r0, [r4, #8]
1004db22:	9901      	ldr	r1, [sp, #4]
1004db24:	7401      	strb	r1, [r0, #16]
1004db26:	9901      	ldr	r1, [sp, #4]
1004db28:	68a0      	ldr	r0, [r4, #8]
1004db2a:	0a09      	lsrs	r1, r1, #8
1004db2c:	7441      	strb	r1, [r0, #17]
1004db2e:	68a0      	ldr	r0, [r4, #8]
1004db30:	0a31      	lsrs	r1, r6, #8
1004db32:	7486      	strb	r6, [r0, #18]
1004db34:	68a0      	ldr	r0, [r4, #8]
1004db36:	74c1      	strb	r1, [r0, #19]
1004db38:	68a0      	ldr	r0, [r4, #8]
1004db3a:	0a39      	lsrs	r1, r7, #8
1004db3c:	7507      	strb	r7, [r0, #20]
1004db3e:	68a0      	ldr	r0, [r4, #8]
1004db40:	7541      	strb	r1, [r0, #21]
1004db42:	68a0      	ldr	r0, [r4, #8]
1004db44:	9900      	ldr	r1, [sp, #0]
1004db46:	7581      	strb	r1, [r0, #22]
1004db48:	9900      	ldr	r1, [sp, #0]
1004db4a:	68a0      	ldr	r0, [r4, #8]
1004db4c:	0a09      	lsrs	r1, r1, #8
1004db4e:	75c1      	strb	r1, [r0, #23]
1004db50:	200c      	movs	r0, #12
1004db52:	80e0      	strh	r0, [r4, #6]
1004db54:	4621      	mov	r1, r4
1004db56:	2005      	movs	r0, #5
1004db58:	f000 fa12 	bl	1004df80 <L2C_Send_Data>
1004db5c:	2800      	cmp	r0, #0
1004db5e:	d003      	beq.n	1004db68 <L2C_Build_Connect_Update_Req+0xd0>
1004db60:	2541      	movs	r5, #65	; 0x41
1004db62:	e008      	b.n	1004db76 <L2C_Build_Connect_Update_Req+0xde>
1004db64:	2564      	movs	r5, #100	; 0x64
1004db66:	e00c      	b.n	1004db82 <L2C_Build_Connect_Update_Req+0xea>
1004db68:	78a8      	ldrb	r0, [r5, #2]
1004db6a:	2106      	movs	r1, #6
1004db6c:	4308      	orrs	r0, r1
1004db6e:	70a8      	strb	r0, [r5, #2]
1004db70:	2500      	movs	r5, #0
1004db72:	e006      	b.n	1004db82 <L2C_Build_Connect_Update_Req+0xea>
1004db74:	2542      	movs	r5, #66	; 0x42
1004db76:	2100      	movs	r1, #0
1004db78:	4620      	mov	r0, r4
1004db7a:	f006 ffb3 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004db7e:	e000      	b.n	1004db82 <L2C_Build_Connect_Update_Req+0xea>
1004db80:	2542      	movs	r5, #66	; 0x42
1004db82:	4628      	mov	r0, r5
1004db84:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004db86:	0000      	.short	0x0000
1004db88:	00000c7a 	.word	0x00000c7a

1004db8c <L2C_Build_Connect_Update_Resp>:
1004db8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004db8e:	9800      	ldr	r0, [sp, #0]
1004db90:	460f      	mov	r7, r1
1004db92:	8801      	ldrh	r1, [r0, #0]
1004db94:	2601      	movs	r6, #1
1004db96:	2220      	movs	r2, #32
1004db98:	2000      	movs	r0, #0
1004db9a:	f006 ff47 	bl	10054a2c <PM_Get_Pckt>
1004db9e:	0004      	movs	r4, r0
1004dba0:	d016      	beq.n	1004dbd0 <L2C_Build_Connect_Update_Resp+0x44>
1004dba2:	9800      	ldr	r0, [sp, #0]
1004dba4:	8800      	ldrh	r0, [r0, #0]
1004dba6:	f000 f87b 	bl	1004dca0 <L2C_Get_Connection_Info>
1004dbaa:	0005      	movs	r5, r0
1004dbac:	d036      	beq.n	1004dc1c <L2C_Build_Connect_Update_Resp+0x90>
1004dbae:	7928      	ldrb	r0, [r5, #4]
1004dbb0:	42b8      	cmp	r0, r7
1004dbb2:	d133      	bne.n	1004dc1c <L2C_Build_Connect_Update_Resp+0x90>
1004dbb4:	78a8      	ldrb	r0, [r5, #2]
1004dbb6:	0741      	lsls	r1, r0, #29
1004dbb8:	d52e      	bpl.n	1004dc18 <L2C_Build_Connect_Update_Resp+0x8c>
1004dbba:	0780      	lsls	r0, r0, #30
1004dbbc:	d42c      	bmi.n	1004dc18 <L2C_Build_Connect_Update_Resp+0x8c>
1004dbbe:	9802      	ldr	r0, [sp, #8]
1004dbc0:	2800      	cmp	r0, #0
1004dbc2:	d008      	beq.n	1004dbd6 <L2C_Build_Connect_Update_Resp+0x4a>
1004dbc4:	9800      	ldr	r0, [sp, #0]
1004dbc6:	f004 fb67 	bl	10052298 <LL_Start_Connection_Update>
1004dbca:	2800      	cmp	r0, #0
1004dbcc:	d002      	beq.n	1004dbd4 <L2C_Build_Connect_Update_Resp+0x48>
1004dbce:	e002      	b.n	1004dbd6 <L2C_Build_Connect_Update_Resp+0x4a>
1004dbd0:	2564      	movs	r5, #100	; 0x64
1004dbd2:	e028      	b.n	1004dc26 <L2C_Build_Connect_Update_Resp+0x9a>
1004dbd4:	2600      	movs	r6, #0
1004dbd6:	68a0      	ldr	r0, [r4, #8]
1004dbd8:	2113      	movs	r1, #19
1004dbda:	7301      	strb	r1, [r0, #12]
1004dbdc:	68a0      	ldr	r0, [r4, #8]
1004dbde:	2100      	movs	r1, #0
1004dbe0:	7347      	strb	r7, [r0, #13]
1004dbe2:	68a0      	ldr	r0, [r4, #8]
1004dbe4:	2702      	movs	r7, #2
1004dbe6:	7387      	strb	r7, [r0, #14]
1004dbe8:	68a0      	ldr	r0, [r4, #8]
1004dbea:	73c1      	strb	r1, [r0, #15]
1004dbec:	68a0      	ldr	r0, [r4, #8]
1004dbee:	0a31      	lsrs	r1, r6, #8
1004dbf0:	7406      	strb	r6, [r0, #16]
1004dbf2:	68a0      	ldr	r0, [r4, #8]
1004dbf4:	7441      	strb	r1, [r0, #17]
1004dbf6:	2006      	movs	r0, #6
1004dbf8:	80e0      	strh	r0, [r4, #6]
1004dbfa:	4621      	mov	r1, r4
1004dbfc:	2005      	movs	r0, #5
1004dbfe:	f000 f9bf 	bl	1004df80 <L2C_Send_Data>
1004dc02:	2800      	cmp	r0, #0
1004dc04:	d001      	beq.n	1004dc0a <L2C_Build_Connect_Update_Resp+0x7e>
1004dc06:	2541      	movs	r5, #65	; 0x41
1004dc08:	e009      	b.n	1004dc1e <L2C_Build_Connect_Update_Resp+0x92>
1004dc0a:	78a8      	ldrb	r0, [r5, #2]
1004dc0c:	21fb      	movs	r1, #251	; 0xfb
1004dc0e:	4008      	ands	r0, r1
1004dc10:	4338      	orrs	r0, r7
1004dc12:	70a8      	strb	r0, [r5, #2]
1004dc14:	2500      	movs	r5, #0
1004dc16:	e006      	b.n	1004dc26 <L2C_Build_Connect_Update_Resp+0x9a>
1004dc18:	2546      	movs	r5, #70	; 0x46
1004dc1a:	e000      	b.n	1004dc1e <L2C_Build_Connect_Update_Resp+0x92>
1004dc1c:	2542      	movs	r5, #66	; 0x42
1004dc1e:	2100      	movs	r1, #0
1004dc20:	4620      	mov	r0, r4
1004dc22:	f006 ff5f 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004dc26:	4628      	mov	r0, r5
1004dc28:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004dc2a <L2C_Connection_Complete_Handler>:
1004dc2a:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004dc2c:	4614      	mov	r4, r2
1004dc2e:	460d      	mov	r5, r1
1004dc30:	2800      	cmp	r0, #0
1004dc32:	d11e      	bne.n	1004dc72 <L2C_Connection_Complete_Handler+0x48>
1004dc34:	2d05      	cmp	r5, #5
1004dc36:	d002      	beq.n	1004dc3e <L2C_Connection_Complete_Handler+0x14>
1004dc38:	2d0b      	cmp	r5, #11
1004dc3a:	d007      	beq.n	1004dc4c <L2C_Connection_Complete_Handler+0x22>
1004dc3c:	e011      	b.n	1004dc62 <L2C_Connection_Complete_Handler+0x38>
1004dc3e:	7962      	ldrb	r2, [r4, #5]
1004dc40:	7921      	ldrb	r1, [r4, #4]
1004dc42:	8860      	ldrh	r0, [r4, #2]
1004dc44:	1da3      	adds	r3, r4, #6
1004dc46:	f00c ff4d 	bl	1005aae4 <SMP_hci_le_connection_complete_evt_hndl>
1004dc4a:	e00a      	b.n	1004dc62 <L2C_Connection_Complete_Handler+0x38>
1004dc4c:	4621      	mov	r1, r4
1004dc4e:	3112      	adds	r1, #18
1004dc50:	1f88      	subs	r0, r1, #6
1004dc52:	9101      	str	r1, [sp, #4]
1004dc54:	9000      	str	r0, [sp, #0]
1004dc56:	7962      	ldrb	r2, [r4, #5]
1004dc58:	7921      	ldrb	r1, [r4, #4]
1004dc5a:	8860      	ldrh	r0, [r4, #2]
1004dc5c:	1da3      	adds	r3, r4, #6
1004dc5e:	f00c ff58 	bl	1005ab12 <SMP_hci_le_enhanced_connection_complete_evt_hndl>
1004dc62:	4621      	mov	r1, r4
1004dc64:	4628      	mov	r0, r5
1004dc66:	f7fd fe3d 	bl	1004b8e4 <Gatt_Server_L2C_Handler_ISR>
1004dc6a:	4621      	mov	r1, r4
1004dc6c:	4628      	mov	r0, r5
1004dc6e:	f000 fab5 	bl	1004e1dc <L2C_Signal_Channel_Handler_ISR>
1004dc72:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1004dc74 <L2C_Connection_Complete_Signal_Handler>:
1004dc74:	b570      	push	{r4, r5, r6, lr}
1004dc76:	4605      	mov	r5, r0
1004dc78:	460c      	mov	r4, r1
1004dc7a:	2000      	movs	r0, #0
1004dc7c:	f000 f810 	bl	1004dca0 <L2C_Get_Connection_Info>
1004dc80:	2800      	cmp	r0, #0
1004dc82:	d00b      	beq.n	1004dc9c <L2C_Connection_Complete_Signal_Handler+0x28>
1004dc84:	0529      	lsls	r1, r5, #20
1004dc86:	0d09      	lsrs	r1, r1, #20
1004dc88:	8001      	strh	r1, [r0, #0]
1004dc8a:	2100      	movs	r1, #0
1004dc8c:	7081      	strb	r1, [r0, #2]
1004dc8e:	2c00      	cmp	r4, #0
1004dc90:	d101      	bne.n	1004dc96 <L2C_Connection_Complete_Signal_Handler+0x22>
1004dc92:	2108      	movs	r1, #8
1004dc94:	7081      	strb	r1, [r0, #2]
1004dc96:	2101      	movs	r1, #1
1004dc98:	7101      	strb	r1, [r0, #4]
1004dc9a:	70c1      	strb	r1, [r0, #3]
1004dc9c:	bd70      	pop	{r4, r5, r6, pc}
	...

1004dca0 <L2C_Get_Connection_Info>:
1004dca0:	b530      	push	{r4, r5, lr}
1004dca2:	4602      	mov	r2, r0
1004dca4:	480a      	ldr	r0, [pc, #40]	; (1004dcd0 <L2C_Get_Connection_Info+0x30>)
1004dca6:	230f      	movs	r3, #15
1004dca8:	6800      	ldr	r0, [r0, #0]
1004dcaa:	01db      	lsls	r3, r3, #7
1004dcac:	2100      	movs	r1, #0
1004dcae:	18c3      	adds	r3, r0, r3
1004dcb0:	30a0      	adds	r0, #160	; 0xa0
1004dcb2:	7b04      	ldrb	r4, [r0, #12]
1004dcb4:	e007      	b.n	1004dcc6 <L2C_Get_Connection_Info+0x26>
1004dcb6:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
1004dcb8:	010d      	lsls	r5, r1, #4
1004dcba:	1940      	adds	r0, r0, r5
1004dcbc:	8805      	ldrh	r5, [r0, #0]
1004dcbe:	4295      	cmp	r5, r2
1004dcc0:	d004      	beq.n	1004dccc <L2C_Get_Connection_Info+0x2c>
1004dcc2:	1c49      	adds	r1, r1, #1
1004dcc4:	b2c9      	uxtb	r1, r1
1004dcc6:	428c      	cmp	r4, r1
1004dcc8:	d8f5      	bhi.n	1004dcb6 <L2C_Get_Connection_Info+0x16>
1004dcca:	2000      	movs	r0, #0
1004dccc:	bd30      	pop	{r4, r5, pc}
1004dcce:	0000      	.short	0x0000
1004dcd0:	20000d64 	.word	0x20000d64

1004dcd4 <L2C_Get_Connection_Info_Index>:
1004dcd4:	b530      	push	{r4, r5, lr}
1004dcd6:	490a      	ldr	r1, [pc, #40]	; (1004dd00 <L2C_Get_Connection_Info_Index+0x2c>)
1004dcd8:	230f      	movs	r3, #15
1004dcda:	6809      	ldr	r1, [r1, #0]
1004dcdc:	4602      	mov	r2, r0
1004dcde:	01db      	lsls	r3, r3, #7
1004dce0:	2000      	movs	r0, #0
1004dce2:	18cb      	adds	r3, r1, r3
1004dce4:	31a0      	adds	r1, #160	; 0xa0
1004dce6:	7b09      	ldrb	r1, [r1, #12]
1004dce8:	e007      	b.n	1004dcfa <L2C_Get_Connection_Info_Index+0x26>
1004dcea:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
1004dcec:	0105      	lsls	r5, r0, #4
1004dcee:	1964      	adds	r4, r4, r5
1004dcf0:	8824      	ldrh	r4, [r4, #0]
1004dcf2:	4294      	cmp	r4, r2
1004dcf4:	d003      	beq.n	1004dcfe <L2C_Get_Connection_Info_Index+0x2a>
1004dcf6:	1c40      	adds	r0, r0, #1
1004dcf8:	b2c0      	uxtb	r0, r0
1004dcfa:	4281      	cmp	r1, r0
1004dcfc:	d8f5      	bhi.n	1004dcea <L2C_Get_Connection_Info_Index+0x16>
1004dcfe:	bd30      	pop	{r4, r5, pc}
1004dd00:	20000d64 	.word	0x20000d64

1004dd04 <L2C_Get_PDU_Len>:
1004dd04:	6880      	ldr	r0, [r0, #8]
1004dd06:	7a01      	ldrb	r1, [r0, #8]
1004dd08:	7a40      	ldrb	r0, [r0, #9]
1004dd0a:	0200      	lsls	r0, r0, #8
1004dd0c:	1808      	adds	r0, r1, r0
1004dd0e:	b280      	uxth	r0, r0
1004dd10:	4770      	bx	lr
	...

1004dd14 <L2C_Init>:
1004dd14:	b570      	push	{r4, r5, r6, lr}
1004dd16:	2300      	movs	r3, #0
1004dd18:	4a13      	ldr	r2, [pc, #76]	; (1004dd68 <L2C_Init+0x54>)
1004dd1a:	e01d      	b.n	1004dd58 <L2C_Init+0x44>
1004dd1c:	250f      	movs	r5, #15
1004dd1e:	01ed      	lsls	r5, r5, #7
1004dd20:	1940      	adds	r0, r0, r5
1004dd22:	0119      	lsls	r1, r3, #4
1004dd24:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
1004dd26:	2400      	movs	r4, #0
1004dd28:	1cc8      	adds	r0, r1, #3
1004dd2a:	5434      	strb	r4, [r6, r0]
1004dd2c:	6810      	ldr	r0, [r2, #0]
1004dd2e:	1940      	adds	r0, r0, r5
1004dd30:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
1004dd32:	1d08      	adds	r0, r1, #4
1004dd34:	5434      	strb	r4, [r6, r0]
1004dd36:	6810      	ldr	r0, [r2, #0]
1004dd38:	1940      	adds	r0, r0, r5
1004dd3a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004dd3c:	5244      	strh	r4, [r0, r1]
1004dd3e:	6810      	ldr	r0, [r2, #0]
1004dd40:	1940      	adds	r0, r0, r5
1004dd42:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
1004dd44:	4608      	mov	r0, r1
1004dd46:	3008      	adds	r0, #8
1004dd48:	5234      	strh	r4, [r6, r0]
1004dd4a:	6810      	ldr	r0, [r2, #0]
1004dd4c:	310c      	adds	r1, #12
1004dd4e:	1940      	adds	r0, r0, r5
1004dd50:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004dd52:	1c5b      	adds	r3, r3, #1
1004dd54:	5044      	str	r4, [r0, r1]
1004dd56:	b2db      	uxtb	r3, r3
1004dd58:	6810      	ldr	r0, [r2, #0]
1004dd5a:	21ac      	movs	r1, #172	; 0xac
1004dd5c:	5c09      	ldrb	r1, [r1, r0]
1004dd5e:	4299      	cmp	r1, r3
1004dd60:	d8dc      	bhi.n	1004dd1c <L2C_Init+0x8>
1004dd62:	2000      	movs	r0, #0
1004dd64:	bd70      	pop	{r4, r5, r6, pc}
1004dd66:	0000      	.short	0x0000
1004dd68:	20000d64 	.word	0x20000d64

1004dd6c <L2C_Mux_Acl_Packet>:
1004dd6c:	b510      	push	{r4, lr}
1004dd6e:	4602      	mov	r2, r0
1004dd70:	6888      	ldr	r0, [r1, #8]
1004dd72:	460c      	mov	r4, r1
1004dd74:	7a81      	ldrb	r1, [r0, #10]
1004dd76:	7ac0      	ldrb	r0, [r0, #11]
1004dd78:	0200      	lsls	r0, r0, #8
1004dd7a:	1808      	adds	r0, r1, r0
1004dd7c:	b281      	uxth	r1, r0
1004dd7e:	88e0      	ldrh	r0, [r4, #6]
1004dd80:	1f00      	subs	r0, r0, #4
1004dd82:	80e0      	strh	r0, [r4, #6]
1004dd84:	2904      	cmp	r1, #4
1004dd86:	d009      	beq.n	1004dd9c <L2C_Mux_Acl_Packet+0x30>
1004dd88:	2905      	cmp	r1, #5
1004dd8a:	d00c      	beq.n	1004dda6 <L2C_Mux_Acl_Packet+0x3a>
1004dd8c:	2906      	cmp	r1, #6
1004dd8e:	d00f      	beq.n	1004ddb0 <L2C_Mux_Acl_Packet+0x44>
1004dd90:	2101      	movs	r1, #1
1004dd92:	4620      	mov	r0, r4
1004dd94:	f006 fea6 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004dd98:	2000      	movs	r0, #0
1004dd9a:	bd10      	pop	{r4, pc}
1004dd9c:	4621      	mov	r1, r4
1004dd9e:	4610      	mov	r0, r2
1004dda0:	f7fd fc92 	bl	1004b6c8 <Gatt_Server_L2C_Handler>
1004dda4:	e008      	b.n	1004ddb8 <L2C_Mux_Acl_Packet+0x4c>
1004dda6:	4621      	mov	r1, r4
1004dda8:	4610      	mov	r0, r2
1004ddaa:	f000 f93f 	bl	1004e02c <L2C_Signal_Channel_Handler>
1004ddae:	e003      	b.n	1004ddb8 <L2C_Mux_Acl_Packet+0x4c>
1004ddb0:	4621      	mov	r1, r4
1004ddb2:	4610      	mov	r0, r2
1004ddb4:	f00c fc54 	bl	1005a660 <SMP_acl_data_hndl>
1004ddb8:	2800      	cmp	r0, #0
1004ddba:	d0ee      	beq.n	1004dd9a <L2C_Mux_Acl_Packet+0x2e>
1004ddbc:	88e1      	ldrh	r1, [r4, #6]
1004ddbe:	1d09      	adds	r1, r1, #4
1004ddc0:	80e1      	strh	r1, [r4, #6]
1004ddc2:	bd10      	pop	{r4, pc}

1004ddc4 <L2C_Rcv_Data>:
1004ddc4:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004ddc6:	b081      	sub	sp, #4
1004ddc8:	460d      	mov	r5, r1
1004ddca:	2600      	movs	r6, #0
1004ddcc:	8888      	ldrh	r0, [r1, #4]
1004ddce:	f7ff ff67 	bl	1004dca0 <L2C_Get_Connection_Info>
1004ddd2:	0007      	movs	r7, r0
1004ddd4:	d056      	beq.n	1004de84 <L2C_Rcv_Data+0xc0>
1004ddd6:	7b28      	ldrb	r0, [r5, #12]
1004ddd8:	463c      	mov	r4, r7
1004ddda:	3408      	adds	r4, #8
1004dddc:	9000      	str	r0, [sp, #0]
1004ddde:	2802      	cmp	r0, #2
1004dde0:	68f8      	ldr	r0, [r7, #12]
1004dde2:	d033      	beq.n	1004de4c <L2C_Rcv_Data+0x88>
1004dde4:	2800      	cmp	r0, #0
1004dde6:	d045      	beq.n	1004de74 <L2C_Rcv_Data+0xb0>
1004dde8:	88e8      	ldrh	r0, [r5, #6]
1004ddea:	2800      	cmp	r0, #0
1004ddec:	d010      	beq.n	1004de10 <L2C_Rcv_Data+0x4c>
1004ddee:	8821      	ldrh	r1, [r4, #0]
1004ddf0:	1840      	adds	r0, r0, r1
1004ddf2:	8020      	strh	r0, [r4, #0]
1004ddf4:	4628      	mov	r0, r5
1004ddf6:	f006 fdef 	bl	100549d8 <PM_Extract_Pdu_MBuff>
1004ddfa:	4601      	mov	r1, r0
1004ddfc:	6860      	ldr	r0, [r4, #4]
1004ddfe:	6880      	ldr	r0, [r0, #8]
1004de00:	f005 fb6a 	bl	100534d8 <Mem_Buff_Append>
1004de04:	2001      	movs	r0, #1
1004de06:	6861      	ldr	r1, [r4, #4]
1004de08:	f006 fda6 	bl	10054958 <PM_Compact>
1004de0c:	2000      	movs	r0, #0
1004de0e:	80e8      	strh	r0, [r5, #6]
1004de10:	8820      	ldrh	r0, [r4, #0]
1004de12:	2804      	cmp	r0, #4
1004de14:	d328      	bcc.n	1004de68 <L2C_Rcv_Data+0xa4>
1004de16:	6860      	ldr	r0, [r4, #4]
1004de18:	f7ff ff74 	bl	1004dd04 <L2C_Get_PDU_Len>
1004de1c:	1d00      	adds	r0, r0, #4
1004de1e:	8821      	ldrh	r1, [r4, #0]
1004de20:	b280      	uxth	r0, r0
1004de22:	4281      	cmp	r1, r0
1004de24:	d826      	bhi.n	1004de74 <L2C_Rcv_Data+0xb0>
1004de26:	4281      	cmp	r1, r0
1004de28:	d11b      	bne.n	1004de62 <L2C_Rcv_Data+0x9e>
1004de2a:	6861      	ldr	r1, [r4, #4]
1004de2c:	80c8      	strh	r0, [r1, #6]
1004de2e:	6861      	ldr	r1, [r4, #4]
1004de30:	9801      	ldr	r0, [sp, #4]
1004de32:	f7ff ff9b 	bl	1004dd6c <L2C_Mux_Acl_Packet>
1004de36:	4601      	mov	r1, r0
1004de38:	2000      	movs	r0, #0
1004de3a:	2900      	cmp	r1, #0
1004de3c:	d00e      	beq.n	1004de5c <L2C_Rcv_Data+0x98>
1004de3e:	6861      	ldr	r1, [r4, #4]
1004de40:	42a9      	cmp	r1, r5
1004de42:	d101      	bne.n	1004de48 <L2C_Rcv_Data+0x84>
1004de44:	6060      	str	r0, [r4, #4]
1004de46:	8020      	strh	r0, [r4, #0]
1004de48:	2645      	movs	r6, #69	; 0x45
1004de4a:	e01f      	b.n	1004de8c <L2C_Rcv_Data+0xc8>
1004de4c:	2800      	cmp	r0, #0
1004de4e:	d001      	beq.n	1004de54 <L2C_Rcv_Data+0x90>
1004de50:	2645      	movs	r6, #69	; 0x45
1004de52:	e7dd      	b.n	1004de10 <L2C_Rcv_Data+0x4c>
1004de54:	6065      	str	r5, [r4, #4]
1004de56:	88e8      	ldrh	r0, [r5, #6]
1004de58:	8020      	strh	r0, [r4, #0]
1004de5a:	e7d9      	b.n	1004de10 <L2C_Rcv_Data+0x4c>
1004de5c:	6060      	str	r0, [r4, #4]
1004de5e:	8020      	strh	r0, [r4, #0]
1004de60:	e00b      	b.n	1004de7a <L2C_Rcv_Data+0xb6>
1004de62:	2e45      	cmp	r6, #69	; 0x45
1004de64:	d006      	beq.n	1004de74 <L2C_Rcv_Data+0xb0>
1004de66:	e008      	b.n	1004de7a <L2C_Rcv_Data+0xb6>
1004de68:	2e45      	cmp	r6, #69	; 0x45
1004de6a:	d106      	bne.n	1004de7a <L2C_Rcv_Data+0xb6>
1004de6c:	4638      	mov	r0, r7
1004de6e:	f000 f9c7 	bl	1004e200 <L2C_discard_accumulated_acl_data>
1004de72:	e00b      	b.n	1004de8c <L2C_Rcv_Data+0xc8>
1004de74:	4638      	mov	r0, r7
1004de76:	f000 f9c3 	bl	1004e200 <L2C_discard_accumulated_acl_data>
1004de7a:	2e00      	cmp	r6, #0
1004de7c:	d106      	bne.n	1004de8c <L2C_Rcv_Data+0xc8>
1004de7e:	9800      	ldr	r0, [sp, #0]
1004de80:	2801      	cmp	r0, #1
1004de82:	d103      	bne.n	1004de8c <L2C_Rcv_Data+0xc8>
1004de84:	2101      	movs	r1, #1
1004de86:	4628      	mov	r0, r5
1004de88:	f006 fe2c 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004de8c:	4630      	mov	r0, r6
1004de8e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004de90 <L2C_Rcv_Event_Handler>:
1004de90:	4602      	mov	r2, r0
1004de92:	b510      	push	{r4, lr}
1004de94:	2000      	movs	r0, #0
1004de96:	2a00      	cmp	r2, #0
1004de98:	d005      	beq.n	1004dea6 <L2C_Rcv_Event_Handler+0x16>
1004de9a:	2a01      	cmp	r2, #1
1004de9c:	d102      	bne.n	1004dea4 <L2C_Rcv_Event_Handler+0x14>
1004de9e:	4610      	mov	r0, r2
1004dea0:	f7ff ff90 	bl	1004ddc4 <L2C_Rcv_Data>
1004dea4:	bd10      	pop	{r4, pc}
1004dea6:	4610      	mov	r0, r2
1004dea8:	f7ff ff60 	bl	1004dd6c <L2C_Mux_Acl_Packet>
1004deac:	bd10      	pop	{r4, pc}

1004deae <L2C_Rcv_Event_Handler_ISR>:
1004deae:	b570      	push	{r4, r5, r6, lr}
1004deb0:	4605      	mov	r5, r0
1004deb2:	1e80      	subs	r0, r0, #2
1004deb4:	460c      	mov	r4, r1
1004deb6:	0003      	movs	r3, r0
1004deb8:	f7fe fbf7 	bl	1004c6aa <__ARM_common_switch8>
1004debc:	1d1d0c0a 	.word	0x1d1d0c0a
1004dec0:	0b0b1706 	.word	0x0b0b1706
1004dec4:	0b060b0b 	.word	0x0b060b0b
1004dec8:	460a      	mov	r2, r1
1004deca:	7820      	ldrb	r0, [r4, #0]
1004decc:	4629      	mov	r1, r5
1004dece:	f7ff feac 	bl	1004dc2a <L2C_Connection_Complete_Handler>
1004ded2:	bd70      	pop	{r4, r5, r6, pc}
1004ded4:	4628      	mov	r0, r5
1004ded6:	f7fd fd05 	bl	1004b8e4 <Gatt_Server_L2C_Handler_ISR>
1004deda:	8860      	ldrh	r0, [r4, #2]
1004dedc:	f00c fd52 	bl	1005a984 <SMP_hci_disconnection_complete_evt_hndl>
1004dee0:	4621      	mov	r1, r4
1004dee2:	4628      	mov	r0, r5
1004dee4:	f000 f97a 	bl	1004e1dc <L2C_Signal_Channel_Handler_ISR>
1004dee8:	bd70      	pop	{r4, r5, r6, pc}
1004deea:	894a      	ldrh	r2, [r1, #10]
1004deec:	8808      	ldrh	r0, [r1, #0]
1004deee:	1ca1      	adds	r1, r4, #2
1004def0:	f00c fe38 	bl	1005ab64 <SMP_hci_le_long_term_key_request_evt_hndl>
1004def4:	bd70      	pop	{r4, r5, r6, pc}
1004def6:	8862      	ldrh	r2, [r4, #2]
1004def8:	7809      	ldrb	r1, [r1, #0]
1004defa:	4628      	mov	r0, r5
1004defc:	f00c fd62 	bl	1005a9c4 <SMP_hci_encryption_change_evt_hndl>
1004df00:	bd70      	pop	{r4, r5, r6, pc}
	...

1004df04 <L2C_Reset_To_Closed_State>:
1004df04:	b5f0      	push	{r4, r5, r6, r7, lr}
1004df06:	b085      	sub	sp, #20
1004df08:	f7ff fee4 	bl	1004dcd4 <L2C_Get_Connection_Info_Index>
1004df0c:	4d1b      	ldr	r5, [pc, #108]	; (1004df7c <L2C_Reset_To_Closed_State+0x78>)
1004df0e:	4604      	mov	r4, r0
1004df10:	6828      	ldr	r0, [r5, #0]
1004df12:	30a0      	adds	r0, #160	; 0xa0
1004df14:	7b00      	ldrb	r0, [r0, #12]
1004df16:	42a0      	cmp	r0, r4
1004df18:	d92d      	bls.n	1004df76 <L2C_Reset_To_Closed_State+0x72>
1004df1a:	4620      	mov	r0, r4
1004df1c:	3032      	adds	r0, #50	; 0x32
1004df1e:	4669      	mov	r1, sp
1004df20:	7308      	strb	r0, [r1, #12]
1004df22:	4668      	mov	r0, sp
1004df24:	f7ff fd3c 	bl	1004d9a0 <Timer_StopOneShot>
1004df28:	260f      	movs	r6, #15
1004df2a:	6828      	ldr	r0, [r5, #0]
1004df2c:	01f6      	lsls	r6, r6, #7
1004df2e:	1980      	adds	r0, r0, r6
1004df30:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1004df32:	2100      	movs	r1, #0
1004df34:	0124      	lsls	r4, r4, #4
1004df36:	5311      	strh	r1, [r2, r4]
1004df38:	6828      	ldr	r0, [r5, #0]
1004df3a:	4627      	mov	r7, r4
1004df3c:	1980      	adds	r0, r0, r6
1004df3e:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1004df40:	1ce0      	adds	r0, r4, #3
1004df42:	5411      	strb	r1, [r2, r0]
1004df44:	6828      	ldr	r0, [r5, #0]
1004df46:	370c      	adds	r7, #12
1004df48:	1980      	adds	r0, r0, r6
1004df4a:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1004df4c:	1d20      	adds	r0, r4, #4
1004df4e:	5411      	strb	r1, [r2, r0]
1004df50:	6828      	ldr	r0, [r5, #0]
1004df52:	1980      	adds	r0, r0, r6
1004df54:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004df56:	59c0      	ldr	r0, [r0, r7]
1004df58:	2800      	cmp	r0, #0
1004df5a:	d00c      	beq.n	1004df76 <L2C_Reset_To_Closed_State+0x72>
1004df5c:	2101      	movs	r1, #1
1004df5e:	f006 fdc1 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004df62:	6829      	ldr	r1, [r5, #0]
1004df64:	2000      	movs	r0, #0
1004df66:	1989      	adds	r1, r1, r6
1004df68:	6fc9      	ldr	r1, [r1, #124]	; 0x7c
1004df6a:	51c8      	str	r0, [r1, r7]
1004df6c:	6829      	ldr	r1, [r5, #0]
1004df6e:	1989      	adds	r1, r1, r6
1004df70:	6fc9      	ldr	r1, [r1, #124]	; 0x7c
1004df72:	3408      	adds	r4, #8
1004df74:	5308      	strh	r0, [r1, r4]
1004df76:	b005      	add	sp, #20
1004df78:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004df7a:	0000      	.short	0x0000
1004df7c:	20000d64 	.word	0x20000d64

1004df80 <L2C_Send_Data>:
1004df80:	b510      	push	{r4, lr}
1004df82:	460c      	mov	r4, r1
1004df84:	4601      	mov	r1, r0
1004df86:	2804      	cmp	r0, #4
1004df88:	d005      	beq.n	1004df96 <L2C_Send_Data+0x16>
1004df8a:	2905      	cmp	r1, #5
1004df8c:	d003      	beq.n	1004df96 <L2C_Send_Data+0x16>
1004df8e:	2906      	cmp	r1, #6
1004df90:	d001      	beq.n	1004df96 <L2C_Send_Data+0x16>
1004df92:	2050      	movs	r0, #80	; 0x50
1004df94:	bd10      	pop	{r4, pc}
1004df96:	68a0      	ldr	r0, [r4, #8]
1004df98:	79a2      	ldrb	r2, [r4, #6]
1004df9a:	7202      	strb	r2, [r0, #8]
1004df9c:	88e0      	ldrh	r0, [r4, #6]
1004df9e:	0a02      	lsrs	r2, r0, #8
1004dfa0:	68a0      	ldr	r0, [r4, #8]
1004dfa2:	7242      	strb	r2, [r0, #9]
1004dfa4:	68a0      	ldr	r0, [r4, #8]
1004dfa6:	7281      	strb	r1, [r0, #10]
1004dfa8:	68a0      	ldr	r0, [r4, #8]
1004dfaa:	0a09      	lsrs	r1, r1, #8
1004dfac:	72c1      	strb	r1, [r0, #11]
1004dfae:	88e0      	ldrh	r0, [r4, #6]
1004dfb0:	1d00      	adds	r0, r0, #4
1004dfb2:	80e0      	strh	r0, [r4, #6]
1004dfb4:	2002      	movs	r0, #2
1004dfb6:	7320      	strb	r0, [r4, #12]
1004dfb8:	4620      	mov	r0, r4
1004dfba:	f00e fce9 	bl	1005c990 <Acl_Transmit_Data>
1004dfbe:	2800      	cmp	r0, #0
1004dfc0:	d0e8      	beq.n	1004df94 <L2C_Send_Data+0x14>
1004dfc2:	88e0      	ldrh	r0, [r4, #6]
1004dfc4:	1f00      	subs	r0, r0, #4
1004dfc6:	80e0      	strh	r0, [r4, #6]
1004dfc8:	2041      	movs	r0, #65	; 0x41
1004dfca:	bd10      	pop	{r4, pc}

1004dfcc <L2C_SigChan_Req_TimeOut_Handler>:
1004dfcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004dfce:	3832      	subs	r0, #50	; 0x32
1004dfd0:	0601      	lsls	r1, r0, #24
1004dfd2:	2002      	movs	r0, #2
1004dfd4:	4d14      	ldr	r5, [pc, #80]	; (1004e028 <L2C_SigChan_Req_TimeOut_Handler+0x5c>)
1004dfd6:	9000      	str	r0, [sp, #0]
1004dfd8:	260f      	movs	r6, #15
1004dfda:	6828      	ldr	r0, [r5, #0]
1004dfdc:	01f6      	lsls	r6, r6, #7
1004dfde:	0d0c      	lsrs	r4, r1, #20
1004dfe0:	1982      	adds	r2, r0, r6
1004dfe2:	2137      	movs	r1, #55	; 0x37
1004dfe4:	0149      	lsls	r1, r1, #5
1004dfe6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
1004dfe8:	1841      	adds	r1, r0, r1
1004dfea:	7ac9      	ldrb	r1, [r1, #11]
1004dfec:	5b17      	ldrh	r7, [r2, r4]
1004dfee:	2301      	movs	r3, #1
1004dff0:	0749      	lsls	r1, r1, #29
1004dff2:	d50d      	bpl.n	1004e010 <L2C_SigChan_Req_TimeOut_Handler+0x44>
1004dff4:	02d9      	lsls	r1, r3, #11
1004dff6:	3008      	adds	r0, #8
1004dff8:	1840      	adds	r0, r0, r1
1004dffa:	221e      	movs	r2, #30
1004dffc:	6940      	ldr	r0, [r0, #20]
1004dffe:	2102      	movs	r1, #2
1004e000:	f00d ff74 	bl	1005beec <aci_event_fifo_push_header>
1004e004:	0001      	movs	r1, r0
1004e006:	d003      	beq.n	1004e010 <L2C_SigChan_Req_TimeOut_Handler+0x44>
1004e008:	808f      	strh	r7, [r1, #4]
1004e00a:	9800      	ldr	r0, [sp, #0]
1004e00c:	f00d ff5a 	bl	1005bec4 <aci_event_fifo_push>
1004e010:	6829      	ldr	r1, [r5, #0]
1004e012:	2000      	movs	r0, #0
1004e014:	1989      	adds	r1, r1, r6
1004e016:	6fca      	ldr	r2, [r1, #124]	; 0x7c
1004e018:	1d21      	adds	r1, r4, #4
1004e01a:	5450      	strb	r0, [r2, r1]
1004e01c:	6829      	ldr	r1, [r5, #0]
1004e01e:	1989      	adds	r1, r1, r6
1004e020:	6fc9      	ldr	r1, [r1, #124]	; 0x7c
1004e022:	1ce4      	adds	r4, r4, #3
1004e024:	5508      	strb	r0, [r1, r4]
1004e026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e028:	20000d64 	.word	0x20000d64

1004e02c <L2C_Signal_Channel_Handler>:
1004e02c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004e02e:	460d      	mov	r5, r1
1004e030:	b08d      	sub	sp, #52	; 0x34
1004e032:	2100      	movs	r1, #0
1004e034:	910a      	str	r1, [sp, #40]	; 0x28
1004e036:	68a9      	ldr	r1, [r5, #8]
1004e038:	2800      	cmp	r0, #0
1004e03a:	7b0f      	ldrb	r7, [r1, #12]
1004e03c:	d002      	beq.n	1004e044 <L2C_Signal_Channel_Handler+0x18>
1004e03e:	2801      	cmp	r0, #1
1004e040:	d022      	beq.n	1004e088 <L2C_Signal_Channel_Handler+0x5c>
1004e042:	e0c3      	b.n	1004e1cc <L2C_Signal_Channel_Handler+0x1a0>
1004e044:	88a8      	ldrh	r0, [r5, #4]
1004e046:	f7ff fe45 	bl	1004dcd4 <L2C_Get_Connection_Info_Index>
1004e04a:	4e62      	ldr	r6, [pc, #392]	; (1004e1d4 <L2C_Signal_Channel_Handler+0x1a8>)
1004e04c:	4604      	mov	r4, r0
1004e04e:	6830      	ldr	r0, [r6, #0]
1004e050:	30a0      	adds	r0, #160	; 0xa0
1004e052:	7b00      	ldrb	r0, [r0, #12]
1004e054:	42a0      	cmp	r0, r4
1004e056:	d915      	bls.n	1004e084 <L2C_Signal_Channel_Handler+0x58>
1004e058:	2f12      	cmp	r7, #18
1004e05a:	d108      	bne.n	1004e06e <L2C_Signal_Channel_Handler+0x42>
1004e05c:	485e      	ldr	r0, [pc, #376]	; (1004e1d8 <L2C_Signal_Channel_Handler+0x1ac>)
1004e05e:	9002      	str	r0, [sp, #8]
1004e060:	4620      	mov	r0, r4
1004e062:	3032      	adds	r0, #50	; 0x32
1004e064:	4669      	mov	r1, sp
1004e066:	7308      	strb	r0, [r1, #12]
1004e068:	4668      	mov	r0, sp
1004e06a:	f7ff fc4d 	bl	1004d908 <Timer_StartOneShot>
1004e06e:	200f      	movs	r0, #15
1004e070:	6831      	ldr	r1, [r6, #0]
1004e072:	01c0      	lsls	r0, r0, #7
1004e074:	1808      	adds	r0, r1, r0
1004e076:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004e078:	0121      	lsls	r1, r4, #4
1004e07a:	1840      	adds	r0, r0, r1
1004e07c:	7881      	ldrb	r1, [r0, #2]
1004e07e:	22fd      	movs	r2, #253	; 0xfd
1004e080:	4011      	ands	r1, r2
1004e082:	7081      	strb	r1, [r0, #2]
1004e084:	2100      	movs	r1, #0
1004e086:	e09e      	b.n	1004e1c6 <L2C_Signal_Channel_Handler+0x19a>
1004e088:	88a8      	ldrh	r0, [r5, #4]
1004e08a:	f7ff fe23 	bl	1004dcd4 <L2C_Get_Connection_Info_Index>
1004e08e:	4606      	mov	r6, r0
1004e090:	4850      	ldr	r0, [pc, #320]	; (1004e1d4 <L2C_Signal_Channel_Handler+0x1a8>)
1004e092:	22ac      	movs	r2, #172	; 0xac
1004e094:	6801      	ldr	r1, [r0, #0]
1004e096:	5c52      	ldrb	r2, [r2, r1]
1004e098:	42b2      	cmp	r2, r6
1004e09a:	d918      	bls.n	1004e0ce <L2C_Signal_Channel_Handler+0xa2>
1004e09c:	200f      	movs	r0, #15
1004e09e:	01c0      	lsls	r0, r0, #7
1004e0a0:	1808      	adds	r0, r1, r0
1004e0a2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004e0a4:	0132      	lsls	r2, r6, #4
1004e0a6:	1884      	adds	r4, r0, r2
1004e0a8:	78a2      	ldrb	r2, [r4, #2]
1004e0aa:	0710      	lsls	r0, r2, #28
1004e0ac:	d510      	bpl.n	1004e0d0 <L2C_Signal_Channel_Handler+0xa4>
1004e0ae:	2f12      	cmp	r7, #18
1004e0b0:	d110      	bne.n	1004e0d4 <L2C_Signal_Channel_Handler+0xa8>
1004e0b2:	0750      	lsls	r0, r2, #29
1004e0b4:	d410      	bmi.n	1004e0d8 <L2C_Signal_Channel_Handler+0xac>
1004e0b6:	88a9      	ldrh	r1, [r5, #4]
1004e0b8:	462a      	mov	r2, r5
1004e0ba:	2042      	movs	r0, #66	; 0x42
1004e0bc:	f000 f8ce 	bl	1004e25c <aci_l2cap_connection_update_req_event_push>
1004e0c0:	78a0      	ldrb	r0, [r4, #2]
1004e0c2:	2104      	movs	r1, #4
1004e0c4:	4308      	orrs	r0, r1
1004e0c6:	70a0      	strb	r0, [r4, #2]
1004e0c8:	68a8      	ldr	r0, [r5, #8]
1004e0ca:	7b40      	ldrb	r0, [r0, #13]
1004e0cc:	7120      	strb	r0, [r4, #4]
1004e0ce:	e079      	b.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e0d0:	2f13      	cmp	r7, #19
1004e0d2:	d00a      	beq.n	1004e0ea <L2C_Signal_Channel_Handler+0xbe>
1004e0d4:	2f01      	cmp	r7, #1
1004e0d6:	d041      	beq.n	1004e15c <L2C_Signal_Channel_Handler+0x130>
1004e0d8:	68a8      	ldr	r0, [r5, #8]
1004e0da:	7b41      	ldrb	r1, [r0, #13]
1004e0dc:	88a8      	ldrh	r0, [r5, #4]
1004e0de:	f7ff fc9d 	bl	1004da1c <L2C_Build_Command_Reject_Pdu>
1004e0e2:	900a      	str	r0, [sp, #40]	; 0x28
1004e0e4:	2800      	cmp	r0, #0
1004e0e6:	d06d      	beq.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e0e8:	e070      	b.n	1004e1cc <L2C_Signal_Channel_Handler+0x1a0>
1004e0ea:	68a8      	ldr	r0, [r5, #8]
1004e0ec:	78e7      	ldrb	r7, [r4, #3]
1004e0ee:	7b43      	ldrb	r3, [r0, #13]
1004e0f0:	42bb      	cmp	r3, r7
1004e0f2:	d167      	bne.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e0f4:	0752      	lsls	r2, r2, #29
1004e0f6:	d565      	bpl.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e0f8:	7c02      	ldrb	r2, [r0, #16]
1004e0fa:	7c40      	ldrb	r0, [r0, #17]
1004e0fc:	2301      	movs	r3, #1
1004e0fe:	0200      	lsls	r0, r0, #8
1004e100:	1810      	adds	r0, r2, r0
1004e102:	b287      	uxth	r7, r0
1004e104:	2042      	movs	r0, #66	; 0x42
1004e106:	9004      	str	r0, [sp, #16]
1004e108:	88a8      	ldrh	r0, [r5, #4]
1004e10a:	9006      	str	r0, [sp, #24]
1004e10c:	2037      	movs	r0, #55	; 0x37
1004e10e:	0140      	lsls	r0, r0, #5
1004e110:	1808      	adds	r0, r1, r0
1004e112:	7ac0      	ldrb	r0, [r0, #11]
1004e114:	0780      	lsls	r0, r0, #30
1004e116:	d50f      	bpl.n	1004e138 <L2C_Signal_Channel_Handler+0x10c>
1004e118:	02d8      	lsls	r0, r3, #11
1004e11a:	3108      	adds	r1, #8
1004e11c:	1808      	adds	r0, r1, r0
1004e11e:	221d      	movs	r2, #29
1004e120:	6940      	ldr	r0, [r0, #20]
1004e122:	9904      	ldr	r1, [sp, #16]
1004e124:	f00d fee2 	bl	1005beec <aci_event_fifo_push_header>
1004e128:	0001      	movs	r1, r0
1004e12a:	d005      	beq.n	1004e138 <L2C_Signal_Channel_Handler+0x10c>
1004e12c:	9a06      	ldr	r2, [sp, #24]
1004e12e:	808a      	strh	r2, [r1, #4]
1004e130:	80cf      	strh	r7, [r1, #6]
1004e132:	9804      	ldr	r0, [sp, #16]
1004e134:	f00d fec6 	bl	1005bec4 <aci_event_fifo_push>
1004e138:	78a0      	ldrb	r0, [r4, #2]
1004e13a:	21fb      	movs	r1, #251	; 0xfb
1004e13c:	4008      	ands	r0, r1
1004e13e:	70a0      	strb	r0, [r4, #2]
1004e140:	78e0      	ldrb	r0, [r4, #3]
1004e142:	1c40      	adds	r0, r0, #1
1004e144:	0600      	lsls	r0, r0, #24
1004e146:	0e00      	lsrs	r0, r0, #24
1004e148:	70e0      	strb	r0, [r4, #3]
1004e14a:	d101      	bne.n	1004e150 <L2C_Signal_Channel_Handler+0x124>
1004e14c:	2001      	movs	r0, #1
1004e14e:	70e0      	strb	r0, [r4, #3]
1004e150:	4668      	mov	r0, sp
1004e152:	3632      	adds	r6, #50	; 0x32
1004e154:	7306      	strb	r6, [r0, #12]
1004e156:	f7ff fc23 	bl	1004d9a0 <Timer_StopOneShot>
1004e15a:	e033      	b.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e15c:	0710      	lsls	r0, r2, #28
1004e15e:	d431      	bmi.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e160:	68a8      	ldr	r0, [r5, #8]
1004e162:	78e1      	ldrb	r1, [r4, #3]
1004e164:	7b40      	ldrb	r0, [r0, #13]
1004e166:	4288      	cmp	r0, r1
1004e168:	d12c      	bne.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e16a:	0750      	lsls	r0, r2, #29
1004e16c:	d52a      	bpl.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e16e:	20fb      	movs	r0, #251	; 0xfb
1004e170:	4002      	ands	r2, r0
1004e172:	70a2      	strb	r2, [r4, #2]
1004e174:	78e0      	ldrb	r0, [r4, #3]
1004e176:	1c40      	adds	r0, r0, #1
1004e178:	0600      	lsls	r0, r0, #24
1004e17a:	0e00      	lsrs	r0, r0, #24
1004e17c:	70e0      	strb	r0, [r4, #3]
1004e17e:	d101      	bne.n	1004e184 <L2C_Signal_Channel_Handler+0x158>
1004e180:	2001      	movs	r0, #1
1004e182:	70e0      	strb	r0, [r4, #3]
1004e184:	4668      	mov	r0, sp
1004e186:	3632      	adds	r6, #50	; 0x32
1004e188:	7306      	strb	r6, [r0, #12]
1004e18a:	f7ff fc09 	bl	1004d9a0 <Timer_StopOneShot>
1004e18e:	4811      	ldr	r0, [pc, #68]	; (1004e1d4 <L2C_Signal_Channel_Handler+0x1a8>)
1004e190:	2220      	movs	r2, #32
1004e192:	6800      	ldr	r0, [r0, #0]
1004e194:	0191      	lsls	r1, r2, #6
1004e196:	3008      	adds	r0, #8
1004e198:	1840      	adds	r0, r0, r1
1004e19a:	2442      	movs	r4, #66	; 0x42
1004e19c:	88ae      	ldrh	r6, [r5, #4]
1004e19e:	2302      	movs	r3, #2
1004e1a0:	6940      	ldr	r0, [r0, #20]
1004e1a2:	4621      	mov	r1, r4
1004e1a4:	f00d fea2 	bl	1005beec <aci_event_fifo_push_header>
1004e1a8:	0001      	movs	r1, r0
1004e1aa:	d00b      	beq.n	1004e1c4 <L2C_Signal_Channel_Handler+0x198>
1004e1ac:	68a8      	ldr	r0, [r5, #8]
1004e1ae:	7b43      	ldrb	r3, [r0, #13]
1004e1b0:	7b87      	ldrb	r7, [r0, #14]
1004e1b2:	7bc0      	ldrb	r0, [r0, #15]
1004e1b4:	808e      	strh	r6, [r1, #4]
1004e1b6:	0200      	lsls	r0, r0, #8
1004e1b8:	1838      	adds	r0, r7, r0
1004e1ba:	718b      	strb	r3, [r1, #6]
1004e1bc:	8108      	strh	r0, [r1, #8]
1004e1be:	4620      	mov	r0, r4
1004e1c0:	f00d fe80 	bl	1005bec4 <aci_event_fifo_push>
1004e1c4:	2101      	movs	r1, #1
1004e1c6:	4628      	mov	r0, r5
1004e1c8:	f006 fc8c 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004e1cc:	980a      	ldr	r0, [sp, #40]	; 0x28
1004e1ce:	b00d      	add	sp, #52	; 0x34
1004e1d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e1d2:	0000      	.short	0x0000
1004e1d4:	20000d64 	.word	0x20000d64
1004e1d8:	00007530 	.word	0x00007530

1004e1dc <L2C_Signal_Channel_Handler_ISR>:
1004e1dc:	b510      	push	{r4, lr}
1004e1de:	2802      	cmp	r0, #2
1004e1e0:	d009      	beq.n	1004e1f6 <L2C_Signal_Channel_Handler_ISR+0x1a>
1004e1e2:	2805      	cmp	r0, #5
1004e1e4:	d001      	beq.n	1004e1ea <L2C_Signal_Channel_Handler_ISR+0xe>
1004e1e6:	280b      	cmp	r0, #11
1004e1e8:	d108      	bne.n	1004e1fc <L2C_Signal_Channel_Handler_ISR+0x20>
1004e1ea:	4608      	mov	r0, r1
1004e1ec:	7909      	ldrb	r1, [r1, #4]
1004e1ee:	8840      	ldrh	r0, [r0, #2]
1004e1f0:	f7ff fd40 	bl	1004dc74 <L2C_Connection_Complete_Signal_Handler>
1004e1f4:	e002      	b.n	1004e1fc <L2C_Signal_Channel_Handler_ISR+0x20>
1004e1f6:	8848      	ldrh	r0, [r1, #2]
1004e1f8:	f7ff fe84 	bl	1004df04 <L2C_Reset_To_Closed_State>
1004e1fc:	2000      	movs	r0, #0
1004e1fe:	bd10      	pop	{r4, pc}

1004e200 <L2C_discard_accumulated_acl_data>:
1004e200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004e202:	4605      	mov	r5, r0
1004e204:	7880      	ldrb	r0, [r0, #2]
1004e206:	2110      	movs	r1, #16
1004e208:	4308      	orrs	r0, r1
1004e20a:	70a8      	strb	r0, [r5, #2]
1004e20c:	2042      	movs	r0, #66	; 0x42
1004e20e:	9000      	str	r0, [sp, #0]
1004e210:	4811      	ldr	r0, [pc, #68]	; (1004e258 <L2C_discard_accumulated_acl_data+0x58>)
1004e212:	01c9      	lsls	r1, r1, #7
1004e214:	6800      	ldr	r0, [r0, #0]
1004e216:	2701      	movs	r7, #1
1004e218:	3008      	adds	r0, #8
1004e21a:	1840      	adds	r0, r0, r1
1004e21c:	2602      	movs	r6, #2
1004e21e:	463b      	mov	r3, r7
1004e220:	2221      	movs	r2, #33	; 0x21
1004e222:	6940      	ldr	r0, [r0, #20]
1004e224:	9900      	ldr	r1, [sp, #0]
1004e226:	f00d fe61 	bl	1005beec <aci_event_fifo_push_header>
1004e22a:	0004      	movs	r4, r0
1004e22c:	d00a      	beq.n	1004e244 <L2C_discard_accumulated_acl_data+0x44>
1004e22e:	7127      	strb	r7, [r4, #4]
1004e230:	7166      	strb	r6, [r4, #5]
1004e232:	4632      	mov	r2, r6
1004e234:	4629      	mov	r1, r5
1004e236:	1da0      	adds	r0, r4, #6
1004e238:	f7f2 faa3 	bl	10040782 <Osal_MemCpy>
1004e23c:	4621      	mov	r1, r4
1004e23e:	9800      	ldr	r0, [sp, #0]
1004e240:	f00d fe40 	bl	1005bec4 <aci_event_fifo_push>
1004e244:	68e8      	ldr	r0, [r5, #12]
1004e246:	2800      	cmp	r0, #0
1004e248:	d005      	beq.n	1004e256 <L2C_discard_accumulated_acl_data+0x56>
1004e24a:	2101      	movs	r1, #1
1004e24c:	f006 fc4a 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004e250:	2000      	movs	r0, #0
1004e252:	60e8      	str	r0, [r5, #12]
1004e254:	8128      	strh	r0, [r5, #8]
1004e256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e258:	20000d64 	.word	0x20000d64

1004e25c <aci_l2cap_connection_update_req_event_push>:
1004e25c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004e25e:	2304      	movs	r3, #4
1004e260:	4604      	mov	r4, r0
1004e262:	06c1      	lsls	r1, r0, #27
1004e264:	4822      	ldr	r0, [pc, #136]	; (1004e2f0 <aci_l2cap_connection_update_req_event_push+0x94>)
1004e266:	4615      	mov	r5, r2
1004e268:	6800      	ldr	r0, [r0, #0]
1004e26a:	d503      	bpl.n	1004e274 <aci_l2cap_connection_update_req_event_push+0x18>
1004e26c:	2222      	movs	r2, #34	; 0x22
1004e26e:	21bf      	movs	r1, #191	; 0xbf
1004e270:	400c      	ands	r4, r1
1004e272:	e006      	b.n	1004e282 <aci_l2cap_connection_update_req_event_push+0x26>
1004e274:	2137      	movs	r1, #55	; 0x37
1004e276:	0149      	lsls	r1, r1, #5
1004e278:	1841      	adds	r1, r0, r1
1004e27a:	7ac9      	ldrb	r1, [r1, #11]
1004e27c:	07c9      	lsls	r1, r1, #31
1004e27e:	d032      	beq.n	1004e2e6 <aci_l2cap_connection_update_req_event_push+0x8a>
1004e280:	221f      	movs	r2, #31
1004e282:	0721      	lsls	r1, r4, #28
1004e284:	0e89      	lsrs	r1, r1, #26
1004e286:	1808      	adds	r0, r1, r0
1004e288:	2101      	movs	r1, #1
1004e28a:	02c9      	lsls	r1, r1, #11
1004e28c:	1840      	adds	r0, r0, r1
1004e28e:	6940      	ldr	r0, [r0, #20]
1004e290:	4621      	mov	r1, r4
1004e292:	f00d fe2b 	bl	1005beec <aci_event_fifo_push_header>
1004e296:	0001      	movs	r1, r0
1004e298:	d027      	beq.n	1004e2ea <aci_l2cap_connection_update_req_event_push+0x8e>
1004e29a:	68aa      	ldr	r2, [r5, #8]
1004e29c:	1d08      	adds	r0, r1, #4
1004e29e:	7b57      	ldrb	r7, [r2, #13]
1004e2a0:	7bd5      	ldrb	r5, [r2, #15]
1004e2a2:	7b93      	ldrb	r3, [r2, #14]
1004e2a4:	46be      	mov	lr, r7
1004e2a6:	022d      	lsls	r5, r5, #8
1004e2a8:	195f      	adds	r7, r3, r5
1004e2aa:	7c55      	ldrb	r5, [r2, #17]
1004e2ac:	7c13      	ldrb	r3, [r2, #16]
1004e2ae:	022d      	lsls	r5, r5, #8
1004e2b0:	195e      	adds	r6, r3, r5
1004e2b2:	7cd5      	ldrb	r5, [r2, #19]
1004e2b4:	7c93      	ldrb	r3, [r2, #18]
1004e2b6:	46bc      	mov	ip, r7
1004e2b8:	022d      	lsls	r5, r5, #8
1004e2ba:	195d      	adds	r5, r3, r5
1004e2bc:	7d57      	ldrb	r7, [r2, #21]
1004e2be:	7d13      	ldrb	r3, [r2, #20]
1004e2c0:	023f      	lsls	r7, r7, #8
1004e2c2:	19db      	adds	r3, r3, r7
1004e2c4:	7d97      	ldrb	r7, [r2, #22]
1004e2c6:	7dd2      	ldrb	r2, [r2, #23]
1004e2c8:	0212      	lsls	r2, r2, #8
1004e2ca:	18ba      	adds	r2, r7, r2
1004e2cc:	9f01      	ldr	r7, [sp, #4]
1004e2ce:	8007      	strh	r7, [r0, #0]
1004e2d0:	4677      	mov	r7, lr
1004e2d2:	7087      	strb	r7, [r0, #2]
1004e2d4:	4667      	mov	r7, ip
1004e2d6:	8087      	strh	r7, [r0, #4]
1004e2d8:	80c6      	strh	r6, [r0, #6]
1004e2da:	8105      	strh	r5, [r0, #8]
1004e2dc:	8143      	strh	r3, [r0, #10]
1004e2de:	8182      	strh	r2, [r0, #12]
1004e2e0:	4620      	mov	r0, r4
1004e2e2:	f00d fdef 	bl	1005bec4 <aci_event_fifo_push>
1004e2e6:	2000      	movs	r0, #0
1004e2e8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004e2ea:	2007      	movs	r0, #7
1004e2ec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004e2ee:	0000      	.short	0x0000
1004e2f0:	20000d64 	.word	0x20000d64

1004e2f4 <Data_Length_Update_Control_ISR>:
1004e2f4:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004e2f6:	4607      	mov	r7, r0
1004e2f8:	4846      	ldr	r0, [pc, #280]	; (1004e414 <Data_Length_Update_Control_ISR+0x120>)
1004e2fa:	b081      	sub	sp, #4
1004e2fc:	8800      	ldrh	r0, [r0, #0]
1004e2fe:	460d      	mov	r5, r1
1004e300:	4945      	ldr	r1, [pc, #276]	; (1004e418 <Data_Length_Update_Control_ISR+0x124>)
1004e302:	2209      	movs	r2, #9
1004e304:	6809      	ldr	r1, [r1, #0]
1004e306:	0212      	lsls	r2, r2, #8
1004e308:	0740      	lsls	r0, r0, #29
1004e30a:	188a      	adds	r2, r1, r2
1004e30c:	0f40      	lsrs	r0, r0, #29
1004e30e:	6b12      	ldr	r2, [r2, #48]	; 0x30
1004e310:	2358      	movs	r3, #88	; 0x58
1004e312:	4358      	muls	r0, r3
1004e314:	1814      	adds	r4, r2, r0
1004e316:	2041      	movs	r0, #65	; 0x41
1004e318:	0140      	lsls	r0, r0, #5
1004e31a:	180e      	adds	r6, r1, r0
1004e31c:	f7f3 fc36 	bl	10041b8c <data_length_extension_csr_ucfg>
1004e320:	2800      	cmp	r0, #0
1004e322:	d022      	beq.n	1004e36a <Data_Length_Update_Control_ISR+0x76>
1004e324:	2d14      	cmp	r5, #20
1004e326:	d004      	beq.n	1004e332 <Data_Length_Update_Control_ISR+0x3e>
1004e328:	2d15      	cmp	r5, #21
1004e32a:	d020      	beq.n	1004e36e <Data_Length_Update_Control_ISR+0x7a>
1004e32c:	2d07      	cmp	r5, #7
1004e32e:	d059      	beq.n	1004e3e4 <Data_Length_Update_Control_ISR+0xf0>
1004e330:	e05c      	b.n	1004e3ec <Data_Length_Update_Control_ISR+0xf8>
1004e332:	4621      	mov	r1, r4
1004e334:	9803      	ldr	r0, [sp, #12]
1004e336:	f003 fa51 	bl	100517dc <LL_Data_Length_Update>
1004e33a:	2101      	movs	r1, #1
1004e33c:	6920      	ldr	r0, [r4, #16]
1004e33e:	0489      	lsls	r1, r1, #18
1004e340:	4308      	orrs	r0, r1
1004e342:	4621      	mov	r1, r4
1004e344:	3140      	adds	r1, #64	; 0x40
1004e346:	6120      	str	r0, [r4, #16]
1004e348:	7d08      	ldrb	r0, [r1, #20]
1004e34a:	2202      	movs	r2, #2
1004e34c:	4310      	orrs	r0, r2
1004e34e:	7508      	strb	r0, [r1, #20]
1004e350:	0682      	lsls	r2, r0, #26
1004e352:	d509      	bpl.n	1004e368 <Data_Length_Update_Control_ISR+0x74>
1004e354:	7962      	ldrb	r2, [r4, #5]
1004e356:	0852      	lsrs	r2, r2, #1
1004e358:	0052      	lsls	r2, r2, #1
1004e35a:	7162      	strb	r2, [r4, #5]
1004e35c:	22df      	movs	r2, #223	; 0xdf
1004e35e:	4010      	ands	r0, r2
1004e360:	7508      	strb	r0, [r1, #20]
1004e362:	2f00      	cmp	r7, #0
1004e364:	d14e      	bne.n	1004e404 <Data_Length_Update_Control_ISR+0x110>
1004e366:	e051      	b.n	1004e40c <Data_Length_Update_Control_ISR+0x118>
1004e368:	2001      	movs	r0, #1
1004e36a:	b005      	add	sp, #20
1004e36c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e36e:	4625      	mov	r5, r4
1004e370:	3540      	adds	r5, #64	; 0x40
1004e372:	7d28      	ldrb	r0, [r5, #20]
1004e374:	07c0      	lsls	r0, r0, #31
1004e376:	d0f7      	beq.n	1004e368 <Data_Length_Update_Control_ISR+0x74>
1004e378:	4621      	mov	r1, r4
1004e37a:	9803      	ldr	r0, [sp, #12]
1004e37c:	f003 fa2e 	bl	100517dc <LL_Data_Length_Update>
1004e380:	4620      	mov	r0, r4
1004e382:	f003 fa01 	bl	10051788 <LL_Data_Length_Change_Event>
1004e386:	2800      	cmp	r0, #0
1004e388:	d025      	beq.n	1004e3d6 <Data_Length_Update_Control_ISR+0xe2>
1004e38a:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
1004e38c:	8fe0      	ldrh	r0, [r4, #62]	; 0x3e
1004e38e:	4281      	cmp	r1, r0
1004e390:	d200      	bcs.n	1004e394 <Data_Length_Update_Control_ISR+0xa0>
1004e392:	4608      	mov	r0, r1
1004e394:	80e8      	strh	r0, [r5, #6]
1004e396:	8969      	ldrh	r1, [r5, #10]
1004e398:	89a8      	ldrh	r0, [r5, #12]
1004e39a:	4281      	cmp	r1, r0
1004e39c:	d200      	bcs.n	1004e3a0 <Data_Length_Update_Control_ISR+0xac>
1004e39e:	4608      	mov	r0, r1
1004e3a0:	8268      	strh	r0, [r5, #18]
1004e3a2:	892a      	ldrh	r2, [r5, #8]
1004e3a4:	89e9      	ldrh	r1, [r5, #14]
1004e3a6:	428a      	cmp	r2, r1
1004e3a8:	d200      	bcs.n	1004e3ac <Data_Length_Update_Control_ISR+0xb8>
1004e3aa:	4611      	mov	r1, r2
1004e3ac:	8229      	strh	r1, [r5, #16]
1004e3ae:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
1004e3b0:	8828      	ldrh	r0, [r5, #0]
1004e3b2:	4282      	cmp	r2, r0
1004e3b4:	d200      	bcs.n	1004e3b8 <Data_Length_Update_Control_ISR+0xc4>
1004e3b6:	4610      	mov	r0, r2
1004e3b8:	08c9      	lsrs	r1, r1, #3
1004e3ba:	390e      	subs	r1, #14
1004e3bc:	b289      	uxth	r1, r1
1004e3be:	8068      	strh	r0, [r5, #2]
1004e3c0:	4288      	cmp	r0, r1
1004e3c2:	d300      	bcc.n	1004e3c6 <Data_Length_Update_Control_ISR+0xd2>
1004e3c4:	4608      	mov	r0, r1
1004e3c6:	80a8      	strh	r0, [r5, #4]
1004e3c8:	9804      	ldr	r0, [sp, #16]
1004e3ca:	6800      	ldr	r0, [r0, #0]
1004e3cc:	2101      	movs	r1, #1
1004e3ce:	0649      	lsls	r1, r1, #25
1004e3d0:	4308      	orrs	r0, r1
1004e3d2:	9904      	ldr	r1, [sp, #16]
1004e3d4:	6008      	str	r0, [r1, #0]
1004e3d6:	7d28      	ldrb	r0, [r5, #20]
1004e3d8:	0840      	lsrs	r0, r0, #1
1004e3da:	0040      	lsls	r0, r0, #1
1004e3dc:	7528      	strb	r0, [r5, #20]
1004e3de:	2f00      	cmp	r7, #0
1004e3e0:	d110      	bne.n	1004e404 <Data_Length_Update_Control_ISR+0x110>
1004e3e2:	e013      	b.n	1004e40c <Data_Length_Update_Control_ISR+0x118>
1004e3e4:	9803      	ldr	r0, [sp, #12]
1004e3e6:	78c0      	ldrb	r0, [r0, #3]
1004e3e8:	2814      	cmp	r0, #20
1004e3ea:	d002      	beq.n	1004e3f2 <Data_Length_Update_Control_ISR+0xfe>
1004e3ec:	2000      	movs	r0, #0
1004e3ee:	b005      	add	sp, #20
1004e3f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e3f2:	3440      	adds	r4, #64	; 0x40
1004e3f4:	7d20      	ldrb	r0, [r4, #20]
1004e3f6:	2104      	movs	r1, #4
1004e3f8:	0840      	lsrs	r0, r0, #1
1004e3fa:	0040      	lsls	r0, r0, #1
1004e3fc:	4308      	orrs	r0, r1
1004e3fe:	7520      	strb	r0, [r4, #20]
1004e400:	2f00      	cmp	r7, #0
1004e402:	d003      	beq.n	1004e40c <Data_Length_Update_Control_ISR+0x118>
1004e404:	2008      	movs	r0, #8
1004e406:	36c0      	adds	r6, #192	; 0xc0
1004e408:	73f0      	strb	r0, [r6, #15]
1004e40a:	e7ad      	b.n	1004e368 <Data_Length_Update_Control_ISR+0x74>
1004e40c:	2008      	movs	r0, #8
1004e40e:	36c0      	adds	r6, #192	; 0xc0
1004e410:	73b0      	strb	r0, [r6, #14]
1004e412:	e7a9      	b.n	1004e368 <Data_Length_Update_Control_ISR+0x74>
1004e414:	200000c0 	.word	0x200000c0
1004e418:	20000d64 	.word	0x20000d64

1004e41c <RAL_Isr>:
1004e41c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004e41e:	2609      	movs	r6, #9
1004e420:	06f6      	lsls	r6, r6, #27
1004e422:	6831      	ldr	r1, [r6, #0]
1004e424:	487a      	ldr	r0, [pc, #488]	; (1004e610 <RAL_Isr+0x1f4>)
1004e426:	4a7b      	ldr	r2, [pc, #492]	; (1004e614 <RAL_Isr+0x1f8>)
1004e428:	6081      	str	r1, [r0, #8]
1004e42a:	6813      	ldr	r3, [r2, #0]
1004e42c:	2241      	movs	r2, #65	; 0x41
1004e42e:	0152      	lsls	r2, r2, #5
1004e430:	189d      	adds	r5, r3, r2
1004e432:	2200      	movs	r2, #0
1004e434:	7002      	strb	r2, [r0, #0]
1004e436:	7042      	strb	r2, [r0, #1]
1004e438:	6182      	str	r2, [r0, #24]
1004e43a:	61c2      	str	r2, [r0, #28]
1004e43c:	7102      	strb	r2, [r0, #4]
1004e43e:	7142      	strb	r2, [r0, #5]
1004e440:	7182      	strb	r2, [r0, #6]
1004e442:	4a75      	ldr	r2, [pc, #468]	; (1004e618 <RAL_Isr+0x1fc>)
1004e444:	8812      	ldrh	r2, [r2, #0]
1004e446:	14f4      	asrs	r4, r6, #19
1004e448:	0752      	lsls	r2, r2, #29
1004e44a:	0f52      	lsrs	r2, r2, #29
1004e44c:	7082      	strb	r2, [r0, #2]
1004e44e:	191c      	adds	r4, r3, r4
1004e450:	2758      	movs	r7, #88	; 0x58
1004e452:	6b24      	ldr	r4, [r4, #48]	; 0x30
1004e454:	4357      	muls	r7, r2
1004e456:	19e7      	adds	r7, r4, r7
1004e458:	4c70      	ldr	r4, [pc, #448]	; (1004e61c <RAL_Isr+0x200>)
1004e45a:	0192      	lsls	r2, r2, #6
1004e45c:	1912      	adds	r2, r2, r4
1004e45e:	60c7      	str	r7, [r0, #12]
1004e460:	6102      	str	r2, [r0, #16]
1004e462:	78ba      	ldrb	r2, [r7, #2]
1004e464:	70c2      	strb	r2, [r0, #3]
1004e466:	0757      	lsls	r7, r2, #29
1004e468:	0f7f      	lsrs	r7, r7, #29
1004e46a:	0388      	lsls	r0, r1, #14
1004e46c:	0f80      	lsrs	r0, r0, #30
1004e46e:	d17c      	bne.n	1004e56a <RAL_Isr+0x14e>
1004e470:	4a69      	ldr	r2, [pc, #420]	; (1004e618 <RAL_Isr+0x1fc>)
1004e472:	8e18      	ldrh	r0, [r3, #48]	; 0x30
1004e474:	8050      	strh	r0, [r2, #2]
1004e476:	486a      	ldr	r0, [pc, #424]	; (1004e620 <RAL_Isr+0x204>)
1004e478:	4c65      	ldr	r4, [pc, #404]	; (1004e610 <RAL_Isr+0x1f4>)
1004e47a:	4001      	ands	r1, r0
1004e47c:	1390      	asrs	r0, r2, #14
1004e47e:	4281      	cmp	r1, r0
1004e480:	d104      	bne.n	1004e48c <RAL_Isr+0x70>
1004e482:	f7ff f98f 	bl	1004d7a4 <Timer_ExpiryCallback>
1004e486:	68a0      	ldr	r0, [r4, #8]
1004e488:	6030      	str	r0, [r6, #0]
1004e48a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e48c:	f006 f9ba 	bl	10054804 <Is_Flash_Write_On_Going>
1004e490:	2800      	cmp	r0, #0
1004e492:	d107      	bne.n	1004e4a4 <RAL_Isr+0x88>
1004e494:	485f      	ldr	r0, [pc, #380]	; (1004e614 <RAL_Isr+0x1f8>)
1004e496:	8800      	ldrh	r0, [r0, #0]
1004e498:	3050      	adds	r0, #80	; 0x50
1004e49a:	b281      	uxth	r1, r0
1004e49c:	2001      	movs	r0, #1
1004e49e:	0400      	lsls	r0, r0, #16
1004e4a0:	1808      	adds	r0, r1, r0
1004e4a2:	60f0      	str	r0, [r6, #12]
1004e4a4:	495b      	ldr	r1, [pc, #364]	; (1004e614 <RAL_Isr+0x1f8>)
1004e4a6:	2000      	movs	r0, #0
1004e4a8:	6809      	ldr	r1, [r1, #0]
1004e4aa:	3140      	adds	r1, #64	; 0x40
1004e4ac:	71c8      	strb	r0, [r1, #7]
1004e4ae:	68e1      	ldr	r1, [r4, #12]
1004e4b0:	73c8      	strb	r0, [r1, #15]
1004e4b2:	495c      	ldr	r1, [pc, #368]	; (1004e624 <RAL_Isr+0x208>)
1004e4b4:	00b8      	lsls	r0, r7, #2
1004e4b6:	5808      	ldr	r0, [r1, r0]
1004e4b8:	4780      	blx	r0
1004e4ba:	68a0      	ldr	r0, [r4, #8]
1004e4bc:	2800      	cmp	r0, #0
1004e4be:	da06      	bge.n	1004e4ce <RAL_Isr+0xb2>
1004e4c0:	f006 f9a0 	bl	10054804 <Is_Flash_Write_On_Going>
1004e4c4:	2800      	cmp	r0, #0
1004e4c6:	d102      	bne.n	1004e4ce <RAL_Isr+0xb2>
1004e4c8:	78a0      	ldrb	r0, [r4, #2]
1004e4ca:	f003 fc35 	bl	10051d38 <read_rssi>
1004e4ce:	2f01      	cmp	r7, #1
1004e4d0:	d004      	beq.n	1004e4dc <RAL_Isr+0xc0>
1004e4d2:	2f02      	cmp	r7, #2
1004e4d4:	d019      	beq.n	1004e50a <RAL_Isr+0xee>
1004e4d6:	2f05      	cmp	r7, #5
1004e4d8:	d017      	beq.n	1004e50a <RAL_Isr+0xee>
1004e4da:	e03f      	b.n	1004e55c <RAL_Isr+0x140>
1004e4dc:	68a0      	ldr	r0, [r4, #8]
1004e4de:	01c0      	lsls	r0, r0, #7
1004e4e0:	d53c      	bpl.n	1004e55c <RAL_Isr+0x140>
1004e4e2:	f006 f98f 	bl	10054804 <Is_Flash_Write_On_Going>
1004e4e6:	2800      	cmp	r0, #0
1004e4e8:	d138      	bne.n	1004e55c <RAL_Isr+0x140>
1004e4ea:	68a0      	ldr	r0, [r4, #8]
1004e4ec:	0340      	lsls	r0, r0, #13
1004e4ee:	7e28      	ldrb	r0, [r5, #24]
1004e4f0:	d405      	bmi.n	1004e4fe <RAL_Isr+0xe2>
1004e4f2:	2802      	cmp	r0, #2
1004e4f4:	d032      	beq.n	1004e55c <RAL_Isr+0x140>
1004e4f6:	7960      	ldrb	r0, [r4, #5]
1004e4f8:	2800      	cmp	r0, #0
1004e4fa:	d009      	beq.n	1004e510 <RAL_Isr+0xf4>
1004e4fc:	e02e      	b.n	1004e55c <RAL_Isr+0x140>
1004e4fe:	2802      	cmp	r0, #2
1004e500:	d006      	beq.n	1004e510 <RAL_Isr+0xf4>
1004e502:	79a0      	ldrb	r0, [r4, #6]
1004e504:	2801      	cmp	r0, #1
1004e506:	d003      	beq.n	1004e510 <RAL_Isr+0xf4>
1004e508:	e028      	b.n	1004e55c <RAL_Isr+0x140>
1004e50a:	7820      	ldrb	r0, [r4, #0]
1004e50c:	2801      	cmp	r0, #1
1004e50e:	d125      	bne.n	1004e55c <RAL_Isr+0x140>
1004e510:	4846      	ldr	r0, [pc, #280]	; (1004e62c <RAL_Isr+0x210>)
1004e512:	4945      	ldr	r1, [pc, #276]	; (1004e628 <RAL_Isr+0x20c>)
1004e514:	6001      	str	r1, [r0, #0]
1004e516:	2123      	movs	r1, #35	; 0x23
1004e518:	6041      	str	r1, [r0, #4]
1004e51a:	2164      	movs	r1, #100	; 0x64
1004e51c:	4668      	mov	r0, sp
1004e51e:	7001      	strb	r1, [r0, #0]
1004e520:	466a      	mov	r2, sp
1004e522:	7810      	ldrb	r0, [r2, #0]
1004e524:	1e40      	subs	r0, r0, #1
1004e526:	7010      	strb	r0, [r2, #0]
1004e528:	68f0      	ldr	r0, [r6, #12]
1004e52a:	03c0      	lsls	r0, r0, #15
1004e52c:	d502      	bpl.n	1004e534 <RAL_Isr+0x118>
1004e52e:	7810      	ldrb	r0, [r2, #0]
1004e530:	2800      	cmp	r0, #0
1004e532:	d1f5      	bne.n	1004e520 <RAL_Isr+0x104>
1004e534:	7810      	ldrb	r0, [r2, #0]
1004e536:	483d      	ldr	r0, [pc, #244]	; (1004e62c <RAL_Isr+0x210>)
1004e538:	b282      	uxth	r2, r0
1004e53a:	2001      	movs	r0, #1
1004e53c:	0400      	lsls	r0, r0, #16
1004e53e:	1810      	adds	r0, r2, r0
1004e540:	60f0      	str	r0, [r6, #12]
1004e542:	4668      	mov	r0, sp
1004e544:	7001      	strb	r1, [r0, #0]
1004e546:	4669      	mov	r1, sp
1004e548:	7808      	ldrb	r0, [r1, #0]
1004e54a:	1e40      	subs	r0, r0, #1
1004e54c:	7008      	strb	r0, [r1, #0]
1004e54e:	68f0      	ldr	r0, [r6, #12]
1004e550:	03c0      	lsls	r0, r0, #15
1004e552:	d502      	bpl.n	1004e55a <RAL_Isr+0x13e>
1004e554:	7808      	ldrb	r0, [r1, #0]
1004e556:	2800      	cmp	r0, #0
1004e558:	d1f5      	bne.n	1004e546 <RAL_Isr+0x12a>
1004e55a:	7808      	ldrb	r0, [r1, #0]
1004e55c:	6920      	ldr	r0, [r4, #16]
1004e55e:	9000      	str	r0, [sp, #0]
1004e560:	4629      	mov	r1, r5
1004e562:	69a3      	ldr	r3, [r4, #24]
1004e564:	68e2      	ldr	r2, [r4, #12]
1004e566:	69e0      	ldr	r0, [r4, #28]
1004e568:	e000      	b.n	1004e56c <RAL_Isr+0x150>
1004e56a:	e035      	b.n	1004e5d8 <RAL_Isr+0x1bc>
1004e56c:	f004 f92c 	bl	100527c8 <isr_event_handler>
1004e570:	4629      	mov	r1, r5
1004e572:	6923      	ldr	r3, [r4, #16]
1004e574:	68e2      	ldr	r2, [r4, #12]
1004e576:	69e0      	ldr	r0, [r4, #28]
1004e578:	f010 fb5e 	bl	1005ec38 <isr_postproc>
1004e57c:	7820      	ldrb	r0, [r4, #0]
1004e57e:	2801      	cmp	r0, #1
1004e580:	d12a      	bne.n	1004e5d8 <RAL_Isr+0x1bc>
1004e582:	68e0      	ldr	r0, [r4, #12]
1004e584:	6a00      	ldr	r0, [r0, #32]
1004e586:	2800      	cmp	r0, #0
1004e588:	d026      	beq.n	1004e5d8 <RAL_Isr+0x1bc>
1004e58a:	6800      	ldr	r0, [r0, #0]
1004e58c:	2800      	cmp	r0, #0
1004e58e:	d023      	beq.n	1004e5d8 <RAL_Isr+0x1bc>
1004e590:	2700      	movs	r7, #0
1004e592:	7cc1      	ldrb	r1, [r0, #19]
1004e594:	6805      	ldr	r5, [r0, #0]
1004e596:	09c9      	lsrs	r1, r1, #7
1004e598:	d01c      	beq.n	1004e5d4 <RAL_Isr+0x1b8>
1004e59a:	68e2      	ldr	r2, [r4, #12]
1004e59c:	6a11      	ldr	r1, [r2, #32]
1004e59e:	4281      	cmp	r1, r0
1004e5a0:	d108      	bne.n	1004e5b4 <RAL_Isr+0x198>
1004e5a2:	680b      	ldr	r3, [r1, #0]
1004e5a4:	6213      	str	r3, [r2, #32]
1004e5a6:	600f      	str	r7, [r1, #0]
1004e5a8:	68e1      	ldr	r1, [r4, #12]
1004e5aa:	6a0a      	ldr	r2, [r1, #32]
1004e5ac:	2a00      	cmp	r2, #0
1004e5ae:	d10e      	bne.n	1004e5ce <RAL_Isr+0x1b2>
1004e5b0:	624f      	str	r7, [r1, #36]	; 0x24
1004e5b2:	e00c      	b.n	1004e5ce <RAL_Isr+0x1b2>
1004e5b4:	680a      	ldr	r2, [r1, #0]
1004e5b6:	4282      	cmp	r2, r0
1004e5b8:	d003      	beq.n	1004e5c2 <RAL_Isr+0x1a6>
1004e5ba:	4611      	mov	r1, r2
1004e5bc:	6812      	ldr	r2, [r2, #0]
1004e5be:	4282      	cmp	r2, r0
1004e5c0:	d1fb      	bne.n	1004e5ba <RAL_Isr+0x19e>
1004e5c2:	600d      	str	r5, [r1, #0]
1004e5c4:	68e2      	ldr	r2, [r4, #12]
1004e5c6:	6a53      	ldr	r3, [r2, #36]	; 0x24
1004e5c8:	4283      	cmp	r3, r0
1004e5ca:	d100      	bne.n	1004e5ce <RAL_Isr+0x1b2>
1004e5cc:	6251      	str	r1, [r2, #36]	; 0x24
1004e5ce:	2100      	movs	r1, #0
1004e5d0:	f006 fa88 	bl	10054ae4 <PM_Release_Acl_Pckt>
1004e5d4:	0028      	movs	r0, r5
1004e5d6:	d1dc      	bne.n	1004e592 <RAL_Isr+0x176>
1004e5d8:	4c0d      	ldr	r4, [pc, #52]	; (1004e610 <RAL_Isr+0x1f4>)
1004e5da:	8920      	ldrh	r0, [r4, #8]
1004e5dc:	0400      	lsls	r0, r0, #16
1004e5de:	d501      	bpl.n	1004e5e4 <RAL_Isr+0x1c8>
1004e5e0:	f7ff f8e0 	bl	1004d7a4 <Timer_ExpiryCallback>
1004e5e4:	68a2      	ldr	r2, [r4, #8]
1004e5e6:	4912      	ldr	r1, [pc, #72]	; (1004e630 <RAL_Isr+0x214>)
1004e5e8:	03d0      	lsls	r0, r2, #15
1004e5ea:	d506      	bpl.n	1004e5fa <RAL_Isr+0x1de>
1004e5ec:	4809      	ldr	r0, [pc, #36]	; (1004e614 <RAL_Isr+0x1f8>)
1004e5ee:	2402      	movs	r4, #2
1004e5f0:	6800      	ldr	r0, [r0, #0]
1004e5f2:	1840      	adds	r0, r0, r1
1004e5f4:	6803      	ldr	r3, [r0, #0]
1004e5f6:	4323      	orrs	r3, r4
1004e5f8:	6003      	str	r3, [r0, #0]
1004e5fa:	0390      	lsls	r0, r2, #14
1004e5fc:	d506      	bpl.n	1004e60c <RAL_Isr+0x1f0>
1004e5fe:	4805      	ldr	r0, [pc, #20]	; (1004e614 <RAL_Isr+0x1f8>)
1004e600:	2304      	movs	r3, #4
1004e602:	6800      	ldr	r0, [r0, #0]
1004e604:	1840      	adds	r0, r0, r1
1004e606:	6801      	ldr	r1, [r0, #0]
1004e608:	4319      	orrs	r1, r3
1004e60a:	6001      	str	r1, [r0, #0]
1004e60c:	6032      	str	r2, [r6, #0]
1004e60e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e610:	20000d18 	.word	0x20000d18
1004e614:	20000d64 	.word	0x20000d64
1004e618:	200000c0 	.word	0x200000c0
1004e61c:	200000cc 	.word	0x200000cc
1004e620:	fffb8000 	.word	0xfffb8000
1004e624:	20000d40 	.word	0x20000d40
1004e628:	02012302 	.word	0x02012302
1004e62c:	20000d38 	.word	0x20000d38
1004e630:	00000800 	.word	0x00000800

1004e634 <copy_4_u32>:
1004e634:	68ca      	ldr	r2, [r1, #12]
1004e636:	6002      	str	r2, [r0, #0]
1004e638:	688a      	ldr	r2, [r1, #8]
1004e63a:	6042      	str	r2, [r0, #4]
1004e63c:	684a      	ldr	r2, [r1, #4]
1004e63e:	6082      	str	r2, [r0, #8]
1004e640:	6809      	ldr	r1, [r1, #0]
1004e642:	60c1      	str	r1, [r0, #12]
1004e644:	4770      	bx	lr
	...

1004e648 <copy_tx_data_packet>:
1004e648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004e64a:	460c      	mov	r4, r1
1004e64c:	88ca      	ldrh	r2, [r1, #6]
1004e64e:	8a09      	ldrh	r1, [r1, #16]
1004e650:	3040      	adds	r0, #64	; 0x40
1004e652:	1a52      	subs	r2, r2, r1
1004e654:	8880      	ldrh	r0, [r0, #4]
1004e656:	2610      	movs	r6, #16
1004e658:	b295      	uxth	r5, r2
1004e65a:	42a8      	cmp	r0, r5
1004e65c:	d205      	bcs.n	1004e66a <copy_tx_data_packet+0x22>
1004e65e:	4605      	mov	r5, r0
1004e660:	7ce0      	ldrb	r0, [r4, #19]
1004e662:	0640      	lsls	r0, r0, #25
1004e664:	0e40      	lsrs	r0, r0, #25
1004e666:	74e0      	strb	r0, [r4, #19]
1004e668:	e003      	b.n	1004e672 <copy_tx_data_packet+0x2a>
1004e66a:	6820      	ldr	r0, [r4, #0]
1004e66c:	2800      	cmp	r0, #0
1004e66e:	d100      	bne.n	1004e672 <copy_tx_data_packet+0x2a>
1004e670:	2600      	movs	r6, #0
1004e672:	2900      	cmp	r1, #0
1004e674:	d104      	bne.n	1004e680 <copy_tx_data_packet+0x38>
1004e676:	7b20      	ldrb	r0, [r4, #12]
1004e678:	0780      	lsls	r0, r0, #30
1004e67a:	d501      	bpl.n	1004e680 <copy_tx_data_packet+0x38>
1004e67c:	2002      	movs	r0, #2
1004e67e:	e000      	b.n	1004e682 <copy_tx_data_packet+0x3a>
1004e680:	2001      	movs	r0, #1
1004e682:	06cf      	lsls	r7, r1, #27
1004e684:	4306      	orrs	r6, r0
1004e686:	0eff      	lsrs	r7, r7, #27
1004e688:	19e8      	adds	r0, r5, r7
1004e68a:	b282      	uxth	r2, r0
1004e68c:	480e      	ldr	r0, [pc, #56]	; (1004e6c8 <copy_tx_data_packet+0x80>)
1004e68e:	69a1      	ldr	r1, [r4, #24]
1004e690:	6803      	ldr	r3, [r0, #0]
1004e692:	2009      	movs	r0, #9
1004e694:	0200      	lsls	r0, r0, #8
1004e696:	1818      	adds	r0, r3, r0
1004e698:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
1004e69a:	1d00      	adds	r0, r0, #4
1004e69c:	f004 ff25 	bl	100534ea <Mem_Buff_Block_Copy>
1004e6a0:	6160      	str	r0, [r4, #20]
1004e6a2:	4809      	ldr	r0, [pc, #36]	; (1004e6c8 <copy_tx_data_packet+0x80>)
1004e6a4:	74a5      	strb	r5, [r4, #18]
1004e6a6:	6801      	ldr	r1, [r0, #0]
1004e6a8:	2009      	movs	r0, #9
1004e6aa:	0200      	lsls	r0, r0, #8
1004e6ac:	1808      	adds	r0, r1, r0
1004e6ae:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
1004e6b0:	1cb8      	adds	r0, r7, #2
1004e6b2:	540e      	strb	r6, [r1, r0]
1004e6b4:	4804      	ldr	r0, [pc, #16]	; (1004e6c8 <copy_tx_data_packet+0x80>)
1004e6b6:	6801      	ldr	r1, [r0, #0]
1004e6b8:	2009      	movs	r0, #9
1004e6ba:	0200      	lsls	r0, r0, #8
1004e6bc:	1808      	adds	r0, r1, r0
1004e6be:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
1004e6c0:	1cff      	adds	r7, r7, #3
1004e6c2:	55c5      	strb	r5, [r0, r7]
1004e6c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e6c6:	0000      	.short	0x0000
1004e6c8:	20000d64 	.word	0x20000d64

1004e6cc <encrypt>:
1004e6cc:	b418      	push	{r3, r4}
1004e6ce:	6801      	ldr	r1, [r0, #0]
1004e6d0:	4a18      	ldr	r2, [pc, #96]	; (1004e734 <encrypt+0x68>)
1004e6d2:	68cb      	ldr	r3, [r1, #12]
1004e6d4:	6013      	str	r3, [r2, #0]
1004e6d6:	688c      	ldr	r4, [r1, #8]
1004e6d8:	2301      	movs	r3, #1
1004e6da:	6054      	str	r4, [r2, #4]
1004e6dc:	684c      	ldr	r4, [r1, #4]
1004e6de:	6094      	str	r4, [r2, #8]
1004e6e0:	6809      	ldr	r1, [r1, #0]
1004e6e2:	60d1      	str	r1, [r2, #12]
1004e6e4:	6841      	ldr	r1, [r0, #4]
1004e6e6:	4a14      	ldr	r2, [pc, #80]	; (1004e738 <encrypt+0x6c>)
1004e6e8:	68cc      	ldr	r4, [r1, #12]
1004e6ea:	6014      	str	r4, [r2, #0]
1004e6ec:	688c      	ldr	r4, [r1, #8]
1004e6ee:	6054      	str	r4, [r2, #4]
1004e6f0:	684c      	ldr	r4, [r1, #4]
1004e6f2:	6094      	str	r4, [r2, #8]
1004e6f4:	6809      	ldr	r1, [r1, #0]
1004e6f6:	60d1      	str	r1, [r2, #12]
1004e6f8:	2164      	movs	r1, #100	; 0x64
1004e6fa:	466a      	mov	r2, sp
1004e6fc:	7011      	strb	r1, [r2, #0]
1004e6fe:	2209      	movs	r2, #9
1004e700:	06d2      	lsls	r2, r2, #27
1004e702:	466c      	mov	r4, sp
1004e704:	7821      	ldrb	r1, [r4, #0]
1004e706:	1e49      	subs	r1, r1, #1
1004e708:	7021      	strb	r1, [r4, #0]
1004e70a:	6951      	ldr	r1, [r2, #20]
1004e70c:	04c9      	lsls	r1, r1, #19
1004e70e:	d402      	bmi.n	1004e716 <encrypt+0x4a>
1004e710:	7821      	ldrb	r1, [r4, #0]
1004e712:	2900      	cmp	r1, #0
1004e714:	d1f5      	bne.n	1004e702 <encrypt+0x36>
1004e716:	7822      	ldrb	r2, [r4, #0]
1004e718:	7022      	strb	r2, [r4, #0]
1004e71a:	4a08      	ldr	r2, [pc, #32]	; (1004e73c <encrypt+0x70>)
1004e71c:	6881      	ldr	r1, [r0, #8]
1004e71e:	68d4      	ldr	r4, [r2, #12]
1004e720:	600c      	str	r4, [r1, #0]
1004e722:	6894      	ldr	r4, [r2, #8]
1004e724:	604c      	str	r4, [r1, #4]
1004e726:	6854      	ldr	r4, [r2, #4]
1004e728:	608c      	str	r4, [r1, #8]
1004e72a:	6812      	ldr	r2, [r2, #0]
1004e72c:	60ca      	str	r2, [r1, #12]
1004e72e:	7303      	strb	r3, [r0, #12]
1004e730:	bc18      	pop	{r3, r4}
1004e732:	4770      	bx	lr
1004e734:	48000018 	.word	0x48000018
1004e738:	48000028 	.word	0x48000028
1004e73c:	48000038 	.word	0x48000038

1004e740 <full_state_func_call_init>:
1004e740:	4803      	ldr	r0, [pc, #12]	; (1004e750 <full_state_func_call_init+0x10>)
1004e742:	4902      	ldr	r1, [pc, #8]	; (1004e74c <full_state_func_call_init+0xc>)
1004e744:	60c1      	str	r1, [r0, #12]
1004e746:	4903      	ldr	r1, [pc, #12]	; (1004e754 <full_state_func_call_init+0x14>)
1004e748:	6141      	str	r1, [r0, #20]
1004e74a:	4770      	bx	lr
1004e74c:	1004f9ad 	.word	0x1004f9ad
1004e750:	20000d40 	.word	0x20000d40
1004e754:	1004eaf1 	.word	0x1004eaf1

1004e758 <isr_advertise_state>:
1004e758:	b5f0      	push	{r4, r5, r6, r7, lr}
1004e75a:	48e2      	ldr	r0, [pc, #904]	; (1004eae4 <isr_advertise_state+0x38c>)
1004e75c:	2141      	movs	r1, #65	; 0x41
1004e75e:	6800      	ldr	r0, [r0, #0]
1004e760:	0149      	lsls	r1, r1, #5
1004e762:	4ae1      	ldr	r2, [pc, #900]	; (1004eae8 <isr_advertise_state+0x390>)
1004e764:	1844      	adds	r4, r0, r1
1004e766:	b095      	sub	sp, #84	; 0x54
1004e768:	1882      	adds	r2, r0, r2
1004e76a:	9203      	str	r2, [sp, #12]
1004e76c:	4adf      	ldr	r2, [pc, #892]	; (1004eaec <isr_advertise_state+0x394>)
1004e76e:	6892      	ldr	r2, [r2, #8]
1004e770:	01d3      	lsls	r3, r2, #7
1004e772:	d57d      	bpl.n	1004e870 <isr_advertise_state+0x118>
1004e774:	0353      	lsls	r3, r2, #13
1004e776:	4add      	ldr	r2, [pc, #884]	; (1004eaec <isr_advertise_state+0x394>)
1004e778:	6912      	ldr	r2, [r2, #16]
1004e77a:	d47a      	bmi.n	1004e872 <isr_advertise_state+0x11a>
1004e77c:	89d1      	ldrh	r1, [r2, #14]
1004e77e:	2001      	movs	r0, #1
1004e780:	0740      	lsls	r0, r0, #29
1004e782:	1809      	adds	r1, r1, r0
1004e784:	8849      	ldrh	r1, [r1, #2]
1004e786:	180e      	adds	r6, r1, r0
1004e788:	8991      	ldrh	r1, [r2, #12]
1004e78a:	1809      	adds	r1, r1, r0
1004e78c:	8849      	ldrh	r1, [r1, #2]
1004e78e:	180f      	adds	r7, r1, r0
1004e790:	7830      	ldrb	r0, [r6, #0]
1004e792:	a906      	add	r1, sp, #24
1004e794:	0705      	lsls	r5, r0, #28
1004e796:	0f2d      	lsrs	r5, r5, #28
1004e798:	4630      	mov	r0, r6
1004e79a:	f007 fa6d 	bl	10055c78 <get_scan_addr>
1004e79e:	48d3      	ldr	r0, [pc, #844]	; (1004eaec <isr_advertise_state+0x394>)
1004e7a0:	6880      	ldr	r0, [r0, #8]
1004e7a2:	2800      	cmp	r0, #0
1004e7a4:	da66      	bge.n	1004e874 <isr_advertise_state+0x11c>
1004e7a6:	2102      	movs	r1, #2
1004e7a8:	a812      	add	r0, sp, #72	; 0x48
1004e7aa:	2d03      	cmp	r5, #3
1004e7ac:	d002      	beq.n	1004e7b4 <isr_advertise_state+0x5c>
1004e7ae:	2d05      	cmp	r5, #5
1004e7b0:	d06a      	beq.n	1004e888 <isr_advertise_state+0x130>
1004e7b2:	e15f      	b.n	1004ea74 <isr_advertise_state+0x31c>
1004e7b4:	4dcd      	ldr	r5, [pc, #820]	; (1004eaec <isr_advertise_state+0x394>)
1004e7b6:	78ea      	ldrb	r2, [r5, #3]
1004e7b8:	06d2      	lsls	r2, r2, #27
1004e7ba:	d55b      	bpl.n	1004e874 <isr_advertise_state+0x11c>
1004e7bc:	2201      	movs	r2, #1
1004e7be:	716a      	strb	r2, [r5, #5]
1004e7c0:	4ac8      	ldr	r2, [pc, #800]	; (1004eae4 <isr_advertise_state+0x38c>)
1004e7c2:	6812      	ldr	r2, [r2, #0]
1004e7c4:	32e0      	adds	r2, #224	; 0xe0
1004e7c6:	7c12      	ldrb	r2, [r2, #16]
1004e7c8:	2a00      	cmp	r2, #0
1004e7ca:	d021      	beq.n	1004e810 <isr_advertise_state+0xb8>
1004e7cc:	aa08      	add	r2, sp, #32
1004e7ce:	7011      	strb	r1, [r2, #0]
1004e7d0:	900b      	str	r0, [sp, #44]	; 0x2c
1004e7d2:	9803      	ldr	r0, [sp, #12]
1004e7d4:	900c      	str	r0, [sp, #48]	; 0x30
1004e7d6:	9609      	str	r6, [sp, #36]	; 0x24
1004e7d8:	a80f      	add	r0, sp, #60	; 0x3c
1004e7da:	900e      	str	r0, [sp, #56]	; 0x38
1004e7dc:	970a      	str	r7, [sp, #40]	; 0x28
1004e7de:	940d      	str	r4, [sp, #52]	; 0x34
1004e7e0:	4610      	mov	r0, r2
1004e7e2:	f7f3 f84d 	bl	10041880 <PRIV_u32ProcessAdvPacket_ucfg>
1004e7e6:	7128      	strb	r0, [r5, #4]
1004e7e8:	7928      	ldrb	r0, [r5, #4]
1004e7ea:	2801      	cmp	r0, #1
1004e7ec:	d042      	beq.n	1004e874 <isr_advertise_state+0x11c>
1004e7ee:	2001      	movs	r0, #1
1004e7f0:	0600      	lsls	r0, r0, #24
1004e7f2:	61a8      	str	r0, [r5, #24]
1004e7f4:	6928      	ldr	r0, [r5, #16]
1004e7f6:	8a01      	ldrh	r1, [r0, #16]
1004e7f8:	4620      	mov	r0, r4
1004e7fa:	3080      	adds	r0, #128	; 0x80
1004e7fc:	6a02      	ldr	r2, [r0, #32]
1004e7fe:	8011      	strh	r1, [r2, #0]
1004e800:	8c01      	ldrh	r1, [r0, #32]
1004e802:	6928      	ldr	r0, [r5, #16]
1004e804:	8201      	strh	r1, [r0, #16]
1004e806:	7a81      	ldrb	r1, [r0, #10]
1004e808:	2280      	movs	r2, #128	; 0x80
1004e80a:	4311      	orrs	r1, r2
1004e80c:	7281      	strb	r1, [r0, #10]
1004e80e:	e131      	b.n	1004ea74 <isr_advertise_state+0x31c>
1004e810:	a904      	add	r1, sp, #16
1004e812:	4630      	mov	r0, r6
1004e814:	f007 fa26 	bl	10055c64 <get_adv_addr>
1004e818:	1cb0      	adds	r0, r6, #2
1004e81a:	4601      	mov	r1, r0
1004e81c:	780a      	ldrb	r2, [r1, #0]
1004e81e:	7973      	ldrb	r3, [r6, #5]
1004e820:	4610      	mov	r0, r2
1004e822:	784a      	ldrb	r2, [r1, #1]
1004e824:	0212      	lsls	r2, r2, #8
1004e826:	4310      	orrs	r0, r2
1004e828:	788a      	ldrb	r2, [r1, #2]
1004e82a:	78c9      	ldrb	r1, [r1, #3]
1004e82c:	0412      	lsls	r2, r2, #16
1004e82e:	4310      	orrs	r0, r2
1004e830:	0609      	lsls	r1, r1, #24
1004e832:	4308      	orrs	r0, r1
1004e834:	0202      	lsls	r2, r0, #8
1004e836:	7830      	ldrb	r0, [r6, #0]
1004e838:	7a31      	ldrb	r1, [r6, #8]
1004e83a:	0640      	lsls	r0, r0, #25
1004e83c:	0fc0      	lsrs	r0, r0, #31
1004e83e:	4302      	orrs	r2, r0
1004e840:	4618      	mov	r0, r3
1004e842:	79b3      	ldrb	r3, [r6, #6]
1004e844:	0609      	lsls	r1, r1, #24
1004e846:	021b      	lsls	r3, r3, #8
1004e848:	4318      	orrs	r0, r3
1004e84a:	79f3      	ldrb	r3, [r6, #7]
1004e84c:	041b      	lsls	r3, r3, #16
1004e84e:	4318      	orrs	r0, r3
1004e850:	4308      	orrs	r0, r1
1004e852:	0201      	lsls	r1, r0, #8
1004e854:	4610      	mov	r0, r2
1004e856:	f002 f8e1 	bl	10050a1c <PRIV_SearchAddrInWhiteList>
1004e85a:	9904      	ldr	r1, [sp, #16]
1004e85c:	6822      	ldr	r2, [r4, #0]
1004e85e:	4291      	cmp	r1, r2
1004e860:	d1c2      	bne.n	1004e7e8 <isr_advertise_state+0x90>
1004e862:	9905      	ldr	r1, [sp, #20]
1004e864:	6862      	ldr	r2, [r4, #4]
1004e866:	4291      	cmp	r1, r2
1004e868:	d1be      	bne.n	1004e7e8 <isr_advertise_state+0x90>
1004e86a:	2801      	cmp	r0, #1
1004e86c:	d006      	beq.n	1004e87c <isr_advertise_state+0x124>
1004e86e:	e002      	b.n	1004e876 <isr_advertise_state+0x11e>
1004e870:	e12f      	b.n	1004ead2 <isr_advertise_state+0x37a>
1004e872:	e085      	b.n	1004e980 <isr_advertise_state+0x228>
1004e874:	e07e      	b.n	1004e974 <isr_advertise_state+0x21c>
1004e876:	78e8      	ldrb	r0, [r5, #3]
1004e878:	0640      	lsls	r0, r0, #25
1004e87a:	d502      	bpl.n	1004e882 <isr_advertise_state+0x12a>
1004e87c:	2000      	movs	r0, #0
1004e87e:	7128      	strb	r0, [r5, #4]
1004e880:	e7b5      	b.n	1004e7ee <isr_advertise_state+0x96>
1004e882:	2001      	movs	r0, #1
1004e884:	7128      	strb	r0, [r5, #4]
1004e886:	e0f5      	b.n	1004ea74 <isr_advertise_state+0x31c>
1004e888:	4d98      	ldr	r5, [pc, #608]	; (1004eaec <isr_advertise_state+0x394>)
1004e88a:	78ea      	ldrb	r2, [r5, #3]
1004e88c:	0712      	lsls	r2, r2, #28
1004e88e:	d571      	bpl.n	1004e974 <isr_advertise_state+0x21c>
1004e890:	2200      	movs	r2, #0
1004e892:	2309      	movs	r3, #9
1004e894:	06db      	lsls	r3, r3, #27
1004e896:	605a      	str	r2, [r3, #4]
1004e898:	4a92      	ldr	r2, [pc, #584]	; (1004eae4 <isr_advertise_state+0x38c>)
1004e89a:	6812      	ldr	r2, [r2, #0]
1004e89c:	32e0      	adds	r2, #224	; 0xe0
1004e89e:	7c12      	ldrb	r2, [r2, #16]
1004e8a0:	2a00      	cmp	r2, #0
1004e8a2:	d025      	beq.n	1004e8f0 <isr_advertise_state+0x198>
1004e8a4:	aa08      	add	r2, sp, #32
1004e8a6:	7011      	strb	r1, [r2, #0]
1004e8a8:	900b      	str	r0, [sp, #44]	; 0x2c
1004e8aa:	9803      	ldr	r0, [sp, #12]
1004e8ac:	900c      	str	r0, [sp, #48]	; 0x30
1004e8ae:	9609      	str	r6, [sp, #36]	; 0x24
1004e8b0:	a80f      	add	r0, sp, #60	; 0x3c
1004e8b2:	900e      	str	r0, [sp, #56]	; 0x38
1004e8b4:	970a      	str	r7, [sp, #40]	; 0x28
1004e8b6:	940d      	str	r4, [sp, #52]	; 0x34
1004e8b8:	4610      	mov	r0, r2
1004e8ba:	f7f2 ffe1 	bl	10041880 <PRIV_u32ProcessAdvPacket_ucfg>
1004e8be:	7128      	strb	r0, [r5, #4]
1004e8c0:	2801      	cmp	r0, #1
1004e8c2:	d058      	beq.n	1004e976 <isr_advertise_state+0x21e>
1004e8c4:	6928      	ldr	r0, [r5, #16]
1004e8c6:	9000      	str	r0, [sp, #0]
1004e8c8:	ab06      	add	r3, sp, #24
1004e8ca:	4621      	mov	r1, r4
1004e8cc:	4630      	mov	r0, r6
1004e8ce:	68ea      	ldr	r2, [r5, #12]
1004e8d0:	f007 f9dc 	bl	10055c8c <go_to_connect>
1004e8d4:	4983      	ldr	r1, [pc, #524]	; (1004eae4 <isr_advertise_state+0x38c>)
1004e8d6:	2000      	movs	r0, #0
1004e8d8:	6809      	ldr	r1, [r1, #0]
1004e8da:	3120      	adds	r1, #32
1004e8dc:	74c8      	strb	r0, [r1, #19]
1004e8de:	4620      	mov	r0, r4
1004e8e0:	30c0      	adds	r0, #192	; 0xc0
1004e8e2:	7bc1      	ldrb	r1, [r0, #15]
1004e8e4:	78aa      	ldrb	r2, [r5, #2]
1004e8e6:	4291      	cmp	r1, r2
1004e8e8:	d144      	bne.n	1004e974 <isr_advertise_state+0x21c>
1004e8ea:	2108      	movs	r1, #8
1004e8ec:	73c1      	strb	r1, [r0, #15]
1004e8ee:	e0c1      	b.n	1004ea74 <isr_advertise_state+0x31c>
1004e8f0:	a904      	add	r1, sp, #16
1004e8f2:	4630      	mov	r0, r6
1004e8f4:	f007 f9b6 	bl	10055c64 <get_adv_addr>
1004e8f8:	1cb0      	adds	r0, r6, #2
1004e8fa:	4601      	mov	r1, r0
1004e8fc:	780a      	ldrb	r2, [r1, #0]
1004e8fe:	7973      	ldrb	r3, [r6, #5]
1004e900:	4610      	mov	r0, r2
1004e902:	784a      	ldrb	r2, [r1, #1]
1004e904:	0212      	lsls	r2, r2, #8
1004e906:	4310      	orrs	r0, r2
1004e908:	788a      	ldrb	r2, [r1, #2]
1004e90a:	78c9      	ldrb	r1, [r1, #3]
1004e90c:	0412      	lsls	r2, r2, #16
1004e90e:	4310      	orrs	r0, r2
1004e910:	0609      	lsls	r1, r1, #24
1004e912:	4308      	orrs	r0, r1
1004e914:	0202      	lsls	r2, r0, #8
1004e916:	7830      	ldrb	r0, [r6, #0]
1004e918:	7a31      	ldrb	r1, [r6, #8]
1004e91a:	0640      	lsls	r0, r0, #25
1004e91c:	0fc0      	lsrs	r0, r0, #31
1004e91e:	4302      	orrs	r2, r0
1004e920:	4618      	mov	r0, r3
1004e922:	79b3      	ldrb	r3, [r6, #6]
1004e924:	0609      	lsls	r1, r1, #24
1004e926:	021b      	lsls	r3, r3, #8
1004e928:	4318      	orrs	r0, r3
1004e92a:	79f3      	ldrb	r3, [r6, #7]
1004e92c:	041b      	lsls	r3, r3, #16
1004e92e:	4318      	orrs	r0, r3
1004e930:	4308      	orrs	r0, r1
1004e932:	0201      	lsls	r1, r0, #8
1004e934:	4610      	mov	r0, r2
1004e936:	f002 f871 	bl	10050a1c <PRIV_SearchAddrInWhiteList>
1004e93a:	2101      	movs	r1, #1
1004e93c:	7129      	strb	r1, [r5, #4]
1004e93e:	9904      	ldr	r1, [sp, #16]
1004e940:	6822      	ldr	r2, [r4, #0]
1004e942:	4291      	cmp	r1, r2
1004e944:	d117      	bne.n	1004e976 <isr_advertise_state+0x21e>
1004e946:	9905      	ldr	r1, [sp, #20]
1004e948:	6862      	ldr	r2, [r4, #4]
1004e94a:	4291      	cmp	r1, r2
1004e94c:	d113      	bne.n	1004e976 <isr_advertise_state+0x21e>
1004e94e:	2801      	cmp	r0, #1
1004e950:	d002      	beq.n	1004e958 <isr_advertise_state+0x200>
1004e952:	78e8      	ldrb	r0, [r5, #3]
1004e954:	0600      	lsls	r0, r0, #24
1004e956:	d50e      	bpl.n	1004e976 <isr_advertise_state+0x21e>
1004e958:	78e8      	ldrb	r0, [r5, #3]
1004e95a:	0680      	lsls	r0, r0, #26
1004e95c:	d507      	bpl.n	1004e96e <isr_advertise_state+0x216>
1004e95e:	9806      	ldr	r0, [sp, #24]
1004e960:	68a1      	ldr	r1, [r4, #8]
1004e962:	4288      	cmp	r0, r1
1004e964:	d107      	bne.n	1004e976 <isr_advertise_state+0x21e>
1004e966:	9807      	ldr	r0, [sp, #28]
1004e968:	68e1      	ldr	r1, [r4, #12]
1004e96a:	4288      	cmp	r0, r1
1004e96c:	d103      	bne.n	1004e976 <isr_advertise_state+0x21e>
1004e96e:	2000      	movs	r0, #0
1004e970:	7128      	strb	r0, [r5, #4]
1004e972:	e7a7      	b.n	1004e8c4 <isr_advertise_state+0x16c>
1004e974:	e07e      	b.n	1004ea74 <isr_advertise_state+0x31c>
1004e976:	20a4      	movs	r0, #164	; 0xa4
1004e978:	6929      	ldr	r1, [r5, #16]
1004e97a:	5b00      	ldrh	r0, [r0, r4]
1004e97c:	8208      	strh	r0, [r1, #16]
1004e97e:	e079      	b.n	1004ea74 <isr_advertise_state+0x31c>
1004e980:	4b5a      	ldr	r3, [pc, #360]	; (1004eaec <isr_advertise_state+0x394>)
1004e982:	8995      	ldrh	r5, [r2, #12]
1004e984:	22a0      	movs	r2, #160	; 0xa0
1004e986:	5b12      	ldrh	r2, [r2, r4]
1004e988:	b292      	uxth	r2, r2
1004e98a:	4295      	cmp	r5, r2
1004e98c:	d101      	bne.n	1004e992 <isr_advertise_state+0x23a>
1004e98e:	2201      	movs	r2, #1
1004e990:	719a      	strb	r2, [r3, #6]
1004e992:	2223      	movs	r2, #35	; 0x23
1004e994:	0152      	lsls	r2, r2, #5
1004e996:	1882      	adds	r2, r0, r2
1004e998:	7992      	ldrb	r2, [r2, #6]
1004e99a:	4d52      	ldr	r5, [pc, #328]	; (1004eae4 <isr_advertise_state+0x38c>)
1004e99c:	2a01      	cmp	r2, #1
1004e99e:	d169      	bne.n	1004ea74 <isr_advertise_state+0x31c>
1004e9a0:	2211      	movs	r2, #17
1004e9a2:	0192      	lsls	r2, r2, #6
1004e9a4:	1883      	adds	r3, r0, r2
1004e9a6:	7d9b      	ldrb	r3, [r3, #22]
1004e9a8:	2bff      	cmp	r3, #255	; 0xff
1004e9aa:	d063      	beq.n	1004ea74 <isr_advertise_state+0x31c>
1004e9ac:	2137      	movs	r1, #55	; 0x37
1004e9ae:	434b      	muls	r3, r1
1004e9b0:	181a      	adds	r2, r3, r0
1004e9b2:	32ff      	adds	r2, #255	; 0xff
1004e9b4:	3241      	adds	r2, #65	; 0x41
1004e9b6:	9403      	str	r4, [sp, #12]
1004e9b8:	7b50      	ldrb	r0, [r2, #13]
1004e9ba:	2800      	cmp	r0, #0
1004e9bc:	d136      	bne.n	1004ea2c <isr_advertise_state+0x2d4>
1004e9be:	2109      	movs	r1, #9
1004e9c0:	0209      	lsls	r1, r1, #8
1004e9c2:	682e      	ldr	r6, [r5, #0]
1004e9c4:	7813      	ldrb	r3, [r2, #0]
1004e9c6:	1876      	adds	r6, r6, r1
1004e9c8:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004e9ca:	4606      	mov	r6, r0
1004e9cc:	362a      	adds	r6, #42	; 0x2a
1004e9ce:	55bb      	strb	r3, [r7, r6]
1004e9d0:	682e      	ldr	r6, [r5, #0]
1004e9d2:	1c52      	adds	r2, r2, #1
1004e9d4:	1876      	adds	r6, r6, r1
1004e9d6:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004e9d8:	4606      	mov	r6, r0
1004e9da:	3652      	adds	r6, #82	; 0x52
1004e9dc:	55bb      	strb	r3, [r7, r6]
1004e9de:	682e      	ldr	r6, [r5, #0]
1004e9e0:	1876      	adds	r6, r6, r1
1004e9e2:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004e9e4:	4606      	mov	r6, r0
1004e9e6:	367a      	adds	r6, #122	; 0x7a
1004e9e8:	55bb      	strb	r3, [r7, r6]
1004e9ea:	682e      	ldr	r6, [r5, #0]
1004e9ec:	1876      	adds	r6, r6, r1
1004e9ee:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004e9f0:	4606      	mov	r6, r0
1004e9f2:	36a2      	adds	r6, #162	; 0xa2
1004e9f4:	1c40      	adds	r0, r0, #1
1004e9f6:	b2c0      	uxtb	r0, r0
1004e9f8:	55bb      	strb	r3, [r7, r6]
1004e9fa:	2806      	cmp	r0, #6
1004e9fc:	d3e1      	bcc.n	1004e9c2 <isr_advertise_state+0x26a>
1004e9fe:	6828      	ldr	r0, [r5, #0]
1004ea00:	2240      	movs	r2, #64	; 0x40
1004ea02:	1841      	adds	r1, r0, r1
1004ea04:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004ea06:	3020      	adds	r0, #32
1004ea08:	7a03      	ldrb	r3, [r0, #8]
1004ea0a:	4313      	orrs	r3, r2
1004ea0c:	7203      	strb	r3, [r0, #8]
1004ea0e:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004ea10:	3040      	adds	r0, #64	; 0x40
1004ea12:	7c03      	ldrb	r3, [r0, #16]
1004ea14:	4313      	orrs	r3, r2
1004ea16:	7403      	strb	r3, [r0, #16]
1004ea18:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004ea1a:	3060      	adds	r0, #96	; 0x60
1004ea1c:	7e03      	ldrb	r3, [r0, #24]
1004ea1e:	4313      	orrs	r3, r2
1004ea20:	7603      	strb	r3, [r0, #24]
1004ea22:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004ea24:	30a0      	adds	r0, #160	; 0xa0
1004ea26:	7801      	ldrb	r1, [r0, #0]
1004ea28:	4311      	orrs	r1, r2
1004ea2a:	7001      	strb	r1, [r0, #0]
1004ea2c:	9803      	ldr	r0, [sp, #12]
1004ea2e:	7e00      	ldrb	r0, [r0, #24]
1004ea30:	2801      	cmp	r0, #1
1004ea32:	d119      	bne.n	1004ea68 <isr_advertise_state+0x310>
1004ea34:	2111      	movs	r1, #17
1004ea36:	6828      	ldr	r0, [r5, #0]
1004ea38:	0189      	lsls	r1, r1, #6
1004ea3a:	1841      	adds	r1, r0, r1
1004ea3c:	7d89      	ldrb	r1, [r1, #22]
1004ea3e:	2237      	movs	r2, #55	; 0x37
1004ea40:	4351      	muls	r1, r2
1004ea42:	1809      	adds	r1, r1, r0
1004ea44:	20ff      	movs	r0, #255	; 0xff
1004ea46:	302f      	adds	r0, #47	; 0x2f
1004ea48:	5c40      	ldrb	r0, [r0, r1]
1004ea4a:	2800      	cmp	r0, #0
1004ea4c:	d10c      	bne.n	1004ea68 <isr_advertise_state+0x310>
1004ea4e:	9803      	ldr	r0, [sp, #12]
1004ea50:	31ff      	adds	r1, #255	; 0xff
1004ea52:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004ea54:	3148      	adds	r1, #72	; 0x48
1004ea56:	3008      	adds	r0, #8
1004ea58:	f001 fb26 	bl	100500a8 <__ARM_common_memcpy1_6>
1004ea5c:	9803      	ldr	r0, [sp, #12]
1004ea5e:	2280      	movs	r2, #128	; 0x80
1004ea60:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004ea62:	7801      	ldrb	r1, [r0, #0]
1004ea64:	4311      	orrs	r1, r2
1004ea66:	7001      	strb	r1, [r0, #0]
1004ea68:	2123      	movs	r1, #35	; 0x23
1004ea6a:	682a      	ldr	r2, [r5, #0]
1004ea6c:	2000      	movs	r0, #0
1004ea6e:	0149      	lsls	r1, r1, #5
1004ea70:	1851      	adds	r1, r2, r1
1004ea72:	7188      	strb	r0, [r1, #6]
1004ea74:	481d      	ldr	r0, [pc, #116]	; (1004eaec <isr_advertise_state+0x394>)
1004ea76:	6902      	ldr	r2, [r0, #16]
1004ea78:	7a91      	ldrb	r1, [r2, #10]
1004ea7a:	0609      	lsls	r1, r1, #24
1004ea7c:	d529      	bpl.n	1004ead2 <isr_advertise_state+0x37a>
1004ea7e:	8a15      	ldrh	r5, [r2, #16]
1004ea80:	4623      	mov	r3, r4
1004ea82:	3380      	adds	r3, #128	; 0x80
1004ea84:	8c99      	ldrh	r1, [r3, #36]	; 0x24
1004ea86:	b289      	uxth	r1, r1
1004ea88:	428d      	cmp	r5, r1
1004ea8a:	d122      	bne.n	1004ead2 <isr_advertise_state+0x37a>
1004ea8c:	252f      	movs	r5, #47	; 0x2f
1004ea8e:	8a19      	ldrh	r1, [r3, #16]
1004ea90:	5d2d      	ldrb	r5, [r5, r4]
1004ea92:	72d5      	strb	r5, [r2, #11]
1004ea94:	2200      	movs	r2, #0
1004ea96:	2509      	movs	r5, #9
1004ea98:	06ed      	lsls	r5, r5, #27
1004ea9a:	606a      	str	r2, [r5, #4]
1004ea9c:	25ff      	movs	r5, #255	; 0xff
1004ea9e:	1e4a      	subs	r2, r1, #1
1004eaa0:	3555      	adds	r5, #85	; 0x55
1004eaa2:	42aa      	cmp	r2, r5
1004eaa4:	d800      	bhi.n	1004eaa8 <isr_advertise_state+0x350>
1004eaa6:	821a      	strh	r2, [r3, #16]
1004eaa8:	2900      	cmp	r1, #0
1004eaaa:	d104      	bne.n	1004eab6 <isr_advertise_state+0x35e>
1004eaac:	2101      	movs	r1, #1
1004eaae:	6181      	str	r1, [r0, #24]
1004eab0:	7880      	ldrb	r0, [r0, #2]
1004eab2:	f005 fa2b 	bl	10053f0c <cancel_current_master>
1004eab6:	480b      	ldr	r0, [pc, #44]	; (1004eae4 <isr_advertise_state+0x38c>)
1004eab8:	6801      	ldr	r1, [r0, #0]
1004eaba:	2009      	movs	r0, #9
1004eabc:	0200      	lsls	r0, r0, #8
1004eabe:	1808      	adds	r0, r1, r0
1004eac0:	7840      	ldrb	r0, [r0, #1]
1004eac2:	2800      	cmp	r0, #0
1004eac4:	d002      	beq.n	1004eacc <isr_advertise_state+0x374>
1004eac6:	2001      	movs	r0, #1
1004eac8:	f008 feda 	bl	10057880 <slave_advance>
1004eacc:	2001      	movs	r0, #1
1004eace:	f00e f8a3 	bl	1005cc18 <advance_wakeup_timer>
1004ead2:	4806      	ldr	r0, [pc, #24]	; (1004eaec <isr_advertise_state+0x394>)
1004ead4:	6880      	ldr	r0, [r0, #8]
1004ead6:	0340      	lsls	r0, r0, #13
1004ead8:	d502      	bpl.n	1004eae0 <isr_advertise_state+0x388>
1004eada:	4620      	mov	r0, r4
1004eadc:	f006 ff92 	bl	10055a04 <isr_postproc_encrypt_data>
1004eae0:	b015      	add	sp, #84	; 0x54
1004eae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004eae4:	20000d64 	.word	0x20000d64
1004eae8:	00000904 	.word	0x00000904
1004eaec:	20000d18 	.word	0x20000d18

1004eaf0 <isr_connect_master_state>:
1004eaf0:	b5f0      	push	{r4, r5, r6, r7, lr}
1004eaf2:	48f8      	ldr	r0, [pc, #992]	; (1004eed4 <isr_connect_master_state+0x3e4>)
1004eaf4:	2141      	movs	r1, #65	; 0x41
1004eaf6:	6800      	ldr	r0, [r0, #0]
1004eaf8:	0149      	lsls	r1, r1, #5
1004eafa:	1844      	adds	r4, r0, r1
1004eafc:	217b      	movs	r1, #123	; 0x7b
1004eafe:	0109      	lsls	r1, r1, #4
1004eb00:	1843      	adds	r3, r0, r1
1004eb02:	49f5      	ldr	r1, [pc, #980]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004eb04:	2501      	movs	r5, #1
1004eb06:	4608      	mov	r0, r1
1004eb08:	688a      	ldr	r2, [r1, #8]
1004eb0a:	03ed      	lsls	r5, r5, #15
1004eb0c:	68c0      	ldr	r0, [r0, #12]
1004eb0e:	b083      	sub	sp, #12
1004eb10:	42aa      	cmp	r2, r5
1004eb12:	d004      	beq.n	1004eb1e <isr_connect_master_state+0x2e>
1004eb14:	6a85      	ldr	r5, [r0, #40]	; 0x28
1004eb16:	7aae      	ldrb	r6, [r5, #10]
1004eb18:	27ee      	movs	r7, #238	; 0xee
1004eb1a:	403e      	ands	r6, r7
1004eb1c:	72ae      	strb	r6, [r5, #10]
1004eb1e:	01d7      	lsls	r7, r2, #7
1004eb20:	2600      	movs	r6, #0
1004eb22:	2501      	movs	r5, #1
1004eb24:	2f00      	cmp	r7, #0
1004eb26:	da52      	bge.n	1004ebce <isr_connect_master_state+0xde>
1004eb28:	0357      	lsls	r7, r2, #13
1004eb2a:	d436      	bmi.n	1004eb9a <isr_connect_master_state+0xaa>
1004eb2c:	0157      	lsls	r7, r2, #5
1004eb2e:	d504      	bpl.n	1004eb3a <isr_connect_master_state+0x4a>
1004eb30:	2209      	movs	r2, #9
1004eb32:	06d2      	lsls	r2, r2, #27
1004eb34:	6056      	str	r6, [r2, #4]
1004eb36:	700d      	strb	r5, [r1, #0]
1004eb38:	e021      	b.n	1004eb7e <isr_connect_master_state+0x8e>
1004eb3a:	0057      	lsls	r7, r2, #1
1004eb3c:	d512      	bpl.n	1004eb64 <isr_connect_master_state+0x74>
1004eb3e:	78c2      	ldrb	r2, [r0, #3]
1004eb40:	1e52      	subs	r2, r2, #1
1004eb42:	0612      	lsls	r2, r2, #24
1004eb44:	0e12      	lsrs	r2, r2, #24
1004eb46:	70c2      	strb	r2, [r0, #3]
1004eb48:	d103      	bne.n	1004eb52 <isr_connect_master_state+0x62>
1004eb4a:	2209      	movs	r2, #9
1004eb4c:	06d2      	lsls	r2, r2, #27
1004eb4e:	6056      	str	r6, [r2, #4]
1004eb50:	700d      	strb	r5, [r1, #0]
1004eb52:	7942      	ldrb	r2, [r0, #5]
1004eb54:	0617      	lsls	r7, r2, #24
1004eb56:	d512      	bpl.n	1004eb7e <isr_connect_master_state+0x8e>
1004eb58:	0652      	lsls	r2, r2, #25
1004eb5a:	0e52      	lsrs	r2, r2, #25
1004eb5c:	7142      	strb	r2, [r0, #5]
1004eb5e:	6982      	ldr	r2, [r0, #24]
1004eb60:	6142      	str	r2, [r0, #20]
1004eb62:	e00c      	b.n	1004eb7e <isr_connect_master_state+0x8e>
1004eb64:	4fdd      	ldr	r7, [pc, #884]	; (1004eedc <isr_connect_master_state+0x3ec>)
1004eb66:	423a      	tst	r2, r7
1004eb68:	d003      	beq.n	1004eb72 <isr_connect_master_state+0x82>
1004eb6a:	2222      	movs	r2, #34	; 0x22
1004eb6c:	5515      	strb	r5, [r2, r4]
1004eb6e:	6982      	ldr	r2, [r0, #24]
1004eb70:	6142      	str	r2, [r0, #20]
1004eb72:	7902      	ldrb	r2, [r0, #4]
1004eb74:	70c2      	strb	r2, [r0, #3]
1004eb76:	7942      	ldrb	r2, [r0, #5]
1004eb78:	0652      	lsls	r2, r2, #25
1004eb7a:	0e52      	lsrs	r2, r2, #25
1004eb7c:	7142      	strb	r2, [r0, #5]
1004eb7e:	2709      	movs	r7, #9
1004eb80:	06ff      	lsls	r7, r7, #27
1004eb82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
1004eb84:	693a      	ldr	r2, [r7, #16]
1004eb86:	1a9a      	subs	r2, r3, r2
1004eb88:	0213      	lsls	r3, r2, #8
1004eb8a:	2201      	movs	r2, #1
1004eb8c:	0a1b      	lsrs	r3, r3, #8
1004eb8e:	05d2      	lsls	r2, r2, #23
1004eb90:	4293      	cmp	r3, r2
1004eb92:	d91c      	bls.n	1004ebce <isr_connect_master_state+0xde>
1004eb94:	700d      	strb	r5, [r1, #0]
1004eb96:	607e      	str	r6, [r7, #4]
1004eb98:	e019      	b.n	1004ebce <isr_connect_master_state+0xde>
1004eb9a:	690a      	ldr	r2, [r1, #16]
1004eb9c:	8993      	ldrh	r3, [r2, #12]
1004eb9e:	2201      	movs	r2, #1
1004eba0:	0752      	lsls	r2, r2, #29
1004eba2:	189b      	adds	r3, r3, r2
1004eba4:	885b      	ldrh	r3, [r3, #2]
1004eba6:	189a      	adds	r2, r3, r2
1004eba8:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004ebaa:	4293      	cmp	r3, r2
1004ebac:	d10a      	bne.n	1004ebc4 <isr_connect_master_state+0xd4>
1004ebae:	7892      	ldrb	r2, [r2, #2]
1004ebb0:	2a14      	cmp	r2, #20
1004ebb2:	d107      	bne.n	1004ebc4 <isr_connect_master_state+0xd4>
1004ebb4:	4602      	mov	r2, r0
1004ebb6:	3240      	adds	r2, #64	; 0x40
1004ebb8:	4613      	mov	r3, r2
1004ebba:	7d12      	ldrb	r2, [r2, #20]
1004ebbc:	27df      	movs	r7, #223	; 0xdf
1004ebbe:	403a      	ands	r2, r7
1004ebc0:	432a      	orrs	r2, r5
1004ebc2:	751a      	strb	r2, [r3, #20]
1004ebc4:	2201      	movs	r2, #1
1004ebc6:	6903      	ldr	r3, [r0, #16]
1004ebc8:	03d2      	lsls	r2, r2, #15
1004ebca:	4393      	bics	r3, r2
1004ebcc:	6103      	str	r3, [r0, #16]
1004ebce:	49c2      	ldr	r1, [pc, #776]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ebd0:	688b      	ldr	r3, [r1, #8]
1004ebd2:	0259      	lsls	r1, r3, #9
1004ebd4:	d513      	bpl.n	1004ebfe <isr_connect_master_state+0x10e>
1004ebd6:	49c0      	ldr	r1, [pc, #768]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ebd8:	690a      	ldr	r2, [r1, #16]
1004ebda:	8997      	ldrh	r7, [r2, #12]
1004ebdc:	2201      	movs	r2, #1
1004ebde:	0752      	lsls	r2, r2, #29
1004ebe0:	18bf      	adds	r7, r7, r2
1004ebe2:	887f      	ldrh	r7, [r7, #2]
1004ebe4:	18ba      	adds	r2, r7, r2
1004ebe6:	614a      	str	r2, [r1, #20]
1004ebe8:	6b41      	ldr	r1, [r0, #52]	; 0x34
1004ebea:	4291      	cmp	r1, r2
1004ebec:	d107      	bne.n	1004ebfe <isr_connect_master_state+0x10e>
1004ebee:	7891      	ldrb	r1, [r2, #2]
1004ebf0:	290d      	cmp	r1, #13
1004ebf2:	d104      	bne.n	1004ebfe <isr_connect_master_state+0x10e>
1004ebf4:	2201      	movs	r2, #1
1004ebf6:	6901      	ldr	r1, [r0, #16]
1004ebf8:	0412      	lsls	r2, r2, #16
1004ebfa:	4391      	bics	r1, r2
1004ebfc:	6101      	str	r1, [r0, #16]
1004ebfe:	2b00      	cmp	r3, #0
1004ec00:	da6f      	bge.n	1004ece2 <isr_connect_master_state+0x1f2>
1004ec02:	21b4      	movs	r1, #180	; 0xb4
1004ec04:	5909      	ldr	r1, [r1, r4]
1004ec06:	884a      	ldrh	r2, [r1, #2]
1004ec08:	2101      	movs	r1, #1
1004ec0a:	0749      	lsls	r1, r1, #29
1004ec0c:	4fb2      	ldr	r7, [pc, #712]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ec0e:	1851      	adds	r1, r2, r1
1004ec10:	61f9      	str	r1, [r7, #28]
1004ec12:	2109      	movs	r1, #9
1004ec14:	06c9      	lsls	r1, r1, #27
1004ec16:	6949      	ldr	r1, [r1, #20]
1004ec18:	0dc9      	lsrs	r1, r1, #23
1004ec1a:	07c9      	lsls	r1, r1, #31
1004ec1c:	d007      	beq.n	1004ec2e <isr_connect_master_state+0x13e>
1004ec1e:	2009      	movs	r0, #9
1004ec20:	707d      	strb	r5, [r7, #1]
1004ec22:	06c0      	lsls	r0, r0, #27
1004ec24:	6046      	str	r6, [r0, #4]
1004ec26:	703d      	strb	r5, [r7, #0]
1004ec28:	48ad      	ldr	r0, [pc, #692]	; (1004eee0 <isr_connect_master_state+0x3f0>)
1004ec2a:	61b8      	str	r0, [r7, #24]
1004ec2c:	e0e4      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ec2e:	8a00      	ldrh	r0, [r0, #16]
1004ec30:	0480      	lsls	r0, r0, #18
1004ec32:	d50a      	bpl.n	1004ec4a <isr_connect_master_state+0x15a>
1004ec34:	f7f2 ffaa 	bl	10041b8c <data_length_extension_csr_ucfg>
1004ec38:	2801      	cmp	r0, #1
1004ec3a:	d02f      	beq.n	1004ec9c <isr_connect_master_state+0x1ac>
1004ec3c:	221c      	movs	r2, #28
1004ec3e:	69f9      	ldr	r1, [r7, #28]
1004ec40:	7848      	ldrb	r0, [r1, #1]
1004ec42:	4202      	tst	r2, r0
1004ec44:	d001      	beq.n	1004ec4a <isr_connect_master_state+0x15a>
1004ec46:	1f00      	subs	r0, r0, #4
1004ec48:	7048      	strb	r0, [r1, #1]
1004ec4a:	49a3      	ldr	r1, [pc, #652]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ec4c:	69c8      	ldr	r0, [r1, #28]
1004ec4e:	68c9      	ldr	r1, [r1, #12]
1004ec50:	7802      	ldrb	r2, [r0, #0]
1004ec52:	6a8b      	ldr	r3, [r1, #40]	; 0x28
1004ec54:	885f      	ldrh	r7, [r3, #2]
1004ec56:	2301      	movs	r3, #1
1004ec58:	075b      	lsls	r3, r3, #29
1004ec5a:	18fb      	adds	r3, r7, r3
1004ec5c:	781b      	ldrb	r3, [r3, #0]
1004ec5e:	4313      	orrs	r3, r2
1004ec60:	06db      	lsls	r3, r3, #27
1004ec62:	d404      	bmi.n	1004ec6e <isr_connect_master_state+0x17e>
1004ec64:	4b9c      	ldr	r3, [pc, #624]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ec66:	701d      	strb	r5, [r3, #0]
1004ec68:	2309      	movs	r3, #9
1004ec6a:	06db      	lsls	r3, r3, #27
1004ec6c:	605e      	str	r6, [r3, #4]
1004ec6e:	43d2      	mvns	r2, r2
1004ec70:	0792      	lsls	r2, r2, #30
1004ec72:	d015      	beq.n	1004eca0 <isr_connect_master_state+0x1b0>
1004ec74:	6908      	ldr	r0, [r1, #16]
1004ec76:	4f98      	ldr	r7, [pc, #608]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ec78:	03c0      	lsls	r0, r0, #15
1004ec7a:	d577      	bpl.n	1004ed6c <isr_connect_master_state+0x27c>
1004ec7c:	f7f2 ff86 	bl	10041b8c <data_length_extension_csr_ucfg>
1004ec80:	2801      	cmp	r0, #1
1004ec82:	d074      	beq.n	1004ed6e <isr_connect_master_state+0x27e>
1004ec84:	201f      	movs	r0, #31
1004ec86:	69f9      	ldr	r1, [r7, #28]
1004ec88:	7849      	ldrb	r1, [r1, #1]
1004ec8a:	4208      	tst	r0, r1
1004ec8c:	d06e      	beq.n	1004ed6c <isr_connect_master_state+0x27c>
1004ec8e:	2009      	movs	r0, #9
1004ec90:	707d      	strb	r5, [r7, #1]
1004ec92:	06c0      	lsls	r0, r0, #27
1004ec94:	6046      	str	r6, [r0, #4]
1004ec96:	703d      	strb	r5, [r7, #0]
1004ec98:	4891      	ldr	r0, [pc, #580]	; (1004eee0 <isr_connect_master_state+0x3f0>)
1004ec9a:	e0ac      	b.n	1004edf6 <isr_connect_master_state+0x306>
1004ec9c:	22fc      	movs	r2, #252	; 0xfc
1004ec9e:	e7ce      	b.n	1004ec3e <isr_connect_master_state+0x14e>
1004eca0:	7887      	ldrb	r7, [r0, #2]
1004eca2:	7843      	ldrb	r3, [r0, #1]
1004eca4:	463a      	mov	r2, r7
1004eca6:	469c      	mov	ip, r3
1004eca8:	2f1a      	cmp	r7, #26
1004ecaa:	d26e      	bcs.n	1004ed8a <isr_connect_master_state+0x29a>
1004ecac:	4b8d      	ldr	r3, [pc, #564]	; (1004eee4 <isr_connect_master_state+0x3f4>)
1004ecae:	5c9a      	ldrb	r2, [r3, r2]
1004ecb0:	2aff      	cmp	r2, #255	; 0xff
1004ecb2:	d06a      	beq.n	1004ed8a <isr_connect_master_state+0x29a>
1004ecb4:	4562      	cmp	r2, ip
1004ecb6:	d168      	bne.n	1004ed8a <isr_connect_master_state+0x29a>
1004ecb8:	2f04      	cmp	r7, #4
1004ecba:	d013      	beq.n	1004ece4 <isr_connect_master_state+0x1f4>
1004ecbc:	2f05      	cmp	r7, #5
1004ecbe:	d016      	beq.n	1004ecee <isr_connect_master_state+0x1fe>
1004ecc0:	2f06      	cmp	r7, #6
1004ecc2:	d02b      	beq.n	1004ed1c <isr_connect_master_state+0x22c>
1004ecc4:	2f02      	cmp	r7, #2
1004ecc6:	d032      	beq.n	1004ed2e <isr_connect_master_state+0x23e>
1004ecc8:	2f0d      	cmp	r7, #13
1004ecca:	d037      	beq.n	1004ed3c <isr_connect_master_state+0x24c>
1004eccc:	690a      	ldr	r2, [r1, #16]
1004ecce:	03d3      	lsls	r3, r2, #15
1004ecd0:	d53b      	bpl.n	1004ed4a <isr_connect_master_state+0x25a>
1004ecd2:	4881      	ldr	r0, [pc, #516]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ecd4:	2109      	movs	r1, #9
1004ecd6:	7045      	strb	r5, [r0, #1]
1004ecd8:	06c9      	lsls	r1, r1, #27
1004ecda:	604e      	str	r6, [r1, #4]
1004ecdc:	7005      	strb	r5, [r0, #0]
1004ecde:	4980      	ldr	r1, [pc, #512]	; (1004eee0 <isr_connect_master_state+0x3f0>)
1004ece0:	e031      	b.n	1004ed46 <isr_connect_master_state+0x256>
1004ece2:	e089      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ece4:	4a80      	ldr	r2, [pc, #512]	; (1004eee8 <isr_connect_master_state+0x3f8>)
1004ece6:	6908      	ldr	r0, [r1, #16]
1004ece8:	4310      	orrs	r0, r2
1004ecea:	6108      	str	r0, [r1, #16]
1004ecec:	e084      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ecee:	497a      	ldr	r1, [pc, #488]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ecf0:	6908      	ldr	r0, [r1, #16]
1004ecf2:	7006      	strb	r6, [r0, #0]
1004ecf4:	7146      	strb	r6, [r0, #5]
1004ecf6:	7046      	strb	r6, [r0, #1]
1004ecf8:	7186      	strb	r6, [r0, #6]
1004ecfa:	7086      	strb	r6, [r0, #2]
1004ecfc:	71c6      	strb	r6, [r0, #7]
1004ecfe:	70c6      	strb	r6, [r0, #3]
1004ed00:	7206      	strb	r6, [r0, #8]
1004ed02:	2280      	movs	r2, #128	; 0x80
1004ed04:	7102      	strb	r2, [r0, #4]
1004ed06:	7246      	strb	r6, [r0, #9]
1004ed08:	68c9      	ldr	r1, [r1, #12]
1004ed0a:	2301      	movs	r3, #1
1004ed0c:	690a      	ldr	r2, [r1, #16]
1004ed0e:	025b      	lsls	r3, r3, #9
1004ed10:	431a      	orrs	r2, r3
1004ed12:	610a      	str	r2, [r1, #16]
1004ed14:	7dc1      	ldrb	r1, [r0, #23]
1004ed16:	2208      	movs	r2, #8
1004ed18:	4311      	orrs	r1, r2
1004ed1a:	e034      	b.n	1004ed86 <isr_connect_master_state+0x296>
1004ed1c:	2341      	movs	r3, #65	; 0x41
1004ed1e:	690a      	ldr	r2, [r1, #16]
1004ed20:	029b      	lsls	r3, r3, #10
1004ed22:	439a      	bics	r2, r3
1004ed24:	610a      	str	r2, [r1, #16]
1004ed26:	2101      	movs	r1, #1
1004ed28:	486b      	ldr	r0, [pc, #428]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ed2a:	0389      	lsls	r1, r1, #14
1004ed2c:	e00b      	b.n	1004ed46 <isr_connect_master_state+0x256>
1004ed2e:	6b49      	ldr	r1, [r1, #52]	; 0x34
1004ed30:	4869      	ldr	r0, [pc, #420]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ed32:	600d      	str	r5, [r1, #0]
1004ed34:	68c0      	ldr	r0, [r0, #12]
1004ed36:	2127      	movs	r1, #39	; 0x27
1004ed38:	7141      	strb	r1, [r0, #5]
1004ed3a:	e05d      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ed3c:	4866      	ldr	r0, [pc, #408]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ed3e:	2201      	movs	r2, #1
1004ed40:	6981      	ldr	r1, [r0, #24]
1004ed42:	05d2      	lsls	r2, r2, #23
1004ed44:	4311      	orrs	r1, r2
1004ed46:	6181      	str	r1, [r0, #24]
1004ed48:	e056      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ed4a:	2f0b      	cmp	r7, #11
1004ed4c:	d010      	beq.n	1004ed70 <isr_connect_master_state+0x280>
1004ed4e:	2f0e      	cmp	r7, #14
1004ed50:	d01c      	beq.n	1004ed8c <isr_connect_master_state+0x29c>
1004ed52:	2f09      	cmp	r7, #9
1004ed54:	d01e      	beq.n	1004ed94 <isr_connect_master_state+0x2a4>
1004ed56:	2f0c      	cmp	r7, #12
1004ed58:	d020      	beq.n	1004ed9c <isr_connect_master_state+0x2ac>
1004ed5a:	4602      	mov	r2, r0
1004ed5c:	4b63      	ldr	r3, [pc, #396]	; (1004eeec <isr_connect_master_state+0x3fc>)
1004ed5e:	4639      	mov	r1, r7
1004ed60:	2000      	movs	r0, #0
1004ed62:	f7f2 ff03 	bl	10041b6c <Data_Length_Update_Control_ISR_ucfg>
1004ed66:	2800      	cmp	r0, #0
1004ed68:	d146      	bne.n	1004edf8 <isr_connect_master_state+0x308>
1004ed6a:	e02c      	b.n	1004edc6 <isr_connect_master_state+0x2d6>
1004ed6c:	e03b      	b.n	1004ede6 <isr_connect_master_state+0x2f6>
1004ed6e:	e038      	b.n	1004ede2 <isr_connect_master_state+0x2f2>
1004ed70:	4b5f      	ldr	r3, [pc, #380]	; (1004eef0 <isr_connect_master_state+0x400>)
1004ed72:	4859      	ldr	r0, [pc, #356]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ed74:	431a      	orrs	r2, r3
1004ed76:	2305      	movs	r3, #5
1004ed78:	02db      	lsls	r3, r3, #11
1004ed7a:	439a      	bics	r2, r3
1004ed7c:	610a      	str	r2, [r1, #16]
1004ed7e:	6900      	ldr	r0, [r0, #16]
1004ed80:	7dc1      	ldrb	r1, [r0, #23]
1004ed82:	22f7      	movs	r2, #247	; 0xf7
1004ed84:	4011      	ands	r1, r2
1004ed86:	75c1      	strb	r1, [r0, #23]
1004ed88:	e036      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ed8a:	e024      	b.n	1004edd6 <isr_connect_master_state+0x2e6>
1004ed8c:	2010      	movs	r0, #16
1004ed8e:	4302      	orrs	r2, r0
1004ed90:	610a      	str	r2, [r1, #16]
1004ed92:	e031      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ed94:	2101      	movs	r1, #1
1004ed96:	0309      	lsls	r1, r1, #12
1004ed98:	484f      	ldr	r0, [pc, #316]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ed9a:	e7d4      	b.n	1004ed46 <isr_connect_master_state+0x256>
1004ed9c:	0797      	lsls	r7, r2, #30
1004ed9e:	2304      	movs	r3, #4
1004eda0:	2f00      	cmp	r7, #0
1004eda2:	da07      	bge.n	1004edb4 <isr_connect_master_state+0x2c4>
1004eda4:	4f4c      	ldr	r7, [pc, #304]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004eda6:	61bb      	str	r3, [r7, #24]
1004eda8:	2302      	movs	r3, #2
1004edaa:	439a      	bics	r2, r3
1004edac:	2308      	movs	r3, #8
1004edae:	27ce      	movs	r7, #206	; 0xce
1004edb0:	553b      	strb	r3, [r7, r4]
1004edb2:	e000      	b.n	1004edb6 <isr_connect_master_state+0x2c6>
1004edb4:	431a      	orrs	r2, r3
1004edb6:	432a      	orrs	r2, r5
1004edb8:	610a      	str	r2, [r1, #16]
1004edba:	2205      	movs	r2, #5
1004edbc:	1cc0      	adds	r0, r0, #3
1004edbe:	312c      	adds	r1, #44	; 0x2c
1004edc0:	f7fd fde0 	bl	1004c984 <char_copy>
1004edc4:	e018      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004edc6:	4844      	ldr	r0, [pc, #272]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004edc8:	2208      	movs	r2, #8
1004edca:	68c0      	ldr	r0, [r0, #12]
1004edcc:	6901      	ldr	r1, [r0, #16]
1004edce:	4311      	orrs	r1, r2
1004edd0:	6101      	str	r1, [r0, #16]
1004edd2:	71c7      	strb	r7, [r0, #7]
1004edd4:	e010      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004edd6:	6908      	ldr	r0, [r1, #16]
1004edd8:	2208      	movs	r2, #8
1004edda:	4310      	orrs	r0, r2
1004eddc:	6108      	str	r0, [r1, #16]
1004edde:	71cf      	strb	r7, [r1, #7]
1004ede0:	e00a      	b.n	1004edf8 <isr_connect_master_state+0x308>
1004ede2:	20ff      	movs	r0, #255	; 0xff
1004ede4:	e74f      	b.n	1004ec86 <isr_connect_master_state+0x196>
1004ede6:	4621      	mov	r1, r4
1004ede8:	68fb      	ldr	r3, [r7, #12]
1004edea:	693a      	ldr	r2, [r7, #16]
1004edec:	69f8      	ldr	r0, [r7, #28]
1004edee:	f010 f81d 	bl	1005ee2c <LL_receive_data>
1004edf2:	69b9      	ldr	r1, [r7, #24]
1004edf4:	4308      	orrs	r0, r1
1004edf6:	61b8      	str	r0, [r7, #24]
1004edf8:	4a37      	ldr	r2, [pc, #220]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004edfa:	68d0      	ldr	r0, [r2, #12]
1004edfc:	6911      	ldr	r1, [r2, #16]
1004edfe:	6a07      	ldr	r7, [r0, #32]
1004ee00:	898b      	ldrh	r3, [r1, #12]
1004ee02:	2101      	movs	r1, #1
1004ee04:	0749      	lsls	r1, r1, #29
1004ee06:	185b      	adds	r3, r3, r1
1004ee08:	9300      	str	r3, [sp, #0]
1004ee0a:	885b      	ldrh	r3, [r3, #2]
1004ee0c:	1859      	adds	r1, r3, r1
1004ee0e:	2300      	movs	r3, #0
1004ee10:	6151      	str	r1, [r2, #20]
1004ee12:	9301      	str	r3, [sp, #4]
1004ee14:	6892      	ldr	r2, [r2, #8]
1004ee16:	2311      	movs	r3, #17
1004ee18:	049b      	lsls	r3, r3, #18
1004ee1a:	421a      	tst	r2, r3
1004ee1c:	d11e      	bne.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee1e:	0153      	lsls	r3, r2, #5
1004ee20:	d41c      	bmi.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee22:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004ee24:	428b      	cmp	r3, r1
1004ee26:	d001      	beq.n	1004ee2c <isr_connect_master_state+0x33c>
1004ee28:	2301      	movs	r3, #1
1004ee2a:	e000      	b.n	1004ee2e <isr_connect_master_state+0x33e>
1004ee2c:	2300      	movs	r3, #0
1004ee2e:	9302      	str	r3, [sp, #8]
1004ee30:	4288      	cmp	r0, r1
1004ee32:	d001      	beq.n	1004ee38 <isr_connect_master_state+0x348>
1004ee34:	2301      	movs	r3, #1
1004ee36:	e000      	b.n	1004ee3a <isr_connect_master_state+0x34a>
1004ee38:	2300      	movs	r3, #0
1004ee3a:	469c      	mov	ip, r3
1004ee3c:	2f00      	cmp	r7, #0
1004ee3e:	d00d      	beq.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee40:	9b02      	ldr	r3, [sp, #8]
1004ee42:	2b00      	cmp	r3, #0
1004ee44:	d00a      	beq.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee46:	4663      	mov	r3, ip
1004ee48:	2b00      	cmp	r3, #0
1004ee4a:	d007      	beq.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee4c:	7cfb      	ldrb	r3, [r7, #19]
1004ee4e:	09db      	lsrs	r3, r3, #7
1004ee50:	d004      	beq.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee52:	683b      	ldr	r3, [r7, #0]
1004ee54:	2b00      	cmp	r3, #0
1004ee56:	d001      	beq.n	1004ee5c <isr_connect_master_state+0x36c>
1004ee58:	2301      	movs	r3, #1
1004ee5a:	9301      	str	r3, [sp, #4]
1004ee5c:	0252      	lsls	r2, r2, #9
1004ee5e:	d402      	bmi.n	1004ee66 <isr_connect_master_state+0x376>
1004ee60:	9a01      	ldr	r2, [sp, #4]
1004ee62:	2a00      	cmp	r2, #0
1004ee64:	d070      	beq.n	1004ef48 <isr_connect_master_state+0x458>
1004ee66:	7942      	ldrb	r2, [r0, #5]
1004ee68:	0793      	lsls	r3, r2, #30
1004ee6a:	d501      	bpl.n	1004ee70 <isr_connect_master_state+0x380>
1004ee6c:	2f00      	cmp	r7, #0
1004ee6e:	d017      	beq.n	1004eea0 <isr_connect_master_state+0x3b0>
1004ee70:	0852      	lsrs	r2, r2, #1
1004ee72:	0052      	lsls	r2, r2, #1
1004ee74:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004ee76:	428b      	cmp	r3, r1
1004ee78:	d13e      	bne.n	1004eef8 <isr_connect_master_state+0x408>
1004ee7a:	7142      	strb	r2, [r0, #5]
1004ee7c:	06d2      	lsls	r2, r2, #27
1004ee7e:	d50b      	bpl.n	1004ee98 <isr_connect_master_state+0x3a8>
1004ee80:	4a15      	ldr	r2, [pc, #84]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ee82:	7055      	strb	r5, [r2, #1]
1004ee84:	2209      	movs	r2, #9
1004ee86:	06d2      	lsls	r2, r2, #27
1004ee88:	6056      	str	r6, [r2, #4]
1004ee8a:	4a13      	ldr	r2, [pc, #76]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ee8c:	4b19      	ldr	r3, [pc, #100]	; (1004eef4 <isr_connect_master_state+0x404>)
1004ee8e:	7015      	strb	r5, [r2, #0]
1004ee90:	6992      	ldr	r2, [r2, #24]
1004ee92:	431a      	orrs	r2, r3
1004ee94:	4b10      	ldr	r3, [pc, #64]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004ee96:	619a      	str	r2, [r3, #24]
1004ee98:	7889      	ldrb	r1, [r1, #2]
1004ee9a:	2915      	cmp	r1, #21
1004ee9c:	d003      	beq.n	1004eea6 <isr_connect_master_state+0x3b6>
1004ee9e:	e048      	b.n	1004ef32 <isr_connect_master_state+0x442>
1004eea0:	432a      	orrs	r2, r5
1004eea2:	7142      	strb	r2, [r0, #5]
1004eea4:	e7e6      	b.n	1004ee74 <isr_connect_master_state+0x384>
1004eea6:	4601      	mov	r1, r0
1004eea8:	3140      	adds	r1, #64	; 0x40
1004eeaa:	468c      	mov	ip, r1
1004eeac:	460a      	mov	r2, r1
1004eeae:	7d09      	ldrb	r1, [r1, #20]
1004eeb0:	23fd      	movs	r3, #253	; 0xfd
1004eeb2:	4019      	ands	r1, r3
1004eeb4:	7511      	strb	r1, [r2, #20]
1004eeb6:	070a      	lsls	r2, r1, #28
1004eeb8:	d53b      	bpl.n	1004ef32 <isr_connect_master_state+0x442>
1004eeba:	4a07      	ldr	r2, [pc, #28]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004eebc:	2301      	movs	r3, #1
1004eebe:	6992      	ldr	r2, [r2, #24]
1004eec0:	065b      	lsls	r3, r3, #25
1004eec2:	431a      	orrs	r2, r3
1004eec4:	4b04      	ldr	r3, [pc, #16]	; (1004eed8 <isr_connect_master_state+0x3e8>)
1004eec6:	619a      	str	r2, [r3, #24]
1004eec8:	22f7      	movs	r2, #247	; 0xf7
1004eeca:	4011      	ands	r1, r2
1004eecc:	4662      	mov	r2, ip
1004eece:	7511      	strb	r1, [r2, #20]
1004eed0:	e02f      	b.n	1004ef32 <isr_connect_master_state+0x442>
1004eed2:	0000      	.short	0x0000
1004eed4:	20000d64 	.word	0x20000d64
1004eed8:	20000d18 	.word	0x20000d18
1004eedc:	80400000 	.word	0x80400000
1004eee0:	00108008 	.word	0x00108008
1004eee4:	1005fe58 	.word	0x1005fe58
1004eee8:	00010100 	.word	0x00010100
1004eeec:	20000d30 	.word	0x20000d30
1004eef0:	00015480 	.word	0x00015480
1004eef4:	00018008 	.word	0x00018008
1004eef8:	4281      	cmp	r1, r0
1004eefa:	d01a      	beq.n	1004ef32 <isr_connect_master_state+0x442>
1004eefc:	8a3a      	ldrh	r2, [r7, #16]
1004eefe:	7cbb      	ldrb	r3, [r7, #18]
1004ef00:	2100      	movs	r1, #0
1004ef02:	18d2      	adds	r2, r2, r3
1004ef04:	823a      	strh	r2, [r7, #16]
1004ef06:	697a      	ldr	r2, [r7, #20]
1004ef08:	61ba      	str	r2, [r7, #24]
1004ef0a:	74be      	strb	r6, [r7, #18]
1004ef0c:	8a3a      	ldrh	r2, [r7, #16]
1004ef0e:	88fb      	ldrh	r3, [r7, #6]
1004ef10:	429a      	cmp	r2, r3
1004ef12:	d202      	bcs.n	1004ef1a <isr_connect_master_state+0x42a>
1004ef14:	7cfb      	ldrb	r3, [r7, #19]
1004ef16:	09db      	lsrs	r3, r3, #7
1004ef18:	d002      	beq.n	1004ef20 <isr_connect_master_state+0x430>
1004ef1a:	683f      	ldr	r7, [r7, #0]
1004ef1c:	2120      	movs	r1, #32
1004ef1e:	e004      	b.n	1004ef2a <isr_connect_master_state+0x43a>
1004ef20:	06d2      	lsls	r2, r2, #27
1004ef22:	d102      	bne.n	1004ef2a <isr_connect_master_state+0x43a>
1004ef24:	69ba      	ldr	r2, [r7, #24]
1004ef26:	6812      	ldr	r2, [r2, #0]
1004ef28:	61ba      	str	r2, [r7, #24]
1004ef2a:	4aa0      	ldr	r2, [pc, #640]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004ef2c:	6993      	ldr	r3, [r2, #24]
1004ef2e:	4319      	orrs	r1, r3
1004ef30:	6191      	str	r1, [r2, #24]
1004ef32:	6901      	ldr	r1, [r0, #16]
1004ef34:	9102      	str	r1, [sp, #8]
1004ef36:	2100      	movs	r1, #0
1004ef38:	9101      	str	r1, [sp, #4]
1004ef3a:	7941      	ldrb	r1, [r0, #5]
1004ef3c:	07c9      	lsls	r1, r1, #31
1004ef3e:	d004      	beq.n	1004ef4a <isr_connect_master_state+0x45a>
1004ef40:	499a      	ldr	r1, [pc, #616]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004ef42:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004ef44:	6148      	str	r0, [r1, #20]
1004ef46:	e02e      	b.n	1004efa6 <isr_connect_master_state+0x4b6>
1004ef48:	e048      	b.n	1004efdc <isr_connect_master_state+0x4ec>
1004ef4a:	2f00      	cmp	r7, #0
1004ef4c:	d006      	beq.n	1004ef5c <isr_connect_master_state+0x46c>
1004ef4e:	f00d fdcd 	bl	1005caec <isr_Acl_Data_TX_Cmpl_Queue_Full>
1004ef52:	2800      	cmp	r0, #0
1004ef54:	d102      	bne.n	1004ef5c <isr_connect_master_state+0x46c>
1004ef56:	9802      	ldr	r0, [sp, #8]
1004ef58:	0540      	lsls	r0, r0, #21
1004ef5a:	d50f      	bpl.n	1004ef7c <isr_connect_master_state+0x48c>
1004ef5c:	4893      	ldr	r0, [pc, #588]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004ef5e:	68c1      	ldr	r1, [r0, #12]
1004ef60:	6141      	str	r1, [r0, #20]
1004ef62:	6880      	ldr	r0, [r0, #8]
1004ef64:	2800      	cmp	r0, #0
1004ef66:	db02      	blt.n	1004ef6e <isr_connect_master_state+0x47e>
1004ef68:	2011      	movs	r0, #17
1004ef6a:	8008      	strh	r0, [r1, #0]
1004ef6c:	e000      	b.n	1004ef70 <isr_connect_master_state+0x480>
1004ef6e:	800d      	strh	r5, [r1, #0]
1004ef70:	2201      	movs	r2, #1
1004ef72:	6908      	ldr	r0, [r1, #16]
1004ef74:	03d2      	lsls	r2, r2, #15
1004ef76:	4310      	orrs	r0, r2
1004ef78:	6108      	str	r0, [r1, #16]
1004ef7a:	e014      	b.n	1004efa6 <isr_connect_master_state+0x4b6>
1004ef7c:	2001      	movs	r0, #1
1004ef7e:	9001      	str	r0, [sp, #4]
1004ef80:	498b      	ldr	r1, [pc, #556]	; (1004f1b0 <isr_connect_master_state+0x6c0>)
1004ef82:	7c38      	ldrb	r0, [r7, #16]
1004ef84:	680a      	ldr	r2, [r1, #0]
1004ef86:	2109      	movs	r1, #9
1004ef88:	0209      	lsls	r1, r1, #8
1004ef8a:	06c0      	lsls	r0, r0, #27
1004ef8c:	1851      	adds	r1, r2, r1
1004ef8e:	0ec0      	lsrs	r0, r0, #27
1004ef90:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
1004ef92:	1c80      	adds	r0, r0, #2
1004ef94:	1841      	adds	r1, r0, r1
1004ef96:	4885      	ldr	r0, [pc, #532]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004ef98:	6141      	str	r1, [r0, #20]
1004ef9a:	9a00      	ldr	r2, [sp, #0]
1004ef9c:	8051      	strh	r1, [r2, #2]
1004ef9e:	4639      	mov	r1, r7
1004efa0:	68c0      	ldr	r0, [r0, #12]
1004efa2:	f7ff fb51 	bl	1004e648 <copy_tx_data_packet>
1004efa6:	4f81      	ldr	r7, [pc, #516]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004efa8:	2181      	movs	r1, #129	; 0x81
1004efaa:	68f8      	ldr	r0, [r7, #12]
1004efac:	0189      	lsls	r1, r1, #6
1004efae:	6900      	ldr	r0, [r0, #16]
1004efb0:	4208      	tst	r0, r1
1004efb2:	d00a      	beq.n	1004efca <isr_connect_master_state+0x4da>
1004efb4:	f7f2 fdea 	bl	10041b8c <data_length_extension_csr_ucfg>
1004efb8:	2801      	cmp	r0, #1
1004efba:	d00a      	beq.n	1004efd2 <isr_connect_master_state+0x4e2>
1004efbc:	221f      	movs	r2, #31
1004efbe:	6979      	ldr	r1, [r7, #20]
1004efc0:	7848      	ldrb	r0, [r1, #1]
1004efc2:	4202      	tst	r2, r0
1004efc4:	d001      	beq.n	1004efca <isr_connect_master_state+0x4da>
1004efc6:	1d00      	adds	r0, r0, #4
1004efc8:	7048      	strb	r0, [r1, #1]
1004efca:	9801      	ldr	r0, [sp, #4]
1004efcc:	2800      	cmp	r0, #0
1004efce:	d002      	beq.n	1004efd6 <isr_connect_master_state+0x4e6>
1004efd0:	e004      	b.n	1004efdc <isr_connect_master_state+0x4ec>
1004efd2:	22ff      	movs	r2, #255	; 0xff
1004efd4:	e7f3      	b.n	1004efbe <isr_connect_master_state+0x4ce>
1004efd6:	9900      	ldr	r1, [sp, #0]
1004efd8:	8ab8      	ldrh	r0, [r7, #20]
1004efda:	8048      	strh	r0, [r1, #2]
1004efdc:	4f73      	ldr	r7, [pc, #460]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004efde:	4621      	mov	r1, r4
1004efe0:	693b      	ldr	r3, [r7, #16]
1004efe2:	68fa      	ldr	r2, [r7, #12]
1004efe4:	69f8      	ldr	r0, [r7, #28]
1004efe6:	f006 fc85 	bl	100558f4 <isr_postproc1>
1004efea:	7838      	ldrb	r0, [r7, #0]
1004efec:	2801      	cmp	r0, #1
1004efee:	d17d      	bne.n	1004f0ec <isr_connect_master_state+0x5fc>
1004eff0:	463b      	mov	r3, r7
1004eff2:	68d8      	ldr	r0, [r3, #12]
1004eff4:	691b      	ldr	r3, [r3, #16]
1004eff6:	7941      	ldrb	r1, [r0, #5]
1004eff8:	2280      	movs	r2, #128	; 0x80
1004effa:	729a      	strb	r2, [r3, #10]
1004effc:	8903      	ldrh	r3, [r0, #8]
1004effe:	8f02      	ldrh	r2, [r0, #56]	; 0x38
1004f000:	1c5b      	adds	r3, r3, #1
1004f002:	8103      	strh	r3, [r0, #8]
1004f004:	4623      	mov	r3, r4
1004f006:	3320      	adds	r3, #32
1004f008:	789f      	ldrb	r7, [r3, #2]
1004f00a:	0052      	lsls	r2, r2, #1
1004f00c:	2f00      	cmp	r7, #0
1004f00e:	d102      	bne.n	1004f016 <isr_connect_master_state+0x526>
1004f010:	6947      	ldr	r7, [r0, #20]
1004f012:	1abf      	subs	r7, r7, r2
1004f014:	6147      	str	r7, [r0, #20]
1004f016:	2600      	movs	r6, #0
1004f018:	709e      	strb	r6, [r3, #2]
1004f01a:	6a83      	ldr	r3, [r0, #40]	; 0x28
1004f01c:	7a9e      	ldrb	r6, [r3, #10]
1004f01e:	2711      	movs	r7, #17
1004f020:	433e      	orrs	r6, r7
1004f022:	729e      	strb	r6, [r3, #10]
1004f024:	4626      	mov	r6, r4
1004f026:	4b61      	ldr	r3, [pc, #388]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f028:	36c0      	adds	r6, #192	; 0xc0
1004f02a:	7bb7      	ldrb	r7, [r6, #14]
1004f02c:	789b      	ldrb	r3, [r3, #2]
1004f02e:	429f      	cmp	r7, r3
1004f030:	d109      	bne.n	1004f046 <isr_connect_master_state+0x556>
1004f032:	8973      	ldrh	r3, [r6, #10]
1004f034:	1a9a      	subs	r2, r3, r2
1004f036:	8172      	strh	r2, [r6, #10]
1004f038:	d505      	bpl.n	1004f046 <isr_connect_master_state+0x556>
1004f03a:	4a5c      	ldr	r2, [pc, #368]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f03c:	4f5d      	ldr	r7, [pc, #372]	; (1004f1b4 <isr_connect_master_state+0x6c4>)
1004f03e:	7055      	strb	r5, [r2, #1]
1004f040:	6993      	ldr	r3, [r2, #24]
1004f042:	433b      	orrs	r3, r7
1004f044:	6193      	str	r3, [r2, #24]
1004f046:	6943      	ldr	r3, [r0, #20]
1004f048:	4a58      	ldr	r2, [pc, #352]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f04a:	2b00      	cmp	r3, #0
1004f04c:	da04      	bge.n	1004f058 <isr_connect_master_state+0x568>
1004f04e:	7055      	strb	r5, [r2, #1]
1004f050:	4f59      	ldr	r7, [pc, #356]	; (1004f1b8 <isr_connect_master_state+0x6c8>)
1004f052:	6993      	ldr	r3, [r2, #24]
1004f054:	433b      	orrs	r3, r7
1004f056:	6193      	str	r3, [r2, #24]
1004f058:	068b      	lsls	r3, r1, #26
1004f05a:	d50a      	bpl.n	1004f072 <isr_connect_master_state+0x582>
1004f05c:	074b      	lsls	r3, r1, #29
1004f05e:	d405      	bmi.n	1004f06c <isr_connect_master_state+0x57c>
1004f060:	7055      	strb	r5, [r2, #1]
1004f062:	4b56      	ldr	r3, [pc, #344]	; (1004f1bc <isr_connect_master_state+0x6cc>)
1004f064:	6991      	ldr	r1, [r2, #24]
1004f066:	4319      	orrs	r1, r3
1004f068:	6191      	str	r1, [r2, #24]
1004f06a:	e002      	b.n	1004f072 <isr_connect_master_state+0x582>
1004f06c:	23fb      	movs	r3, #251	; 0xfb
1004f06e:	4019      	ands	r1, r3
1004f070:	7141      	strb	r1, [r0, #5]
1004f072:	7901      	ldrb	r1, [r0, #4]
1004f074:	70c1      	strb	r1, [r0, #3]
1004f076:	7981      	ldrb	r1, [r0, #6]
1004f078:	07c9      	lsls	r1, r1, #31
1004f07a:	d040      	beq.n	1004f0fe <isr_connect_master_state+0x60e>
1004f07c:	4627      	mov	r7, r4
1004f07e:	3740      	adds	r7, #64	; 0x40
1004f080:	8e79      	ldrh	r1, [r7, #50]	; 0x32
1004f082:	8900      	ldrh	r0, [r0, #8]
1004f084:	1a08      	subs	r0, r1, r0
1004f086:	2101      	movs	r1, #1
1004f088:	b280      	uxth	r0, r0
1004f08a:	03c9      	lsls	r1, r1, #15
1004f08c:	4288      	cmp	r0, r1
1004f08e:	d305      	bcc.n	1004f09c <isr_connect_master_state+0x5ac>
1004f090:	4846      	ldr	r0, [pc, #280]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f092:	4a4b      	ldr	r2, [pc, #300]	; (1004f1c0 <isr_connect_master_state+0x6d0>)
1004f094:	7045      	strb	r5, [r0, #1]
1004f096:	6981      	ldr	r1, [r0, #24]
1004f098:	4311      	orrs	r1, r2
1004f09a:	e02f      	b.n	1004f0fc <isr_connect_master_state+0x60c>
1004f09c:	2800      	cmp	r0, #0
1004f09e:	d12e      	bne.n	1004f0fe <isr_connect_master_state+0x60e>
1004f0a0:	4848      	ldr	r0, [pc, #288]	; (1004f1c4 <isr_connect_master_state+0x6d4>)
1004f0a2:	8800      	ldrh	r0, [r0, #0]
1004f0a4:	0740      	lsls	r0, r0, #29
1004f0a6:	0f40      	lsrs	r0, r0, #29
1004f0a8:	f004 ff0a 	bl	10053ec0 <anchor_replace>
1004f0ac:	4684      	mov	ip, r0
1004f0ae:	483f      	ldr	r0, [pc, #252]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f0b0:	68c0      	ldr	r0, [r0, #12]
1004f0b2:	7981      	ldrb	r1, [r0, #6]
1004f0b4:	0849      	lsrs	r1, r1, #1
1004f0b6:	0049      	lsls	r1, r1, #1
1004f0b8:	7181      	strb	r1, [r0, #6]
1004f0ba:	7a31      	ldrb	r1, [r6, #8]
1004f0bc:	0849      	lsrs	r1, r1, #1
1004f0be:	0049      	lsls	r1, r1, #1
1004f0c0:	7231      	strb	r1, [r6, #8]
1004f0c2:	219c      	movs	r1, #156	; 0x9c
1004f0c4:	5b09      	ldrh	r1, [r1, r4]
1004f0c6:	8701      	strh	r1, [r0, #56]	; 0x38
1004f0c8:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
1004f0ca:	8d79      	ldrh	r1, [r7, #42]	; 0x2a
1004f0cc:	0512      	lsls	r2, r2, #20
1004f0ce:	8983      	ldrh	r3, [r0, #12]
1004f0d0:	0c12      	lsrs	r2, r2, #16
1004f0d2:	428b      	cmp	r3, r1
1004f0d4:	d105      	bne.n	1004f0e2 <isr_connect_master_state+0x5f2>
1004f0d6:	6983      	ldr	r3, [r0, #24]
1004f0d8:	4293      	cmp	r3, r2
1004f0da:	d102      	bne.n	1004f0e2 <isr_connect_master_state+0x5f2>
1004f0dc:	4662      	mov	r2, ip
1004f0de:	2a00      	cmp	r2, #0
1004f0e0:	d007      	beq.n	1004f0f2 <isr_connect_master_state+0x602>
1004f0e2:	4a32      	ldr	r2, [pc, #200]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f0e4:	2640      	movs	r6, #64	; 0x40
1004f0e6:	6993      	ldr	r3, [r2, #24]
1004f0e8:	4333      	orrs	r3, r6
1004f0ea:	e000      	b.n	1004f0ee <isr_connect_master_state+0x5fe>
1004f0ec:	e05b      	b.n	1004f1a6 <isr_connect_master_state+0x6b6>
1004f0ee:	6193      	str	r3, [r2, #24]
1004f0f0:	e001      	b.n	1004f0f6 <isr_connect_master_state+0x606>
1004f0f2:	2208      	movs	r2, #8
1004f0f4:	73b2      	strb	r2, [r6, #14]
1004f0f6:	8181      	strh	r1, [r0, #12]
1004f0f8:	8df9      	ldrh	r1, [r7, #46]	; 0x2e
1004f0fa:	0109      	lsls	r1, r1, #4
1004f0fc:	6181      	str	r1, [r0, #24]
1004f0fe:	482b      	ldr	r0, [pc, #172]	; (1004f1ac <isr_connect_master_state+0x6bc>)
1004f100:	68c2      	ldr	r2, [r0, #12]
1004f102:	7993      	ldrb	r3, [r2, #6]
1004f104:	0799      	lsls	r1, r3, #30
1004f106:	d528      	bpl.n	1004f15a <isr_connect_master_state+0x66a>
1004f108:	2176      	movs	r1, #118	; 0x76
1004f10a:	5b09      	ldrh	r1, [r1, r4]
1004f10c:	8916      	ldrh	r6, [r2, #8]
1004f10e:	1b89      	subs	r1, r1, r6
1004f110:	2601      	movs	r6, #1
1004f112:	b289      	uxth	r1, r1
1004f114:	03f6      	lsls	r6, r6, #15
1004f116:	42b1      	cmp	r1, r6
1004f118:	d305      	bcc.n	1004f126 <isr_connect_master_state+0x636>
1004f11a:	7045      	strb	r5, [r0, #1]
1004f11c:	4a28      	ldr	r2, [pc, #160]	; (1004f1c0 <isr_connect_master_state+0x6d0>)
1004f11e:	6981      	ldr	r1, [r0, #24]
1004f120:	4311      	orrs	r1, r2
1004f122:	6181      	str	r1, [r0, #24]
1004f124:	e01c      	b.n	1004f160 <isr_connect_master_state+0x670>
1004f126:	2900      	cmp	r1, #0
1004f128:	d117      	bne.n	1004f15a <isr_connect_master_state+0x66a>
1004f12a:	21fd      	movs	r1, #253	; 0xfd
1004f12c:	400b      	ands	r3, r1
1004f12e:	7193      	strb	r3, [r2, #6]
1004f130:	2280      	movs	r2, #128	; 0x80
1004f132:	6901      	ldr	r1, [r0, #16]
1004f134:	5912      	ldr	r2, [r2, r4]
1004f136:	3121      	adds	r1, #33	; 0x21
1004f138:	700a      	strb	r2, [r1, #0]
1004f13a:	0a13      	lsrs	r3, r2, #8
1004f13c:	704b      	strb	r3, [r1, #1]
1004f13e:	0c13      	lsrs	r3, r2, #16
1004f140:	708b      	strb	r3, [r1, #2]
1004f142:	0e12      	lsrs	r2, r2, #24
1004f144:	70ca      	strb	r2, [r1, #3]
1004f146:	3460      	adds	r4, #96	; 0x60
1004f148:	6901      	ldr	r1, [r0, #16]
1004f14a:	7ea2      	ldrb	r2, [r4, #26]
1004f14c:	3120      	adds	r1, #32
1004f14e:	714a      	strb	r2, [r1, #5]
1004f150:	2201      	movs	r2, #1
1004f152:	6981      	ldr	r1, [r0, #24]
1004f154:	0552      	lsls	r2, r2, #21
1004f156:	4311      	orrs	r1, r2
1004f158:	6181      	str	r1, [r0, #24]
1004f15a:	7841      	ldrb	r1, [r0, #1]
1004f15c:	2900      	cmp	r1, #0
1004f15e:	d014      	beq.n	1004f18a <isr_connect_master_state+0x69a>
1004f160:	68c0      	ldr	r0, [r0, #12]
1004f162:	2100      	movs	r1, #0
1004f164:	7081      	strb	r1, [r0, #2]
1004f166:	2009      	movs	r0, #9
1004f168:	06c0      	lsls	r0, r0, #27
1004f16a:	6041      	str	r1, [r0, #4]
1004f16c:	4815      	ldr	r0, [pc, #84]	; (1004f1c4 <isr_connect_master_state+0x6d4>)
1004f16e:	8800      	ldrh	r0, [r0, #0]
1004f170:	0740      	lsls	r0, r0, #29
1004f172:	0f40      	lsrs	r0, r0, #29
1004f174:	f004 feca 	bl	10053f0c <cancel_current_master>
1004f178:	480d      	ldr	r0, [pc, #52]	; (1004f1b0 <isr_connect_master_state+0x6c0>)
1004f17a:	6801      	ldr	r1, [r0, #0]
1004f17c:	2009      	movs	r0, #9
1004f17e:	0200      	lsls	r0, r0, #8
1004f180:	1808      	adds	r0, r1, r0
1004f182:	7840      	ldrb	r0, [r0, #1]
1004f184:	2800      	cmp	r0, #0
1004f186:	d108      	bne.n	1004f19a <isr_connect_master_state+0x6aa>
1004f188:	e00a      	b.n	1004f1a0 <isr_connect_master_state+0x6b0>
1004f18a:	4809      	ldr	r0, [pc, #36]	; (1004f1b0 <isr_connect_master_state+0x6c0>)
1004f18c:	6801      	ldr	r1, [r0, #0]
1004f18e:	2009      	movs	r0, #9
1004f190:	0200      	lsls	r0, r0, #8
1004f192:	1808      	adds	r0, r1, r0
1004f194:	7840      	ldrb	r0, [r0, #1]
1004f196:	2800      	cmp	r0, #0
1004f198:	d002      	beq.n	1004f1a0 <isr_connect_master_state+0x6b0>
1004f19a:	2001      	movs	r0, #1
1004f19c:	f008 fb70 	bl	10057880 <slave_advance>
1004f1a0:	2001      	movs	r0, #1
1004f1a2:	f00d fd39 	bl	1005cc18 <advance_wakeup_timer>
1004f1a6:	b003      	add	sp, #12
1004f1a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f1aa:	0000      	.short	0x0000
1004f1ac:	20000d18 	.word	0x20000d18
1004f1b0:	20000d64 	.word	0x20000d64
1004f1b4:	00408008 	.word	0x00408008
1004f1b8:	00048008 	.word	0x00048008
1004f1bc:	00028008 	.word	0x00028008
1004f1c0:	00088008 	.word	0x00088008
1004f1c4:	200000c0 	.word	0x200000c0

1004f1c8 <isr_connect_slave_state>:
1004f1c8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004f1ca:	48fe      	ldr	r0, [pc, #1016]	; (1004f5c4 <isr_connect_slave_state+0x3fc>)
1004f1cc:	4efe      	ldr	r6, [pc, #1016]	; (1004f5c8 <isr_connect_slave_state+0x400>)
1004f1ce:	6801      	ldr	r1, [r0, #0]
1004f1d0:	2041      	movs	r0, #65	; 0x41
1004f1d2:	0140      	lsls	r0, r0, #5
1004f1d4:	68b2      	ldr	r2, [r6, #8]
1004f1d6:	180c      	adds	r4, r1, r0
1004f1d8:	b085      	sub	sp, #20
1004f1da:	01d0      	lsls	r0, r2, #7
1004f1dc:	d573      	bpl.n	1004f2c6 <isr_connect_slave_state+0xfe>
1004f1de:	4620      	mov	r0, r4
1004f1e0:	3080      	adds	r0, #128	; 0x80
1004f1e2:	9000      	str	r0, [sp, #0]
1004f1e4:	6b80      	ldr	r0, [r0, #56]	; 0x38
1004f1e6:	7a81      	ldrb	r1, [r0, #10]
1004f1e8:	23ee      	movs	r3, #238	; 0xee
1004f1ea:	4019      	ands	r1, r3
1004f1ec:	7281      	strb	r1, [r0, #10]
1004f1ee:	4630      	mov	r0, r6
1004f1f0:	0351      	lsls	r1, r2, #13
1004f1f2:	2501      	movs	r5, #1
1004f1f4:	68c0      	ldr	r0, [r0, #12]
1004f1f6:	2900      	cmp	r1, #0
1004f1f8:	db42      	blt.n	1004f280 <isr_connect_slave_state+0xb8>
1004f1fa:	0151      	lsls	r1, r2, #5
1004f1fc:	d505      	bpl.n	1004f20a <isr_connect_slave_state+0x42>
1004f1fe:	2000      	movs	r0, #0
1004f200:	2109      	movs	r1, #9
1004f202:	06c9      	lsls	r1, r1, #27
1004f204:	6048      	str	r0, [r1, #4]
1004f206:	7035      	strb	r5, [r6, #0]
1004f208:	e036      	b.n	1004f278 <isr_connect_slave_state+0xb0>
1004f20a:	0051      	lsls	r1, r2, #1
1004f20c:	d512      	bpl.n	1004f234 <isr_connect_slave_state+0x6c>
1004f20e:	78c1      	ldrb	r1, [r0, #3]
1004f210:	1e49      	subs	r1, r1, #1
1004f212:	0609      	lsls	r1, r1, #24
1004f214:	0e09      	lsrs	r1, r1, #24
1004f216:	70c1      	strb	r1, [r0, #3]
1004f218:	d103      	bne.n	1004f222 <isr_connect_slave_state+0x5a>
1004f21a:	2209      	movs	r2, #9
1004f21c:	06d2      	lsls	r2, r2, #27
1004f21e:	6051      	str	r1, [r2, #4]
1004f220:	7035      	strb	r5, [r6, #0]
1004f222:	7941      	ldrb	r1, [r0, #5]
1004f224:	060a      	lsls	r2, r1, #24
1004f226:	d527      	bpl.n	1004f278 <isr_connect_slave_state+0xb0>
1004f228:	0649      	lsls	r1, r1, #25
1004f22a:	0e49      	lsrs	r1, r1, #25
1004f22c:	7141      	strb	r1, [r0, #5]
1004f22e:	6981      	ldr	r1, [r0, #24]
1004f230:	6141      	str	r1, [r0, #20]
1004f232:	e021      	b.n	1004f278 <isr_connect_slave_state+0xb0>
1004f234:	49e5      	ldr	r1, [pc, #916]	; (1004f5cc <isr_connect_slave_state+0x404>)
1004f236:	420a      	tst	r2, r1
1004f238:	d00a      	beq.n	1004f250 <isr_connect_slave_state+0x88>
1004f23a:	4621      	mov	r1, r4
1004f23c:	3120      	adds	r1, #32
1004f23e:	708d      	strb	r5, [r1, #2]
1004f240:	0252      	lsls	r2, r2, #9
1004f242:	d502      	bpl.n	1004f24a <isr_connect_slave_state+0x82>
1004f244:	2203      	movs	r2, #3
1004f246:	708a      	strb	r2, [r1, #2]
1004f248:	e000      	b.n	1004f24c <isr_connect_slave_state+0x84>
1004f24a:	708d      	strb	r5, [r1, #2]
1004f24c:	6981      	ldr	r1, [r0, #24]
1004f24e:	6141      	str	r1, [r0, #20]
1004f250:	7901      	ldrb	r1, [r0, #4]
1004f252:	4622      	mov	r2, r4
1004f254:	70c1      	strb	r1, [r0, #3]
1004f256:	3240      	adds	r2, #64	; 0x40
1004f258:	7991      	ldrb	r1, [r2, #6]
1004f25a:	2900      	cmp	r1, #0
1004f25c:	d008      	beq.n	1004f270 <isr_connect_slave_state+0xa8>
1004f25e:	2109      	movs	r1, #9
1004f260:	06c9      	lsls	r1, r1, #27
1004f262:	6889      	ldr	r1, [r1, #8]
1004f264:	64a1      	str	r1, [r4, #72]	; 0x48
1004f266:	2100      	movs	r1, #0
1004f268:	2302      	movs	r3, #2
1004f26a:	64e1      	str	r1, [r4, #76]	; 0x4c
1004f26c:	7793      	strb	r3, [r2, #30]
1004f26e:	65a1      	str	r1, [r4, #88]	; 0x58
1004f270:	7941      	ldrb	r1, [r0, #5]
1004f272:	0649      	lsls	r1, r1, #25
1004f274:	0e49      	lsrs	r1, r1, #25
1004f276:	7141      	strb	r1, [r0, #5]
1004f278:	2000      	movs	r0, #0
1004f27a:	2146      	movs	r1, #70	; 0x46
1004f27c:	5508      	strb	r0, [r1, r4]
1004f27e:	e039      	b.n	1004f2f4 <isr_connect_slave_state+0x12c>
1004f280:	6931      	ldr	r1, [r6, #16]
1004f282:	898a      	ldrh	r2, [r1, #12]
1004f284:	2101      	movs	r1, #1
1004f286:	0749      	lsls	r1, r1, #29
1004f288:	1852      	adds	r2, r2, r1
1004f28a:	8852      	ldrh	r2, [r2, #2]
1004f28c:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004f28e:	1852      	adds	r2, r2, r1
1004f290:	4293      	cmp	r3, r2
1004f292:	d109      	bne.n	1004f2a8 <isr_connect_slave_state+0xe0>
1004f294:	7892      	ldrb	r2, [r2, #2]
1004f296:	2a14      	cmp	r2, #20
1004f298:	d106      	bne.n	1004f2a8 <isr_connect_slave_state+0xe0>
1004f29a:	4603      	mov	r3, r0
1004f29c:	3340      	adds	r3, #64	; 0x40
1004f29e:	7d1a      	ldrb	r2, [r3, #20]
1004f2a0:	27df      	movs	r7, #223	; 0xdf
1004f2a2:	403a      	ands	r2, r7
1004f2a4:	432a      	orrs	r2, r5
1004f2a6:	751a      	strb	r2, [r3, #20]
1004f2a8:	6a80      	ldr	r0, [r0, #40]	; 0x28
1004f2aa:	8840      	ldrh	r0, [r0, #2]
1004f2ac:	1840      	adds	r0, r0, r1
1004f2ae:	217d      	movs	r1, #125	; 0x7d
1004f2b0:	7800      	ldrb	r0, [r0, #0]
1004f2b2:	5d09      	ldrb	r1, [r1, r4]
1004f2b4:	4308      	orrs	r0, r1
1004f2b6:	06c0      	lsls	r0, r0, #27
1004f2b8:	d406      	bmi.n	1004f2c8 <isr_connect_slave_state+0x100>
1004f2ba:	2000      	movs	r0, #0
1004f2bc:	2109      	movs	r1, #9
1004f2be:	7035      	strb	r5, [r6, #0]
1004f2c0:	06c9      	lsls	r1, r1, #27
1004f2c2:	6048      	str	r0, [r1, #4]
1004f2c4:	e010      	b.n	1004f2e8 <isr_connect_slave_state+0x120>
1004f2c6:	e282      	b.n	1004f7ce <isr_connect_slave_state+0x606>
1004f2c8:	6d60      	ldr	r0, [r4, #84]	; 0x54
1004f2ca:	f008 f947 	bl	1005755c <machine_time_trans>
1004f2ce:	4601      	mov	r1, r0
1004f2d0:	2009      	movs	r0, #9
1004f2d2:	06c0      	lsls	r0, r0, #27
1004f2d4:	6902      	ldr	r2, [r0, #16]
1004f2d6:	6d23      	ldr	r3, [r4, #80]	; 0x50
1004f2d8:	1ad2      	subs	r2, r2, r3
1004f2da:	0212      	lsls	r2, r2, #8
1004f2dc:	0a12      	lsrs	r2, r2, #8
1004f2de:	4291      	cmp	r1, r2
1004f2e0:	d202      	bcs.n	1004f2e8 <isr_connect_slave_state+0x120>
1004f2e2:	7035      	strb	r5, [r6, #0]
1004f2e4:	2100      	movs	r1, #0
1004f2e6:	6041      	str	r1, [r0, #4]
1004f2e8:	68f0      	ldr	r0, [r6, #12]
1004f2ea:	2201      	movs	r2, #1
1004f2ec:	6901      	ldr	r1, [r0, #16]
1004f2ee:	03d2      	lsls	r2, r2, #15
1004f2f0:	4391      	bics	r1, r2
1004f2f2:	6101      	str	r1, [r0, #16]
1004f2f4:	68b2      	ldr	r2, [r6, #8]
1004f2f6:	0250      	lsls	r0, r2, #9
1004f2f8:	d513      	bpl.n	1004f322 <isr_connect_slave_state+0x15a>
1004f2fa:	6930      	ldr	r0, [r6, #16]
1004f2fc:	8980      	ldrh	r0, [r0, #12]
1004f2fe:	2101      	movs	r1, #1
1004f300:	0749      	lsls	r1, r1, #29
1004f302:	1840      	adds	r0, r0, r1
1004f304:	8840      	ldrh	r0, [r0, #2]
1004f306:	1840      	adds	r0, r0, r1
1004f308:	6170      	str	r0, [r6, #20]
1004f30a:	68f1      	ldr	r1, [r6, #12]
1004f30c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
1004f30e:	4283      	cmp	r3, r0
1004f310:	d107      	bne.n	1004f322 <isr_connect_slave_state+0x15a>
1004f312:	7880      	ldrb	r0, [r0, #2]
1004f314:	280d      	cmp	r0, #13
1004f316:	d104      	bne.n	1004f322 <isr_connect_slave_state+0x15a>
1004f318:	2001      	movs	r0, #1
1004f31a:	690b      	ldr	r3, [r1, #16]
1004f31c:	0400      	lsls	r0, r0, #16
1004f31e:	4383      	bics	r3, r0
1004f320:	610b      	str	r3, [r1, #16]
1004f322:	4637      	mov	r7, r6
1004f324:	2a00      	cmp	r2, #0
1004f326:	da48      	bge.n	1004f3ba <isr_connect_slave_state+0x1f2>
1004f328:	9800      	ldr	r0, [sp, #0]
1004f32a:	6b80      	ldr	r0, [r0, #56]	; 0x38
1004f32c:	8841      	ldrh	r1, [r0, #2]
1004f32e:	2001      	movs	r0, #1
1004f330:	0740      	lsls	r0, r0, #29
1004f332:	1808      	adds	r0, r1, r0
1004f334:	61f8      	str	r0, [r7, #28]
1004f336:	2009      	movs	r0, #9
1004f338:	06c0      	lsls	r0, r0, #27
1004f33a:	6940      	ldr	r0, [r0, #20]
1004f33c:	0dc0      	lsrs	r0, r0, #23
1004f33e:	07c0      	lsls	r0, r0, #31
1004f340:	d008      	beq.n	1004f354 <isr_connect_slave_state+0x18c>
1004f342:	2000      	movs	r0, #0
1004f344:	2109      	movs	r1, #9
1004f346:	707d      	strb	r5, [r7, #1]
1004f348:	06c9      	lsls	r1, r1, #27
1004f34a:	6048      	str	r0, [r1, #4]
1004f34c:	703d      	strb	r5, [r7, #0]
1004f34e:	48a0      	ldr	r0, [pc, #640]	; (1004f5d0 <isr_connect_slave_state+0x408>)
1004f350:	61b0      	str	r0, [r6, #24]
1004f352:	e0f1      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f354:	68f8      	ldr	r0, [r7, #12]
1004f356:	2141      	movs	r1, #65	; 0x41
1004f358:	6900      	ldr	r0, [r0, #16]
1004f35a:	0149      	lsls	r1, r1, #5
1004f35c:	4208      	tst	r0, r1
1004f35e:	d00a      	beq.n	1004f376 <isr_connect_slave_state+0x1ae>
1004f360:	f7f2 fc14 	bl	10041b8c <data_length_extension_csr_ucfg>
1004f364:	2801      	cmp	r0, #1
1004f366:	d029      	beq.n	1004f3bc <isr_connect_slave_state+0x1f4>
1004f368:	221c      	movs	r2, #28
1004f36a:	69f9      	ldr	r1, [r7, #28]
1004f36c:	7848      	ldrb	r0, [r1, #1]
1004f36e:	4202      	tst	r2, r0
1004f370:	d001      	beq.n	1004f376 <isr_connect_slave_state+0x1ae>
1004f372:	1f00      	subs	r0, r0, #4
1004f374:	7048      	strb	r0, [r1, #1]
1004f376:	69f8      	ldr	r0, [r7, #28]
1004f378:	227d      	movs	r2, #125	; 0x7d
1004f37a:	7801      	ldrb	r1, [r0, #0]
1004f37c:	5511      	strb	r1, [r2, r4]
1004f37e:	43c9      	mvns	r1, r1
1004f380:	0789      	lsls	r1, r1, #30
1004f382:	d01d      	beq.n	1004f3c0 <isr_connect_slave_state+0x1f8>
1004f384:	68f8      	ldr	r0, [r7, #12]
1004f386:	6900      	ldr	r0, [r0, #16]
1004f388:	03c0      	lsls	r0, r0, #15
1004f38a:	d56f      	bpl.n	1004f46c <isr_connect_slave_state+0x2a4>
1004f38c:	f7f2 fbfe 	bl	10041b8c <data_length_extension_csr_ucfg>
1004f390:	2801      	cmp	r0, #1
1004f392:	d06c      	beq.n	1004f46e <isr_connect_slave_state+0x2a6>
1004f394:	201f      	movs	r0, #31
1004f396:	69f9      	ldr	r1, [r7, #28]
1004f398:	7849      	ldrb	r1, [r1, #1]
1004f39a:	4208      	tst	r0, r1
1004f39c:	d066      	beq.n	1004f46c <isr_connect_slave_state+0x2a4>
1004f39e:	2000      	movs	r0, #0
1004f3a0:	2109      	movs	r1, #9
1004f3a2:	707d      	strb	r5, [r7, #1]
1004f3a4:	06c9      	lsls	r1, r1, #27
1004f3a6:	6048      	str	r0, [r1, #4]
1004f3a8:	703d      	strb	r5, [r7, #0]
1004f3aa:	4889      	ldr	r0, [pc, #548]	; (1004f5d0 <isr_connect_slave_state+0x408>)
1004f3ac:	61b8      	str	r0, [r7, #24]
1004f3ae:	68f8      	ldr	r0, [r7, #12]
1004f3b0:	2101      	movs	r1, #1
1004f3b2:	6902      	ldr	r2, [r0, #16]
1004f3b4:	0409      	lsls	r1, r1, #16
1004f3b6:	438a      	bics	r2, r1
1004f3b8:	6102      	str	r2, [r0, #16]
1004f3ba:	e0bd      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f3bc:	22fc      	movs	r2, #252	; 0xfc
1004f3be:	e7d4      	b.n	1004f36a <isr_connect_slave_state+0x1a2>
1004f3c0:	7886      	ldrb	r6, [r0, #2]
1004f3c2:	7841      	ldrb	r1, [r0, #1]
1004f3c4:	2e1a      	cmp	r6, #26
1004f3c6:	d274      	bcs.n	1004f4b2 <isr_connect_slave_state+0x2ea>
1004f3c8:	4a82      	ldr	r2, [pc, #520]	; (1004f5d4 <isr_connect_slave_state+0x40c>)
1004f3ca:	5d92      	ldrb	r2, [r2, r6]
1004f3cc:	2aff      	cmp	r2, #255	; 0xff
1004f3ce:	d070      	beq.n	1004f4b2 <isr_connect_slave_state+0x2ea>
1004f3d0:	428a      	cmp	r2, r1
1004f3d2:	d16e      	bne.n	1004f4b2 <isr_connect_slave_state+0x2ea>
1004f3d4:	2e02      	cmp	r6, #2
1004f3d6:	d014      	beq.n	1004f402 <isr_connect_slave_state+0x23a>
1004f3d8:	68f9      	ldr	r1, [r7, #12]
1004f3da:	794a      	ldrb	r2, [r1, #5]
1004f3dc:	06d2      	lsls	r2, r2, #27
1004f3de:	d459      	bmi.n	1004f494 <isr_connect_slave_state+0x2cc>
1004f3e0:	2e06      	cmp	r6, #6
1004f3e2:	d015      	beq.n	1004f410 <isr_connect_slave_state+0x248>
1004f3e4:	690a      	ldr	r2, [r1, #16]
1004f3e6:	03d3      	lsls	r3, r2, #15
1004f3e8:	d527      	bpl.n	1004f43a <isr_connect_slave_state+0x272>
1004f3ea:	2000      	movs	r0, #0
1004f3ec:	2209      	movs	r2, #9
1004f3ee:	707d      	strb	r5, [r7, #1]
1004f3f0:	06d2      	lsls	r2, r2, #27
1004f3f2:	6050      	str	r0, [r2, #4]
1004f3f4:	703d      	strb	r5, [r7, #0]
1004f3f6:	4876      	ldr	r0, [pc, #472]	; (1004f5d0 <isr_connect_slave_state+0x408>)
1004f3f8:	61b8      	str	r0, [r7, #24]
1004f3fa:	690a      	ldr	r2, [r1, #16]
1004f3fc:	1100      	asrs	r0, r0, #4
1004f3fe:	4382      	bics	r2, r0
1004f400:	e05b      	b.n	1004f4ba <isr_connect_slave_state+0x2f2>
1004f402:	68f8      	ldr	r0, [r7, #12]
1004f404:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004f406:	6005      	str	r5, [r0, #0]
1004f408:	68f9      	ldr	r1, [r7, #12]
1004f40a:	2023      	movs	r0, #35	; 0x23
1004f40c:	7148      	strb	r0, [r1, #5]
1004f40e:	e093      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f410:	2201      	movs	r2, #1
1004f412:	69b8      	ldr	r0, [r7, #24]
1004f414:	0392      	lsls	r2, r2, #14
1004f416:	4310      	orrs	r0, r2
1004f418:	61b8      	str	r0, [r7, #24]
1004f41a:	4a6f      	ldr	r2, [pc, #444]	; (1004f5d8 <isr_connect_slave_state+0x410>)
1004f41c:	6908      	ldr	r0, [r1, #16]
1004f41e:	4010      	ands	r0, r2
1004f420:	2215      	movs	r2, #21
1004f422:	0252      	lsls	r2, r2, #9
1004f424:	4310      	orrs	r0, r2
1004f426:	6108      	str	r0, [r1, #16]
1004f428:	4620      	mov	r0, r4
1004f42a:	30c0      	adds	r0, #192	; 0xc0
1004f42c:	7bc1      	ldrb	r1, [r0, #15]
1004f42e:	78ba      	ldrb	r2, [r7, #2]
1004f430:	4291      	cmp	r1, r2
1004f432:	d12f      	bne.n	1004f494 <isr_connect_slave_state+0x2cc>
1004f434:	2108      	movs	r1, #8
1004f436:	73c1      	strb	r1, [r0, #15]
1004f438:	e07e      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f43a:	2e00      	cmp	r6, #0
1004f43c:	d018      	beq.n	1004f470 <isr_connect_slave_state+0x2a8>
1004f43e:	2e01      	cmp	r6, #1
1004f440:	d029      	beq.n	1004f496 <isr_connect_slave_state+0x2ce>
1004f442:	2e03      	cmp	r6, #3
1004f444:	d02c      	beq.n	1004f4a0 <isr_connect_slave_state+0x2d8>
1004f446:	2e0a      	cmp	r6, #10
1004f448:	d034      	beq.n	1004f4b4 <isr_connect_slave_state+0x2ec>
1004f44a:	2e0b      	cmp	r6, #11
1004f44c:	d037      	beq.n	1004f4be <isr_connect_slave_state+0x2f6>
1004f44e:	2e08      	cmp	r6, #8
1004f450:	d038      	beq.n	1004f4c4 <isr_connect_slave_state+0x2fc>
1004f452:	2e09      	cmp	r6, #9
1004f454:	d039      	beq.n	1004f4ca <isr_connect_slave_state+0x302>
1004f456:	2e0c      	cmp	r6, #12
1004f458:	d03a      	beq.n	1004f4d0 <isr_connect_slave_state+0x308>
1004f45a:	4602      	mov	r2, r0
1004f45c:	4b5f      	ldr	r3, [pc, #380]	; (1004f5dc <isr_connect_slave_state+0x414>)
1004f45e:	4631      	mov	r1, r6
1004f460:	2001      	movs	r0, #1
1004f462:	f7f2 fb83 	bl	10041b6c <Data_Length_Update_Control_ISR_ucfg>
1004f466:	2800      	cmp	r0, #0
1004f468:	d166      	bne.n	1004f538 <isr_connect_slave_state+0x370>
1004f46a:	e049      	b.n	1004f500 <isr_connect_slave_state+0x338>
1004f46c:	e05b      	b.n	1004f526 <isr_connect_slave_state+0x35e>
1004f46e:	e058      	b.n	1004f522 <isr_connect_slave_state+0x35a>
1004f470:	460a      	mov	r2, r1
1004f472:	4621      	mov	r1, r4
1004f474:	f006 fd7d 	bl	10055f72 <unpack_update_request>
1004f478:	69f8      	ldr	r0, [r7, #28]
1004f47a:	7981      	ldrb	r1, [r0, #6]
1004f47c:	79c0      	ldrb	r0, [r0, #7]
1004f47e:	0200      	lsls	r0, r0, #8
1004f480:	4308      	orrs	r0, r1
1004f482:	4957      	ldr	r1, [pc, #348]	; (1004f5e0 <isr_connect_slave_state+0x418>)
1004f484:	0240      	lsls	r0, r0, #9
1004f486:	1840      	adds	r0, r0, r1
1004f488:	4956      	ldr	r1, [pc, #344]	; (1004f5e4 <isr_connect_slave_state+0x41c>)
1004f48a:	6a89      	ldr	r1, [r1, #40]	; 0x28
1004f48c:	4281      	cmp	r1, r0
1004f48e:	d800      	bhi.n	1004f492 <isr_connect_slave_state+0x2ca>
1004f490:	4608      	mov	r0, r1
1004f492:	6560      	str	r0, [r4, #84]	; 0x54
1004f494:	e050      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f496:	460a      	mov	r2, r1
1004f498:	4621      	mov	r1, r4
1004f49a:	f006 fd53 	bl	10055f44 <unpack_channel_map>
1004f49e:	e04b      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f4a0:	69b8      	ldr	r0, [r7, #24]
1004f4a2:	2380      	movs	r3, #128	; 0x80
1004f4a4:	4318      	orrs	r0, r3
1004f4a6:	61b8      	str	r0, [r7, #24]
1004f4a8:	2041      	movs	r0, #65	; 0x41
1004f4aa:	0400      	lsls	r0, r0, #16
1004f4ac:	4302      	orrs	r2, r0
1004f4ae:	610a      	str	r2, [r1, #16]
1004f4b0:	e042      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f4b2:	e027      	b.n	1004f504 <isr_connect_slave_state+0x33c>
1004f4b4:	2089      	movs	r0, #137	; 0x89
1004f4b6:	01c0      	lsls	r0, r0, #7
1004f4b8:	e005      	b.n	1004f4c6 <isr_connect_slave_state+0x2fe>
1004f4ba:	610a      	str	r2, [r1, #16]
1004f4bc:	e03c      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f4be:	484a      	ldr	r0, [pc, #296]	; (1004f5e8 <isr_connect_slave_state+0x420>)
1004f4c0:	4002      	ands	r2, r0
1004f4c2:	e7fa      	b.n	1004f4ba <isr_connect_slave_state+0x2f2>
1004f4c4:	2010      	movs	r0, #16
1004f4c6:	4302      	orrs	r2, r0
1004f4c8:	e7f7      	b.n	1004f4ba <isr_connect_slave_state+0x2f2>
1004f4ca:	2001      	movs	r0, #1
1004f4cc:	0300      	lsls	r0, r0, #12
1004f4ce:	e026      	b.n	1004f51e <isr_connect_slave_state+0x356>
1004f4d0:	0796      	lsls	r6, r2, #30
1004f4d2:	2304      	movs	r3, #4
1004f4d4:	2e00      	cmp	r6, #0
1004f4d6:	da08      	bge.n	1004f4ea <isr_connect_slave_state+0x322>
1004f4d8:	69be      	ldr	r6, [r7, #24]
1004f4da:	431e      	orrs	r6, r3
1004f4dc:	2302      	movs	r3, #2
1004f4de:	439a      	bics	r2, r3
1004f4e0:	2308      	movs	r3, #8
1004f4e2:	61be      	str	r6, [r7, #24]
1004f4e4:	26cf      	movs	r6, #207	; 0xcf
1004f4e6:	5533      	strb	r3, [r6, r4]
1004f4e8:	e002      	b.n	1004f4f0 <isr_connect_slave_state+0x328>
1004f4ea:	07d6      	lsls	r6, r2, #31
1004f4ec:	d100      	bne.n	1004f4f0 <isr_connect_slave_state+0x328>
1004f4ee:	431a      	orrs	r2, r3
1004f4f0:	432a      	orrs	r2, r5
1004f4f2:	610a      	str	r2, [r1, #16]
1004f4f4:	2205      	movs	r2, #5
1004f4f6:	1cc0      	adds	r0, r0, #3
1004f4f8:	312c      	adds	r1, #44	; 0x2c
1004f4fa:	f7fd fa43 	bl	1004c984 <char_copy>
1004f4fe:	e01b      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f500:	2e07      	cmp	r6, #7
1004f502:	d006      	beq.n	1004f512 <isr_connect_slave_state+0x34a>
1004f504:	68f8      	ldr	r0, [r7, #12]
1004f506:	2208      	movs	r2, #8
1004f508:	6901      	ldr	r1, [r0, #16]
1004f50a:	4311      	orrs	r1, r2
1004f50c:	6101      	str	r1, [r0, #16]
1004f50e:	71c6      	strb	r6, [r0, #7]
1004f510:	e012      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f512:	69f8      	ldr	r0, [r7, #28]
1004f514:	78c0      	ldrb	r0, [r0, #3]
1004f516:	280e      	cmp	r0, #14
1004f518:	d10e      	bne.n	1004f538 <isr_connect_slave_state+0x370>
1004f51a:	2001      	movs	r0, #1
1004f51c:	0680      	lsls	r0, r0, #26
1004f51e:	61b8      	str	r0, [r7, #24]
1004f520:	e00a      	b.n	1004f538 <isr_connect_slave_state+0x370>
1004f522:	20ff      	movs	r0, #255	; 0xff
1004f524:	e737      	b.n	1004f396 <isr_connect_slave_state+0x1ce>
1004f526:	4621      	mov	r1, r4
1004f528:	68fb      	ldr	r3, [r7, #12]
1004f52a:	693a      	ldr	r2, [r7, #16]
1004f52c:	69f8      	ldr	r0, [r7, #28]
1004f52e:	f00f fc7d 	bl	1005ee2c <LL_receive_data>
1004f532:	69b9      	ldr	r1, [r7, #24]
1004f534:	4308      	orrs	r0, r1
1004f536:	61b8      	str	r0, [r7, #24]
1004f538:	4f23      	ldr	r7, [pc, #140]	; (1004f5c8 <isr_connect_slave_state+0x400>)
1004f53a:	68f8      	ldr	r0, [r7, #12]
1004f53c:	6939      	ldr	r1, [r7, #16]
1004f53e:	6a06      	ldr	r6, [r0, #32]
1004f540:	8a0a      	ldrh	r2, [r1, #16]
1004f542:	2301      	movs	r3, #1
1004f544:	075b      	lsls	r3, r3, #29
1004f546:	18d2      	adds	r2, r2, r3
1004f548:	9201      	str	r2, [sp, #4]
1004f54a:	8852      	ldrh	r2, [r2, #2]
1004f54c:	18d2      	adds	r2, r2, r3
1004f54e:	2300      	movs	r3, #0
1004f550:	617a      	str	r2, [r7, #20]
1004f552:	9302      	str	r3, [sp, #8]
1004f554:	68bb      	ldr	r3, [r7, #8]
1004f556:	2711      	movs	r7, #17
1004f558:	04bf      	lsls	r7, r7, #18
1004f55a:	423b      	tst	r3, r7
1004f55c:	d11e      	bne.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f55e:	015f      	lsls	r7, r3, #5
1004f560:	d41c      	bmi.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f562:	6b47      	ldr	r7, [r0, #52]	; 0x34
1004f564:	4297      	cmp	r7, r2
1004f566:	d001      	beq.n	1004f56c <isr_connect_slave_state+0x3a4>
1004f568:	2701      	movs	r7, #1
1004f56a:	e000      	b.n	1004f56e <isr_connect_slave_state+0x3a6>
1004f56c:	2700      	movs	r7, #0
1004f56e:	9703      	str	r7, [sp, #12]
1004f570:	4290      	cmp	r0, r2
1004f572:	d001      	beq.n	1004f578 <isr_connect_slave_state+0x3b0>
1004f574:	2701      	movs	r7, #1
1004f576:	e000      	b.n	1004f57a <isr_connect_slave_state+0x3b2>
1004f578:	2700      	movs	r7, #0
1004f57a:	46bc      	mov	ip, r7
1004f57c:	2e00      	cmp	r6, #0
1004f57e:	d00d      	beq.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f580:	9f03      	ldr	r7, [sp, #12]
1004f582:	2f00      	cmp	r7, #0
1004f584:	d00a      	beq.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f586:	4667      	mov	r7, ip
1004f588:	2f00      	cmp	r7, #0
1004f58a:	d007      	beq.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f58c:	7cf7      	ldrb	r7, [r6, #19]
1004f58e:	09ff      	lsrs	r7, r7, #7
1004f590:	d004      	beq.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f592:	6837      	ldr	r7, [r6, #0]
1004f594:	2f00      	cmp	r7, #0
1004f596:	d001      	beq.n	1004f59c <isr_connect_slave_state+0x3d4>
1004f598:	2701      	movs	r7, #1
1004f59a:	9702      	str	r7, [sp, #8]
1004f59c:	025b      	lsls	r3, r3, #9
1004f59e:	d402      	bmi.n	1004f5a6 <isr_connect_slave_state+0x3de>
1004f5a0:	9b02      	ldr	r3, [sp, #8]
1004f5a2:	2b00      	cmp	r3, #0
1004f5a4:	d075      	beq.n	1004f692 <isr_connect_slave_state+0x4ca>
1004f5a6:	7943      	ldrb	r3, [r0, #5]
1004f5a8:	079f      	lsls	r7, r3, #30
1004f5aa:	d501      	bpl.n	1004f5b0 <isr_connect_slave_state+0x3e8>
1004f5ac:	2e00      	cmp	r6, #0
1004f5ae:	d01d      	beq.n	1004f5ec <isr_connect_slave_state+0x424>
1004f5b0:	085b      	lsrs	r3, r3, #1
1004f5b2:	005b      	lsls	r3, r3, #1
1004f5b4:	6b47      	ldr	r7, [r0, #52]	; 0x34
1004f5b6:	4297      	cmp	r7, r2
1004f5b8:	d157      	bne.n	1004f66a <isr_connect_slave_state+0x4a2>
1004f5ba:	7143      	strb	r3, [r0, #5]
1004f5bc:	7893      	ldrb	r3, [r2, #2]
1004f5be:	2b04      	cmp	r3, #4
1004f5c0:	d019      	beq.n	1004f5f6 <isr_connect_slave_state+0x42e>
1004f5c2:	e02a      	b.n	1004f61a <isr_connect_slave_state+0x452>
1004f5c4:	20000d64 	.word	0x20000d64
1004f5c8:	20000d18 	.word	0x20000d18
1004f5cc:	80400000 	.word	0x80400000
1004f5d0:	00100008 	.word	0x00100008
1004f5d4:	1005fe58 	.word	0x1005fe58
1004f5d8:	fffefbdf 	.word	0xfffefbdf
1004f5dc:	20000d30 	.word	0x20000d30
1004f5e0:	fffffd9a 	.word	0xfffffd9a
1004f5e4:	200002dc 	.word	0x200002dc
1004f5e8:	fffeffbf 	.word	0xfffeffbf
1004f5ec:	432b      	orrs	r3, r5
1004f5ee:	461f      	mov	r7, r3
1004f5f0:	432f      	orrs	r7, r5
1004f5f2:	7147      	strb	r7, [r0, #5]
1004f5f4:	e7de      	b.n	1004f5b4 <isr_connect_slave_state+0x3ec>
1004f5f6:	4623      	mov	r3, r4
1004f5f8:	33c0      	adds	r3, #192	; 0xc0
1004f5fa:	7bdf      	ldrb	r7, [r3, #15]
1004f5fc:	2f08      	cmp	r7, #8
1004f5fe:	d105      	bne.n	1004f60c <isr_connect_slave_state+0x444>
1004f600:	4fe2      	ldr	r7, [pc, #904]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f602:	78bf      	ldrb	r7, [r7, #2]
1004f604:	73df      	strb	r7, [r3, #15]
1004f606:	277d      	movs	r7, #125	; 0x7d
1004f608:	027f      	lsls	r7, r7, #9
1004f60a:	819f      	strh	r7, [r3, #12]
1004f60c:	4bdf      	ldr	r3, [pc, #892]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f60e:	2701      	movs	r7, #1
1004f610:	699b      	ldr	r3, [r3, #24]
1004f612:	06ff      	lsls	r7, r7, #27
1004f614:	433b      	orrs	r3, r7
1004f616:	4fdd      	ldr	r7, [pc, #884]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f618:	61bb      	str	r3, [r7, #24]
1004f61a:	7943      	ldrb	r3, [r0, #5]
1004f61c:	06db      	lsls	r3, r3, #27
1004f61e:	d50c      	bpl.n	1004f63a <isr_connect_slave_state+0x472>
1004f620:	4bda      	ldr	r3, [pc, #872]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f622:	2709      	movs	r7, #9
1004f624:	705d      	strb	r5, [r3, #1]
1004f626:	2300      	movs	r3, #0
1004f628:	06ff      	lsls	r7, r7, #27
1004f62a:	607b      	str	r3, [r7, #4]
1004f62c:	4bd7      	ldr	r3, [pc, #860]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f62e:	4fd8      	ldr	r7, [pc, #864]	; (1004f990 <isr_connect_slave_state+0x7c8>)
1004f630:	701d      	strb	r5, [r3, #0]
1004f632:	699b      	ldr	r3, [r3, #24]
1004f634:	433b      	orrs	r3, r7
1004f636:	4fd5      	ldr	r7, [pc, #852]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f638:	61bb      	str	r3, [r7, #24]
1004f63a:	7892      	ldrb	r2, [r2, #2]
1004f63c:	2a15      	cmp	r2, #21
1004f63e:	d132      	bne.n	1004f6a6 <isr_connect_slave_state+0x4de>
1004f640:	4607      	mov	r7, r0
1004f642:	3740      	adds	r7, #64	; 0x40
1004f644:	7d3a      	ldrb	r2, [r7, #20]
1004f646:	23fd      	movs	r3, #253	; 0xfd
1004f648:	401a      	ands	r2, r3
1004f64a:	46bc      	mov	ip, r7
1004f64c:	753a      	strb	r2, [r7, #20]
1004f64e:	0713      	lsls	r3, r2, #28
1004f650:	d529      	bpl.n	1004f6a6 <isr_connect_slave_state+0x4de>
1004f652:	4bce      	ldr	r3, [pc, #824]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f654:	2701      	movs	r7, #1
1004f656:	699b      	ldr	r3, [r3, #24]
1004f658:	067f      	lsls	r7, r7, #25
1004f65a:	433b      	orrs	r3, r7
1004f65c:	4fcb      	ldr	r7, [pc, #812]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f65e:	61bb      	str	r3, [r7, #24]
1004f660:	23f7      	movs	r3, #247	; 0xf7
1004f662:	401a      	ands	r2, r3
1004f664:	4663      	mov	r3, ip
1004f666:	751a      	strb	r2, [r3, #20]
1004f668:	e01d      	b.n	1004f6a6 <isr_connect_slave_state+0x4de>
1004f66a:	4282      	cmp	r2, r0
1004f66c:	d01b      	beq.n	1004f6a6 <isr_connect_slave_state+0x4de>
1004f66e:	8a33      	ldrh	r3, [r6, #16]
1004f670:	7cb7      	ldrb	r7, [r6, #18]
1004f672:	2200      	movs	r2, #0
1004f674:	19db      	adds	r3, r3, r7
1004f676:	8233      	strh	r3, [r6, #16]
1004f678:	6973      	ldr	r3, [r6, #20]
1004f67a:	61b3      	str	r3, [r6, #24]
1004f67c:	74b2      	strb	r2, [r6, #18]
1004f67e:	8a33      	ldrh	r3, [r6, #16]
1004f680:	88f7      	ldrh	r7, [r6, #6]
1004f682:	42bb      	cmp	r3, r7
1004f684:	d202      	bcs.n	1004f68c <isr_connect_slave_state+0x4c4>
1004f686:	7cf7      	ldrb	r7, [r6, #19]
1004f688:	09ff      	lsrs	r7, r7, #7
1004f68a:	d003      	beq.n	1004f694 <isr_connect_slave_state+0x4cc>
1004f68c:	6836      	ldr	r6, [r6, #0]
1004f68e:	2220      	movs	r2, #32
1004f690:	e005      	b.n	1004f69e <isr_connect_slave_state+0x4d6>
1004f692:	e068      	b.n	1004f766 <isr_connect_slave_state+0x59e>
1004f694:	06db      	lsls	r3, r3, #27
1004f696:	d102      	bne.n	1004f69e <isr_connect_slave_state+0x4d6>
1004f698:	69b3      	ldr	r3, [r6, #24]
1004f69a:	681b      	ldr	r3, [r3, #0]
1004f69c:	61b3      	str	r3, [r6, #24]
1004f69e:	4bbb      	ldr	r3, [pc, #748]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f6a0:	699f      	ldr	r7, [r3, #24]
1004f6a2:	433a      	orrs	r2, r7
1004f6a4:	619a      	str	r2, [r3, #24]
1004f6a6:	7942      	ldrb	r2, [r0, #5]
1004f6a8:	2700      	movs	r7, #0
1004f6aa:	07d2      	lsls	r2, r2, #31
1004f6ac:	d017      	beq.n	1004f6de <isr_connect_slave_state+0x516>
1004f6ae:	4ab7      	ldr	r2, [pc, #732]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f6b0:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004f6b2:	6153      	str	r3, [r2, #20]
1004f6b4:	789a      	ldrb	r2, [r3, #2]
1004f6b6:	2a05      	cmp	r2, #5
1004f6b8:	d13b      	bne.n	1004f732 <isr_connect_slave_state+0x56a>
1004f6ba:	6902      	ldr	r2, [r0, #16]
1004f6bc:	2320      	movs	r3, #32
1004f6be:	431a      	orrs	r2, r3
1004f6c0:	6102      	str	r2, [r0, #16]
1004f6c2:	2000      	movs	r0, #0
1004f6c4:	7008      	strb	r0, [r1, #0]
1004f6c6:	7148      	strb	r0, [r1, #5]
1004f6c8:	7048      	strb	r0, [r1, #1]
1004f6ca:	7188      	strb	r0, [r1, #6]
1004f6cc:	7088      	strb	r0, [r1, #2]
1004f6ce:	71c8      	strb	r0, [r1, #7]
1004f6d0:	70c8      	strb	r0, [r1, #3]
1004f6d2:	7208      	strb	r0, [r1, #8]
1004f6d4:	7108      	strb	r0, [r1, #4]
1004f6d6:	7248      	strb	r0, [r1, #9]
1004f6d8:	2080      	movs	r0, #128	; 0x80
1004f6da:	7248      	strb	r0, [r1, #9]
1004f6dc:	e029      	b.n	1004f732 <isr_connect_slave_state+0x56a>
1004f6de:	2e00      	cmp	r6, #0
1004f6e0:	d00a      	beq.n	1004f6f8 <isr_connect_slave_state+0x530>
1004f6e2:	f00d fa03 	bl	1005caec <isr_Acl_Data_TX_Cmpl_Queue_Full>
1004f6e6:	2800      	cmp	r0, #0
1004f6e8:	d106      	bne.n	1004f6f8 <isr_connect_slave_state+0x530>
1004f6ea:	48a8      	ldr	r0, [pc, #672]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f6ec:	2233      	movs	r2, #51	; 0x33
1004f6ee:	68c1      	ldr	r1, [r0, #12]
1004f6f0:	0152      	lsls	r2, r2, #5
1004f6f2:	6909      	ldr	r1, [r1, #16]
1004f6f4:	4211      	tst	r1, r2
1004f6f6:	d009      	beq.n	1004f70c <isr_connect_slave_state+0x544>
1004f6f8:	49a4      	ldr	r1, [pc, #656]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f6fa:	2201      	movs	r2, #1
1004f6fc:	68c8      	ldr	r0, [r1, #12]
1004f6fe:	6148      	str	r0, [r1, #20]
1004f700:	8005      	strh	r5, [r0, #0]
1004f702:	6901      	ldr	r1, [r0, #16]
1004f704:	03d2      	lsls	r2, r2, #15
1004f706:	4311      	orrs	r1, r2
1004f708:	6101      	str	r1, [r0, #16]
1004f70a:	e012      	b.n	1004f732 <isr_connect_slave_state+0x56a>
1004f70c:	4aa1      	ldr	r2, [pc, #644]	; (1004f994 <isr_connect_slave_state+0x7cc>)
1004f70e:	7c31      	ldrb	r1, [r6, #16]
1004f710:	6813      	ldr	r3, [r2, #0]
1004f712:	2209      	movs	r2, #9
1004f714:	0212      	lsls	r2, r2, #8
1004f716:	06c9      	lsls	r1, r1, #27
1004f718:	189a      	adds	r2, r3, r2
1004f71a:	0ec9      	lsrs	r1, r1, #27
1004f71c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
1004f71e:	2701      	movs	r7, #1
1004f720:	1c89      	adds	r1, r1, #2
1004f722:	1889      	adds	r1, r1, r2
1004f724:	6141      	str	r1, [r0, #20]
1004f726:	9a01      	ldr	r2, [sp, #4]
1004f728:	8051      	strh	r1, [r2, #2]
1004f72a:	4631      	mov	r1, r6
1004f72c:	68c0      	ldr	r0, [r0, #12]
1004f72e:	f7fe ff8b 	bl	1004e648 <copy_tx_data_packet>
1004f732:	4e96      	ldr	r6, [pc, #600]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f734:	2121      	movs	r1, #33	; 0x21
1004f736:	68f0      	ldr	r0, [r6, #12]
1004f738:	0189      	lsls	r1, r1, #6
1004f73a:	6900      	ldr	r0, [r0, #16]
1004f73c:	4208      	tst	r0, r1
1004f73e:	d00a      	beq.n	1004f756 <isr_connect_slave_state+0x58e>
1004f740:	f7f2 fa24 	bl	10041b8c <data_length_extension_csr_ucfg>
1004f744:	2801      	cmp	r0, #1
1004f746:	d009      	beq.n	1004f75c <isr_connect_slave_state+0x594>
1004f748:	221f      	movs	r2, #31
1004f74a:	6971      	ldr	r1, [r6, #20]
1004f74c:	7848      	ldrb	r0, [r1, #1]
1004f74e:	4202      	tst	r2, r0
1004f750:	d001      	beq.n	1004f756 <isr_connect_slave_state+0x58e>
1004f752:	1d00      	adds	r0, r0, #4
1004f754:	7048      	strb	r0, [r1, #1]
1004f756:	2f00      	cmp	r7, #0
1004f758:	d002      	beq.n	1004f760 <isr_connect_slave_state+0x598>
1004f75a:	e004      	b.n	1004f766 <isr_connect_slave_state+0x59e>
1004f75c:	22ff      	movs	r2, #255	; 0xff
1004f75e:	e7f4      	b.n	1004f74a <isr_connect_slave_state+0x582>
1004f760:	9901      	ldr	r1, [sp, #4]
1004f762:	8ab0      	ldrh	r0, [r6, #20]
1004f764:	8048      	strh	r0, [r1, #2]
1004f766:	4e89      	ldr	r6, [pc, #548]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f768:	68f2      	ldr	r2, [r6, #12]
1004f76a:	6910      	ldr	r0, [r2, #16]
1004f76c:	0641      	lsls	r1, r0, #25
1004f76e:	0f89      	lsrs	r1, r1, #30
1004f770:	d01e      	beq.n	1004f7b0 <isr_connect_slave_state+0x5e8>
1004f772:	0680      	lsls	r0, r0, #26
1004f774:	7831      	ldrb	r1, [r6, #0]
1004f776:	0fc0      	lsrs	r0, r0, #31
1004f778:	2901      	cmp	r1, #1
1004f77a:	d002      	beq.n	1004f782 <isr_connect_slave_state+0x5ba>
1004f77c:	68b1      	ldr	r1, [r6, #8]
1004f77e:	0349      	lsls	r1, r1, #13
1004f780:	d50b      	bpl.n	1004f79a <isr_connect_slave_state+0x5d2>
1004f782:	2800      	cmp	r0, #0
1004f784:	6930      	ldr	r0, [r6, #16]
1004f786:	d003      	beq.n	1004f790 <isr_connect_slave_state+0x5c8>
1004f788:	7dc1      	ldrb	r1, [r0, #23]
1004f78a:	2308      	movs	r3, #8
1004f78c:	4319      	orrs	r1, r3
1004f78e:	e00a      	b.n	1004f7a6 <isr_connect_slave_state+0x5de>
1004f790:	7dc3      	ldrb	r3, [r0, #23]
1004f792:	21f7      	movs	r1, #247	; 0xf7
1004f794:	400b      	ands	r3, r1
1004f796:	75c3      	strb	r3, [r0, #23]
1004f798:	e00a      	b.n	1004f7b0 <isr_connect_slave_state+0x5e8>
1004f79a:	2800      	cmp	r0, #0
1004f79c:	6930      	ldr	r0, [r6, #16]
1004f79e:	7dc1      	ldrb	r1, [r0, #23]
1004f7a0:	d003      	beq.n	1004f7aa <isr_connect_slave_state+0x5e2>
1004f7a2:	23f7      	movs	r3, #247	; 0xf7
1004f7a4:	4019      	ands	r1, r3
1004f7a6:	75c1      	strb	r1, [r0, #23]
1004f7a8:	e002      	b.n	1004f7b0 <isr_connect_slave_state+0x5e8>
1004f7aa:	2308      	movs	r3, #8
1004f7ac:	4319      	orrs	r1, r3
1004f7ae:	75c1      	strb	r1, [r0, #23]
1004f7b0:	4621      	mov	r1, r4
1004f7b2:	6933      	ldr	r3, [r6, #16]
1004f7b4:	69f0      	ldr	r0, [r6, #28]
1004f7b6:	f006 f89d 	bl	100558f4 <isr_postproc1>
1004f7ba:	7830      	ldrb	r0, [r6, #0]
1004f7bc:	2801      	cmp	r0, #1
1004f7be:	d008      	beq.n	1004f7d2 <isr_connect_slave_state+0x60a>
1004f7c0:	9900      	ldr	r1, [sp, #0]
1004f7c2:	4875      	ldr	r0, [pc, #468]	; (1004f998 <isr_connect_slave_state+0x7d0>)
1004f7c4:	6b89      	ldr	r1, [r1, #56]	; 0x38
1004f7c6:	2203      	movs	r2, #3
1004f7c8:	1d09      	adds	r1, r1, #4
1004f7ca:	f7fd f92d 	bl	1004ca28 <set_string>
1004f7ce:	b005      	add	sp, #20
1004f7d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f7d2:	486e      	ldr	r0, [pc, #440]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f7d4:	2101      	movs	r1, #1
1004f7d6:	68c2      	ldr	r2, [r0, #12]
1004f7d8:	6900      	ldr	r0, [r0, #16]
1004f7da:	7953      	ldrb	r3, [r2, #5]
1004f7dc:	7ac7      	ldrb	r7, [r0, #11]
1004f7de:	469c      	mov	ip, r3
1004f7e0:	2320      	movs	r3, #32
1004f7e2:	5c1e      	ldrb	r6, [r3, r0]
1004f7e4:	2300      	movs	r3, #0
1004f7e6:	7283      	strb	r3, [r0, #10]
1004f7e8:	4620      	mov	r0, r4
1004f7ea:	3020      	adds	r0, #32
1004f7ec:	9001      	str	r0, [sp, #4]
1004f7ee:	7880      	ldrb	r0, [r0, #2]
1004f7f0:	2803      	cmp	r0, #3
1004f7f2:	d11b      	bne.n	1004f82c <isr_connect_slave_state+0x664>
1004f7f4:	7993      	ldrb	r3, [r2, #6]
1004f7f6:	4865      	ldr	r0, [pc, #404]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f7f8:	2b00      	cmp	r3, #0
1004f7fa:	d117      	bne.n	1004f82c <isr_connect_slave_state+0x664>
1004f7fc:	4663      	mov	r3, ip
1004f7fe:	069b      	lsls	r3, r3, #26
1004f800:	0f9b      	lsrs	r3, r3, #30
1004f802:	d113      	bne.n	1004f82c <isr_connect_slave_state+0x664>
1004f804:	4b63      	ldr	r3, [pc, #396]	; (1004f994 <isr_connect_slave_state+0x7cc>)
1004f806:	681b      	ldr	r3, [r3, #0]
1004f808:	3320      	adds	r3, #32
1004f80a:	7cdb      	ldrb	r3, [r3, #19]
1004f80c:	2b00      	cmp	r3, #0
1004f80e:	d10d      	bne.n	1004f82c <isr_connect_slave_state+0x664>
1004f810:	6a13      	ldr	r3, [r2, #32]
1004f812:	2b00      	cmp	r3, #0
1004f814:	d10a      	bne.n	1004f82c <isr_connect_slave_state+0x664>
1004f816:	23cf      	movs	r3, #207	; 0xcf
1004f818:	5d1b      	ldrb	r3, [r3, r4]
1004f81a:	7880      	ldrb	r0, [r0, #2]
1004f81c:	4283      	cmp	r3, r0
1004f81e:	d005      	beq.n	1004f82c <isr_connect_slave_state+0x664>
1004f820:	8990      	ldrh	r0, [r2, #12]
1004f822:	1c41      	adds	r1, r0, #1
1004f824:	4370      	muls	r0, r6
1004f826:	19c0      	adds	r0, r0, r7
1004f828:	b289      	uxth	r1, r1
1004f82a:	b287      	uxth	r7, r0
1004f82c:	8f10      	ldrh	r0, [r2, #56]	; 0x38
1004f82e:	8913      	ldrh	r3, [r2, #8]
1004f830:	0040      	lsls	r0, r0, #1
1004f832:	4348      	muls	r0, r1
1004f834:	1859      	adds	r1, r3, r1
1004f836:	8111      	strh	r1, [r2, #8]
1004f838:	9901      	ldr	r1, [sp, #4]
1004f83a:	7889      	ldrb	r1, [r1, #2]
1004f83c:	2900      	cmp	r1, #0
1004f83e:	d102      	bne.n	1004f846 <isr_connect_slave_state+0x67e>
1004f840:	6951      	ldr	r1, [r2, #20]
1004f842:	1a09      	subs	r1, r1, r0
1004f844:	6151      	str	r1, [r2, #20]
1004f846:	9900      	ldr	r1, [sp, #0]
1004f848:	6b8e      	ldr	r6, [r1, #56]	; 0x38
1004f84a:	7ab1      	ldrb	r1, [r6, #10]
1004f84c:	2311      	movs	r3, #17
1004f84e:	4319      	orrs	r1, r3
1004f850:	72b1      	strb	r1, [r6, #10]
1004f852:	4621      	mov	r1, r4
1004f854:	4b4d      	ldr	r3, [pc, #308]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f856:	31c0      	adds	r1, #192	; 0xc0
1004f858:	7bce      	ldrb	r6, [r1, #15]
1004f85a:	789b      	ldrb	r3, [r3, #2]
1004f85c:	429e      	cmp	r6, r3
1004f85e:	d10a      	bne.n	1004f876 <isr_connect_slave_state+0x6ae>
1004f860:	898b      	ldrh	r3, [r1, #12]
1004f862:	1a1b      	subs	r3, r3, r0
1004f864:	818b      	strh	r3, [r1, #12]
1004f866:	d510      	bpl.n	1004f88a <isr_connect_slave_state+0x6c2>
1004f868:	4e48      	ldr	r6, [pc, #288]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f86a:	4b4c      	ldr	r3, [pc, #304]	; (1004f99c <isr_connect_slave_state+0x7d4>)
1004f86c:	7075      	strb	r5, [r6, #1]
1004f86e:	69b1      	ldr	r1, [r6, #24]
1004f870:	4319      	orrs	r1, r3
1004f872:	61b1      	str	r1, [r6, #24]
1004f874:	e009      	b.n	1004f88a <isr_connect_slave_state+0x6c2>
1004f876:	6953      	ldr	r3, [r2, #20]
1004f878:	4944      	ldr	r1, [pc, #272]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f87a:	2b00      	cmp	r3, #0
1004f87c:	dc05      	bgt.n	1004f88a <isr_connect_slave_state+0x6c2>
1004f87e:	460e      	mov	r6, r1
1004f880:	704d      	strb	r5, [r1, #1]
1004f882:	6989      	ldr	r1, [r1, #24]
1004f884:	4b46      	ldr	r3, [pc, #280]	; (1004f9a0 <isr_connect_slave_state+0x7d8>)
1004f886:	4319      	orrs	r1, r3
1004f888:	61b1      	str	r1, [r6, #24]
1004f88a:	4661      	mov	r1, ip
1004f88c:	0689      	lsls	r1, r1, #26
1004f88e:	d505      	bpl.n	1004f89c <isr_connect_slave_state+0x6d4>
1004f890:	493e      	ldr	r1, [pc, #248]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f892:	4e44      	ldr	r6, [pc, #272]	; (1004f9a4 <isr_connect_slave_state+0x7dc>)
1004f894:	704d      	strb	r5, [r1, #1]
1004f896:	698b      	ldr	r3, [r1, #24]
1004f898:	4333      	orrs	r3, r6
1004f89a:	618b      	str	r3, [r1, #24]
1004f89c:	7911      	ldrb	r1, [r2, #4]
1004f89e:	4626      	mov	r6, r4
1004f8a0:	70d1      	strb	r1, [r2, #3]
1004f8a2:	3640      	adds	r6, #64	; 0x40
1004f8a4:	71b5      	strb	r5, [r6, #6]
1004f8a6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
1004f8a8:	b280      	uxth	r0, r0
1004f8aa:	1808      	adds	r0, r1, r0
1004f8ac:	64e0      	str	r0, [r4, #76]	; 0x4c
1004f8ae:	7990      	ldrb	r0, [r2, #6]
1004f8b0:	21fb      	movs	r1, #251	; 0xfb
1004f8b2:	4008      	ands	r0, r1
1004f8b4:	7190      	strb	r0, [r2, #6]
1004f8b6:	07c0      	lsls	r0, r0, #31
1004f8b8:	d01a      	beq.n	1004f8f0 <isr_connect_slave_state+0x728>
1004f8ba:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
1004f8bc:	8911      	ldrh	r1, [r2, #8]
1004f8be:	1a40      	subs	r0, r0, r1
1004f8c0:	2101      	movs	r1, #1
1004f8c2:	b280      	uxth	r0, r0
1004f8c4:	03c9      	lsls	r1, r1, #15
1004f8c6:	4288      	cmp	r0, r1
1004f8c8:	d306      	bcc.n	1004f8d8 <isr_connect_slave_state+0x710>
1004f8ca:	4830      	ldr	r0, [pc, #192]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f8cc:	4a36      	ldr	r2, [pc, #216]	; (1004f9a8 <isr_connect_slave_state+0x7e0>)
1004f8ce:	7045      	strb	r5, [r0, #1]
1004f8d0:	6981      	ldr	r1, [r0, #24]
1004f8d2:	4311      	orrs	r1, r2
1004f8d4:	6181      	str	r1, [r0, #24]
1004f8d6:	e00b      	b.n	1004f8f0 <isr_connect_slave_state+0x728>
1004f8d8:	2800      	cmp	r0, #0
1004f8da:	d109      	bne.n	1004f8f0 <isr_connect_slave_state+0x728>
1004f8dc:	2301      	movs	r3, #1
1004f8de:	2100      	movs	r1, #0
1004f8e0:	4620      	mov	r0, r4
1004f8e2:	f006 f8ad 	bl	10055a40 <LL_update_proc>
1004f8e6:	4929      	ldr	r1, [pc, #164]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f8e8:	6989      	ldr	r1, [r1, #24]
1004f8ea:	4308      	orrs	r0, r1
1004f8ec:	4927      	ldr	r1, [pc, #156]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f8ee:	6188      	str	r0, [r1, #24]
1004f8f0:	4826      	ldr	r0, [pc, #152]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f8f2:	68c1      	ldr	r1, [r0, #12]
1004f8f4:	798a      	ldrb	r2, [r1, #6]
1004f8f6:	0790      	lsls	r0, r2, #30
1004f8f8:	d524      	bpl.n	1004f944 <isr_connect_slave_state+0x77c>
1004f8fa:	8f33      	ldrh	r3, [r6, #56]	; 0x38
1004f8fc:	890e      	ldrh	r6, [r1, #8]
1004f8fe:	4823      	ldr	r0, [pc, #140]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f900:	1b9b      	subs	r3, r3, r6
1004f902:	1c5b      	adds	r3, r3, #1
1004f904:	2601      	movs	r6, #1
1004f906:	b29b      	uxth	r3, r3
1004f908:	03f6      	lsls	r6, r6, #15
1004f90a:	42b3      	cmp	r3, r6
1004f90c:	d305      	bcc.n	1004f91a <isr_connect_slave_state+0x752>
1004f90e:	7045      	strb	r5, [r0, #1]
1004f910:	4a25      	ldr	r2, [pc, #148]	; (1004f9a8 <isr_connect_slave_state+0x7e0>)
1004f912:	6981      	ldr	r1, [r0, #24]
1004f914:	4311      	orrs	r1, r2
1004f916:	6181      	str	r1, [r0, #24]
1004f918:	e014      	b.n	1004f944 <isr_connect_slave_state+0x77c>
1004f91a:	2b00      	cmp	r3, #0
1004f91c:	d112      	bne.n	1004f944 <isr_connect_slave_state+0x77c>
1004f91e:	23fd      	movs	r3, #253	; 0xfd
1004f920:	401a      	ands	r2, r3
1004f922:	718a      	strb	r2, [r1, #6]
1004f924:	6902      	ldr	r2, [r0, #16]
1004f926:	9900      	ldr	r1, [sp, #0]
1004f928:	3221      	adds	r2, #33	; 0x21
1004f92a:	6849      	ldr	r1, [r1, #4]
1004f92c:	7011      	strb	r1, [r2, #0]
1004f92e:	0a0b      	lsrs	r3, r1, #8
1004f930:	7053      	strb	r3, [r2, #1]
1004f932:	0c0b      	lsrs	r3, r1, #16
1004f934:	7093      	strb	r3, [r2, #2]
1004f936:	0e09      	lsrs	r1, r1, #24
1004f938:	70d1      	strb	r1, [r2, #3]
1004f93a:	3460      	adds	r4, #96	; 0x60
1004f93c:	6900      	ldr	r0, [r0, #16]
1004f93e:	7ee1      	ldrb	r1, [r4, #27]
1004f940:	3020      	adds	r0, #32
1004f942:	7141      	strb	r1, [r0, #5]
1004f944:	4638      	mov	r0, r7
1004f946:	f007 fddb 	bl	10057500 <modulo_37>
1004f94a:	4910      	ldr	r1, [pc, #64]	; (1004f98c <isr_connect_slave_state+0x7c4>)
1004f94c:	690a      	ldr	r2, [r1, #16]
1004f94e:	72d0      	strb	r0, [r2, #11]
1004f950:	9801      	ldr	r0, [sp, #4]
1004f952:	2600      	movs	r6, #0
1004f954:	7086      	strb	r6, [r0, #2]
1004f956:	7848      	ldrb	r0, [r1, #1]
1004f958:	2800      	cmp	r0, #0
1004f95a:	d002      	beq.n	1004f962 <isr_connect_slave_state+0x79a>
1004f95c:	7888      	ldrb	r0, [r1, #2]
1004f95e:	f004 fad5 	bl	10053f0c <cancel_current_master>
1004f962:	4c0c      	ldr	r4, [pc, #48]	; (1004f994 <isr_connect_slave_state+0x7cc>)
1004f964:	2158      	movs	r1, #88	; 0x58
1004f966:	6820      	ldr	r0, [r4, #0]
1004f968:	540d      	strb	r5, [r1, r0]
1004f96a:	2109      	movs	r1, #9
1004f96c:	0209      	lsls	r1, r1, #8
1004f96e:	1840      	adds	r0, r0, r1
1004f970:	7840      	ldrb	r0, [r0, #1]
1004f972:	2800      	cmp	r0, #0
1004f974:	d002      	beq.n	1004f97c <isr_connect_slave_state+0x7b4>
1004f976:	2001      	movs	r0, #1
1004f978:	f007 ff82 	bl	10057880 <slave_advance>
1004f97c:	2001      	movs	r0, #1
1004f97e:	f00d f94b 	bl	1005cc18 <advance_wakeup_timer>
1004f982:	6820      	ldr	r0, [r4, #0]
1004f984:	3040      	adds	r0, #64	; 0x40
1004f986:	7606      	strb	r6, [r0, #24]
1004f988:	b005      	add	sp, #20
1004f98a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f98c:	20000d18 	.word	0x20000d18
1004f990:	00010008 	.word	0x00010008
1004f994:	20000d64 	.word	0x20000d64
1004f998:	003000fa 	.word	0x003000fa
1004f99c:	00408008 	.word	0x00408008
1004f9a0:	00040008 	.word	0x00040008
1004f9a4:	00020008 	.word	0x00020008
1004f9a8:	00080008 	.word	0x00080008

1004f9ac <isr_scan_state>:
1004f9ac:	b5f0      	push	{r4, r5, r6, r7, lr}
1004f9ae:	48ff      	ldr	r0, [pc, #1020]	; (1004fdac <isr_scan_state+0x400>)
1004f9b0:	b097      	sub	sp, #92	; 0x5c
1004f9b2:	6801      	ldr	r1, [r0, #0]
1004f9b4:	2041      	movs	r0, #65	; 0x41
1004f9b6:	0140      	lsls	r0, r0, #5
1004f9b8:	180d      	adds	r5, r1, r0
1004f9ba:	207b      	movs	r0, #123	; 0x7b
1004f9bc:	0100      	lsls	r0, r0, #4
1004f9be:	180c      	adds	r4, r1, r0
1004f9c0:	48fb      	ldr	r0, [pc, #1004]	; (1004fdb0 <isr_scan_state+0x404>)
1004f9c2:	4efc      	ldr	r6, [pc, #1008]	; (1004fdb4 <isr_scan_state+0x408>)
1004f9c4:	180f      	adds	r7, r1, r0
1004f9c6:	2001      	movs	r0, #1
1004f9c8:	900f      	str	r0, [sp, #60]	; 0x3c
1004f9ca:	2000      	movs	r0, #0
1004f9cc:	900e      	str	r0, [sp, #56]	; 0x38
1004f9ce:	48f9      	ldr	r0, [pc, #996]	; (1004fdb4 <isr_scan_state+0x408>)
1004f9d0:	68b2      	ldr	r2, [r6, #8]
1004f9d2:	6900      	ldr	r0, [r0, #16]
1004f9d4:	01d3      	lsls	r3, r2, #7
1004f9d6:	d516      	bpl.n	1004fa06 <isr_scan_state+0x5a>
1004f9d8:	0353      	lsls	r3, r2, #13
1004f9da:	d514      	bpl.n	1004fa06 <isr_scan_state+0x5a>
1004f9dc:	68b9      	ldr	r1, [r7, #8]
1004f9de:	8a02      	ldrh	r2, [r0, #16]
1004f9e0:	b289      	uxth	r1, r1
1004f9e2:	428a      	cmp	r2, r1
1004f9e4:	d10d      	bne.n	1004fa02 <isr_scan_state+0x56>
1004f9e6:	9000      	str	r0, [sp, #0]
1004f9e8:	6a38      	ldr	r0, [r7, #32]
1004f9ea:	2300      	movs	r3, #0
1004f9ec:	4629      	mov	r1, r5
1004f9ee:	68f2      	ldr	r2, [r6, #12]
1004f9f0:	f00f fac8 	bl	1005ef84 <go_to_connect_master>
1004f9f4:	35c0      	adds	r5, #192	; 0xc0
1004f9f6:	7ba8      	ldrb	r0, [r5, #14]
1004f9f8:	78b1      	ldrb	r1, [r6, #2]
1004f9fa:	4288      	cmp	r0, r1
1004f9fc:	d101      	bne.n	1004fa02 <isr_scan_state+0x56>
1004f9fe:	2008      	movs	r0, #8
1004fa00:	73a8      	strb	r0, [r5, #14]
1004fa02:	b017      	add	sp, #92	; 0x5c
1004fa04:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004fa06:	2a00      	cmp	r2, #0
1004fa08:	da7e      	bge.n	1004fb08 <isr_scan_state+0x15c>
1004fa0a:	89c3      	ldrh	r3, [r0, #14]
1004fa0c:	2201      	movs	r2, #1
1004fa0e:	0752      	lsls	r2, r2, #29
1004fa10:	189b      	adds	r3, r3, r2
1004fa12:	885b      	ldrh	r3, [r3, #2]
1004fa14:	189e      	adds	r6, r3, r2
1004fa16:	462a      	mov	r2, r5
1004fa18:	3220      	adds	r2, #32
1004fa1a:	920d      	str	r2, [sp, #52]	; 0x34
1004fa1c:	78d2      	ldrb	r2, [r2, #3]
1004fa1e:	2a02      	cmp	r2, #2
1004fa20:	d073      	beq.n	1004fb0a <isr_scan_state+0x15e>
1004fa22:	7831      	ldrb	r1, [r6, #0]
1004fa24:	0709      	lsls	r1, r1, #28
1004fa26:	0f09      	lsrs	r1, r1, #28
1004fa28:	9110      	str	r1, [sp, #64]	; 0x40
1004fa2a:	2a01      	cmp	r2, #1
1004fa2c:	d105      	bne.n	1004fa3a <isr_scan_state+0x8e>
1004fa2e:	2902      	cmp	r1, #2
1004fa30:	d003      	beq.n	1004fa3a <isr_scan_state+0x8e>
1004fa32:	2901      	cmp	r1, #1
1004fa34:	d001      	beq.n	1004fa3a <isr_scan_state+0x8e>
1004fa36:	2904      	cmp	r1, #4
1004fa38:	d120      	bne.n	1004fa7c <isr_scan_state+0xd0>
1004fa3a:	2101      	movs	r1, #1
1004fa3c:	910e      	str	r1, [sp, #56]	; 0x38
1004fa3e:	2100      	movs	r1, #0
1004fa40:	7281      	strb	r1, [r0, #10]
1004fa42:	68f9      	ldr	r1, [r7, #12]
1004fa44:	8241      	strh	r1, [r0, #18]
1004fa46:	68f8      	ldr	r0, [r7, #12]
1004fa48:	7a80      	ldrb	r0, [r0, #10]
1004fa4a:	2109      	movs	r1, #9
1004fa4c:	06c9      	lsls	r1, r1, #27
1004fa4e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
1004fa50:	690b      	ldr	r3, [r1, #16]
1004fa52:	1ad2      	subs	r2, r2, r3
1004fa54:	0213      	lsls	r3, r2, #8
1004fa56:	2201      	movs	r2, #1
1004fa58:	0a1b      	lsrs	r3, r3, #8
1004fa5a:	05d2      	lsls	r2, r2, #23
1004fa5c:	4293      	cmp	r3, r2
1004fa5e:	d906      	bls.n	1004fa6e <isr_scan_state+0xc2>
1004fa60:	2200      	movs	r2, #0
1004fa62:	604a      	str	r2, [r1, #4]
1004fa64:	2111      	movs	r1, #17
1004fa66:	4308      	orrs	r0, r1
1004fa68:	68f9      	ldr	r1, [r7, #12]
1004fa6a:	7288      	strb	r0, [r1, #10]
1004fa6c:	e003      	b.n	1004fa76 <isr_scan_state+0xca>
1004fa6e:	21ee      	movs	r1, #238	; 0xee
1004fa70:	4008      	ands	r0, r1
1004fa72:	68f9      	ldr	r1, [r7, #12]
1004fa74:	7288      	strb	r0, [r1, #10]
1004fa76:	4628      	mov	r0, r5
1004fa78:	f005 ffc4 	bl	10055a04 <isr_postproc_encrypt_data>
1004fa7c:	48cb      	ldr	r0, [pc, #812]	; (1004fdac <isr_scan_state+0x400>)
1004fa7e:	21f0      	movs	r1, #240	; 0xf0
1004fa80:	6800      	ldr	r0, [r0, #0]
1004fa82:	5c09      	ldrb	r1, [r1, r0]
1004fa84:	2900      	cmp	r1, #0
1004fa86:	d105      	bne.n	1004fa94 <isr_scan_state+0xe8>
1004fa88:	2123      	movs	r1, #35	; 0x23
1004fa8a:	0149      	lsls	r1, r1, #5
1004fa8c:	1841      	adds	r1, r0, r1
1004fa8e:	7a09      	ldrb	r1, [r1, #8]
1004fa90:	2900      	cmp	r1, #0
1004fa92:	d020      	beq.n	1004fad6 <isr_scan_state+0x12a>
1004fa94:	2109      	movs	r1, #9
1004fa96:	0209      	lsls	r1, r1, #8
1004fa98:	1840      	adds	r0, r0, r1
1004fa9a:	6d00      	ldr	r0, [r0, #80]	; 0x50
1004fa9c:	2100      	movs	r1, #0
1004fa9e:	466a      	mov	r2, sp
1004faa0:	7411      	strb	r1, [r2, #16]
1004faa2:	9006      	str	r0, [sp, #24]
1004faa4:	a814      	add	r0, sp, #80	; 0x50
1004faa6:	9007      	str	r0, [sp, #28]
1004faa8:	9605      	str	r6, [sp, #20]
1004faaa:	a811      	add	r0, sp, #68	; 0x44
1004faac:	900a      	str	r0, [sp, #40]	; 0x28
1004faae:	9708      	str	r7, [sp, #32]
1004fab0:	9509      	str	r5, [sp, #36]	; 0x24
1004fab2:	a804      	add	r0, sp, #16
1004fab4:	f7f1 fee4 	bl	10041880 <PRIV_u32ProcessAdvPacket_ucfg>
1004fab8:	4601      	mov	r1, r0
1004faba:	48be      	ldr	r0, [pc, #760]	; (1004fdb4 <isr_scan_state+0x408>)
1004fabc:	7101      	strb	r1, [r0, #4]
1004fabe:	48bd      	ldr	r0, [pc, #756]	; (1004fdb4 <isr_scan_state+0x408>)
1004fac0:	7900      	ldrb	r0, [r0, #4]
1004fac2:	2801      	cmp	r0, #1
1004fac4:	d07e      	beq.n	1004fbc4 <isr_scan_state+0x218>
1004fac6:	9810      	ldr	r0, [sp, #64]	; 0x40
1004fac8:	2804      	cmp	r0, #4
1004faca:	980d      	ldr	r0, [sp, #52]	; 0x34
1004facc:	78c0      	ldrb	r0, [r0, #3]
1004face:	d07a      	beq.n	1004fbc6 <isr_scan_state+0x21a>
1004fad0:	2801      	cmp	r0, #1
1004fad2:	d079      	beq.n	1004fbc8 <isr_scan_state+0x21c>
1004fad4:	e0fe      	b.n	1004fcd4 <isr_scan_state+0x328>
1004fad6:	7830      	ldrb	r0, [r6, #0]
1004fad8:	a902      	add	r1, sp, #8
1004fada:	0700      	lsls	r0, r0, #28
1004fadc:	0f00      	lsrs	r0, r0, #28
1004fade:	900a      	str	r0, [sp, #40]	; 0x28
1004fae0:	4630      	mov	r0, r6
1004fae2:	f006 f8c9 	bl	10055c78 <get_scan_addr>
1004fae6:	a908      	add	r1, sp, #32
1004fae8:	4630      	mov	r0, r6
1004faea:	f006 f8bb 	bl	10055c64 <get_adv_addr>
1004faee:	1cb0      	adds	r0, r6, #2
1004faf0:	4601      	mov	r1, r0
1004faf2:	780a      	ldrb	r2, [r1, #0]
1004faf4:	4610      	mov	r0, r2
1004faf6:	784a      	ldrb	r2, [r1, #1]
1004faf8:	0212      	lsls	r2, r2, #8
1004fafa:	4310      	orrs	r0, r2
1004fafc:	788a      	ldrb	r2, [r1, #2]
1004fafe:	78c9      	ldrb	r1, [r1, #3]
1004fb00:	0412      	lsls	r2, r2, #16
1004fb02:	4310      	orrs	r0, r2
1004fb04:	0609      	lsls	r1, r1, #24
1004fb06:	e001      	b.n	1004fb0c <isr_scan_state+0x160>
1004fb08:	e1a2      	b.n	1004fe50 <isr_scan_state+0x4a4>
1004fb0a:	e0f9      	b.n	1004fd00 <isr_scan_state+0x354>
1004fb0c:	4308      	orrs	r0, r1
1004fb0e:	7831      	ldrb	r1, [r6, #0]
1004fb10:	0200      	lsls	r0, r0, #8
1004fb12:	0649      	lsls	r1, r1, #25
1004fb14:	0fc9      	lsrs	r1, r1, #31
1004fb16:	4308      	orrs	r0, r1
1004fb18:	9006      	str	r0, [sp, #24]
1004fb1a:	7972      	ldrb	r2, [r6, #5]
1004fb1c:	7a31      	ldrb	r1, [r6, #8]
1004fb1e:	4610      	mov	r0, r2
1004fb20:	79b2      	ldrb	r2, [r6, #6]
1004fb22:	0609      	lsls	r1, r1, #24
1004fb24:	0212      	lsls	r2, r2, #8
1004fb26:	4310      	orrs	r0, r2
1004fb28:	79f2      	ldrb	r2, [r6, #7]
1004fb2a:	0412      	lsls	r2, r2, #16
1004fb2c:	4310      	orrs	r0, r2
1004fb2e:	4308      	orrs	r0, r1
1004fb30:	0200      	lsls	r0, r0, #8
1004fb32:	0a00      	lsrs	r0, r0, #8
1004fb34:	0201      	lsls	r1, r0, #8
1004fb36:	9007      	str	r0, [sp, #28]
1004fb38:	9806      	ldr	r0, [sp, #24]
1004fb3a:	f000 ff6f 	bl	10050a1c <PRIV_SearchAddrInWhiteList>
1004fb3e:	4601      	mov	r1, r0
1004fb40:	4a9c      	ldr	r2, [pc, #624]	; (1004fdb4 <isr_scan_state+0x408>)
1004fb42:	2000      	movs	r0, #0
1004fb44:	7110      	strb	r0, [r2, #4]
1004fb46:	980a      	ldr	r0, [sp, #40]	; 0x28
1004fb48:	2803      	cmp	r0, #3
1004fb4a:	d004      	beq.n	1004fb56 <isr_scan_state+0x1aa>
1004fb4c:	2805      	cmp	r0, #5
1004fb4e:	d002      	beq.n	1004fb56 <isr_scan_state+0x1aa>
1004fb50:	2801      	cmp	r0, #1
1004fb52:	d004      	beq.n	1004fb5e <isr_scan_state+0x1b2>
1004fb54:	e00b      	b.n	1004fb6e <isr_scan_state+0x1c2>
1004fb56:	4a97      	ldr	r2, [pc, #604]	; (1004fdb4 <isr_scan_state+0x408>)
1004fb58:	2001      	movs	r0, #1
1004fb5a:	7110      	strb	r0, [r2, #4]
1004fb5c:	e007      	b.n	1004fb6e <isr_scan_state+0x1c2>
1004fb5e:	9808      	ldr	r0, [sp, #32]
1004fb60:	682a      	ldr	r2, [r5, #0]
1004fb62:	4290      	cmp	r0, r2
1004fb64:	d1f7      	bne.n	1004fb56 <isr_scan_state+0x1aa>
1004fb66:	9809      	ldr	r0, [sp, #36]	; 0x24
1004fb68:	686a      	ldr	r2, [r5, #4]
1004fb6a:	4290      	cmp	r0, r2
1004fb6c:	d1f3      	bne.n	1004fb56 <isr_scan_state+0x1aa>
1004fb6e:	980d      	ldr	r0, [sp, #52]	; 0x34
1004fb70:	7900      	ldrb	r0, [r0, #4]
1004fb72:	2800      	cmp	r0, #0
1004fb74:	d004      	beq.n	1004fb80 <isr_scan_state+0x1d4>
1004fb76:	2900      	cmp	r1, #0
1004fb78:	d102      	bne.n	1004fb80 <isr_scan_state+0x1d4>
1004fb7a:	498e      	ldr	r1, [pc, #568]	; (1004fdb4 <isr_scan_state+0x408>)
1004fb7c:	2001      	movs	r0, #1
1004fb7e:	7108      	strb	r0, [r1, #4]
1004fb80:	980a      	ldr	r0, [sp, #40]	; 0x28
1004fb82:	2804      	cmp	r0, #4
1004fb84:	d19b      	bne.n	1004fabe <isr_scan_state+0x112>
1004fb86:	4889      	ldr	r0, [pc, #548]	; (1004fdac <isr_scan_state+0x400>)
1004fb88:	6801      	ldr	r1, [r0, #0]
1004fb8a:	2009      	movs	r0, #9
1004fb8c:	0200      	lsls	r0, r0, #8
1004fb8e:	1808      	adds	r0, r1, r0
1004fb90:	6d00      	ldr	r0, [r0, #80]	; 0x50
1004fb92:	2108      	movs	r1, #8
1004fb94:	1842      	adds	r2, r0, r1
1004fb96:	7813      	ldrb	r3, [r2, #0]
1004fb98:	4619      	mov	r1, r3
1004fb9a:	7853      	ldrb	r3, [r2, #1]
1004fb9c:	021b      	lsls	r3, r3, #8
1004fb9e:	4319      	orrs	r1, r3
1004fba0:	7893      	ldrb	r3, [r2, #2]
1004fba2:	78d2      	ldrb	r2, [r2, #3]
1004fba4:	041b      	lsls	r3, r3, #16
1004fba6:	4319      	orrs	r1, r3
1004fba8:	0612      	lsls	r2, r2, #24
1004fbaa:	4311      	orrs	r1, r2
1004fbac:	020b      	lsls	r3, r1, #8
1004fbae:	7801      	ldrb	r1, [r0, #0]
1004fbb0:	1cc0      	adds	r0, r0, #3
1004fbb2:	09c9      	lsrs	r1, r1, #7
1004fbb4:	430b      	orrs	r3, r1
1004fbb6:	2108      	movs	r1, #8
1004fbb8:	1841      	adds	r1, r0, r1
1004fbba:	780a      	ldrb	r2, [r1, #0]
1004fbbc:	4610      	mov	r0, r2
1004fbbe:	784a      	ldrb	r2, [r1, #1]
1004fbc0:	0212      	lsls	r2, r2, #8
1004fbc2:	e002      	b.n	1004fbca <isr_scan_state+0x21e>
1004fbc4:	e0c3      	b.n	1004fd4e <isr_scan_state+0x3a2>
1004fbc6:	e095      	b.n	1004fcf4 <isr_scan_state+0x348>
1004fbc8:	e013      	b.n	1004fbf2 <isr_scan_state+0x246>
1004fbca:	4310      	orrs	r0, r2
1004fbcc:	788a      	ldrb	r2, [r1, #2]
1004fbce:	78c9      	ldrb	r1, [r1, #3]
1004fbd0:	0412      	lsls	r2, r2, #16
1004fbd2:	4310      	orrs	r0, r2
1004fbd4:	0609      	lsls	r1, r1, #24
1004fbd6:	4308      	orrs	r0, r1
1004fbd8:	0200      	lsls	r0, r0, #8
1004fbda:	9906      	ldr	r1, [sp, #24]
1004fbdc:	0a00      	lsrs	r0, r0, #8
1004fbde:	4299      	cmp	r1, r3
1004fbe0:	d103      	bne.n	1004fbea <isr_scan_state+0x23e>
1004fbe2:	9907      	ldr	r1, [sp, #28]
1004fbe4:	4281      	cmp	r1, r0
1004fbe6:	d100      	bne.n	1004fbea <isr_scan_state+0x23e>
1004fbe8:	e769      	b.n	1004fabe <isr_scan_state+0x112>
1004fbea:	4972      	ldr	r1, [pc, #456]	; (1004fdb4 <isr_scan_state+0x408>)
1004fbec:	2001      	movs	r0, #1
1004fbee:	7108      	strb	r0, [r1, #4]
1004fbf0:	e0ad      	b.n	1004fd4e <isr_scan_state+0x3a2>
1004fbf2:	a902      	add	r1, sp, #8
1004fbf4:	4630      	mov	r0, r6
1004fbf6:	f006 f83f 	bl	10055c78 <get_scan_addr>
1004fbfa:	486c      	ldr	r0, [pc, #432]	; (1004fdac <isr_scan_state+0x400>)
1004fbfc:	9b03      	ldr	r3, [sp, #12]
1004fbfe:	6801      	ldr	r1, [r0, #0]
1004fc00:	2009      	movs	r0, #9
1004fc02:	0200      	lsls	r0, r0, #8
1004fc04:	1809      	adds	r1, r1, r0
1004fc06:	6d09      	ldr	r1, [r1, #80]	; 0x50
1004fc08:	03db      	lsls	r3, r3, #15
1004fc0a:	780a      	ldrb	r2, [r1, #0]
1004fc0c:	0fdb      	lsrs	r3, r3, #31
1004fc0e:	0652      	lsls	r2, r2, #25
1004fc10:	0e52      	lsrs	r2, r2, #25
1004fc12:	01db      	lsls	r3, r3, #7
1004fc14:	431a      	orrs	r2, r3
1004fc16:	700a      	strb	r2, [r1, #0]
1004fc18:	4964      	ldr	r1, [pc, #400]	; (1004fdac <isr_scan_state+0x400>)
1004fc1a:	2206      	movs	r2, #6
1004fc1c:	6809      	ldr	r1, [r1, #0]
1004fc1e:	1808      	adds	r0, r1, r0
1004fc20:	6d01      	ldr	r1, [r0, #80]	; 0x50
1004fc22:	a802      	add	r0, sp, #8
1004fc24:	3108      	adds	r1, #8
1004fc26:	f7fc fead 	bl	1004c984 <char_copy>
1004fc2a:	4860      	ldr	r0, [pc, #384]	; (1004fdac <isr_scan_state+0x400>)
1004fc2c:	21f0      	movs	r1, #240	; 0xf0
1004fc2e:	6800      	ldr	r0, [r0, #0]
1004fc30:	5c09      	ldrb	r1, [r1, r0]
1004fc32:	2901      	cmp	r1, #1
1004fc34:	d005      	beq.n	1004fc42 <isr_scan_state+0x296>
1004fc36:	2123      	movs	r1, #35	; 0x23
1004fc38:	0149      	lsls	r1, r1, #5
1004fc3a:	1841      	adds	r1, r0, r1
1004fc3c:	7a09      	ldrb	r1, [r1, #8]
1004fc3e:	2900      	cmp	r1, #0
1004fc40:	d027      	beq.n	1004fc92 <isr_scan_state+0x2e6>
1004fc42:	2211      	movs	r2, #17
1004fc44:	0192      	lsls	r2, r2, #6
1004fc46:	1881      	adds	r1, r0, r2
1004fc48:	7d09      	ldrb	r1, [r1, #20]
1004fc4a:	29ff      	cmp	r1, #255	; 0xff
1004fc4c:	d021      	beq.n	1004fc92 <isr_scan_state+0x2e6>
1004fc4e:	2237      	movs	r2, #55	; 0x37
1004fc50:	4351      	muls	r1, r2
1004fc52:	1809      	adds	r1, r1, r0
1004fc54:	31ff      	adds	r1, #255	; 0xff
1004fc56:	3141      	adds	r1, #65	; 0x41
1004fc58:	7b49      	ldrb	r1, [r1, #13]
1004fc5a:	2901      	cmp	r1, #1
1004fc5c:	d019      	beq.n	1004fc92 <isr_scan_state+0x2e6>
1004fc5e:	2109      	movs	r1, #9
1004fc60:	0209      	lsls	r1, r1, #8
1004fc62:	1840      	adds	r0, r0, r1
1004fc64:	6d00      	ldr	r0, [r0, #80]	; 0x50
1004fc66:	2340      	movs	r3, #64	; 0x40
1004fc68:	7802      	ldrb	r2, [r0, #0]
1004fc6a:	431a      	orrs	r2, r3
1004fc6c:	7002      	strb	r2, [r0, #0]
1004fc6e:	484f      	ldr	r0, [pc, #316]	; (1004fdac <isr_scan_state+0x400>)
1004fc70:	2211      	movs	r2, #17
1004fc72:	6800      	ldr	r0, [r0, #0]
1004fc74:	0192      	lsls	r2, r2, #6
1004fc76:	1882      	adds	r2, r0, r2
1004fc78:	1841      	adds	r1, r0, r1
1004fc7a:	7d12      	ldrb	r2, [r2, #20]
1004fc7c:	2337      	movs	r3, #55	; 0x37
1004fc7e:	435a      	muls	r2, r3
1004fc80:	1810      	adds	r0, r2, r0
1004fc82:	6d09      	ldr	r1, [r1, #80]	; 0x50
1004fc84:	30ff      	adds	r0, #255	; 0xff
1004fc86:	2206      	movs	r2, #6
1004fc88:	3041      	adds	r0, #65	; 0x41
1004fc8a:	1c89      	adds	r1, r1, #2
1004fc8c:	f7fc fe7a 	bl	1004c984 <char_copy>
1004fc90:	e020      	b.n	1004fcd4 <isr_scan_state+0x328>
1004fc92:	2209      	movs	r2, #9
1004fc94:	0212      	lsls	r2, r2, #8
1004fc96:	1880      	adds	r0, r0, r2
1004fc98:	6d00      	ldr	r0, [r0, #80]	; 0x50
1004fc9a:	23bf      	movs	r3, #191	; 0xbf
1004fc9c:	7801      	ldrb	r1, [r0, #0]
1004fc9e:	4019      	ands	r1, r3
1004fca0:	686b      	ldr	r3, [r5, #4]
1004fca2:	03db      	lsls	r3, r3, #15
1004fca4:	0fdb      	lsrs	r3, r3, #31
1004fca6:	019b      	lsls	r3, r3, #6
1004fca8:	4319      	orrs	r1, r3
1004fcaa:	7001      	strb	r1, [r0, #0]
1004fcac:	483f      	ldr	r0, [pc, #252]	; (1004fdac <isr_scan_state+0x400>)
1004fcae:	6829      	ldr	r1, [r5, #0]
1004fcb0:	6800      	ldr	r0, [r0, #0]
1004fcb2:	1880      	adds	r0, r0, r2
1004fcb4:	6d00      	ldr	r0, [r0, #80]	; 0x50
1004fcb6:	7081      	strb	r1, [r0, #2]
1004fcb8:	0a0b      	lsrs	r3, r1, #8
1004fcba:	70c3      	strb	r3, [r0, #3]
1004fcbc:	0c0b      	lsrs	r3, r1, #16
1004fcbe:	7103      	strb	r3, [r0, #4]
1004fcc0:	0e09      	lsrs	r1, r1, #24
1004fcc2:	7141      	strb	r1, [r0, #5]
1004fcc4:	4839      	ldr	r0, [pc, #228]	; (1004fdac <isr_scan_state+0x400>)
1004fcc6:	6800      	ldr	r0, [r0, #0]
1004fcc8:	1880      	adds	r0, r0, r2
1004fcca:	6d01      	ldr	r1, [r0, #80]	; 0x50
1004fccc:	88a8      	ldrh	r0, [r5, #4]
1004fcce:	7188      	strb	r0, [r1, #6]
1004fcd0:	0a00      	lsrs	r0, r0, #8
1004fcd2:	71c8      	strb	r0, [r1, #7]
1004fcd4:	2101      	movs	r1, #1
1004fcd6:	4837      	ldr	r0, [pc, #220]	; (1004fdb4 <isr_scan_state+0x408>)
1004fcd8:	0289      	lsls	r1, r1, #10
1004fcda:	6181      	str	r1, [r0, #24]
1004fcdc:	980d      	ldr	r0, [sp, #52]	; 0x34
1004fcde:	78c0      	ldrb	r0, [r0, #3]
1004fce0:	2801      	cmp	r0, #1
1004fce2:	d128      	bne.n	1004fd36 <isr_scan_state+0x38a>
1004fce4:	9810      	ldr	r0, [sp, #64]	; 0x40
1004fce6:	2802      	cmp	r0, #2
1004fce8:	d025      	beq.n	1004fd36 <isr_scan_state+0x38a>
1004fcea:	2801      	cmp	r0, #1
1004fcec:	d023      	beq.n	1004fd36 <isr_scan_state+0x38a>
1004fcee:	2000      	movs	r0, #0
1004fcf0:	900f      	str	r0, [sp, #60]	; 0x3c
1004fcf2:	e020      	b.n	1004fd36 <isr_scan_state+0x38a>
1004fcf4:	2801      	cmp	r0, #1
1004fcf6:	d122      	bne.n	1004fd3e <isr_scan_state+0x392>
1004fcf8:	02c1      	lsls	r1, r0, #11
1004fcfa:	482e      	ldr	r0, [pc, #184]	; (1004fdb4 <isr_scan_state+0x408>)
1004fcfc:	6181      	str	r1, [r0, #24]
1004fcfe:	e026      	b.n	1004fd4e <isr_scan_state+0x3a2>
1004fd00:	20f0      	movs	r0, #240	; 0xf0
1004fd02:	5c40      	ldrb	r0, [r0, r1]
1004fd04:	2800      	cmp	r0, #0
1004fd06:	d105      	bne.n	1004fd14 <isr_scan_state+0x368>
1004fd08:	2023      	movs	r0, #35	; 0x23
1004fd0a:	0140      	lsls	r0, r0, #5
1004fd0c:	1808      	adds	r0, r1, r0
1004fd0e:	7a00      	ldrb	r0, [r0, #8]
1004fd10:	2800      	cmp	r0, #0
1004fd12:	d020      	beq.n	1004fd56 <isr_scan_state+0x3aa>
1004fd14:	2001      	movs	r0, #1
1004fd16:	4669      	mov	r1, sp
1004fd18:	7408      	strb	r0, [r1, #16]
1004fd1a:	2000      	movs	r0, #0
1004fd1c:	9006      	str	r0, [sp, #24]
1004fd1e:	a814      	add	r0, sp, #80	; 0x50
1004fd20:	9007      	str	r0, [sp, #28]
1004fd22:	9605      	str	r6, [sp, #20]
1004fd24:	a811      	add	r0, sp, #68	; 0x44
1004fd26:	900a      	str	r0, [sp, #40]	; 0x28
1004fd28:	9708      	str	r7, [sp, #32]
1004fd2a:	9509      	str	r5, [sp, #36]	; 0x24
1004fd2c:	a804      	add	r0, sp, #16
1004fd2e:	f7f1 fda7 	bl	10041880 <PRIV_u32ProcessAdvPacket_ucfg>
1004fd32:	4920      	ldr	r1, [pc, #128]	; (1004fdb4 <isr_scan_state+0x408>)
1004fd34:	7108      	strb	r0, [r1, #4]
1004fd36:	481f      	ldr	r0, [pc, #124]	; (1004fdb4 <isr_scan_state+0x408>)
1004fd38:	7900      	ldrb	r0, [r0, #4]
1004fd3a:	2801      	cmp	r0, #1
1004fd3c:	d003      	beq.n	1004fd46 <isr_scan_state+0x39a>
1004fd3e:	980d      	ldr	r0, [sp, #52]	; 0x34
1004fd40:	78c0      	ldrb	r0, [r0, #3]
1004fd42:	2802      	cmp	r0, #2
1004fd44:	d06d      	beq.n	1004fe22 <isr_scan_state+0x476>
1004fd46:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004fd48:	2800      	cmp	r0, #0
1004fd4a:	d100      	bne.n	1004fd4e <isr_scan_state+0x3a2>
1004fd4c:	e659      	b.n	1004fa02 <isr_scan_state+0x56>
1004fd4e:	980e      	ldr	r0, [sp, #56]	; 0x38
1004fd50:	2800      	cmp	r0, #0
1004fd52:	d07d      	beq.n	1004fe50 <isr_scan_state+0x4a4>
1004fd54:	e116      	b.n	1004ff84 <isr_scan_state+0x5d8>
1004fd56:	7830      	ldrb	r0, [r6, #0]
1004fd58:	a906      	add	r1, sp, #24
1004fd5a:	0702      	lsls	r2, r0, #28
1004fd5c:	0f12      	lsrs	r2, r2, #28
1004fd5e:	4630      	mov	r0, r6
1004fd60:	920a      	str	r2, [sp, #40]	; 0x28
1004fd62:	f005 ff89 	bl	10055c78 <get_scan_addr>
1004fd66:	a908      	add	r1, sp, #32
1004fd68:	4630      	mov	r0, r6
1004fd6a:	f005 ff7b 	bl	10055c64 <get_adv_addr>
1004fd6e:	1cb0      	adds	r0, r6, #2
1004fd70:	4601      	mov	r1, r0
1004fd72:	780a      	ldrb	r2, [r1, #0]
1004fd74:	7973      	ldrb	r3, [r6, #5]
1004fd76:	4610      	mov	r0, r2
1004fd78:	784a      	ldrb	r2, [r1, #1]
1004fd7a:	0212      	lsls	r2, r2, #8
1004fd7c:	4310      	orrs	r0, r2
1004fd7e:	788a      	ldrb	r2, [r1, #2]
1004fd80:	78c9      	ldrb	r1, [r1, #3]
1004fd82:	0412      	lsls	r2, r2, #16
1004fd84:	4310      	orrs	r0, r2
1004fd86:	0609      	lsls	r1, r1, #24
1004fd88:	4308      	orrs	r0, r1
1004fd8a:	0202      	lsls	r2, r0, #8
1004fd8c:	7830      	ldrb	r0, [r6, #0]
1004fd8e:	7a31      	ldrb	r1, [r6, #8]
1004fd90:	0640      	lsls	r0, r0, #25
1004fd92:	0fc0      	lsrs	r0, r0, #31
1004fd94:	4302      	orrs	r2, r0
1004fd96:	4618      	mov	r0, r3
1004fd98:	79b3      	ldrb	r3, [r6, #6]
1004fd9a:	0609      	lsls	r1, r1, #24
1004fd9c:	021b      	lsls	r3, r3, #8
1004fd9e:	4318      	orrs	r0, r3
1004fda0:	79f3      	ldrb	r3, [r6, #7]
1004fda2:	041b      	lsls	r3, r3, #16
1004fda4:	4318      	orrs	r0, r3
1004fda6:	4308      	orrs	r0, r1
1004fda8:	0201      	lsls	r1, r0, #8
1004fdaa:	e005      	b.n	1004fdb8 <isr_scan_state+0x40c>
1004fdac:	20000d64 	.word	0x20000d64
1004fdb0:	00000904 	.word	0x00000904
1004fdb4:	20000d18 	.word	0x20000d18
1004fdb8:	4610      	mov	r0, r2
1004fdba:	f000 fe2f 	bl	10050a1c <PRIV_SearchAddrInWhiteList>
1004fdbe:	4684      	mov	ip, r0
1004fdc0:	6938      	ldr	r0, [r7, #16]
1004fdc2:	6979      	ldr	r1, [r7, #20]
1004fdc4:	4b85      	ldr	r3, [pc, #532]	; (1004ffdc <isr_scan_state+0x630>)
1004fdc6:	2200      	movs	r2, #0
1004fdc8:	711a      	strb	r2, [r3, #4]
1004fdca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004fdcc:	2a03      	cmp	r2, #3
1004fdce:	d01c      	beq.n	1004fe0a <isr_scan_state+0x45e>
1004fdd0:	2a04      	cmp	r2, #4
1004fdd2:	d01a      	beq.n	1004fe0a <isr_scan_state+0x45e>
1004fdd4:	2a05      	cmp	r2, #5
1004fdd6:	d018      	beq.n	1004fe0a <isr_scan_state+0x45e>
1004fdd8:	2a02      	cmp	r2, #2
1004fdda:	d016      	beq.n	1004fe0a <isr_scan_state+0x45e>
1004fddc:	2a06      	cmp	r2, #6
1004fdde:	d014      	beq.n	1004fe0a <isr_scan_state+0x45e>
1004fde0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1004fde2:	7912      	ldrb	r2, [r2, #4]
1004fde4:	2a00      	cmp	r2, #0
1004fde6:	d013      	beq.n	1004fe10 <isr_scan_state+0x464>
1004fde8:	4660      	mov	r0, ip
1004fdea:	2800      	cmp	r0, #0
1004fdec:	d016      	beq.n	1004fe1c <isr_scan_state+0x470>
1004fdee:	980a      	ldr	r0, [sp, #40]	; 0x28
1004fdf0:	2801      	cmp	r0, #1
1004fdf2:	d1a0      	bne.n	1004fd36 <isr_scan_state+0x38a>
1004fdf4:	9808      	ldr	r0, [sp, #32]
1004fdf6:	6829      	ldr	r1, [r5, #0]
1004fdf8:	4288      	cmp	r0, r1
1004fdfa:	d103      	bne.n	1004fe04 <isr_scan_state+0x458>
1004fdfc:	9809      	ldr	r0, [sp, #36]	; 0x24
1004fdfe:	6869      	ldr	r1, [r5, #4]
1004fe00:	4288      	cmp	r0, r1
1004fe02:	d098      	beq.n	1004fd36 <isr_scan_state+0x38a>
1004fe04:	2001      	movs	r0, #1
1004fe06:	7118      	strb	r0, [r3, #4]
1004fe08:	e7a1      	b.n	1004fd4e <isr_scan_state+0x3a2>
1004fe0a:	2201      	movs	r2, #1
1004fe0c:	711a      	strb	r2, [r3, #4]
1004fe0e:	e7e7      	b.n	1004fde0 <isr_scan_state+0x434>
1004fe10:	9a06      	ldr	r2, [sp, #24]
1004fe12:	4282      	cmp	r2, r0
1004fe14:	d102      	bne.n	1004fe1c <isr_scan_state+0x470>
1004fe16:	9807      	ldr	r0, [sp, #28]
1004fe18:	4288      	cmp	r0, r1
1004fe1a:	d0e8      	beq.n	1004fdee <isr_scan_state+0x442>
1004fe1c:	2001      	movs	r0, #1
1004fe1e:	7118      	strb	r0, [r3, #4]
1004fe20:	e7e5      	b.n	1004fdee <isr_scan_state+0x442>
1004fe22:	68b8      	ldr	r0, [r7, #8]
1004fe24:	496d      	ldr	r1, [pc, #436]	; (1004ffdc <isr_scan_state+0x630>)
1004fe26:	6909      	ldr	r1, [r1, #16]
1004fe28:	8208      	strh	r0, [r1, #16]
1004fe2a:	6a38      	ldr	r0, [r7, #32]
1004fe2c:	9007      	str	r0, [sp, #28]
1004fe2e:	1c80      	adds	r0, r0, #2
1004fe30:	9006      	str	r0, [sp, #24]
1004fe32:	2009      	movs	r0, #9
1004fe34:	06c0      	lsls	r0, r0, #27
1004fe36:	6c21      	ldr	r1, [r4, #64]	; 0x40
1004fe38:	6880      	ldr	r0, [r0, #8]
1004fe3a:	1a08      	subs	r0, r1, r0
1004fe3c:	0200      	lsls	r0, r0, #8
1004fe3e:	1207      	asrs	r7, r0, #8
1004fe40:	4867      	ldr	r0, [pc, #412]	; (1004ffe0 <isr_scan_state+0x634>)
1004fe42:	6800      	ldr	r0, [r0, #0]
1004fe44:	6a80      	ldr	r0, [r0, #40]	; 0x28
1004fe46:	9005      	str	r0, [sp, #20]
1004fe48:	4287      	cmp	r7, r0
1004fe4a:	da0b      	bge.n	1004fe64 <isr_scan_state+0x4b8>
1004fe4c:	69a0      	ldr	r0, [r4, #24]
1004fe4e:	e000      	b.n	1004fe52 <isr_scan_state+0x4a6>
1004fe50:	e078      	b.n	1004ff44 <isr_scan_state+0x598>
1004fe52:	f007 fb83 	bl	1005755c <machine_time_trans>
1004fe56:	19c7      	adds	r7, r0, r7
1004fe58:	8c20      	ldrh	r0, [r4, #32]
1004fe5a:	1c40      	adds	r0, r0, #1
1004fe5c:	8420      	strh	r0, [r4, #32]
1004fe5e:	9805      	ldr	r0, [sp, #20]
1004fe60:	4287      	cmp	r7, r0
1004fe62:	dbf3      	blt.n	1004fe4c <isr_scan_state+0x4a0>
1004fe64:	4638      	mov	r0, r7
1004fe66:	f007 fbdb 	bl	10057620 <system_time_trans>
1004fe6a:	01c0      	lsls	r0, r0, #7
1004fe6c:	0c04      	lsrs	r4, r0, #16
1004fe6e:	9807      	ldr	r0, [sp, #28]
1004fe70:	2180      	movs	r1, #128	; 0x80
1004fe72:	7800      	ldrb	r0, [r0, #0]
1004fe74:	22f0      	movs	r2, #240	; 0xf0
1004fe76:	0643      	lsls	r3, r0, #25
1004fe78:	7830      	ldrb	r0, [r6, #0]
1004fe7a:	0e5b      	lsrs	r3, r3, #25
1004fe7c:	0040      	lsls	r0, r0, #1
1004fe7e:	4008      	ands	r0, r1
1004fe80:	4303      	orrs	r3, r0
1004fe82:	9807      	ldr	r0, [sp, #28]
1004fe84:	4956      	ldr	r1, [pc, #344]	; (1004ffe0 <isr_scan_state+0x634>)
1004fe86:	7003      	strb	r3, [r0, #0]
1004fe88:	6808      	ldr	r0, [r1, #0]
1004fe8a:	5c12      	ldrb	r2, [r2, r0]
1004fe8c:	2a01      	cmp	r2, #1
1004fe8e:	d005      	beq.n	1004fe9c <isr_scan_state+0x4f0>
1004fe90:	2223      	movs	r2, #35	; 0x23
1004fe92:	0152      	lsls	r2, r2, #5
1004fe94:	1882      	adds	r2, r0, r2
1004fe96:	7a12      	ldrb	r2, [r2, #8]
1004fe98:	2a00      	cmp	r2, #0
1004fe9a:	d039      	beq.n	1004ff10 <isr_scan_state+0x564>
1004fe9c:	2211      	movs	r2, #17
1004fe9e:	0192      	lsls	r2, r2, #6
1004fea0:	1887      	adds	r7, r0, r2
1004fea2:	7d7f      	ldrb	r7, [r7, #21]
1004fea4:	2fff      	cmp	r7, #255	; 0xff
1004fea6:	d01a      	beq.n	1004fede <isr_scan_state+0x532>
1004fea8:	2137      	movs	r1, #55	; 0x37
1004feaa:	434f      	muls	r7, r1
1004feac:	1838      	adds	r0, r7, r0
1004feae:	30ff      	adds	r0, #255	; 0xff
1004feb0:	3041      	adds	r0, #65	; 0x41
1004feb2:	7b40      	ldrb	r0, [r0, #13]
1004feb4:	2801      	cmp	r0, #1
1004feb6:	d012      	beq.n	1004fede <isr_scan_state+0x532>
1004feb8:	2040      	movs	r0, #64	; 0x40
1004feba:	4303      	orrs	r3, r0
1004febc:	9807      	ldr	r0, [sp, #28]
1004febe:	7003      	strb	r3, [r0, #0]
1004fec0:	4847      	ldr	r0, [pc, #284]	; (1004ffe0 <isr_scan_state+0x634>)
1004fec2:	6800      	ldr	r0, [r0, #0]
1004fec4:	1881      	adds	r1, r0, r2
1004fec6:	7d49      	ldrb	r1, [r1, #21]
1004fec8:	2237      	movs	r2, #55	; 0x37
1004feca:	4351      	muls	r1, r2
1004fecc:	1808      	adds	r0, r1, r0
1004fece:	9907      	ldr	r1, [sp, #28]
1004fed0:	30ff      	adds	r0, #255	; 0xff
1004fed2:	2206      	movs	r2, #6
1004fed4:	3041      	adds	r0, #65	; 0x41
1004fed6:	1c89      	adds	r1, r1, #2
1004fed8:	f7fc fd54 	bl	1004c984 <char_copy>
1004fedc:	e018      	b.n	1004ff10 <isr_scan_state+0x564>
1004fede:	9906      	ldr	r1, [sp, #24]
1004fee0:	6828      	ldr	r0, [r5, #0]
1004fee2:	7008      	strb	r0, [r1, #0]
1004fee4:	0a02      	lsrs	r2, r0, #8
1004fee6:	704a      	strb	r2, [r1, #1]
1004fee8:	0c02      	lsrs	r2, r0, #16
1004feea:	708a      	strb	r2, [r1, #2]
1004feec:	0e00      	lsrs	r0, r0, #24
1004feee:	70c8      	strb	r0, [r1, #3]
1004fef0:	9806      	ldr	r0, [sp, #24]
1004fef2:	88a9      	ldrh	r1, [r5, #4]
1004fef4:	7101      	strb	r1, [r0, #4]
1004fef6:	0a09      	lsrs	r1, r1, #8
1004fef8:	7141      	strb	r1, [r0, #5]
1004fefa:	9807      	ldr	r0, [sp, #28]
1004fefc:	21bf      	movs	r1, #191	; 0xbf
1004fefe:	7800      	ldrb	r0, [r0, #0]
1004ff00:	4008      	ands	r0, r1
1004ff02:	6869      	ldr	r1, [r5, #4]
1004ff04:	03c9      	lsls	r1, r1, #15
1004ff06:	0fc9      	lsrs	r1, r1, #31
1004ff08:	0189      	lsls	r1, r1, #6
1004ff0a:	4308      	orrs	r0, r1
1004ff0c:	9907      	ldr	r1, [sp, #28]
1004ff0e:	7008      	strb	r0, [r1, #0]
1004ff10:	a902      	add	r1, sp, #8
1004ff12:	4630      	mov	r0, r6
1004ff14:	f005 feb0 	bl	10055c78 <get_scan_addr>
1004ff18:	9807      	ldr	r0, [sp, #28]
1004ff1a:	9902      	ldr	r1, [sp, #8]
1004ff1c:	7201      	strb	r1, [r0, #8]
1004ff1e:	0a0a      	lsrs	r2, r1, #8
1004ff20:	7242      	strb	r2, [r0, #9]
1004ff22:	0c0a      	lsrs	r2, r1, #16
1004ff24:	7282      	strb	r2, [r0, #10]
1004ff26:	0e09      	lsrs	r1, r1, #24
1004ff28:	72c1      	strb	r1, [r0, #11]
1004ff2a:	9903      	ldr	r1, [sp, #12]
1004ff2c:	7301      	strb	r1, [r0, #12]
1004ff2e:	0a09      	lsrs	r1, r1, #8
1004ff30:	7341      	strb	r1, [r0, #13]
1004ff32:	7584      	strb	r4, [r0, #22]
1004ff34:	0a21      	lsrs	r1, r4, #8
1004ff36:	75c1      	strb	r1, [r0, #23]
1004ff38:	9802      	ldr	r0, [sp, #8]
1004ff3a:	6128      	str	r0, [r5, #16]
1004ff3c:	9803      	ldr	r0, [sp, #12]
1004ff3e:	6168      	str	r0, [r5, #20]
1004ff40:	b017      	add	sp, #92	; 0x5c
1004ff42:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ff44:	4825      	ldr	r0, [pc, #148]	; (1004ffdc <isr_scan_state+0x630>)
1004ff46:	2200      	movs	r2, #0
1004ff48:	6900      	ldr	r0, [r0, #16]
1004ff4a:	7282      	strb	r2, [r0, #10]
1004ff4c:	68f9      	ldr	r1, [r7, #12]
1004ff4e:	8241      	strh	r1, [r0, #18]
1004ff50:	68f8      	ldr	r0, [r7, #12]
1004ff52:	7a81      	ldrb	r1, [r0, #10]
1004ff54:	2009      	movs	r0, #9
1004ff56:	06c0      	lsls	r0, r0, #27
1004ff58:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1004ff5a:	6906      	ldr	r6, [r0, #16]
1004ff5c:	1b9b      	subs	r3, r3, r6
1004ff5e:	021e      	lsls	r6, r3, #8
1004ff60:	2301      	movs	r3, #1
1004ff62:	0a36      	lsrs	r6, r6, #8
1004ff64:	05db      	lsls	r3, r3, #23
1004ff66:	429e      	cmp	r6, r3
1004ff68:	d905      	bls.n	1004ff76 <isr_scan_state+0x5ca>
1004ff6a:	6042      	str	r2, [r0, #4]
1004ff6c:	2011      	movs	r0, #17
1004ff6e:	4301      	orrs	r1, r0
1004ff70:	68f8      	ldr	r0, [r7, #12]
1004ff72:	7281      	strb	r1, [r0, #10]
1004ff74:	e003      	b.n	1004ff7e <isr_scan_state+0x5d2>
1004ff76:	20ee      	movs	r0, #238	; 0xee
1004ff78:	4001      	ands	r1, r0
1004ff7a:	68f8      	ldr	r0, [r7, #12]
1004ff7c:	7281      	strb	r1, [r0, #10]
1004ff7e:	4628      	mov	r0, r5
1004ff80:	f005 fd40 	bl	10055a04 <isr_postproc_encrypt_data>
1004ff84:	2609      	movs	r6, #9
1004ff86:	06f6      	lsls	r6, r6, #27
1004ff88:	6870      	ldr	r0, [r6, #4]
1004ff8a:	2800      	cmp	r0, #0
1004ff8c:	d10c      	bne.n	1004ffa8 <isr_scan_state+0x5fc>
1004ff8e:	4814      	ldr	r0, [pc, #80]	; (1004ffe0 <isr_scan_state+0x634>)
1004ff90:	6801      	ldr	r1, [r0, #0]
1004ff92:	14f0      	asrs	r0, r6, #19
1004ff94:	1808      	adds	r0, r1, r0
1004ff96:	7840      	ldrb	r0, [r0, #1]
1004ff98:	2800      	cmp	r0, #0
1004ff9a:	d002      	beq.n	1004ffa2 <isr_scan_state+0x5f6>
1004ff9c:	2001      	movs	r0, #1
1004ff9e:	f007 fc6f 	bl	10057880 <slave_advance>
1004ffa2:	2001      	movs	r0, #1
1004ffa4:	f00c fe38 	bl	1005cc18 <advance_wakeup_timer>
1004ffa8:	6c20      	ldr	r0, [r4, #64]	; 0x40
1004ffaa:	6931      	ldr	r1, [r6, #16]
1004ffac:	2501      	movs	r5, #1
1004ffae:	1a40      	subs	r0, r0, r1
1004ffb0:	0200      	lsls	r0, r0, #8
1004ffb2:	0a00      	lsrs	r0, r0, #8
1004ffb4:	05ed      	lsls	r5, r5, #23
1004ffb6:	42a8      	cmp	r0, r5
1004ffb8:	d3c2      	bcc.n	1004ff40 <isr_scan_state+0x594>
1004ffba:	69a0      	ldr	r0, [r4, #24]
1004ffbc:	f007 face 	bl	1005755c <machine_time_trans>
1004ffc0:	6c21      	ldr	r1, [r4, #64]	; 0x40
1004ffc2:	1841      	adds	r1, r0, r1
1004ffc4:	6421      	str	r1, [r4, #64]	; 0x40
1004ffc6:	8c20      	ldrh	r0, [r4, #32]
1004ffc8:	1c40      	adds	r0, r0, #1
1004ffca:	8420      	strh	r0, [r4, #32]
1004ffcc:	6930      	ldr	r0, [r6, #16]
1004ffce:	1a08      	subs	r0, r1, r0
1004ffd0:	0200      	lsls	r0, r0, #8
1004ffd2:	0a00      	lsrs	r0, r0, #8
1004ffd4:	42a8      	cmp	r0, r5
1004ffd6:	d2f0      	bcs.n	1004ffba <isr_scan_state+0x60e>
1004ffd8:	b017      	add	sp, #92	; 0x5c
1004ffda:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ffdc:	20000d18 	.word	0x20000d18
1004ffe0:	20000d64 	.word	0x20000d64

1004ffe4 <isr_test_rx_state>:
1004ffe4:	480a      	ldr	r0, [pc, #40]	; (10050010 <isr_test_rx_state+0x2c>)
1004ffe6:	2141      	movs	r1, #65	; 0x41
1004ffe8:	6800      	ldr	r0, [r0, #0]
1004ffea:	0149      	lsls	r1, r1, #5
1004ffec:	1840      	adds	r0, r0, r1
1004ffee:	2109      	movs	r1, #9
1004fff0:	06c9      	lsls	r1, r1, #27
1004fff2:	690a      	ldr	r2, [r1, #16]
1004fff4:	6502      	str	r2, [r0, #80]	; 0x50
1004fff6:	2200      	movs	r2, #0
1004fff8:	3080      	adds	r0, #128	; 0x80
1004fffa:	6a40      	ldr	r0, [r0, #36]	; 0x24
1004fffc:	7282      	strb	r2, [r0, #10]
1004fffe:	6808      	ldr	r0, [r1, #0]
10050000:	2800      	cmp	r0, #0
10050002:	da04      	bge.n	1005000e <isr_test_rx_state+0x2a>
10050004:	4803      	ldr	r0, [pc, #12]	; (10050014 <isr_test_rx_state+0x30>)
10050006:	68c1      	ldr	r1, [r0, #12]
10050008:	8908      	ldrh	r0, [r1, #8]
1005000a:	1c40      	adds	r0, r0, #1
1005000c:	8108      	strh	r0, [r1, #8]
1005000e:	4770      	bx	lr
10050010:	20000d64 	.word	0x20000d64
10050014:	20000d18 	.word	0x20000d18

10050018 <isr_test_tx_state>:
10050018:	b510      	push	{r4, lr}
1005001a:	4816      	ldr	r0, [pc, #88]	; (10050074 <isr_test_tx_state+0x5c>)
1005001c:	2141      	movs	r1, #65	; 0x41
1005001e:	6800      	ldr	r0, [r0, #0]
10050020:	0149      	lsls	r1, r1, #5
10050022:	1844      	adds	r4, r0, r1
10050024:	20a4      	movs	r0, #164	; 0xa4
10050026:	5900      	ldr	r0, [r0, r4]
10050028:	7a81      	ldrb	r1, [r0, #10]
1005002a:	0849      	lsrs	r1, r1, #1
1005002c:	0049      	lsls	r1, r1, #1
1005002e:	7281      	strb	r1, [r0, #10]
10050030:	f7f1 fdac 	bl	10041b8c <data_length_extension_csr_ucfg>
10050034:	2801      	cmp	r0, #1
10050036:	d014      	beq.n	10050062 <isr_test_tx_state+0x4a>
10050038:	20ff      	movs	r0, #255	; 0xff
1005003a:	3001      	adds	r0, #1
1005003c:	f007 fa8e 	bl	1005755c <machine_time_trans>
10050040:	6d21      	ldr	r1, [r4, #80]	; 0x50
10050042:	1840      	adds	r0, r0, r1
10050044:	0200      	lsls	r0, r0, #8
10050046:	0a00      	lsrs	r0, r0, #8
10050048:	6520      	str	r0, [r4, #80]	; 0x50
1005004a:	2101      	movs	r1, #1
1005004c:	0649      	lsls	r1, r1, #25
1005004e:	1840      	adds	r0, r0, r1
10050050:	2109      	movs	r1, #9
10050052:	06c9      	lsls	r1, r1, #27
10050054:	6048      	str	r0, [r1, #4]
10050056:	4808      	ldr	r0, [pc, #32]	; (10050078 <isr_test_tx_state+0x60>)
10050058:	68c1      	ldr	r1, [r0, #12]
1005005a:	8908      	ldrh	r0, [r1, #8]
1005005c:	1c40      	adds	r0, r0, #1
1005005e:	8108      	strh	r0, [r1, #8]
10050060:	bd10      	pop	{r4, pc}
10050062:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
10050064:	f007 fa7a 	bl	1005755c <machine_time_trans>
10050068:	6d21      	ldr	r1, [r4, #80]	; 0x50
1005006a:	1840      	adds	r0, r0, r1
1005006c:	0200      	lsls	r0, r0, #8
1005006e:	0a00      	lsrs	r0, r0, #8
10050070:	6520      	str	r0, [r4, #80]	; 0x50
10050072:	e7ea      	b.n	1005004a <isr_test_tx_state+0x32>
10050074:	20000d64 	.word	0x20000d64
10050078:	20000d18 	.word	0x20000d18

1005007c <isr_unknown_state>:
1005007c:	b510      	push	{r4, lr}
1005007e:	2000      	movs	r0, #0
10050080:	2109      	movs	r1, #9
10050082:	06c9      	lsls	r1, r1, #27
10050084:	6048      	str	r0, [r1, #4]
10050086:	4807      	ldr	r0, [pc, #28]	; (100500a4 <isr_unknown_state+0x28>)
10050088:	14c9      	asrs	r1, r1, #19
1005008a:	6800      	ldr	r0, [r0, #0]
1005008c:	1840      	adds	r0, r0, r1
1005008e:	7840      	ldrb	r0, [r0, #1]
10050090:	2800      	cmp	r0, #0
10050092:	d002      	beq.n	1005009a <isr_unknown_state+0x1e>
10050094:	2001      	movs	r0, #1
10050096:	f007 fbf3 	bl	10057880 <slave_advance>
1005009a:	2001      	movs	r0, #1
1005009c:	f00c fdbc 	bl	1005cc18 <advance_wakeup_timer>
100500a0:	bd10      	pop	{r4, pc}
100500a2:	0000      	.short	0x0000
100500a4:	20000d64 	.word	0x20000d64

100500a8 <__ARM_common_memcpy1_6>:
100500a8:	780a      	ldrb	r2, [r1, #0]
100500aa:	7002      	strb	r2, [r0, #0]
100500ac:	784b      	ldrb	r3, [r1, #1]
100500ae:	7043      	strb	r3, [r0, #1]
100500b0:	788a      	ldrb	r2, [r1, #2]
100500b2:	7082      	strb	r2, [r0, #2]
100500b4:	78ca      	ldrb	r2, [r1, #3]
100500b6:	70c2      	strb	r2, [r0, #3]
100500b8:	790b      	ldrb	r3, [r1, #4]
100500ba:	7103      	strb	r3, [r0, #4]
100500bc:	794a      	ldrb	r2, [r1, #5]
100500be:	7142      	strb	r2, [r0, #5]
100500c0:	4770      	bx	lr
	...

100500c4 <LL_LE_Add_Device_To_Resolving_List>:
100500c4:	b5f0      	push	{r4, r5, r6, r7, lr}
100500c6:	b08d      	sub	sp, #52	; 0x34
100500c8:	2600      	movs	r6, #0
100500ca:	4d55      	ldr	r5, [pc, #340]	; (10050220 <LL_LE_Add_Device_To_Resolving_List+0x15c>)
100500cc:	4604      	mov	r4, r0
100500ce:	9606      	str	r6, [sp, #24]
100500d0:	9607      	str	r6, [sp, #28]
100500d2:	9608      	str	r6, [sp, #32]
100500d4:	9609      	str	r6, [sp, #36]	; 0x24
100500d6:	6828      	ldr	r0, [r5, #0]
100500d8:	30e0      	adds	r0, #224	; 0xe0
100500da:	7c00      	ldrb	r0, [r0, #16]
100500dc:	2801      	cmp	r0, #1
100500de:	d103      	bne.n	100500e8 <LL_LE_Add_Device_To_Resolving_List+0x24>
100500e0:	f001 faf6 	bl	100516d0 <scan_connection_or_advertiser>
100500e4:	2801      	cmp	r0, #1
100500e6:	d011      	beq.n	1005010c <LL_LE_Add_Device_To_Resolving_List+0x48>
100500e8:	6829      	ldr	r1, [r5, #0]
100500ea:	2000      	movs	r0, #0
100500ec:	31e0      	adds	r1, #224	; 0xe0
100500ee:	7448      	strb	r0, [r1, #17]
100500f0:	1de0      	adds	r0, r4, #7
100500f2:	940b      	str	r4, [sp, #44]	; 0x2c
100500f4:	9004      	str	r0, [sp, #16]
100500f6:	3417      	adds	r4, #23
100500f8:	9405      	str	r4, [sp, #20]
100500fa:	2000      	movs	r0, #0
100500fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
100500fe:	f000 f9fb 	bl	100504f8 <PRIVWHIT_u8AddAddrInList>
10050102:	4606      	mov	r6, r0
10050104:	28ff      	cmp	r0, #255	; 0xff
10050106:	d004      	beq.n	10050112 <LL_LE_Add_Device_To_Resolving_List+0x4e>
10050108:	2000      	movs	r0, #0
1005010a:	e003      	b.n	10050114 <LL_LE_Add_Device_To_Resolving_List+0x50>
1005010c:	200c      	movs	r0, #12
1005010e:	b00d      	add	sp, #52	; 0x34
10050110:	bdf0      	pop	{r4, r5, r6, r7, pc}
10050112:	2007      	movs	r0, #7
10050114:	900a      	str	r0, [sp, #40]	; 0x28
10050116:	6828      	ldr	r0, [r5, #0]
10050118:	00f1      	lsls	r1, r6, #3
1005011a:	4a42      	ldr	r2, [pc, #264]	; (10050224 <LL_LE_Add_Device_To_Resolving_List+0x160>)
1005011c:	1809      	adds	r1, r1, r0
1005011e:	1889      	adds	r1, r1, r2
10050120:	9103      	str	r1, [sp, #12]
10050122:	212f      	movs	r1, #47	; 0x2f
10050124:	0149      	lsls	r1, r1, #5
10050126:	1840      	adds	r0, r0, r1
10050128:	900c      	str	r0, [sp, #48]	; 0x30
1005012a:	0870      	lsrs	r0, r6, #1
1005012c:	287f      	cmp	r0, #127	; 0x7f
1005012e:	d057      	beq.n	100501e0 <LL_LE_Add_Device_To_Resolving_List+0x11c>
10050130:	f000 fb70 	bl	10050814 <PRIVWHIT_u8ReturnFreeRecordDatabase>
10050134:	4607      	mov	r7, r0
10050136:	09f0      	lsrs	r0, r6, #7
10050138:	d003      	beq.n	10050142 <LL_LE_Add_Device_To_Resolving_List+0x7e>
1005013a:	1e7f      	subs	r7, r7, #1
1005013c:	0676      	lsls	r6, r6, #25
1005013e:	b2ff      	uxtb	r7, r7
10050140:	0e76      	lsrs	r6, r6, #25
10050142:	2037      	movs	r0, #55	; 0x37
10050144:	6829      	ldr	r1, [r5, #0]
10050146:	4378      	muls	r0, r7
10050148:	1844      	adds	r4, r0, r1
1005014a:	9803      	ldr	r0, [sp, #12]
1005014c:	34ff      	adds	r4, #255	; 0xff
1005014e:	71c7      	strb	r7, [r0, #7]
10050150:	2003      	movs	r0, #3
10050152:	341b      	adds	r4, #27
10050154:	990b      	ldr	r1, [sp, #44]	; 0x2c
10050156:	f000 fb73 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
1005015a:	4601      	mov	r1, r0
1005015c:	2000      	movs	r0, #0
1005015e:	22ff      	movs	r2, #255	; 0xff
10050160:	70a0      	strb	r0, [r4, #2]
10050162:	70e2      	strb	r2, [r4, #3]
10050164:	7026      	strb	r6, [r4, #0]
10050166:	29ff      	cmp	r1, #255	; 0xff
10050168:	d006      	beq.n	10050178 <LL_LE_Add_Device_To_Resolving_List+0xb4>
1005016a:	2201      	movs	r2, #1
1005016c:	70a2      	strb	r2, [r4, #2]
1005016e:	70e1      	strb	r1, [r4, #3]
10050170:	00ca      	lsls	r2, r1, #3
10050172:	990c      	ldr	r1, [sp, #48]	; 0x30
10050174:	1851      	adds	r1, r2, r1
10050176:	71cf      	strb	r7, [r1, #7]
10050178:	4626      	mov	r6, r4
1005017a:	2101      	movs	r1, #1
1005017c:	3620      	adds	r6, #32
1005017e:	7571      	strb	r1, [r6, #21]
10050180:	4607      	mov	r7, r0
10050182:	75b0      	strb	r0, [r6, #22]
10050184:	2210      	movs	r2, #16
10050186:	a906      	add	r1, sp, #24
10050188:	9804      	ldr	r0, [sp, #16]
1005018a:	f7f0 fb02 	bl	10040792 <Osal_MemCmp>
1005018e:	2800      	cmp	r0, #0
10050190:	d00b      	beq.n	100501aa <LL_LE_Add_Device_To_Resolving_List+0xe6>
10050192:	2210      	movs	r2, #16
10050194:	1d20      	adds	r0, r4, #4
10050196:	9904      	ldr	r1, [sp, #16]
10050198:	f7f0 faf3 	bl	10040782 <Osal_MemCpy>
1005019c:	4621      	mov	r1, r4
1005019e:	312c      	adds	r1, #44	; 0x2c
100501a0:	1d20      	adds	r0, r4, #4
100501a2:	f001 f86b 	bl	1005127c <PRIV_vGeneratePrivateAddress>
100501a6:	7527      	strb	r7, [r4, #20]
100501a8:	e001      	b.n	100501ae <LL_LE_Add_Device_To_Resolving_List+0xea>
100501aa:	2001      	movs	r0, #1
100501ac:	7520      	strb	r0, [r4, #20]
100501ae:	2210      	movs	r2, #16
100501b0:	a906      	add	r1, sp, #24
100501b2:	9805      	ldr	r0, [sp, #20]
100501b4:	f7f0 faed 	bl	10040792 <Osal_MemCmp>
100501b8:	2800      	cmp	r0, #0
100501ba:	d00d      	beq.n	100501d8 <LL_LE_Add_Device_To_Resolving_List+0x114>
100501bc:	4620      	mov	r0, r4
100501be:	3015      	adds	r0, #21
100501c0:	2210      	movs	r2, #16
100501c2:	9905      	ldr	r1, [sp, #20]
100501c4:	9002      	str	r0, [sp, #8]
100501c6:	f7f0 fadc 	bl	10040782 <Osal_MemCpy>
100501ca:	4621      	mov	r1, r4
100501cc:	3125      	adds	r1, #37	; 0x25
100501ce:	9802      	ldr	r0, [sp, #8]
100501d0:	f001 f854 	bl	1005127c <PRIV_vGeneratePrivateAddress>
100501d4:	74f7      	strb	r7, [r6, #19]
100501d6:	e001      	b.n	100501dc <LL_LE_Add_Device_To_Resolving_List+0x118>
100501d8:	2001      	movs	r0, #1
100501da:	74f0      	strb	r0, [r6, #19]
100501dc:	20ff      	movs	r0, #255	; 0xff
100501de:	7060      	strb	r0, [r4, #1]
100501e0:	4e10      	ldr	r6, [pc, #64]	; (10050224 <LL_LE_Add_Device_To_Resolving_List+0x160>)
100501e2:	2400      	movs	r4, #0
100501e4:	36f8      	adds	r6, #248	; 0xf8
100501e6:	1f37      	subs	r7, r6, #4
100501e8:	e00e      	b.n	10050208 <LL_LE_Add_Device_To_Resolving_List+0x144>
100501ea:	00e1      	lsls	r1, r4, #3
100501ec:	1808      	adds	r0, r1, r0
100501ee:	1981      	adds	r1, r0, r6
100501f0:	2200      	movs	r2, #0
100501f2:	9804      	ldr	r0, [sp, #16]
100501f4:	f001 f828 	bl	10051248 <PRIV_u8ResolvePrivateAddressUnit>
100501f8:	2800      	cmp	r0, #0
100501fa:	d103      	bne.n	10050204 <LL_LE_Add_Device_To_Resolving_List+0x140>
100501fc:	4621      	mov	r1, r4
100501fe:	2002      	movs	r0, #2
10050200:	f000 fa72 	bl	100506e8 <PRIVWHIT_u8RemoveAddrInList>
10050204:	1c64      	adds	r4, r4, #1
10050206:	b2e4      	uxtb	r4, r4
10050208:	6828      	ldr	r0, [r5, #0]
1005020a:	19c1      	adds	r1, r0, r7
1005020c:	7809      	ldrb	r1, [r1, #0]
1005020e:	42a1      	cmp	r1, r4
10050210:	d8eb      	bhi.n	100501ea <LL_LE_Add_Device_To_Resolving_List+0x126>
10050212:	6829      	ldr	r1, [r5, #0]
10050214:	2001      	movs	r0, #1
10050216:	31e0      	adds	r1, #224	; 0xe0
10050218:	7448      	strb	r0, [r1, #17]
1005021a:	980a      	ldr	r0, [sp, #40]	; 0x28
1005021c:	e777      	b.n	1005010e <LL_LE_Add_Device_To_Resolving_List+0x4a>
1005021e:	0000      	.short	0x0000
10050220:	20000d64 	.word	0x20000d64
10050224:	0000046c 	.word	0x0000046c

10050228 <LL_LE_Add_Device_To_White_List>:
10050228:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1005022a:	4d19      	ldr	r5, [pc, #100]	; (10050290 <LL_LE_Add_Device_To_White_List+0x68>)
1005022c:	2100      	movs	r1, #0
1005022e:	6828      	ldr	r0, [r5, #0]
10050230:	30e0      	adds	r0, #224	; 0xe0
10050232:	7441      	strb	r1, [r0, #17]
10050234:	2003      	movs	r0, #3
10050236:	9900      	ldr	r1, [sp, #0]
10050238:	f000 f95e 	bl	100504f8 <PRIVWHIT_u8AddAddrInList>
1005023c:	2701      	movs	r7, #1
1005023e:	4604      	mov	r4, r0
10050240:	28ff      	cmp	r0, #255	; 0xff
10050242:	d01e      	beq.n	10050282 <LL_LE_Add_Device_To_White_List+0x5a>
10050244:	2600      	movs	r6, #0
10050246:	4630      	mov	r0, r6
10050248:	9900      	ldr	r1, [sp, #0]
1005024a:	f000 faf9 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
1005024e:	28ff      	cmp	r0, #255	; 0xff
10050250:	d00d      	beq.n	1005026e <LL_LE_Add_Device_To_White_List+0x46>
10050252:	00c1      	lsls	r1, r0, #3
10050254:	6828      	ldr	r0, [r5, #0]
10050256:	4a0f      	ldr	r2, [pc, #60]	; (10050294 <LL_LE_Add_Device_To_White_List+0x6c>)
10050258:	1809      	adds	r1, r1, r0
1005025a:	1889      	adds	r1, r1, r2
1005025c:	79ca      	ldrb	r2, [r1, #7]
1005025e:	2337      	movs	r3, #55	; 0x37
10050260:	435a      	muls	r2, r3
10050262:	1810      	adds	r0, r2, r0
10050264:	30ff      	adds	r0, #255	; 0xff
10050266:	301b      	adds	r0, #27
10050268:	7087      	strb	r7, [r0, #2]
1005026a:	70c4      	strb	r4, [r0, #3]
1005026c:	79c8      	ldrb	r0, [r1, #7]
1005026e:	682a      	ldr	r2, [r5, #0]
10050270:	00e1      	lsls	r1, r4, #3
10050272:	1889      	adds	r1, r1, r2
10050274:	0640      	lsls	r0, r0, #25
10050276:	222f      	movs	r2, #47	; 0x2f
10050278:	0e40      	lsrs	r0, r0, #25
1005027a:	0152      	lsls	r2, r2, #5
1005027c:	1889      	adds	r1, r1, r2
1005027e:	71c8      	strb	r0, [r1, #7]
10050280:	e000      	b.n	10050284 <LL_LE_Add_Device_To_White_List+0x5c>
10050282:	2607      	movs	r6, #7
10050284:	6828      	ldr	r0, [r5, #0]
10050286:	30e0      	adds	r0, #224	; 0xe0
10050288:	7447      	strb	r7, [r0, #17]
1005028a:	4630      	mov	r0, r6
1005028c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005028e:	0000      	.short	0x0000
10050290:	20000d64 	.word	0x20000d64
10050294:	0000046c 	.word	0x0000046c

10050298 <LL_LE_Clear_Resolving_List>:
10050298:	b570      	push	{r4, r5, r6, lr}
1005029a:	4c27      	ldr	r4, [pc, #156]	; (10050338 <LL_LE_Clear_Resolving_List+0xa0>)
1005029c:	2500      	movs	r5, #0
1005029e:	6820      	ldr	r0, [r4, #0]
100502a0:	2601      	movs	r6, #1
100502a2:	30e0      	adds	r0, #224	; 0xe0
100502a4:	7445      	strb	r5, [r0, #17]
100502a6:	7c00      	ldrb	r0, [r0, #16]
100502a8:	2801      	cmp	r0, #1
100502aa:	d103      	bne.n	100502b4 <LL_LE_Clear_Resolving_List+0x1c>
100502ac:	f001 fa10 	bl	100516d0 <scan_connection_or_advertiser>
100502b0:	2801      	cmp	r0, #1
100502b2:	d03c      	beq.n	1005032e <LL_LE_Clear_Resolving_List+0x96>
100502b4:	4b21      	ldr	r3, [pc, #132]	; (1005033c <LL_LE_Clear_Resolving_List+0xa4>)
100502b6:	6820      	ldr	r0, [r4, #0]
100502b8:	2278      	movs	r2, #120	; 0x78
100502ba:	21ff      	movs	r1, #255	; 0xff
100502bc:	18c0      	adds	r0, r0, r3
100502be:	f7f0 fa64 	bl	1004078a <Osal_MemSet>
100502c2:	4b1e      	ldr	r3, [pc, #120]	; (1005033c <LL_LE_Clear_Resolving_List+0xa4>)
100502c4:	6820      	ldr	r0, [r4, #0]
100502c6:	33f8      	adds	r3, #248	; 0xf8
100502c8:	2278      	movs	r2, #120	; 0x78
100502ca:	21ff      	movs	r1, #255	; 0xff
100502cc:	18c0      	adds	r0, r0, r3
100502ce:	f7f0 fa5c 	bl	1004078a <Osal_MemSet>
100502d2:	239d      	movs	r3, #157	; 0x9d
100502d4:	6820      	ldr	r0, [r4, #0]
100502d6:	00db      	lsls	r3, r3, #3
100502d8:	2278      	movs	r2, #120	; 0x78
100502da:	21ff      	movs	r1, #255	; 0xff
100502dc:	18c0      	adds	r0, r0, r3
100502de:	f7f0 fa54 	bl	1004078a <Osal_MemSet>
100502e2:	2123      	movs	r1, #35	; 0x23
100502e4:	6820      	ldr	r0, [r4, #0]
100502e6:	0149      	lsls	r1, r1, #5
100502e8:	1841      	adds	r1, r0, r1
100502ea:	720d      	strb	r5, [r1, #8]
100502ec:	2127      	movs	r1, #39	; 0x27
100502ee:	0149      	lsls	r1, r1, #5
100502f0:	1841      	adds	r1, r0, r1
100502f2:	710d      	strb	r5, [r1, #4]
100502f4:	212b      	movs	r1, #43	; 0x2b
100502f6:	0149      	lsls	r1, r1, #5
100502f8:	1841      	adds	r1, r0, r1
100502fa:	700d      	strb	r5, [r1, #0]
100502fc:	21f4      	movs	r1, #244	; 0xf4
100502fe:	580d      	ldr	r5, [r1, r0]
10050300:	30ff      	adds	r0, #255	; 0xff
10050302:	4a0f      	ldr	r2, [pc, #60]	; (10050340 <LL_LE_Clear_Resolving_List+0xa8>)
10050304:	2100      	movs	r1, #0
10050306:	301b      	adds	r0, #27
10050308:	f7f0 fa3f 	bl	1004078a <Osal_MemSet>
1005030c:	6820      	ldr	r0, [r4, #0]
1005030e:	21ff      	movs	r1, #255	; 0xff
10050310:	4602      	mov	r2, r0
10050312:	32e0      	adds	r2, #224	; 0xe0
10050314:	4613      	mov	r3, r2
10050316:	7491      	strb	r1, [r2, #18]
10050318:	2211      	movs	r2, #17
1005031a:	0192      	lsls	r2, r2, #6
1005031c:	1882      	adds	r2, r0, r2
1005031e:	7611      	strb	r1, [r2, #24]
10050320:	7651      	strb	r1, [r2, #25]
10050322:	7691      	strb	r1, [r2, #26]
10050324:	3080      	adds	r0, #128	; 0x80
10050326:	6745      	str	r5, [r0, #116]	; 0x74
10050328:	745e      	strb	r6, [r3, #17]
1005032a:	2000      	movs	r0, #0
1005032c:	bd70      	pop	{r4, r5, r6, pc}
1005032e:	6820      	ldr	r0, [r4, #0]
10050330:	30e0      	adds	r0, #224	; 0xe0
10050332:	7446      	strb	r6, [r0, #17]
10050334:	200c      	movs	r0, #12
10050336:	bd70      	pop	{r4, r5, r6, pc}
10050338:	20000d64 	.word	0x20000d64
1005033c:	0000046c 	.word	0x0000046c
10050340:	00000339 	.word	0x00000339

10050344 <LL_LE_Clear_White_List>:
10050344:	b510      	push	{r4, lr}
10050346:	4c08      	ldr	r4, [pc, #32]	; (10050368 <LL_LE_Clear_White_List+0x24>)
10050348:	232f      	movs	r3, #47	; 0x2f
1005034a:	6820      	ldr	r0, [r4, #0]
1005034c:	015b      	lsls	r3, r3, #5
1005034e:	22f8      	movs	r2, #248	; 0xf8
10050350:	21ff      	movs	r1, #255	; 0xff
10050352:	18c0      	adds	r0, r0, r3
10050354:	f7f0 fa19 	bl	1004078a <Osal_MemSet>
10050358:	2217      	movs	r2, #23
1005035a:	6821      	ldr	r1, [r4, #0]
1005035c:	2000      	movs	r0, #0
1005035e:	0192      	lsls	r2, r2, #6
10050360:	1889      	adds	r1, r1, r2
10050362:	7708      	strb	r0, [r1, #28]
10050364:	bd10      	pop	{r4, pc}
10050366:	0000      	.short	0x0000
10050368:	20000d64 	.word	0x20000d64

1005036c <LL_LE_Read_Resolvable_Address>:
1005036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005036e:	4d14      	ldr	r5, [pc, #80]	; (100503c0 <LL_LE_Read_Resolvable_Address+0x54>)
10050370:	4606      	mov	r6, r0
10050372:	6828      	ldr	r0, [r5, #0]
10050374:	4617      	mov	r7, r2
10050376:	2200      	movs	r2, #0
10050378:	30e0      	adds	r0, #224	; 0xe0
1005037a:	7442      	strb	r2, [r0, #17]
1005037c:	4610      	mov	r0, r2
1005037e:	f000 fa5f 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
10050382:	4604      	mov	r4, r0
10050384:	28ff      	cmp	r0, #255	; 0xff
10050386:	d011      	beq.n	100503ac <LL_LE_Read_Resolvable_Address+0x40>
10050388:	6829      	ldr	r1, [r5, #0]
1005038a:	00e0      	lsls	r0, r4, #3
1005038c:	4a0d      	ldr	r2, [pc, #52]	; (100503c4 <LL_LE_Read_Resolvable_Address+0x58>)
1005038e:	1840      	adds	r0, r0, r1
10050390:	1880      	adds	r0, r0, r2
10050392:	79c0      	ldrb	r0, [r0, #7]
10050394:	2237      	movs	r2, #55	; 0x37
10050396:	4350      	muls	r0, r2
10050398:	1841      	adds	r1, r0, r1
1005039a:	31ff      	adds	r1, #255	; 0xff
1005039c:	311b      	adds	r1, #27
1005039e:	2e01      	cmp	r6, #1
100503a0:	d00a      	beq.n	100503b8 <LL_LE_Read_Resolvable_Address+0x4c>
100503a2:	2206      	movs	r2, #6
100503a4:	4638      	mov	r0, r7
100503a6:	312d      	adds	r1, #45	; 0x2d
100503a8:	f7f0 f9eb 	bl	10040782 <Osal_MemCpy>
100503ac:	6828      	ldr	r0, [r5, #0]
100503ae:	2101      	movs	r1, #1
100503b0:	30e0      	adds	r0, #224	; 0xe0
100503b2:	7441      	strb	r1, [r0, #17]
100503b4:	4620      	mov	r0, r4
100503b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100503b8:	2206      	movs	r2, #6
100503ba:	4638      	mov	r0, r7
100503bc:	3126      	adds	r1, #38	; 0x26
100503be:	e7f3      	b.n	100503a8 <LL_LE_Read_Resolvable_Address+0x3c>
100503c0:	20000d64 	.word	0x20000d64
100503c4:	0000046c 	.word	0x0000046c

100503c8 <LL_LE_Read_Resolving_List_Size>:
100503c8:	200f      	movs	r0, #15
100503ca:	4770      	bx	lr

100503cc <LL_LE_Read_White_List_Size>:
100503cc:	201f      	movs	r0, #31
100503ce:	4770      	bx	lr

100503d0 <LL_LE_Remove_Device_From_Resolving_List>:
100503d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100503d2:	4c20      	ldr	r4, [pc, #128]	; (10050454 <LL_LE_Remove_Device_From_Resolving_List+0x84>)
100503d4:	4605      	mov	r5, r0
100503d6:	6820      	ldr	r0, [r4, #0]
100503d8:	30e0      	adds	r0, #224	; 0xe0
100503da:	7c00      	ldrb	r0, [r0, #16]
100503dc:	2801      	cmp	r0, #1
100503de:	d103      	bne.n	100503e8 <LL_LE_Remove_Device_From_Resolving_List+0x18>
100503e0:	f001 f976 	bl	100516d0 <scan_connection_or_advertiser>
100503e4:	2801      	cmp	r0, #1
100503e6:	d02c      	beq.n	10050442 <LL_LE_Remove_Device_From_Resolving_List+0x72>
100503e8:	6820      	ldr	r0, [r4, #0]
100503ea:	2700      	movs	r7, #0
100503ec:	30e0      	adds	r0, #224	; 0xe0
100503ee:	7447      	strb	r7, [r0, #17]
100503f0:	4629      	mov	r1, r5
100503f2:	4638      	mov	r0, r7
100503f4:	f000 fa24 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
100503f8:	4606      	mov	r6, r0
100503fa:	6821      	ldr	r1, [r4, #0]
100503fc:	00c0      	lsls	r0, r0, #3
100503fe:	4a16      	ldr	r2, [pc, #88]	; (10050458 <LL_LE_Remove_Device_From_Resolving_List+0x88>)
10050400:	1840      	adds	r0, r0, r1
10050402:	1880      	adds	r0, r0, r2
10050404:	79c0      	ldrb	r0, [r0, #7]
10050406:	2237      	movs	r2, #55	; 0x37
10050408:	4350      	muls	r0, r2
1005040a:	1845      	adds	r5, r0, r1
1005040c:	35ff      	adds	r5, #255	; 0xff
1005040e:	351b      	adds	r5, #27
10050410:	2eff      	cmp	r6, #255	; 0xff
10050412:	d018      	beq.n	10050446 <LL_LE_Remove_Device_From_Resolving_List+0x76>
10050414:	2035      	movs	r0, #53	; 0x35
10050416:	5547      	strb	r7, [r0, r5]
10050418:	7869      	ldrb	r1, [r5, #1]
1005041a:	2001      	movs	r0, #1
1005041c:	f000 f964 	bl	100506e8 <PRIVWHIT_u8RemoveAddrInList>
10050420:	4631      	mov	r1, r6
10050422:	2000      	movs	r0, #0
10050424:	f000 f960 	bl	100506e8 <PRIVWHIT_u8RemoveAddrInList>
10050428:	78e8      	ldrb	r0, [r5, #3]
1005042a:	28ff      	cmp	r0, #255	; 0xff
1005042c:	d007      	beq.n	1005043e <LL_LE_Remove_Device_From_Resolving_List+0x6e>
1005042e:	6821      	ldr	r1, [r4, #0]
10050430:	00c0      	lsls	r0, r0, #3
10050432:	1840      	adds	r0, r0, r1
10050434:	212f      	movs	r1, #47	; 0x2f
10050436:	0149      	lsls	r1, r1, #5
10050438:	1840      	adds	r0, r0, r1
1005043a:	217f      	movs	r1, #127	; 0x7f
1005043c:	71c1      	strb	r1, [r0, #7]
1005043e:	2000      	movs	r0, #0
10050440:	e002      	b.n	10050448 <LL_LE_Remove_Device_From_Resolving_List+0x78>
10050442:	200c      	movs	r0, #12
10050444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050446:	2002      	movs	r0, #2
10050448:	6821      	ldr	r1, [r4, #0]
1005044a:	2201      	movs	r2, #1
1005044c:	31e0      	adds	r1, #224	; 0xe0
1005044e:	744a      	strb	r2, [r1, #17]
10050450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050452:	0000      	.short	0x0000
10050454:	20000d64 	.word	0x20000d64
10050458:	0000046c 	.word	0x0000046c

1005045c <LL_LE_Remove_Device_From_White_List>:
1005045c:	b570      	push	{r4, r5, r6, lr}
1005045e:	4c14      	ldr	r4, [pc, #80]	; (100504b0 <LL_LE_Remove_Device_From_White_List+0x54>)
10050460:	2600      	movs	r6, #0
10050462:	6821      	ldr	r1, [r4, #0]
10050464:	31e0      	adds	r1, #224	; 0xe0
10050466:	744e      	strb	r6, [r1, #17]
10050468:	4601      	mov	r1, r0
1005046a:	2003      	movs	r0, #3
1005046c:	f000 f9e8 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
10050470:	4601      	mov	r1, r0
10050472:	28ff      	cmp	r0, #255	; 0xff
10050474:	d015      	beq.n	100504a2 <LL_LE_Remove_Device_From_White_List+0x46>
10050476:	6822      	ldr	r2, [r4, #0]
10050478:	00c8      	lsls	r0, r1, #3
1005047a:	232f      	movs	r3, #47	; 0x2f
1005047c:	1880      	adds	r0, r0, r2
1005047e:	015b      	lsls	r3, r3, #5
10050480:	18c0      	adds	r0, r0, r3
10050482:	79c0      	ldrb	r0, [r0, #7]
10050484:	2500      	movs	r5, #0
10050486:	287f      	cmp	r0, #127	; 0x7f
10050488:	d007      	beq.n	1005049a <LL_LE_Remove_Device_From_White_List+0x3e>
1005048a:	2337      	movs	r3, #55	; 0x37
1005048c:	4358      	muls	r0, r3
1005048e:	1880      	adds	r0, r0, r2
10050490:	30ff      	adds	r0, #255	; 0xff
10050492:	301b      	adds	r0, #27
10050494:	7086      	strb	r6, [r0, #2]
10050496:	22ff      	movs	r2, #255	; 0xff
10050498:	70c2      	strb	r2, [r0, #3]
1005049a:	2003      	movs	r0, #3
1005049c:	f000 f924 	bl	100506e8 <PRIVWHIT_u8RemoveAddrInList>
100504a0:	e000      	b.n	100504a4 <LL_LE_Remove_Device_From_White_List+0x48>
100504a2:	2502      	movs	r5, #2
100504a4:	6820      	ldr	r0, [r4, #0]
100504a6:	2101      	movs	r1, #1
100504a8:	30e0      	adds	r0, #224	; 0xe0
100504aa:	7441      	strb	r1, [r0, #17]
100504ac:	4628      	mov	r0, r5
100504ae:	bd70      	pop	{r4, r5, r6, pc}
100504b0:	20000d64 	.word	0x20000d64

100504b4 <LL_LE_Set_Address_Resolution_Enable>:
100504b4:	b510      	push	{r4, lr}
100504b6:	4604      	mov	r4, r0
100504b8:	f001 f90a 	bl	100516d0 <scan_connection_or_advertiser>
100504bc:	2800      	cmp	r0, #0
100504be:	d001      	beq.n	100504c4 <LL_LE_Set_Address_Resolution_Enable+0x10>
100504c0:	200c      	movs	r0, #12
100504c2:	bd10      	pop	{r4, pc}
100504c4:	4802      	ldr	r0, [pc, #8]	; (100504d0 <LL_LE_Set_Address_Resolution_Enable+0x1c>)
100504c6:	6800      	ldr	r0, [r0, #0]
100504c8:	30e0      	adds	r0, #224	; 0xe0
100504ca:	7404      	strb	r4, [r0, #16]
100504cc:	2000      	movs	r0, #0
100504ce:	bd10      	pop	{r4, pc}
100504d0:	20000d64 	.word	0x20000d64

100504d4 <LL_LE_Set_Resolvable_Private_Address_Timeout>:
100504d4:	b510      	push	{r4, lr}
100504d6:	2164      	movs	r1, #100	; 0x64
100504d8:	4c06      	ldr	r4, [pc, #24]	; (100504f4 <LL_LE_Set_Resolvable_Private_Address_Timeout+0x20>)
100504da:	4348      	muls	r0, r1
100504dc:	6821      	ldr	r1, [r4, #0]
100504de:	3180      	adds	r1, #128	; 0x80
100504e0:	6748      	str	r0, [r1, #116]	; 0x74
100504e2:	f7fd f8ef 	bl	1004d6c4 <HAL_VTimerGetCurrentTime_sysT32>
100504e6:	6821      	ldr	r1, [r4, #0]
100504e8:	3180      	adds	r1, #128	; 0x80
100504ea:	6788      	str	r0, [r1, #120]	; 0x78
100504ec:	2000      	movs	r0, #0
100504ee:	67c8      	str	r0, [r1, #124]	; 0x7c
100504f0:	bd10      	pop	{r4, pc}
100504f2:	0000      	.short	0x0000
100504f4:	20000d64 	.word	0x20000d64

100504f8 <PRIVWHIT_u8AddAddrInList>:
100504f8:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
100504fa:	4607      	mov	r7, r0
100504fc:	4875      	ldr	r0, [pc, #468]	; (100506d4 <PRIVWHIT_u8AddAddrInList+0x1dc>)
100504fe:	220f      	movs	r2, #15
10050500:	6800      	ldr	r0, [r0, #0]
10050502:	b083      	sub	sp, #12
10050504:	2f00      	cmp	r7, #0
10050506:	d00e      	beq.n	10050526 <PRIVWHIT_u8AddAddrInList+0x2e>
10050508:	2f01      	cmp	r7, #1
1005050a:	d012      	beq.n	10050532 <PRIVWHIT_u8AddAddrInList+0x3a>
1005050c:	2f02      	cmp	r7, #2
1005050e:	d014      	beq.n	1005053a <PRIVWHIT_u8AddAddrInList+0x42>
10050510:	212f      	movs	r1, #47	; 0x2f
10050512:	0149      	lsls	r1, r1, #5
10050514:	1841      	adds	r1, r0, r1
10050516:	9101      	str	r1, [sp, #4]
10050518:	2f03      	cmp	r7, #3
1005051a:	d010      	beq.n	1005053e <PRIVWHIT_u8AddAddrInList+0x46>
1005051c:	2f01      	cmp	r7, #1
1005051e:	d011      	beq.n	10050544 <PRIVWHIT_u8AddAddrInList+0x4c>
10050520:	2f02      	cmp	r7, #2
10050522:	d10d      	bne.n	10050540 <PRIVWHIT_u8AddAddrInList+0x48>
10050524:	e010      	b.n	10050548 <PRIVWHIT_u8AddAddrInList+0x50>
10050526:	496c      	ldr	r1, [pc, #432]	; (100506d8 <PRIVWHIT_u8AddAddrInList+0x1e0>)
10050528:	1841      	adds	r1, r0, r1
1005052a:	9101      	str	r1, [sp, #4]
1005052c:	218d      	movs	r1, #141	; 0x8d
1005052e:	00c9      	lsls	r1, r1, #3
10050530:	e00c      	b.n	1005054c <PRIVWHIT_u8AddAddrInList+0x54>
10050532:	219d      	movs	r1, #157	; 0x9d
10050534:	00c9      	lsls	r1, r1, #3
10050536:	1841      	adds	r1, r0, r1
10050538:	e7ed      	b.n	10050516 <PRIVWHIT_u8AddAddrInList+0x1e>
1005053a:	4968      	ldr	r1, [pc, #416]	; (100506dc <PRIVWHIT_u8AddAddrInList+0x1e4>)
1005053c:	e7ea      	b.n	10050514 <PRIVWHIT_u8AddAddrInList+0x1c>
1005053e:	221f      	movs	r2, #31
10050540:	4967      	ldr	r1, [pc, #412]	; (100506e0 <PRIVWHIT_u8AddAddrInList+0x1e8>)
10050542:	e003      	b.n	1005054c <PRIVWHIT_u8AddAddrInList+0x54>
10050544:	4967      	ldr	r1, [pc, #412]	; (100506e4 <PRIVWHIT_u8AddAddrInList+0x1ec>)
10050546:	e001      	b.n	1005054c <PRIVWHIT_u8AddAddrInList+0x54>
10050548:	212b      	movs	r1, #43	; 0x2b
1005054a:	0149      	lsls	r1, r1, #5
1005054c:	1840      	adds	r0, r0, r1
1005054e:	9000      	str	r0, [sp, #0]
10050550:	7804      	ldrb	r4, [r0, #0]
10050552:	4294      	cmp	r4, r2
10050554:	d103      	bne.n	1005055e <PRIVWHIT_u8AddAddrInList+0x66>
10050556:	2f00      	cmp	r7, #0
10050558:	d011      	beq.n	1005057e <PRIVWHIT_u8AddAddrInList+0x86>
1005055a:	2f03      	cmp	r7, #3
1005055c:	d00f      	beq.n	1005057e <PRIVWHIT_u8AddAddrInList+0x86>
1005055e:	4294      	cmp	r4, r2
10050560:	d101      	bne.n	10050566 <PRIVWHIT_u8AddAddrInList+0x6e>
10050562:	2f02      	cmp	r7, #2
10050564:	d00d      	beq.n	10050582 <PRIVWHIT_u8AddAddrInList+0x8a>
10050566:	2500      	movs	r5, #0
10050568:	4638      	mov	r0, r7
1005056a:	9904      	ldr	r1, [sp, #16]
1005056c:	f000 f968 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
10050570:	9002      	str	r0, [sp, #8]
10050572:	28ff      	cmp	r0, #255	; 0xff
10050574:	d007      	beq.n	10050586 <PRIVWHIT_u8AddAddrInList+0x8e>
10050576:	25fe      	movs	r5, #254	; 0xfe
10050578:	2f00      	cmp	r7, #0
1005057a:	d07d      	beq.n	10050678 <PRIVWHIT_u8AddAddrInList+0x180>
1005057c:	e0a6      	b.n	100506cc <PRIVWHIT_u8AddAddrInList+0x1d4>
1005057e:	25ff      	movs	r5, #255	; 0xff
10050580:	e0a4      	b.n	100506cc <PRIVWHIT_u8AddAddrInList+0x1d4>
10050582:	25fc      	movs	r5, #252	; 0xfc
10050584:	e7f0      	b.n	10050568 <PRIVWHIT_u8AddAddrInList+0x70>
10050586:	2dfe      	cmp	r5, #254	; 0xfe
10050588:	d077      	beq.n	1005067a <PRIVWHIT_u8AddAddrInList+0x182>
1005058a:	2f02      	cmp	r7, #2
1005058c:	d110      	bne.n	100505b0 <PRIVWHIT_u8AddAddrInList+0xb8>
1005058e:	2dfc      	cmp	r5, #252	; 0xfc
10050590:	d10e      	bne.n	100505b0 <PRIVWHIT_u8AddAddrInList+0xb8>
10050592:	4850      	ldr	r0, [pc, #320]	; (100506d4 <PRIVWHIT_u8AddAddrInList+0x1dc>)
10050594:	9a01      	ldr	r2, [sp, #4]
10050596:	6800      	ldr	r0, [r0, #0]
10050598:	30ff      	adds	r0, #255	; 0xff
1005059a:	3001      	adds	r0, #1
1005059c:	7e41      	ldrb	r1, [r0, #25]
1005059e:	00cb      	lsls	r3, r1, #3
100505a0:	189a      	adds	r2, r3, r2
100505a2:	79d2      	ldrb	r2, [r2, #7]
100505a4:	7642      	strb	r2, [r0, #25]
100505a6:	2002      	movs	r0, #2
100505a8:	f000 f89e 	bl	100506e8 <PRIVWHIT_u8RemoveAddrInList>
100505ac:	1e64      	subs	r4, r4, #1
100505ae:	b2e4      	uxtb	r4, r4
100505b0:	2c00      	cmp	r4, #0
100505b2:	d039      	beq.n	10050628 <PRIVWHIT_u8AddAddrInList+0x130>
100505b4:	9801      	ldr	r0, [sp, #4]
100505b6:	00e1      	lsls	r1, r4, #3
100505b8:	180d      	adds	r5, r1, r0
100505ba:	462e      	mov	r6, r5
100505bc:	3e08      	subs	r6, #8
100505be:	9904      	ldr	r1, [sp, #16]
100505c0:	2007      	movs	r0, #7
100505c2:	1e40      	subs	r0, r0, #1
100505c4:	5c0b      	ldrb	r3, [r1, r0]
100505c6:	5c32      	ldrb	r2, [r6, r0]
100505c8:	1a9a      	subs	r2, r3, r2
100505ca:	d00b      	beq.n	100505e4 <PRIVWHIT_u8AddAddrInList+0xec>
100505cc:	2a00      	cmp	r2, #0
100505ce:	dd0b      	ble.n	100505e8 <PRIVWHIT_u8AddAddrInList+0xf0>
100505d0:	9801      	ldr	r0, [sp, #4]
100505d2:	00e1      	lsls	r1, r4, #3
100505d4:	1808      	adds	r0, r1, r0
100505d6:	2207      	movs	r2, #7
100505d8:	9904      	ldr	r1, [sp, #16]
100505da:	f7f0 f8d2 	bl	10040782 <Osal_MemCpy>
100505de:	1e25      	subs	r5, r4, #0
100505e0:	d022      	beq.n	10050628 <PRIVWHIT_u8AddAddrInList+0x130>
100505e2:	e027      	b.n	10050634 <PRIVWHIT_u8AddAddrInList+0x13c>
100505e4:	2800      	cmp	r0, #0
100505e6:	d1ec      	bne.n	100505c2 <PRIVWHIT_u8AddAddrInList+0xca>
100505e8:	4628      	mov	r0, r5
100505ea:	2207      	movs	r2, #7
100505ec:	4631      	mov	r1, r6
100505ee:	f7f0 f8c8 	bl	10040782 <Osal_MemCpy>
100505f2:	79f0      	ldrb	r0, [r6, #7]
100505f4:	71e8      	strb	r0, [r5, #7]
100505f6:	2f02      	cmp	r7, #2
100505f8:	d012      	beq.n	10050620 <PRIVWHIT_u8AddAddrInList+0x128>
100505fa:	79f0      	ldrb	r0, [r6, #7]
100505fc:	43c1      	mvns	r1, r0
100505fe:	0649      	lsls	r1, r1, #25
10050600:	d00e      	beq.n	10050620 <PRIVWHIT_u8AddAddrInList+0x128>
10050602:	2137      	movs	r1, #55	; 0x37
10050604:	4348      	muls	r0, r1
10050606:	4933      	ldr	r1, [pc, #204]	; (100506d4 <PRIVWHIT_u8AddAddrInList+0x1dc>)
10050608:	6809      	ldr	r1, [r1, #0]
1005060a:	1840      	adds	r0, r0, r1
1005060c:	30ff      	adds	r0, #255	; 0xff
1005060e:	301b      	adds	r0, #27
10050610:	2f00      	cmp	r7, #0
10050612:	d002      	beq.n	1005061a <PRIVWHIT_u8AddAddrInList+0x122>
10050614:	2f01      	cmp	r7, #1
10050616:	d017      	beq.n	10050648 <PRIVWHIT_u8AddAddrInList+0x150>
10050618:	1cc0      	adds	r0, r0, #3
1005061a:	7801      	ldrb	r1, [r0, #0]
1005061c:	1c49      	adds	r1, r1, #1
1005061e:	7001      	strb	r1, [r0, #0]
10050620:	1e64      	subs	r4, r4, #1
10050622:	0624      	lsls	r4, r4, #24
10050624:	0e24      	lsrs	r4, r4, #24
10050626:	d1c5      	bne.n	100505b4 <PRIVWHIT_u8AddAddrInList+0xbc>
10050628:	2207      	movs	r2, #7
1005062a:	9904      	ldr	r1, [sp, #16]
1005062c:	9801      	ldr	r0, [sp, #4]
1005062e:	f7f0 f8a8 	bl	10040782 <Osal_MemCpy>
10050632:	2500      	movs	r5, #0
10050634:	9800      	ldr	r0, [sp, #0]
10050636:	2f02      	cmp	r7, #2
10050638:	7800      	ldrb	r0, [r0, #0]
1005063a:	d007      	beq.n	1005064c <PRIVWHIT_u8AddAddrInList+0x154>
1005063c:	1c40      	adds	r0, r0, #1
1005063e:	9900      	ldr	r1, [sp, #0]
10050640:	2f00      	cmp	r7, #0
10050642:	7008      	strb	r0, [r1, #0]
10050644:	d03d      	beq.n	100506c2 <PRIVWHIT_u8AddAddrInList+0x1ca>
10050646:	e041      	b.n	100506cc <PRIVWHIT_u8AddAddrInList+0x1d4>
10050648:	1c40      	adds	r0, r0, #1
1005064a:	e7e6      	b.n	1005061a <PRIVWHIT_u8AddAddrInList+0x122>
1005064c:	2800      	cmp	r0, #0
1005064e:	d022      	beq.n	10050696 <PRIVWHIT_u8AddAddrInList+0x19e>
10050650:	9901      	ldr	r1, [sp, #4]
10050652:	00c2      	lsls	r2, r0, #3
10050654:	1851      	adds	r1, r2, r1
10050656:	1dc9      	adds	r1, r1, #7
10050658:	780a      	ldrb	r2, [r1, #0]
1005065a:	1c52      	adds	r2, r2, #1
1005065c:	b2d2      	uxtb	r2, r2
1005065e:	42a2      	cmp	r2, r4
10050660:	d900      	bls.n	10050664 <PRIVWHIT_u8AddAddrInList+0x16c>
10050662:	700a      	strb	r2, [r1, #0]
10050664:	1e40      	subs	r0, r0, #1
10050666:	3908      	subs	r1, #8
10050668:	2800      	cmp	r0, #0
1005066a:	d1f5      	bne.n	10050658 <PRIVWHIT_u8AddAddrInList+0x160>
1005066c:	9800      	ldr	r0, [sp, #0]
1005066e:	7800      	ldrb	r0, [r0, #0]
10050670:	2800      	cmp	r0, #0
10050672:	d010      	beq.n	10050696 <PRIVWHIT_u8AddAddrInList+0x19e>
10050674:	4817      	ldr	r0, [pc, #92]	; (100506d4 <PRIVWHIT_u8AddAddrInList+0x1dc>)
10050676:	e001      	b.n	1005067c <PRIVWHIT_u8AddAddrInList+0x184>
10050678:	e025      	b.n	100506c6 <PRIVWHIT_u8AddAddrInList+0x1ce>
1005067a:	e01f      	b.n	100506bc <PRIVWHIT_u8AddAddrInList+0x1c4>
1005067c:	6800      	ldr	r0, [r0, #0]
1005067e:	30ff      	adds	r0, #255	; 0xff
10050680:	3001      	adds	r0, #1
10050682:	7e41      	ldrb	r1, [r0, #25]
10050684:	42a1      	cmp	r1, r4
10050686:	d301      	bcc.n	1005068c <PRIVWHIT_u8AddAddrInList+0x194>
10050688:	1c49      	adds	r1, r1, #1
1005068a:	7641      	strb	r1, [r0, #25]
1005068c:	7e01      	ldrb	r1, [r0, #24]
1005068e:	42a1      	cmp	r1, r4
10050690:	d301      	bcc.n	10050696 <PRIVWHIT_u8AddAddrInList+0x19e>
10050692:	1c49      	adds	r1, r1, #1
10050694:	7601      	strb	r1, [r0, #24]
10050696:	480f      	ldr	r0, [pc, #60]	; (100506d4 <PRIVWHIT_u8AddAddrInList+0x1dc>)
10050698:	6801      	ldr	r1, [r0, #0]
1005069a:	31ff      	adds	r1, #255	; 0xff
1005069c:	3101      	adds	r1, #1
1005069e:	7e09      	ldrb	r1, [r1, #24]
100506a0:	00ca      	lsls	r2, r1, #3
100506a2:	9901      	ldr	r1, [sp, #4]
100506a4:	1851      	adds	r1, r2, r1
100506a6:	71cc      	strb	r4, [r1, #7]
100506a8:	6800      	ldr	r0, [r0, #0]
100506aa:	30ff      	adds	r0, #255	; 0xff
100506ac:	3001      	adds	r0, #1
100506ae:	7604      	strb	r4, [r0, #24]
100506b0:	9800      	ldr	r0, [sp, #0]
100506b2:	9900      	ldr	r1, [sp, #0]
100506b4:	7800      	ldrb	r0, [r0, #0]
100506b6:	1c40      	adds	r0, r0, #1
100506b8:	7008      	strb	r0, [r1, #0]
100506ba:	e007      	b.n	100506cc <PRIVWHIT_u8AddAddrInList+0x1d4>
100506bc:	2f00      	cmp	r7, #0
100506be:	d002      	beq.n	100506c6 <PRIVWHIT_u8AddAddrInList+0x1ce>
100506c0:	e004      	b.n	100506cc <PRIVWHIT_u8AddAddrInList+0x1d4>
100506c2:	2dfe      	cmp	r5, #254	; 0xfe
100506c4:	d102      	bne.n	100506cc <PRIVWHIT_u8AddAddrInList+0x1d4>
100506c6:	9d02      	ldr	r5, [sp, #8]
100506c8:	2080      	movs	r0, #128	; 0x80
100506ca:	4305      	orrs	r5, r0
100506cc:	4628      	mov	r0, r5
100506ce:	b005      	add	sp, #20
100506d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100506d2:	0000      	.short	0x0000
100506d4:	20000d64 	.word	0x20000d64
100506d8:	0000046c 	.word	0x0000046c
100506dc:	00000564 	.word	0x00000564
100506e0:	000005dc 	.word	0x000005dc
100506e4:	000004e4 	.word	0x000004e4

100506e8 <PRIVWHIT_u8RemoveAddrInList>:
100506e8:	b5f0      	push	{r4, r5, r6, r7, lr}
100506ea:	0004      	movs	r4, r0
100506ec:	4844      	ldr	r0, [pc, #272]	; (10050800 <PRIVWHIT_u8RemoveAddrInList+0x118>)
100506ee:	b083      	sub	sp, #12
100506f0:	6800      	ldr	r0, [r0, #0]
100506f2:	460e      	mov	r6, r1
100506f4:	d00a      	beq.n	1005070c <PRIVWHIT_u8RemoveAddrInList+0x24>
100506f6:	2c01      	cmp	r4, #1
100506f8:	d04c      	beq.n	10050794 <PRIVWHIT_u8RemoveAddrInList+0xac>
100506fa:	2c02      	cmp	r4, #2
100506fc:	d04e      	beq.n	1005079c <PRIVWHIT_u8RemoveAddrInList+0xb4>
100506fe:	212f      	movs	r1, #47	; 0x2f
10050700:	0149      	lsls	r1, r1, #5
10050702:	1840      	adds	r0, r0, r1
10050704:	9000      	str	r0, [sp, #0]
10050706:	2c03      	cmp	r4, #3
10050708:	d04a      	beq.n	100507a0 <PRIVWHIT_u8RemoveAddrInList+0xb8>
1005070a:	e002      	b.n	10050712 <PRIVWHIT_u8RemoveAddrInList+0x2a>
1005070c:	493d      	ldr	r1, [pc, #244]	; (10050804 <PRIVWHIT_u8RemoveAddrInList+0x11c>)
1005070e:	1840      	adds	r0, r0, r1
10050710:	9000      	str	r0, [sp, #0]
10050712:	200f      	movs	r0, #15
10050714:	2eff      	cmp	r6, #255	; 0xff
10050716:	d053      	beq.n	100507c0 <PRIVWHIT_u8RemoveAddrInList+0xd8>
10050718:	1e40      	subs	r0, r0, #1
1005071a:	b2c0      	uxtb	r0, r0
1005071c:	4635      	mov	r5, r6
1005071e:	9001      	str	r0, [sp, #4]
10050720:	4286      	cmp	r6, r0
10050722:	d223      	bcs.n	1005076c <PRIVWHIT_u8RemoveAddrInList+0x84>
10050724:	9900      	ldr	r1, [sp, #0]
10050726:	00e8      	lsls	r0, r5, #3
10050728:	1847      	adds	r7, r0, r1
1005072a:	4639      	mov	r1, r7
1005072c:	3108      	adds	r1, #8
1005072e:	2207      	movs	r2, #7
10050730:	4638      	mov	r0, r7
10050732:	f7f0 f826 	bl	10040782 <Osal_MemCpy>
10050736:	7bf9      	ldrb	r1, [r7, #15]
10050738:	71f9      	strb	r1, [r7, #7]
1005073a:	2c02      	cmp	r4, #2
1005073c:	d011      	beq.n	10050762 <PRIVWHIT_u8RemoveAddrInList+0x7a>
1005073e:	43c8      	mvns	r0, r1
10050740:	0640      	lsls	r0, r0, #25
10050742:	d00e      	beq.n	10050762 <PRIVWHIT_u8RemoveAddrInList+0x7a>
10050744:	2037      	movs	r0, #55	; 0x37
10050746:	4341      	muls	r1, r0
10050748:	482d      	ldr	r0, [pc, #180]	; (10050800 <PRIVWHIT_u8RemoveAddrInList+0x118>)
1005074a:	6800      	ldr	r0, [r0, #0]
1005074c:	1808      	adds	r0, r1, r0
1005074e:	30ff      	adds	r0, #255	; 0xff
10050750:	301b      	adds	r0, #27
10050752:	2c00      	cmp	r4, #0
10050754:	d002      	beq.n	1005075c <PRIVWHIT_u8RemoveAddrInList+0x74>
10050756:	2c01      	cmp	r4, #1
10050758:	d024      	beq.n	100507a4 <PRIVWHIT_u8RemoveAddrInList+0xbc>
1005075a:	1cc0      	adds	r0, r0, #3
1005075c:	7801      	ldrb	r1, [r0, #0]
1005075e:	1e49      	subs	r1, r1, #1
10050760:	7001      	strb	r1, [r0, #0]
10050762:	1c6d      	adds	r5, r5, #1
10050764:	9801      	ldr	r0, [sp, #4]
10050766:	b2ed      	uxtb	r5, r5
10050768:	4285      	cmp	r5, r0
1005076a:	d3db      	bcc.n	10050724 <PRIVWHIT_u8RemoveAddrInList+0x3c>
1005076c:	00c1      	lsls	r1, r0, #3
1005076e:	9800      	ldr	r0, [sp, #0]
10050770:	2207      	movs	r2, #7
10050772:	180d      	adds	r5, r1, r0
10050774:	21ff      	movs	r1, #255	; 0xff
10050776:	4628      	mov	r0, r5
10050778:	f7f0 f807 	bl	1004078a <Osal_MemSet>
1005077c:	20ff      	movs	r0, #255	; 0xff
1005077e:	71e8      	strb	r0, [r5, #7]
10050780:	2c00      	cmp	r4, #0
10050782:	d011      	beq.n	100507a8 <PRIVWHIT_u8RemoveAddrInList+0xc0>
10050784:	2c01      	cmp	r4, #1
10050786:	d014      	beq.n	100507b2 <PRIVWHIT_u8RemoveAddrInList+0xca>
10050788:	481d      	ldr	r0, [pc, #116]	; (10050800 <PRIVWHIT_u8RemoveAddrInList+0x118>)
1005078a:	2c02      	cmp	r4, #2
1005078c:	6800      	ldr	r0, [r0, #0]
1005078e:	d034      	beq.n	100507fa <PRIVWHIT_u8RemoveAddrInList+0x112>
10050790:	491d      	ldr	r1, [pc, #116]	; (10050808 <PRIVWHIT_u8RemoveAddrInList+0x120>)
10050792:	e011      	b.n	100507b8 <PRIVWHIT_u8RemoveAddrInList+0xd0>
10050794:	219d      	movs	r1, #157	; 0x9d
10050796:	00c9      	lsls	r1, r1, #3
10050798:	1840      	adds	r0, r0, r1
1005079a:	e7b3      	b.n	10050704 <PRIVWHIT_u8RemoveAddrInList+0x1c>
1005079c:	491b      	ldr	r1, [pc, #108]	; (1005080c <PRIVWHIT_u8RemoveAddrInList+0x124>)
1005079e:	e7b0      	b.n	10050702 <PRIVWHIT_u8RemoveAddrInList+0x1a>
100507a0:	201f      	movs	r0, #31
100507a2:	e7b7      	b.n	10050714 <PRIVWHIT_u8RemoveAddrInList+0x2c>
100507a4:	1c40      	adds	r0, r0, #1
100507a6:	e7d9      	b.n	1005075c <PRIVWHIT_u8RemoveAddrInList+0x74>
100507a8:	4815      	ldr	r0, [pc, #84]	; (10050800 <PRIVWHIT_u8RemoveAddrInList+0x118>)
100507aa:	218d      	movs	r1, #141	; 0x8d
100507ac:	6800      	ldr	r0, [r0, #0]
100507ae:	00c9      	lsls	r1, r1, #3
100507b0:	e002      	b.n	100507b8 <PRIVWHIT_u8RemoveAddrInList+0xd0>
100507b2:	4813      	ldr	r0, [pc, #76]	; (10050800 <PRIVWHIT_u8RemoveAddrInList+0x118>)
100507b4:	4916      	ldr	r1, [pc, #88]	; (10050810 <PRIVWHIT_u8RemoveAddrInList+0x128>)
100507b6:	6800      	ldr	r0, [r0, #0]
100507b8:	1840      	adds	r0, r0, r1
100507ba:	7801      	ldrb	r1, [r0, #0]
100507bc:	1e49      	subs	r1, r1, #1
100507be:	7001      	strb	r1, [r0, #0]
100507c0:	2c02      	cmp	r4, #2
100507c2:	d118      	bne.n	100507f6 <PRIVWHIT_u8RemoveAddrInList+0x10e>
100507c4:	480e      	ldr	r0, [pc, #56]	; (10050800 <PRIVWHIT_u8RemoveAddrInList+0x118>)
100507c6:	6800      	ldr	r0, [r0, #0]
100507c8:	30ff      	adds	r0, #255	; 0xff
100507ca:	3001      	adds	r0, #1
100507cc:	7e41      	ldrb	r1, [r0, #25]
100507ce:	42b1      	cmp	r1, r6
100507d0:	d901      	bls.n	100507d6 <PRIVWHIT_u8RemoveAddrInList+0xee>
100507d2:	1e49      	subs	r1, r1, #1
100507d4:	7641      	strb	r1, [r0, #25]
100507d6:	7e01      	ldrb	r1, [r0, #24]
100507d8:	42b1      	cmp	r1, r6
100507da:	d901      	bls.n	100507e0 <PRIVWHIT_u8RemoveAddrInList+0xf8>
100507dc:	1e49      	subs	r1, r1, #1
100507de:	7601      	strb	r1, [r0, #24]
100507e0:	9800      	ldr	r0, [sp, #0]
100507e2:	220f      	movs	r2, #15
100507e4:	1dc0      	adds	r0, r0, #7
100507e6:	7801      	ldrb	r1, [r0, #0]
100507e8:	42b1      	cmp	r1, r6
100507ea:	d901      	bls.n	100507f0 <PRIVWHIT_u8RemoveAddrInList+0x108>
100507ec:	1e49      	subs	r1, r1, #1
100507ee:	7001      	strb	r1, [r0, #0]
100507f0:	3008      	adds	r0, #8
100507f2:	1e52      	subs	r2, r2, #1
100507f4:	d1f7      	bne.n	100507e6 <PRIVWHIT_u8RemoveAddrInList+0xfe>
100507f6:	b003      	add	sp, #12
100507f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100507fa:	212b      	movs	r1, #43	; 0x2b
100507fc:	0149      	lsls	r1, r1, #5
100507fe:	e7db      	b.n	100507b8 <PRIVWHIT_u8RemoveAddrInList+0xd0>
10050800:	20000d64 	.word	0x20000d64
10050804:	0000046c 	.word	0x0000046c
10050808:	000005dc 	.word	0x000005dc
1005080c:	00000564 	.word	0x00000564
10050810:	000004e4 	.word	0x000004e4

10050814 <PRIVWHIT_u8ReturnFreeRecordDatabase>:
10050814:	4a09      	ldr	r2, [pc, #36]	; (1005083c <PRIVWHIT_u8ReturnFreeRecordDatabase+0x28>)
10050816:	20ff      	movs	r0, #255	; 0xff
10050818:	6813      	ldr	r3, [r2, #0]
1005081a:	2100      	movs	r1, #0
1005081c:	2237      	movs	r2, #55	; 0x37
1005081e:	434a      	muls	r2, r1
10050820:	18d2      	adds	r2, r2, r3
10050822:	32ff      	adds	r2, #255	; 0xff
10050824:	323b      	adds	r2, #59	; 0x3b
10050826:	7d52      	ldrb	r2, [r2, #21]
10050828:	2a00      	cmp	r2, #0
1005082a:	d004      	beq.n	10050836 <PRIVWHIT_u8ReturnFreeRecordDatabase+0x22>
1005082c:	1c49      	adds	r1, r1, #1
1005082e:	b2c9      	uxtb	r1, r1
10050830:	290f      	cmp	r1, #15
10050832:	d3f3      	bcc.n	1005081c <PRIVWHIT_u8ReturnFreeRecordDatabase+0x8>
10050834:	4770      	bx	lr
10050836:	4608      	mov	r0, r1
10050838:	4770      	bx	lr
1005083a:	0000      	.short	0x0000
1005083c:	20000d64 	.word	0x20000d64

10050840 <PRIVWHIT_u8SearchAddrInList>:
10050840:	b5f0      	push	{r4, r5, r6, r7, lr}
10050842:	4a1d      	ldr	r2, [pc, #116]	; (100508b8 <PRIVWHIT_u8SearchAddrInList+0x78>)
10050844:	2304      	movs	r3, #4
10050846:	6812      	ldr	r2, [r2, #0]
10050848:	2800      	cmp	r0, #0
1005084a:	d00a      	beq.n	10050862 <PRIVWHIT_u8SearchAddrInList+0x22>
1005084c:	2801      	cmp	r0, #1
1005084e:	d026      	beq.n	1005089e <PRIVWHIT_u8SearchAddrInList+0x5e>
10050850:	2802      	cmp	r0, #2
10050852:	d028      	beq.n	100508a6 <PRIVWHIT_u8SearchAddrInList+0x66>
10050854:	242f      	movs	r4, #47	; 0x2f
10050856:	0164      	lsls	r4, r4, #5
10050858:	1912      	adds	r2, r2, r4
1005085a:	4696      	mov	lr, r2
1005085c:	2803      	cmp	r0, #3
1005085e:	d024      	beq.n	100508aa <PRIVWHIT_u8SearchAddrInList+0x6a>
10050860:	e002      	b.n	10050868 <PRIVWHIT_u8SearchAddrInList+0x28>
10050862:	4816      	ldr	r0, [pc, #88]	; (100508bc <PRIVWHIT_u8SearchAddrInList+0x7c>)
10050864:	1812      	adds	r2, r2, r0
10050866:	4696      	mov	lr, r2
10050868:	200f      	movs	r0, #15
1005086a:	4684      	mov	ip, r0
1005086c:	2001      	movs	r0, #1
1005086e:	4098      	lsls	r0, r3
10050870:	b2c3      	uxtb	r3, r0
10050872:	2600      	movs	r6, #0
10050874:	085b      	lsrs	r3, r3, #1
10050876:	18f0      	adds	r0, r6, r3
10050878:	b2c0      	uxtb	r0, r0
1005087a:	4560      	cmp	r0, ip
1005087c:	d20b      	bcs.n	10050896 <PRIVWHIT_u8SearchAddrInList+0x56>
1005087e:	00c2      	lsls	r2, r0, #3
10050880:	4674      	mov	r4, lr
10050882:	1914      	adds	r4, r2, r4
10050884:	2207      	movs	r2, #7
10050886:	1e52      	subs	r2, r2, #1
10050888:	5c8d      	ldrb	r5, [r1, r2]
1005088a:	5ca7      	ldrb	r7, [r4, r2]
1005088c:	1bed      	subs	r5, r5, r7
1005088e:	d00f      	beq.n	100508b0 <PRIVWHIT_u8SearchAddrInList+0x70>
10050890:	2d00      	cmp	r5, #0
10050892:	dd00      	ble.n	10050896 <PRIVWHIT_u8SearchAddrInList+0x56>
10050894:	4606      	mov	r6, r0
10050896:	2b00      	cmp	r3, #0
10050898:	d1ec      	bne.n	10050874 <PRIVWHIT_u8SearchAddrInList+0x34>
1005089a:	20ff      	movs	r0, #255	; 0xff
1005089c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005089e:	249d      	movs	r4, #157	; 0x9d
100508a0:	00e4      	lsls	r4, r4, #3
100508a2:	1912      	adds	r2, r2, r4
100508a4:	e7d9      	b.n	1005085a <PRIVWHIT_u8SearchAddrInList+0x1a>
100508a6:	4c06      	ldr	r4, [pc, #24]	; (100508c0 <PRIVWHIT_u8SearchAddrInList+0x80>)
100508a8:	e7d6      	b.n	10050858 <PRIVWHIT_u8SearchAddrInList+0x18>
100508aa:	2305      	movs	r3, #5
100508ac:	201f      	movs	r0, #31
100508ae:	e7dc      	b.n	1005086a <PRIVWHIT_u8SearchAddrInList+0x2a>
100508b0:	2a00      	cmp	r2, #0
100508b2:	d1e8      	bne.n	10050886 <PRIVWHIT_u8SearchAddrInList+0x46>
100508b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100508b6:	0000      	.short	0x0000
100508b8:	20000d64 	.word	0x20000d64
100508bc:	0000046c 	.word	0x0000046c
100508c0:	00000564 	.word	0x00000564

100508c4 <PRIVWHIT_vInit_Struct>:
100508c4:	b570      	push	{r4, r5, r6, lr}
100508c6:	4d2a      	ldr	r5, [pc, #168]	; (10050970 <PRIVWHIT_vInit_Struct+0xac>)
100508c8:	4a28      	ldr	r2, [pc, #160]	; (1005096c <PRIVWHIT_vInit_Struct+0xa8>)
100508ca:	6828      	ldr	r0, [r5, #0]
100508cc:	2100      	movs	r1, #0
100508ce:	30ff      	adds	r0, #255	; 0xff
100508d0:	301b      	adds	r0, #27
100508d2:	f7ef ff5a 	bl	1004078a <Osal_MemSet>
100508d6:	6828      	ldr	r0, [r5, #0]
100508d8:	21ff      	movs	r1, #255	; 0xff
100508da:	22f2      	movs	r2, #242	; 0xf2
100508dc:	5411      	strb	r1, [r2, r0]
100508de:	2211      	movs	r2, #17
100508e0:	0192      	lsls	r2, r2, #6
100508e2:	1882      	adds	r2, r0, r2
100508e4:	7611      	strb	r1, [r2, #24]
100508e6:	7651      	strb	r1, [r2, #25]
100508e8:	7691      	strb	r1, [r2, #26]
100508ea:	4a22      	ldr	r2, [pc, #136]	; (10050974 <PRIVWHIT_vInit_Struct+0xb0>)
100508ec:	21f4      	movs	r1, #244	; 0xf4
100508ee:	500a      	str	r2, [r1, r0]
100508f0:	232f      	movs	r3, #47	; 0x2f
100508f2:	015b      	lsls	r3, r3, #5
100508f4:	22f8      	movs	r2, #248	; 0xf8
100508f6:	21ff      	movs	r1, #255	; 0xff
100508f8:	18c0      	adds	r0, r0, r3
100508fa:	f7ef ff46 	bl	1004078a <Osal_MemSet>
100508fe:	4b1e      	ldr	r3, [pc, #120]	; (10050978 <PRIVWHIT_vInit_Struct+0xb4>)
10050900:	6828      	ldr	r0, [r5, #0]
10050902:	2278      	movs	r2, #120	; 0x78
10050904:	21ff      	movs	r1, #255	; 0xff
10050906:	18c0      	adds	r0, r0, r3
10050908:	f7ef ff3f 	bl	1004078a <Osal_MemSet>
1005090c:	4b1a      	ldr	r3, [pc, #104]	; (10050978 <PRIVWHIT_vInit_Struct+0xb4>)
1005090e:	6828      	ldr	r0, [r5, #0]
10050910:	33f8      	adds	r3, #248	; 0xf8
10050912:	2278      	movs	r2, #120	; 0x78
10050914:	21ff      	movs	r1, #255	; 0xff
10050916:	18c0      	adds	r0, r0, r3
10050918:	f7ef ff37 	bl	1004078a <Osal_MemSet>
1005091c:	239d      	movs	r3, #157	; 0x9d
1005091e:	6828      	ldr	r0, [r5, #0]
10050920:	00db      	lsls	r3, r3, #3
10050922:	2278      	movs	r2, #120	; 0x78
10050924:	21ff      	movs	r1, #255	; 0xff
10050926:	18c0      	adds	r0, r0, r3
10050928:	f7ef ff2f 	bl	1004078a <Osal_MemSet>
1005092c:	2623      	movs	r6, #35	; 0x23
1005092e:	6828      	ldr	r0, [r5, #0]
10050930:	0176      	lsls	r6, r6, #5
10050932:	2400      	movs	r4, #0
10050934:	1981      	adds	r1, r0, r6
10050936:	720c      	strb	r4, [r1, #8]
10050938:	2127      	movs	r1, #39	; 0x27
1005093a:	0149      	lsls	r1, r1, #5
1005093c:	1841      	adds	r1, r0, r1
1005093e:	710c      	strb	r4, [r1, #4]
10050940:	212b      	movs	r1, #43	; 0x2b
10050942:	0149      	lsls	r1, r1, #5
10050944:	1841      	adds	r1, r0, r1
10050946:	700c      	strb	r4, [r1, #0]
10050948:	2117      	movs	r1, #23
1005094a:	0189      	lsls	r1, r1, #6
1005094c:	1840      	adds	r0, r0, r1
1005094e:	7704      	strb	r4, [r0, #28]
10050950:	f7fc feb8 	bl	1004d6c4 <HAL_VTimerGetCurrentTime_sysT32>
10050954:	6829      	ldr	r1, [r5, #0]
10050956:	2301      	movs	r3, #1
10050958:	460a      	mov	r2, r1
1005095a:	3280      	adds	r2, #128	; 0x80
1005095c:	6790      	str	r0, [r2, #120]	; 0x78
1005095e:	1988      	adds	r0, r1, r6
10050960:	7104      	strb	r4, [r0, #4]
10050962:	31e0      	adds	r1, #224	; 0xe0
10050964:	744b      	strb	r3, [r1, #17]
10050966:	67d4      	str	r4, [r2, #124]	; 0x7c
10050968:	7184      	strb	r4, [r0, #6]
1005096a:	bd70      	pop	{r4, r5, r6, pc}
1005096c:	00000339 	.word	0x00000339
10050970:	20000d64 	.word	0x20000d64
10050974:	00015f90 	.word	0x00015f90
10050978:	0000046c 	.word	0x0000046c

1005097c <PRIV_SearchAddrInRPAList>:
1005097c:	b4f0      	push	{r4, r5, r6, r7}
1005097e:	4607      	mov	r7, r0
10050980:	4810      	ldr	r0, [pc, #64]	; (100509c4 <PRIV_SearchAddrInRPAList+0x48>)
10050982:	4a11      	ldr	r2, [pc, #68]	; (100509c8 <PRIV_SearchAddrInRPAList+0x4c>)
10050984:	6800      	ldr	r0, [r0, #0]
10050986:	260f      	movs	r6, #15
10050988:	1880      	adds	r0, r0, r2
1005098a:	4684      	mov	ip, r0
1005098c:	2210      	movs	r2, #16
1005098e:	2000      	movs	r0, #0
10050990:	0852      	lsrs	r2, r2, #1
10050992:	1883      	adds	r3, r0, r2
10050994:	b2db      	uxtb	r3, r3
10050996:	42b3      	cmp	r3, r6
10050998:	d20f      	bcs.n	100509ba <PRIV_SearchAddrInRPAList+0x3e>
1005099a:	00dc      	lsls	r4, r3, #3
1005099c:	4464      	add	r4, ip
1005099e:	6825      	ldr	r5, [r4, #0]
100509a0:	6864      	ldr	r4, [r4, #4]
100509a2:	0224      	lsls	r4, r4, #8
100509a4:	42a1      	cmp	r1, r4
100509a6:	d803      	bhi.n	100509b0 <PRIV_SearchAddrInRPAList+0x34>
100509a8:	42a1      	cmp	r1, r4
100509aa:	d106      	bne.n	100509ba <PRIV_SearchAddrInRPAList+0x3e>
100509ac:	42af      	cmp	r7, r5
100509ae:	d304      	bcc.n	100509ba <PRIV_SearchAddrInRPAList+0x3e>
100509b0:	4618      	mov	r0, r3
100509b2:	42af      	cmp	r7, r5
100509b4:	d101      	bne.n	100509ba <PRIV_SearchAddrInRPAList+0x3e>
100509b6:	42a1      	cmp	r1, r4
100509b8:	d002      	beq.n	100509c0 <PRIV_SearchAddrInRPAList+0x44>
100509ba:	2a00      	cmp	r2, #0
100509bc:	d1e8      	bne.n	10050990 <PRIV_SearchAddrInRPAList+0x14>
100509be:	20ff      	movs	r0, #255	; 0xff
100509c0:	bcf0      	pop	{r4, r5, r6, r7}
100509c2:	4770      	bx	lr
100509c4:	20000d64 	.word	0x20000d64
100509c8:	0000046c 	.word	0x0000046c

100509cc <PRIV_SearchAddrInScratchList>:
100509cc:	b4f0      	push	{r4, r5, r6, r7}
100509ce:	4607      	mov	r7, r0
100509d0:	4811      	ldr	r0, [pc, #68]	; (10050a18 <PRIV_SearchAddrInScratchList+0x4c>)
100509d2:	229d      	movs	r2, #157	; 0x9d
100509d4:	6800      	ldr	r0, [r0, #0]
100509d6:	00d2      	lsls	r2, r2, #3
100509d8:	1880      	adds	r0, r0, r2
100509da:	4684      	mov	ip, r0
100509dc:	260f      	movs	r6, #15
100509de:	2210      	movs	r2, #16
100509e0:	2000      	movs	r0, #0
100509e2:	0852      	lsrs	r2, r2, #1
100509e4:	1883      	adds	r3, r0, r2
100509e6:	b2db      	uxtb	r3, r3
100509e8:	42b3      	cmp	r3, r6
100509ea:	d20f      	bcs.n	10050a0c <PRIV_SearchAddrInScratchList+0x40>
100509ec:	00dc      	lsls	r4, r3, #3
100509ee:	4464      	add	r4, ip
100509f0:	6825      	ldr	r5, [r4, #0]
100509f2:	6864      	ldr	r4, [r4, #4]
100509f4:	0224      	lsls	r4, r4, #8
100509f6:	42a1      	cmp	r1, r4
100509f8:	d803      	bhi.n	10050a02 <PRIV_SearchAddrInScratchList+0x36>
100509fa:	42a1      	cmp	r1, r4
100509fc:	d106      	bne.n	10050a0c <PRIV_SearchAddrInScratchList+0x40>
100509fe:	42af      	cmp	r7, r5
10050a00:	d304      	bcc.n	10050a0c <PRIV_SearchAddrInScratchList+0x40>
10050a02:	4618      	mov	r0, r3
10050a04:	42af      	cmp	r7, r5
10050a06:	d101      	bne.n	10050a0c <PRIV_SearchAddrInScratchList+0x40>
10050a08:	42a1      	cmp	r1, r4
10050a0a:	d002      	beq.n	10050a12 <PRIV_SearchAddrInScratchList+0x46>
10050a0c:	2a00      	cmp	r2, #0
10050a0e:	d1e8      	bne.n	100509e2 <PRIV_SearchAddrInScratchList+0x16>
10050a10:	20ff      	movs	r0, #255	; 0xff
10050a12:	bcf0      	pop	{r4, r5, r6, r7}
10050a14:	4770      	bx	lr
10050a16:	0000      	.short	0x0000
10050a18:	20000d64 	.word	0x20000d64

10050a1c <PRIV_SearchAddrInWhiteList>:
10050a1c:	b4f0      	push	{r4, r5, r6, r7}
10050a1e:	4a14      	ldr	r2, [pc, #80]	; (10050a70 <PRIV_SearchAddrInWhiteList+0x54>)
10050a20:	232f      	movs	r3, #47	; 0x2f
10050a22:	6812      	ldr	r2, [r2, #0]
10050a24:	015b      	lsls	r3, r3, #5
10050a26:	18d2      	adds	r2, r2, r3
10050a28:	4694      	mov	ip, r2
10050a2a:	271f      	movs	r7, #31
10050a2c:	2220      	movs	r2, #32
10050a2e:	2400      	movs	r4, #0
10050a30:	0852      	lsrs	r2, r2, #1
10050a32:	18a3      	adds	r3, r4, r2
10050a34:	b2db      	uxtb	r3, r3
10050a36:	42bb      	cmp	r3, r7
10050a38:	d214      	bcs.n	10050a64 <PRIV_SearchAddrInWhiteList+0x48>
10050a3a:	00dd      	lsls	r5, r3, #3
10050a3c:	4465      	add	r5, ip
10050a3e:	682e      	ldr	r6, [r5, #0]
10050a40:	686d      	ldr	r5, [r5, #4]
10050a42:	022d      	lsls	r5, r5, #8
10050a44:	42a9      	cmp	r1, r5
10050a46:	d803      	bhi.n	10050a50 <PRIV_SearchAddrInWhiteList+0x34>
10050a48:	42a9      	cmp	r1, r5
10050a4a:	d10b      	bne.n	10050a64 <PRIV_SearchAddrInWhiteList+0x48>
10050a4c:	42b0      	cmp	r0, r6
10050a4e:	d309      	bcc.n	10050a64 <PRIV_SearchAddrInWhiteList+0x48>
10050a50:	461c      	mov	r4, r3
10050a52:	42b0      	cmp	r0, r6
10050a54:	d106      	bne.n	10050a64 <PRIV_SearchAddrInWhiteList+0x48>
10050a56:	42a9      	cmp	r1, r5
10050a58:	d104      	bne.n	10050a64 <PRIV_SearchAddrInWhiteList+0x48>
10050a5a:	2bff      	cmp	r3, #255	; 0xff
10050a5c:	d004      	beq.n	10050a68 <PRIV_SearchAddrInWhiteList+0x4c>
10050a5e:	bcf0      	pop	{r4, r5, r6, r7}
10050a60:	2001      	movs	r0, #1
10050a62:	4770      	bx	lr
10050a64:	2a00      	cmp	r2, #0
10050a66:	d1e3      	bne.n	10050a30 <PRIV_SearchAddrInWhiteList+0x14>
10050a68:	bcf0      	pop	{r4, r5, r6, r7}
10050a6a:	2000      	movs	r0, #0
10050a6c:	4770      	bx	lr
10050a6e:	0000      	.short	0x0000
10050a70:	20000d64 	.word	0x20000d64

10050a74 <PRIV_u32ProcessAdvPacket>:
10050a74:	b5f0      	push	{r4, r5, r6, r7, lr}
10050a76:	b0a1      	sub	sp, #132	; 0x84
10050a78:	7801      	ldrb	r1, [r0, #0]
10050a7a:	910e      	str	r1, [sp, #56]	; 0x38
10050a7c:	6845      	ldr	r5, [r0, #4]
10050a7e:	6881      	ldr	r1, [r0, #8]
10050a80:	9110      	str	r1, [sp, #64]	; 0x40
10050a82:	68c7      	ldr	r7, [r0, #12]
10050a84:	6901      	ldr	r1, [r0, #16]
10050a86:	911c      	str	r1, [sp, #112]	; 0x70
10050a88:	6940      	ldr	r0, [r0, #20]
10050a8a:	2400      	movs	r4, #0
10050a8c:	9417      	str	r4, [sp, #92]	; 0x5c
10050a8e:	9004      	str	r0, [sp, #16]
10050a90:	26ff      	movs	r6, #255	; 0xff
10050a92:	9416      	str	r4, [sp, #88]	; 0x58
10050a94:	9415      	str	r4, [sp, #84]	; 0x54
10050a96:	941e      	str	r4, [sp, #120]	; 0x78
10050a98:	9408      	str	r4, [sp, #32]
10050a9a:	1ca8      	adds	r0, r5, #2
10050a9c:	f7ef fcd4 	bl	10040448 <__aeabi_uread4>
10050aa0:	7829      	ldrb	r1, [r5, #0]
10050aa2:	0200      	lsls	r0, r0, #8
10050aa4:	0649      	lsls	r1, r1, #25
10050aa6:	0fc9      	lsrs	r1, r1, #31
10050aa8:	4308      	orrs	r0, r1
10050aaa:	6038      	str	r0, [r7, #0]
10050aac:	1d68      	adds	r0, r5, #5
10050aae:	f7ef fccb 	bl	10040448 <__aeabi_uread4>
10050ab2:	0200      	lsls	r0, r0, #8
10050ab4:	0a00      	lsrs	r0, r0, #8
10050ab6:	6078      	str	r0, [r7, #4]
10050ab8:	4628      	mov	r0, r5
10050aba:	3008      	adds	r0, #8
10050abc:	f7ef fcc4 	bl	10040448 <__aeabi_uread4>
10050ac0:	7829      	ldrb	r1, [r5, #0]
10050ac2:	0200      	lsls	r0, r0, #8
10050ac4:	09c9      	lsrs	r1, r1, #7
10050ac6:	4308      	orrs	r0, r1
10050ac8:	9001      	str	r0, [sp, #4]
10050aca:	4628      	mov	r0, r5
10050acc:	300b      	adds	r0, #11
10050ace:	f7ef fcbb 	bl	10040448 <__aeabi_uread4>
10050ad2:	0200      	lsls	r0, r0, #8
10050ad4:	0a00      	lsrs	r0, r0, #8
10050ad6:	9002      	str	r0, [sp, #8]
10050ad8:	6878      	ldr	r0, [r7, #4]
10050ada:	0200      	lsls	r0, r0, #8
10050adc:	901a      	str	r0, [sp, #104]	; 0x68
10050ade:	0f80      	lsrs	r0, r0, #30
10050ae0:	2801      	cmp	r0, #1
10050ae2:	d102      	bne.n	10050aea <PRIV_u32ProcessAdvPacket+0x76>
10050ae4:	7838      	ldrb	r0, [r7, #0]
10050ae6:	2801      	cmp	r0, #1
10050ae8:	d000      	beq.n	10050aec <PRIV_u32ProcessAdvPacket+0x78>
10050aea:	2000      	movs	r0, #0
10050aec:	9012      	str	r0, [sp, #72]	; 0x48
10050aee:	9802      	ldr	r0, [sp, #8]
10050af0:	0200      	lsls	r0, r0, #8
10050af2:	0f81      	lsrs	r1, r0, #30
10050af4:	2901      	cmp	r1, #1
10050af6:	d103      	bne.n	10050b00 <PRIV_u32ProcessAdvPacket+0x8c>
10050af8:	9901      	ldr	r1, [sp, #4]
10050afa:	b2c9      	uxtb	r1, r1
10050afc:	2901      	cmp	r1, #1
10050afe:	d000      	beq.n	10050b02 <PRIV_u32ProcessAdvPacket+0x8e>
10050b00:	2100      	movs	r1, #0
10050b02:	9114      	str	r1, [sp, #80]	; 0x50
10050b04:	991a      	ldr	r1, [sp, #104]	; 0x68
10050b06:	0f89      	lsrs	r1, r1, #30
10050b08:	d102      	bne.n	10050b10 <PRIV_u32ProcessAdvPacket+0x9c>
10050b0a:	7839      	ldrb	r1, [r7, #0]
10050b0c:	2901      	cmp	r1, #1
10050b0e:	d000      	beq.n	10050b12 <PRIV_u32ProcessAdvPacket+0x9e>
10050b10:	2100      	movs	r1, #0
10050b12:	9119      	str	r1, [sp, #100]	; 0x64
10050b14:	0f80      	lsrs	r0, r0, #30
10050b16:	d103      	bne.n	10050b20 <PRIV_u32ProcessAdvPacket+0xac>
10050b18:	9801      	ldr	r0, [sp, #4]
10050b1a:	b2c0      	uxtb	r0, r0
10050b1c:	2801      	cmp	r0, #1
10050b1e:	d01f      	beq.n	10050b60 <PRIV_u32ProcessAdvPacket+0xec>
10050b20:	2100      	movs	r1, #0
10050b22:	7828      	ldrb	r0, [r5, #0]
10050b24:	4bff      	ldr	r3, [pc, #1020]	; (10050f24 <PRIV_u32ProcessAdvPacket+0x4b0>)
10050b26:	0705      	lsls	r5, r0, #28
10050b28:	6818      	ldr	r0, [r3, #0]
10050b2a:	9007      	str	r0, [sp, #28]
10050b2c:	4602      	mov	r2, r0
10050b2e:	32ff      	adds	r2, #255	; 0xff
10050b30:	321b      	adds	r2, #27
10050b32:	921f      	str	r2, [sp, #124]	; 0x7c
10050b34:	4afc      	ldr	r2, [pc, #1008]	; (10050f28 <PRIV_u32ProcessAdvPacket+0x4b4>)
10050b36:	0f2d      	lsrs	r5, r5, #28
10050b38:	1882      	adds	r2, r0, r2
10050b3a:	921d      	str	r2, [sp, #116]	; 0x74
10050b3c:	2200      	movs	r2, #0
10050b3e:	9211      	str	r2, [sp, #68]	; 0x44
10050b40:	920f      	str	r2, [sp, #60]	; 0x3c
10050b42:	920c      	str	r2, [sp, #48]	; 0x30
10050b44:	2201      	movs	r2, #1
10050b46:	9218      	str	r2, [sp, #96]	; 0x60
10050b48:	30e0      	adds	r0, #224	; 0xe0
10050b4a:	921b      	str	r2, [sp, #108]	; 0x6c
10050b4c:	7c02      	ldrb	r2, [r0, #16]
10050b4e:	920b      	str	r2, [sp, #44]	; 0x2c
10050b50:	2a00      	cmp	r2, #0
10050b52:	d000      	beq.n	10050b56 <PRIV_u32ProcessAdvPacket+0xe2>
10050b54:	2201      	movs	r2, #1
10050b56:	9213      	str	r2, [sp, #76]	; 0x4c
10050b58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10050b5a:	2a01      	cmp	r2, #1
10050b5c:	d002      	beq.n	10050b64 <PRIV_u32ProcessAdvPacket+0xf0>
10050b5e:	e005      	b.n	10050b6c <PRIV_u32ProcessAdvPacket+0xf8>
10050b60:	2101      	movs	r1, #1
10050b62:	e7de      	b.n	10050b22 <PRIV_u32ProcessAdvPacket+0xae>
10050b64:	7c40      	ldrb	r0, [r0, #17]
10050b66:	2800      	cmp	r0, #0
10050b68:	d100      	bne.n	10050b6c <PRIV_u32ProcessAdvPacket+0xf8>
10050b6a:	2401      	movs	r4, #1
10050b6c:	980e      	ldr	r0, [sp, #56]	; 0x38
10050b6e:	2800      	cmp	r0, #0
10050b70:	d011      	beq.n	10050b96 <PRIV_u32ProcessAdvPacket+0x122>
10050b72:	2801      	cmp	r0, #1
10050b74:	d04e      	beq.n	10050c14 <PRIV_u32ProcessAdvPacket+0x1a0>
10050b76:	2d03      	cmp	r5, #3
10050b78:	d002      	beq.n	10050b80 <PRIV_u32ProcessAdvPacket+0x10c>
10050b7a:	2d05      	cmp	r5, #5
10050b7c:	d000      	beq.n	10050b80 <PRIV_u32ProcessAdvPacket+0x10c>
10050b7e:	2401      	movs	r4, #1
10050b80:	9804      	ldr	r0, [sp, #16]
10050b82:	7e00      	ldrb	r0, [r0, #24]
10050b84:	2803      	cmp	r0, #3
10050b86:	d06e      	beq.n	10050c66 <PRIV_u32ProcessAdvPacket+0x1f2>
10050b88:	2802      	cmp	r0, #2
10050b8a:	d06d      	beq.n	10050c68 <PRIV_u32ProcessAdvPacket+0x1f4>
10050b8c:	2801      	cmp	r0, #1
10050b8e:	d06c      	beq.n	10050c6a <PRIV_u32ProcessAdvPacket+0x1f6>
10050b90:	2804      	cmp	r0, #4
10050b92:	d06a      	beq.n	10050c6a <PRIV_u32ProcessAdvPacket+0x1f6>
10050b94:	e09b      	b.n	10050cce <PRIV_u32ProcessAdvPacket+0x25a>
10050b96:	2d03      	cmp	r5, #3
10050b98:	d006      	beq.n	10050ba8 <PRIV_u32ProcessAdvPacket+0x134>
10050b9a:	2d05      	cmp	r5, #5
10050b9c:	d004      	beq.n	10050ba8 <PRIV_u32ProcessAdvPacket+0x134>
10050b9e:	2d04      	cmp	r5, #4
10050ba0:	d004      	beq.n	10050bac <PRIV_u32ProcessAdvPacket+0x138>
10050ba2:	2d01      	cmp	r5, #1
10050ba4:	d005      	beq.n	10050bb2 <PRIV_u32ProcessAdvPacket+0x13e>
10050ba6:	e009      	b.n	10050bbc <PRIV_u32ProcessAdvPacket+0x148>
10050ba8:	2401      	movs	r4, #1
10050baa:	e007      	b.n	10050bbc <PRIV_u32ProcessAdvPacket+0x148>
10050bac:	2001      	movs	r0, #1
10050bae:	900f      	str	r0, [sp, #60]	; 0x3c
10050bb0:	e004      	b.n	10050bbc <PRIV_u32ProcessAdvPacket+0x148>
10050bb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
10050bb4:	2800      	cmp	r0, #0
10050bb6:	d101      	bne.n	10050bbc <PRIV_u32ProcessAdvPacket+0x148>
10050bb8:	2001      	movs	r0, #1
10050bba:	9011      	str	r0, [sp, #68]	; 0x44
10050bbc:	9810      	ldr	r0, [sp, #64]	; 0x40
10050bbe:	9015      	str	r0, [sp, #84]	; 0x54
10050bc0:	1c80      	adds	r0, r0, #2
10050bc2:	9017      	str	r0, [sp, #92]	; 0x5c
10050bc4:	9810      	ldr	r0, [sp, #64]	; 0x40
10050bc6:	3008      	adds	r0, #8
10050bc8:	9016      	str	r0, [sp, #88]	; 0x58
10050bca:	9804      	ldr	r0, [sp, #16]
10050bcc:	3020      	adds	r0, #32
10050bce:	7900      	ldrb	r0, [r0, #4]
10050bd0:	2803      	cmp	r0, #3
10050bd2:	d010      	beq.n	10050bf6 <PRIV_u32ProcessAdvPacket+0x182>
10050bd4:	2801      	cmp	r0, #1
10050bd6:	d00e      	beq.n	10050bf6 <PRIV_u32ProcessAdvPacket+0x182>
10050bd8:	2200      	movs	r2, #0
10050bda:	920c      	str	r2, [sp, #48]	; 0x30
10050bdc:	9204      	str	r2, [sp, #16]
10050bde:	2800      	cmp	r0, #0
10050be0:	d00b      	beq.n	10050bfa <PRIV_u32ProcessAdvPacket+0x186>
10050be2:	2801      	cmp	r0, #1
10050be4:	d009      	beq.n	10050bfa <PRIV_u32ProcessAdvPacket+0x186>
10050be6:	2000      	movs	r0, #0
10050be8:	9018      	str	r0, [sp, #96]	; 0x60
10050bea:	980b      	ldr	r0, [sp, #44]	; 0x2c
10050bec:	2801      	cmp	r0, #1
10050bee:	d006      	beq.n	10050bfe <PRIV_u32ProcessAdvPacket+0x18a>
10050bf0:	2d01      	cmp	r5, #1
10050bf2:	d009      	beq.n	10050c08 <PRIV_u32ProcessAdvPacket+0x194>
10050bf4:	e09f      	b.n	10050d36 <PRIV_u32ProcessAdvPacket+0x2c2>
10050bf6:	2201      	movs	r2, #1
10050bf8:	e7ef      	b.n	10050bda <PRIV_u32ProcessAdvPacket+0x166>
10050bfa:	2001      	movs	r0, #1
10050bfc:	e7f4      	b.n	10050be8 <PRIV_u32ProcessAdvPacket+0x174>
10050bfe:	2d01      	cmp	r5, #1
10050c00:	d174      	bne.n	10050cec <PRIV_u32ProcessAdvPacket+0x278>
10050c02:	2900      	cmp	r1, #0
10050c04:	d000      	beq.n	10050c08 <PRIV_u32ProcessAdvPacket+0x194>
10050c06:	2401      	movs	r4, #1
10050c08:	9814      	ldr	r0, [sp, #80]	; 0x50
10050c0a:	2800      	cmp	r0, #0
10050c0c:	d101      	bne.n	10050c12 <PRIV_u32ProcessAdvPacket+0x19e>
10050c0e:	2001      	movs	r0, #1
10050c10:	9011      	str	r0, [sp, #68]	; 0x44
10050c12:	e0bf      	b.n	10050d94 <PRIV_u32ProcessAdvPacket+0x320>
10050c14:	2d00      	cmp	r5, #0
10050c16:	d002      	beq.n	10050c1e <PRIV_u32ProcessAdvPacket+0x1aa>
10050c18:	2d01      	cmp	r5, #1
10050c1a:	d000      	beq.n	10050c1e <PRIV_u32ProcessAdvPacket+0x1aa>
10050c1c:	2401      	movs	r4, #1
10050c1e:	9804      	ldr	r0, [sp, #16]
10050c20:	3020      	adds	r0, #32
10050c22:	7900      	ldrb	r0, [r0, #4]
10050c24:	2801      	cmp	r0, #1
10050c26:	d00e      	beq.n	10050c46 <PRIV_u32ProcessAdvPacket+0x1d2>
10050c28:	2200      	movs	r2, #0
10050c2a:	920c      	str	r2, [sp, #48]	; 0x30
10050c2c:	9a19      	ldr	r2, [sp, #100]	; 0x64
10050c2e:	2a00      	cmp	r2, #0
10050c30:	d001      	beq.n	10050c36 <PRIV_u32ProcessAdvPacket+0x1c2>
10050c32:	2800      	cmp	r0, #0
10050c34:	d009      	beq.n	10050c4a <PRIV_u32ProcessAdvPacket+0x1d6>
10050c36:	2201      	movs	r2, #1
10050c38:	9204      	str	r2, [sp, #16]
10050c3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
10050c3c:	2a00      	cmp	r2, #0
10050c3e:	d006      	beq.n	10050c4e <PRIV_u32ProcessAdvPacket+0x1da>
10050c40:	2d01      	cmp	r5, #1
10050c42:	d009      	beq.n	10050c58 <PRIV_u32ProcessAdvPacket+0x1e4>
10050c44:	e01c      	b.n	10050c80 <PRIV_u32ProcessAdvPacket+0x20c>
10050c46:	2201      	movs	r2, #1
10050c48:	e7ef      	b.n	10050c2a <PRIV_u32ProcessAdvPacket+0x1b6>
10050c4a:	2200      	movs	r2, #0
10050c4c:	e7f4      	b.n	10050c38 <PRIV_u32ProcessAdvPacket+0x1c4>
10050c4e:	2d01      	cmp	r5, #1
10050c50:	d116      	bne.n	10050c80 <PRIV_u32ProcessAdvPacket+0x20c>
10050c52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10050c54:	2a01      	cmp	r2, #1
10050c56:	d009      	beq.n	10050c6c <PRIV_u32ProcessAdvPacket+0x1f8>
10050c58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10050c5a:	2a00      	cmp	r2, #0
10050c5c:	d00e      	beq.n	10050c7c <PRIV_u32ProcessAdvPacket+0x208>
10050c5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
10050c60:	2a00      	cmp	r2, #0
10050c62:	d00b      	beq.n	10050c7c <PRIV_u32ProcessAdvPacket+0x208>
10050c64:	e00c      	b.n	10050c80 <PRIV_u32ProcessAdvPacket+0x20c>
10050c66:	e02b      	b.n	10050cc0 <PRIV_u32ProcessAdvPacket+0x24c>
10050c68:	e028      	b.n	10050cbc <PRIV_u32ProcessAdvPacket+0x248>
10050c6a:	e02b      	b.n	10050cc4 <PRIV_u32ProcessAdvPacket+0x250>
10050c6c:	2323      	movs	r3, #35	; 0x23
10050c6e:	9a07      	ldr	r2, [sp, #28]
10050c70:	015b      	lsls	r3, r3, #5
10050c72:	18d2      	adds	r2, r2, r3
10050c74:	7912      	ldrb	r2, [r2, #4]
10050c76:	2a01      	cmp	r2, #1
10050c78:	d100      	bne.n	10050c7c <PRIV_u32ProcessAdvPacket+0x208>
10050c7a:	2401      	movs	r4, #1
10050c7c:	2201      	movs	r2, #1
10050c7e:	9211      	str	r2, [sp, #68]	; 0x44
10050c80:	9a12      	ldr	r2, [sp, #72]	; 0x48
10050c82:	2a00      	cmp	r2, #0
10050c84:	d002      	beq.n	10050c8c <PRIV_u32ProcessAdvPacket+0x218>
10050c86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10050c88:	2a00      	cmp	r2, #0
10050c8a:	d106      	bne.n	10050c9a <PRIV_u32ProcessAdvPacket+0x226>
10050c8c:	2800      	cmp	r0, #0
10050c8e:	d101      	bne.n	10050c94 <PRIV_u32ProcessAdvPacket+0x220>
10050c90:	2201      	movs	r2, #1
10050c92:	920f      	str	r2, [sp, #60]	; 0x3c
10050c94:	9a12      	ldr	r2, [sp, #72]	; 0x48
10050c96:	2a00      	cmp	r2, #0
10050c98:	d007      	beq.n	10050caa <PRIV_u32ProcessAdvPacket+0x236>
10050c9a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10050c9c:	2a01      	cmp	r2, #1
10050c9e:	d145      	bne.n	10050d2c <PRIV_u32ProcessAdvPacket+0x2b8>
10050ca0:	2800      	cmp	r0, #0
10050ca2:	d105      	bne.n	10050cb0 <PRIV_u32ProcessAdvPacket+0x23c>
10050ca4:	2001      	movs	r0, #1
10050ca6:	901e      	str	r0, [sp, #120]	; 0x78
10050ca8:	e002      	b.n	10050cb0 <PRIV_u32ProcessAdvPacket+0x23c>
10050caa:	980b      	ldr	r0, [sp, #44]	; 0x2c
10050cac:	2801      	cmp	r0, #1
10050cae:	d13d      	bne.n	10050d2c <PRIV_u32ProcessAdvPacket+0x2b8>
10050cb0:	2d01      	cmp	r5, #1
10050cb2:	d177      	bne.n	10050da4 <PRIV_u32ProcessAdvPacket+0x330>
10050cb4:	2900      	cmp	r1, #0
10050cb6:	d06d      	beq.n	10050d94 <PRIV_u32ProcessAdvPacket+0x320>
10050cb8:	2401      	movs	r4, #1
10050cba:	e06b      	b.n	10050d94 <PRIV_u32ProcessAdvPacket+0x320>
10050cbc:	2d05      	cmp	r5, #5
10050cbe:	d106      	bne.n	10050cce <PRIV_u32ProcessAdvPacket+0x25a>
10050cc0:	2401      	movs	r4, #1
10050cc2:	e004      	b.n	10050cce <PRIV_u32ProcessAdvPacket+0x25a>
10050cc4:	9912      	ldr	r1, [sp, #72]	; 0x48
10050cc6:	2900      	cmp	r1, #0
10050cc8:	d008      	beq.n	10050cdc <PRIV_u32ProcessAdvPacket+0x268>
10050cca:	2a00      	cmp	r2, #0
10050ccc:	d006      	beq.n	10050cdc <PRIV_u32ProcessAdvPacket+0x268>
10050cce:	2100      	movs	r1, #0
10050cd0:	910f      	str	r1, [sp, #60]	; 0x3c
10050cd2:	2d03      	cmp	r5, #3
10050cd4:	d004      	beq.n	10050ce0 <PRIV_u32ProcessAdvPacket+0x26c>
10050cd6:	2d05      	cmp	r5, #5
10050cd8:	d009      	beq.n	10050cee <PRIV_u32ProcessAdvPacket+0x27a>
10050cda:	e00f      	b.n	10050cfc <PRIV_u32ProcessAdvPacket+0x288>
10050cdc:	2101      	movs	r1, #1
10050cde:	e7f7      	b.n	10050cd0 <PRIV_u32ProcessAdvPacket+0x25c>
10050ce0:	9904      	ldr	r1, [sp, #16]
10050ce2:	3120      	adds	r1, #32
10050ce4:	7b49      	ldrb	r1, [r1, #13]
10050ce6:	07c9      	lsls	r1, r1, #31
10050ce8:	d106      	bne.n	10050cf8 <PRIV_u32ProcessAdvPacket+0x284>
10050cea:	e007      	b.n	10050cfc <PRIV_u32ProcessAdvPacket+0x288>
10050cec:	e023      	b.n	10050d36 <PRIV_u32ProcessAdvPacket+0x2c2>
10050cee:	9904      	ldr	r1, [sp, #16]
10050cf0:	3120      	adds	r1, #32
10050cf2:	7b49      	ldrb	r1, [r1, #13]
10050cf4:	0789      	lsls	r1, r1, #30
10050cf6:	d501      	bpl.n	10050cfc <PRIV_u32ProcessAdvPacket+0x288>
10050cf8:	2101      	movs	r1, #1
10050cfa:	910c      	str	r1, [sp, #48]	; 0x30
10050cfc:	990c      	ldr	r1, [sp, #48]	; 0x30
10050cfe:	9104      	str	r1, [sp, #16]
10050d00:	2101      	movs	r1, #1
10050d02:	9111      	str	r1, [sp, #68]	; 0x44
10050d04:	9910      	ldr	r1, [sp, #64]	; 0x40
10050d06:	1c89      	adds	r1, r1, #2
10050d08:	9117      	str	r1, [sp, #92]	; 0x5c
10050d0a:	9910      	ldr	r1, [sp, #64]	; 0x40
10050d0c:	3108      	adds	r1, #8
10050d0e:	9116      	str	r1, [sp, #88]	; 0x58
10050d10:	9910      	ldr	r1, [sp, #64]	; 0x40
10050d12:	9115      	str	r1, [sp, #84]	; 0x54
10050d14:	2a01      	cmp	r2, #1
10050d16:	d107      	bne.n	10050d28 <PRIV_u32ProcessAdvPacket+0x2b4>
10050d18:	2801      	cmp	r0, #1
10050d1a:	d001      	beq.n	10050d20 <PRIV_u32ProcessAdvPacket+0x2ac>
10050d1c:	2804      	cmp	r0, #4
10050d1e:	d103      	bne.n	10050d28 <PRIV_u32ProcessAdvPacket+0x2b4>
10050d20:	9919      	ldr	r1, [sp, #100]	; 0x64
10050d22:	2900      	cmp	r1, #0
10050d24:	d000      	beq.n	10050d28 <PRIV_u32ProcessAdvPacket+0x2b4>
10050d26:	2401      	movs	r4, #1
10050d28:	2d05      	cmp	r5, #5
10050d2a:	d028      	beq.n	10050d7e <PRIV_u32ProcessAdvPacket+0x30a>
10050d2c:	2d01      	cmp	r5, #1
10050d2e:	d031      	beq.n	10050d94 <PRIV_u32ProcessAdvPacket+0x320>
10050d30:	980e      	ldr	r0, [sp, #56]	; 0x38
10050d32:	2801      	cmp	r0, #1
10050d34:	d036      	beq.n	10050da4 <PRIV_u32ProcessAdvPacket+0x330>
10050d36:	9817      	ldr	r0, [sp, #92]	; 0x5c
10050d38:	f7ef fb86 	bl	10040448 <__aeabi_uread4>
10050d3c:	9915      	ldr	r1, [sp, #84]	; 0x54
10050d3e:	0200      	lsls	r0, r0, #8
10050d40:	7809      	ldrb	r1, [r1, #0]
10050d42:	0649      	lsls	r1, r1, #25
10050d44:	0fc9      	lsrs	r1, r1, #31
10050d46:	4308      	orrs	r0, r1
10050d48:	9009      	str	r0, [sp, #36]	; 0x24
10050d4a:	9817      	ldr	r0, [sp, #92]	; 0x5c
10050d4c:	1cc0      	adds	r0, r0, #3
10050d4e:	f7ef fb7b 	bl	10040448 <__aeabi_uread4>
10050d52:	0200      	lsls	r0, r0, #8
10050d54:	0a00      	lsrs	r0, r0, #8
10050d56:	900a      	str	r0, [sp, #40]	; 0x28
10050d58:	980e      	ldr	r0, [sp, #56]	; 0x38
10050d5a:	2801      	cmp	r0, #1
10050d5c:	d022      	beq.n	10050da4 <PRIV_u32ProcessAdvPacket+0x330>
10050d5e:	9816      	ldr	r0, [sp, #88]	; 0x58
10050d60:	f7ef fb72 	bl	10040448 <__aeabi_uread4>
10050d64:	9915      	ldr	r1, [sp, #84]	; 0x54
10050d66:	0200      	lsls	r0, r0, #8
10050d68:	7809      	ldrb	r1, [r1, #0]
10050d6a:	09c9      	lsrs	r1, r1, #7
10050d6c:	4308      	orrs	r0, r1
10050d6e:	900d      	str	r0, [sp, #52]	; 0x34
10050d70:	9816      	ldr	r0, [sp, #88]	; 0x58
10050d72:	1cc0      	adds	r0, r0, #3
10050d74:	f7ef fb68 	bl	10040448 <__aeabi_uread4>
10050d78:	0200      	lsls	r0, r0, #8
10050d7a:	0a00      	lsrs	r0, r0, #8
10050d7c:	e01e      	b.n	10050dbc <PRIV_u32ProcessAdvPacket+0x348>
10050d7e:	9912      	ldr	r1, [sp, #72]	; 0x48
10050d80:	2900      	cmp	r1, #0
10050d82:	d0d8      	beq.n	10050d36 <PRIV_u32ProcessAdvPacket+0x2c2>
10050d84:	2801      	cmp	r0, #1
10050d86:	d001      	beq.n	10050d8c <PRIV_u32ProcessAdvPacket+0x318>
10050d88:	2804      	cmp	r0, #4
10050d8a:	d1d4      	bne.n	10050d36 <PRIV_u32ProcessAdvPacket+0x2c2>
10050d8c:	2001      	movs	r0, #1
10050d8e:	9008      	str	r0, [sp, #32]
10050d90:	e7d1      	b.n	10050d36 <PRIV_u32ProcessAdvPacket+0x2c2>
10050d92:	e007      	b.n	10050da4 <PRIV_u32ProcessAdvPacket+0x330>
10050d94:	2101      	movs	r1, #1
10050d96:	9807      	ldr	r0, [sp, #28]
10050d98:	0289      	lsls	r1, r1, #10
10050d9a:	1840      	adds	r0, r0, r1
10050d9c:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
10050d9e:	9109      	str	r1, [sp, #36]	; 0x24
10050da0:	6e00      	ldr	r0, [r0, #96]	; 0x60
10050da2:	e7d8      	b.n	10050d56 <PRIV_u32ProcessAdvPacket+0x2e2>
10050da4:	981c      	ldr	r0, [sp, #112]	; 0x70
10050da6:	6901      	ldr	r1, [r0, #16]
10050da8:	6940      	ldr	r0, [r0, #20]
10050daa:	020a      	lsls	r2, r1, #8
10050dac:	03c3      	lsls	r3, r0, #15
10050dae:	0fdb      	lsrs	r3, r3, #31
10050db0:	0400      	lsls	r0, r0, #16
10050db2:	431a      	orrs	r2, r3
10050db4:	0a00      	lsrs	r0, r0, #8
10050db6:	0e09      	lsrs	r1, r1, #24
10050db8:	4308      	orrs	r0, r1
10050dba:	920d      	str	r2, [sp, #52]	; 0x34
10050dbc:	9010      	str	r0, [sp, #64]	; 0x40
10050dbe:	2c00      	cmp	r4, #0
10050dc0:	d172      	bne.n	10050ea8 <PRIV_u32ProcessAdvPacket+0x434>
10050dc2:	9812      	ldr	r0, [sp, #72]	; 0x48
10050dc4:	2800      	cmp	r0, #0
10050dc6:	d065      	beq.n	10050e94 <PRIV_u32ProcessAdvPacket+0x420>
10050dc8:	980b      	ldr	r0, [sp, #44]	; 0x2c
10050dca:	2800      	cmp	r0, #0
10050dcc:	d013      	beq.n	10050df6 <PRIV_u32ProcessAdvPacket+0x382>
10050dce:	9813      	ldr	r0, [sp, #76]	; 0x4c
10050dd0:	2800      	cmp	r0, #0
10050dd2:	d05f      	beq.n	10050e94 <PRIV_u32ProcessAdvPacket+0x420>
10050dd4:	991a      	ldr	r1, [sp, #104]	; 0x68
10050dd6:	6838      	ldr	r0, [r7, #0]
10050dd8:	f7ff fdf8 	bl	100509cc <PRIV_SearchAddrInScratchList>
10050ddc:	4b51      	ldr	r3, [pc, #324]	; (10050f24 <PRIV_u32ProcessAdvPacket+0x4b0>)
10050dde:	4601      	mov	r1, r0
10050de0:	229d      	movs	r2, #157	; 0x9d
10050de2:	6818      	ldr	r0, [r3, #0]
10050de4:	00d2      	lsls	r2, r2, #3
10050de6:	1882      	adds	r2, r0, r2
10050de8:	29ff      	cmp	r1, #255	; 0xff
10050dea:	d005      	beq.n	10050df8 <PRIV_u32ProcessAdvPacket+0x384>
10050dec:	29fe      	cmp	r1, #254	; 0xfe
10050dee:	d026      	beq.n	10050e3e <PRIV_u32ProcessAdvPacket+0x3ca>
10050df0:	00c8      	lsls	r0, r1, #3
10050df2:	1880      	adds	r0, r0, r2
10050df4:	79c6      	ldrb	r6, [r0, #7]
10050df6:	e081      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050df8:	2d05      	cmp	r5, #5
10050dfa:	d102      	bne.n	10050e02 <PRIV_u32ProcessAdvPacket+0x38e>
10050dfc:	990e      	ldr	r1, [sp, #56]	; 0x38
10050dfe:	2902      	cmp	r1, #2
10050e00:	d004      	beq.n	10050e0c <PRIV_u32ProcessAdvPacket+0x398>
10050e02:	21f2      	movs	r1, #242	; 0xf2
10050e04:	5c09      	ldrb	r1, [r1, r0]
10050e06:	29ff      	cmp	r1, #255	; 0xff
10050e08:	d013      	beq.n	10050e32 <PRIV_u32ProcessAdvPacket+0x3be>
10050e0a:	e018      	b.n	10050e3e <PRIV_u32ProcessAdvPacket+0x3ca>
10050e0c:	2101      	movs	r1, #1
10050e0e:	4638      	mov	r0, r7
10050e10:	f000 f992 	bl	10051138 <PRIV_u8ResolvePrivateAddress>
10050e14:	0841      	lsrs	r1, r0, #1
10050e16:	297f      	cmp	r1, #127	; 0x7f
10050e18:	d003      	beq.n	10050e22 <PRIV_u32ProcessAdvPacket+0x3ae>
10050e1a:	00c1      	lsls	r1, r0, #3
10050e1c:	981d      	ldr	r0, [sp, #116]	; 0x74
10050e1e:	1808      	adds	r0, r1, r0
10050e20:	e7e8      	b.n	10050df4 <PRIV_u32ProcessAdvPacket+0x380>
10050e22:	9908      	ldr	r1, [sp, #32]
10050e24:	9804      	ldr	r0, [sp, #16]
10050e26:	4308      	orrs	r0, r1
10050e28:	d001      	beq.n	10050e2e <PRIV_u32ProcessAdvPacket+0x3ba>
10050e2a:	2401      	movs	r4, #1
10050e2c:	e066      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050e2e:	2400      	movs	r4, #0
10050e30:	e064      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050e32:	2111      	movs	r1, #17
10050e34:	0189      	lsls	r1, r1, #6
10050e36:	1841      	adds	r1, r0, r1
10050e38:	7e49      	ldrb	r1, [r1, #25]
10050e3a:	29ff      	cmp	r1, #255	; 0xff
10050e3c:	d003      	beq.n	10050e46 <PRIV_u32ProcessAdvPacket+0x3d2>
10050e3e:	990e      	ldr	r1, [sp, #56]	; 0x38
10050e40:	2901      	cmp	r1, #1
10050e42:	d01d      	beq.n	10050e80 <PRIV_u32ProcessAdvPacket+0x40c>
10050e44:	e013      	b.n	10050e6e <PRIV_u32ProcessAdvPacket+0x3fa>
10050e46:	30ff      	adds	r0, #255	; 0xff
10050e48:	2207      	movs	r2, #7
10050e4a:	4639      	mov	r1, r7
10050e4c:	3001      	adds	r0, #1
10050e4e:	f7ef fc98 	bl	10040782 <Osal_MemCpy>
10050e52:	4934      	ldr	r1, [pc, #208]	; (10050f24 <PRIV_u32ProcessAdvPacket+0x4b0>)
10050e54:	2000      	movs	r0, #0
10050e56:	6809      	ldr	r1, [r1, #0]
10050e58:	22f2      	movs	r2, #242	; 0xf2
10050e5a:	5450      	strb	r0, [r2, r1]
10050e5c:	4608      	mov	r0, r1
10050e5e:	3040      	adds	r0, #64	; 0x40
10050e60:	79c2      	ldrb	r2, [r0, #7]
10050e62:	23ef      	movs	r3, #239	; 0xef
10050e64:	401a      	ands	r2, r3
10050e66:	71c2      	strb	r2, [r0, #7]
10050e68:	980e      	ldr	r0, [sp, #56]	; 0x38
10050e6a:	2801      	cmp	r0, #1
10050e6c:	d001      	beq.n	10050e72 <PRIV_u32ProcessAdvPacket+0x3fe>
10050e6e:	9c04      	ldr	r4, [sp, #16]
10050e70:	e044      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050e72:	2023      	movs	r0, #35	; 0x23
10050e74:	0140      	lsls	r0, r0, #5
10050e76:	1808      	adds	r0, r1, r0
10050e78:	e005      	b.n	10050e86 <PRIV_u32ProcessAdvPacket+0x412>
10050e7a:	2001      	movs	r0, #1
10050e7c:	900f      	str	r0, [sp, #60]	; 0x3c
10050e7e:	e03d      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050e80:	2123      	movs	r1, #35	; 0x23
10050e82:	0149      	lsls	r1, r1, #5
10050e84:	1840      	adds	r0, r0, r1
10050e86:	79c0      	ldrb	r0, [r0, #7]
10050e88:	2802      	cmp	r0, #2
10050e8a:	d2ce      	bcs.n	10050e2a <PRIV_u32ProcessAdvPacket+0x3b6>
10050e8c:	980c      	ldr	r0, [sp, #48]	; 0x30
10050e8e:	2800      	cmp	r0, #0
10050e90:	d0f3      	beq.n	10050e7a <PRIV_u32ProcessAdvPacket+0x406>
10050e92:	e7ca      	b.n	10050e2a <PRIV_u32ProcessAdvPacket+0x3b6>
10050e94:	9819      	ldr	r0, [sp, #100]	; 0x64
10050e96:	2800      	cmp	r0, #0
10050e98:	d002      	beq.n	10050ea0 <PRIV_u32ProcessAdvPacket+0x42c>
10050e9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
10050e9c:	2801      	cmp	r0, #1
10050e9e:	d004      	beq.n	10050eaa <PRIV_u32ProcessAdvPacket+0x436>
10050ea0:	9813      	ldr	r0, [sp, #76]	; 0x4c
10050ea2:	2800      	cmp	r0, #0
10050ea4:	d10c      	bne.n	10050ec0 <PRIV_u32ProcessAdvPacket+0x44c>
10050ea6:	e004      	b.n	10050eb2 <PRIV_u32ProcessAdvPacket+0x43e>
10050ea8:	e02f      	b.n	10050f0a <PRIV_u32ProcessAdvPacket+0x496>
10050eaa:	2000      	movs	r0, #0
10050eac:	9c04      	ldr	r4, [sp, #16]
10050eae:	901b      	str	r0, [sp, #108]	; 0x6c
10050eb0:	e024      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050eb2:	2123      	movs	r1, #35	; 0x23
10050eb4:	9807      	ldr	r0, [sp, #28]
10050eb6:	0149      	lsls	r1, r1, #5
10050eb8:	1840      	adds	r0, r0, r1
10050eba:	7a00      	ldrb	r0, [r0, #8]
10050ebc:	2800      	cmp	r0, #0
10050ebe:	d01d      	beq.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050ec0:	991a      	ldr	r1, [sp, #104]	; 0x68
10050ec2:	6838      	ldr	r0, [r7, #0]
10050ec4:	f7ff fd5a 	bl	1005097c <PRIV_SearchAddrInRPAList>
10050ec8:	28ff      	cmp	r0, #255	; 0xff
10050eca:	d017      	beq.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050ecc:	00c1      	lsls	r1, r0, #3
10050ece:	981d      	ldr	r0, [sp, #116]	; 0x74
10050ed0:	1808      	adds	r0, r1, r0
10050ed2:	79c6      	ldrb	r6, [r0, #7]
10050ed4:	2037      	movs	r0, #55	; 0x37
10050ed6:	991f      	ldr	r1, [sp, #124]	; 0x7c
10050ed8:	4370      	muls	r0, r6
10050eda:	1840      	adds	r0, r0, r1
10050edc:	7d01      	ldrb	r1, [r0, #20]
10050ede:	2900      	cmp	r1, #0
10050ee0:	d000      	beq.n	10050ee4 <PRIV_u32ProcessAdvPacket+0x470>
10050ee2:	2101      	movs	r1, #1
10050ee4:	3020      	adds	r0, #32
10050ee6:	7d80      	ldrb	r0, [r0, #22]
10050ee8:	2800      	cmp	r0, #0
10050eea:	d003      	beq.n	10050ef4 <PRIV_u32ProcessAdvPacket+0x480>
10050eec:	2000      	movs	r0, #0
10050eee:	2900      	cmp	r1, #0
10050ef0:	d002      	beq.n	10050ef8 <PRIV_u32ProcessAdvPacket+0x484>
10050ef2:	e003      	b.n	10050efc <PRIV_u32ProcessAdvPacket+0x488>
10050ef4:	2001      	movs	r0, #1
10050ef6:	e7fa      	b.n	10050eee <PRIV_u32ProcessAdvPacket+0x47a>
10050ef8:	2800      	cmp	r0, #0
10050efa:	d196      	bne.n	10050e2a <PRIV_u32ProcessAdvPacket+0x3b6>
10050efc:	4809      	ldr	r0, [pc, #36]	; (10050f24 <PRIV_u32ProcessAdvPacket+0x4b0>)
10050efe:	6801      	ldr	r1, [r0, #0]
10050f00:	2011      	movs	r0, #17
10050f02:	0180      	lsls	r0, r0, #6
10050f04:	1808      	adds	r0, r1, r0
10050f06:	7506      	strb	r6, [r0, #20]
10050f08:	7546      	strb	r6, [r0, #21]
10050f0a:	9813      	ldr	r0, [sp, #76]	; 0x4c
10050f0c:	2800      	cmp	r0, #0
10050f0e:	d04e      	beq.n	10050fae <PRIV_u32ProcessAdvPacket+0x53a>
10050f10:	2eff      	cmp	r6, #255	; 0xff
10050f12:	d010      	beq.n	10050f36 <PRIV_u32ProcessAdvPacket+0x4c2>
10050f14:	9808      	ldr	r0, [sp, #32]
10050f16:	2800      	cmp	r0, #0
10050f18:	d00d      	beq.n	10050f36 <PRIV_u32ProcessAdvPacket+0x4c2>
10050f1a:	4802      	ldr	r0, [pc, #8]	; (10050f24 <PRIV_u32ProcessAdvPacket+0x4b0>)
10050f1c:	6801      	ldr	r1, [r0, #0]
10050f1e:	2011      	movs	r0, #17
10050f20:	0180      	lsls	r0, r0, #6
10050f22:	e003      	b.n	10050f2c <PRIV_u32ProcessAdvPacket+0x4b8>
10050f24:	20000d64 	.word	0x20000d64
10050f28:	0000046c 	.word	0x0000046c
10050f2c:	1808      	adds	r0, r1, r0
10050f2e:	7d80      	ldrb	r0, [r0, #22]
10050f30:	42b0      	cmp	r0, r6
10050f32:	d000      	beq.n	10050f36 <PRIV_u32ProcessAdvPacket+0x4c2>
10050f34:	2401      	movs	r4, #1
10050f36:	981e      	ldr	r0, [sp, #120]	; 0x78
10050f38:	2800      	cmp	r0, #0
10050f3a:	d00b      	beq.n	10050f54 <PRIV_u32ProcessAdvPacket+0x4e0>
10050f3c:	2eff      	cmp	r6, #255	; 0xff
10050f3e:	d009      	beq.n	10050f54 <PRIV_u32ProcessAdvPacket+0x4e0>
10050f40:	4836      	ldr	r0, [pc, #216]	; (1005101c <PRIV_u32ProcessAdvPacket+0x5a8>)
10050f42:	6801      	ldr	r1, [r0, #0]
10050f44:	2011      	movs	r0, #17
10050f46:	0180      	lsls	r0, r0, #6
10050f48:	1808      	adds	r0, r1, r0
10050f4a:	7e80      	ldrb	r0, [r0, #26]
10050f4c:	42b0      	cmp	r0, r6
10050f4e:	d001      	beq.n	10050f54 <PRIV_u32ProcessAdvPacket+0x4e0>
10050f50:	2401      	movs	r4, #1
10050f52:	e045      	b.n	10050fe0 <PRIV_u32ProcessAdvPacket+0x56c>
10050f54:	2c00      	cmp	r4, #0
10050f56:	d143      	bne.n	10050fe0 <PRIV_u32ProcessAdvPacket+0x56c>
10050f58:	9814      	ldr	r0, [sp, #80]	; 0x50
10050f5a:	2800      	cmp	r0, #0
10050f5c:	d029      	beq.n	10050fb2 <PRIV_u32ProcessAdvPacket+0x53e>
10050f5e:	2d01      	cmp	r5, #1
10050f60:	d127      	bne.n	10050fb2 <PRIV_u32ProcessAdvPacket+0x53e>
10050f62:	4b2e      	ldr	r3, [pc, #184]	; (1005101c <PRIV_u32ProcessAdvPacket+0x5a8>)
10050f64:	9a01      	ldr	r2, [sp, #4]
10050f66:	6818      	ldr	r0, [r3, #0]
10050f68:	1dc1      	adds	r1, r0, #7
10050f6a:	31f9      	adds	r1, #249	; 0xf9
10050f6c:	690d      	ldr	r5, [r1, #16]
10050f6e:	42aa      	cmp	r2, r5
10050f70:	d105      	bne.n	10050f7e <PRIV_u32ProcessAdvPacket+0x50a>
10050f72:	9a02      	ldr	r2, [sp, #8]
10050f74:	6949      	ldr	r1, [r1, #20]
10050f76:	0212      	lsls	r2, r2, #8
10050f78:	0209      	lsls	r1, r1, #8
10050f7a:	428a      	cmp	r2, r1
10050f7c:	d019      	beq.n	10050fb2 <PRIV_u32ProcessAdvPacket+0x53e>
10050f7e:	2511      	movs	r5, #17
10050f80:	01ad      	lsls	r5, r5, #6
10050f82:	1941      	adds	r1, r0, r5
10050f84:	7e49      	ldrb	r1, [r1, #25]
10050f86:	9c18      	ldr	r4, [sp, #96]	; 0x60
10050f88:	29ff      	cmp	r1, #255	; 0xff
10050f8a:	d110      	bne.n	10050fae <PRIV_u32ProcessAdvPacket+0x53a>
10050f8c:	30ff      	adds	r0, #255	; 0xff
10050f8e:	2207      	movs	r2, #7
10050f90:	a901      	add	r1, sp, #4
10050f92:	3009      	adds	r0, #9
10050f94:	f7ef fbf5 	bl	10040782 <Osal_MemCpy>
10050f98:	4820      	ldr	r0, [pc, #128]	; (1005101c <PRIV_u32ProcessAdvPacket+0x5a8>)
10050f9a:	23ef      	movs	r3, #239	; 0xef
10050f9c:	6801      	ldr	r1, [r0, #0]
10050f9e:	4608      	mov	r0, r1
10050fa0:	3040      	adds	r0, #64	; 0x40
10050fa2:	79c2      	ldrb	r2, [r0, #7]
10050fa4:	401a      	ands	r2, r3
10050fa6:	71c2      	strb	r2, [r0, #7]
10050fa8:	2000      	movs	r0, #0
10050faa:	1949      	adds	r1, r1, r5
10050fac:	7648      	strb	r0, [r1, #25]
10050fae:	2c00      	cmp	r4, #0
10050fb0:	d116      	bne.n	10050fe0 <PRIV_u32ProcessAdvPacket+0x56c>
10050fb2:	981b      	ldr	r0, [sp, #108]	; 0x6c
10050fb4:	2800      	cmp	r0, #0
10050fb6:	d013      	beq.n	10050fe0 <PRIV_u32ProcessAdvPacket+0x56c>
10050fb8:	980c      	ldr	r0, [sp, #48]	; 0x30
10050fba:	2eff      	cmp	r6, #255	; 0xff
10050fbc:	d007      	beq.n	10050fce <PRIV_u32ProcessAdvPacket+0x55a>
10050fbe:	2800      	cmp	r0, #0
10050fc0:	d00e      	beq.n	10050fe0 <PRIV_u32ProcessAdvPacket+0x56c>
10050fc2:	2037      	movs	r0, #55	; 0x37
10050fc4:	4346      	muls	r6, r0
10050fc6:	981f      	ldr	r0, [sp, #124]	; 0x7c
10050fc8:	1830      	adds	r0, r6, r0
10050fca:	7880      	ldrb	r0, [r0, #2]
10050fcc:	e006      	b.n	10050fdc <PRIV_u32ProcessAdvPacket+0x568>
10050fce:	2800      	cmp	r0, #0
10050fd0:	d006      	beq.n	10050fe0 <PRIV_u32ProcessAdvPacket+0x56c>
10050fd2:	6878      	ldr	r0, [r7, #4]
10050fd4:	0201      	lsls	r1, r0, #8
10050fd6:	6838      	ldr	r0, [r7, #0]
10050fd8:	f7ff fd20 	bl	10050a1c <PRIV_SearchAddrInWhiteList>
10050fdc:	2800      	cmp	r0, #0
10050fde:	d0b7      	beq.n	10050f50 <PRIV_u32ProcessAdvPacket+0x4dc>
10050fe0:	980f      	ldr	r0, [sp, #60]	; 0x3c
10050fe2:	2800      	cmp	r0, #0
10050fe4:	d007      	beq.n	10050ff6 <PRIV_u32ProcessAdvPacket+0x582>
10050fe6:	980d      	ldr	r0, [sp, #52]	; 0x34
10050fe8:	6839      	ldr	r1, [r7, #0]
10050fea:	4288      	cmp	r0, r1
10050fec:	d110      	bne.n	10051010 <PRIV_u32ProcessAdvPacket+0x59c>
10050fee:	9810      	ldr	r0, [sp, #64]	; 0x40
10050ff0:	6879      	ldr	r1, [r7, #4]
10050ff2:	4288      	cmp	r0, r1
10050ff4:	d10c      	bne.n	10051010 <PRIV_u32ProcessAdvPacket+0x59c>
10050ff6:	2c00      	cmp	r4, #0
10050ff8:	d10a      	bne.n	10051010 <PRIV_u32ProcessAdvPacket+0x59c>
10050ffa:	9811      	ldr	r0, [sp, #68]	; 0x44
10050ffc:	2800      	cmp	r0, #0
10050ffe:	d00a      	beq.n	10051016 <PRIV_u32ProcessAdvPacket+0x5a2>
10051000:	9901      	ldr	r1, [sp, #4]
10051002:	9809      	ldr	r0, [sp, #36]	; 0x24
10051004:	4288      	cmp	r0, r1
10051006:	d103      	bne.n	10051010 <PRIV_u32ProcessAdvPacket+0x59c>
10051008:	9902      	ldr	r1, [sp, #8]
1005100a:	980a      	ldr	r0, [sp, #40]	; 0x28
1005100c:	4288      	cmp	r0, r1
1005100e:	d002      	beq.n	10051016 <PRIV_u32ProcessAdvPacket+0x5a2>
10051010:	2001      	movs	r0, #1
10051012:	b021      	add	sp, #132	; 0x84
10051014:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051016:	2000      	movs	r0, #0
10051018:	e7fb      	b.n	10051012 <PRIV_u32ProcessAdvPacket+0x59e>
1005101a:	0000      	.short	0x0000
1005101c:	20000d64 	.word	0x20000d64

10051020 <PRIV_u8OfflineProcessing>:
10051020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051022:	f7fc fb4f 	bl	1004d6c4 <HAL_VTimerGetCurrentTime_sysT32>
10051026:	4c43      	ldr	r4, [pc, #268]	; (10051134 <PRIV_u8OfflineProcessing+0x114>)
10051028:	4607      	mov	r7, r0
1005102a:	6821      	ldr	r1, [r4, #0]
1005102c:	460a      	mov	r2, r1
1005102e:	3180      	adds	r1, #128	; 0x80
10051030:	6f88      	ldr	r0, [r1, #120]	; 0x78
10051032:	6fcb      	ldr	r3, [r1, #124]	; 0x7c
10051034:	1a38      	subs	r0, r7, r0
10051036:	1818      	adds	r0, r3, r0
10051038:	67c8      	str	r0, [r1, #124]	; 0x7c
1005103a:	6f4b      	ldr	r3, [r1, #116]	; 0x74
1005103c:	0b00      	lsrs	r0, r0, #12
1005103e:	4298      	cmp	r0, r3
10051040:	d336      	bcc.n	100510b0 <PRIV_u8OfflineProcessing+0x90>
10051042:	2000      	movs	r0, #0
10051044:	32e0      	adds	r2, #224	; 0xe0
10051046:	67c8      	str	r0, [r1, #124]	; 0x7c
10051048:	7450      	strb	r0, [r2, #17]
1005104a:	7c10      	ldrb	r0, [r2, #16]
1005104c:	2800      	cmp	r0, #0
1005104e:	d02b      	beq.n	100510a8 <PRIV_u8OfflineProcessing+0x88>
10051050:	2500      	movs	r5, #0
10051052:	2623      	movs	r6, #35	; 0x23
10051054:	0176      	lsls	r6, r6, #5
10051056:	e00b      	b.n	10051070 <PRIV_u8OfflineProcessing+0x50>
10051058:	2137      	movs	r1, #55	; 0x37
1005105a:	4369      	muls	r1, r5
1005105c:	1808      	adds	r0, r1, r0
1005105e:	4601      	mov	r1, r0
10051060:	31ff      	adds	r1, #255	; 0xff
10051062:	30ff      	adds	r0, #255	; 0xff
10051064:	3140      	adds	r1, #64	; 0x40
10051066:	3030      	adds	r0, #48	; 0x30
10051068:	f000 f908 	bl	1005127c <PRIV_vGeneratePrivateAddress>
1005106c:	1c6d      	adds	r5, r5, #1
1005106e:	b2ed      	uxtb	r5, r5
10051070:	6820      	ldr	r0, [r4, #0]
10051072:	1981      	adds	r1, r0, r6
10051074:	7a09      	ldrb	r1, [r1, #8]
10051076:	42a9      	cmp	r1, r5
10051078:	d8ee      	bhi.n	10051058 <PRIV_u8OfflineProcessing+0x38>
1005107a:	2500      	movs	r5, #0
1005107c:	e00b      	b.n	10051096 <PRIV_u8OfflineProcessing+0x76>
1005107e:	2137      	movs	r1, #55	; 0x37
10051080:	4369      	muls	r1, r5
10051082:	1808      	adds	r0, r1, r0
10051084:	4601      	mov	r1, r0
10051086:	31ff      	adds	r1, #255	; 0xff
10051088:	30ff      	adds	r0, #255	; 0xff
1005108a:	3147      	adds	r1, #71	; 0x47
1005108c:	301f      	adds	r0, #31
1005108e:	f000 f8f5 	bl	1005127c <PRIV_vGeneratePrivateAddress>
10051092:	1c6d      	adds	r5, r5, #1
10051094:	b2ed      	uxtb	r5, r5
10051096:	6820      	ldr	r0, [r4, #0]
10051098:	1981      	adds	r1, r0, r6
1005109a:	7a09      	ldrb	r1, [r1, #8]
1005109c:	42a9      	cmp	r1, r5
1005109e:	d8ee      	bhi.n	1005107e <PRIV_u8OfflineProcessing+0x5e>
100510a0:	6821      	ldr	r1, [r4, #0]
100510a2:	2001      	movs	r0, #1
100510a4:	1989      	adds	r1, r1, r6
100510a6:	7188      	strb	r0, [r1, #6]
100510a8:	6821      	ldr	r1, [r4, #0]
100510aa:	2001      	movs	r0, #1
100510ac:	31e0      	adds	r1, #224	; 0xe0
100510ae:	7448      	strb	r0, [r1, #17]
100510b0:	6820      	ldr	r0, [r4, #0]
100510b2:	21f8      	movs	r1, #248	; 0xf8
100510b4:	500f      	str	r7, [r1, r0]
100510b6:	b672      	cpsid	i
100510b8:	4601      	mov	r1, r0
100510ba:	3140      	adds	r1, #64	; 0x40
100510bc:	79ca      	ldrb	r2, [r1, #7]
100510be:	2310      	movs	r3, #16
100510c0:	431a      	orrs	r2, r3
100510c2:	71ca      	strb	r2, [r1, #7]
100510c4:	b662      	cpsie	i
100510c6:	4601      	mov	r1, r0
100510c8:	31e0      	adds	r1, #224	; 0xe0
100510ca:	7c0a      	ldrb	r2, [r1, #16]
100510cc:	2a00      	cmp	r2, #0
100510ce:	d024      	beq.n	1005111a <PRIV_u8OfflineProcessing+0xfa>
100510d0:	7c89      	ldrb	r1, [r1, #18]
100510d2:	25ff      	movs	r5, #255	; 0xff
100510d4:	2900      	cmp	r1, #0
100510d6:	d106      	bne.n	100510e6 <PRIV_u8OfflineProcessing+0xc6>
100510d8:	30ff      	adds	r0, #255	; 0xff
100510da:	3001      	adds	r0, #1
100510dc:	f000 f82c 	bl	10051138 <PRIV_u8ResolvePrivateAddress>
100510e0:	6820      	ldr	r0, [r4, #0]
100510e2:	30e0      	adds	r0, #224	; 0xe0
100510e4:	7485      	strb	r5, [r0, #18]
100510e6:	2611      	movs	r6, #17
100510e8:	6821      	ldr	r1, [r4, #0]
100510ea:	01b6      	lsls	r6, r6, #6
100510ec:	1988      	adds	r0, r1, r6
100510ee:	7e40      	ldrb	r0, [r0, #25]
100510f0:	28ff      	cmp	r0, #255	; 0xff
100510f2:	d013      	beq.n	1005111c <PRIV_u8OfflineProcessing+0xfc>
100510f4:	2237      	movs	r2, #55	; 0x37
100510f6:	4350      	muls	r0, r2
100510f8:	1840      	adds	r0, r0, r1
100510fa:	30ff      	adds	r0, #255	; 0xff
100510fc:	31ff      	adds	r1, #255	; 0xff
100510fe:	2200      	movs	r2, #0
10051100:	3030      	adds	r0, #48	; 0x30
10051102:	3109      	adds	r1, #9
10051104:	f000 f8a0 	bl	10051248 <PRIV_u8ResolvePrivateAddressUnit>
10051108:	2800      	cmp	r0, #0
1005110a:	d008      	beq.n	1005111e <PRIV_u8OfflineProcessing+0xfe>
1005110c:	6821      	ldr	r1, [r4, #0]
1005110e:	2000      	movs	r0, #0
10051110:	1989      	adds	r1, r1, r6
10051112:	75c8      	strb	r0, [r1, #23]
10051114:	6820      	ldr	r0, [r4, #0]
10051116:	1980      	adds	r0, r0, r6
10051118:	7645      	strb	r5, [r0, #25]
1005111a:	2000      	movs	r0, #0
1005111c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005111e:	6820      	ldr	r0, [r4, #0]
10051120:	2101      	movs	r1, #1
10051122:	1982      	adds	r2, r0, r6
10051124:	30ff      	adds	r0, #255	; 0xff
10051126:	75d1      	strb	r1, [r2, #23]
10051128:	3001      	adds	r0, #1
1005112a:	6881      	ldr	r1, [r0, #8]
1005112c:	6101      	str	r1, [r0, #16]
1005112e:	68c1      	ldr	r1, [r0, #12]
10051130:	6141      	str	r1, [r0, #20]
10051132:	e7ef      	b.n	10051114 <PRIV_u8OfflineProcessing+0xf4>
10051134:	20000d64 	.word	0x20000d64

10051138 <PRIV_u8ResolvePrivateAddress>:
10051138:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1005113a:	4606      	mov	r6, r0
1005113c:	b08d      	sub	sp, #52	; 0x34
1005113e:	20ff      	movs	r0, #255	; 0xff
10051140:	4c3e      	ldr	r4, [pc, #248]	; (1005123c <PRIV_u8ResolvePrivateAddress+0x104>)
10051142:	9003      	str	r0, [sp, #12]
10051144:	493e      	ldr	r1, [pc, #248]	; (10051240 <PRIV_u8ResolvePrivateAddress+0x108>)
10051146:	6820      	ldr	r0, [r4, #0]
10051148:	1847      	adds	r7, r0, r1
1005114a:	219d      	movs	r1, #157	; 0x9d
1005114c:	00c9      	lsls	r1, r1, #3
1005114e:	1840      	adds	r0, r0, r1
10051150:	9004      	str	r0, [sp, #16]
10051152:	4631      	mov	r1, r6
10051154:	2002      	movs	r0, #2
10051156:	f7ff fb73 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
1005115a:	28ff      	cmp	r0, #255	; 0xff
1005115c:	d14e      	bne.n	100511fc <PRIV_u8ResolvePrivateAddress+0xc4>
1005115e:	2000      	movs	r0, #0
10051160:	9005      	str	r0, [sp, #20]
10051162:	2023      	movs	r0, #35	; 0x23
10051164:	6821      	ldr	r1, [r4, #0]
10051166:	0140      	lsls	r0, r0, #5
10051168:	1809      	adds	r1, r1, r0
1005116a:	7a09      	ldrb	r1, [r1, #8]
1005116c:	2900      	cmp	r1, #0
1005116e:	d935      	bls.n	100511dc <PRIV_u8ResolvePrivateAddress+0xa4>
10051170:	79f8      	ldrb	r0, [r7, #7]
10051172:	2137      	movs	r1, #55	; 0x37
10051174:	4348      	muls	r0, r1
10051176:	6821      	ldr	r1, [r4, #0]
10051178:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1005117a:	1845      	adds	r5, r0, r1
1005117c:	4628      	mov	r0, r5
1005117e:	30ff      	adds	r0, #255	; 0xff
10051180:	301f      	adds	r0, #31
10051182:	4684      	mov	ip, r0
10051184:	482f      	ldr	r0, [pc, #188]	; (10051244 <PRIV_u8ResolvePrivateAddress+0x10c>)
10051186:	7931      	ldrb	r1, [r6, #4]
10051188:	7001      	strb	r1, [r0, #0]
1005118a:	7971      	ldrb	r1, [r6, #5]
1005118c:	7041      	strb	r1, [r0, #1]
1005118e:	79b1      	ldrb	r1, [r6, #6]
10051190:	7081      	strb	r1, [r0, #2]
10051192:	4601      	mov	r1, r0
10051194:	35ff      	adds	r5, #255	; 0xff
10051196:	aa06      	add	r2, sp, #24
10051198:	4660      	mov	r0, ip
1005119a:	351b      	adds	r5, #27
1005119c:	f001 ff4e 	bl	1005303c <LL_Encrypt_Plain_Data>
100511a0:	2203      	movs	r2, #3
100511a2:	1c71      	adds	r1, r6, #1
100511a4:	a806      	add	r0, sp, #24
100511a6:	f7ef faf4 	bl	10040792 <Osal_MemCmp>
100511aa:	2800      	cmp	r0, #0
100511ac:	d029      	beq.n	10051202 <PRIV_u8ResolvePrivateAddress+0xca>
100511ae:	7d28      	ldrb	r0, [r5, #20]
100511b0:	2801      	cmp	r0, #1
100511b2:	d106      	bne.n	100511c2 <PRIV_u8ResolvePrivateAddress+0x8a>
100511b4:	2207      	movs	r2, #7
100511b6:	4639      	mov	r1, r7
100511b8:	4630      	mov	r0, r6
100511ba:	f7ef faea 	bl	10040792 <Osal_MemCmp>
100511be:	2800      	cmp	r0, #0
100511c0:	d01f      	beq.n	10051202 <PRIV_u8ResolvePrivateAddress+0xca>
100511c2:	9805      	ldr	r0, [sp, #20]
100511c4:	3708      	adds	r7, #8
100511c6:	1c40      	adds	r0, r0, #1
100511c8:	b2c0      	uxtb	r0, r0
100511ca:	9005      	str	r0, [sp, #20]
100511cc:	2023      	movs	r0, #35	; 0x23
100511ce:	6821      	ldr	r1, [r4, #0]
100511d0:	0140      	lsls	r0, r0, #5
100511d2:	1808      	adds	r0, r1, r0
100511d4:	7a01      	ldrb	r1, [r0, #8]
100511d6:	9805      	ldr	r0, [sp, #20]
100511d8:	4281      	cmp	r1, r0
100511da:	d8c9      	bhi.n	10051170 <PRIV_u8ResolvePrivateAddress+0x38>
100511dc:	6821      	ldr	r1, [r4, #0]
100511de:	2000      	movs	r0, #0
100511e0:	31e0      	adds	r1, #224	; 0xe0
100511e2:	7448      	strb	r0, [r1, #17]
100511e4:	4631      	mov	r1, r6
100511e6:	2002      	movs	r0, #2
100511e8:	f7ff f986 	bl	100504f8 <PRIVWHIT_u8AddAddrInList>
100511ec:	6822      	ldr	r2, [r4, #0]
100511ee:	2101      	movs	r1, #1
100511f0:	32e0      	adds	r2, #224	; 0xe0
100511f2:	7451      	strb	r1, [r2, #17]
100511f4:	28ff      	cmp	r0, #255	; 0xff
100511f6:	d001      	beq.n	100511fc <PRIV_u8ResolvePrivateAddress+0xc4>
100511f8:	20fe      	movs	r0, #254	; 0xfe
100511fa:	9003      	str	r0, [sp, #12]
100511fc:	9803      	ldr	r0, [sp, #12]
100511fe:	b00f      	add	sp, #60	; 0x3c
10051200:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051202:	9805      	ldr	r0, [sp, #20]
10051204:	9003      	str	r0, [sp, #12]
10051206:	6821      	ldr	r1, [r4, #0]
10051208:	2000      	movs	r0, #0
1005120a:	31e0      	adds	r1, #224	; 0xe0
1005120c:	7448      	strb	r0, [r1, #17]
1005120e:	7869      	ldrb	r1, [r5, #1]
10051210:	2001      	movs	r0, #1
10051212:	f7ff fa69 	bl	100506e8 <PRIVWHIT_u8RemoveAddrInList>
10051216:	4631      	mov	r1, r6
10051218:	2001      	movs	r0, #1
1005121a:	f7ff f96d 	bl	100504f8 <PRIVWHIT_u8AddAddrInList>
1005121e:	7068      	strb	r0, [r5, #1]
10051220:	00c2      	lsls	r2, r0, #3
10051222:	9804      	ldr	r0, [sp, #16]
10051224:	79f9      	ldrb	r1, [r7, #7]
10051226:	1810      	adds	r0, r2, r0
10051228:	71c1      	strb	r1, [r0, #7]
1005122a:	6821      	ldr	r1, [r4, #0]
1005122c:	2001      	movs	r0, #1
1005122e:	31e0      	adds	r1, #224	; 0xe0
10051230:	7448      	strb	r0, [r1, #17]
10051232:	9803      	ldr	r0, [sp, #12]
10051234:	28ff      	cmp	r0, #255	; 0xff
10051236:	d0d1      	beq.n	100511dc <PRIV_u8ResolvePrivateAddress+0xa4>
10051238:	e7e0      	b.n	100511fc <PRIV_u8ResolvePrivateAddress+0xc4>
1005123a:	0000      	.short	0x0000
1005123c:	20000d64 	.word	0x20000d64
10051240:	0000046c 	.word	0x0000046c
10051244:	200002cc 	.word	0x200002cc

10051248 <PRIV_u8ResolvePrivateAddressUnit>:
10051248:	b510      	push	{r4, lr}
1005124a:	460c      	mov	r4, r1
1005124c:	790b      	ldrb	r3, [r1, #4]
1005124e:	490a      	ldr	r1, [pc, #40]	; (10051278 <PRIV_u8ResolvePrivateAddressUnit+0x30>)
10051250:	b084      	sub	sp, #16
10051252:	700b      	strb	r3, [r1, #0]
10051254:	7963      	ldrb	r3, [r4, #5]
10051256:	704b      	strb	r3, [r1, #1]
10051258:	79a3      	ldrb	r3, [r4, #6]
1005125a:	708b      	strb	r3, [r1, #2]
1005125c:	4613      	mov	r3, r2
1005125e:	466a      	mov	r2, sp
10051260:	f001 feec 	bl	1005303c <LL_Encrypt_Plain_Data>
10051264:	2203      	movs	r2, #3
10051266:	1c61      	adds	r1, r4, #1
10051268:	4668      	mov	r0, sp
1005126a:	f7ef fa92 	bl	10040792 <Osal_MemCmp>
1005126e:	2800      	cmp	r0, #0
10051270:	d000      	beq.n	10051274 <PRIV_u8ResolvePrivateAddressUnit+0x2c>
10051272:	2001      	movs	r0, #1
10051274:	b004      	add	sp, #16
10051276:	bd10      	pop	{r4, pc}
10051278:	200002cc 	.word	0x200002cc

1005127c <PRIV_vGeneratePrivateAddress>:
1005127c:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1005127e:	b089      	sub	sp, #36	; 0x24
10051280:	460d      	mov	r5, r1
10051282:	f7fb fb60 	bl	1004c946 <Hal_Get_Random_Number32>
10051286:	0280      	lsls	r0, r0, #10
10051288:	0a80      	lsrs	r0, r0, #10
1005128a:	2101      	movs	r1, #1
1005128c:	0589      	lsls	r1, r1, #22
1005128e:	4308      	orrs	r0, r1
10051290:	2200      	movs	r2, #0
10051292:	466b      	mov	r3, sp
10051294:	2410      	movs	r4, #16
10051296:	4611      	mov	r1, r2
10051298:	e001      	b.n	1005129e <PRIV_vGeneratePrivateAddress+0x22>
1005129a:	2a03      	cmp	r2, #3
1005129c:	d204      	bcs.n	100512a8 <PRIV_vGeneratePrivateAddress+0x2c>
1005129e:	00d7      	lsls	r7, r2, #3
100512a0:	4606      	mov	r6, r0
100512a2:	40fe      	lsrs	r6, r7
100512a4:	701e      	strb	r6, [r3, #0]
100512a6:	e000      	b.n	100512aa <PRIV_vGeneratePrivateAddress+0x2e>
100512a8:	7019      	strb	r1, [r3, #0]
100512aa:	1c52      	adds	r2, r2, #1
100512ac:	1c5b      	adds	r3, r3, #1
100512ae:	1e64      	subs	r4, r4, #1
100512b0:	0624      	lsls	r4, r4, #24
100512b2:	0e24      	lsrs	r4, r4, #24
100512b4:	d1f1      	bne.n	1005129a <PRIV_vGeneratePrivateAddress+0x1e>
100512b6:	2300      	movs	r3, #0
100512b8:	aa04      	add	r2, sp, #16
100512ba:	4669      	mov	r1, sp
100512bc:	9809      	ldr	r0, [sp, #36]	; 0x24
100512be:	f001 febd 	bl	1005303c <LL_Encrypt_Plain_Data>
100512c2:	2203      	movs	r2, #3
100512c4:	4669      	mov	r1, sp
100512c6:	1d28      	adds	r0, r5, #4
100512c8:	f7ef fa5b 	bl	10040782 <Osal_MemCpy>
100512cc:	2203      	movs	r2, #3
100512ce:	a904      	add	r1, sp, #16
100512d0:	1c68      	adds	r0, r5, #1
100512d2:	f7ef fa56 	bl	10040782 <Osal_MemCpy>
100512d6:	2001      	movs	r0, #1
100512d8:	7028      	strb	r0, [r5, #0]
100512da:	b00b      	add	sp, #44	; 0x2c
100512dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

100512e0 <PRIV_vGenerate_hci_le_direct_advertising_report_event>:
100512e0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100512e2:	495b      	ldr	r1, [pc, #364]	; (10051450 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x170>)
100512e4:	4696      	mov	lr, r2
100512e6:	6809      	ldr	r1, [r1, #0]
100512e8:	4a5a      	ldr	r2, [pc, #360]	; (10051454 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x174>)
100512ea:	b08d      	sub	sp, #52	; 0x34
100512ec:	188d      	adds	r5, r1, r2
100512ee:	2237      	movs	r2, #55	; 0x37
100512f0:	0152      	lsls	r2, r2, #5
100512f2:	188a      	adds	r2, r1, r2
100512f4:	4694      	mov	ip, r2
100512f6:	7852      	ldrb	r2, [r2, #1]
100512f8:	2711      	movs	r7, #17
100512fa:	9b16      	ldr	r3, [sp, #88]	; 0x58
100512fc:	9204      	str	r2, [sp, #16]
100512fe:	460c      	mov	r4, r1
10051300:	01bf      	lsls	r7, r7, #6
10051302:	2000      	movs	r0, #0
10051304:	9e17      	ldr	r6, [sp, #92]	; 0x5c
10051306:	0692      	lsls	r2, r2, #26
10051308:	34a0      	adds	r4, #160	; 0xa0
1005130a:	19cf      	adds	r7, r1, r7
1005130c:	3308      	adds	r3, #8
1005130e:	2a00      	cmp	r2, #0
10051310:	da3d      	bge.n	1005138e <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xae>
10051312:	4662      	mov	r2, ip
10051314:	78d2      	ldrb	r2, [r2, #3]
10051316:	0752      	lsls	r2, r2, #29
10051318:	d539      	bpl.n	1005138e <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xae>
1005131a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1005131c:	2a01      	cmp	r2, #1
1005131e:	d936      	bls.n	1005138e <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xae>
10051320:	4672      	mov	r2, lr
10051322:	2a01      	cmp	r2, #1
10051324:	d133      	bne.n	1005138e <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xae>
10051326:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10051328:	2a00      	cmp	r2, #0
1005132a:	d030      	beq.n	1005138e <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xae>
1005132c:	7d3a      	ldrb	r2, [r7, #20]
1005132e:	2001      	movs	r0, #1
10051330:	2aff      	cmp	r2, #255	; 0xff
10051332:	d019      	beq.n	10051368 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x88>
10051334:	466f      	mov	r7, sp
10051336:	c749      	stmia	r7!, {r0, r3, r6}
10051338:	2037      	movs	r0, #55	; 0x37
1005133a:	4342      	muls	r2, r0
1005133c:	1850      	adds	r0, r2, r1
1005133e:	30ff      	adds	r0, #255	; 0xff
10051340:	3001      	adds	r0, #1
10051342:	7e80      	ldrb	r0, [r0, #26]
10051344:	00c0      	lsls	r0, r0, #3
10051346:	1841      	adds	r1, r0, r1
10051348:	4843      	ldr	r0, [pc, #268]	; (10051458 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x178>)
1005134a:	180b      	adds	r3, r1, r0
1005134c:	7920      	ldrb	r0, [r4, #4]
1005134e:	07c0      	lsls	r0, r0, #31
10051350:	d001      	beq.n	10051356 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x76>
10051352:	2000      	movs	r0, #0
10051354:	e000      	b.n	10051358 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x78>
10051356:	2010      	movs	r0, #16
10051358:	21a1      	movs	r1, #161	; 0xa1
1005135a:	4308      	orrs	r0, r1
1005135c:	4671      	mov	r1, lr
1005135e:	9a10      	ldr	r2, [sp, #64]	; 0x40
10051360:	e010      	b.n	10051384 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xa4>
10051362:	2001      	movs	r0, #1
10051364:	b011      	add	sp, #68	; 0x44
10051366:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051368:	4669      	mov	r1, sp
1005136a:	c149      	stmia	r1!, {r0, r3, r6}
1005136c:	7920      	ldrb	r0, [r4, #4]
1005136e:	07c0      	lsls	r0, r0, #31
10051370:	d001      	beq.n	10051376 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x96>
10051372:	2000      	movs	r0, #0
10051374:	e000      	b.n	10051378 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x98>
10051376:	2010      	movs	r0, #16
10051378:	21a1      	movs	r1, #161	; 0xa1
1005137a:	9b16      	ldr	r3, [sp, #88]	; 0x58
1005137c:	4308      	orrs	r0, r1
1005137e:	2201      	movs	r2, #1
10051380:	4671      	mov	r1, lr
10051382:	1c9b      	adds	r3, r3, #2
10051384:	f000 f95e 	bl	10051644 <hci_le_direct_advertising_report_event_push>
10051388:	2800      	cmp	r0, #0
1005138a:	d15c      	bne.n	10051446 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x166>
1005138c:	e7e9      	b.n	10051362 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x82>
1005138e:	22f0      	movs	r2, #240	; 0xf0
10051390:	5c52      	ldrb	r2, [r2, r1]
10051392:	2a01      	cmp	r2, #1
10051394:	d1e6      	bne.n	10051364 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x84>
10051396:	7d3f      	ldrb	r7, [r7, #20]
10051398:	2fff      	cmp	r7, #255	; 0xff
1005139a:	d0e3      	beq.n	10051364 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x84>
1005139c:	7920      	ldrb	r0, [r4, #4]
1005139e:	07c0      	lsls	r0, r0, #31
100513a0:	d001      	beq.n	100513a6 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xc6>
100513a2:	2400      	movs	r4, #0
100513a4:	e000      	b.n	100513a8 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0xc8>
100513a6:	2410      	movs	r4, #16
100513a8:	20a1      	movs	r0, #161	; 0xa1
100513aa:	4304      	orrs	r4, r0
100513ac:	4670      	mov	r0, lr
100513ae:	9007      	str	r0, [sp, #28]
100513b0:	9810      	ldr	r0, [sp, #64]	; 0x40
100513b2:	9009      	str	r0, [sp, #36]	; 0x24
100513b4:	2037      	movs	r0, #55	; 0x37
100513b6:	4347      	muls	r7, r0
100513b8:	1878      	adds	r0, r7, r1
100513ba:	30ff      	adds	r0, #255	; 0xff
100513bc:	3001      	adds	r0, #1
100513be:	7e80      	ldrb	r0, [r0, #26]
100513c0:	9305      	str	r3, [sp, #20]
100513c2:	00c0      	lsls	r0, r0, #3
100513c4:	1842      	adds	r2, r0, r1
100513c6:	4824      	ldr	r0, [pc, #144]	; (10051458 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x178>)
100513c8:	960b      	str	r6, [sp, #44]	; 0x2c
100513ca:	1810      	adds	r0, r2, r0
100513cc:	9008      	str	r0, [sp, #32]
100513ce:	9818      	ldr	r0, [sp, #96]	; 0x60
100513d0:	9002      	str	r0, [sp, #8]
100513d2:	2203      	movs	r2, #3
100513d4:	3013      	adds	r0, #19
100513d6:	4310      	orrs	r0, r2
100513d8:	1c40      	adds	r0, r0, #1
100513da:	0883      	lsrs	r3, r0, #2
100513dc:	06e0      	lsls	r0, r4, #27
100513de:	d503      	bpl.n	100513e8 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x108>
100513e0:	2207      	movs	r2, #7
100513e2:	20bf      	movs	r0, #191	; 0xbf
100513e4:	4004      	ands	r4, r0
100513e6:	e007      	b.n	100513f8 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x118>
100513e8:	9804      	ldr	r0, [sp, #16]
100513ea:	0680      	lsls	r0, r0, #26
100513ec:	d5b9      	bpl.n	10051362 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x82>
100513ee:	4660      	mov	r0, ip
100513f0:	7880      	ldrb	r0, [r0, #2]
100513f2:	0780      	lsls	r0, r0, #30
100513f4:	d5b5      	bpl.n	10051362 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x82>
100513f6:	2205      	movs	r2, #5
100513f8:	0720      	lsls	r0, r4, #28
100513fa:	0e80      	lsrs	r0, r0, #26
100513fc:	1840      	adds	r0, r0, r1
100513fe:	2101      	movs	r1, #1
10051400:	02c9      	lsls	r1, r1, #11
10051402:	1840      	adds	r0, r0, r1
10051404:	6940      	ldr	r0, [r0, #20]
10051406:	4621      	mov	r1, r4
10051408:	f00a fd70 	bl	1005beec <aci_event_fifo_push_header>
1005140c:	0006      	movs	r6, r0
1005140e:	d01a      	beq.n	10051446 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x166>
10051410:	9807      	ldr	r0, [sp, #28]
10051412:	7130      	strb	r0, [r6, #4]
10051414:	9809      	ldr	r0, [sp, #36]	; 0x24
10051416:	7170      	strb	r0, [r6, #5]
10051418:	4635      	mov	r5, r6
1005141a:	1d37      	adds	r7, r6, #4
1005141c:	3518      	adds	r5, #24
1005141e:	2206      	movs	r2, #6
10051420:	1db0      	adds	r0, r6, #6
10051422:	9908      	ldr	r1, [sp, #32]
10051424:	f7ef f9ad 	bl	10040782 <Osal_MemCpy>
10051428:	9802      	ldr	r0, [sp, #8]
1005142a:	7238      	strb	r0, [r7, #8]
1005142c:	60fd      	str	r5, [r7, #12]
1005142e:	4628      	mov	r0, r5
10051430:	9a02      	ldr	r2, [sp, #8]
10051432:	9905      	ldr	r1, [sp, #20]
10051434:	f7ef f9a5 	bl	10040782 <Osal_MemCpy>
10051438:	980b      	ldr	r0, [sp, #44]	; 0x2c
1005143a:	7438      	strb	r0, [r7, #16]
1005143c:	4631      	mov	r1, r6
1005143e:	4620      	mov	r0, r4
10051440:	f00a fd40 	bl	1005bec4 <aci_event_fifo_push>
10051444:	e78d      	b.n	10051362 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x82>
10051446:	6a29      	ldr	r1, [r5, #32]
10051448:	2000      	movs	r0, #0
1005144a:	7008      	strb	r0, [r1, #0]
1005144c:	e789      	b.n	10051362 <PRIV_vGenerate_hci_le_direct_advertising_report_event+0x82>
1005144e:	0000      	.short	0x0000
10051450:	20000d64 	.word	0x20000d64
10051454:	00000904 	.word	0x00000904
10051458:	0000046d 	.word	0x0000046d

1005145c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event>:
1005145c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005145e:	b095      	sub	sp, #84	; 0x54
10051460:	2600      	movs	r6, #0
10051462:	4875      	ldr	r0, [pc, #468]	; (10051638 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1dc>)
10051464:	9602      	str	r6, [sp, #8]
10051466:	9603      	str	r6, [sp, #12]
10051468:	8800      	ldrh	r0, [r0, #0]
1005146a:	4617      	mov	r7, r2
1005146c:	460d      	mov	r5, r1
1005146e:	4972      	ldr	r1, [pc, #456]	; (10051638 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1dc>)
10051470:	0740      	lsls	r0, r0, #29
10051472:	0dc0      	lsrs	r0, r0, #23
10051474:	310c      	adds	r1, #12
10051476:	1840      	adds	r0, r0, r1
10051478:	89c0      	ldrh	r0, [r0, #14]
1005147a:	2101      	movs	r1, #1
1005147c:	0749      	lsls	r1, r1, #29
1005147e:	1840      	adds	r0, r0, r1
10051480:	8840      	ldrh	r0, [r0, #2]
10051482:	23ff      	movs	r3, #255	; 0xff
10051484:	1844      	adds	r4, r0, r1
10051486:	486d      	ldr	r0, [pc, #436]	; (1005163c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1e0>)
10051488:	2111      	movs	r1, #17
1005148a:	6800      	ldr	r0, [r0, #0]
1005148c:	0189      	lsls	r1, r1, #6
1005148e:	1841      	adds	r1, r0, r1
10051490:	7d4a      	ldrb	r2, [r1, #21]
10051492:	2137      	movs	r1, #55	; 0x37
10051494:	4351      	muls	r1, r2
10051496:	1809      	adds	r1, r1, r0
10051498:	331b      	adds	r3, #27
1005149a:	5c5b      	ldrb	r3, [r3, r1]
1005149c:	9307      	str	r3, [sp, #28]
1005149e:	79e3      	ldrb	r3, [r4, #7]
100514a0:	099b      	lsrs	r3, r3, #6
100514a2:	2b01      	cmp	r3, #1
100514a4:	d104      	bne.n	100514b0 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x54>
100514a6:	7823      	ldrb	r3, [r4, #0]
100514a8:	065b      	lsls	r3, r3, #25
100514aa:	d501      	bpl.n	100514b0 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x54>
100514ac:	2301      	movs	r3, #1
100514ae:	e000      	b.n	100514b2 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x56>
100514b0:	2300      	movs	r3, #0
100514b2:	9306      	str	r3, [sp, #24]
100514b4:	2323      	movs	r3, #35	; 0x23
100514b6:	015b      	lsls	r3, r3, #5
100514b8:	18c0      	adds	r0, r0, r3
100514ba:	7940      	ldrb	r0, [r0, #5]
100514bc:	2801      	cmp	r0, #1
100514be:	d917      	bls.n	100514f0 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x94>
100514c0:	2aff      	cmp	r2, #255	; 0xff
100514c2:	d015      	beq.n	100514f0 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x94>
100514c4:	9815      	ldr	r0, [sp, #84]	; 0x54
100514c6:	2800      	cmp	r0, #0
100514c8:	d004      	beq.n	100514d4 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x78>
100514ca:	7b60      	ldrb	r0, [r4, #13]
100514cc:	0980      	lsrs	r0, r0, #6
100514ce:	2801      	cmp	r0, #1
100514d0:	d005      	beq.n	100514de <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x82>
100514d2:	e00d      	b.n	100514f0 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x94>
100514d4:	2206      	movs	r2, #6
100514d6:	31ff      	adds	r1, #255	; 0xff
100514d8:	a802      	add	r0, sp, #8
100514da:	3141      	adds	r1, #65	; 0x41
100514dc:	e006      	b.n	100514ec <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x90>
100514de:	7820      	ldrb	r0, [r4, #0]
100514e0:	0600      	lsls	r0, r0, #24
100514e2:	d505      	bpl.n	100514f0 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x94>
100514e4:	4621      	mov	r1, r4
100514e6:	2206      	movs	r2, #6
100514e8:	3108      	adds	r1, #8
100514ea:	a802      	add	r0, sp, #8
100514ec:	f7ef f949 	bl	10040782 <Osal_MemCpy>
100514f0:	9806      	ldr	r0, [sp, #24]
100514f2:	2800      	cmp	r0, #0
100514f4:	d036      	beq.n	10051564 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x108>
100514f6:	2f3c      	cmp	r7, #60	; 0x3c
100514f8:	d100      	bne.n	100514fc <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0xa0>
100514fa:	ad05      	add	r5, sp, #20
100514fc:	484f      	ldr	r0, [pc, #316]	; (1005163c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1e0>)
100514fe:	6801      	ldr	r1, [r0, #0]
10051500:	2011      	movs	r0, #17
10051502:	0180      	lsls	r0, r0, #6
10051504:	1808      	adds	r0, r1, r0
10051506:	7d40      	ldrb	r0, [r0, #21]
10051508:	28ff      	cmp	r0, #255	; 0xff
1005150a:	d026      	beq.n	1005155a <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0xfe>
1005150c:	2206      	movs	r2, #6
1005150e:	1ca1      	adds	r1, r4, #2
10051510:	4668      	mov	r0, sp
10051512:	f7ef f936 	bl	10040782 <Osal_MemCpy>
10051516:	9807      	ldr	r0, [sp, #28]
10051518:	4949      	ldr	r1, [pc, #292]	; (10051640 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1e4>)
1005151a:	00c6      	lsls	r6, r0, #3
1005151c:	4847      	ldr	r0, [pc, #284]	; (1005163c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1e0>)
1005151e:	2206      	movs	r2, #6
10051520:	6800      	ldr	r0, [r0, #0]
10051522:	1830      	adds	r0, r6, r0
10051524:	1841      	adds	r1, r0, r1
10051526:	4628      	mov	r0, r5
10051528:	f7ef f92b 	bl	10040782 <Osal_MemCpy>
1005152c:	4843      	ldr	r0, [pc, #268]	; (1005163c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1e0>)
1005152e:	6801      	ldr	r1, [r0, #0]
10051530:	2023      	movs	r0, #35	; 0x23
10051532:	1872      	adds	r2, r6, r1
10051534:	0140      	lsls	r0, r0, #5
10051536:	1810      	adds	r0, r2, r0
10051538:	7b00      	ldrb	r0, [r0, #12]
1005153a:	2237      	movs	r2, #55	; 0x37
1005153c:	1c80      	adds	r0, r0, #2
1005153e:	71a8      	strb	r0, [r5, #6]
10051540:	2011      	movs	r0, #17
10051542:	0180      	lsls	r0, r0, #6
10051544:	1808      	adds	r0, r1, r0
10051546:	7d40      	ldrb	r0, [r0, #21]
10051548:	4350      	muls	r0, r2
1005154a:	1840      	adds	r0, r0, r1
1005154c:	30ff      	adds	r0, #255	; 0xff
1005154e:	2206      	movs	r2, #6
10051550:	1ca1      	adds	r1, r4, #2
10051552:	3048      	adds	r0, #72	; 0x48
10051554:	f7ef f915 	bl	10040782 <Osal_MemCpy>
10051558:	e006      	b.n	10051568 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x10c>
1005155a:	2206      	movs	r2, #6
1005155c:	1ca1      	adds	r1, r4, #2
1005155e:	4628      	mov	r0, r5
10051560:	f7ef f90f 	bl	10040782 <Osal_MemCpy>
10051564:	9600      	str	r6, [sp, #0]
10051566:	9601      	str	r6, [sp, #4]
10051568:	4834      	ldr	r0, [pc, #208]	; (1005163c <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1e0>)
1005156a:	21a4      	movs	r1, #164	; 0xa4
1005156c:	6800      	ldr	r0, [r0, #0]
1005156e:	5c09      	ldrb	r1, [r1, r0]
10051570:	07c9      	lsls	r1, r1, #31
10051572:	d001      	beq.n	10051578 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x11c>
10051574:	2600      	movs	r6, #0
10051576:	e000      	b.n	1005157a <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x11e>
10051578:	2610      	movs	r6, #16
1005157a:	970c      	str	r7, [sp, #48]	; 0x30
1005157c:	9f18      	ldr	r7, [sp, #96]	; 0x60
1005157e:	9915      	ldr	r1, [sp, #84]	; 0x54
10051580:	9109      	str	r1, [sp, #36]	; 0x24
10051582:	6869      	ldr	r1, [r5, #4]
10051584:	9508      	str	r5, [sp, #32]
10051586:	0209      	lsls	r1, r1, #8
10051588:	0e09      	lsrs	r1, r1, #24
1005158a:	910a      	str	r1, [sp, #40]	; 0x28
1005158c:	a902      	add	r1, sp, #8
1005158e:	9107      	str	r1, [sp, #28]
10051590:	4669      	mov	r1, sp
10051592:	9106      	str	r1, [sp, #24]
10051594:	991e      	ldr	r1, [sp, #120]	; 0x78
10051596:	9113      	str	r1, [sp, #76]	; 0x4c
10051598:	991f      	ldr	r1, [sp, #124]	; 0x7c
1005159a:	9112      	str	r1, [sp, #72]	; 0x48
1005159c:	9920      	ldr	r1, [sp, #128]	; 0x80
1005159e:	2308      	movs	r3, #8
100515a0:	0309      	lsls	r1, r1, #12
100515a2:	0c09      	lsrs	r1, r1, #16
100515a4:	9111      	str	r1, [sp, #68]	; 0x44
100515a6:	9921      	ldr	r1, [sp, #132]	; 0x84
100515a8:	3680      	adds	r6, #128	; 0x80
100515aa:	b2c9      	uxtb	r1, r1
100515ac:	910f      	str	r1, [sp, #60]	; 0x3c
100515ae:	06f1      	lsls	r1, r6, #27
100515b0:	d503      	bpl.n	100515ba <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x15e>
100515b2:	220b      	movs	r2, #11
100515b4:	21bf      	movs	r1, #191	; 0xbf
100515b6:	400e      	ands	r6, r1
100515b8:	e009      	b.n	100515ce <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x172>
100515ba:	2137      	movs	r1, #55	; 0x37
100515bc:	0149      	lsls	r1, r1, #5
100515be:	1841      	adds	r1, r0, r1
100515c0:	784a      	ldrb	r2, [r1, #1]
100515c2:	0692      	lsls	r2, r2, #26
100515c4:	d535      	bpl.n	10051632 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1d6>
100515c6:	78c9      	ldrb	r1, [r1, #3]
100515c8:	0789      	lsls	r1, r1, #30
100515ca:	d532      	bpl.n	10051632 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1d6>
100515cc:	2209      	movs	r2, #9
100515ce:	0731      	lsls	r1, r6, #28
100515d0:	0e89      	lsrs	r1, r1, #26
100515d2:	1808      	adds	r0, r1, r0
100515d4:	2101      	movs	r1, #1
100515d6:	02c9      	lsls	r1, r1, #11
100515d8:	1840      	adds	r0, r0, r1
100515da:	6940      	ldr	r0, [r0, #20]
100515dc:	4631      	mov	r1, r6
100515de:	f00a fc85 	bl	1005beec <aci_event_fifo_push_header>
100515e2:	0004      	movs	r4, r0
100515e4:	d025      	beq.n	10051632 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event+0x1d6>
100515e6:	980c      	ldr	r0, [sp, #48]	; 0x30
100515e8:	7120      	strb	r0, [r4, #4]
100515ea:	80e7      	strh	r7, [r4, #6]
100515ec:	9809      	ldr	r0, [sp, #36]	; 0x24
100515ee:	7220      	strb	r0, [r4, #8]
100515f0:	980a      	ldr	r0, [sp, #40]	; 0x28
100515f2:	7260      	strb	r0, [r4, #9]
100515f4:	4620      	mov	r0, r4
100515f6:	1d25      	adds	r5, r4, #4
100515f8:	2206      	movs	r2, #6
100515fa:	300a      	adds	r0, #10
100515fc:	9908      	ldr	r1, [sp, #32]
100515fe:	f7ef f8c0 	bl	10040782 <Osal_MemCpy>
10051602:	4628      	mov	r0, r5
10051604:	2206      	movs	r2, #6
10051606:	300c      	adds	r0, #12
10051608:	9907      	ldr	r1, [sp, #28]
1005160a:	f7ef f8ba 	bl	10040782 <Osal_MemCpy>
1005160e:	4628      	mov	r0, r5
10051610:	2206      	movs	r2, #6
10051612:	3012      	adds	r0, #18
10051614:	9906      	ldr	r1, [sp, #24]
10051616:	f7ef f8b4 	bl	10040782 <Osal_MemCpy>
1005161a:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005161c:	8328      	strh	r0, [r5, #24]
1005161e:	9812      	ldr	r0, [sp, #72]	; 0x48
10051620:	8368      	strh	r0, [r5, #26]
10051622:	9811      	ldr	r0, [sp, #68]	; 0x44
10051624:	83a8      	strh	r0, [r5, #28]
10051626:	980f      	ldr	r0, [sp, #60]	; 0x3c
10051628:	77a8      	strb	r0, [r5, #30]
1005162a:	4621      	mov	r1, r4
1005162c:	4630      	mov	r0, r6
1005162e:	f00a fc49 	bl	1005bec4 <aci_event_fifo_push>
10051632:	b019      	add	sp, #100	; 0x64
10051634:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051636:	0000      	.short	0x0000
10051638:	200000c0 	.word	0x200000c0
1005163c:	20000d64 	.word	0x20000d64
10051640:	0000046d 	.word	0x0000046d

10051644 <hci_le_direct_advertising_report_event_push>:
10051644:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10051646:	2304      	movs	r3, #4
10051648:	4605      	mov	r5, r0
1005164a:	06c1      	lsls	r1, r0, #27
1005164c:	481f      	ldr	r0, [pc, #124]	; (100516cc <hci_le_direct_advertising_report_event_push+0x88>)
1005164e:	b081      	sub	sp, #4
10051650:	9e0c      	ldr	r6, [sp, #48]	; 0x30
10051652:	6800      	ldr	r0, [r0, #0]
10051654:	d503      	bpl.n	1005165e <hci_le_direct_advertising_report_event_push+0x1a>
10051656:	220c      	movs	r2, #12
10051658:	21bf      	movs	r1, #191	; 0xbf
1005165a:	400d      	ands	r5, r1
1005165c:	e00c      	b.n	10051678 <hci_le_direct_advertising_report_event_push+0x34>
1005165e:	2137      	movs	r1, #55	; 0x37
10051660:	0149      	lsls	r1, r1, #5
10051662:	1841      	adds	r1, r0, r1
10051664:	784a      	ldrb	r2, [r1, #1]
10051666:	0692      	lsls	r2, r2, #26
10051668:	d502      	bpl.n	10051670 <hci_le_direct_advertising_report_event_push+0x2c>
1005166a:	78c9      	ldrb	r1, [r1, #3]
1005166c:	0749      	lsls	r1, r1, #29
1005166e:	d402      	bmi.n	10051676 <hci_le_direct_advertising_report_event_push+0x32>
10051670:	2000      	movs	r0, #0
10051672:	b005      	add	sp, #20
10051674:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051676:	220a      	movs	r2, #10
10051678:	0729      	lsls	r1, r5, #28
1005167a:	0e89      	lsrs	r1, r1, #26
1005167c:	1808      	adds	r0, r1, r0
1005167e:	2101      	movs	r1, #1
10051680:	02c9      	lsls	r1, r1, #11
10051682:	1840      	adds	r0, r0, r1
10051684:	6940      	ldr	r0, [r0, #20]
10051686:	4629      	mov	r1, r5
10051688:	f00a fc30 	bl	1005beec <aci_event_fifo_push_header>
1005168c:	0004      	movs	r4, r0
1005168e:	d019      	beq.n	100516c4 <hci_le_direct_advertising_report_event_push+0x80>
10051690:	9802      	ldr	r0, [sp, #8]
10051692:	7120      	strb	r0, [r4, #4]
10051694:	9803      	ldr	r0, [sp, #12]
10051696:	7160      	strb	r0, [r4, #5]
10051698:	1d27      	adds	r7, r4, #4
1005169a:	2206      	movs	r2, #6
1005169c:	1da0      	adds	r0, r4, #6
1005169e:	9904      	ldr	r1, [sp, #16]
100516a0:	f7ef f86f 	bl	10040782 <Osal_MemCpy>
100516a4:	980a      	ldr	r0, [sp, #40]	; 0x28
100516a6:	7238      	strb	r0, [r7, #8]
100516a8:	4638      	mov	r0, r7
100516aa:	2206      	movs	r2, #6
100516ac:	3009      	adds	r0, #9
100516ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
100516b0:	f7ef f867 	bl	10040782 <Osal_MemCpy>
100516b4:	73fe      	strb	r6, [r7, #15]
100516b6:	4621      	mov	r1, r4
100516b8:	4628      	mov	r0, r5
100516ba:	f00a fc03 	bl	1005bec4 <aci_event_fifo_push>
100516be:	2000      	movs	r0, #0
100516c0:	b005      	add	sp, #20
100516c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100516c4:	2007      	movs	r0, #7
100516c6:	b005      	add	sp, #20
100516c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100516ca:	0000      	.short	0x0000
100516cc:	20000d64 	.word	0x20000d64

100516d0 <scan_connection_or_advertiser>:
100516d0:	b510      	push	{r4, lr}
100516d2:	f002 fd71 	bl	100541b8 <get_scan_connection>
100516d6:	2808      	cmp	r0, #8
100516d8:	d303      	bcc.n	100516e2 <scan_connection_or_advertiser+0x12>
100516da:	f002 fceb 	bl	100540b4 <get_advertiser>
100516de:	2808      	cmp	r0, #8
100516e0:	d201      	bcs.n	100516e6 <scan_connection_or_advertiser+0x16>
100516e2:	2001      	movs	r0, #1
100516e4:	bd10      	pop	{r4, pc}
100516e6:	2000      	movs	r0, #0
100516e8:	bd10      	pop	{r4, pc}
	...

100516ec <Data_Len_Update_Offline_Processing>:
100516ec:	b570      	push	{r4, r5, r6, lr}
100516ee:	4913      	ldr	r1, [pc, #76]	; (1005173c <Data_Len_Update_Offline_Processing+0x50>)
100516f0:	2209      	movs	r2, #9
100516f2:	6809      	ldr	r1, [r1, #0]
100516f4:	0212      	lsls	r2, r2, #8
100516f6:	2000      	movs	r0, #0
100516f8:	188b      	adds	r3, r1, r2
100516fa:	22ac      	movs	r2, #172	; 0xac
100516fc:	5c52      	ldrb	r2, [r2, r1]
100516fe:	e01a      	b.n	10051736 <Data_Len_Update_Offline_Processing+0x4a>
10051700:	2458      	movs	r4, #88	; 0x58
10051702:	6b1d      	ldr	r5, [r3, #48]	; 0x30
10051704:	4344      	muls	r4, r0
10051706:	192c      	adds	r4, r5, r4
10051708:	2554      	movs	r5, #84	; 0x54
1005170a:	5d2d      	ldrb	r5, [r5, r4]
1005170c:	06ed      	lsls	r5, r5, #27
1005170e:	d510      	bpl.n	10051732 <Data_Len_Update_Offline_Processing+0x46>
10051710:	2041      	movs	r0, #65	; 0x41
10051712:	0140      	lsls	r0, r0, #5
10051714:	1808      	adds	r0, r1, r0
10051716:	30c0      	adds	r0, #192	; 0xc0
10051718:	8a42      	ldrh	r2, [r0, #18]
1005171a:	8a01      	ldrh	r1, [r0, #16]
1005171c:	8960      	ldrh	r0, [r4, #10]
1005171e:	f000 fa47 	bl	10051bb0 <LL_Set_Data_Length>
10051722:	283a      	cmp	r0, #58	; 0x3a
10051724:	d004      	beq.n	10051730 <Data_Len_Update_Offline_Processing+0x44>
10051726:	3440      	adds	r4, #64	; 0x40
10051728:	7d20      	ldrb	r0, [r4, #20]
1005172a:	21ef      	movs	r1, #239	; 0xef
1005172c:	4008      	ands	r0, r1
1005172e:	7520      	strb	r0, [r4, #20]
10051730:	bd70      	pop	{r4, r5, r6, pc}
10051732:	1c40      	adds	r0, r0, #1
10051734:	b2c0      	uxtb	r0, r0
10051736:	4282      	cmp	r2, r0
10051738:	d8e2      	bhi.n	10051700 <Data_Len_Update_Offline_Processing+0x14>
1005173a:	bd70      	pop	{r4, r5, r6, pc}
1005173c:	20000d64 	.word	0x20000d64

10051740 <Disconnection_Offline_Processing>:
10051740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051742:	4e10      	ldr	r6, [pc, #64]	; (10051784 <Disconnection_Offline_Processing+0x44>)
10051744:	6830      	ldr	r0, [r6, #0]
10051746:	3020      	adds	r0, #32
10051748:	7dc5      	ldrb	r5, [r0, #23]
1005174a:	2d00      	cmp	r5, #0
1005174c:	d019      	beq.n	10051782 <Disconnection_Offline_Processing+0x42>
1005174e:	2400      	movs	r4, #0
10051750:	2709      	movs	r7, #9
10051752:	023f      	lsls	r7, r7, #8
10051754:	e010      	b.n	10051778 <Disconnection_Offline_Processing+0x38>
10051756:	07e9      	lsls	r1, r5, #31
10051758:	d00b      	beq.n	10051772 <Disconnection_Offline_Processing+0x32>
1005175a:	19c0      	adds	r0, r0, r7
1005175c:	6b01      	ldr	r1, [r0, #48]	; 0x30
1005175e:	2058      	movs	r0, #88	; 0x58
10051760:	4360      	muls	r0, r4
10051762:	1808      	adds	r0, r1, r0
10051764:	3040      	adds	r0, #64	; 0x40
10051766:	7d41      	ldrb	r1, [r0, #21]
10051768:	4620      	mov	r0, r4
1005176a:	f000 f90d 	bl	10051988 <LL_Send_Disconnection_Req>
1005176e:	2800      	cmp	r0, #0
10051770:	d007      	beq.n	10051782 <Disconnection_Offline_Processing+0x42>
10051772:	086d      	lsrs	r5, r5, #1
10051774:	1c64      	adds	r4, r4, #1
10051776:	b2e4      	uxtb	r4, r4
10051778:	6830      	ldr	r0, [r6, #0]
1005177a:	21ac      	movs	r1, #172	; 0xac
1005177c:	5c09      	ldrb	r1, [r1, r0]
1005177e:	42a1      	cmp	r1, r4
10051780:	d8e9      	bhi.n	10051756 <Disconnection_Offline_Processing+0x16>
10051782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051784:	20000d64 	.word	0x20000d64

10051788 <LL_Data_Length_Change_Event>:
10051788:	b570      	push	{r4, r5, r6, lr}
1005178a:	4601      	mov	r1, r0
1005178c:	3040      	adds	r0, #64	; 0x40
1005178e:	8804      	ldrh	r4, [r0, #0]
10051790:	8f4a      	ldrh	r2, [r1, #58]	; 0x3a
10051792:	2500      	movs	r5, #0
10051794:	4294      	cmp	r4, r2
10051796:	d300      	bcc.n	1005179a <LL_Data_Length_Change_Event+0x12>
10051798:	4614      	mov	r4, r2
1005179a:	89c2      	ldrh	r2, [r0, #14]
1005179c:	8903      	ldrh	r3, [r0, #8]
1005179e:	429a      	cmp	r2, r3
100517a0:	d200      	bcs.n	100517a4 <LL_Data_Length_Change_Event+0x1c>
100517a2:	4613      	mov	r3, r2
100517a4:	8fca      	ldrh	r2, [r1, #62]	; 0x3e
100517a6:	8f89      	ldrh	r1, [r1, #60]	; 0x3c
100517a8:	428a      	cmp	r2, r1
100517aa:	d300      	bcc.n	100517ae <LL_Data_Length_Change_Event+0x26>
100517ac:	460a      	mov	r2, r1
100517ae:	8986      	ldrh	r6, [r0, #12]
100517b0:	8941      	ldrh	r1, [r0, #10]
100517b2:	428e      	cmp	r6, r1
100517b4:	d200      	bcs.n	100517b8 <LL_Data_Length_Change_Event+0x30>
100517b6:	4631      	mov	r1, r6
100517b8:	8846      	ldrh	r6, [r0, #2]
100517ba:	42a6      	cmp	r6, r4
100517bc:	d000      	beq.n	100517c0 <LL_Data_Length_Change_Event+0x38>
100517be:	2501      	movs	r5, #1
100517c0:	88c4      	ldrh	r4, [r0, #6]
100517c2:	4294      	cmp	r4, r2
100517c4:	d000      	beq.n	100517c8 <LL_Data_Length_Change_Event+0x40>
100517c6:	2501      	movs	r5, #1
100517c8:	8a02      	ldrh	r2, [r0, #16]
100517ca:	429a      	cmp	r2, r3
100517cc:	d000      	beq.n	100517d0 <LL_Data_Length_Change_Event+0x48>
100517ce:	2501      	movs	r5, #1
100517d0:	8a40      	ldrh	r0, [r0, #18]
100517d2:	4288      	cmp	r0, r1
100517d4:	d000      	beq.n	100517d8 <LL_Data_Length_Change_Event+0x50>
100517d6:	2501      	movs	r5, #1
100517d8:	4628      	mov	r0, r5
100517da:	bd70      	pop	{r4, r5, r6, pc}

100517dc <LL_Data_Length_Update>:
100517dc:	b570      	push	{r4, r5, r6, lr}
100517de:	460c      	mov	r4, r1
100517e0:	4605      	mov	r5, r0
100517e2:	2202      	movs	r2, #2
100517e4:	3140      	adds	r1, #64	; 0x40
100517e6:	1cc0      	adds	r0, r0, #3
100517e8:	f7fb f8cc 	bl	1004c984 <char_copy>
100517ec:	4621      	mov	r1, r4
100517ee:	2202      	movs	r2, #2
100517f0:	314e      	adds	r1, #78	; 0x4e
100517f2:	1d68      	adds	r0, r5, #5
100517f4:	f7fb f8c6 	bl	1004c984 <char_copy>
100517f8:	4621      	mov	r1, r4
100517fa:	2202      	movs	r2, #2
100517fc:	313e      	adds	r1, #62	; 0x3e
100517fe:	1de8      	adds	r0, r5, #7
10051800:	f7fb f8c0 	bl	1004c984 <char_copy>
10051804:	4621      	mov	r1, r4
10051806:	4628      	mov	r0, r5
10051808:	2202      	movs	r2, #2
1005180a:	314c      	adds	r1, #76	; 0x4c
1005180c:	3009      	adds	r0, #9
1005180e:	f7fb f8b9 	bl	1004c984 <char_copy>
10051812:	bd70      	pop	{r4, r5, r6, pc}

10051814 <LL_Disconnect_Link>:
10051814:	b570      	push	{r4, r5, r6, lr}
10051816:	460d      	mov	r5, r1
10051818:	490b      	ldr	r1, [pc, #44]	; (10051848 <LL_Disconnect_Link+0x34>)
1005181a:	2400      	movs	r4, #0
1005181c:	4288      	cmp	r0, r1
1005181e:	d804      	bhi.n	1005182a <LL_Disconnect_Link+0x16>
10051820:	2103      	movs	r1, #3
10051822:	f002 fc6b 	bl	100540fc <get_connection_no>
10051826:	2808      	cmp	r0, #8
10051828:	d301      	bcc.n	1005182e <LL_Disconnect_Link+0x1a>
1005182a:	2402      	movs	r4, #2
1005182c:	e00a      	b.n	10051844 <LL_Disconnect_Link+0x30>
1005182e:	4907      	ldr	r1, [pc, #28]	; (1005184c <LL_Disconnect_Link+0x38>)
10051830:	2201      	movs	r2, #1
10051832:	6809      	ldr	r1, [r1, #0]
10051834:	3120      	adds	r1, #32
10051836:	7dc9      	ldrb	r1, [r1, #23]
10051838:	4082      	lsls	r2, r0
1005183a:	4211      	tst	r1, r2
1005183c:	d102      	bne.n	10051844 <LL_Disconnect_Link+0x30>
1005183e:	4629      	mov	r1, r5
10051840:	f000 f8a2 	bl	10051988 <LL_Send_Disconnection_Req>
10051844:	4620      	mov	r0, r4
10051846:	bd70      	pop	{r4, r5, r6, pc}
10051848:	00000eff 	.word	0x00000eff
1005184c:	20000d64 	.word	0x20000d64

10051850 <LL_Get_Default_Data_Length>:
10051850:	4a05      	ldr	r2, [pc, #20]	; (10051868 <LL_Get_Default_Data_Length+0x18>)
10051852:	2341      	movs	r3, #65	; 0x41
10051854:	6812      	ldr	r2, [r2, #0]
10051856:	015b      	lsls	r3, r3, #5
10051858:	18d2      	adds	r2, r2, r3
1005185a:	32c0      	adds	r2, #192	; 0xc0
1005185c:	8b93      	ldrh	r3, [r2, #28]
1005185e:	8003      	strh	r3, [r0, #0]
10051860:	8bd0      	ldrh	r0, [r2, #30]
10051862:	8008      	strh	r0, [r1, #0]
10051864:	2000      	movs	r0, #0
10051866:	4770      	bx	lr
10051868:	20000d64 	.word	0x20000d64

1005186c <LL_Get_Maximum_Data_Length>:
1005186c:	b530      	push	{r4, r5, lr}
1005186e:	4c08      	ldr	r4, [pc, #32]	; (10051890 <LL_Get_Maximum_Data_Length+0x24>)
10051870:	2541      	movs	r5, #65	; 0x41
10051872:	6824      	ldr	r4, [r4, #0]
10051874:	016d      	lsls	r5, r5, #5
10051876:	1964      	adds	r4, r4, r5
10051878:	34c0      	adds	r4, #192	; 0xc0
1005187a:	8aa5      	ldrh	r5, [r4, #20]
1005187c:	8005      	strh	r5, [r0, #0]
1005187e:	8ae0      	ldrh	r0, [r4, #22]
10051880:	8008      	strh	r0, [r1, #0]
10051882:	8b20      	ldrh	r0, [r4, #24]
10051884:	8010      	strh	r0, [r2, #0]
10051886:	8b60      	ldrh	r0, [r4, #26]
10051888:	8018      	strh	r0, [r3, #0]
1005188a:	2000      	movs	r0, #0
1005188c:	bd30      	pop	{r4, r5, pc}
1005188e:	0000      	.short	0x0000
10051890:	20000d64 	.word	0x20000d64

10051894 <LL_Get_Supported_Features>:
10051894:	b570      	push	{r4, r5, r6, lr}
10051896:	4604      	mov	r4, r0
10051898:	2101      	movs	r1, #1
1005189a:	2000      	movs	r0, #0
1005189c:	5460      	strb	r0, [r4, r1]
1005189e:	1c49      	adds	r1, r1, #1
100518a0:	b2c9      	uxtb	r1, r1
100518a2:	2908      	cmp	r1, #8
100518a4:	d3fa      	bcc.n	1005189c <LL_Get_Supported_Features+0x8>
100518a6:	f7f0 f971 	bl	10041b8c <data_length_extension_csr_ucfg>
100518aa:	0145      	lsls	r5, r0, #5
100518ac:	3509      	adds	r5, #9
100518ae:	f7f0 f813 	bl	100418d8 <PRIV_controller_privacy_csr_ucfg>
100518b2:	0180      	lsls	r0, r0, #6
100518b4:	4305      	orrs	r5, r0
100518b6:	f7f0 f933 	bl	10041b20 <master_csr_ucfg>
100518ba:	01c0      	lsls	r0, r0, #7
100518bc:	4305      	orrs	r5, r0
100518be:	7025      	strb	r5, [r4, #0]
100518c0:	f7f0 f98e 	bl	10041be0 <secure_connections_csr_ucfg>
100518c4:	2801      	cmp	r0, #1
100518c6:	d103      	bne.n	100518d0 <LL_Get_Supported_Features+0x3c>
100518c8:	78e0      	ldrb	r0, [r4, #3]
100518ca:	2108      	movs	r1, #8
100518cc:	4308      	orrs	r0, r1
100518ce:	70e0      	strb	r0, [r4, #3]
100518d0:	bd70      	pop	{r4, r5, r6, pc}
	...

100518d4 <LL_Read_Remote_Version_Info>:
100518d4:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
100518d6:	4e2a      	ldr	r6, [pc, #168]	; (10051980 <LL_Read_Remote_Version_Info+0xac>)
100518d8:	2241      	movs	r2, #65	; 0x41
100518da:	6831      	ldr	r1, [r6, #0]
100518dc:	0152      	lsls	r2, r2, #5
100518de:	188c      	adds	r4, r1, r2
100518e0:	b081      	sub	sp, #4
100518e2:	2103      	movs	r1, #3
100518e4:	f002 fc0a 	bl	100540fc <get_connection_no>
100518e8:	4605      	mov	r5, r0
100518ea:	f002 fc89 	bl	10054200 <is_slave>
100518ee:	2800      	cmp	r0, #0
100518f0:	d005      	beq.n	100518fe <LL_Read_Remote_Version_Info+0x2a>
100518f2:	21cf      	movs	r1, #207	; 0xcf
100518f4:	5d09      	ldrb	r1, [r1, r4]
100518f6:	2d08      	cmp	r5, #8
100518f8:	d304      	bcc.n	10051904 <LL_Read_Remote_Version_Info+0x30>
100518fa:	2002      	movs	r0, #2
100518fc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100518fe:	21ce      	movs	r1, #206	; 0xce
10051900:	5d09      	ldrb	r1, [r1, r4]
10051902:	e7f8      	b.n	100518f6 <LL_Read_Remote_Version_Info+0x22>
10051904:	2908      	cmp	r1, #8
10051906:	d201      	bcs.n	1005190c <LL_Read_Remote_Version_Info+0x38>
10051908:	200c      	movs	r0, #12
1005190a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005190c:	2109      	movs	r1, #9
1005190e:	6833      	ldr	r3, [r6, #0]
10051910:	0209      	lsls	r1, r1, #8
10051912:	1859      	adds	r1, r3, r1
10051914:	6b0a      	ldr	r2, [r1, #48]	; 0x30
10051916:	2158      	movs	r1, #88	; 0x58
10051918:	4369      	muls	r1, r5
1005191a:	1851      	adds	r1, r2, r1
1005191c:	b672      	cpsid	i
1005191e:	794e      	ldrb	r6, [r1, #5]
10051920:	690a      	ldr	r2, [r1, #16]
10051922:	07b6      	lsls	r6, r6, #30
10051924:	07d7      	lsls	r7, r2, #31
10051926:	433e      	orrs	r6, r7
10051928:	d007      	beq.n	1005193a <LL_Read_Remote_Version_Info+0x66>
1005192a:	07d0      	lsls	r0, r2, #31
1005192c:	d024      	beq.n	10051978 <LL_Read_Remote_Version_Info+0xa4>
1005192e:	9802      	ldr	r0, [sp, #8]
10051930:	312c      	adds	r1, #44	; 0x2c
10051932:	6001      	str	r1, [r0, #0]
10051934:	b662      	cpsie	i
10051936:	2000      	movs	r0, #0
10051938:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005193a:	3380      	adds	r3, #128	; 0x80
1005193c:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
1005193e:	6b4e      	ldr	r6, [r1, #52]	; 0x34
10051940:	4b10      	ldr	r3, [pc, #64]	; (10051984 <LL_Read_Remote_Version_Info+0xb0>)
10051942:	6033      	str	r3, [r6, #0]
10051944:	0412      	lsls	r2, r2, #16
10051946:	6b4b      	ldr	r3, [r1, #52]	; 0x34
10051948:	3230      	adds	r2, #48	; 0x30
1005194a:	605a      	str	r2, [r3, #4]
1005194c:	794a      	ldrb	r2, [r1, #5]
1005194e:	2301      	movs	r3, #1
10051950:	431a      	orrs	r2, r3
10051952:	714a      	strb	r2, [r1, #5]
10051954:	690a      	ldr	r2, [r1, #16]
10051956:	2302      	movs	r3, #2
10051958:	431a      	orrs	r2, r3
1005195a:	610a      	str	r2, [r1, #16]
1005195c:	217d      	movs	r1, #125	; 0x7d
1005195e:	0249      	lsls	r1, r1, #9
10051960:	2800      	cmp	r0, #0
10051962:	d005      	beq.n	10051970 <LL_Read_Remote_Version_Info+0x9c>
10051964:	34c0      	adds	r4, #192	; 0xc0
10051966:	81a1      	strh	r1, [r4, #12]
10051968:	73e5      	strb	r5, [r4, #15]
1005196a:	b662      	cpsie	i
1005196c:	2045      	movs	r0, #69	; 0x45
1005196e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10051970:	34c0      	adds	r4, #192	; 0xc0
10051972:	8161      	strh	r1, [r4, #10]
10051974:	73a5      	strb	r5, [r4, #14]
10051976:	e7f8      	b.n	1005196a <LL_Read_Remote_Version_Info+0x96>
10051978:	b662      	cpsie	i
1005197a:	203a      	movs	r0, #58	; 0x3a
1005197c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005197e:	0000      	.short	0x0000
10051980:	20000d64 	.word	0x20000d64
10051984:	0b0c0603 	.word	0x0b0c0603

10051988 <LL_Send_Disconnection_Req>:
10051988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005198a:	4606      	mov	r6, r0
1005198c:	4825      	ldr	r0, [pc, #148]	; (10051a24 <LL_Send_Disconnection_Req+0x9c>)
1005198e:	460f      	mov	r7, r1
10051990:	6800      	ldr	r0, [r0, #0]
10051992:	2141      	movs	r1, #65	; 0x41
10051994:	0149      	lsls	r1, r1, #5
10051996:	1844      	adds	r4, r0, r1
10051998:	2109      	movs	r1, #9
1005199a:	0209      	lsls	r1, r1, #8
1005199c:	1840      	adds	r0, r0, r1
1005199e:	6b01      	ldr	r1, [r0, #48]	; 0x30
100519a0:	2058      	movs	r0, #88	; 0x58
100519a2:	4370      	muls	r0, r6
100519a4:	180d      	adds	r5, r1, r0
100519a6:	4630      	mov	r0, r6
100519a8:	f002 fc2a 	bl	10054200 <is_slave>
100519ac:	2800      	cmp	r0, #0
100519ae:	d016      	beq.n	100519de <LL_Send_Disconnection_Req+0x56>
100519b0:	4620      	mov	r0, r4
100519b2:	30cf      	adds	r0, #207	; 0xcf
100519b4:	34cc      	adds	r4, #204	; 0xcc
100519b6:	b672      	cpsid	i
100519b8:	7802      	ldrb	r2, [r0, #0]
100519ba:	2101      	movs	r1, #1
100519bc:	40b1      	lsls	r1, r6
100519be:	2a08      	cmp	r2, #8
100519c0:	d302      	bcc.n	100519c8 <LL_Send_Disconnection_Req+0x40>
100519c2:	796a      	ldrb	r2, [r5, #5]
100519c4:	0792      	lsls	r2, r2, #30
100519c6:	d00e      	beq.n	100519e6 <LL_Send_Disconnection_Req+0x5e>
100519c8:	7968      	ldrb	r0, [r5, #5]
100519ca:	0780      	lsls	r0, r0, #30
100519cc:	d426      	bmi.n	10051a1c <LL_Send_Disconnection_Req+0x94>
100519ce:	4815      	ldr	r0, [pc, #84]	; (10051a24 <LL_Send_Disconnection_Req+0x9c>)
100519d0:	6800      	ldr	r0, [r0, #0]
100519d2:	3020      	adds	r0, #32
100519d4:	7dc2      	ldrb	r2, [r0, #23]
100519d6:	430a      	orrs	r2, r1
100519d8:	75c2      	strb	r2, [r0, #23]
100519da:	203a      	movs	r0, #58	; 0x3a
100519dc:	e01f      	b.n	10051a1e <LL_Send_Disconnection_Req+0x96>
100519de:	4620      	mov	r0, r4
100519e0:	30ce      	adds	r0, #206	; 0xce
100519e2:	34ca      	adds	r4, #202	; 0xca
100519e4:	e7e7      	b.n	100519b6 <LL_Send_Disconnection_Req+0x2e>
100519e6:	067a      	lsls	r2, r7, #25
100519e8:	4b0f      	ldr	r3, [pc, #60]	; (10051a28 <LL_Send_Disconnection_Req+0xa0>)
100519ea:	0852      	lsrs	r2, r2, #1
100519ec:	18d2      	adds	r2, r2, r3
100519ee:	6b6b      	ldr	r3, [r5, #52]	; 0x34
100519f0:	601a      	str	r2, [r3, #0]
100519f2:	063a      	lsls	r2, r7, #24
100519f4:	d401      	bmi.n	100519fa <LL_Send_Disconnection_Req+0x72>
100519f6:	2213      	movs	r2, #19
100519f8:	e000      	b.n	100519fc <LL_Send_Disconnection_Req+0x74>
100519fa:	2212      	movs	r2, #18
100519fc:	796b      	ldrb	r3, [r5, #5]
100519fe:	4313      	orrs	r3, r2
10051a00:	716b      	strb	r3, [r5, #5]
10051a02:	7006      	strb	r6, [r0, #0]
10051a04:	8b28      	ldrh	r0, [r5, #24]
10051a06:	8020      	strh	r0, [r4, #0]
10051a08:	3540      	adds	r5, #64	; 0x40
10051a0a:	4806      	ldr	r0, [pc, #24]	; (10051a24 <LL_Send_Disconnection_Req+0x9c>)
10051a0c:	756f      	strb	r7, [r5, #21]
10051a0e:	6800      	ldr	r0, [r0, #0]
10051a10:	3020      	adds	r0, #32
10051a12:	7dc2      	ldrb	r2, [r0, #23]
10051a14:	438a      	bics	r2, r1
10051a16:	75c2      	strb	r2, [r0, #23]
10051a18:	2000      	movs	r0, #0
10051a1a:	e000      	b.n	10051a1e <LL_Send_Disconnection_Req+0x96>
10051a1c:	200c      	movs	r0, #12
10051a1e:	b662      	cpsie	i
10051a20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051a22:	0000      	.short	0x0000
10051a24:	20000d64 	.word	0x20000d64
10051a28:	00020203 	.word	0x00020203

10051a2c <LL_Send_Length_Req>:
10051a2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10051a2e:	460f      	mov	r7, r1
10051a30:	b082      	sub	sp, #8
10051a32:	2103      	movs	r1, #3
10051a34:	f002 fb62 	bl	100540fc <get_connection_no>
10051a38:	4606      	mov	r6, r0
10051a3a:	f002 fbe1 	bl	10054200 <is_slave>
10051a3e:	9000      	str	r0, [sp, #0]
10051a40:	2e08      	cmp	r6, #8
10051a42:	d302      	bcc.n	10051a4a <LL_Send_Length_Req+0x1e>
10051a44:	2002      	movs	r0, #2
10051a46:	b005      	add	sp, #20
10051a48:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051a4a:	482a      	ldr	r0, [pc, #168]	; (10051af4 <LL_Send_Length_Req+0xc8>)
10051a4c:	2141      	movs	r1, #65	; 0x41
10051a4e:	6800      	ldr	r0, [r0, #0]
10051a50:	0149      	lsls	r1, r1, #5
10051a52:	1845      	adds	r5, r0, r1
10051a54:	2109      	movs	r1, #9
10051a56:	0209      	lsls	r1, r1, #8
10051a58:	1840      	adds	r0, r0, r1
10051a5a:	6b01      	ldr	r1, [r0, #48]	; 0x30
10051a5c:	2058      	movs	r0, #88	; 0x58
10051a5e:	4370      	muls	r0, r6
10051a60:	180c      	adds	r4, r1, r0
10051a62:	b672      	cpsid	i
10051a64:	78a0      	ldrb	r0, [r4, #2]
10051a66:	0740      	lsls	r0, r0, #29
10051a68:	0f40      	lsrs	r0, r0, #29
10051a6a:	2805      	cmp	r0, #5
10051a6c:	d004      	beq.n	10051a78 <LL_Send_Length_Req+0x4c>
10051a6e:	2802      	cmp	r0, #2
10051a70:	d002      	beq.n	10051a78 <LL_Send_Length_Req+0x4c>
10051a72:	200c      	movs	r0, #12
10051a74:	b662      	cpsie	i
10051a76:	e7e6      	b.n	10051a46 <LL_Send_Length_Req+0x1a>
10051a78:	7960      	ldrb	r0, [r4, #5]
10051a7a:	0780      	lsls	r0, r0, #30
10051a7c:	d001      	beq.n	10051a82 <LL_Send_Length_Req+0x56>
10051a7e:	203a      	movs	r0, #58	; 0x3a
10051a80:	e7f8      	b.n	10051a74 <LL_Send_Length_Req+0x48>
10051a82:	8767      	strh	r7, [r4, #58]	; 0x3a
10051a84:	4620      	mov	r0, r4
10051a86:	3040      	adds	r0, #64	; 0x40
10051a88:	9904      	ldr	r1, [sp, #16]
10051a8a:	8101      	strh	r1, [r0, #8]
10051a8c:	7d01      	ldrb	r1, [r0, #20]
10051a8e:	2220      	movs	r2, #32
10051a90:	4311      	orrs	r1, r2
10051a92:	7501      	strb	r1, [r0, #20]
10051a94:	6b61      	ldr	r1, [r4, #52]	; 0x34
10051a96:	4818      	ldr	r0, [pc, #96]	; (10051af8 <LL_Send_Length_Req+0xcc>)
10051a98:	6008      	str	r0, [r1, #0]
10051a9a:	6b67      	ldr	r7, [r4, #52]	; 0x34
10051a9c:	4620      	mov	r0, r4
10051a9e:	2202      	movs	r2, #2
10051aa0:	303c      	adds	r0, #60	; 0x3c
10051aa2:	1cf9      	adds	r1, r7, #3
10051aa4:	f7fa ff6e 	bl	1004c984 <char_copy>
10051aa8:	4620      	mov	r0, r4
10051aaa:	2202      	movs	r2, #2
10051aac:	1d79      	adds	r1, r7, #5
10051aae:	304a      	adds	r0, #74	; 0x4a
10051ab0:	f7fa ff68 	bl	1004c984 <char_copy>
10051ab4:	4620      	mov	r0, r4
10051ab6:	2202      	movs	r2, #2
10051ab8:	1df9      	adds	r1, r7, #7
10051aba:	303a      	adds	r0, #58	; 0x3a
10051abc:	f7fa ff62 	bl	1004c984 <char_copy>
10051ac0:	4639      	mov	r1, r7
10051ac2:	4620      	mov	r0, r4
10051ac4:	2202      	movs	r2, #2
10051ac6:	3109      	adds	r1, #9
10051ac8:	3048      	adds	r0, #72	; 0x48
10051aca:	f7fa ff5b 	bl	1004c984 <char_copy>
10051ace:	7960      	ldrb	r0, [r4, #5]
10051ad0:	2101      	movs	r1, #1
10051ad2:	4308      	orrs	r0, r1
10051ad4:	7160      	strb	r0, [r4, #5]
10051ad6:	207d      	movs	r0, #125	; 0x7d
10051ad8:	9900      	ldr	r1, [sp, #0]
10051ada:	0240      	lsls	r0, r0, #9
10051adc:	2900      	cmp	r1, #0
10051ade:	d004      	beq.n	10051aea <LL_Send_Length_Req+0xbe>
10051ae0:	35c0      	adds	r5, #192	; 0xc0
10051ae2:	81a8      	strh	r0, [r5, #12]
10051ae4:	73ee      	strb	r6, [r5, #15]
10051ae6:	2000      	movs	r0, #0
10051ae8:	e7c4      	b.n	10051a74 <LL_Send_Length_Req+0x48>
10051aea:	35c0      	adds	r5, #192	; 0xc0
10051aec:	8168      	strh	r0, [r5, #10]
10051aee:	73ae      	strb	r6, [r5, #14]
10051af0:	e7f9      	b.n	10051ae6 <LL_Send_Length_Req+0xba>
10051af2:	0000      	.short	0x0000
10051af4:	20000d64 	.word	0x20000d64
10051af8:	00140903 	.word	0x00140903

10051afc <LL_Send_Length_Resp>:
10051afc:	b570      	push	{r4, r5, r6, lr}
10051afe:	2103      	movs	r1, #3
10051b00:	f002 fafc 	bl	100540fc <get_connection_no>
10051b04:	2808      	cmp	r0, #8
10051b06:	d301      	bcc.n	10051b0c <LL_Send_Length_Resp+0x10>
10051b08:	2002      	movs	r0, #2
10051b0a:	bd70      	pop	{r4, r5, r6, pc}
10051b0c:	4926      	ldr	r1, [pc, #152]	; (10051ba8 <LL_Send_Length_Resp+0xac>)
10051b0e:	2209      	movs	r2, #9
10051b10:	6809      	ldr	r1, [r1, #0]
10051b12:	0212      	lsls	r2, r2, #8
10051b14:	1889      	adds	r1, r1, r2
10051b16:	6b09      	ldr	r1, [r1, #48]	; 0x30
10051b18:	2258      	movs	r2, #88	; 0x58
10051b1a:	4350      	muls	r0, r2
10051b1c:	180c      	adds	r4, r1, r0
10051b1e:	7960      	ldrb	r0, [r4, #5]
10051b20:	6b66      	ldr	r6, [r4, #52]	; 0x34
10051b22:	0780      	lsls	r0, r0, #30
10051b24:	d001      	beq.n	10051b2a <LL_Send_Length_Resp+0x2e>
10051b26:	203a      	movs	r0, #58	; 0x3a
10051b28:	bd70      	pop	{r4, r5, r6, pc}
10051b2a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
10051b2c:	8fa0      	ldrh	r0, [r4, #60]	; 0x3c
10051b2e:	f000 f8c5 	bl	10051cbc <MIN_U16>
10051b32:	4625      	mov	r5, r4
10051b34:	3540      	adds	r5, #64	; 0x40
10051b36:	80e8      	strh	r0, [r5, #6]
10051b38:	89a9      	ldrh	r1, [r5, #12]
10051b3a:	8968      	ldrh	r0, [r5, #10]
10051b3c:	f000 f8be 	bl	10051cbc <MIN_U16>
10051b40:	8268      	strh	r0, [r5, #18]
10051b42:	8829      	ldrh	r1, [r5, #0]
10051b44:	8f60      	ldrh	r0, [r4, #58]	; 0x3a
10051b46:	f000 f8b9 	bl	10051cbc <MIN_U16>
10051b4a:	8068      	strh	r0, [r5, #2]
10051b4c:	89e9      	ldrh	r1, [r5, #14]
10051b4e:	8928      	ldrh	r0, [r5, #8]
10051b50:	f000 f8b4 	bl	10051cbc <MIN_U16>
10051b54:	8228      	strh	r0, [r5, #16]
10051b56:	08c0      	lsrs	r0, r0, #3
10051b58:	380e      	subs	r0, #14
10051b5a:	b281      	uxth	r1, r0
10051b5c:	8868      	ldrh	r0, [r5, #2]
10051b5e:	f000 f8ad 	bl	10051cbc <MIN_U16>
10051b62:	80a8      	strh	r0, [r5, #4]
10051b64:	4811      	ldr	r0, [pc, #68]	; (10051bac <LL_Send_Length_Resp+0xb0>)
10051b66:	6030      	str	r0, [r6, #0]
10051b68:	6b65      	ldr	r5, [r4, #52]	; 0x34
10051b6a:	4620      	mov	r0, r4
10051b6c:	2202      	movs	r2, #2
10051b6e:	303c      	adds	r0, #60	; 0x3c
10051b70:	1ce9      	adds	r1, r5, #3
10051b72:	f7fa ff07 	bl	1004c984 <char_copy>
10051b76:	4620      	mov	r0, r4
10051b78:	2202      	movs	r2, #2
10051b7a:	1d69      	adds	r1, r5, #5
10051b7c:	304a      	adds	r0, #74	; 0x4a
10051b7e:	f7fa ff01 	bl	1004c984 <char_copy>
10051b82:	4620      	mov	r0, r4
10051b84:	2202      	movs	r2, #2
10051b86:	1de9      	adds	r1, r5, #7
10051b88:	303a      	adds	r0, #58	; 0x3a
10051b8a:	f7fa fefb 	bl	1004c984 <char_copy>
10051b8e:	4629      	mov	r1, r5
10051b90:	4620      	mov	r0, r4
10051b92:	2202      	movs	r2, #2
10051b94:	3109      	adds	r1, #9
10051b96:	3048      	adds	r0, #72	; 0x48
10051b98:	f7fa fef4 	bl	1004c984 <char_copy>
10051b9c:	7960      	ldrb	r0, [r4, #5]
10051b9e:	2101      	movs	r1, #1
10051ba0:	4308      	orrs	r0, r1
10051ba2:	7160      	strb	r0, [r4, #5]
10051ba4:	2000      	movs	r0, #0
10051ba6:	bd70      	pop	{r4, r5, r6, pc}
10051ba8:	20000d64 	.word	0x20000d64
10051bac:	00150903 	.word	0x00150903

10051bb0 <LL_Set_Data_Length>:
10051bb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10051bb2:	4f2c      	ldr	r7, [pc, #176]	; (10051c64 <LL_Set_Data_Length+0xb4>)
10051bb4:	460e      	mov	r6, r1
10051bb6:	2141      	movs	r1, #65	; 0x41
10051bb8:	6838      	ldr	r0, [r7, #0]
10051bba:	0149      	lsls	r1, r1, #5
10051bbc:	1844      	adds	r4, r0, r1
10051bbe:	b082      	sub	sp, #8
10051bc0:	4615      	mov	r5, r2
10051bc2:	2103      	movs	r1, #3
10051bc4:	9802      	ldr	r0, [sp, #8]
10051bc6:	f002 fa99 	bl	100540fc <get_connection_no>
10051bca:	9000      	str	r0, [sp, #0]
10051bcc:	2009      	movs	r0, #9
10051bce:	6839      	ldr	r1, [r7, #0]
10051bd0:	0200      	lsls	r0, r0, #8
10051bd2:	1808      	adds	r0, r1, r0
10051bd4:	6b01      	ldr	r1, [r0, #48]	; 0x30
10051bd6:	9800      	ldr	r0, [sp, #0]
10051bd8:	2258      	movs	r2, #88	; 0x58
10051bda:	4350      	muls	r0, r2
10051bdc:	180f      	adds	r7, r1, r0
10051bde:	9800      	ldr	r0, [sp, #0]
10051be0:	f002 fb0e 	bl	10054200 <is_slave>
10051be4:	2800      	cmp	r0, #0
10051be6:	d007      	beq.n	10051bf8 <LL_Set_Data_Length+0x48>
10051be8:	20cf      	movs	r0, #207	; 0xcf
10051bea:	5d00      	ldrb	r0, [r0, r4]
10051bec:	9900      	ldr	r1, [sp, #0]
10051bee:	2908      	cmp	r1, #8
10051bf0:	d305      	bcc.n	10051bfe <LL_Set_Data_Length+0x4e>
10051bf2:	2002      	movs	r0, #2
10051bf4:	b005      	add	sp, #20
10051bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051bf8:	20ce      	movs	r0, #206	; 0xce
10051bfa:	5d00      	ldrb	r0, [r0, r4]
10051bfc:	e7f6      	b.n	10051bec <LL_Set_Data_Length+0x3c>
10051bfe:	3740      	adds	r7, #64	; 0x40
10051c00:	7d39      	ldrb	r1, [r7, #20]
10051c02:	074a      	lsls	r2, r1, #29
10051c04:	d501      	bpl.n	10051c0a <LL_Set_Data_Length+0x5a>
10051c06:	201a      	movs	r0, #26
10051c08:	e7f4      	b.n	10051bf4 <LL_Set_Data_Length+0x44>
10051c0a:	4632      	mov	r2, r6
10051c0c:	3a1b      	subs	r2, #27
10051c0e:	2ae1      	cmp	r2, #225	; 0xe1
10051c10:	d205      	bcs.n	10051c1e <LL_Set_Data_Length+0x6e>
10051c12:	462a      	mov	r2, r5
10051c14:	3aff      	subs	r2, #255	; 0xff
10051c16:	4b14      	ldr	r3, [pc, #80]	; (10051c68 <LL_Set_Data_Length+0xb8>)
10051c18:	3a49      	subs	r2, #73	; 0x49
10051c1a:	429a      	cmp	r2, r3
10051c1c:	d301      	bcc.n	10051c22 <LL_Set_Data_Length+0x72>
10051c1e:	2030      	movs	r0, #48	; 0x30
10051c20:	e7e8      	b.n	10051bf4 <LL_Set_Data_Length+0x44>
10051c22:	068a      	lsls	r2, r1, #26
10051c24:	d401      	bmi.n	10051c2a <LL_Set_Data_Length+0x7a>
10051c26:	07c9      	lsls	r1, r1, #31
10051c28:	d001      	beq.n	10051c2e <LL_Set_Data_Length+0x7e>
10051c2a:	200c      	movs	r0, #12
10051c2c:	e7e2      	b.n	10051bf4 <LL_Set_Data_Length+0x44>
10051c2e:	2808      	cmp	r0, #8
10051c30:	d201      	bcs.n	10051c36 <LL_Set_Data_Length+0x86>
10051c32:	203a      	movs	r0, #58	; 0x3a
10051c34:	e7de      	b.n	10051bf4 <LL_Set_Data_Length+0x44>
10051c36:	34c0      	adds	r4, #192	; 0xc0
10051c38:	8aa0      	ldrh	r0, [r4, #20]
10051c3a:	42b0      	cmp	r0, r6
10051c3c:	d200      	bcs.n	10051c40 <LL_Set_Data_Length+0x90>
10051c3e:	4606      	mov	r6, r0
10051c40:	8ae0      	ldrh	r0, [r4, #22]
10051c42:	42a8      	cmp	r0, r5
10051c44:	d200      	bcs.n	10051c48 <LL_Set_Data_Length+0x98>
10051c46:	4605      	mov	r5, r0
10051c48:	8878      	ldrh	r0, [r7, #2]
10051c4a:	42b0      	cmp	r0, r6
10051c4c:	d104      	bne.n	10051c58 <LL_Set_Data_Length+0xa8>
10051c4e:	8a38      	ldrh	r0, [r7, #16]
10051c50:	42a8      	cmp	r0, r5
10051c52:	d101      	bne.n	10051c58 <LL_Set_Data_Length+0xa8>
10051c54:	2000      	movs	r0, #0
10051c56:	e7cd      	b.n	10051bf4 <LL_Set_Data_Length+0x44>
10051c58:	462a      	mov	r2, r5
10051c5a:	4631      	mov	r1, r6
10051c5c:	9802      	ldr	r0, [sp, #8]
10051c5e:	f7ff fee5 	bl	10051a2c <LL_Send_Length_Req>
10051c62:	e7c7      	b.n	10051bf4 <LL_Set_Data_Length+0x44>
10051c64:	20000d64 	.word	0x20000d64
10051c68:	00004149 	.word	0x00004149

10051c6c <LL_Write_Default_Data_Length>:
10051c6c:	b510      	push	{r4, lr}
10051c6e:	4a11      	ldr	r2, [pc, #68]	; (10051cb4 <LL_Write_Default_Data_Length+0x48>)
10051c70:	2341      	movs	r3, #65	; 0x41
10051c72:	6812      	ldr	r2, [r2, #0]
10051c74:	015b      	lsls	r3, r3, #5
10051c76:	18d2      	adds	r2, r2, r3
10051c78:	4603      	mov	r3, r0
10051c7a:	3b1b      	subs	r3, #27
10051c7c:	2be1      	cmp	r3, #225	; 0xe1
10051c7e:	d205      	bcs.n	10051c8c <LL_Write_Default_Data_Length+0x20>
10051c80:	460b      	mov	r3, r1
10051c82:	3bff      	subs	r3, #255	; 0xff
10051c84:	4c0c      	ldr	r4, [pc, #48]	; (10051cb8 <LL_Write_Default_Data_Length+0x4c>)
10051c86:	3b49      	subs	r3, #73	; 0x49
10051c88:	42a3      	cmp	r3, r4
10051c8a:	d301      	bcc.n	10051c90 <LL_Write_Default_Data_Length+0x24>
10051c8c:	2030      	movs	r0, #48	; 0x30
10051c8e:	bd10      	pop	{r4, pc}
10051c90:	32c0      	adds	r2, #192	; 0xc0
10051c92:	8390      	strh	r0, [r2, #28]
10051c94:	83d1      	strh	r1, [r2, #30]
10051c96:	8a93      	ldrh	r3, [r2, #20]
10051c98:	4283      	cmp	r3, r0
10051c9a:	d200      	bcs.n	10051c9e <LL_Write_Default_Data_Length+0x32>
10051c9c:	4618      	mov	r0, r3
10051c9e:	8ad3      	ldrh	r3, [r2, #22]
10051ca0:	428b      	cmp	r3, r1
10051ca2:	d200      	bcs.n	10051ca6 <LL_Write_Default_Data_Length+0x3a>
10051ca4:	4619      	mov	r1, r3
10051ca6:	b672      	cpsid	i
10051ca8:	8210      	strh	r0, [r2, #16]
10051caa:	8251      	strh	r1, [r2, #18]
10051cac:	b662      	cpsie	i
10051cae:	2000      	movs	r0, #0
10051cb0:	bd10      	pop	{r4, pc}
10051cb2:	0000      	.short	0x0000
10051cb4:	20000d64 	.word	0x20000d64
10051cb8:	00004149 	.word	0x00004149

10051cbc <MIN_U16>:
10051cbc:	4288      	cmp	r0, r1
10051cbe:	d300      	bcc.n	10051cc2 <MIN_U16+0x6>
10051cc0:	4608      	mov	r0, r1
10051cc2:	4770      	bx	lr

10051cc4 <ll_write_supported_data>:
10051cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051cc6:	461c      	mov	r4, r3
10051cc8:	4615      	mov	r5, r2
10051cca:	460e      	mov	r6, r1
10051ccc:	4607      	mov	r7, r0
10051cce:	f7ef ff5d 	bl	10041b8c <data_length_extension_csr_ucfg>
10051cd2:	2800      	cmp	r0, #0
10051cd4:	d005      	beq.n	10051ce2 <ll_write_supported_data+0x1e>
10051cd6:	f004 ff7d 	bl	10056bd4 <is_connected>
10051cda:	2800      	cmp	r0, #0
10051cdc:	d003      	beq.n	10051ce6 <ll_write_supported_data+0x22>
10051cde:	200c      	movs	r0, #12
10051ce0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051ce2:	2011      	movs	r0, #17
10051ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051ce6:	4912      	ldr	r1, [pc, #72]	; (10051d30 <ll_write_supported_data+0x6c>)
10051ce8:	2241      	movs	r2, #65	; 0x41
10051cea:	6809      	ldr	r1, [r1, #0]
10051cec:	0152      	lsls	r2, r2, #5
10051cee:	1889      	adds	r1, r1, r2
10051cf0:	463a      	mov	r2, r7
10051cf2:	2000      	movs	r0, #0
10051cf4:	3a1b      	subs	r2, #27
10051cf6:	2ae1      	cmp	r2, #225	; 0xe1
10051cf8:	d300      	bcc.n	10051cfc <ll_write_supported_data+0x38>
10051cfa:	2030      	movs	r0, #48	; 0x30
10051cfc:	4633      	mov	r3, r6
10051cfe:	3bff      	subs	r3, #255	; 0xff
10051d00:	4a0c      	ldr	r2, [pc, #48]	; (10051d34 <ll_write_supported_data+0x70>)
10051d02:	3b49      	subs	r3, #73	; 0x49
10051d04:	4293      	cmp	r3, r2
10051d06:	d300      	bcc.n	10051d0a <ll_write_supported_data+0x46>
10051d08:	2030      	movs	r0, #48	; 0x30
10051d0a:	462b      	mov	r3, r5
10051d0c:	3b1b      	subs	r3, #27
10051d0e:	2be1      	cmp	r3, #225	; 0xe1
10051d10:	d300      	bcc.n	10051d14 <ll_write_supported_data+0x50>
10051d12:	2030      	movs	r0, #48	; 0x30
10051d14:	4623      	mov	r3, r4
10051d16:	3bff      	subs	r3, #255	; 0xff
10051d18:	3b49      	subs	r3, #73	; 0x49
10051d1a:	4293      	cmp	r3, r2
10051d1c:	d300      	bcc.n	10051d20 <ll_write_supported_data+0x5c>
10051d1e:	2030      	movs	r0, #48	; 0x30
10051d20:	b672      	cpsid	i
10051d22:	31c0      	adds	r1, #192	; 0xc0
10051d24:	828f      	strh	r7, [r1, #20]
10051d26:	82ce      	strh	r6, [r1, #22]
10051d28:	830d      	strh	r5, [r1, #24]
10051d2a:	834c      	strh	r4, [r1, #26]
10051d2c:	b662      	cpsie	i
10051d2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051d30:	20000d64 	.word	0x20000d64
10051d34:	00000701 	.word	0x00000701

10051d38 <read_rssi>:
10051d38:	b518      	push	{r3, r4, lr}
10051d3a:	491c      	ldr	r1, [pc, #112]	; (10051dac <read_rssi+0x74>)
10051d3c:	2209      	movs	r2, #9
10051d3e:	6809      	ldr	r1, [r1, #0]
10051d40:	0212      	lsls	r2, r2, #8
10051d42:	188a      	adds	r2, r1, r2
10051d44:	2358      	movs	r3, #88	; 0x58
10051d46:	6b12      	ldr	r2, [r2, #48]	; 0x30
10051d48:	4358      	muls	r0, r3
10051d4a:	1812      	adds	r2, r2, r0
10051d4c:	2064      	movs	r0, #100	; 0x64
10051d4e:	466b      	mov	r3, sp
10051d50:	7018      	strb	r0, [r3, #0]
10051d52:	2309      	movs	r3, #9
10051d54:	06db      	lsls	r3, r3, #27
10051d56:	466c      	mov	r4, sp
10051d58:	7820      	ldrb	r0, [r4, #0]
10051d5a:	1e40      	subs	r0, r0, #1
10051d5c:	7020      	strb	r0, [r4, #0]
10051d5e:	68d8      	ldr	r0, [r3, #12]
10051d60:	03c0      	lsls	r0, r0, #15
10051d62:	d502      	bpl.n	10051d6a <read_rssi+0x32>
10051d64:	7820      	ldrb	r0, [r4, #0]
10051d66:	2800      	cmp	r0, #0
10051d68:	d1f5      	bne.n	10051d56 <read_rssi+0x1e>
10051d6a:	7820      	ldrb	r0, [r4, #0]
10051d6c:	6d08      	ldr	r0, [r1, #80]	; 0x50
10051d6e:	6d49      	ldr	r1, [r1, #84]	; 0x54
10051d70:	0c03      	lsrs	r3, r0, #16
10051d72:	0a18      	lsrs	r0, r3, #8
10051d74:	0200      	lsls	r0, r0, #8
10051d76:	b2c9      	uxtb	r1, r1
10051d78:	4308      	orrs	r0, r1
10051d7a:	b2d9      	uxtb	r1, r3
10051d7c:	2800      	cmp	r0, #0
10051d7e:	d001      	beq.n	10051d84 <read_rssi+0x4c>
10051d80:	290b      	cmp	r1, #11
10051d82:	d901      	bls.n	10051d88 <read_rssi+0x50>
10051d84:	207f      	movs	r0, #127	; 0x7f
10051d86:	e00e      	b.n	10051da6 <read_rssi+0x6e>
10051d88:	2306      	movs	r3, #6
10051d8a:	4359      	muls	r1, r3
10051d8c:	397f      	subs	r1, #127	; 0x7f
10051d8e:	e001      	b.n	10051d94 <read_rssi+0x5c>
10051d90:	0840      	lsrs	r0, r0, #1
10051d92:	1d89      	adds	r1, r1, #6
10051d94:	281e      	cmp	r0, #30
10051d96:	d8fb      	bhi.n	10051d90 <read_rssi+0x58>
10051d98:	23ff      	movs	r3, #255	; 0xff
10051d9a:	33a2      	adds	r3, #162	; 0xa2
10051d9c:	4358      	muls	r0, r3
10051d9e:	4b04      	ldr	r3, [pc, #16]	; (10051db0 <read_rssi+0x78>)
10051da0:	18c0      	adds	r0, r0, r3
10051da2:	0a80      	lsrs	r0, r0, #10
10051da4:	1840      	adds	r0, r0, r1
10051da6:	7390      	strb	r0, [r2, #14]
10051da8:	bd18      	pop	{r3, r4, pc}
10051daa:	0000      	.short	0x0000
10051dac:	20000d64 	.word	0x20000d64
10051db0:	000046a0 	.word	0x000046a0

10051db4 <LL_Create_Connection>:
10051db4:	b5f0      	push	{r4, r5, r6, r7, lr}
10051db6:	b08f      	sub	sp, #60	; 0x3c
10051db8:	4604      	mov	r4, r0
10051dba:	f002 f9fd 	bl	100541b8 <get_scan_connection>
10051dbe:	4601      	mov	r1, r0
10051dc0:	4894      	ldr	r0, [pc, #592]	; (10052014 <LL_Create_Connection+0x260>)
10051dc2:	2241      	movs	r2, #65	; 0x41
10051dc4:	6800      	ldr	r0, [r0, #0]
10051dc6:	0152      	lsls	r2, r2, #5
10051dc8:	1887      	adds	r7, r0, r2
10051dca:	4a93      	ldr	r2, [pc, #588]	; (10052018 <LL_Create_Connection+0x264>)
10051dcc:	1885      	adds	r5, r0, r2
10051dce:	1f12      	subs	r2, r2, #4
10051dd0:	1882      	adds	r2, r0, r2
10051dd2:	6b12      	ldr	r2, [r2, #48]	; 0x30
10051dd4:	9209      	str	r2, [sp, #36]	; 0x24
10051dd6:	227b      	movs	r2, #123	; 0x7b
10051dd8:	0112      	lsls	r2, r2, #4
10051dda:	1880      	adds	r0, r0, r2
10051ddc:	900b      	str	r0, [sp, #44]	; 0x2c
10051dde:	2908      	cmp	r1, #8
10051de0:	d202      	bcs.n	10051de8 <LL_Create_Connection+0x34>
10051de2:	200c      	movs	r0, #12
10051de4:	b00f      	add	sp, #60	; 0x3c
10051de6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051de8:	4638      	mov	r0, r7
10051dea:	30c0      	adds	r0, #192	; 0xc0
10051dec:	9003      	str	r0, [sp, #12]
10051dee:	7a00      	ldrb	r0, [r0, #8]
10051df0:	07c0      	lsls	r0, r0, #31
10051df2:	d001      	beq.n	10051df8 <LL_Create_Connection+0x44>
10051df4:	203a      	movs	r0, #58	; 0x3a
10051df6:	e7f5      	b.n	10051de4 <LL_Create_Connection+0x30>
10051df8:	8920      	ldrh	r0, [r4, #8]
10051dfa:	8961      	ldrh	r1, [r4, #10]
10051dfc:	88e2      	ldrh	r2, [r4, #6]
10051dfe:	1c40      	adds	r0, r0, #1
10051e00:	4350      	muls	r0, r2
10051e02:	0089      	lsls	r1, r1, #2
10051e04:	4288      	cmp	r0, r1
10051e06:	d301      	bcc.n	10051e0c <LL_Create_Connection+0x58>
10051e08:	2012      	movs	r0, #18
10051e0a:	e7eb      	b.n	10051de4 <LL_Create_Connection+0x30>
10051e0c:	8820      	ldrh	r0, [r4, #0]
10051e0e:	2205      	movs	r2, #5
10051e10:	0201      	lsls	r1, r0, #8
10051e12:	4638      	mov	r0, r7
10051e14:	3080      	adds	r0, #128	; 0x80
10051e16:	0252      	lsls	r2, r2, #9
10051e18:	60c1      	str	r1, [r0, #12]
10051e1a:	4291      	cmp	r1, r2
10051e1c:	d200      	bcs.n	10051e20 <LL_Create_Connection+0x6c>
10051e1e:	60c2      	str	r2, [r0, #12]
10051e20:	8861      	ldrh	r1, [r4, #2]
10051e22:	020a      	lsls	r2, r1, #8
10051e24:	6082      	str	r2, [r0, #8]
10051e26:	88a1      	ldrh	r1, [r4, #4]
10051e28:	044b      	lsls	r3, r1, #17
10051e2a:	0289      	lsls	r1, r1, #10
10051e2c:	1a59      	subs	r1, r3, r1
10051e2e:	428a      	cmp	r2, r1
10051e30:	d900      	bls.n	10051e34 <LL_Create_Connection+0x80>
10051e32:	6081      	str	r1, [r0, #8]
10051e34:	4638      	mov	r0, r7
10051e36:	3020      	adds	r0, #32
10051e38:	7c21      	ldrb	r1, [r4, #16]
10051e3a:	9008      	str	r0, [sp, #32]
10051e3c:	7101      	strb	r1, [r0, #4]
10051e3e:	4606      	mov	r6, r0
10051e40:	4621      	mov	r1, r4
10051e42:	7c62      	ldrb	r2, [r4, #17]
10051e44:	7e20      	ldrb	r0, [r4, #24]
10051e46:	2301      	movs	r3, #1
10051e48:	3112      	adds	r1, #18
10051e4a:	f004 f8e3 	bl	10056014 <LL_Check_And_Set_Addresses>
10051e4e:	2000      	movs	r0, #0
10051e50:	70f0      	strb	r0, [r6, #3]
10051e52:	88a0      	ldrh	r0, [r4, #4]
10051e54:	0241      	lsls	r1, r0, #9
10051e56:	980b      	ldr	r0, [sp, #44]	; 0x2c
10051e58:	6181      	str	r1, [r0, #24]
10051e5a:	2100      	movs	r1, #0
10051e5c:	2001      	movs	r0, #1
10051e5e:	f000 f8fd 	bl	1005205c <LL_Enable_Disable_Scan>
10051e62:	f002 f9a9 	bl	100541b8 <get_scan_connection>
10051e66:	2641      	movs	r6, #65	; 0x41
10051e68:	9006      	str	r0, [sp, #24]
10051e6a:	2808      	cmp	r0, #8
10051e6c:	d232      	bcs.n	10051ed4 <LL_Create_Connection+0x120>
10051e6e:	f7ef fe8d 	bl	10041b8c <data_length_extension_csr_ucfg>
10051e72:	2801      	cmp	r0, #1
10051e74:	d111      	bne.n	10051e9a <LL_Create_Connection+0xe6>
10051e76:	9803      	ldr	r0, [sp, #12]
10051e78:	8ac1      	ldrh	r1, [r0, #22]
10051e7a:	8b40      	ldrh	r0, [r0, #26]
10051e7c:	1808      	adds	r0, r1, r0
10051e7e:	4967      	ldr	r1, [pc, #412]	; (1005201c <LL_Create_Connection+0x268>)
10051e80:	3096      	adds	r0, #150	; 0x96
10051e82:	f7ee f9f1 	bl	10040268 <__aeabi_uidivmod>
10051e86:	1c40      	adds	r0, r0, #1
10051e88:	89a1      	ldrh	r1, [r4, #12]
10051e8a:	b280      	uxth	r0, r0
10051e8c:	4281      	cmp	r1, r0
10051e8e:	d200      	bcs.n	10051e92 <LL_Create_Connection+0xde>
10051e90:	81a0      	strh	r0, [r4, #12]
10051e92:	89e1      	ldrh	r1, [r4, #14]
10051e94:	4281      	cmp	r1, r0
10051e96:	d200      	bcs.n	10051e9a <LL_Create_Connection+0xe6>
10051e98:	81e0      	strh	r0, [r4, #14]
10051e9a:	89a1      	ldrh	r1, [r4, #12]
10051e9c:	2003      	movs	r0, #3
10051e9e:	2902      	cmp	r1, #2
10051ea0:	d800      	bhi.n	10051ea4 <LL_Create_Connection+0xf0>
10051ea2:	81a0      	strh	r0, [r4, #12]
10051ea4:	89e1      	ldrh	r1, [r4, #14]
10051ea6:	2902      	cmp	r1, #2
10051ea8:	d800      	bhi.n	10051eac <LL_Create_Connection+0xf8>
10051eaa:	81e0      	strh	r0, [r4, #14]
10051eac:	89e0      	ldrh	r0, [r4, #14]
10051eae:	89a1      	ldrh	r1, [r4, #12]
10051eb0:	88e2      	ldrh	r2, [r4, #6]
10051eb2:	0200      	lsls	r0, r0, #8
10051eb4:	0209      	lsls	r1, r1, #8
10051eb6:	0252      	lsls	r2, r2, #9
10051eb8:	9200      	str	r2, [sp, #0]
10051eba:	9101      	str	r1, [sp, #4]
10051ebc:	9002      	str	r0, [sp, #8]
10051ebe:	88a0      	ldrh	r0, [r4, #4]
10051ec0:	0243      	lsls	r3, r0, #9
10051ec2:	8860      	ldrh	r0, [r4, #2]
10051ec4:	0202      	lsls	r2, r0, #8
10051ec6:	8820      	ldrh	r0, [r4, #0]
10051ec8:	0201      	lsls	r1, r0, #8
10051eca:	9806      	ldr	r0, [sp, #24]
10051ecc:	f002 fab2 	bl	10054434 <request_connect_slot>
10051ed0:	0006      	movs	r6, r0
10051ed2:	d005      	beq.n	10051ee0 <LL_Create_Connection+0x12c>
10051ed4:	2100      	movs	r1, #0
10051ed6:	4608      	mov	r0, r1
10051ed8:	f000 f8c0 	bl	1005205c <LL_Enable_Disable_Scan>
10051edc:	4630      	mov	r0, r6
10051ede:	e781      	b.n	10051de4 <LL_Create_Connection+0x30>
10051ee0:	89e0      	ldrh	r0, [r4, #14]
10051ee2:	61f8      	str	r0, [r7, #28]
10051ee4:	6a28      	ldr	r0, [r5, #32]
10051ee6:	9000      	str	r0, [sp, #0]
10051ee8:	2000      	movs	r0, #0
10051eea:	9001      	str	r0, [sp, #4]
10051eec:	900c      	str	r0, [sp, #48]	; 0x30
10051eee:	2003      	movs	r0, #3
10051ef0:	9002      	str	r0, [sp, #8]
10051ef2:	990b      	ldr	r1, [sp, #44]	; 0x2c
10051ef4:	980b      	ldr	r0, [sp, #44]	; 0x2c
10051ef6:	8bc9      	ldrh	r1, [r1, #30]
10051ef8:	6980      	ldr	r0, [r0, #24]
10051efa:	1c49      	adds	r1, r1, #1
10051efc:	4348      	muls	r0, r1
10051efe:	01c0      	lsls	r0, r0, #7
10051f00:	0c00      	lsrs	r0, r0, #16
10051f02:	9005      	str	r0, [sp, #20]
10051f04:	8920      	ldrh	r0, [r4, #8]
10051f06:	900e      	str	r0, [sp, #56]	; 0x38
10051f08:	8960      	ldrh	r0, [r4, #10]
10051f0a:	900d      	str	r0, [sp, #52]	; 0x34
10051f0c:	e007      	b.n	10051f1e <LL_Create_Connection+0x16a>
10051f0e:	f7fa fcfd 	bl	1004c90c <Hal_Get_Random_Number>
10051f12:	4606      	mov	r6, r0
10051f14:	f7fa fcfa 	bl	1004c90c <Hal_Get_Random_Number>
10051f18:	0400      	lsls	r0, r0, #16
10051f1a:	4046      	eors	r6, r0
10051f1c:	9601      	str	r6, [sp, #4]
10051f1e:	9801      	ldr	r0, [sp, #4]
10051f20:	f000 fac0 	bl	100524a4 <check_access_address_patched>
10051f24:	2800      	cmp	r0, #0
10051f26:	d0f2      	beq.n	10051f0e <LL_Create_Connection+0x15a>
10051f28:	f7fa fcf0 	bl	1004c90c <Hal_Get_Random_Number>
10051f2c:	4606      	mov	r6, r0
10051f2e:	f7fa fced 	bl	1004c90c <Hal_Get_Random_Number>
10051f32:	0400      	lsls	r0, r0, #16
10051f34:	4046      	eors	r6, r0
10051f36:	0230      	lsls	r0, r6, #8
10051f38:	0a00      	lsrs	r0, r0, #8
10051f3a:	9003      	str	r0, [sp, #12]
10051f3c:	f7fa fce6 	bl	1004c90c <Hal_Get_Random_Number>
10051f40:	b2c0      	uxtb	r0, r0
10051f42:	0706      	lsls	r6, r0, #28
10051f44:	0f36      	lsrs	r6, r6, #28
10051f46:	2e0c      	cmp	r6, #12
10051f48:	d304      	bcc.n	10051f54 <LL_Create_Connection+0x1a0>
10051f4a:	0640      	lsls	r0, r0, #25
10051f4c:	0f40      	lsrs	r0, r0, #29
10051f4e:	1980      	adds	r0, r0, r6
10051f50:	380c      	subs	r0, #12
10051f52:	b2c6      	uxtb	r6, r0
10051f54:	7e20      	ldrb	r0, [r4, #24]
10051f56:	9900      	ldr	r1, [sp, #0]
10051f58:	0180      	lsls	r0, r0, #6
10051f5a:	1d40      	adds	r0, r0, #5
10051f5c:	7008      	strb	r0, [r1, #0]
10051f5e:	9c00      	ldr	r4, [sp, #0]
10051f60:	2022      	movs	r0, #34	; 0x22
10051f62:	7060      	strb	r0, [r4, #1]
10051f64:	1ca4      	adds	r4, r4, #2
10051f66:	4620      	mov	r0, r4
10051f68:	1d76      	adds	r6, r6, #5
10051f6a:	6839      	ldr	r1, [r7, #0]
10051f6c:	f000 fc24 	bl	100527b8 <int32ToLe4Byte>
10051f70:	88b9      	ldrh	r1, [r7, #4]
10051f72:	7121      	strb	r1, [r4, #4]
10051f74:	0a09      	lsrs	r1, r1, #8
10051f76:	7161      	strb	r1, [r4, #5]
10051f78:	340c      	adds	r4, #12
10051f7a:	4620      	mov	r0, r4
10051f7c:	9901      	ldr	r1, [sp, #4]
10051f7e:	f000 fc1b 	bl	100527b8 <int32ToLe4Byte>
10051f82:	1d24      	adds	r4, r4, #4
10051f84:	4620      	mov	r0, r4
10051f86:	9903      	ldr	r1, [sp, #12]
10051f88:	f000 fc10 	bl	100527ac <int32ToLe3Byte>
10051f8c:	9802      	ldr	r0, [sp, #8]
10051f8e:	70e0      	strb	r0, [r4, #3]
10051f90:	980c      	ldr	r0, [sp, #48]	; 0x30
10051f92:	7120      	strb	r0, [r4, #4]
10051f94:	980c      	ldr	r0, [sp, #48]	; 0x30
10051f96:	2205      	movs	r2, #5
10051f98:	0a00      	lsrs	r0, r0, #8
10051f9a:	7160      	strb	r0, [r4, #5]
10051f9c:	9805      	ldr	r0, [sp, #20]
10051f9e:	71a0      	strb	r0, [r4, #6]
10051fa0:	9805      	ldr	r0, [sp, #20]
10051fa2:	0a00      	lsrs	r0, r0, #8
10051fa4:	71e0      	strb	r0, [r4, #7]
10051fa6:	980e      	ldr	r0, [sp, #56]	; 0x38
10051fa8:	7220      	strb	r0, [r4, #8]
10051faa:	980e      	ldr	r0, [sp, #56]	; 0x38
10051fac:	0a00      	lsrs	r0, r0, #8
10051fae:	7260      	strb	r0, [r4, #9]
10051fb0:	980d      	ldr	r0, [sp, #52]	; 0x34
10051fb2:	72a0      	strb	r0, [r4, #10]
10051fb4:	980d      	ldr	r0, [sp, #52]	; 0x34
10051fb6:	0a00      	lsrs	r0, r0, #8
10051fb8:	72e0      	strb	r0, [r4, #11]
10051fba:	4816      	ldr	r0, [pc, #88]	; (10052014 <LL_Create_Connection+0x260>)
10051fbc:	340c      	adds	r4, #12
10051fbe:	6800      	ldr	r0, [r0, #0]
10051fc0:	4621      	mov	r1, r4
10051fc2:	3048      	adds	r0, #72	; 0x48
10051fc4:	f7fa fcde 	bl	1004c984 <char_copy>
10051fc8:	4815      	ldr	r0, [pc, #84]	; (10052020 <LL_Create_Connection+0x26c>)
10051fca:	7b80      	ldrb	r0, [r0, #14]
10051fcc:	0140      	lsls	r0, r0, #5
10051fce:	1980      	adds	r0, r0, r6
10051fd0:	7160      	strb	r0, [r4, #5]
10051fd2:	6a28      	ldr	r0, [r5, #32]
10051fd4:	2142      	movs	r1, #66	; 0x42
10051fd6:	68aa      	ldr	r2, [r5, #8]
10051fd8:	68ab      	ldr	r3, [r5, #8]
10051fda:	8058      	strh	r0, [r3, #2]
10051fdc:	68a8      	ldr	r0, [r5, #8]
10051fde:	8002      	strh	r2, [r0, #0]
10051fe0:	9806      	ldr	r0, [sp, #24]
10051fe2:	2358      	movs	r3, #88	; 0x58
10051fe4:	4358      	muls	r0, r3
10051fe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
10051fe8:	9a05      	ldr	r2, [sp, #20]
10051fea:	18c0      	adds	r0, r0, r3
10051fec:	8702      	strh	r2, [r0, #56]	; 0x38
10051fee:	2200      	movs	r2, #0
10051ff0:	7142      	strb	r2, [r0, #5]
10051ff2:	68a8      	ldr	r0, [r5, #8]
10051ff4:	1dc0      	adds	r0, r0, #7
10051ff6:	f000 fbd9 	bl	100527ac <int32ToLe3Byte>
10051ffa:	68a9      	ldr	r1, [r5, #8]
10051ffc:	2001      	movs	r0, #1
10051ffe:	72c8      	strb	r0, [r1, #11]
10052000:	9806      	ldr	r0, [sp, #24]
10052002:	68a9      	ldr	r1, [r5, #8]
10052004:	0140      	lsls	r0, r0, #5
10052006:	1d00      	adds	r0, r0, #4
10052008:	7288      	strb	r0, [r1, #10]
1005200a:	9808      	ldr	r0, [sp, #32]
1005200c:	2102      	movs	r1, #2
1005200e:	70c1      	strb	r1, [r0, #3]
10052010:	2000      	movs	r0, #0
10052012:	e6e7      	b.n	10051de4 <LL_Create_Connection+0x30>
10052014:	20000d64 	.word	0x20000d64
10052018:	00000904 	.word	0x00000904
1005201c:	00000271 	.word	0x00000271
10052020:	200002fc 	.word	0x200002fc

10052024 <LL_Create_Connection_Cancel>:
10052024:	b510      	push	{r4, lr}
10052026:	b08a      	sub	sp, #40	; 0x28
10052028:	a806      	add	r0, sp, #24
1005202a:	f004 fe59 	bl	10056ce0 <LL_Cancel_Connection_Req>
1005202e:	0004      	movs	r4, r0
10052030:	d111      	bne.n	10052056 <LL_Create_Connection_Cancel+0x32>
10052032:	2100      	movs	r1, #0
10052034:	9107      	str	r1, [sp, #28]
10052036:	9108      	str	r1, [sp, #32]
10052038:	9102      	str	r1, [sp, #8]
1005203a:	9103      	str	r1, [sp, #12]
1005203c:	9104      	str	r1, [sp, #16]
1005203e:	9105      	str	r1, [sp, #20]
10052040:	4668      	mov	r0, sp
10052042:	7e00      	ldrb	r0, [r0, #24]
10052044:	a907      	add	r1, sp, #28
10052046:	9101      	str	r1, [sp, #4]
10052048:	2300      	movs	r3, #0
1005204a:	9000      	str	r0, [sp, #0]
1005204c:	2102      	movs	r1, #2
1005204e:	461a      	mov	r2, r3
10052050:	4608      	mov	r0, r1
10052052:	f000 fb31 	bl	100526b8 <hci_le_connection_complete_event_push>
10052056:	4620      	mov	r0, r4
10052058:	b00a      	add	sp, #40	; 0x28
1005205a:	bd10      	pop	{r4, pc}

1005205c <LL_Enable_Disable_Scan>:
1005205c:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1005205e:	4605      	mov	r5, r0
10052060:	4887      	ldr	r0, [pc, #540]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
10052062:	b08d      	sub	sp, #52	; 0x34
10052064:	6801      	ldr	r1, [r0, #0]
10052066:	2041      	movs	r0, #65	; 0x41
10052068:	0140      	lsls	r0, r0, #5
1005206a:	180f      	adds	r7, r1, r0
1005206c:	4885      	ldr	r0, [pc, #532]	; (10052284 <LL_Enable_Disable_Scan+0x228>)
1005206e:	180c      	adds	r4, r1, r0
10052070:	207b      	movs	r0, #123	; 0x7b
10052072:	0100      	lsls	r0, r0, #4
10052074:	1808      	adds	r0, r1, r0
10052076:	9004      	str	r0, [sp, #16]
10052078:	2009      	movs	r0, #9
1005207a:	0200      	lsls	r0, r0, #8
1005207c:	1808      	adds	r0, r1, r0
1005207e:	6b00      	ldr	r0, [r0, #48]	; 0x30
10052080:	9006      	str	r0, [sp, #24]
10052082:	f002 f899 	bl	100541b8 <get_scan_connection>
10052086:	4606      	mov	r6, r0
10052088:	21e0      	movs	r1, #224	; 0xe0
1005208a:	980e      	ldr	r0, [sp, #56]	; 0x38
1005208c:	55c8      	strb	r0, [r1, r7]
1005208e:	4630      	mov	r0, r6
10052090:	2e08      	cmp	r6, #8
10052092:	d20a      	bcs.n	100520aa <LL_Enable_Disable_Scan+0x4e>
10052094:	2d00      	cmp	r5, #0
10052096:	d17d      	bne.n	10052194 <LL_Enable_Disable_Scan+0x138>
10052098:	b672      	cpsid	i
1005209a:	f001 ff37 	bl	10053f0c <cancel_current_master>
1005209e:	b662      	cpsie	i
100520a0:	4630      	mov	r0, r6
100520a2:	f000 ff8d 	bl	10052fc0 <wait_for_prescheduled_slot_cancellation>
100520a6:	2500      	movs	r5, #0
100520a8:	e0e6      	b.n	10052278 <LL_Enable_Disable_Scan+0x21c>
100520aa:	2d00      	cmp	r5, #0
100520ac:	d072      	beq.n	10052194 <LL_Enable_Disable_Scan+0x138>
100520ae:	4638      	mov	r0, r7
100520b0:	3080      	adds	r0, #128	; 0x80
100520b2:	68c1      	ldr	r1, [r0, #12]
100520b4:	9102      	str	r1, [sp, #8]
100520b6:	6885      	ldr	r5, [r0, #8]
100520b8:	4873      	ldr	r0, [pc, #460]	; (10052288 <LL_Enable_Disable_Scan+0x22c>)
100520ba:	9008      	str	r0, [sp, #32]
100520bc:	2642      	movs	r6, #66	; 0x42
100520be:	2000      	movs	r0, #0
100520c0:	9609      	str	r6, [sp, #36]	; 0x24
100520c2:	900c      	str	r0, [sp, #48]	; 0x30
100520c4:	f002 f85e 	bl	10054184 <get_next_free_slot>
100520c8:	ab05      	add	r3, sp, #20
100520ca:	462a      	mov	r2, r5
100520cc:	9003      	str	r0, [sp, #12]
100520ce:	9902      	ldr	r1, [sp, #8]
100520d0:	f002 f9ea 	bl	100544a8 <request_scan_slot>
100520d4:	2101      	movs	r1, #1
100520d6:	4605      	mov	r5, r0
100520d8:	0449      	lsls	r1, r1, #17
100520da:	e005      	b.n	100520e8 <LL_Enable_Disable_Scan+0x8c>
100520dc:	0880      	lsrs	r0, r0, #2
100520de:	9005      	str	r0, [sp, #20]
100520e0:	980c      	ldr	r0, [sp, #48]	; 0x30
100520e2:	1c40      	adds	r0, r0, #1
100520e4:	b2c0      	uxtb	r0, r0
100520e6:	900c      	str	r0, [sp, #48]	; 0x30
100520e8:	9805      	ldr	r0, [sp, #20]
100520ea:	4288      	cmp	r0, r1
100520ec:	d8f6      	bhi.n	100520dc <LL_Enable_Disable_Scan+0x80>
100520ee:	980c      	ldr	r0, [sp, #48]	; 0x30
100520f0:	9905      	ldr	r1, [sp, #20]
100520f2:	0480      	lsls	r0, r0, #18
100520f4:	1840      	adds	r0, r0, r1
100520f6:	210b      	movs	r1, #11
100520f8:	0509      	lsls	r1, r1, #20
100520fa:	1840      	adds	r0, r0, r1
100520fc:	9005      	str	r0, [sp, #20]
100520fe:	6878      	ldr	r0, [r7, #4]
10052100:	2140      	movs	r1, #64	; 0x40
10052102:	0a80      	lsrs	r0, r0, #10
10052104:	4008      	ands	r0, r1
10052106:	495e      	ldr	r1, [pc, #376]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
10052108:	1cc0      	adds	r0, r0, #3
1005210a:	680a      	ldr	r2, [r1, #0]
1005210c:	2109      	movs	r1, #9
1005210e:	0209      	lsls	r1, r1, #8
10052110:	1851      	adds	r1, r2, r1
10052112:	6d09      	ldr	r1, [r1, #80]	; 0x50
10052114:	7008      	strb	r0, [r1, #0]
10052116:	485a      	ldr	r0, [pc, #360]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
10052118:	210c      	movs	r1, #12
1005211a:	6802      	ldr	r2, [r0, #0]
1005211c:	2009      	movs	r0, #9
1005211e:	0200      	lsls	r0, r0, #8
10052120:	1810      	adds	r0, r2, r0
10052122:	6d00      	ldr	r0, [r0, #80]	; 0x50
10052124:	7041      	strb	r1, [r0, #1]
10052126:	4856      	ldr	r0, [pc, #344]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
10052128:	6839      	ldr	r1, [r7, #0]
1005212a:	6802      	ldr	r2, [r0, #0]
1005212c:	2009      	movs	r0, #9
1005212e:	0200      	lsls	r0, r0, #8
10052130:	1810      	adds	r0, r2, r0
10052132:	6d00      	ldr	r0, [r0, #80]	; 0x50
10052134:	1c80      	adds	r0, r0, #2
10052136:	f000 fb3f 	bl	100527b8 <int32ToLe4Byte>
1005213a:	4851      	ldr	r0, [pc, #324]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
1005213c:	6801      	ldr	r1, [r0, #0]
1005213e:	2009      	movs	r0, #9
10052140:	0200      	lsls	r0, r0, #8
10052142:	1808      	adds	r0, r1, r0
10052144:	6d01      	ldr	r1, [r0, #80]	; 0x50
10052146:	88b8      	ldrh	r0, [r7, #4]
10052148:	7188      	strb	r0, [r1, #6]
1005214a:	0a00      	lsrs	r0, r0, #8
1005214c:	71c8      	strb	r0, [r1, #7]
1005214e:	484c      	ldr	r0, [pc, #304]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
10052150:	6801      	ldr	r1, [r0, #0]
10052152:	2009      	movs	r0, #9
10052154:	0200      	lsls	r0, r0, #8
10052156:	1808      	adds	r0, r1, r0
10052158:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
1005215a:	3190      	adds	r1, #144	; 0x90
1005215c:	61a1      	str	r1, [r4, #24]
1005215e:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
10052160:	3160      	adds	r1, #96	; 0x60
10052162:	6339      	str	r1, [r7, #48]	; 0x30
10052164:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
10052166:	3130      	adds	r1, #48	; 0x30
10052168:	61e1      	str	r1, [r4, #28]
1005216a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
1005216c:	6220      	str	r0, [r4, #32]
1005216e:	69e1      	ldr	r1, [r4, #28]
10052170:	2000      	movs	r0, #0
10052172:	7008      	strb	r0, [r1, #0]
10052174:	6a21      	ldr	r1, [r4, #32]
10052176:	7008      	strb	r0, [r1, #0]
10052178:	69a0      	ldr	r0, [r4, #24]
1005217a:	6861      	ldr	r1, [r4, #4]
1005217c:	68e2      	ldr	r2, [r4, #12]
1005217e:	8050      	strh	r0, [r2, #2]
10052180:	68e0      	ldr	r0, [r4, #12]
10052182:	8001      	strh	r1, [r0, #0]
10052184:	8e38      	ldrh	r0, [r7, #48]	; 0x30
10052186:	68e1      	ldr	r1, [r4, #12]
10052188:	6862      	ldr	r2, [r4, #4]
1005218a:	8050      	strh	r0, [r2, #2]
1005218c:	6860      	ldr	r0, [r4, #4]
1005218e:	8001      	strh	r1, [r0, #0]
10052190:	483b      	ldr	r0, [pc, #236]	; (10052280 <LL_Enable_Disable_Scan+0x224>)
10052192:	e000      	b.n	10052196 <LL_Enable_Disable_Scan+0x13a>
10052194:	e06f      	b.n	10052276 <LL_Enable_Disable_Scan+0x21a>
10052196:	6801      	ldr	r1, [r0, #0]
10052198:	2009      	movs	r0, #9
1005219a:	0200      	lsls	r0, r0, #8
1005219c:	1808      	adds	r0, r1, r0
1005219e:	6d00      	ldr	r0, [r0, #80]	; 0x50
100521a0:	6821      	ldr	r1, [r4, #0]
100521a2:	6822      	ldr	r2, [r4, #0]
100521a4:	8050      	strh	r0, [r2, #2]
100521a6:	6820      	ldr	r0, [r4, #0]
100521a8:	8001      	strh	r1, [r0, #0]
100521aa:	2100      	movs	r1, #0
100521ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
100521ae:	6823      	ldr	r3, [r4, #0]
100521b0:	1dc8      	adds	r0, r1, #7
100521b2:	541a      	strb	r2, [r3, r0]
100521b4:	68e2      	ldr	r2, [r4, #12]
100521b6:	5416      	strb	r6, [r2, r0]
100521b8:	6862      	ldr	r2, [r4, #4]
100521ba:	5416      	strb	r6, [r2, r0]
100521bc:	9a05      	ldr	r2, [sp, #20]
100521be:	68e3      	ldr	r3, [r4, #12]
100521c0:	1d08      	adds	r0, r1, #4
100521c2:	541a      	strb	r2, [r3, r0]
100521c4:	9a08      	ldr	r2, [sp, #32]
100521c6:	6863      	ldr	r3, [r4, #4]
100521c8:	541a      	strb	r2, [r3, r0]
100521ca:	9a05      	ldr	r2, [sp, #20]
100521cc:	6823      	ldr	r3, [r4, #0]
100521ce:	541a      	strb	r2, [r3, r0]
100521d0:	9809      	ldr	r0, [sp, #36]	; 0x24
100521d2:	1c49      	adds	r1, r1, #1
100521d4:	0a00      	lsrs	r0, r0, #8
100521d6:	9009      	str	r0, [sp, #36]	; 0x24
100521d8:	9805      	ldr	r0, [sp, #20]
100521da:	0a36      	lsrs	r6, r6, #8
100521dc:	0a00      	lsrs	r0, r0, #8
100521de:	9005      	str	r0, [sp, #20]
100521e0:	9808      	ldr	r0, [sp, #32]
100521e2:	b2c9      	uxtb	r1, r1
100521e4:	0a00      	lsrs	r0, r0, #8
100521e6:	9008      	str	r0, [sp, #32]
100521e8:	2903      	cmp	r1, #3
100521ea:	d3df      	bcc.n	100521ac <LL_Enable_Disable_Scan+0x150>
100521ec:	9803      	ldr	r0, [sp, #12]
100521ee:	68e2      	ldr	r2, [r4, #12]
100521f0:	0140      	lsls	r0, r0, #5
100521f2:	4601      	mov	r1, r0
100521f4:	3113      	adds	r1, #19
100521f6:	7291      	strb	r1, [r2, #10]
100521f8:	6821      	ldr	r1, [r4, #0]
100521fa:	7288      	strb	r0, [r1, #10]
100521fc:	6861      	ldr	r1, [r4, #4]
100521fe:	7288      	strb	r0, [r1, #10]
10052200:	68e0      	ldr	r0, [r4, #12]
10052202:	2303      	movs	r3, #3
10052204:	72c3      	strb	r3, [r0, #11]
10052206:	6820      	ldr	r0, [r4, #0]
10052208:	2101      	movs	r1, #1
1005220a:	72c1      	strb	r1, [r0, #11]
1005220c:	6860      	ldr	r0, [r4, #4]
1005220e:	72c3      	strb	r3, [r0, #11]
10052210:	9803      	ldr	r0, [sp, #12]
10052212:	2808      	cmp	r0, #8
10052214:	d22b      	bcs.n	1005226e <LL_Enable_Disable_Scan+0x212>
10052216:	2d00      	cmp	r5, #0
10052218:	d12e      	bne.n	10052278 <LL_Enable_Disable_Scan+0x21c>
1005221a:	4a1c      	ldr	r2, [pc, #112]	; (1005228c <LL_Enable_Disable_Scan+0x230>)
1005221c:	0180      	lsls	r0, r0, #6
1005221e:	1880      	adds	r0, r0, r2
10052220:	2200      	movs	r2, #0
10052222:	7282      	strb	r2, [r0, #10]
10052224:	2627      	movs	r6, #39	; 0x27
10052226:	72c6      	strb	r6, [r0, #11]
10052228:	6826      	ldr	r6, [r4, #0]
1005222a:	8206      	strh	r6, [r0, #16]
1005222c:	68e4      	ldr	r4, [r4, #12]
1005222e:	8244      	strh	r4, [r0, #18]
10052230:	4c17      	ldr	r4, [pc, #92]	; (10052290 <LL_Enable_Disable_Scan+0x234>)
10052232:	61c4      	str	r4, [r0, #28]
10052234:	4c17      	ldr	r4, [pc, #92]	; (10052294 <LL_Enable_Disable_Scan+0x238>)
10052236:	6184      	str	r4, [r0, #24]
10052238:	2420      	movs	r4, #32
1005223a:	5421      	strb	r1, [r4, r0]
1005223c:	75c2      	strb	r2, [r0, #23]
1005223e:	9803      	ldr	r0, [sp, #12]
10052240:	2458      	movs	r4, #88	; 0x58
10052242:	4360      	muls	r0, r4
10052244:	9c06      	ldr	r4, [sp, #24]
10052246:	1900      	adds	r0, r0, r4
10052248:	7142      	strb	r2, [r0, #5]
1005224a:	b672      	cpsid	i
1005224c:	9c04      	ldr	r4, [sp, #16]
1005224e:	9e03      	ldr	r6, [sp, #12]
10052250:	7d24      	ldrb	r4, [r4, #20]
10052252:	40b1      	lsls	r1, r6
10052254:	7083      	strb	r3, [r0, #2]
10052256:	4321      	orrs	r1, r4
10052258:	2300      	movs	r3, #0
1005225a:	43db      	mvns	r3, r3
1005225c:	8143      	strh	r3, [r0, #10]
1005225e:	73c2      	strb	r2, [r0, #15]
10052260:	9804      	ldr	r0, [sp, #16]
10052262:	7501      	strb	r1, [r0, #20]
10052264:	b662      	cpsie	i
10052266:	4620      	mov	r0, r4
10052268:	f002 fa24 	bl	100546b4 <start_timebase>
1005226c:	e004      	b.n	10052278 <LL_Enable_Disable_Scan+0x21c>
1005226e:	2d00      	cmp	r5, #0
10052270:	d102      	bne.n	10052278 <LL_Enable_Disable_Scan+0x21c>
10052272:	2541      	movs	r5, #65	; 0x41
10052274:	e000      	b.n	10052278 <LL_Enable_Disable_Scan+0x21c>
10052276:	250c      	movs	r5, #12
10052278:	4628      	mov	r0, r5
1005227a:	b00f      	add	sp, #60	; 0x3c
1005227c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005227e:	0000      	.short	0x0000
10052280:	20000d64 	.word	0x20000d64
10052284:	00000904 	.word	0x00000904
10052288:	00b0012c 	.word	0x00b0012c
1005228c:	200000cc 	.word	0x200000cc
10052290:	00555555 	.word	0x00555555
10052294:	8e89bed6 	.word	0x8e89bed6

10052298 <LL_Start_Connection_Update>:
10052298:	b5f0      	push	{r4, r5, r6, r7, lr}
1005229a:	4605      	mov	r5, r0
1005229c:	8941      	ldrh	r1, [r0, #10]
1005229e:	2003      	movs	r0, #3
100522a0:	b08f      	sub	sp, #60	; 0x3c
100522a2:	2902      	cmp	r1, #2
100522a4:	d800      	bhi.n	100522a8 <LL_Start_Connection_Update+0x10>
100522a6:	8168      	strh	r0, [r5, #10]
100522a8:	89a9      	ldrh	r1, [r5, #12]
100522aa:	2902      	cmp	r1, #2
100522ac:	d800      	bhi.n	100522b0 <LL_Start_Connection_Update+0x18>
100522ae:	81a8      	strh	r0, [r5, #12]
100522b0:	484a      	ldr	r0, [pc, #296]	; (100523dc <LL_Start_Connection_Update+0x144>)
100522b2:	2141      	movs	r1, #65	; 0x41
100522b4:	6800      	ldr	r0, [r0, #0]
100522b6:	0149      	lsls	r1, r1, #5
100522b8:	1844      	adds	r4, r0, r1
100522ba:	8828      	ldrh	r0, [r5, #0]
100522bc:	2102      	movs	r1, #2
100522be:	f001 ff1d 	bl	100540fc <get_connection_no>
100522c2:	2808      	cmp	r0, #8
100522c4:	d302      	bcc.n	100522cc <LL_Start_Connection_Update+0x34>
100522c6:	2002      	movs	r0, #2
100522c8:	b00f      	add	sp, #60	; 0x3c
100522ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
100522cc:	4626      	mov	r6, r4
100522ce:	36c0      	adds	r6, #192	; 0xc0
100522d0:	7bb1      	ldrb	r1, [r6, #14]
100522d2:	2908      	cmp	r1, #8
100522d4:	d201      	bcs.n	100522da <LL_Start_Connection_Update+0x42>
100522d6:	200c      	movs	r0, #12
100522d8:	e7f6      	b.n	100522c8 <LL_Start_Connection_Update+0x30>
100522da:	7a31      	ldrb	r1, [r6, #8]
100522dc:	07c9      	lsls	r1, r1, #31
100522de:	d001      	beq.n	100522e4 <LL_Start_Connection_Update+0x4c>
100522e0:	203a      	movs	r0, #58	; 0x3a
100522e2:	e7f1      	b.n	100522c8 <LL_Start_Connection_Update+0x30>
100522e4:	8869      	ldrh	r1, [r5, #2]
100522e6:	0249      	lsls	r1, r1, #9
100522e8:	9108      	str	r1, [sp, #32]
100522ea:	88a9      	ldrh	r1, [r5, #4]
100522ec:	892f      	ldrh	r7, [r5, #8]
100522ee:	970b      	str	r7, [sp, #44]	; 0x2c
100522f0:	89ab      	ldrh	r3, [r5, #12]
100522f2:	024a      	lsls	r2, r1, #9
100522f4:	021b      	lsls	r3, r3, #8
100522f6:	930c      	str	r3, [sp, #48]	; 0x30
100522f8:	896b      	ldrh	r3, [r5, #10]
100522fa:	88ed      	ldrh	r5, [r5, #6]
100522fc:	950a      	str	r5, [sp, #40]	; 0x28
100522fe:	1c6d      	adds	r5, r5, #1
10052300:	434d      	muls	r5, r1
10052302:	021b      	lsls	r3, r3, #8
10052304:	00b9      	lsls	r1, r7, #2
10052306:	428d      	cmp	r5, r1
10052308:	d301      	bcc.n	1005230e <LL_Start_Connection_Update+0x76>
1005230a:	2012      	movs	r0, #18
1005230c:	e7dc      	b.n	100522c8 <LL_Start_Connection_Update+0x30>
1005230e:	4933      	ldr	r1, [pc, #204]	; (100523dc <LL_Start_Connection_Update+0x144>)
10052310:	2509      	movs	r5, #9
10052312:	6809      	ldr	r1, [r1, #0]
10052314:	022d      	lsls	r5, r5, #8
10052316:	1949      	adds	r1, r1, r5
10052318:	6b0d      	ldr	r5, [r1, #48]	; 0x30
1005231a:	2158      	movs	r1, #88	; 0x58
1005231c:	4341      	muls	r1, r0
1005231e:	186d      	adds	r5, r5, r1
10052320:	217d      	movs	r1, #125	; 0x7d
10052322:	73b0      	strb	r0, [r6, #14]
10052324:	0249      	lsls	r1, r1, #9
10052326:	8171      	strh	r1, [r6, #10]
10052328:	89a9      	ldrh	r1, [r5, #12]
1005232a:	2706      	movs	r7, #6
1005232c:	4379      	muls	r1, r7
1005232e:	3109      	adds	r1, #9
10052330:	b28f      	uxth	r7, r1
10052332:	8929      	ldrh	r1, [r5, #8]
10052334:	46bc      	mov	ip, r7
10052336:	4461      	add	r1, ip
10052338:	b289      	uxth	r1, r1
1005233a:	9105      	str	r1, [sp, #20]
1005233c:	9202      	str	r2, [sp, #8]
1005233e:	a908      	add	r1, sp, #32
10052340:	af0e      	add	r7, sp, #56	; 0x38
10052342:	9300      	str	r3, [sp, #0]
10052344:	9101      	str	r1, [sp, #4]
10052346:	2203      	movs	r2, #3
10052348:	9703      	str	r7, [sp, #12]
1005234a:	0252      	lsls	r2, r2, #9
1005234c:	4661      	mov	r1, ip
1005234e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10052350:	f002 f8f4 	bl	1005453c <reschedule_wakeup_slot>
10052354:	2308      	movs	r3, #8
10052356:	2800      	cmp	r0, #0
10052358:	d001      	beq.n	1005235e <LL_Start_Connection_Update+0xc6>
1005235a:	73b3      	strb	r3, [r6, #14]
1005235c:	e7b4      	b.n	100522c8 <LL_Start_Connection_Update+0x30>
1005235e:	980e      	ldr	r0, [sp, #56]	; 0x38
10052360:	9f0a      	ldr	r7, [sp, #40]	; 0x28
10052362:	30ff      	adds	r0, #255	; 0xff
10052364:	3001      	adds	r0, #1
10052366:	0a40      	lsrs	r0, r0, #9
10052368:	900e      	str	r0, [sp, #56]	; 0x38
1005236a:	9808      	ldr	r0, [sp, #32]
1005236c:	990e      	ldr	r1, [sp, #56]	; 0x38
1005236e:	0a40      	lsrs	r0, r0, #9
10052370:	9008      	str	r0, [sp, #32]
10052372:	0400      	lsls	r0, r0, #16
10052374:	4308      	orrs	r0, r1
10052376:	990b      	ldr	r1, [sp, #44]	; 0x2c
10052378:	4a19      	ldr	r2, [pc, #100]	; (100523e0 <LL_Start_Connection_Update+0x148>)
1005237a:	0409      	lsls	r1, r1, #16
1005237c:	4339      	orrs	r1, r7
1005237e:	b672      	cpsid	i
10052380:	796f      	ldrb	r7, [r5, #5]
10052382:	07bf      	lsls	r7, r7, #30
10052384:	d002      	beq.n	1005238c <LL_Start_Connection_Update+0xf4>
10052386:	b662      	cpsie	i
10052388:	73b3      	strb	r3, [r6, #14]
1005238a:	e7a9      	b.n	100522e0 <LL_Start_Connection_Update+0x48>
1005238c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
1005238e:	601a      	str	r2, [r3, #0]
10052390:	6b6a      	ldr	r2, [r5, #52]	; 0x34
10052392:	6050      	str	r0, [r2, #4]
10052394:	6b68      	ldr	r0, [r5, #52]	; 0x34
10052396:	6081      	str	r1, [r0, #8]
10052398:	6b69      	ldr	r1, [r5, #52]	; 0x34
1005239a:	9805      	ldr	r0, [sp, #20]
1005239c:	60c8      	str	r0, [r1, #12]
1005239e:	7968      	ldrb	r0, [r5, #5]
100523a0:	2101      	movs	r1, #1
100523a2:	4308      	orrs	r0, r1
100523a4:	7168      	strb	r0, [r5, #5]
100523a6:	b662      	cpsie	i
100523a8:	4620      	mov	r0, r4
100523aa:	3040      	adds	r0, #64	; 0x40
100523ac:	77c1      	strb	r1, [r0, #31]
100523ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
100523b0:	8442      	strh	r2, [r0, #34]	; 0x22
100523b2:	239c      	movs	r3, #156	; 0x9c
100523b4:	9a08      	ldr	r2, [sp, #32]
100523b6:	531a      	strh	r2, [r3, r4]
100523b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100523ba:	8542      	strh	r2, [r0, #42]	; 0x2a
100523bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
100523be:	85c2      	strh	r2, [r0, #46]	; 0x2e
100523c0:	9a05      	ldr	r2, [sp, #20]
100523c2:	8642      	strh	r2, [r0, #50]	; 0x32
100523c4:	980c      	ldr	r0, [sp, #48]	; 0x30
100523c6:	61e0      	str	r0, [r4, #28]
100523c8:	79a8      	ldrb	r0, [r5, #6]
100523ca:	06c0      	lsls	r0, r0, #27
100523cc:	0ec0      	lsrs	r0, r0, #27
100523ce:	4308      	orrs	r0, r1
100523d0:	71a8      	strb	r0, [r5, #6]
100523d2:	7a30      	ldrb	r0, [r6, #8]
100523d4:	4308      	orrs	r0, r1
100523d6:	7230      	strb	r0, [r6, #8]
100523d8:	2000      	movs	r0, #0
100523da:	e775      	b.n	100522c8 <LL_Start_Connection_Update+0x30>
100523dc:	20000d64 	.word	0x20000d64
100523e0:	03000c03 	.word	0x03000c03

100523e4 <Reclassify_All_Channels>:
100523e4:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100523e6:	492d      	ldr	r1, [pc, #180]	; (1005249c <Reclassify_All_Channels+0xb8>)
100523e8:	680b      	ldr	r3, [r1, #0]
100523ea:	2141      	movs	r1, #65	; 0x41
100523ec:	0149      	lsls	r1, r1, #5
100523ee:	185c      	adds	r4, r3, r1
100523f0:	2109      	movs	r1, #9
100523f2:	0209      	lsls	r1, r1, #8
100523f4:	1859      	adds	r1, r3, r1
100523f6:	6b0a      	ldr	r2, [r1, #48]	; 0x30
100523f8:	217b      	movs	r1, #123	; 0x7b
100523fa:	0109      	lsls	r1, r1, #4
100523fc:	185d      	adds	r5, r3, r1
100523fe:	2601      	movs	r6, #1
10052400:	e001      	b.n	10052406 <Reclassify_All_Channels+0x22>
10052402:	1c40      	adds	r0, r0, #1
10052404:	b2c0      	uxtb	r0, r0
10052406:	2808      	cmp	r0, #8
10052408:	d242      	bcs.n	10052490 <Reclassify_All_Channels+0xac>
1005240a:	7d2f      	ldrb	r7, [r5, #20]
1005240c:	4631      	mov	r1, r6
1005240e:	4081      	lsls	r1, r0
10052410:	420f      	tst	r7, r1
10052412:	d0f6      	beq.n	10052402 <Reclassify_All_Channels+0x1e>
10052414:	2158      	movs	r1, #88	; 0x58
10052416:	4341      	muls	r1, r0
10052418:	1889      	adds	r1, r1, r2
1005241a:	7889      	ldrb	r1, [r1, #2]
1005241c:	0749      	lsls	r1, r1, #29
1005241e:	0f49      	lsrs	r1, r1, #29
10052420:	2905      	cmp	r1, #5
10052422:	d1ee      	bne.n	10052402 <Reclassify_All_Channels+0x1e>
10052424:	2100      	movs	r1, #0
10052426:	9100      	str	r1, [sp, #0]
10052428:	9101      	str	r1, [sp, #4]
1005242a:	257d      	movs	r5, #125	; 0x7d
1005242c:	4621      	mov	r1, r4
1005242e:	026d      	lsls	r5, r5, #9
10052430:	31c0      	adds	r1, #192	; 0xc0
10052432:	814d      	strh	r5, [r1, #10]
10052434:	7388      	strb	r0, [r1, #14]
10052436:	2158      	movs	r1, #88	; 0x58
10052438:	4348      	muls	r0, r1
1005243a:	1885      	adds	r5, r0, r2
1005243c:	4618      	mov	r0, r3
1005243e:	2205      	movs	r2, #5
10052440:	4669      	mov	r1, sp
10052442:	3048      	adds	r0, #72	; 0x48
10052444:	f7fa fa9e 	bl	1004c984 <char_copy>
10052448:	2080      	movs	r0, #128	; 0x80
1005244a:	9900      	ldr	r1, [sp, #0]
1005244c:	5101      	str	r1, [r0, r4]
1005244e:	217a      	movs	r1, #122	; 0x7a
10052450:	9801      	ldr	r0, [sp, #4]
10052452:	5508      	strb	r0, [r1, r4]
10052454:	89a8      	ldrh	r0, [r5, #12]
10052456:	2206      	movs	r2, #6
10052458:	8929      	ldrh	r1, [r5, #8]
1005245a:	4350      	muls	r0, r2
1005245c:	3009      	adds	r0, #9
1005245e:	1808      	adds	r0, r1, r0
10052460:	b287      	uxth	r7, r0
10052462:	6b69      	ldr	r1, [r5, #52]	; 0x34
10052464:	480e      	ldr	r0, [pc, #56]	; (100524a0 <Reclassify_All_Channels+0xbc>)
10052466:	6008      	str	r0, [r1, #0]
10052468:	6b68      	ldr	r0, [r5, #52]	; 0x34
1005246a:	2205      	movs	r2, #5
1005246c:	6087      	str	r7, [r0, #8]
1005246e:	7968      	ldrb	r0, [r5, #5]
10052470:	4330      	orrs	r0, r6
10052472:	7168      	strb	r0, [r5, #5]
10052474:	6b69      	ldr	r1, [r5, #52]	; 0x34
10052476:	4668      	mov	r0, sp
10052478:	1cc9      	adds	r1, r1, #3
1005247a:	f7fa fa83 	bl	1004c984 <char_copy>
1005247e:	79a8      	ldrb	r0, [r5, #6]
10052480:	2102      	movs	r1, #2
10052482:	06c0      	lsls	r0, r0, #27
10052484:	0ec0      	lsrs	r0, r0, #27
10052486:	4308      	orrs	r0, r1
10052488:	71a8      	strb	r0, [r5, #6]
1005248a:	3440      	adds	r4, #64	; 0x40
1005248c:	86e7      	strh	r7, [r4, #54]	; 0x36
1005248e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10052490:	34c0      	adds	r4, #192	; 0xc0
10052492:	7a20      	ldrb	r0, [r4, #8]
10052494:	21fd      	movs	r1, #253	; 0xfd
10052496:	4008      	ands	r0, r1
10052498:	7220      	strb	r0, [r4, #8]
1005249a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005249c:	20000d64 	.word	0x20000d64
100524a0:	00010803 	.word	0x00010803

100524a4 <check_access_address_patched>:
100524a4:	b5f0      	push	{r4, r5, r6, r7, lr}
100524a6:	4604      	mov	r4, r0
100524a8:	0861      	lsrs	r1, r4, #1
100524aa:	468c      	mov	ip, r1
100524ac:	4061      	eors	r1, r4
100524ae:	460a      	mov	r2, r1
100524b0:	0849      	lsrs	r1, r1, #1
100524b2:	4311      	orrs	r1, r2
100524b4:	0893      	lsrs	r3, r2, #2
100524b6:	4319      	orrs	r1, r3
100524b8:	08cb      	lsrs	r3, r1, #3
100524ba:	430b      	orrs	r3, r1
100524bc:	2001      	movs	r0, #1
100524be:	43d9      	mvns	r1, r3
100524c0:	0189      	lsls	r1, r1, #6
100524c2:	d000      	beq.n	100524c6 <check_access_address_patched+0x22>
100524c4:	2000      	movs	r0, #0
100524c6:	0052      	lsls	r2, r2, #1
100524c8:	4923      	ldr	r1, [pc, #140]	; (10052558 <check_access_address_patched+0xb4>)
100524ca:	4613      	mov	r3, r2
100524cc:	0857      	lsrs	r7, r2, #1
100524ce:	0895      	lsrs	r5, r2, #2
100524d0:	08d6      	lsrs	r6, r2, #3
100524d2:	0912      	lsrs	r2, r2, #4
100524d4:	400b      	ands	r3, r1
100524d6:	400a      	ands	r2, r1
100524d8:	400f      	ands	r7, r1
100524da:	18d2      	adds	r2, r2, r3
100524dc:	400d      	ands	r5, r1
100524de:	19d2      	adds	r2, r2, r7
100524e0:	400e      	ands	r6, r1
100524e2:	1952      	adds	r2, r2, r5
100524e4:	1992      	adds	r2, r2, r6
100524e6:	0ed3      	lsrs	r3, r2, #27
100524e8:	2b02      	cmp	r3, #2
100524ea:	d200      	bcs.n	100524ee <check_access_address_patched+0x4a>
100524ec:	2000      	movs	r0, #0
100524ee:	0953      	lsrs	r3, r2, #5
100524f0:	189a      	adds	r2, r3, r2
100524f2:	0a93      	lsrs	r3, r2, #10
100524f4:	189a      	adds	r2, r3, r2
100524f6:	0d13      	lsrs	r3, r2, #20
100524f8:	189a      	adds	r2, r3, r2
100524fa:	237c      	movs	r3, #124	; 0x7c
100524fc:	401a      	ands	r2, r3
100524fe:	2a5c      	cmp	r2, #92	; 0x5c
10052500:	d900      	bls.n	10052504 <check_access_address_patched+0x60>
10052502:	2000      	movs	r0, #0
10052504:	4b15      	ldr	r3, [pc, #84]	; (1005255c <check_access_address_patched+0xb8>)
10052506:	b2e2      	uxtb	r2, r4
10052508:	435a      	muls	r2, r3
1005250a:	4294      	cmp	r4, r2
1005250c:	d100      	bne.n	10052510 <check_access_address_patched+0x6c>
1005250e:	2000      	movs	r0, #0
10052510:	4a13      	ldr	r2, [pc, #76]	; (10052560 <check_access_address_patched+0xbc>)
10052512:	4623      	mov	r3, r4
10052514:	4053      	eors	r3, r2
10052516:	4d13      	ldr	r5, [pc, #76]	; (10052564 <check_access_address_patched+0xc0>)
10052518:	4662      	mov	r2, ip
1005251a:	406a      	eors	r2, r5
1005251c:	4e12      	ldr	r6, [pc, #72]	; (10052568 <check_access_address_patched+0xc4>)
1005251e:	08a5      	lsrs	r5, r4, #2
10052520:	4075      	eors	r5, r6
10052522:	08e6      	lsrs	r6, r4, #3
10052524:	4f11      	ldr	r7, [pc, #68]	; (1005256c <check_access_address_patched+0xc8>)
10052526:	0924      	lsrs	r4, r4, #4
10052528:	407e      	eors	r6, r7
1005252a:	107f      	asrs	r7, r7, #1
1005252c:	407c      	eors	r4, r7
1005252e:	400b      	ands	r3, r1
10052530:	400a      	ands	r2, r1
10052532:	400d      	ands	r5, r1
10052534:	400e      	ands	r6, r1
10052536:	400c      	ands	r4, r1
10052538:	1899      	adds	r1, r3, r2
1005253a:	1949      	adds	r1, r1, r5
1005253c:	1989      	adds	r1, r1, r6
1005253e:	1909      	adds	r1, r1, r4
10052540:	094a      	lsrs	r2, r1, #5
10052542:	1851      	adds	r1, r2, r1
10052544:	0a8a      	lsrs	r2, r1, #10
10052546:	1851      	adds	r1, r2, r1
10052548:	0d0a      	lsrs	r2, r1, #20
1005254a:	1851      	adds	r1, r2, r1
1005254c:	227c      	movs	r2, #124	; 0x7c
1005254e:	4011      	ands	r1, r2
10052550:	2904      	cmp	r1, #4
10052552:	d800      	bhi.n	10052556 <check_access_address_patched+0xb2>
10052554:	2000      	movs	r0, #0
10052556:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052558:	08421084 	.word	0x08421084
1005255c:	01010101 	.word	0x01010101
10052560:	8e89bed6 	.word	0x8e89bed6
10052564:	4744df6b 	.word	0x4744df6b
10052568:	23a26fb5 	.word	0x23a26fb5
1005256c:	11d137da 	.word	0x11d137da

10052570 <hci_encryption_change_event_push>:
10052570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052572:	461d      	mov	r5, r3
10052574:	460f      	mov	r7, r1
10052576:	2302      	movs	r3, #2
10052578:	4604      	mov	r4, r0
1005257a:	06c1      	lsls	r1, r0, #27
1005257c:	4812      	ldr	r0, [pc, #72]	; (100525c8 <hci_encryption_change_event_push+0x58>)
1005257e:	4616      	mov	r6, r2
10052580:	6800      	ldr	r0, [r0, #0]
10052582:	d503      	bpl.n	1005258c <hci_encryption_change_event_push+0x1c>
10052584:	2203      	movs	r2, #3
10052586:	21bf      	movs	r1, #191	; 0xbf
10052588:	400c      	ands	r4, r1
1005258a:	e008      	b.n	1005259e <hci_encryption_change_event_push+0x2e>
1005258c:	211b      	movs	r1, #27
1005258e:	0189      	lsls	r1, r1, #6
10052590:	1841      	adds	r1, r0, r1
10052592:	7e89      	ldrb	r1, [r1, #26]
10052594:	0609      	lsls	r1, r1, #24
10052596:	d401      	bmi.n	1005259c <hci_encryption_change_event_push+0x2c>
10052598:	2000      	movs	r0, #0
1005259a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005259c:	2201      	movs	r2, #1
1005259e:	0721      	lsls	r1, r4, #28
100525a0:	0e89      	lsrs	r1, r1, #26
100525a2:	1808      	adds	r0, r1, r0
100525a4:	2101      	movs	r1, #1
100525a6:	02c9      	lsls	r1, r1, #11
100525a8:	1840      	adds	r0, r0, r1
100525aa:	6940      	ldr	r0, [r0, #20]
100525ac:	4621      	mov	r1, r4
100525ae:	f009 fc9d 	bl	1005beec <aci_event_fifo_push_header>
100525b2:	0001      	movs	r1, r0
100525b4:	d006      	beq.n	100525c4 <hci_encryption_change_event_push+0x54>
100525b6:	710f      	strb	r7, [r1, #4]
100525b8:	80ce      	strh	r6, [r1, #6]
100525ba:	720d      	strb	r5, [r1, #8]
100525bc:	4620      	mov	r0, r4
100525be:	f009 fc81 	bl	1005bec4 <aci_event_fifo_push>
100525c2:	e7e9      	b.n	10052598 <hci_encryption_change_event_push+0x28>
100525c4:	2007      	movs	r0, #7
100525c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100525c8:	20000d64 	.word	0x20000d64

100525cc <hci_encryption_key_refresh_complete_event_push>:
100525cc:	b570      	push	{r4, r5, r6, lr}
100525ce:	460e      	mov	r6, r1
100525d0:	2301      	movs	r3, #1
100525d2:	4604      	mov	r4, r0
100525d4:	06c1      	lsls	r1, r0, #27
100525d6:	4812      	ldr	r0, [pc, #72]	; (10052620 <hci_encryption_key_refresh_complete_event_push+0x54>)
100525d8:	4615      	mov	r5, r2
100525da:	6800      	ldr	r0, [r0, #0]
100525dc:	d503      	bpl.n	100525e6 <hci_encryption_key_refresh_complete_event_push+0x1a>
100525de:	2204      	movs	r2, #4
100525e0:	21bf      	movs	r1, #191	; 0xbf
100525e2:	400c      	ands	r4, r1
100525e4:	e008      	b.n	100525f8 <hci_encryption_key_refresh_complete_event_push+0x2c>
100525e6:	211b      	movs	r1, #27
100525e8:	0189      	lsls	r1, r1, #6
100525ea:	1841      	adds	r1, r0, r1
100525ec:	7fc9      	ldrb	r1, [r1, #31]
100525ee:	0609      	lsls	r1, r1, #24
100525f0:	d401      	bmi.n	100525f6 <hci_encryption_key_refresh_complete_event_push+0x2a>
100525f2:	2000      	movs	r0, #0
100525f4:	bd70      	pop	{r4, r5, r6, pc}
100525f6:	2202      	movs	r2, #2
100525f8:	0721      	lsls	r1, r4, #28
100525fa:	0e89      	lsrs	r1, r1, #26
100525fc:	1808      	adds	r0, r1, r0
100525fe:	2101      	movs	r1, #1
10052600:	02c9      	lsls	r1, r1, #11
10052602:	1840      	adds	r0, r0, r1
10052604:	6940      	ldr	r0, [r0, #20]
10052606:	4621      	mov	r1, r4
10052608:	f009 fc70 	bl	1005beec <aci_event_fifo_push_header>
1005260c:	0001      	movs	r1, r0
1005260e:	d005      	beq.n	1005261c <hci_encryption_key_refresh_complete_event_push+0x50>
10052610:	710e      	strb	r6, [r1, #4]
10052612:	80cd      	strh	r5, [r1, #6]
10052614:	4620      	mov	r0, r4
10052616:	f009 fc55 	bl	1005bec4 <aci_event_fifo_push>
1005261a:	e7ea      	b.n	100525f2 <hci_encryption_key_refresh_complete_event_push+0x26>
1005261c:	2007      	movs	r0, #7
1005261e:	bd70      	pop	{r4, r5, r6, pc}
10052620:	20000d64 	.word	0x20000d64

10052624 <hci_le_advertising_report_event_push>:
10052624:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10052626:	b081      	sub	sp, #4
10052628:	4606      	mov	r6, r0
1005262a:	980a      	ldr	r0, [sp, #40]	; 0x28
1005262c:	2103      	movs	r1, #3
1005262e:	3013      	adds	r0, #19
10052630:	4308      	orrs	r0, r1
10052632:	1c40      	adds	r0, r0, #1
10052634:	0883      	lsrs	r3, r0, #2
10052636:	481f      	ldr	r0, [pc, #124]	; (100526b4 <hci_le_advertising_report_event_push+0x90>)
10052638:	06f1      	lsls	r1, r6, #27
1005263a:	6800      	ldr	r0, [r0, #0]
1005263c:	d503      	bpl.n	10052646 <hci_le_advertising_report_event_push+0x22>
1005263e:	2207      	movs	r2, #7
10052640:	21bf      	movs	r1, #191	; 0xbf
10052642:	400e      	ands	r6, r1
10052644:	e00c      	b.n	10052660 <hci_le_advertising_report_event_push+0x3c>
10052646:	2137      	movs	r1, #55	; 0x37
10052648:	0149      	lsls	r1, r1, #5
1005264a:	1841      	adds	r1, r0, r1
1005264c:	784a      	ldrb	r2, [r1, #1]
1005264e:	0692      	lsls	r2, r2, #26
10052650:	d502      	bpl.n	10052658 <hci_le_advertising_report_event_push+0x34>
10052652:	7889      	ldrb	r1, [r1, #2]
10052654:	0789      	lsls	r1, r1, #30
10052656:	d402      	bmi.n	1005265e <hci_le_advertising_report_event_push+0x3a>
10052658:	2000      	movs	r0, #0
1005265a:	b005      	add	sp, #20
1005265c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005265e:	2205      	movs	r2, #5
10052660:	0731      	lsls	r1, r6, #28
10052662:	0e89      	lsrs	r1, r1, #26
10052664:	1808      	adds	r0, r1, r0
10052666:	2101      	movs	r1, #1
10052668:	02c9      	lsls	r1, r1, #11
1005266a:	1840      	adds	r0, r0, r1
1005266c:	6940      	ldr	r0, [r0, #20]
1005266e:	4631      	mov	r1, r6
10052670:	f009 fc3c 	bl	1005beec <aci_event_fifo_push_header>
10052674:	0005      	movs	r5, r0
10052676:	d01a      	beq.n	100526ae <hci_le_advertising_report_event_push+0x8a>
10052678:	9802      	ldr	r0, [sp, #8]
1005267a:	7128      	strb	r0, [r5, #4]
1005267c:	9803      	ldr	r0, [sp, #12]
1005267e:	7168      	strb	r0, [r5, #5]
10052680:	462c      	mov	r4, r5
10052682:	1d2f      	adds	r7, r5, #4
10052684:	3418      	adds	r4, #24
10052686:	2206      	movs	r2, #6
10052688:	1da8      	adds	r0, r5, #6
1005268a:	9904      	ldr	r1, [sp, #16]
1005268c:	f7ee f879 	bl	10040782 <Osal_MemCpy>
10052690:	980a      	ldr	r0, [sp, #40]	; 0x28
10052692:	7238      	strb	r0, [r7, #8]
10052694:	60fc      	str	r4, [r7, #12]
10052696:	4620      	mov	r0, r4
10052698:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1005269a:	990b      	ldr	r1, [sp, #44]	; 0x2c
1005269c:	f7ee f871 	bl	10040782 <Osal_MemCpy>
100526a0:	980c      	ldr	r0, [sp, #48]	; 0x30
100526a2:	7438      	strb	r0, [r7, #16]
100526a4:	4629      	mov	r1, r5
100526a6:	4630      	mov	r0, r6
100526a8:	f009 fc0c 	bl	1005bec4 <aci_event_fifo_push>
100526ac:	e7d4      	b.n	10052658 <hci_le_advertising_report_event_push+0x34>
100526ae:	2007      	movs	r0, #7
100526b0:	e7d3      	b.n	1005265a <hci_le_advertising_report_event_push+0x36>
100526b2:	0000      	.short	0x0000
100526b4:	20000d64 	.word	0x20000d64

100526b8 <hci_le_connection_complete_event_push>:
100526b8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100526ba:	461f      	mov	r7, r3
100526bc:	2305      	movs	r3, #5
100526be:	4606      	mov	r6, r0
100526c0:	06c1      	lsls	r1, r0, #27
100526c2:	481e      	ldr	r0, [pc, #120]	; (1005273c <hci_le_connection_complete_event_push+0x84>)
100526c4:	b081      	sub	sp, #4
100526c6:	6800      	ldr	r0, [r0, #0]
100526c8:	d503      	bpl.n	100526d2 <hci_le_connection_complete_event_push+0x1a>
100526ca:	2205      	movs	r2, #5
100526cc:	21bf      	movs	r1, #191	; 0xbf
100526ce:	400e      	ands	r6, r1
100526d0:	e009      	b.n	100526e6 <hci_le_connection_complete_event_push+0x2e>
100526d2:	2137      	movs	r1, #55	; 0x37
100526d4:	0149      	lsls	r1, r1, #5
100526d6:	1841      	adds	r1, r0, r1
100526d8:	784a      	ldrb	r2, [r1, #1]
100526da:	0692      	lsls	r2, r2, #26
100526dc:	d529      	bpl.n	10052732 <hci_le_connection_complete_event_push+0x7a>
100526de:	7889      	ldrb	r1, [r1, #2]
100526e0:	07c9      	lsls	r1, r1, #31
100526e2:	d026      	beq.n	10052732 <hci_le_connection_complete_event_push+0x7a>
100526e4:	2203      	movs	r2, #3
100526e6:	0731      	lsls	r1, r6, #28
100526e8:	0e89      	lsrs	r1, r1, #26
100526ea:	1808      	adds	r0, r1, r0
100526ec:	2101      	movs	r1, #1
100526ee:	02c9      	lsls	r1, r1, #11
100526f0:	1840      	adds	r0, r0, r1
100526f2:	6940      	ldr	r0, [r0, #20]
100526f4:	4631      	mov	r1, r6
100526f6:	f009 fbf9 	bl	1005beec <aci_event_fifo_push_header>
100526fa:	0004      	movs	r4, r0
100526fc:	d01c      	beq.n	10052738 <hci_le_connection_complete_event_push+0x80>
100526fe:	9802      	ldr	r0, [sp, #8]
10052700:	7120      	strb	r0, [r4, #4]
10052702:	9803      	ldr	r0, [sp, #12]
10052704:	80e0      	strh	r0, [r4, #6]
10052706:	7227      	strb	r7, [r4, #8]
10052708:	980a      	ldr	r0, [sp, #40]	; 0x28
1005270a:	7260      	strb	r0, [r4, #9]
1005270c:	4620      	mov	r0, r4
1005270e:	1d25      	adds	r5, r4, #4
10052710:	2206      	movs	r2, #6
10052712:	300a      	adds	r0, #10
10052714:	990b      	ldr	r1, [sp, #44]	; 0x2c
10052716:	f7ee f834 	bl	10040782 <Osal_MemCpy>
1005271a:	980c      	ldr	r0, [sp, #48]	; 0x30
1005271c:	81a8      	strh	r0, [r5, #12]
1005271e:	980d      	ldr	r0, [sp, #52]	; 0x34
10052720:	81e8      	strh	r0, [r5, #14]
10052722:	980e      	ldr	r0, [sp, #56]	; 0x38
10052724:	8228      	strh	r0, [r5, #16]
10052726:	980f      	ldr	r0, [sp, #60]	; 0x3c
10052728:	74a8      	strb	r0, [r5, #18]
1005272a:	4621      	mov	r1, r4
1005272c:	4630      	mov	r0, r6
1005272e:	f009 fbc9 	bl	1005bec4 <aci_event_fifo_push>
10052732:	2000      	movs	r0, #0
10052734:	b005      	add	sp, #20
10052736:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052738:	2007      	movs	r0, #7
1005273a:	e7fb      	b.n	10052734 <hci_le_connection_complete_event_push+0x7c>
1005273c:	20000d64 	.word	0x20000d64

10052740 <hci_le_connection_update_complete_event_push>:
10052740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052742:	461d      	mov	r5, r3
10052744:	460f      	mov	r7, r1
10052746:	2303      	movs	r3, #3
10052748:	4604      	mov	r4, r0
1005274a:	06c1      	lsls	r1, r0, #27
1005274c:	4816      	ldr	r0, [pc, #88]	; (100527a8 <hci_le_connection_update_complete_event_push+0x68>)
1005274e:	4616      	mov	r6, r2
10052750:	6800      	ldr	r0, [r0, #0]
10052752:	d503      	bpl.n	1005275c <hci_le_connection_update_complete_event_push+0x1c>
10052754:	2210      	movs	r2, #16
10052756:	21bf      	movs	r1, #191	; 0xbf
10052758:	400c      	ands	r4, r1
1005275a:	e00b      	b.n	10052774 <hci_le_connection_update_complete_event_push+0x34>
1005275c:	2137      	movs	r1, #55	; 0x37
1005275e:	0149      	lsls	r1, r1, #5
10052760:	1841      	adds	r1, r0, r1
10052762:	784a      	ldrb	r2, [r1, #1]
10052764:	0692      	lsls	r2, r2, #26
10052766:	d502      	bpl.n	1005276e <hci_le_connection_update_complete_event_push+0x2e>
10052768:	7889      	ldrb	r1, [r1, #2]
1005276a:	0749      	lsls	r1, r1, #29
1005276c:	d401      	bmi.n	10052772 <hci_le_connection_update_complete_event_push+0x32>
1005276e:	2000      	movs	r0, #0
10052770:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052772:	220d      	movs	r2, #13
10052774:	0721      	lsls	r1, r4, #28
10052776:	0e89      	lsrs	r1, r1, #26
10052778:	1808      	adds	r0, r1, r0
1005277a:	2101      	movs	r1, #1
1005277c:	02c9      	lsls	r1, r1, #11
1005277e:	1840      	adds	r0, r0, r1
10052780:	6940      	ldr	r0, [r0, #20]
10052782:	4621      	mov	r1, r4
10052784:	f009 fbb2 	bl	1005beec <aci_event_fifo_push_header>
10052788:	0001      	movs	r1, r0
1005278a:	d00a      	beq.n	100527a2 <hci_le_connection_update_complete_event_push+0x62>
1005278c:	710f      	strb	r7, [r1, #4]
1005278e:	80ce      	strh	r6, [r1, #6]
10052790:	810d      	strh	r5, [r1, #8]
10052792:	9a06      	ldr	r2, [sp, #24]
10052794:	814a      	strh	r2, [r1, #10]
10052796:	9a07      	ldr	r2, [sp, #28]
10052798:	818a      	strh	r2, [r1, #12]
1005279a:	4620      	mov	r0, r4
1005279c:	f009 fb92 	bl	1005bec4 <aci_event_fifo_push>
100527a0:	e7e5      	b.n	1005276e <hci_le_connection_update_complete_event_push+0x2e>
100527a2:	2007      	movs	r0, #7
100527a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100527a6:	0000      	.short	0x0000
100527a8:	20000d64 	.word	0x20000d64

100527ac <int32ToLe3Byte>:
100527ac:	7001      	strb	r1, [r0, #0]
100527ae:	0a0a      	lsrs	r2, r1, #8
100527b0:	7042      	strb	r2, [r0, #1]
100527b2:	0c09      	lsrs	r1, r1, #16
100527b4:	7081      	strb	r1, [r0, #2]
100527b6:	4770      	bx	lr

100527b8 <int32ToLe4Byte>:
100527b8:	7001      	strb	r1, [r0, #0]
100527ba:	0a0a      	lsrs	r2, r1, #8
100527bc:	7042      	strb	r2, [r0, #1]
100527be:	0c0a      	lsrs	r2, r1, #16
100527c0:	7082      	strb	r2, [r0, #2]
100527c2:	0e09      	lsrs	r1, r1, #24
100527c4:	70c1      	strb	r1, [r0, #3]
100527c6:	4770      	bx	lr

100527c8 <isr_event_handler>:
100527c8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100527ca:	4606      	mov	r6, r0
100527cc:	b08d      	sub	sp, #52	; 0x34
100527ce:	8950      	ldrh	r0, [r2, #10]
100527d0:	9006      	str	r0, [sp, #24]
100527d2:	48ff      	ldr	r0, [pc, #1020]	; (10052bd0 <isr_event_handler+0x408>)
100527d4:	2109      	movs	r1, #9
100527d6:	6800      	ldr	r0, [r0, #0]
100527d8:	0209      	lsls	r1, r1, #8
100527da:	900b      	str	r0, [sp, #44]	; 0x2c
100527dc:	1840      	adds	r0, r0, r1
100527de:	6b00      	ldr	r0, [r0, #48]	; 0x30
100527e0:	900a      	str	r0, [sp, #40]	; 0x28
100527e2:	7951      	ldrb	r1, [r2, #5]
100527e4:	461d      	mov	r5, r3
100527e6:	4614      	mov	r4, r2
100527e8:	0648      	lsls	r0, r1, #25
100527ea:	d401      	bmi.n	100527f0 <isr_event_handler+0x28>
100527ec:	07e8      	lsls	r0, r5, #31
100527ee:	d057      	beq.n	100528a0 <isr_event_handler+0xd8>
100527f0:	2000      	movs	r0, #0
100527f2:	9007      	str	r0, [sp, #28]
100527f4:	8f20      	ldrh	r0, [r4, #56]	; 0x38
100527f6:	9000      	str	r0, [sp, #0]
100527f8:	89a0      	ldrh	r0, [r4, #12]
100527fa:	69a3      	ldr	r3, [r4, #24]
100527fc:	4684      	mov	ip, r0
100527fe:	78a0      	ldrb	r0, [r4, #2]
10052800:	0740      	lsls	r0, r0, #29
10052802:	0f40      	lsrs	r0, r0, #29
10052804:	2805      	cmp	r0, #5
10052806:	d02d      	beq.n	10052864 <isr_event_handler+0x9c>
10052808:	2803      	cmp	r0, #3
1005280a:	d02b      	beq.n	10052864 <isr_event_handler+0x9c>
1005280c:	2001      	movs	r0, #1
1005280e:	9009      	str	r0, [sp, #36]	; 0x24
10052810:	20bf      	movs	r0, #191	; 0xbf
10052812:	4001      	ands	r1, r0
10052814:	7161      	strb	r1, [r4, #5]
10052816:	990e      	ldr	r1, [sp, #56]	; 0x38
10052818:	07ef      	lsls	r7, r5, #31
1005281a:	4608      	mov	r0, r1
1005281c:	3040      	adds	r0, #64	; 0x40
1005281e:	3110      	adds	r1, #16
10052820:	2f00      	cmp	r7, #0
10052822:	d00a      	beq.n	1005283a <isr_event_handler+0x72>
10052824:	2200      	movs	r2, #0
10052826:	213c      	movs	r1, #60	; 0x3c
10052828:	9107      	str	r1, [sp, #28]
1005282a:	990e      	ldr	r1, [sp, #56]	; 0x38
1005282c:	9206      	str	r2, [sp, #24]
1005282e:	9200      	str	r2, [sp, #0]
10052830:	8382      	strh	r2, [r0, #28]
10052832:	4694      	mov	ip, r2
10052834:	4613      	mov	r3, r2
10052836:	8082      	strh	r2, [r0, #4]
10052838:	3108      	adds	r1, #8
1005283a:	2737      	movs	r7, #55	; 0x37
1005283c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1005283e:	017f      	lsls	r7, r7, #5
10052840:	19d2      	adds	r2, r2, r7
10052842:	7857      	ldrb	r7, [r2, #1]
10052844:	06bf      	lsls	r7, r7, #26
10052846:	d50f      	bpl.n	10052868 <isr_event_handler+0xa0>
10052848:	78d7      	ldrb	r7, [r2, #3]
1005284a:	07bf      	lsls	r7, r7, #30
1005284c:	d50c      	bpl.n	10052868 <isr_event_handler+0xa0>
1005284e:	8880      	ldrh	r0, [r0, #4]
10052850:	4662      	mov	r2, ip
10052852:	9302      	str	r3, [sp, #8]
10052854:	9201      	str	r2, [sp, #4]
10052856:	9003      	str	r0, [sp, #12]
10052858:	9b06      	ldr	r3, [sp, #24]
1005285a:	9a07      	ldr	r2, [sp, #28]
1005285c:	9809      	ldr	r0, [sp, #36]	; 0x24
1005285e:	f7ef f817 	bl	10041890 <PRIV_vGenerate_hci_le_enhanced_connection_complete_event_ucfg>
10052862:	e01d      	b.n	100528a0 <isr_event_handler+0xd8>
10052864:	2000      	movs	r0, #0
10052866:	e7d2      	b.n	1005280e <isr_event_handler+0x46>
10052868:	031a      	lsls	r2, r3, #12
1005286a:	7900      	ldrb	r0, [r0, #4]
1005286c:	0c13      	lsrs	r3, r2, #16
1005286e:	9a00      	ldr	r2, [sp, #0]
10052870:	4667      	mov	r7, ip
10052872:	9703      	str	r7, [sp, #12]
10052874:	9304      	str	r3, [sp, #16]
10052876:	9202      	str	r2, [sp, #8]
10052878:	9005      	str	r0, [sp, #20]
1005287a:	6848      	ldr	r0, [r1, #4]
1005287c:	9101      	str	r1, [sp, #4]
1005287e:	0200      	lsls	r0, r0, #8
10052880:	0e00      	lsrs	r0, r0, #24
10052882:	9000      	str	r0, [sp, #0]
10052884:	980b      	ldr	r0, [sp, #44]	; 0x2c
10052886:	30a0      	adds	r0, #160	; 0xa0
10052888:	7900      	ldrb	r0, [r0, #4]
1005288a:	07c0      	lsls	r0, r0, #31
1005288c:	d001      	beq.n	10052892 <isr_event_handler+0xca>
1005288e:	2000      	movs	r0, #0
10052890:	e000      	b.n	10052894 <isr_event_handler+0xcc>
10052892:	2010      	movs	r0, #16
10052894:	3080      	adds	r0, #128	; 0x80
10052896:	9b09      	ldr	r3, [sp, #36]	; 0x24
10052898:	9a06      	ldr	r2, [sp, #24]
1005289a:	9907      	ldr	r1, [sp, #28]
1005289c:	f7ff ff0c 	bl	100526b8 <hci_le_connection_complete_event_push>
100528a0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
100528a2:	0728      	lsls	r0, r5, #28
100528a4:	37c0      	adds	r7, #192	; 0xc0
100528a6:	2800      	cmp	r0, #0
100528a8:	da73      	bge.n	10052992 <isr_event_handler+0x1ca>
100528aa:	6920      	ldr	r0, [r4, #16]
100528ac:	03e9      	lsls	r1, r5, #15
100528ae:	d501      	bpl.n	100528b4 <isr_event_handler+0xec>
100528b0:	2116      	movs	r1, #22
100528b2:	e017      	b.n	100528e4 <isr_event_handler+0x11c>
100528b4:	03a9      	lsls	r1, r5, #14
100528b6:	d501      	bpl.n	100528bc <isr_event_handler+0xf4>
100528b8:	2113      	movs	r1, #19
100528ba:	e013      	b.n	100528e4 <isr_event_handler+0x11c>
100528bc:	0329      	lsls	r1, r5, #12
100528be:	d501      	bpl.n	100528c4 <isr_event_handler+0xfc>
100528c0:	2128      	movs	r1, #40	; 0x28
100528c2:	e00f      	b.n	100528e4 <isr_event_handler+0x11c>
100528c4:	02e9      	lsls	r1, r5, #11
100528c6:	d501      	bpl.n	100528cc <isr_event_handler+0x104>
100528c8:	213d      	movs	r1, #61	; 0x3d
100528ca:	e00b      	b.n	100528e4 <isr_event_handler+0x11c>
100528cc:	0269      	lsls	r1, r5, #9
100528ce:	d501      	bpl.n	100528d4 <isr_event_handler+0x10c>
100528d0:	2122      	movs	r1, #34	; 0x22
100528d2:	e007      	b.n	100528e4 <isr_event_handler+0x11c>
100528d4:	0369      	lsls	r1, r5, #13
100528d6:	d529      	bpl.n	1005292c <isr_event_handler+0x164>
100528d8:	7961      	ldrb	r1, [r4, #5]
100528da:	0609      	lsls	r1, r1, #24
100528dc:	d401      	bmi.n	100528e2 <isr_event_handler+0x11a>
100528de:	2108      	movs	r1, #8
100528e0:	e000      	b.n	100528e4 <isr_event_handler+0x11c>
100528e2:	213e      	movs	r1, #62	; 0x3e
100528e4:	9101      	str	r1, [sp, #4]
100528e6:	7bb9      	ldrb	r1, [r7, #14]
100528e8:	2258      	movs	r2, #88	; 0x58
100528ea:	4351      	muls	r1, r2
100528ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100528ee:	1889      	adds	r1, r1, r2
100528f0:	42a1      	cmp	r1, r4
100528f2:	d101      	bne.n	100528f8 <isr_event_handler+0x130>
100528f4:	2108      	movs	r1, #8
100528f6:	73b9      	strb	r1, [r7, #14]
100528f8:	7bf9      	ldrb	r1, [r7, #15]
100528fa:	2258      	movs	r2, #88	; 0x58
100528fc:	4351      	muls	r1, r2
100528fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10052900:	1889      	adds	r1, r1, r2
10052902:	42a1      	cmp	r1, r4
10052904:	d101      	bne.n	1005290a <isr_event_handler+0x142>
10052906:	2108      	movs	r1, #8
10052908:	73f9      	strb	r1, [r7, #15]
1005290a:	2105      	movs	r1, #5
1005290c:	0289      	lsls	r1, r1, #10
1005290e:	4208      	tst	r0, r1
10052910:	d022      	beq.n	10052958 <isr_event_handler+0x190>
10052912:	0428      	lsls	r0, r5, #16
10052914:	d520      	bpl.n	10052958 <isr_event_handler+0x190>
10052916:	8a20      	ldrh	r0, [r4, #16]
10052918:	0440      	lsls	r0, r0, #17
1005291a:	48ad      	ldr	r0, [pc, #692]	; (10052bd0 <isr_event_handler+0x408>)
1005291c:	6800      	ldr	r0, [r0, #0]
1005291e:	d50e      	bpl.n	1005293e <isr_event_handler+0x176>
10052920:	30a0      	adds	r0, #160	; 0xa0
10052922:	7900      	ldrb	r0, [r0, #4]
10052924:	07c0      	lsls	r0, r0, #31
10052926:	d003      	beq.n	10052930 <isr_event_handler+0x168>
10052928:	2000      	movs	r0, #0
1005292a:	e002      	b.n	10052932 <isr_event_handler+0x16a>
1005292c:	211f      	movs	r1, #31
1005292e:	e7d9      	b.n	100528e4 <isr_event_handler+0x11c>
10052930:	2010      	movs	r0, #16
10052932:	3080      	adds	r0, #128	; 0x80
10052934:	9a06      	ldr	r2, [sp, #24]
10052936:	9901      	ldr	r1, [sp, #4]
10052938:	f7ff fe48 	bl	100525cc <hci_encryption_key_refresh_complete_event_push>
1005293c:	e00c      	b.n	10052958 <isr_event_handler+0x190>
1005293e:	30a0      	adds	r0, #160	; 0xa0
10052940:	7900      	ldrb	r0, [r0, #4]
10052942:	07c0      	lsls	r0, r0, #31
10052944:	d001      	beq.n	1005294a <isr_event_handler+0x182>
10052946:	2000      	movs	r0, #0
10052948:	e000      	b.n	1005294c <isr_event_handler+0x184>
1005294a:	2010      	movs	r0, #16
1005294c:	2300      	movs	r3, #0
1005294e:	3080      	adds	r0, #128	; 0x80
10052950:	9a06      	ldr	r2, [sp, #24]
10052952:	9901      	ldr	r1, [sp, #4]
10052954:	f7ff fe0c 	bl	10052570 <hci_encryption_change_event_push>
10052958:	6a20      	ldr	r0, [r4, #32]
1005295a:	2800      	cmp	r0, #0
1005295c:	d001      	beq.n	10052962 <isr_event_handler+0x19a>
1005295e:	f00a f849 	bl	1005c9f4 <Acl_Tx_Cmpl_Pkt_Handler>
10052962:	2700      	movs	r7, #0
10052964:	6227      	str	r7, [r4, #32]
10052966:	489a      	ldr	r0, [pc, #616]	; (10052bd0 <isr_event_handler+0x408>)
10052968:	6267      	str	r7, [r4, #36]	; 0x24
1005296a:	6800      	ldr	r0, [r0, #0]
1005296c:	21a4      	movs	r1, #164	; 0xa4
1005296e:	5c09      	ldrb	r1, [r1, r0]
10052970:	07c9      	lsls	r1, r1, #31
10052972:	d001      	beq.n	10052978 <isr_event_handler+0x1b0>
10052974:	2500      	movs	r5, #0
10052976:	e000      	b.n	1005297a <isr_event_handler+0x1b2>
10052978:	2510      	movs	r5, #16
1005297a:	9906      	ldr	r1, [sp, #24]
1005297c:	9103      	str	r1, [sp, #12]
1005297e:	9901      	ldr	r1, [sp, #4]
10052980:	2302      	movs	r3, #2
10052982:	3580      	adds	r5, #128	; 0x80
10052984:	9105      	str	r1, [sp, #20]
10052986:	06e9      	lsls	r1, r5, #27
10052988:	d504      	bpl.n	10052994 <isr_event_handler+0x1cc>
1005298a:	2202      	movs	r2, #2
1005298c:	21bf      	movs	r1, #191	; 0xbf
1005298e:	400d      	ands	r5, r1
10052990:	e007      	b.n	100529a2 <isr_event_handler+0x1da>
10052992:	e01d      	b.n	100529d0 <isr_event_handler+0x208>
10052994:	211b      	movs	r1, #27
10052996:	0189      	lsls	r1, r1, #6
10052998:	1841      	adds	r1, r0, r1
1005299a:	7e89      	ldrb	r1, [r1, #26]
1005299c:	06c9      	lsls	r1, r1, #27
1005299e:	d514      	bpl.n	100529ca <isr_event_handler+0x202>
100529a0:	2200      	movs	r2, #0
100529a2:	0729      	lsls	r1, r5, #28
100529a4:	0e89      	lsrs	r1, r1, #26
100529a6:	1809      	adds	r1, r1, r0
100529a8:	2001      	movs	r0, #1
100529aa:	02c0      	lsls	r0, r0, #11
100529ac:	1808      	adds	r0, r1, r0
100529ae:	6940      	ldr	r0, [r0, #20]
100529b0:	4629      	mov	r1, r5
100529b2:	f009 fa9b 	bl	1005beec <aci_event_fifo_push_header>
100529b6:	0001      	movs	r1, r0
100529b8:	d007      	beq.n	100529ca <isr_event_handler+0x202>
100529ba:	710f      	strb	r7, [r1, #4]
100529bc:	9a03      	ldr	r2, [sp, #12]
100529be:	80ca      	strh	r2, [r1, #6]
100529c0:	9a05      	ldr	r2, [sp, #20]
100529c2:	720a      	strb	r2, [r1, #8]
100529c4:	4628      	mov	r0, r5
100529c6:	f009 fa7d 	bl	1005bec4 <aci_event_fifo_push>
100529ca:	2500      	movs	r5, #0
100529cc:	6127      	str	r7, [r4, #16]
100529ce:	e18d      	b.n	10052cec <isr_event_handler+0x524>
100529d0:	0668      	lsls	r0, r5, #25
100529d2:	d520      	bpl.n	10052a16 <isr_event_handler+0x24e>
100529d4:	78a0      	ldrb	r0, [r4, #2]
100529d6:	0740      	lsls	r0, r0, #29
100529d8:	0f40      	lsrs	r0, r0, #29
100529da:	2805      	cmp	r0, #5
100529dc:	d101      	bne.n	100529e2 <isr_event_handler+0x21a>
100529de:	69a1      	ldr	r1, [r4, #24]
100529e0:	6161      	str	r1, [r4, #20]
100529e2:	2100      	movs	r1, #0
100529e4:	2805      	cmp	r0, #5
100529e6:	d00b      	beq.n	10052a00 <isr_event_handler+0x238>
100529e8:	8b20      	ldrh	r0, [r4, #24]
100529ea:	89a2      	ldrh	r2, [r4, #12]
100529ec:	0400      	lsls	r0, r0, #16
100529ee:	0d00      	lsrs	r0, r0, #20
100529f0:	9001      	str	r0, [sp, #4]
100529f2:	9200      	str	r2, [sp, #0]
100529f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
100529f6:	2080      	movs	r0, #128	; 0x80
100529f8:	9a06      	ldr	r2, [sp, #24]
100529fa:	f7ff fea1 	bl	10052740 <hci_le_connection_update_complete_event_push>
100529fe:	e175      	b.n	10052cec <isr_event_handler+0x524>
10052a00:	6b60      	ldr	r0, [r4, #52]	; 0x34
10052a02:	8943      	ldrh	r3, [r0, #10]
10052a04:	8902      	ldrh	r2, [r0, #8]
10052a06:	9301      	str	r3, [sp, #4]
10052a08:	9200      	str	r2, [sp, #0]
10052a0a:	88c3      	ldrh	r3, [r0, #6]
10052a0c:	2080      	movs	r0, #128	; 0x80
10052a0e:	9a06      	ldr	r2, [sp, #24]
10052a10:	f7ff fe96 	bl	10052740 <hci_le_connection_update_complete_event_push>
10052a14:	e06a      	b.n	10052aec <isr_event_handler+0x324>
10052a16:	0768      	lsls	r0, r5, #29
10052a18:	d523      	bpl.n	10052a62 <isr_event_handler+0x29a>
10052a1a:	2080      	movs	r0, #128	; 0x80
10052a1c:	9000      	str	r0, [sp, #0]
10052a1e:	486c      	ldr	r0, [pc, #432]	; (10052bd0 <isr_event_handler+0x408>)
10052a20:	211b      	movs	r1, #27
10052a22:	6800      	ldr	r0, [r0, #0]
10052a24:	0189      	lsls	r1, r1, #6
10052a26:	1841      	adds	r1, r0, r1
10052a28:	7ec9      	ldrb	r1, [r1, #27]
10052a2a:	2302      	movs	r3, #2
10052a2c:	9f06      	ldr	r7, [sp, #24]
10052a2e:	0709      	lsls	r1, r1, #28
10052a30:	d5cd      	bpl.n	100529ce <isr_event_handler+0x206>
10052a32:	0299      	lsls	r1, r3, #10
10052a34:	1840      	adds	r0, r0, r1
10052a36:	220c      	movs	r2, #12
10052a38:	6940      	ldr	r0, [r0, #20]
10052a3a:	9900      	ldr	r1, [sp, #0]
10052a3c:	f009 fa56 	bl	1005beec <aci_event_fifo_push_header>
10052a40:	0001      	movs	r1, r0
10052a42:	d0c4      	beq.n	100529ce <isr_event_handler+0x206>
10052a44:	808f      	strh	r7, [r1, #4]
10052a46:	78f2      	ldrb	r2, [r6, #3]
10052a48:	718a      	strb	r2, [r1, #6]
10052a4a:	7933      	ldrb	r3, [r6, #4]
10052a4c:	7972      	ldrb	r2, [r6, #5]
10052a4e:	0212      	lsls	r2, r2, #8
10052a50:	431a      	orrs	r2, r3
10052a52:	810a      	strh	r2, [r1, #8]
10052a54:	79b3      	ldrb	r3, [r6, #6]
10052a56:	79f2      	ldrb	r2, [r6, #7]
10052a58:	0212      	lsls	r2, r2, #8
10052a5a:	431a      	orrs	r2, r3
10052a5c:	814a      	strh	r2, [r1, #10]
10052a5e:	9800      	ldr	r0, [sp, #0]
10052a60:	e142      	b.n	10052ce8 <isr_event_handler+0x520>
10052a62:	0528      	lsls	r0, r5, #20
10052a64:	0f80      	lsrs	r0, r0, #30
10052a66:	d006      	beq.n	10052a76 <isr_event_handler+0x2ae>
10052a68:	980e      	ldr	r0, [sp, #56]	; 0x38
10052a6a:	4669      	mov	r1, sp
10052a6c:	c131      	stmia	r1!, {r0, r4, r5}
10052a6e:	4668      	mov	r0, sp
10052a70:	f7ef f842 	bl	10041af8 <isr_event_handler_scan_data_ucfg>
10052a74:	e13a      	b.n	10052cec <isr_event_handler+0x524>
10052a76:	4857      	ldr	r0, [pc, #348]	; (10052bd4 <isr_event_handler+0x40c>)
10052a78:	4205      	tst	r5, r0
10052a7a:	d03d      	beq.n	10052af8 <isr_event_handler+0x330>
10052a7c:	04e8      	lsls	r0, r5, #19
10052a7e:	d501      	bpl.n	10052a84 <isr_event_handler+0x2bc>
10052a80:	2000      	movs	r0, #0
10052a82:	e000      	b.n	10052a86 <isr_event_handler+0x2be>
10052a84:	201a      	movs	r0, #26
10052a86:	9007      	str	r0, [sp, #28]
10052a88:	9806      	ldr	r0, [sp, #24]
10052a8a:	9004      	str	r0, [sp, #16]
10052a8c:	1cf0      	adds	r0, r6, #3
10052a8e:	9002      	str	r0, [sp, #8]
10052a90:	2180      	movs	r1, #128	; 0x80
10052a92:	484f      	ldr	r0, [pc, #316]	; (10052bd0 <isr_event_handler+0x408>)
10052a94:	9100      	str	r1, [sp, #0]
10052a96:	6801      	ldr	r1, [r0, #0]
10052a98:	2037      	movs	r0, #55	; 0x37
10052a9a:	0140      	lsls	r0, r0, #5
10052a9c:	1808      	adds	r0, r1, r0
10052a9e:	7842      	ldrb	r2, [r0, #1]
10052aa0:	2303      	movs	r3, #3
10052aa2:	0692      	lsls	r2, r2, #26
10052aa4:	d51a      	bpl.n	10052adc <isr_event_handler+0x314>
10052aa6:	7880      	ldrb	r0, [r0, #2]
10052aa8:	0700      	lsls	r0, r0, #28
10052aaa:	d517      	bpl.n	10052adc <isr_event_handler+0x314>
10052aac:	2001      	movs	r0, #1
10052aae:	02c0      	lsls	r0, r0, #11
10052ab0:	1808      	adds	r0, r1, r0
10052ab2:	220e      	movs	r2, #14
10052ab4:	6940      	ldr	r0, [r0, #20]
10052ab6:	9900      	ldr	r1, [sp, #0]
10052ab8:	f009 fa18 	bl	1005beec <aci_event_fifo_push_header>
10052abc:	9005      	str	r0, [sp, #20]
10052abe:	2800      	cmp	r0, #0
10052ac0:	d00c      	beq.n	10052adc <isr_event_handler+0x314>
10052ac2:	9907      	ldr	r1, [sp, #28]
10052ac4:	7101      	strb	r1, [r0, #4]
10052ac6:	9904      	ldr	r1, [sp, #16]
10052ac8:	80c1      	strh	r1, [r0, #6]
10052aca:	2208      	movs	r2, #8
10052acc:	3008      	adds	r0, #8
10052ace:	9902      	ldr	r1, [sp, #8]
10052ad0:	f7ed fe57 	bl	10040782 <Osal_MemCpy>
10052ad4:	9905      	ldr	r1, [sp, #20]
10052ad6:	9800      	ldr	r0, [sp, #0]
10052ad8:	f009 f9f4 	bl	1005bec4 <aci_event_fifo_push>
10052adc:	78a0      	ldrb	r0, [r4, #2]
10052ade:	0740      	lsls	r0, r0, #29
10052ae0:	0f40      	lsrs	r0, r0, #29
10052ae2:	2805      	cmp	r0, #5
10052ae4:	d002      	beq.n	10052aec <isr_event_handler+0x324>
10052ae6:	2802      	cmp	r0, #2
10052ae8:	d003      	beq.n	10052af2 <isr_event_handler+0x32a>
10052aea:	e0ff      	b.n	10052cec <isr_event_handler+0x524>
10052aec:	2008      	movs	r0, #8
10052aee:	73b8      	strb	r0, [r7, #14]
10052af0:	e0fc      	b.n	10052cec <isr_event_handler+0x524>
10052af2:	2008      	movs	r0, #8
10052af4:	73f8      	strb	r0, [r7, #15]
10052af6:	e0f9      	b.n	10052cec <isr_event_handler+0x524>
10052af8:	0468      	lsls	r0, r5, #17
10052afa:	d524      	bpl.n	10052b46 <isr_event_handler+0x37e>
10052afc:	8a20      	ldrh	r0, [r4, #16]
10052afe:	0440      	lsls	r0, r0, #17
10052b00:	4833      	ldr	r0, [pc, #204]	; (10052bd0 <isr_event_handler+0x408>)
10052b02:	6800      	ldr	r0, [r0, #0]
10052b04:	d50c      	bpl.n	10052b20 <isr_event_handler+0x358>
10052b06:	30a0      	adds	r0, #160	; 0xa0
10052b08:	7900      	ldrb	r0, [r0, #4]
10052b0a:	07c0      	lsls	r0, r0, #31
10052b0c:	d001      	beq.n	10052b12 <isr_event_handler+0x34a>
10052b0e:	2000      	movs	r0, #0
10052b10:	e000      	b.n	10052b14 <isr_event_handler+0x34c>
10052b12:	2010      	movs	r0, #16
10052b14:	2100      	movs	r1, #0
10052b16:	3080      	adds	r0, #128	; 0x80
10052b18:	9a06      	ldr	r2, [sp, #24]
10052b1a:	f7ff fd57 	bl	100525cc <hci_encryption_key_refresh_complete_event_push>
10052b1e:	e00c      	b.n	10052b3a <isr_event_handler+0x372>
10052b20:	30a0      	adds	r0, #160	; 0xa0
10052b22:	7900      	ldrb	r0, [r0, #4]
10052b24:	07c0      	lsls	r0, r0, #31
10052b26:	d001      	beq.n	10052b2c <isr_event_handler+0x364>
10052b28:	2000      	movs	r0, #0
10052b2a:	e000      	b.n	10052b2e <isr_event_handler+0x366>
10052b2c:	2010      	movs	r0, #16
10052b2e:	2301      	movs	r3, #1
10052b30:	2100      	movs	r1, #0
10052b32:	3080      	adds	r0, #128	; 0x80
10052b34:	9a06      	ldr	r2, [sp, #24]
10052b36:	f7ff fd1b 	bl	10052570 <hci_encryption_change_event_push>
10052b3a:	78a0      	ldrb	r0, [r4, #2]
10052b3c:	0740      	lsls	r0, r0, #29
10052b3e:	0f40      	lsrs	r0, r0, #29
10052b40:	2805      	cmp	r0, #5
10052b42:	d0d3      	beq.n	10052aec <isr_event_handler+0x324>
10052b44:	e0d2      	b.n	10052cec <isr_event_handler+0x524>
10052b46:	0228      	lsls	r0, r5, #8
10052b48:	d51e      	bpl.n	10052b88 <isr_event_handler+0x3c0>
10052b4a:	8a20      	ldrh	r0, [r4, #16]
10052b4c:	0500      	lsls	r0, r0, #20
10052b4e:	d51a      	bpl.n	10052b86 <isr_event_handler+0x3be>
10052b50:	481f      	ldr	r0, [pc, #124]	; (10052bd0 <isr_event_handler+0x408>)
10052b52:	78f1      	ldrb	r1, [r6, #3]
10052b54:	6800      	ldr	r0, [r0, #0]
10052b56:	30a0      	adds	r0, #160	; 0xa0
10052b58:	7900      	ldrb	r0, [r0, #4]
10052b5a:	07c0      	lsls	r0, r0, #31
10052b5c:	d001      	beq.n	10052b62 <isr_event_handler+0x39a>
10052b5e:	2000      	movs	r0, #0
10052b60:	e000      	b.n	10052b64 <isr_event_handler+0x39c>
10052b62:	2010      	movs	r0, #16
10052b64:	2300      	movs	r3, #0
10052b66:	3080      	adds	r0, #128	; 0x80
10052b68:	9a06      	ldr	r2, [sp, #24]
10052b6a:	f7ff fd01 	bl	10052570 <hci_encryption_change_event_push>
10052b6e:	78a0      	ldrb	r0, [r4, #2]
10052b70:	0740      	lsls	r0, r0, #29
10052b72:	0f40      	lsrs	r0, r0, #29
10052b74:	2805      	cmp	r0, #5
10052b76:	d101      	bne.n	10052b7c <isr_event_handler+0x3b4>
10052b78:	2008      	movs	r0, #8
10052b7a:	73b8      	strb	r0, [r7, #14]
10052b7c:	2143      	movs	r1, #67	; 0x43
10052b7e:	6920      	ldr	r0, [r4, #16]
10052b80:	0289      	lsls	r1, r1, #10
10052b82:	4388      	bics	r0, r1
10052b84:	6120      	str	r0, [r4, #16]
10052b86:	e0b1      	b.n	10052cec <isr_event_handler+0x524>
10052b88:	990e      	ldr	r1, [sp, #56]	; 0x38
10052b8a:	062a      	lsls	r2, r5, #24
10052b8c:	3180      	adds	r1, #128	; 0x80
10052b8e:	4812      	ldr	r0, [pc, #72]	; (10052bd8 <isr_event_handler+0x410>)
10052b90:	9100      	str	r1, [sp, #0]
10052b92:	2a00      	cmp	r2, #0
10052b94:	da2c      	bge.n	10052bf0 <isr_event_handler+0x428>
10052b96:	4631      	mov	r1, r6
10052b98:	310d      	adds	r1, #13
10052b9a:	9101      	str	r1, [sp, #4]
10052b9c:	a902      	add	r1, sp, #8
10052b9e:	9107      	str	r1, [sp, #28]
10052ba0:	490b      	ldr	r1, [pc, #44]	; (10052bd0 <isr_event_handler+0x408>)
10052ba2:	9f16      	ldr	r7, [sp, #88]	; 0x58
10052ba4:	6809      	ldr	r1, [r1, #0]
10052ba6:	2208      	movs	r2, #8
10052ba8:	1809      	adds	r1, r1, r0
10052baa:	1cf0      	adds	r0, r6, #3
10052bac:	3726      	adds	r7, #38	; 0x26
10052bae:	f7f9 fee9 	bl	1004c984 <char_copy>
10052bb2:	7af1      	ldrb	r1, [r6, #11]
10052bb4:	7b30      	ldrb	r0, [r6, #12]
10052bb6:	2208      	movs	r2, #8
10052bb8:	0200      	lsls	r0, r0, #8
10052bba:	4308      	orrs	r0, r1
10052bbc:	9900      	ldr	r1, [sp, #0]
10052bbe:	83c8      	strh	r0, [r1, #30]
10052bc0:	9907      	ldr	r1, [sp, #28]
10052bc2:	9801      	ldr	r0, [sp, #4]
10052bc4:	f7f9 fede 	bl	1004c984 <char_copy>
10052bc8:	2204      	movs	r2, #4
10052bca:	4639      	mov	r1, r7
10052bcc:	9801      	ldr	r0, [sp, #4]
10052bce:	e005      	b.n	10052bdc <isr_event_handler+0x414>
10052bd0:	20000d64 	.word	0x20000d64
10052bd4:	04001000 	.word	0x04001000
10052bd8:	00000964 	.word	0x00000964
10052bdc:	3008      	adds	r0, #8
10052bde:	f7f9 fed1 	bl	1004c984 <char_copy>
10052be2:	9800      	ldr	r0, [sp, #0]
10052be4:	9902      	ldr	r1, [sp, #8]
10052be6:	63c1      	str	r1, [r0, #60]	; 0x3c
10052be8:	9800      	ldr	r0, [sp, #0]
10052bea:	9903      	ldr	r1, [sp, #12]
10052bec:	6401      	str	r1, [r0, #64]	; 0x40
10052bee:	e07d      	b.n	10052cec <isr_event_handler+0x524>
10052bf0:	0129      	lsls	r1, r5, #4
10052bf2:	d53e      	bpl.n	10052c72 <isr_event_handler+0x4aa>
10052bf4:	4971      	ldr	r1, [pc, #452]	; (10052dbc <isr_event_handler+0x5f4>)
10052bf6:	22a4      	movs	r2, #164	; 0xa4
10052bf8:	6809      	ldr	r1, [r1, #0]
10052bfa:	5c52      	ldrb	r2, [r2, r1]
10052bfc:	07d2      	lsls	r2, r2, #31
10052bfe:	d001      	beq.n	10052c04 <isr_event_handler+0x43c>
10052c00:	2700      	movs	r7, #0
10052c02:	e000      	b.n	10052c06 <isr_event_handler+0x43e>
10052c04:	2710      	movs	r7, #16
10052c06:	1808      	adds	r0, r1, r0
10052c08:	9003      	str	r0, [sp, #12]
10052c0a:	9a06      	ldr	r2, [sp, #24]
10052c0c:	9800      	ldr	r0, [sp, #0]
10052c0e:	9202      	str	r2, [sp, #8]
10052c10:	8bc0      	ldrh	r0, [r0, #30]
10052c12:	2303      	movs	r3, #3
10052c14:	3780      	adds	r7, #128	; 0x80
10052c16:	9005      	str	r0, [sp, #20]
10052c18:	06f8      	lsls	r0, r7, #27
10052c1a:	d503      	bpl.n	10052c24 <isr_event_handler+0x45c>
10052c1c:	2206      	movs	r2, #6
10052c1e:	20bf      	movs	r0, #191	; 0xbf
10052c20:	4007      	ands	r7, r0
10052c22:	e009      	b.n	10052c38 <isr_event_handler+0x470>
10052c24:	2037      	movs	r0, #55	; 0x37
10052c26:	0140      	lsls	r0, r0, #5
10052c28:	1808      	adds	r0, r1, r0
10052c2a:	7842      	ldrb	r2, [r0, #1]
10052c2c:	0692      	lsls	r2, r2, #26
10052c2e:	d55d      	bpl.n	10052cec <isr_event_handler+0x524>
10052c30:	7880      	ldrb	r0, [r0, #2]
10052c32:	06c0      	lsls	r0, r0, #27
10052c34:	d55a      	bpl.n	10052cec <isr_event_handler+0x524>
10052c36:	2204      	movs	r2, #4
10052c38:	0738      	lsls	r0, r7, #28
10052c3a:	0e80      	lsrs	r0, r0, #26
10052c3c:	1841      	adds	r1, r0, r1
10052c3e:	2001      	movs	r0, #1
10052c40:	02c0      	lsls	r0, r0, #11
10052c42:	1808      	adds	r0, r1, r0
10052c44:	6940      	ldr	r0, [r0, #20]
10052c46:	4639      	mov	r1, r7
10052c48:	f009 f950 	bl	1005beec <aci_event_fifo_push_header>
10052c4c:	9004      	str	r0, [sp, #16]
10052c4e:	2800      	cmp	r0, #0
10052c50:	d04c      	beq.n	10052cec <isr_event_handler+0x524>
10052c52:	1d00      	adds	r0, r0, #4
10052c54:	9000      	str	r0, [sp, #0]
10052c56:	9902      	ldr	r1, [sp, #8]
10052c58:	8001      	strh	r1, [r0, #0]
10052c5a:	9800      	ldr	r0, [sp, #0]
10052c5c:	2208      	movs	r2, #8
10052c5e:	1c80      	adds	r0, r0, #2
10052c60:	9903      	ldr	r1, [sp, #12]
10052c62:	f7ed fd8e 	bl	10040782 <Osal_MemCpy>
10052c66:	9800      	ldr	r0, [sp, #0]
10052c68:	9905      	ldr	r1, [sp, #20]
10052c6a:	8141      	strh	r1, [r0, #10]
10052c6c:	4638      	mov	r0, r7
10052c6e:	9904      	ldr	r1, [sp, #16]
10052c70:	e03a      	b.n	10052ce8 <isr_event_handler+0x520>
10052c72:	02a8      	lsls	r0, r5, #10
10052c74:	d509      	bpl.n	10052c8a <isr_event_handler+0x4c2>
10052c76:	2008      	movs	r0, #8
10052c78:	73b8      	strb	r0, [r7, #14]
10052c7a:	4851      	ldr	r0, [pc, #324]	; (10052dc0 <isr_event_handler+0x5f8>)
10052c7c:	8800      	ldrh	r0, [r0, #0]
10052c7e:	0740      	lsls	r0, r0, #29
10052c80:	0f40      	lsrs	r0, r0, #29
10052c82:	1c40      	adds	r0, r0, #1
10052c84:	f7ee ff3c 	bl	10041b00 <Reclassify_All_Channels_ucfg>
10052c88:	e030      	b.n	10052cec <isr_event_handler+0x524>
10052c8a:	01a8      	lsls	r0, r5, #6
10052c8c:	d52e      	bpl.n	10052cec <isr_event_handler+0x524>
10052c8e:	2080      	movs	r0, #128	; 0x80
10052c90:	9001      	str	r0, [sp, #4]
10052c92:	4620      	mov	r0, r4
10052c94:	3040      	adds	r0, #64	; 0x40
10052c96:	8841      	ldrh	r1, [r0, #2]
10052c98:	9109      	str	r1, [sp, #36]	; 0x24
10052c9a:	8a01      	ldrh	r1, [r0, #16]
10052c9c:	9108      	str	r1, [sp, #32]
10052c9e:	88c1      	ldrh	r1, [r0, #6]
10052ca0:	9104      	str	r1, [sp, #16]
10052ca2:	8a40      	ldrh	r0, [r0, #18]
10052ca4:	9007      	str	r0, [sp, #28]
10052ca6:	4845      	ldr	r0, [pc, #276]	; (10052dbc <isr_event_handler+0x5f4>)
10052ca8:	2137      	movs	r1, #55	; 0x37
10052caa:	6800      	ldr	r0, [r0, #0]
10052cac:	0149      	lsls	r1, r1, #5
10052cae:	1841      	adds	r1, r0, r1
10052cb0:	784a      	ldrb	r2, [r1, #1]
10052cb2:	9f06      	ldr	r7, [sp, #24]
10052cb4:	2303      	movs	r3, #3
10052cb6:	0692      	lsls	r2, r2, #26
10052cb8:	d518      	bpl.n	10052cec <isr_event_handler+0x524>
10052cba:	7889      	ldrb	r1, [r1, #2]
10052cbc:	0649      	lsls	r1, r1, #25
10052cbe:	d515      	bpl.n	10052cec <isr_event_handler+0x524>
10052cc0:	2101      	movs	r1, #1
10052cc2:	02c9      	lsls	r1, r1, #11
10052cc4:	1840      	adds	r0, r0, r1
10052cc6:	2206      	movs	r2, #6
10052cc8:	6940      	ldr	r0, [r0, #20]
10052cca:	9901      	ldr	r1, [sp, #4]
10052ccc:	f009 f90e 	bl	1005beec <aci_event_fifo_push_header>
10052cd0:	0001      	movs	r1, r0
10052cd2:	d00b      	beq.n	10052cec <isr_event_handler+0x524>
10052cd4:	808f      	strh	r7, [r1, #4]
10052cd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
10052cd8:	80ca      	strh	r2, [r1, #6]
10052cda:	9a08      	ldr	r2, [sp, #32]
10052cdc:	810a      	strh	r2, [r1, #8]
10052cde:	9a04      	ldr	r2, [sp, #16]
10052ce0:	814a      	strh	r2, [r1, #10]
10052ce2:	9a07      	ldr	r2, [sp, #28]
10052ce4:	818a      	strh	r2, [r1, #12]
10052ce6:	9801      	ldr	r0, [sp, #4]
10052ce8:	f009 f8ec 	bl	1005bec4 <aci_event_fifo_push>
10052cec:	06a8      	lsls	r0, r5, #26
10052cee:	d50a      	bpl.n	10052d06 <isr_event_handler+0x53e>
10052cf0:	6a20      	ldr	r0, [r4, #32]
10052cf2:	6801      	ldr	r1, [r0, #0]
10052cf4:	6221      	str	r1, [r4, #32]
10052cf6:	2100      	movs	r1, #0
10052cf8:	6001      	str	r1, [r0, #0]
10052cfa:	6a22      	ldr	r2, [r4, #32]
10052cfc:	2a00      	cmp	r2, #0
10052cfe:	d100      	bne.n	10052d02 <isr_event_handler+0x53a>
10052d00:	6261      	str	r1, [r4, #36]	; 0x24
10052d02:	f009 fe77 	bl	1005c9f4 <Acl_Tx_Cmpl_Pkt_Handler>
10052d06:	06e8      	lsls	r0, r5, #27
10052d08:	d51a      	bpl.n	10052d40 <isr_event_handler+0x578>
10052d0a:	f7ee ff3f 	bl	10041b8c <data_length_extension_csr_ucfg>
10052d0e:	2801      	cmp	r0, #1
10052d10:	d052      	beq.n	10052db8 <isr_event_handler+0x5f0>
10052d12:	271f      	movs	r7, #31
10052d14:	7870      	ldrb	r0, [r6, #1]
10052d16:	1cb1      	adds	r1, r6, #2
10052d18:	4007      	ands	r7, r0
10052d1a:	69e0      	ldr	r0, [r4, #28]
10052d1c:	463a      	mov	r2, r7
10052d1e:	6880      	ldr	r0, [r0, #8]
10052d20:	f000 fc07 	bl	10053532 <Mem_Buff_Block_Write>
10052d24:	69e0      	ldr	r0, [r4, #28]
10052d26:	80c7      	strh	r7, [r0, #6]
10052d28:	69e0      	ldr	r0, [r4, #28]
10052d2a:	2700      	movs	r7, #0
10052d2c:	6007      	str	r7, [r0, #0]
10052d2e:	7831      	ldrb	r1, [r6, #0]
10052d30:	69e0      	ldr	r0, [r4, #28]
10052d32:	0789      	lsls	r1, r1, #30
10052d34:	0f89      	lsrs	r1, r1, #30
10052d36:	7301      	strb	r1, [r0, #12]
10052d38:	69e0      	ldr	r0, [r4, #28]
10052d3a:	f009 fe0b 	bl	1005c954 <Acl_Rcv_Pkt_Handler>
10052d3e:	61e7      	str	r7, [r4, #28]
10052d40:	01e8      	lsls	r0, r5, #7
10052d42:	d537      	bpl.n	10052db4 <isr_event_handler+0x5ec>
10052d44:	9816      	ldr	r0, [sp, #88]	; 0x58
10052d46:	89c1      	ldrh	r1, [r0, #14]
10052d48:	2001      	movs	r0, #1
10052d4a:	0740      	lsls	r0, r0, #29
10052d4c:	1809      	adds	r1, r1, r0
10052d4e:	8849      	ldrh	r1, [r1, #2]
10052d50:	1808      	adds	r0, r1, r0
10052d52:	7801      	ldrb	r1, [r0, #0]
10052d54:	0649      	lsls	r1, r1, #25
10052d56:	0fcd      	lsrs	r5, r1, #31
10052d58:	a907      	add	r1, sp, #28
10052d5a:	f002 ff8d 	bl	10055c78 <get_scan_addr>
10052d5e:	20a1      	movs	r0, #161	; 0xa1
10052d60:	9001      	str	r0, [sp, #4]
10052d62:	7ba6      	ldrb	r6, [r4, #14]
10052d64:	9807      	ldr	r0, [sp, #28]
10052d66:	9009      	str	r0, [sp, #36]	; 0x24
10052d68:	9808      	ldr	r0, [sp, #32]
10052d6a:	900a      	str	r0, [sp, #40]	; 0x28
10052d6c:	4813      	ldr	r0, [pc, #76]	; (10052dbc <isr_event_handler+0x5f4>)
10052d6e:	2107      	movs	r1, #7
10052d70:	6800      	ldr	r0, [r0, #0]
10052d72:	0209      	lsls	r1, r1, #8
10052d74:	1841      	adds	r1, r0, r1
10052d76:	7909      	ldrb	r1, [r1, #4]
10052d78:	2302      	movs	r3, #2
10052d7a:	07c9      	lsls	r1, r1, #31
10052d7c:	d01a      	beq.n	10052db4 <isr_event_handler+0x5ec>
10052d7e:	0299      	lsls	r1, r3, #10
10052d80:	1d00      	adds	r0, r0, #4
10052d82:	1840      	adds	r0, r0, r1
10052d84:	220f      	movs	r2, #15
10052d86:	6940      	ldr	r0, [r0, #20]
10052d88:	9901      	ldr	r1, [sp, #4]
10052d8a:	f009 f8af 	bl	1005beec <aci_event_fifo_push_header>
10052d8e:	0004      	movs	r4, r0
10052d90:	d010      	beq.n	10052db4 <isr_event_handler+0x5ec>
10052d92:	7126      	strb	r6, [r4, #4]
10052d94:	1d27      	adds	r7, r4, #4
10052d96:	7165      	strb	r5, [r4, #5]
10052d98:	2204      	movs	r2, #4
10052d9a:	a909      	add	r1, sp, #36	; 0x24
10052d9c:	1da0      	adds	r0, r4, #6
10052d9e:	f7ed fcf0 	bl	10040782 <Osal_MemCpy>
10052da2:	2204      	movs	r2, #4
10052da4:	a90a      	add	r1, sp, #40	; 0x28
10052da6:	1db8      	adds	r0, r7, #6
10052da8:	f7ed fceb 	bl	10040782 <Osal_MemCpy>
10052dac:	4621      	mov	r1, r4
10052dae:	9801      	ldr	r0, [sp, #4]
10052db0:	f009 f888 	bl	1005bec4 <aci_event_fifo_push>
10052db4:	b011      	add	sp, #68	; 0x44
10052db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052db8:	27ff      	movs	r7, #255	; 0xff
10052dba:	e7ab      	b.n	10052d14 <isr_event_handler+0x54c>
10052dbc:	20000d64 	.word	0x20000d64
10052dc0:	200000c0 	.word	0x200000c0

10052dc4 <isr_event_handler_scan_data>:
10052dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
10052dc6:	b08f      	sub	sp, #60	; 0x3c
10052dc8:	6807      	ldr	r7, [r0, #0]
10052dca:	6841      	ldr	r1, [r0, #4]
10052dcc:	910a      	str	r1, [sp, #40]	; 0x28
10052dce:	4979      	ldr	r1, [pc, #484]	; (10052fb4 <isr_event_handler_scan_data+0x1f0>)
10052dd0:	4a79      	ldr	r2, [pc, #484]	; (10052fb8 <isr_event_handler_scan_data+0x1f4>)
10052dd2:	6809      	ldr	r1, [r1, #0]
10052dd4:	8900      	ldrh	r0, [r0, #8]
10052dd6:	1889      	adds	r1, r1, r2
10052dd8:	910b      	str	r1, [sp, #44]	; 0x2c
10052dda:	2101      	movs	r1, #1
10052ddc:	9109      	str	r1, [sp, #36]	; 0x24
10052dde:	2100      	movs	r1, #0
10052de0:	9108      	str	r1, [sp, #32]
10052de2:	0540      	lsls	r0, r0, #21
10052de4:	d514      	bpl.n	10052e10 <isr_event_handler_scan_data+0x4c>
10052de6:	980b      	ldr	r0, [sp, #44]	; 0x2c
10052de8:	6984      	ldr	r4, [r0, #24]
10052dea:	69c6      	ldr	r6, [r0, #28]
10052dec:	7820      	ldrb	r0, [r4, #0]
10052dee:	7b61      	ldrb	r1, [r4, #13]
10052df0:	0705      	lsls	r5, r0, #28
10052df2:	0f2d      	lsrs	r5, r5, #28
10052df4:	0989      	lsrs	r1, r1, #6
10052df6:	2901      	cmp	r1, #1
10052df8:	d103      	bne.n	10052e02 <isr_event_handler_scan_data+0x3e>
10052dfa:	09c0      	lsrs	r0, r0, #7
10052dfc:	d001      	beq.n	10052e02 <isr_event_handler_scan_data+0x3e>
10052dfe:	2001      	movs	r0, #1
10052e00:	e000      	b.n	10052e04 <isr_event_handler_scan_data+0x40>
10052e02:	2000      	movs	r0, #0
10052e04:	9008      	str	r0, [sp, #32]
10052e06:	2d02      	cmp	r5, #2
10052e08:	d90c      	bls.n	10052e24 <isr_event_handler_scan_data+0x60>
10052e0a:	2d06      	cmp	r5, #6
10052e0c:	d108      	bne.n	10052e20 <isr_event_handler_scan_data+0x5c>
10052e0e:	e009      	b.n	10052e24 <isr_event_handler_scan_data+0x60>
10052e10:	980b      	ldr	r0, [sp, #44]	; 0x2c
10052e12:	6b3c      	ldr	r4, [r7, #48]	; 0x30
10052e14:	6a06      	ldr	r6, [r0, #32]
10052e16:	7820      	ldrb	r0, [r4, #0]
10052e18:	0705      	lsls	r5, r0, #28
10052e1a:	0f2d      	lsrs	r5, r5, #28
10052e1c:	2d04      	cmp	r5, #4
10052e1e:	d001      	beq.n	10052e24 <isr_event_handler_scan_data+0x60>
10052e20:	2000      	movs	r0, #0
10052e22:	9009      	str	r0, [sp, #36]	; 0x24
10052e24:	79e0      	ldrb	r0, [r4, #7]
10052e26:	0980      	lsrs	r0, r0, #6
10052e28:	2801      	cmp	r0, #1
10052e2a:	d104      	bne.n	10052e36 <isr_event_handler_scan_data+0x72>
10052e2c:	7820      	ldrb	r0, [r4, #0]
10052e2e:	0640      	lsls	r0, r0, #25
10052e30:	d501      	bpl.n	10052e36 <isr_event_handler_scan_data+0x72>
10052e32:	2101      	movs	r1, #1
10052e34:	e000      	b.n	10052e38 <isr_event_handler_scan_data+0x74>
10052e36:	2100      	movs	r1, #0
10052e38:	4860      	ldr	r0, [pc, #384]	; (10052fbc <isr_event_handler_scan_data+0x1f8>)
10052e3a:	7001      	strb	r1, [r0, #0]
10052e3c:	20e0      	movs	r0, #224	; 0xe0
10052e3e:	5dc0      	ldrb	r0, [r0, r7]
10052e40:	2800      	cmp	r0, #0
10052e42:	d03d      	beq.n	10052ec0 <isr_event_handler_scan_data+0xfc>
10052e44:	2001      	movs	r0, #1
10052e46:	4686      	mov	lr, r0
10052e48:	2000      	movs	r0, #0
10052e4a:	4684      	mov	ip, r0
10052e4c:	7830      	ldrb	r0, [r6, #0]
10052e4e:	2113      	movs	r1, #19
10052e50:	9000      	str	r0, [sp, #0]
10052e52:	e01d      	b.n	10052e90 <isr_event_handler_scan_data+0xcc>
10052e54:	2000      	movs	r0, #0
10052e56:	900d      	str	r0, [sp, #52]	; 0x34
10052e58:	1842      	adds	r2, r0, r1
10052e5a:	1823      	adds	r3, r4, r0
10052e5c:	5cb2      	ldrb	r2, [r6, r2]
10052e5e:	789b      	ldrb	r3, [r3, #2]
10052e60:	429a      	cmp	r2, r3
10052e62:	d001      	beq.n	10052e68 <isr_event_handler_scan_data+0xa4>
10052e64:	2201      	movs	r2, #1
10052e66:	920d      	str	r2, [sp, #52]	; 0x34
10052e68:	1c40      	adds	r0, r0, #1
10052e6a:	b2c0      	uxtb	r0, r0
10052e6c:	2806      	cmp	r0, #6
10052e6e:	d3f3      	bcc.n	10052e58 <isr_event_handler_scan_data+0x94>
10052e70:	4670      	mov	r0, lr
10052e72:	2800      	cmp	r0, #0
10052e74:	d004      	beq.n	10052e80 <isr_event_handler_scan_data+0xbc>
10052e76:	980d      	ldr	r0, [sp, #52]	; 0x34
10052e78:	2800      	cmp	r0, #0
10052e7a:	d001      	beq.n	10052e80 <isr_event_handler_scan_data+0xbc>
10052e7c:	2001      	movs	r0, #1
10052e7e:	e000      	b.n	10052e82 <isr_event_handler_scan_data+0xbe>
10052e80:	2000      	movs	r0, #0
10052e82:	4686      	mov	lr, r0
10052e84:	1f89      	subs	r1, r1, #6
10052e86:	4660      	mov	r0, ip
10052e88:	1c40      	adds	r0, r0, #1
10052e8a:	b2c0      	uxtb	r0, r0
10052e8c:	b2c9      	uxtb	r1, r1
10052e8e:	4684      	mov	ip, r0
10052e90:	9800      	ldr	r0, [sp, #0]
10052e92:	4584      	cmp	ip, r0
10052e94:	d3de      	bcc.n	10052e54 <isr_event_handler_scan_data+0x90>
10052e96:	4670      	mov	r0, lr
10052e98:	2800      	cmp	r0, #0
10052e9a:	d07a      	beq.n	10052f92 <isr_event_handler_scan_data+0x1ce>
10052e9c:	9800      	ldr	r0, [sp, #0]
10052e9e:	1c40      	adds	r0, r0, #1
10052ea0:	b2c0      	uxtb	r0, r0
10052ea2:	2804      	cmp	r0, #4
10052ea4:	d900      	bls.n	10052ea8 <isr_event_handler_scan_data+0xe4>
10052ea6:	2004      	movs	r0, #4
10052ea8:	7030      	strb	r0, [r6, #0]
10052eaa:	2212      	movs	r2, #18
10052eac:	1c71      	adds	r1, r6, #1
10052eae:	1df0      	adds	r0, r6, #7
10052eb0:	f7f9 fd68 	bl	1004c984 <char_copy>
10052eb4:	4631      	mov	r1, r6
10052eb6:	2206      	movs	r2, #6
10052eb8:	3113      	adds	r1, #19
10052eba:	1ca0      	adds	r0, r4, #2
10052ebc:	f7f9 fd62 	bl	1004c984 <char_copy>
10052ec0:	2d06      	cmp	r5, #6
10052ec2:	d002      	beq.n	10052eca <isr_event_handler_scan_data+0x106>
10052ec4:	2d02      	cmp	r5, #2
10052ec6:	d002      	beq.n	10052ece <isr_event_handler_scan_data+0x10a>
10052ec8:	e002      	b.n	10052ed0 <isr_event_handler_scan_data+0x10c>
10052eca:	2502      	movs	r5, #2
10052ecc:	e000      	b.n	10052ed0 <isr_event_handler_scan_data+0x10c>
10052ece:	2503      	movs	r5, #3
10052ed0:	7820      	ldrb	r0, [r4, #0]
10052ed2:	0640      	lsls	r0, r0, #25
10052ed4:	0fc0      	lsrs	r0, r0, #31
10052ed6:	9004      	str	r0, [sp, #16]
10052ed8:	2d01      	cmp	r5, #1
10052eda:	d00a      	beq.n	10052ef2 <isr_event_handler_scan_data+0x12e>
10052edc:	7860      	ldrb	r0, [r4, #1]
10052ede:	1f80      	subs	r0, r0, #6
10052ee0:	06c6      	lsls	r6, r0, #27
10052ee2:	0ef6      	lsrs	r6, r6, #27
10052ee4:	4833      	ldr	r0, [pc, #204]	; (10052fb4 <isr_event_handler_scan_data+0x1f0>)
10052ee6:	21f0      	movs	r1, #240	; 0xf0
10052ee8:	6800      	ldr	r0, [r0, #0]
10052eea:	5c09      	ldrb	r1, [r1, r0]
10052eec:	2901      	cmp	r1, #1
10052eee:	d014      	beq.n	10052f1a <isr_event_handler_scan_data+0x156>
10052ef0:	e02f      	b.n	10052f52 <isr_event_handler_scan_data+0x18e>
10052ef2:	2600      	movs	r6, #0
10052ef4:	4669      	mov	r1, sp
10052ef6:	4620      	mov	r0, r4
10052ef8:	f002 feb4 	bl	10055c64 <get_adv_addr>
10052efc:	482d      	ldr	r0, [pc, #180]	; (10052fb4 <isr_event_handler_scan_data+0x1f0>)
10052efe:	6800      	ldr	r0, [r0, #0]
10052f00:	30e0      	adds	r0, #224	; 0xe0
10052f02:	7c00      	ldrb	r0, [r0, #16]
10052f04:	2800      	cmp	r0, #0
10052f06:	d1ed      	bne.n	10052ee4 <isr_event_handler_scan_data+0x120>
10052f08:	9800      	ldr	r0, [sp, #0]
10052f0a:	6839      	ldr	r1, [r7, #0]
10052f0c:	4288      	cmp	r0, r1
10052f0e:	d14f      	bne.n	10052fb0 <isr_event_handler_scan_data+0x1ec>
10052f10:	9801      	ldr	r0, [sp, #4]
10052f12:	6879      	ldr	r1, [r7, #4]
10052f14:	4288      	cmp	r0, r1
10052f16:	d14b      	bne.n	10052fb0 <isr_event_handler_scan_data+0x1ec>
10052f18:	e01b      	b.n	10052f52 <isr_event_handler_scan_data+0x18e>
10052f1a:	2111      	movs	r1, #17
10052f1c:	0189      	lsls	r1, r1, #6
10052f1e:	1841      	adds	r1, r0, r1
10052f20:	7d0a      	ldrb	r2, [r1, #20]
10052f22:	2aff      	cmp	r2, #255	; 0xff
10052f24:	d015      	beq.n	10052f52 <isr_event_handler_scan_data+0x18e>
10052f26:	4925      	ldr	r1, [pc, #148]	; (10052fbc <isr_event_handler_scan_data+0x1f8>)
10052f28:	780b      	ldrb	r3, [r1, #0]
10052f2a:	2b01      	cmp	r3, #1
10052f2c:	d101      	bne.n	10052f32 <isr_event_handler_scan_data+0x16e>
10052f2e:	2302      	movs	r3, #2
10052f30:	704b      	strb	r3, [r1, #1]
10052f32:	2337      	movs	r3, #55	; 0x37
10052f34:	435a      	muls	r2, r3
10052f36:	1812      	adds	r2, r2, r0
10052f38:	32ff      	adds	r2, #255	; 0xff
10052f3a:	3201      	adds	r2, #1
10052f3c:	7e92      	ldrb	r2, [r2, #26]
10052f3e:	7849      	ldrb	r1, [r1, #1]
10052f40:	00d2      	lsls	r2, r2, #3
10052f42:	1810      	adds	r0, r2, r0
10052f44:	2223      	movs	r2, #35	; 0x23
10052f46:	0152      	lsls	r2, r2, #5
10052f48:	1880      	adds	r0, r0, r2
10052f4a:	7b00      	ldrb	r0, [r0, #12]
10052f4c:	1840      	adds	r0, r0, r1
10052f4e:	b2c0      	uxtb	r0, r0
10052f50:	9004      	str	r0, [sp, #16]
10052f52:	9809      	ldr	r0, [sp, #36]	; 0x24
10052f54:	2800      	cmp	r0, #0
10052f56:	d02b      	beq.n	10052fb0 <isr_event_handler_scan_data+0x1ec>
10052f58:	980a      	ldr	r0, [sp, #40]	; 0x28
10052f5a:	3720      	adds	r7, #32
10052f5c:	7b80      	ldrb	r0, [r0, #14]
10052f5e:	9602      	str	r6, [sp, #8]
10052f60:	9400      	str	r4, [sp, #0]
10052f62:	9001      	str	r0, [sp, #4]
10052f64:	7938      	ldrb	r0, [r7, #4]
10052f66:	462a      	mov	r2, r5
10052f68:	9b04      	ldr	r3, [sp, #16]
10052f6a:	9908      	ldr	r1, [sp, #32]
10052f6c:	f7ee fc9f 	bl	100418ae <PRIV_vGenerate_hci_le_direct_advertising_report_event_ucfg>
10052f70:	2800      	cmp	r0, #0
10052f72:	d11d      	bne.n	10052fb0 <isr_event_handler_scan_data+0x1ec>
10052f74:	980a      	ldr	r0, [sp, #40]	; 0x28
10052f76:	4621      	mov	r1, r4
10052f78:	7b80      	ldrb	r0, [r0, #14]
10052f7a:	9002      	str	r0, [sp, #8]
10052f7c:	3108      	adds	r1, #8
10052f7e:	480d      	ldr	r0, [pc, #52]	; (10052fb4 <isr_event_handler_scan_data+0x1f0>)
10052f80:	9600      	str	r6, [sp, #0]
10052f82:	9101      	str	r1, [sp, #4]
10052f84:	6800      	ldr	r0, [r0, #0]
10052f86:	30a0      	adds	r0, #160	; 0xa0
10052f88:	7900      	ldrb	r0, [r0, #4]
10052f8a:	07c0      	lsls	r0, r0, #31
10052f8c:	d002      	beq.n	10052f94 <isr_event_handler_scan_data+0x1d0>
10052f8e:	2000      	movs	r0, #0
10052f90:	e001      	b.n	10052f96 <isr_event_handler_scan_data+0x1d2>
10052f92:	e00d      	b.n	10052fb0 <isr_event_handler_scan_data+0x1ec>
10052f94:	2010      	movs	r0, #16
10052f96:	21a1      	movs	r1, #161	; 0xa1
10052f98:	4308      	orrs	r0, r1
10052f9a:	1ca3      	adds	r3, r4, #2
10052f9c:	4629      	mov	r1, r5
10052f9e:	9a04      	ldr	r2, [sp, #16]
10052fa0:	f7ff fb40 	bl	10052624 <hci_le_advertising_report_event_push>
10052fa4:	2800      	cmp	r0, #0
10052fa6:	d003      	beq.n	10052fb0 <isr_event_handler_scan_data+0x1ec>
10052fa8:	980b      	ldr	r0, [sp, #44]	; 0x2c
10052faa:	2100      	movs	r1, #0
10052fac:	6a00      	ldr	r0, [r0, #32]
10052fae:	7001      	strb	r1, [r0, #0]
10052fb0:	b00f      	add	sp, #60	; 0x3c
10052fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052fb4:	20000d64 	.word	0x20000d64
10052fb8:	00000904 	.word	0x00000904
10052fbc:	20000d60 	.word	0x20000d60

10052fc0 <wait_for_prescheduled_slot_cancellation>:
10052fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052fc2:	4e1b      	ldr	r6, [pc, #108]	; (10053030 <wait_for_prescheduled_slot_cancellation+0x70>)
10052fc4:	8831      	ldrh	r1, [r6, #0]
10052fc6:	4604      	mov	r4, r0
10052fc8:	0709      	lsls	r1, r1, #28
10052fca:	2008      	movs	r0, #8
10052fcc:	0f09      	lsrs	r1, r1, #28
10052fce:	4304      	orrs	r4, r0
10052fd0:	42a1      	cmp	r1, r4
10052fd2:	d12b      	bne.n	1005302c <wait_for_prescheduled_slot_cancellation+0x6c>
10052fd4:	4d17      	ldr	r5, [pc, #92]	; (10053034 <wait_for_prescheduled_slot_cancellation+0x74>)
10052fd6:	2100      	movs	r1, #0
10052fd8:	6828      	ldr	r0, [r5, #0]
10052fda:	6381      	str	r1, [r0, #56]	; 0x38
10052fdc:	14b1      	asrs	r1, r6, #18
10052fde:	1840      	adds	r0, r0, r1
10052fe0:	2109      	movs	r1, #9
10052fe2:	06c9      	lsls	r1, r1, #27
10052fe4:	6f00      	ldr	r0, [r0, #112]	; 0x70
10052fe6:	6909      	ldr	r1, [r1, #16]
10052fe8:	1a47      	subs	r7, r0, r1
10052fea:	2064      	movs	r0, #100	; 0x64
10052fec:	f004 fab6 	bl	1005755c <machine_time_trans>
10052ff0:	7a71      	ldrb	r1, [r6, #9]
10052ff2:	00c9      	lsls	r1, r1, #3
10052ff4:	1840      	adds	r0, r0, r1
10052ff6:	6829      	ldr	r1, [r5, #0]
10052ff8:	6a89      	ldr	r1, [r1, #40]	; 0x28
10052ffa:	1840      	adds	r0, r0, r1
10052ffc:	1a38      	subs	r0, r7, r0
10052ffe:	0200      	lsls	r0, r0, #8
10053000:	2101      	movs	r1, #1
10053002:	0a00      	lsrs	r0, r0, #8
10053004:	05c9      	lsls	r1, r1, #23
10053006:	4288      	cmp	r0, r1
10053008:	d202      	bcs.n	10053010 <wait_for_prescheduled_slot_cancellation+0x50>
1005300a:	2000      	movs	r0, #0
1005300c:	f009 fe04 	bl	1005cc18 <advance_wakeup_timer>
10053010:	4909      	ldr	r1, [pc, #36]	; (10053038 <wait_for_prescheduled_slot_cancellation+0x78>)
10053012:	6828      	ldr	r0, [r5, #0]
10053014:	8832      	ldrh	r2, [r6, #0]
10053016:	0712      	lsls	r2, r2, #28
10053018:	0f12      	lsrs	r2, r2, #28
1005301a:	42a2      	cmp	r2, r4
1005301c:	d106      	bne.n	1005302c <wait_for_prescheduled_slot_cancellation+0x6c>
1005301e:	6b82      	ldr	r2, [r0, #56]	; 0x38
10053020:	428a      	cmp	r2, r1
10053022:	d203      	bcs.n	1005302c <wait_for_prescheduled_slot_cancellation+0x6c>
10053024:	6b82      	ldr	r2, [r0, #56]	; 0x38
10053026:	1c52      	adds	r2, r2, #1
10053028:	6382      	str	r2, [r0, #56]	; 0x38
1005302a:	e7f3      	b.n	10053014 <wait_for_prescheduled_slot_cancellation+0x54>
1005302c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005302e:	0000      	.short	0x0000
10053030:	200000c0 	.word	0x200000c0
10053034:	20000d64 	.word	0x20000d64
10053038:	00027100 	.word	0x00027100

1005303c <LL_Encrypt_Plain_Data>:
1005303c:	b530      	push	{r4, r5, lr}
1005303e:	460d      	mov	r5, r1
10053040:	491d      	ldr	r1, [pc, #116]	; (100530b8 <LL_Encrypt_Plain_Data+0x7c>)
10053042:	4614      	mov	r4, r2
10053044:	6809      	ldr	r1, [r1, #0]
10053046:	2241      	movs	r2, #65	; 0x41
10053048:	0152      	lsls	r2, r2, #5
1005304a:	1889      	adds	r1, r1, r2
1005304c:	2209      	movs	r2, #9
1005304e:	06d2      	lsls	r2, r2, #27
10053050:	6d09      	ldr	r1, [r1, #80]	; 0x50
10053052:	6912      	ldr	r2, [r2, #16]
10053054:	b091      	sub	sp, #68	; 0x44
10053056:	1a89      	subs	r1, r1, r2
10053058:	4a18      	ldr	r2, [pc, #96]	; (100530bc <LL_Encrypt_Plain_Data+0x80>)
1005305a:	0209      	lsls	r1, r1, #8
1005305c:	8812      	ldrh	r2, [r2, #0]
1005305e:	0a09      	lsrs	r1, r1, #8
10053060:	0712      	lsls	r2, r2, #28
10053062:	d50a      	bpl.n	1005307a <LL_Encrypt_Plain_Data+0x3e>
10053064:	2b00      	cmp	r3, #0
10053066:	d108      	bne.n	1005307a <LL_Encrypt_Plain_Data+0x3e>
10053068:	4a15      	ldr	r2, [pc, #84]	; (100530c0 <LL_Encrypt_Plain_Data+0x84>)
1005306a:	39ff      	subs	r1, #255	; 0xff
1005306c:	4291      	cmp	r1, r2
1005306e:	d304      	bcc.n	1005307a <LL_Encrypt_Plain_Data+0x3e>
10053070:	4622      	mov	r2, r4
10053072:	4629      	mov	r1, r5
10053074:	f00a f916 	bl	1005d2a4 <AES128ECB_Wrapper>
10053078:	e01a      	b.n	100530b0 <LL_Encrypt_Plain_Data+0x74>
1005307a:	4601      	mov	r1, r0
1005307c:	2210      	movs	r2, #16
1005307e:	a804      	add	r0, sp, #16
10053080:	f7ed fb7f 	bl	10040782 <Osal_MemCpy>
10053084:	2210      	movs	r2, #16
10053086:	4629      	mov	r1, r5
10053088:	a808      	add	r0, sp, #32
1005308a:	f7ed fb7a 	bl	10040782 <Osal_MemCpy>
1005308e:	a804      	add	r0, sp, #16
10053090:	9000      	str	r0, [sp, #0]
10053092:	a808      	add	r0, sp, #32
10053094:	9001      	str	r0, [sp, #4]
10053096:	a80c      	add	r0, sp, #48	; 0x30
10053098:	9002      	str	r0, [sp, #8]
1005309a:	2000      	movs	r0, #0
1005309c:	4669      	mov	r1, sp
1005309e:	7308      	strb	r0, [r1, #12]
100530a0:	4668      	mov	r0, sp
100530a2:	f7fb fb13 	bl	1004e6cc <encrypt>
100530a6:	2210      	movs	r2, #16
100530a8:	a90c      	add	r1, sp, #48	; 0x30
100530aa:	4620      	mov	r0, r4
100530ac:	f7ed fb69 	bl	10040782 <Osal_MemCpy>
100530b0:	2000      	movs	r0, #0
100530b2:	b011      	add	sp, #68	; 0x44
100530b4:	bd30      	pop	{r4, r5, pc}
100530b6:	0000      	.short	0x0000
100530b8:	20000d64 	.word	0x20000d64
100530bc:	200000c0 	.word	0x200000c0
100530c0:	007fff02 	.word	0x007fff02

100530c4 <LL_Set_LTK>:
100530c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100530c6:	4614      	mov	r4, r2
100530c8:	460a      	mov	r2, r1
100530ca:	4605      	mov	r5, r0
100530cc:	2101      	movs	r1, #1
100530ce:	4610      	mov	r0, r2
100530d0:	f001 f814 	bl	100540fc <get_connection_no>
100530d4:	4601      	mov	r1, r0
100530d6:	2808      	cmp	r0, #8
100530d8:	d301      	bcc.n	100530de <LL_Set_LTK+0x1a>
100530da:	2002      	movs	r0, #2
100530dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100530de:	481c      	ldr	r0, [pc, #112]	; (10053150 <LL_Set_LTK+0x8c>)
100530e0:	2209      	movs	r2, #9
100530e2:	6800      	ldr	r0, [r0, #0]
100530e4:	0212      	lsls	r2, r2, #8
100530e6:	1880      	adds	r0, r0, r2
100530e8:	6b02      	ldr	r2, [r0, #48]	; 0x30
100530ea:	2058      	movs	r0, #88	; 0x58
100530ec:	4348      	muls	r0, r1
100530ee:	1810      	adds	r0, r2, r0
100530f0:	4a18      	ldr	r2, [pc, #96]	; (10053154 <LL_Set_LTK+0x90>)
100530f2:	0189      	lsls	r1, r1, #6
100530f4:	188b      	adds	r3, r1, r2
100530f6:	6b42      	ldr	r2, [r0, #52]	; 0x34
100530f8:	2d00      	cmp	r5, #0
100530fa:	d007      	beq.n	1005310c <LL_Set_LTK+0x48>
100530fc:	4916      	ldr	r1, [pc, #88]	; (10053158 <LL_Set_LTK+0x94>)
100530fe:	b672      	cpsid	i
10053100:	7943      	ldrb	r3, [r0, #5]
10053102:	079b      	lsls	r3, r3, #30
10053104:	d00d      	beq.n	10053122 <LL_Set_LTK+0x5e>
10053106:	b662      	cpsie	i
10053108:	203a      	movs	r0, #58	; 0x3a
1005310a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005310c:	2100      	movs	r1, #0
1005310e:	185f      	adds	r7, r3, r1
10053110:	5c66      	ldrb	r6, [r4, r1]
10053112:	3720      	adds	r7, #32
10053114:	73be      	strb	r6, [r7, #14]
10053116:	1c49      	adds	r1, r1, #1
10053118:	b2c9      	uxtb	r1, r1
1005311a:	2910      	cmp	r1, #16
1005311c:	d3f7      	bcc.n	1005310e <LL_Set_LTK+0x4a>
1005311e:	490f      	ldr	r1, [pc, #60]	; (1005315c <LL_Set_LTK+0x98>)
10053120:	e7ed      	b.n	100530fe <LL_Set_LTK+0x3a>
10053122:	6011      	str	r1, [r2, #0]
10053124:	7941      	ldrb	r1, [r0, #5]
10053126:	2201      	movs	r2, #1
10053128:	4311      	orrs	r1, r2
1005312a:	7141      	strb	r1, [r0, #5]
1005312c:	2d00      	cmp	r5, #0
1005312e:	d009      	beq.n	10053144 <LL_Set_LTK+0x80>
10053130:	4807      	ldr	r0, [pc, #28]	; (10053150 <LL_Set_LTK+0x8c>)
10053132:	2247      	movs	r2, #71	; 0x47
10053134:	6800      	ldr	r0, [r0, #0]
10053136:	2108      	movs	r1, #8
10053138:	0152      	lsls	r2, r2, #5
1005313a:	1880      	adds	r0, r0, r2
1005313c:	73c1      	strb	r1, [r0, #15]
1005313e:	b662      	cpsie	i
10053140:	2000      	movs	r0, #0
10053142:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10053144:	2201      	movs	r2, #1
10053146:	6901      	ldr	r1, [r0, #16]
10053148:	0452      	lsls	r2, r2, #17
1005314a:	4311      	orrs	r1, r2
1005314c:	6101      	str	r1, [r0, #16]
1005314e:	e7f6      	b.n	1005313e <LL_Set_LTK+0x7a>
10053150:	20000d64 	.word	0x20000d64
10053154:	200000cc 	.word	0x200000cc
10053158:	060d0203 	.word	0x060d0203
1005315c:	00050103 	.word	0x00050103

10053160 <aci_hal_get_link_status>:
10053160:	b5f0      	push	{r4, r5, r6, r7, lr}
10053162:	4b12      	ldr	r3, [pc, #72]	; (100531ac <aci_hal_get_link_status+0x4c>)
10053164:	2409      	movs	r4, #9
10053166:	681a      	ldr	r2, [r3, #0]
10053168:	0224      	lsls	r4, r4, #8
1005316a:	1912      	adds	r2, r2, r4
1005316c:	6b16      	ldr	r6, [r2, #48]	; 0x30
1005316e:	4d10      	ldr	r5, [pc, #64]	; (100531b0 <aci_hal_get_link_status+0x50>)
10053170:	2200      	movs	r2, #0
10053172:	681c      	ldr	r4, [r3, #0]
10053174:	34a0      	adds	r4, #160	; 0xa0
10053176:	7b24      	ldrb	r4, [r4, #12]
10053178:	4294      	cmp	r4, r2
1005317a:	d913      	bls.n	100531a4 <aci_hal_get_link_status+0x44>
1005317c:	2458      	movs	r4, #88	; 0x58
1005317e:	4354      	muls	r4, r2
10053180:	19a7      	adds	r7, r4, r6
10053182:	78bc      	ldrb	r4, [r7, #2]
10053184:	0764      	lsls	r4, r4, #29
10053186:	0f64      	lsrs	r4, r4, #29
10053188:	5484      	strb	r4, [r0, r2]
1005318a:	d003      	beq.n	10053194 <aci_hal_get_link_status+0x34>
1005318c:	897c      	ldrh	r4, [r7, #10]
1005318e:	0057      	lsls	r7, r2, #1
10053190:	53cc      	strh	r4, [r1, r7]
10053192:	e001      	b.n	10053198 <aci_hal_get_link_status+0x38>
10053194:	0054      	lsls	r4, r2, #1
10053196:	530d      	strh	r5, [r1, r4]
10053198:	1c52      	adds	r2, r2, #1
1005319a:	b2d2      	uxtb	r2, r2
1005319c:	2a08      	cmp	r2, #8
1005319e:	d3e8      	bcc.n	10053172 <aci_hal_get_link_status+0x12>
100531a0:	2000      	movs	r0, #0
100531a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100531a4:	2400      	movs	r4, #0
100531a6:	5484      	strb	r4, [r0, r2]
100531a8:	e7f4      	b.n	10053194 <aci_hal_get_link_status+0x34>
100531aa:	0000      	.short	0x0000
100531ac:	20000d64 	.word	0x20000d64
100531b0:	0000ffff 	.word	0x0000ffff

100531b4 <Dynamic_allocator>:
100531b4:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
100531b6:	b081      	sub	sp, #4
100531b8:	2213      	movs	r2, #19
100531ba:	01d2      	lsls	r2, r2, #7
100531bc:	2101      	movs	r1, #1
100531be:	a801      	add	r0, sp, #4
100531c0:	f000 f92b 	bl	1005341a <Mem_assign>
100531c4:	4c91      	ldr	r4, [pc, #580]	; (1005340c <Dynamic_allocator+0x258>)
100531c6:	2204      	movs	r2, #4
100531c8:	6020      	str	r0, [r4, #0]
100531ca:	2143      	movs	r1, #67	; 0x43
100531cc:	a801      	add	r0, sp, #4
100531ce:	f000 f924 	bl	1005341a <Mem_assign>
100531d2:	2501      	movs	r5, #1
100531d4:	6821      	ldr	r1, [r4, #0]
100531d6:	02ed      	lsls	r5, r5, #11
100531d8:	1949      	adds	r1, r1, r5
100531da:	6088      	str	r0, [r1, #8]
100531dc:	2204      	movs	r2, #4
100531de:	2143      	movs	r1, #67	; 0x43
100531e0:	a801      	add	r0, sp, #4
100531e2:	f000 f91a 	bl	1005341a <Mem_assign>
100531e6:	6821      	ldr	r1, [r4, #0]
100531e8:	2204      	movs	r2, #4
100531ea:	1949      	adds	r1, r1, r5
100531ec:	60c8      	str	r0, [r1, #12]
100531ee:	21ff      	movs	r1, #255	; 0xff
100531f0:	3184      	adds	r1, #132	; 0x84
100531f2:	a801      	add	r0, sp, #4
100531f4:	f000 f911 	bl	1005341a <Mem_assign>
100531f8:	6821      	ldr	r1, [r4, #0]
100531fa:	220c      	movs	r2, #12
100531fc:	1949      	adds	r1, r1, r5
100531fe:	4d84      	ldr	r5, [pc, #528]	; (10053410 <Dynamic_allocator+0x25c>)
10053200:	6108      	str	r0, [r1, #16]
10053202:	7fa9      	ldrb	r1, [r5, #30]
10053204:	a801      	add	r0, sp, #4
10053206:	310b      	adds	r1, #11
10053208:	f000 f907 	bl	1005341a <Mem_assign>
1005320c:	2609      	movs	r6, #9
1005320e:	6821      	ldr	r1, [r4, #0]
10053210:	0236      	lsls	r6, r6, #8
10053212:	1989      	adds	r1, r1, r6
10053214:	6548      	str	r0, [r1, #84]	; 0x54
10053216:	7fa9      	ldrb	r1, [r5, #30]
10053218:	2220      	movs	r2, #32
1005321a:	a801      	add	r0, sp, #4
1005321c:	f000 f8fd 	bl	1005341a <Mem_assign>
10053220:	6821      	ldr	r1, [r4, #0]
10053222:	2210      	movs	r2, #16
10053224:	1989      	adds	r1, r1, r6
10053226:	6448      	str	r0, [r1, #68]	; 0x44
10053228:	7fa9      	ldrb	r1, [r5, #30]
1005322a:	a801      	add	r0, sp, #4
1005322c:	f000 f8f5 	bl	1005341a <Mem_assign>
10053230:	6821      	ldr	r1, [r4, #0]
10053232:	2228      	movs	r2, #40	; 0x28
10053234:	1989      	adds	r1, r1, r6
10053236:	6488      	str	r0, [r1, #72]	; 0x48
10053238:	2105      	movs	r1, #5
1005323a:	a801      	add	r0, sp, #4
1005323c:	f000 f8ed 	bl	1005341a <Mem_assign>
10053240:	6821      	ldr	r1, [r4, #0]
10053242:	2230      	movs	r2, #48	; 0x30
10053244:	1989      	adds	r1, r1, r6
10053246:	6508      	str	r0, [r1, #80]	; 0x50
10053248:	2105      	movs	r1, #5
1005324a:	a801      	add	r0, sp, #4
1005324c:	f000 f8e5 	bl	1005341a <Mem_assign>
10053250:	6821      	ldr	r1, [r4, #0]
10053252:	22ff      	movs	r2, #255	; 0xff
10053254:	1989      	adds	r1, r1, r6
10053256:	64c8      	str	r0, [r1, #76]	; 0x4c
10053258:	3201      	adds	r2, #1
1005325a:	2101      	movs	r1, #1
1005325c:	a801      	add	r0, sp, #4
1005325e:	f000 f8dc 	bl	1005341a <Mem_assign>
10053262:	6821      	ldr	r1, [r4, #0]
10053264:	2258      	movs	r2, #88	; 0x58
10053266:	1989      	adds	r1, r1, r6
10053268:	65c8      	str	r0, [r1, #92]	; 0x5c
1005326a:	7fa9      	ldrb	r1, [r5, #30]
1005326c:	a801      	add	r0, sp, #4
1005326e:	f000 f8d4 	bl	1005341a <Mem_assign>
10053272:	6821      	ldr	r1, [r4, #0]
10053274:	2220      	movs	r2, #32
10053276:	1989      	adds	r1, r1, r6
10053278:	6308      	str	r0, [r1, #48]	; 0x30
1005327a:	7fa9      	ldrb	r1, [r5, #30]
1005327c:	a801      	add	r0, sp, #4
1005327e:	f000 f8cc 	bl	1005341a <Mem_assign>
10053282:	6821      	ldr	r1, [r4, #0]
10053284:	1989      	adds	r1, r1, r6
10053286:	6348      	str	r0, [r1, #52]	; 0x34
10053288:	8baa      	ldrh	r2, [r5, #28]
1005328a:	2101      	movs	r1, #1
1005328c:	a801      	add	r0, sp, #4
1005328e:	f000 f8c4 	bl	1005341a <Mem_assign>
10053292:	270f      	movs	r7, #15
10053294:	6821      	ldr	r1, [r4, #0]
10053296:	01ff      	lsls	r7, r7, #7
10053298:	19c9      	adds	r1, r1, r7
1005329a:	6008      	str	r0, [r1, #0]
1005329c:	8b29      	ldrh	r1, [r5, #24]
1005329e:	2228      	movs	r2, #40	; 0x28
100532a0:	a801      	add	r0, sp, #4
100532a2:	f000 f8ba 	bl	1005341a <Mem_assign>
100532a6:	2107      	movs	r1, #7
100532a8:	6822      	ldr	r2, [r4, #0]
100532aa:	0209      	lsls	r1, r1, #8
100532ac:	1851      	adds	r1, r2, r1
100532ae:	6788      	str	r0, [r1, #120]	; 0x78
100532b0:	8b69      	ldrh	r1, [r5, #26]
100532b2:	2230      	movs	r2, #48	; 0x30
100532b4:	a801      	add	r0, sp, #4
100532b6:	f000 f8b0 	bl	1005341a <Mem_assign>
100532ba:	2107      	movs	r1, #7
100532bc:	6822      	ldr	r2, [r4, #0]
100532be:	0209      	lsls	r1, r1, #8
100532c0:	1851      	adds	r1, r2, r1
100532c2:	67c8      	str	r0, [r1, #124]	; 0x7c
100532c4:	220c      	movs	r2, #12
100532c6:	2101      	movs	r1, #1
100532c8:	a801      	add	r0, sp, #4
100532ca:	f000 f8a6 	bl	1005341a <Mem_assign>
100532ce:	6821      	ldr	r1, [r4, #0]
100532d0:	220c      	movs	r2, #12
100532d2:	1989      	adds	r1, r1, r6
100532d4:	62c8      	str	r0, [r1, #44]	; 0x2c
100532d6:	2101      	movs	r1, #1
100532d8:	a801      	add	r0, sp, #4
100532da:	f000 f89e 	bl	1005341a <Mem_assign>
100532de:	6821      	ldr	r1, [r4, #0]
100532e0:	2228      	movs	r2, #40	; 0x28
100532e2:	1989      	adds	r1, r1, r6
100532e4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
100532e6:	6088      	str	r0, [r1, #8]
100532e8:	4628      	mov	r0, r5
100532ea:	3020      	adds	r0, #32
100532ec:	9000      	str	r0, [sp, #0]
100532ee:	7841      	ldrb	r1, [r0, #1]
100532f0:	a801      	add	r0, sp, #4
100532f2:	f000 f892 	bl	1005341a <Mem_assign>
100532f6:	6821      	ldr	r1, [r4, #0]
100532f8:	2204      	movs	r2, #4
100532fa:	1989      	adds	r1, r1, r6
100532fc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
100532fe:	6889      	ldr	r1, [r1, #8]
10053300:	6088      	str	r0, [r1, #8]
10053302:	9800      	ldr	r0, [sp, #0]
10053304:	7841      	ldrb	r1, [r0, #1]
10053306:	a801      	add	r0, sp, #4
10053308:	1c49      	adds	r1, r1, #1
1005330a:	f000 f886 	bl	1005341a <Mem_assign>
1005330e:	6821      	ldr	r1, [r4, #0]
10053310:	2210      	movs	r2, #16
10053312:	1989      	adds	r1, r1, r6
10053314:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
10053316:	6889      	ldr	r1, [r1, #8]
10053318:	6048      	str	r0, [r1, #4]
1005331a:	7fa9      	ldrb	r1, [r5, #30]
1005331c:	a801      	add	r0, sp, #4
1005331e:	f000 f87c 	bl	1005341a <Mem_assign>
10053322:	6821      	ldr	r1, [r4, #0]
10053324:	2202      	movs	r2, #2
10053326:	19c9      	adds	r1, r1, r7
10053328:	67c8      	str	r0, [r1, #124]	; 0x7c
1005332a:	7fa9      	ldrb	r1, [r5, #30]
1005332c:	a801      	add	r0, sp, #4
1005332e:	f000 f874 	bl	1005341a <Mem_assign>
10053332:	6821      	ldr	r1, [r4, #0]
10053334:	2202      	movs	r2, #2
10053336:	19c9      	adds	r1, r1, r7
10053338:	6548      	str	r0, [r1, #84]	; 0x54
1005333a:	7fa9      	ldrb	r1, [r5, #30]
1005333c:	a801      	add	r0, sp, #4
1005333e:	f000 f86c 	bl	1005341a <Mem_assign>
10053342:	6821      	ldr	r1, [r4, #0]
10053344:	2202      	movs	r2, #2
10053346:	19c9      	adds	r1, r1, r7
10053348:	6588      	str	r0, [r1, #88]	; 0x58
1005334a:	7fa9      	ldrb	r1, [r5, #30]
1005334c:	a801      	add	r0, sp, #4
1005334e:	f000 f864 	bl	1005341a <Mem_assign>
10053352:	6821      	ldr	r1, [r4, #0]
10053354:	2202      	movs	r2, #2
10053356:	19c9      	adds	r1, r1, r7
10053358:	65c8      	str	r0, [r1, #92]	; 0x5c
1005335a:	7fa9      	ldrb	r1, [r5, #30]
1005335c:	a801      	add	r0, sp, #4
1005335e:	f000 f85c 	bl	1005341a <Mem_assign>
10053362:	6821      	ldr	r1, [r4, #0]
10053364:	2201      	movs	r2, #1
10053366:	19c9      	adds	r1, r1, r7
10053368:	6608      	str	r0, [r1, #96]	; 0x60
1005336a:	7fa9      	ldrb	r1, [r5, #30]
1005336c:	a801      	add	r0, sp, #4
1005336e:	1c49      	adds	r1, r1, #1
10053370:	f000 f853 	bl	1005341a <Mem_assign>
10053374:	6821      	ldr	r1, [r4, #0]
10053376:	2210      	movs	r2, #16
10053378:	19c9      	adds	r1, r1, r7
1005337a:	6788      	str	r0, [r1, #120]	; 0x78
1005337c:	210b      	movs	r1, #11
1005337e:	a801      	add	r0, sp, #4
10053380:	f000 f84b 	bl	1005341a <Mem_assign>
10053384:	2107      	movs	r1, #7
10053386:	6822      	ldr	r2, [r4, #0]
10053388:	0209      	lsls	r1, r1, #8
1005338a:	1851      	adds	r1, r2, r1
1005338c:	6188      	str	r0, [r1, #24]
1005338e:	2204      	movs	r2, #4
10053390:	2180      	movs	r1, #128	; 0x80
10053392:	a801      	add	r0, sp, #4
10053394:	f000 f841 	bl	1005341a <Mem_assign>
10053398:	6821      	ldr	r1, [r4, #0]
1005339a:	1989      	adds	r1, r1, r6
1005339c:	6388      	str	r0, [r1, #56]	; 0x38
1005339e:	9a02      	ldr	r2, [sp, #8]
100533a0:	20dc      	movs	r0, #220	; 0xdc
100533a2:	4342      	muls	r2, r0
100533a4:	2101      	movs	r1, #1
100533a6:	a801      	add	r0, sp, #4
100533a8:	3244      	adds	r2, #68	; 0x44
100533aa:	f000 f836 	bl	1005341a <Mem_assign>
100533ae:	6821      	ldr	r1, [r4, #0]
100533b0:	1989      	adds	r1, r1, r6
100533b2:	63c8      	str	r0, [r1, #60]	; 0x3c
100533b4:	9a02      	ldr	r2, [sp, #8]
100533b6:	20d8      	movs	r0, #216	; 0xd8
100533b8:	4342      	muls	r2, r0
100533ba:	2101      	movs	r1, #1
100533bc:	a801      	add	r0, sp, #4
100533be:	322c      	adds	r2, #44	; 0x2c
100533c0:	f000 f82b 	bl	1005341a <Mem_assign>
100533c4:	6821      	ldr	r1, [r4, #0]
100533c6:	22f0      	movs	r2, #240	; 0xf0
100533c8:	1989      	adds	r1, r1, r6
100533ca:	6408      	str	r0, [r1, #64]	; 0x40
100533cc:	2101      	movs	r1, #1
100533ce:	a801      	add	r0, sp, #4
100533d0:	f000 f823 	bl	1005341a <Mem_assign>
100533d4:	4c0f      	ldr	r4, [pc, #60]	; (10053414 <Dynamic_allocator+0x260>)
100533d6:	227c      	movs	r2, #124	; 0x7c
100533d8:	6020      	str	r0, [r4, #0]
100533da:	7fa9      	ldrb	r1, [r5, #30]
100533dc:	a801      	add	r0, sp, #4
100533de:	f000 f81c 	bl	1005341a <Mem_assign>
100533e2:	6821      	ldr	r1, [r4, #0]
100533e4:	2208      	movs	r2, #8
100533e6:	67c8      	str	r0, [r1, #124]	; 0x7c
100533e8:	2103      	movs	r1, #3
100533ea:	a801      	add	r0, sp, #4
100533ec:	f000 f815 	bl	1005341a <Mem_assign>
100533f0:	6821      	ldr	r1, [r4, #0]
100533f2:	2228      	movs	r2, #40	; 0x28
100533f4:	3180      	adds	r1, #128	; 0x80
100533f6:	6008      	str	r0, [r1, #0]
100533f8:	2101      	movs	r1, #1
100533fa:	a801      	add	r0, sp, #4
100533fc:	f000 f80d 	bl	1005341a <Mem_assign>
10053400:	6821      	ldr	r1, [r4, #0]
10053402:	3180      	adds	r1, #128	; 0x80
10053404:	6048      	str	r0, [r1, #4]
10053406:	9801      	ldr	r0, [sp, #4]
10053408:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005340a:	0000      	.short	0x0000
1005340c:	20000d64 	.word	0x20000d64
10053410:	200002dc 	.word	0x200002dc
10053414:	20000d6c 	.word	0x20000d6c

10053418 <Dynamic_allocator_noRet>:
10053418:	4770      	bx	lr

1005341a <Mem_assign>:
1005341a:	b510      	push	{r4, lr}
1005341c:	4603      	mov	r3, r0
1005341e:	6800      	ldr	r0, [r0, #0]
10053420:	2403      	movs	r4, #3
10053422:	1e40      	subs	r0, r0, #1
10053424:	4320      	orrs	r0, r4
10053426:	4351      	muls	r1, r2
10053428:	1c40      	adds	r0, r0, #1
1005342a:	1841      	adds	r1, r0, r1
1005342c:	6019      	str	r1, [r3, #0]
1005342e:	bd10      	pop	{r4, pc}

10053430 <mem_alloc_ctx_init>:
10053430:	b5f0      	push	{r4, r5, r6, r7, lr}
10053432:	4827      	ldr	r0, [pc, #156]	; (100534d0 <mem_alloc_ctx_init+0xa0>)
10053434:	2109      	movs	r1, #9
10053436:	6803      	ldr	r3, [r0, #0]
10053438:	0209      	lsls	r1, r1, #8
1005343a:	185c      	adds	r4, r3, r1
1005343c:	6d60      	ldr	r0, [r4, #84]	; 0x54
1005343e:	2211      	movs	r2, #17
10053440:	01d2      	lsls	r2, r2, #7
10053442:	4605      	mov	r5, r0
10053444:	189a      	adds	r2, r3, r2
10053446:	350c      	adds	r5, #12
10053448:	6455      	str	r5, [r2, #68]	; 0x44
1005344a:	6410      	str	r0, [r2, #64]	; 0x40
1005344c:	350c      	adds	r5, #12
1005344e:	6495      	str	r5, [r2, #72]	; 0x48
10053450:	350c      	adds	r5, #12
10053452:	64d5      	str	r5, [r2, #76]	; 0x4c
10053454:	350c      	adds	r5, #12
10053456:	6515      	str	r5, [r2, #80]	; 0x50
10053458:	350c      	adds	r5, #12
1005345a:	6555      	str	r5, [r2, #84]	; 0x54
1005345c:	350c      	adds	r5, #12
1005345e:	6595      	str	r5, [r2, #88]	; 0x58
10053460:	4602      	mov	r2, r0
10053462:	3254      	adds	r2, #84	; 0x54
10053464:	6062      	str	r2, [r4, #4]
10053466:	320c      	adds	r2, #12
10053468:	60a2      	str	r2, [r4, #8]
1005346a:	320c      	adds	r2, #12
1005346c:	60e2      	str	r2, [r4, #12]
1005346e:	3078      	adds	r0, #120	; 0x78
10053470:	6120      	str	r0, [r4, #16]
10053472:	2000      	movs	r0, #0
10053474:	4a17      	ldr	r2, [pc, #92]	; (100534d4 <mem_alloc_ctx_init+0xa4>)
10053476:	185c      	adds	r4, r3, r1
10053478:	e011      	b.n	1005349e <mem_alloc_ctx_init+0x6e>
1005347a:	6c63      	ldr	r3, [r4, #68]	; 0x44
1005347c:	0145      	lsls	r5, r0, #5
1005347e:	195e      	adds	r6, r3, r5
10053480:	2358      	movs	r3, #88	; 0x58
10053482:	4343      	muls	r3, r0
10053484:	461d      	mov	r5, r3
10053486:	6b27      	ldr	r7, [r4, #48]	; 0x30
10053488:	3334      	adds	r3, #52	; 0x34
1005348a:	50fe      	str	r6, [r7, r3]
1005348c:	230c      	movs	r3, #12
1005348e:	4343      	muls	r3, r0
10053490:	6d66      	ldr	r6, [r4, #84]	; 0x54
10053492:	3384      	adds	r3, #132	; 0x84
10053494:	18f3      	adds	r3, r6, r3
10053496:	3528      	adds	r5, #40	; 0x28
10053498:	6b26      	ldr	r6, [r4, #48]	; 0x30
1005349a:	1c40      	adds	r0, r0, #1
1005349c:	5173      	str	r3, [r6, r5]
1005349e:	7f93      	ldrb	r3, [r2, #30]
100534a0:	4283      	cmp	r3, r0
100534a2:	d8ea      	bhi.n	1005347a <mem_alloc_ctx_init+0x4a>
100534a4:	4b0a      	ldr	r3, [pc, #40]	; (100534d0 <mem_alloc_ctx_init+0xa0>)
100534a6:	2000      	movs	r0, #0
100534a8:	681c      	ldr	r4, [r3, #0]
100534aa:	1864      	adds	r4, r4, r1
100534ac:	e007      	b.n	100534be <mem_alloc_ctx_init+0x8e>
100534ae:	6ca5      	ldr	r5, [r4, #72]	; 0x48
100534b0:	0106      	lsls	r6, r0, #4
100534b2:	19ae      	adds	r6, r5, r6
100534b4:	0145      	lsls	r5, r0, #5
100534b6:	3508      	adds	r5, #8
100534b8:	6b67      	ldr	r7, [r4, #52]	; 0x34
100534ba:	1c40      	adds	r0, r0, #1
100534bc:	517e      	str	r6, [r7, r5]
100534be:	7f95      	ldrb	r5, [r2, #30]
100534c0:	4285      	cmp	r5, r0
100534c2:	d8f4      	bhi.n	100534ae <mem_alloc_ctx_init+0x7e>
100534c4:	68d0      	ldr	r0, [r2, #12]
100534c6:	681a      	ldr	r2, [r3, #0]
100534c8:	1851      	adds	r1, r2, r1
100534ca:	6608      	str	r0, [r1, #96]	; 0x60
100534cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
100534ce:	0000      	.short	0x0000
100534d0:	20000d64 	.word	0x20000d64
100534d4:	200002dc 	.word	0x200002dc

100534d8 <Mem_Buff_Append>:
100534d8:	6802      	ldr	r2, [r0, #0]
100534da:	2a00      	cmp	r2, #0
100534dc:	d003      	beq.n	100534e6 <Mem_Buff_Append+0xe>
100534de:	4610      	mov	r0, r2
100534e0:	6812      	ldr	r2, [r2, #0]
100534e2:	2a00      	cmp	r2, #0
100534e4:	d1fb      	bne.n	100534de <Mem_Buff_Append+0x6>
100534e6:	6001      	str	r1, [r0, #0]
100534e8:	4770      	bx	lr

100534ea <Mem_Buff_Block_Copy>:
100534ea:	b570      	push	{r4, r5, r6, lr}
100534ec:	460c      	mov	r4, r1
100534ee:	211f      	movs	r1, #31
100534f0:	1e52      	subs	r2, r2, #1
100534f2:	430a      	orrs	r2, r1
100534f4:	4605      	mov	r5, r0
100534f6:	1c52      	adds	r2, r2, #1
100534f8:	2000      	movs	r0, #0
100534fa:	0411      	lsls	r1, r2, #16
100534fc:	0d4e      	lsrs	r6, r1, #21
100534fe:	d017      	beq.n	10053530 <Mem_Buff_Block_Copy+0x46>
10053500:	4621      	mov	r1, r4
10053502:	3108      	adds	r1, #8
10053504:	1a6a      	subs	r2, r5, r1
10053506:	4628      	mov	r0, r5
10053508:	2a00      	cmp	r2, #0
1005350a:	dd01      	ble.n	10053510 <Mem_Buff_Block_Copy+0x26>
1005350c:	2a08      	cmp	r2, #8
1005350e:	db03      	blt.n	10053518 <Mem_Buff_Block_Copy+0x2e>
10053510:	2220      	movs	r2, #32
10053512:	f7f3 f92e 	bl	10046772 <__aeabi_memmove>
10053516:	e004      	b.n	10053522 <Mem_Buff_Block_Copy+0x38>
10053518:	2208      	movs	r2, #8
1005351a:	c908      	ldmia	r1!, {r3}
1005351c:	1e52      	subs	r2, r2, #1
1005351e:	c008      	stmia	r0!, {r3}
10053520:	d1fb      	bne.n	1005351a <Mem_Buff_Block_Copy+0x30>
10053522:	3520      	adds	r5, #32
10053524:	4620      	mov	r0, r4
10053526:	1e76      	subs	r6, r6, #1
10053528:	6824      	ldr	r4, [r4, #0]
1005352a:	0436      	lsls	r6, r6, #16
1005352c:	0c36      	lsrs	r6, r6, #16
1005352e:	d1e7      	bne.n	10053500 <Mem_Buff_Block_Copy+0x16>
10053530:	bd70      	pop	{r4, r5, r6, pc}

10053532 <Mem_Buff_Block_Write>:
10053532:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10053534:	4604      	mov	r4, r0
10053536:	460d      	mov	r5, r1
10053538:	1e50      	subs	r0, r2, #1
1005353a:	211f      	movs	r1, #31
1005353c:	4308      	orrs	r0, r1
1005353e:	1c40      	adds	r0, r0, #1
10053540:	0400      	lsls	r0, r0, #16
10053542:	4616      	mov	r6, r2
10053544:	0d47      	lsrs	r7, r0, #21
10053546:	d01e      	beq.n	10053586 <Mem_Buff_Block_Write+0x54>
10053548:	4620      	mov	r0, r4
1005354a:	3008      	adds	r0, #8
1005354c:	4629      	mov	r1, r5
1005354e:	1a42      	subs	r2, r0, r1
10053550:	2a00      	cmp	r2, #0
10053552:	dd01      	ble.n	10053558 <Mem_Buff_Block_Write+0x26>
10053554:	2a08      	cmp	r2, #8
10053556:	db03      	blt.n	10053560 <Mem_Buff_Block_Write+0x2e>
10053558:	2220      	movs	r2, #32
1005355a:	f7f3 f90a 	bl	10046772 <__aeabi_memmove>
1005355e:	e004      	b.n	1005356a <Mem_Buff_Block_Write+0x38>
10053560:	2208      	movs	r2, #8
10053562:	c908      	ldmia	r1!, {r3}
10053564:	1e52      	subs	r2, r2, #1
10053566:	c008      	stmia	r0!, {r3}
10053568:	d1fb      	bne.n	10053562 <Mem_Buff_Block_Write+0x30>
1005356a:	3520      	adds	r5, #32
1005356c:	2e20      	cmp	r6, #32
1005356e:	d201      	bcs.n	10053574 <Mem_Buff_Block_Write+0x42>
10053570:	4630      	mov	r0, r6
10053572:	e000      	b.n	10053576 <Mem_Buff_Block_Write+0x44>
10053574:	2020      	movs	r0, #32
10053576:	80a0      	strh	r0, [r4, #4]
10053578:	1a30      	subs	r0, r6, r0
1005357a:	1e7f      	subs	r7, r7, #1
1005357c:	6824      	ldr	r4, [r4, #0]
1005357e:	043f      	lsls	r7, r7, #16
10053580:	b286      	uxth	r6, r0
10053582:	0c3f      	lsrs	r7, r7, #16
10053584:	d1e0      	bne.n	10053548 <Mem_Buff_Block_Write+0x16>
10053586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10053588 <Mem_Buff_Clone>:
10053588:	b570      	push	{r4, r5, r6, lr}
1005358a:	460c      	mov	r4, r1
1005358c:	4605      	mov	r5, r0
1005358e:	e00a      	b.n	100535a6 <Mem_Buff_Clone+0x1e>
10053590:	4621      	mov	r1, r4
10053592:	4628      	mov	r0, r5
10053594:	88a2      	ldrh	r2, [r4, #4]
10053596:	3108      	adds	r1, #8
10053598:	3008      	adds	r0, #8
1005359a:	f7ed f8f2 	bl	10040782 <Osal_MemCpy>
1005359e:	88a0      	ldrh	r0, [r4, #4]
100535a0:	80a8      	strh	r0, [r5, #4]
100535a2:	682d      	ldr	r5, [r5, #0]
100535a4:	6824      	ldr	r4, [r4, #0]
100535a6:	2d00      	cmp	r5, #0
100535a8:	d001      	beq.n	100535ae <Mem_Buff_Clone+0x26>
100535aa:	2c00      	cmp	r4, #0
100535ac:	d1f0      	bne.n	10053590 <Mem_Buff_Clone+0x8>
100535ae:	4325      	orrs	r5, r4
100535b0:	d001      	beq.n	100535b6 <Mem_Buff_Clone+0x2e>
100535b2:	2047      	movs	r0, #71	; 0x47
100535b4:	bd70      	pop	{r4, r5, r6, pc}
100535b6:	2000      	movs	r0, #0
100535b8:	bd70      	pop	{r4, r5, r6, pc}

100535ba <Mem_Buff_Cmp>:
100535ba:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100535bc:	b081      	sub	sp, #4
100535be:	461d      	mov	r5, r3
100535c0:	4669      	mov	r1, sp
100535c2:	2a00      	cmp	r2, #0
100535c4:	d009      	beq.n	100535da <Mem_Buff_Cmp+0x20>
100535c6:	2800      	cmp	r0, #0
100535c8:	d00c      	beq.n	100535e4 <Mem_Buff_Cmp+0x2a>
100535ca:	8884      	ldrh	r4, [r0, #4]
100535cc:	4294      	cmp	r4, r2
100535ce:	d804      	bhi.n	100535da <Mem_Buff_Cmp+0x20>
100535d0:	1b12      	subs	r2, r2, r4
100535d2:	0412      	lsls	r2, r2, #16
100535d4:	6800      	ldr	r0, [r0, #0]
100535d6:	0c12      	lsrs	r2, r2, #16
100535d8:	d1f5      	bne.n	100535c6 <Mem_Buff_Cmp+0xc>
100535da:	800a      	strh	r2, [r1, #0]
100535dc:	0004      	movs	r4, r0
100535de:	d001      	beq.n	100535e4 <Mem_Buff_Cmp+0x2a>
100535e0:	2600      	movs	r6, #0
100535e2:	e01f      	b.n	10053624 <Mem_Buff_Cmp+0x6a>
100535e4:	4618      	mov	r0, r3
100535e6:	b005      	add	sp, #20
100535e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100535ea:	4668      	mov	r0, sp
100535ec:	88a1      	ldrh	r1, [r4, #4]
100535ee:	8800      	ldrh	r0, [r0, #0]
100535f0:	4281      	cmp	r1, r0
100535f2:	d913      	bls.n	1005361c <Mem_Buff_Cmp+0x62>
100535f4:	1a09      	subs	r1, r1, r0
100535f6:	b28f      	uxth	r7, r1
100535f8:	42af      	cmp	r7, r5
100535fa:	d300      	bcc.n	100535fe <Mem_Buff_Cmp+0x44>
100535fc:	462f      	mov	r7, r5
100535fe:	9902      	ldr	r1, [sp, #8]
10053600:	1820      	adds	r0, r4, r0
10053602:	1989      	adds	r1, r1, r6
10053604:	463a      	mov	r2, r7
10053606:	3008      	adds	r0, #8
10053608:	f7ed f8c3 	bl	10040792 <Osal_MemCmp>
1005360c:	2800      	cmp	r0, #0
1005360e:	d1ea      	bne.n	100535e6 <Mem_Buff_Cmp+0x2c>
10053610:	19f0      	adds	r0, r6, r7
10053612:	b286      	uxth	r6, r0
10053614:	2000      	movs	r0, #0
10053616:	4669      	mov	r1, sp
10053618:	8008      	strh	r0, [r1, #0]
1005361a:	e002      	b.n	10053622 <Mem_Buff_Cmp+0x68>
1005361c:	1a40      	subs	r0, r0, r1
1005361e:	4669      	mov	r1, sp
10053620:	8008      	strh	r0, [r1, #0]
10053622:	6824      	ldr	r4, [r4, #0]
10053624:	42b5      	cmp	r5, r6
10053626:	d901      	bls.n	1005362c <Mem_Buff_Cmp+0x72>
10053628:	2c00      	cmp	r4, #0
1005362a:	d1de      	bne.n	100535ea <Mem_Buff_Cmp+0x30>
1005362c:	1ba8      	subs	r0, r5, r6
1005362e:	b005      	add	sp, #20
10053630:	bdf0      	pop	{r4, r5, r6, r7, pc}

10053632 <Mem_Buff_Compact>:
10053632:	2900      	cmp	r1, #0
10053634:	d059      	beq.n	100536ea <Mem_Buff_Compact+0xb8>
10053636:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
10053638:	b08f      	sub	sp, #60	; 0x3c
1005363a:	460c      	mov	r4, r1
1005363c:	88a0      	ldrh	r0, [r4, #4]
1005363e:	2820      	cmp	r0, #32
10053640:	d013      	beq.n	1005366a <Mem_Buff_Compact+0x38>
10053642:	2c00      	cmp	r4, #0
10053644:	d014      	beq.n	10053670 <Mem_Buff_Compact+0x3e>
10053646:	9402      	str	r4, [sp, #8]
10053648:	9802      	ldr	r0, [sp, #8]
1005364a:	6800      	ldr	r0, [r0, #0]
1005364c:	9002      	str	r0, [sp, #8]
1005364e:	2800      	cmp	r0, #0
10053650:	d02e      	beq.n	100536b0 <Mem_Buff_Compact+0x7e>
10053652:	8886      	ldrh	r6, [r0, #4]
10053654:	4601      	mov	r1, r0
10053656:	4632      	mov	r2, r6
10053658:	3108      	adds	r1, #8
1005365a:	a806      	add	r0, sp, #24
1005365c:	f7ed f891 	bl	10040782 <Osal_MemCpy>
10053660:	2700      	movs	r7, #0
10053662:	88a0      	ldrh	r0, [r4, #4]
10053664:	2820      	cmp	r0, #32
10053666:	d005      	beq.n	10053674 <Mem_Buff_Compact+0x42>
10053668:	e007      	b.n	1005367a <Mem_Buff_Compact+0x48>
1005366a:	6824      	ldr	r4, [r4, #0]
1005366c:	2c00      	cmp	r4, #0
1005366e:	d1e5      	bne.n	1005363c <Mem_Buff_Compact+0xa>
10053670:	b011      	add	sp, #68	; 0x44
10053672:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053674:	6824      	ldr	r4, [r4, #0]
10053676:	2000      	movs	r0, #0
10053678:	80a0      	strh	r0, [r4, #4]
1005367a:	2e00      	cmp	r6, #0
1005367c:	d0e4      	beq.n	10053648 <Mem_Buff_Compact+0x16>
1005367e:	b280      	uxth	r0, r0
10053680:	2120      	movs	r1, #32
10053682:	1a09      	subs	r1, r1, r0
10053684:	b28d      	uxth	r5, r1
10053686:	42ae      	cmp	r6, r5
10053688:	d200      	bcs.n	1005368c <Mem_Buff_Compact+0x5a>
1005368a:	4635      	mov	r5, r6
1005368c:	4622      	mov	r2, r4
1005368e:	3208      	adds	r2, #8
10053690:	a906      	add	r1, sp, #24
10053692:	1880      	adds	r0, r0, r2
10053694:	19c9      	adds	r1, r1, r7
10053696:	462a      	mov	r2, r5
10053698:	f7ed f873 	bl	10040782 <Osal_MemCpy>
1005369c:	1b70      	subs	r0, r6, r5
1005369e:	b286      	uxth	r6, r0
100536a0:	1978      	adds	r0, r7, r5
100536a2:	b287      	uxth	r7, r0
100536a4:	88a0      	ldrh	r0, [r4, #4]
100536a6:	1940      	adds	r0, r0, r5
100536a8:	80a0      	strh	r0, [r4, #4]
100536aa:	2e00      	cmp	r6, #0
100536ac:	d1d9      	bne.n	10053662 <Mem_Buff_Compact+0x30>
100536ae:	e7cb      	b.n	10053648 <Mem_Buff_Compact+0x16>
100536b0:	6820      	ldr	r0, [r4, #0]
100536b2:	2800      	cmp	r0, #0
100536b4:	d0dc      	beq.n	10053670 <Mem_Buff_Compact+0x3e>
100536b6:	2100      	movs	r1, #0
100536b8:	6021      	str	r1, [r4, #0]
100536ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
100536bc:	b672      	cpsid	i
100536be:	780a      	ldrb	r2, [r1, #0]
100536c0:	2a00      	cmp	r2, #0
100536c2:	d003      	beq.n	100536cc <Mem_Buff_Compact+0x9a>
100536c4:	684b      	ldr	r3, [r1, #4]
100536c6:	0092      	lsls	r2, r2, #2
100536c8:	589a      	ldr	r2, [r3, r2]
100536ca:	6010      	str	r0, [r2, #0]
100536cc:	2300      	movs	r3, #0
100536ce:	8083      	strh	r3, [r0, #4]
100536d0:	780a      	ldrb	r2, [r1, #0]
100536d2:	1c52      	adds	r2, r2, #1
100536d4:	b2d2      	uxtb	r2, r2
100536d6:	700a      	strb	r2, [r1, #0]
100536d8:	684c      	ldr	r4, [r1, #4]
100536da:	0092      	lsls	r2, r2, #2
100536dc:	50a0      	str	r0, [r4, r2]
100536de:	6800      	ldr	r0, [r0, #0]
100536e0:	2800      	cmp	r0, #0
100536e2:	d1f4      	bne.n	100536ce <Mem_Buff_Compact+0x9c>
100536e4:	b662      	cpsie	i
100536e6:	b011      	add	sp, #68	; 0x44
100536e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100536ea:	4770      	bx	lr

100536ec <Mem_Buff_Get>:
100536ec:	1e49      	subs	r1, r1, #1
100536ee:	04c9      	lsls	r1, r1, #19
100536f0:	0e09      	lsrs	r1, r1, #24
100536f2:	b672      	cpsid	i
100536f4:	7802      	ldrb	r2, [r0, #0]
100536f6:	428a      	cmp	r2, r1
100536f8:	d90c      	bls.n	10053714 <Mem_Buff_Get+0x28>
100536fa:	1a51      	subs	r1, r2, r1
100536fc:	b2c9      	uxtb	r1, r1
100536fe:	1e4a      	subs	r2, r1, #1
10053700:	b2d3      	uxtb	r3, r2
10053702:	7003      	strb	r3, [r0, #0]
10053704:	6842      	ldr	r2, [r0, #4]
10053706:	0088      	lsls	r0, r1, #2
10053708:	5810      	ldr	r0, [r2, r0]
1005370a:	0099      	lsls	r1, r3, #2
1005370c:	5852      	ldr	r2, [r2, r1]
1005370e:	2100      	movs	r1, #0
10053710:	6011      	str	r1, [r2, #0]
10053712:	e000      	b.n	10053716 <Mem_Buff_Get+0x2a>
10053714:	2000      	movs	r0, #0
10053716:	b662      	cpsie	i
10053718:	4770      	bx	lr

1005371a <Mem_Buff_Get_Chain_Count>:
1005371a:	2100      	movs	r1, #0
1005371c:	2800      	cmp	r0, #0
1005371e:	d004      	beq.n	1005372a <Mem_Buff_Get_Chain_Count+0x10>
10053720:	1c49      	adds	r1, r1, #1
10053722:	6800      	ldr	r0, [r0, #0]
10053724:	b2c9      	uxtb	r1, r1
10053726:	2800      	cmp	r0, #0
10053728:	d1fa      	bne.n	10053720 <Mem_Buff_Get_Chain_Count+0x6>
1005372a:	4608      	mov	r0, r1
1005372c:	4770      	bx	lr

1005372e <Mem_Buff_Get_Chain_Size>:
1005372e:	2100      	movs	r1, #0
10053730:	2800      	cmp	r0, #0
10053732:	d004      	beq.n	1005373e <Mem_Buff_Get_Chain_Size+0x10>
10053734:	1c49      	adds	r1, r1, #1
10053736:	6800      	ldr	r0, [r0, #0]
10053738:	b2c9      	uxtb	r1, r1
1005373a:	2800      	cmp	r0, #0
1005373c:	d1fa      	bne.n	10053734 <Mem_Buff_Get_Chain_Size+0x6>
1005373e:	0148      	lsls	r0, r1, #5
10053740:	4770      	bx	lr

10053742 <Mem_Buff_Init>:
10053742:	b470      	push	{r4, r5, r6}
10053744:	7841      	ldrb	r1, [r0, #1]
10053746:	2900      	cmp	r1, #0
10053748:	d02d      	beq.n	100537a6 <Mem_Buff_Init+0x64>
1005374a:	6886      	ldr	r6, [r0, #8]
1005374c:	2e00      	cmp	r6, #0
1005374e:	d02a      	beq.n	100537a6 <Mem_Buff_Init+0x64>
10053750:	2500      	movs	r5, #0
10053752:	7005      	strb	r5, [r0, #0]
10053754:	6841      	ldr	r1, [r0, #4]
10053756:	462a      	mov	r2, r5
10053758:	600d      	str	r5, [r1, #0]
1005375a:	7841      	ldrb	r1, [r0, #1]
1005375c:	2900      	cmp	r1, #0
1005375e:	d91f      	bls.n	100537a0 <Mem_Buff_Init+0x5e>
10053760:	2128      	movs	r1, #40	; 0x28
10053762:	4351      	muls	r1, r2
10053764:	1989      	adds	r1, r1, r6
10053766:	2300      	movs	r3, #0
10053768:	600b      	str	r3, [r1, #0]
1005376a:	2900      	cmp	r1, #0
1005376c:	d013      	beq.n	10053796 <Mem_Buff_Init+0x54>
1005376e:	b672      	cpsid	i
10053770:	7803      	ldrb	r3, [r0, #0]
10053772:	2b00      	cmp	r3, #0
10053774:	d003      	beq.n	1005377e <Mem_Buff_Init+0x3c>
10053776:	6844      	ldr	r4, [r0, #4]
10053778:	009b      	lsls	r3, r3, #2
1005377a:	58e3      	ldr	r3, [r4, r3]
1005377c:	6019      	str	r1, [r3, #0]
1005377e:	808d      	strh	r5, [r1, #4]
10053780:	7803      	ldrb	r3, [r0, #0]
10053782:	1c5b      	adds	r3, r3, #1
10053784:	b2db      	uxtb	r3, r3
10053786:	7003      	strb	r3, [r0, #0]
10053788:	6844      	ldr	r4, [r0, #4]
1005378a:	009b      	lsls	r3, r3, #2
1005378c:	50e1      	str	r1, [r4, r3]
1005378e:	6809      	ldr	r1, [r1, #0]
10053790:	2900      	cmp	r1, #0
10053792:	d1f4      	bne.n	1005377e <Mem_Buff_Init+0x3c>
10053794:	b662      	cpsie	i
10053796:	1c52      	adds	r2, r2, #1
10053798:	7841      	ldrb	r1, [r0, #1]
1005379a:	b2d2      	uxtb	r2, r2
1005379c:	4291      	cmp	r1, r2
1005379e:	d8df      	bhi.n	10053760 <Mem_Buff_Init+0x1e>
100537a0:	bc70      	pop	{r4, r5, r6}
100537a2:	2000      	movs	r0, #0
100537a4:	4770      	bx	lr
100537a6:	bc70      	pop	{r4, r5, r6}
100537a8:	2047      	movs	r0, #71	; 0x47
100537aa:	4770      	bx	lr

100537ac <Mem_Buff_Read>:
100537ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100537ae:	461d      	mov	r5, r3
100537b0:	460e      	mov	r6, r1
100537b2:	466b      	mov	r3, sp
100537b4:	2a00      	cmp	r2, #0
100537b6:	d009      	beq.n	100537cc <Mem_Buff_Read+0x20>
100537b8:	2800      	cmp	r0, #0
100537ba:	d024      	beq.n	10053806 <Mem_Buff_Read+0x5a>
100537bc:	8884      	ldrh	r4, [r0, #4]
100537be:	4294      	cmp	r4, r2
100537c0:	d804      	bhi.n	100537cc <Mem_Buff_Read+0x20>
100537c2:	1b12      	subs	r2, r2, r4
100537c4:	0412      	lsls	r2, r2, #16
100537c6:	6800      	ldr	r0, [r0, #0]
100537c8:	0c12      	lsrs	r2, r2, #16
100537ca:	d1f5      	bne.n	100537b8 <Mem_Buff_Read+0xc>
100537cc:	801a      	strh	r2, [r3, #0]
100537ce:	0004      	movs	r4, r0
100537d0:	d019      	beq.n	10053806 <Mem_Buff_Read+0x5a>
100537d2:	e014      	b.n	100537fe <Mem_Buff_Read+0x52>
100537d4:	4668      	mov	r0, sp
100537d6:	88a1      	ldrh	r1, [r4, #4]
100537d8:	8800      	ldrh	r0, [r0, #0]
100537da:	1a09      	subs	r1, r1, r0
100537dc:	b28f      	uxth	r7, r1
100537de:	42af      	cmp	r7, r5
100537e0:	d300      	bcc.n	100537e4 <Mem_Buff_Read+0x38>
100537e2:	462f      	mov	r7, r5
100537e4:	1821      	adds	r1, r4, r0
100537e6:	463a      	mov	r2, r7
100537e8:	4630      	mov	r0, r6
100537ea:	3108      	adds	r1, #8
100537ec:	f7ec ffc9 	bl	10040782 <Osal_MemCpy>
100537f0:	19f6      	adds	r6, r6, r7
100537f2:	1be8      	subs	r0, r5, r7
100537f4:	b285      	uxth	r5, r0
100537f6:	6824      	ldr	r4, [r4, #0]
100537f8:	2000      	movs	r0, #0
100537fa:	4669      	mov	r1, sp
100537fc:	8008      	strh	r0, [r1, #0]
100537fe:	2d00      	cmp	r5, #0
10053800:	d003      	beq.n	1005380a <Mem_Buff_Read+0x5e>
10053802:	2c00      	cmp	r4, #0
10053804:	d1e6      	bne.n	100537d4 <Mem_Buff_Read+0x28>
10053806:	2041      	movs	r0, #65	; 0x41
10053808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005380a:	2000      	movs	r0, #0
1005380c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005380e <Mem_Buff_Release>:
1005380e:	2900      	cmp	r1, #0
10053810:	d017      	beq.n	10053842 <Mem_Buff_Release+0x34>
10053812:	b672      	cpsid	i
10053814:	7802      	ldrb	r2, [r0, #0]
10053816:	2a00      	cmp	r2, #0
10053818:	d003      	beq.n	10053822 <Mem_Buff_Release+0x14>
1005381a:	6843      	ldr	r3, [r0, #4]
1005381c:	0092      	lsls	r2, r2, #2
1005381e:	589a      	ldr	r2, [r3, r2]
10053820:	6011      	str	r1, [r2, #0]
10053822:	b410      	push	{r4}
10053824:	2300      	movs	r3, #0
10053826:	808b      	strh	r3, [r1, #4]
10053828:	7802      	ldrb	r2, [r0, #0]
1005382a:	1c52      	adds	r2, r2, #1
1005382c:	b2d2      	uxtb	r2, r2
1005382e:	7002      	strb	r2, [r0, #0]
10053830:	6844      	ldr	r4, [r0, #4]
10053832:	0092      	lsls	r2, r2, #2
10053834:	50a1      	str	r1, [r4, r2]
10053836:	6809      	ldr	r1, [r1, #0]
10053838:	2900      	cmp	r1, #0
1005383a:	d1f4      	bne.n	10053826 <Mem_Buff_Release+0x18>
1005383c:	b662      	cpsie	i
1005383e:	bc10      	pop	{r4}
10053840:	4770      	bx	lr
10053842:	4770      	bx	lr

10053844 <Mem_Buff_Resize>:
10053844:	b430      	push	{r4, r5}
10053846:	2400      	movs	r4, #0
10053848:	1e0b      	subs	r3, r1, #0
1005384a:	d022      	beq.n	10053892 <Mem_Buff_Resize+0x4e>
1005384c:	3420      	adds	r4, #32
1005384e:	b2a4      	uxth	r4, r4
10053850:	4294      	cmp	r4, r2
10053852:	d31a      	bcc.n	1005388a <Mem_Buff_Resize+0x46>
10053854:	680a      	ldr	r2, [r1, #0]
10053856:	2a00      	cmp	r2, #0
10053858:	d035      	beq.n	100538c6 <Mem_Buff_Resize+0x82>
1005385a:	b672      	cpsid	i
1005385c:	7803      	ldrb	r3, [r0, #0]
1005385e:	2b00      	cmp	r3, #0
10053860:	d003      	beq.n	1005386a <Mem_Buff_Resize+0x26>
10053862:	6844      	ldr	r4, [r0, #4]
10053864:	009b      	lsls	r3, r3, #2
10053866:	58e3      	ldr	r3, [r4, r3]
10053868:	601a      	str	r2, [r3, #0]
1005386a:	2400      	movs	r4, #0
1005386c:	8094      	strh	r4, [r2, #4]
1005386e:	7803      	ldrb	r3, [r0, #0]
10053870:	1c5b      	adds	r3, r3, #1
10053872:	b2db      	uxtb	r3, r3
10053874:	7003      	strb	r3, [r0, #0]
10053876:	6845      	ldr	r5, [r0, #4]
10053878:	009b      	lsls	r3, r3, #2
1005387a:	50ea      	str	r2, [r5, r3]
1005387c:	6812      	ldr	r2, [r2, #0]
1005387e:	2a00      	cmp	r2, #0
10053880:	d1f4      	bne.n	1005386c <Mem_Buff_Resize+0x28>
10053882:	b662      	cpsie	i
10053884:	2000      	movs	r0, #0
10053886:	6008      	str	r0, [r1, #0]
10053888:	e01d      	b.n	100538c6 <Mem_Buff_Resize+0x82>
1005388a:	460b      	mov	r3, r1
1005388c:	6809      	ldr	r1, [r1, #0]
1005388e:	2900      	cmp	r1, #0
10053890:	d1dc      	bne.n	1005384c <Mem_Buff_Resize+0x8>
10053892:	1b11      	subs	r1, r2, r4
10053894:	1e49      	subs	r1, r1, #1
10053896:	04c9      	lsls	r1, r1, #19
10053898:	0e0a      	lsrs	r2, r1, #24
1005389a:	b672      	cpsid	i
1005389c:	7801      	ldrb	r1, [r0, #0]
1005389e:	4291      	cmp	r1, r2
100538a0:	d90c      	bls.n	100538bc <Mem_Buff_Resize+0x78>
100538a2:	1a89      	subs	r1, r1, r2
100538a4:	b2c9      	uxtb	r1, r1
100538a6:	1e4a      	subs	r2, r1, #1
100538a8:	b2d2      	uxtb	r2, r2
100538aa:	7002      	strb	r2, [r0, #0]
100538ac:	6840      	ldr	r0, [r0, #4]
100538ae:	0089      	lsls	r1, r1, #2
100538b0:	0092      	lsls	r2, r2, #2
100538b2:	5841      	ldr	r1, [r0, r1]
100538b4:	5882      	ldr	r2, [r0, r2]
100538b6:	2000      	movs	r0, #0
100538b8:	6010      	str	r0, [r2, #0]
100538ba:	e000      	b.n	100538be <Mem_Buff_Resize+0x7a>
100538bc:	2100      	movs	r1, #0
100538be:	b662      	cpsie	i
100538c0:	6019      	str	r1, [r3, #0]
100538c2:	2900      	cmp	r1, #0
100538c4:	d002      	beq.n	100538cc <Mem_Buff_Resize+0x88>
100538c6:	bc30      	pop	{r4, r5}
100538c8:	2000      	movs	r0, #0
100538ca:	4770      	bx	lr
100538cc:	bc30      	pop	{r4, r5}
100538ce:	2047      	movs	r0, #71	; 0x47
100538d0:	4770      	bx	lr

100538d2 <Mem_Buff_Write>:
100538d2:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100538d4:	4604      	mov	r4, r0
100538d6:	0950      	lsrs	r0, r2, #5
100538d8:	0600      	lsls	r0, r0, #24
100538da:	b081      	sub	sp, #4
100538dc:	461f      	mov	r7, r3
100538de:	0e00      	lsrs	r0, r0, #24
100538e0:	d006      	beq.n	100538f0 <Mem_Buff_Write+0x1e>
100538e2:	2c00      	cmp	r4, #0
100538e4:	d023      	beq.n	1005392e <Mem_Buff_Write+0x5c>
100538e6:	1e40      	subs	r0, r0, #1
100538e8:	6824      	ldr	r4, [r4, #0]
100538ea:	0600      	lsls	r0, r0, #24
100538ec:	0e00      	lsrs	r0, r0, #24
100538ee:	d1f8      	bne.n	100538e2 <Mem_Buff_Write+0x10>
100538f0:	06d6      	lsls	r6, r2, #27
100538f2:	0ef6      	lsrs	r6, r6, #27
100538f4:	e017      	b.n	10053926 <Mem_Buff_Write+0x54>
100538f6:	2020      	movs	r0, #32
100538f8:	1b85      	subs	r5, r0, r6
100538fa:	42bd      	cmp	r5, r7
100538fc:	d300      	bcc.n	10053900 <Mem_Buff_Write+0x2e>
100538fe:	463d      	mov	r5, r7
10053900:	19a0      	adds	r0, r4, r6
10053902:	462a      	mov	r2, r5
10053904:	3008      	adds	r0, #8
10053906:	9902      	ldr	r1, [sp, #8]
10053908:	f7ec ff3b 	bl	10040782 <Osal_MemCpy>
1005390c:	9802      	ldr	r0, [sp, #8]
1005390e:	1971      	adds	r1, r6, r5
10053910:	1940      	adds	r0, r0, r5
10053912:	9002      	str	r0, [sp, #8]
10053914:	1b78      	subs	r0, r7, r5
10053916:	b287      	uxth	r7, r0
10053918:	88a0      	ldrh	r0, [r4, #4]
1005391a:	4288      	cmp	r0, r1
1005391c:	d201      	bcs.n	10053922 <Mem_Buff_Write+0x50>
1005391e:	19a8      	adds	r0, r5, r6
10053920:	80a0      	strh	r0, [r4, #4]
10053922:	6824      	ldr	r4, [r4, #0]
10053924:	2600      	movs	r6, #0
10053926:	2f00      	cmp	r7, #0
10053928:	d004      	beq.n	10053934 <Mem_Buff_Write+0x62>
1005392a:	2c00      	cmp	r4, #0
1005392c:	d1e3      	bne.n	100538f6 <Mem_Buff_Write+0x24>
1005392e:	2041      	movs	r0, #65	; 0x41
10053930:	b005      	add	sp, #20
10053932:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053934:	2000      	movs	r0, #0
10053936:	b005      	add	sp, #20
10053938:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1005393c <LL_Get_Anchor_Interval>:
1005393c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005393e:	4607      	mov	r7, r0
10053940:	4813      	ldr	r0, [pc, #76]	; (10053990 <LL_Get_Anchor_Interval+0x54>)
10053942:	460e      	mov	r6, r1
10053944:	6805      	ldr	r5, [r0, #0]
10053946:	207b      	movs	r0, #123	; 0x7b
10053948:	0100      	lsls	r0, r0, #4
1005394a:	182c      	adds	r4, r5, r0
1005394c:	3536      	adds	r5, #54	; 0x36
1005394e:	f000 fc19 	bl	10054184 <get_next_free_slot>
10053952:	f000 fd39 	bl	100543c8 <nsar_updateSlotListEntry>
10053956:	203a      	movs	r0, #58	; 0x3a
10053958:	5d00      	ldrb	r0, [r0, r4]
1005395a:	0702      	lsls	r2, r0, #28
1005395c:	2001      	movs	r0, #1
1005395e:	0f12      	lsrs	r2, r2, #28
10053960:	4601      	mov	r1, r0
10053962:	4091      	lsls	r1, r2
10053964:	782a      	ldrb	r2, [r5, #0]
10053966:	0712      	lsls	r2, r2, #28
10053968:	0f12      	lsrs	r2, r2, #28
1005396a:	4090      	lsls	r0, r2
1005396c:	4301      	orrs	r1, r0
1005396e:	7d20      	ldrb	r0, [r4, #20]
10053970:	4388      	bics	r0, r1
10053972:	d009      	beq.n	10053988 <LL_Get_Anchor_Interval+0x4c>
10053974:	6860      	ldr	r0, [r4, #4]
10053976:	0a00      	lsrs	r0, r0, #8
10053978:	6038      	str	r0, [r7, #0]
1005397a:	6860      	ldr	r0, [r4, #4]
1005397c:	f000 fcd4 	bl	10054328 <nsar_searchMaxFreeSlot>
10053980:	0a00      	lsrs	r0, r0, #8
10053982:	6030      	str	r0, [r6, #0]
10053984:	2000      	movs	r0, #0
10053986:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10053988:	2000      	movs	r0, #0
1005398a:	6030      	str	r0, [r6, #0]
1005398c:	6038      	str	r0, [r7, #0]
1005398e:	e7f9      	b.n	10053984 <LL_Get_Anchor_Interval+0x48>
10053990:	20000d64 	.word	0x20000d64

10053994 <adapt_slot>:
10053994:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10053996:	b08f      	sub	sp, #60	; 0x3c
10053998:	9e1a      	ldr	r6, [sp, #104]	; 0x68
1005399a:	980f      	ldr	r0, [sp, #60]	; 0x3c
1005399c:	f000 fd14 	bl	100543c8 <nsar_updateSlotListEntry>
100539a0:	4992      	ldr	r1, [pc, #584]	; (10053bec <adapt_slot+0x258>)
100539a2:	207b      	movs	r0, #123	; 0x7b
100539a4:	680a      	ldr	r2, [r1, #0]
100539a6:	0100      	lsls	r0, r0, #4
100539a8:	1815      	adds	r5, r2, r0
100539aa:	4610      	mov	r0, r2
100539ac:	3036      	adds	r0, #54	; 0x36
100539ae:	4684      	mov	ip, r0
100539b0:	980f      	ldr	r0, [sp, #60]	; 0x3c
100539b2:	2808      	cmp	r0, #8
100539b4:	d022      	beq.n	100539fc <adapt_slot+0x68>
100539b6:	4604      	mov	r4, r0
100539b8:	2001      	movs	r0, #1
100539ba:	4603      	mov	r3, r0
100539bc:	40a3      	lsls	r3, r4
100539be:	243a      	movs	r4, #58	; 0x3a
100539c0:	5d64      	ldrb	r4, [r4, r5]
100539c2:	0727      	lsls	r7, r4, #28
100539c4:	0f3f      	lsrs	r7, r7, #28
100539c6:	4604      	mov	r4, r0
100539c8:	40bc      	lsls	r4, r7
100539ca:	4323      	orrs	r3, r4
100539cc:	4664      	mov	r4, ip
100539ce:	7824      	ldrb	r4, [r4, #0]
100539d0:	0724      	lsls	r4, r4, #28
100539d2:	0f24      	lsrs	r4, r4, #28
100539d4:	40a0      	lsls	r0, r4
100539d6:	4303      	orrs	r3, r0
100539d8:	7d28      	ldrb	r0, [r5, #20]
100539da:	4398      	bics	r0, r3
100539dc:	d011      	beq.n	10053a02 <adapt_slot+0x6e>
100539de:	6868      	ldr	r0, [r5, #4]
100539e0:	9001      	str	r0, [sp, #4]
100539e2:	2001      	movs	r0, #1
100539e4:	2400      	movs	r4, #0
100539e6:	900c      	str	r0, [sp, #48]	; 0x30
100539e8:	6ca8      	ldr	r0, [r5, #72]	; 0x48
100539ea:	32a0      	adds	r2, #160	; 0xa0
100539ec:	9006      	str	r0, [sp, #24]
100539ee:	7b12      	ldrb	r2, [r2, #12]
100539f0:	4627      	mov	r7, r4
100539f2:	5c80      	ldrb	r0, [r0, r2]
100539f4:	46a4      	mov	ip, r4
100539f6:	4696      	mov	lr, r2
100539f8:	940d      	str	r4, [sp, #52]	; 0x34
100539fa:	e030      	b.n	10053a5e <adapt_slot+0xca>
100539fc:	2082      	movs	r0, #130	; 0x82
100539fe:	b013      	add	sp, #76	; 0x4c
10053a00:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053a02:	9811      	ldr	r0, [sp, #68]	; 0x44
10053a04:	9b18      	ldr	r3, [sp, #96]	; 0x60
10053a06:	6802      	ldr	r2, [r0, #0]
10053a08:	9812      	ldr	r0, [sp, #72]	; 0x48
10053a0a:	6800      	ldr	r0, [r0, #0]
10053a0c:	1810      	adds	r0, r2, r0
10053a0e:	2200      	movs	r2, #0
10053a10:	0840      	lsrs	r0, r0, #1
10053a12:	801a      	strh	r2, [r3, #0]
10053a14:	0a40      	lsrs	r0, r0, #9
10053a16:	9b11      	ldr	r3, [sp, #68]	; 0x44
10053a18:	0240      	lsls	r0, r0, #9
10053a1a:	6018      	str	r0, [r3, #0]
10053a1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
10053a1e:	6018      	str	r0, [r3, #0]
10053a20:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
10053a22:	801a      	strh	r2, [r3, #0]
10053a24:	4a72      	ldr	r2, [pc, #456]	; (10053bf0 <adapt_slot+0x25c>)
10053a26:	1880      	adds	r0, r0, r2
10053a28:	6832      	ldr	r2, [r6, #0]
10053a2a:	4282      	cmp	r2, r0
10053a2c:	d801      	bhi.n	10053a32 <adapt_slot+0x9e>
10053a2e:	4610      	mov	r0, r2
10053a30:	e000      	b.n	10053a34 <adapt_slot+0xa0>
10053a32:	6030      	str	r0, [r6, #0]
10053a34:	0980      	lsrs	r0, r0, #6
10053a36:	6030      	str	r0, [r6, #0]
10053a38:	6808      	ldr	r0, [r1, #0]
10053a3a:	30a0      	adds	r0, #160	; 0xa0
10053a3c:	7b01      	ldrb	r1, [r0, #12]
10053a3e:	980f      	ldr	r0, [sp, #60]	; 0x3c
10053a40:	f000 fc04 	bl	1005424c <nsar_insertSlotListEntry>
10053a44:	e0cd      	b.n	10053be2 <adapt_slot+0x24e>
10053a46:	6a6a      	ldr	r2, [r5, #36]	; 0x24
10053a48:	0041      	lsls	r1, r0, #1
10053a4a:	6aab      	ldr	r3, [r5, #40]	; 0x28
10053a4c:	5a52      	ldrh	r2, [r2, r1]
10053a4e:	5a59      	ldrh	r1, [r3, r1]
10053a50:	1851      	adds	r1, r2, r1
10053a52:	0189      	lsls	r1, r1, #6
10053a54:	4561      	cmp	r1, ip
10053a56:	d900      	bls.n	10053a5a <adapt_slot+0xc6>
10053a58:	468c      	mov	ip, r1
10053a5a:	9906      	ldr	r1, [sp, #24]
10053a5c:	5c08      	ldrb	r0, [r1, r0]
10053a5e:	4586      	cmp	lr, r0
10053a60:	d1f1      	bne.n	10053a46 <adapt_slot+0xb2>
10053a62:	4863      	ldr	r0, [pc, #396]	; (10053bf0 <adapt_slot+0x25c>)
10053a64:	9912      	ldr	r1, [sp, #72]	; 0x48
10053a66:	4240      	negs	r0, r0
10053a68:	6809      	ldr	r1, [r1, #0]
10053a6a:	9a01      	ldr	r2, [sp, #4]
10053a6c:	4460      	add	r0, ip
10053a6e:	9102      	str	r1, [sp, #8]
10053a70:	4291      	cmp	r1, r2
10053a72:	d802      	bhi.n	10053a7a <adapt_slot+0xe6>
10053a74:	9910      	ldr	r1, [sp, #64]	; 0x40
10053a76:	07c9      	lsls	r1, r1, #31
10053a78:	d001      	beq.n	10053a7e <adapt_slot+0xea>
10053a7a:	4614      	mov	r4, r2
10053a7c:	e032      	b.n	10053ae4 <adapt_slot+0x150>
10053a7e:	9911      	ldr	r1, [sp, #68]	; 0x44
10053a80:	6809      	ldr	r1, [r1, #0]
10053a82:	9106      	str	r1, [sp, #24]
10053a84:	4281      	cmp	r1, r0
10053a86:	d900      	bls.n	10053a8a <adapt_slot+0xf6>
10053a88:	4608      	mov	r0, r1
10053a8a:	900a      	str	r0, [sp, #40]	; 0x28
10053a8c:	4610      	mov	r0, r2
10053a8e:	9902      	ldr	r1, [sp, #8]
10053a90:	f7ec fbea 	bl	10040268 <__aeabi_uidivmod>
10053a94:	9008      	str	r0, [sp, #32]
10053a96:	9906      	ldr	r1, [sp, #24]
10053a98:	9801      	ldr	r0, [sp, #4]
10053a9a:	f7ec fbe5 	bl	10040268 <__aeabi_uidivmod>
10053a9e:	1c40      	adds	r0, r0, #1
10053aa0:	9009      	str	r0, [sp, #36]	; 0x24
10053aa2:	9808      	ldr	r0, [sp, #32]
10053aa4:	2800      	cmp	r0, #0
10053aa6:	d100      	bne.n	10053aaa <adapt_slot+0x116>
10053aa8:	2001      	movs	r0, #1
10053aaa:	9909      	ldr	r1, [sp, #36]	; 0x24
10053aac:	9006      	str	r0, [sp, #24]
10053aae:	4288      	cmp	r0, r1
10053ab0:	980d      	ldr	r0, [sp, #52]	; 0x34
10053ab2:	d815      	bhi.n	10053ae0 <adapt_slot+0x14c>
10053ab4:	2800      	cmp	r0, #0
10053ab6:	d115      	bne.n	10053ae4 <adapt_slot+0x150>
10053ab8:	9906      	ldr	r1, [sp, #24]
10053aba:	9801      	ldr	r0, [sp, #4]
10053abc:	f7ec fbd4 	bl	10040268 <__aeabi_uidivmod>
10053ac0:	05c1      	lsls	r1, r0, #23
10053ac2:	d10a      	bne.n	10053ada <adapt_slot+0x146>
10053ac4:	990a      	ldr	r1, [sp, #40]	; 0x28
10053ac6:	4288      	cmp	r0, r1
10053ac8:	d307      	bcc.n	10053ada <adapt_slot+0x146>
10053aca:	9902      	ldr	r1, [sp, #8]
10053acc:	4281      	cmp	r1, r0
10053ace:	d304      	bcc.n	10053ada <adapt_slot+0x146>
10053ad0:	4604      	mov	r4, r0
10053ad2:	2101      	movs	r1, #1
10053ad4:	9806      	ldr	r0, [sp, #24]
10053ad6:	910d      	str	r1, [sp, #52]	; 0x34
10053ad8:	900c      	str	r0, [sp, #48]	; 0x30
10053ada:	9806      	ldr	r0, [sp, #24]
10053adc:	1c40      	adds	r0, r0, #1
10053ade:	e7e4      	b.n	10053aaa <adapt_slot+0x116>
10053ae0:	2800      	cmp	r0, #0
10053ae2:	d003      	beq.n	10053aec <adapt_slot+0x158>
10053ae4:	9911      	ldr	r1, [sp, #68]	; 0x44
10053ae6:	4620      	mov	r0, r4
10053ae8:	6809      	ldr	r1, [r1, #0]
10053aea:	e004      	b.n	10053af6 <adapt_slot+0x162>
10053aec:	2084      	movs	r0, #132	; 0x84
10053aee:	e786      	b.n	100539fe <adapt_slot+0x6a>
10053af0:	1900      	adds	r0, r0, r4
10053af2:	1c7f      	adds	r7, r7, #1
10053af4:	b2bf      	uxth	r7, r7
10053af6:	4281      	cmp	r1, r0
10053af8:	d8fa      	bhi.n	10053af0 <adapt_slot+0x15c>
10053afa:	9902      	ldr	r1, [sp, #8]
10053afc:	4281      	cmp	r1, r0
10053afe:	d204      	bcs.n	10053b0a <adapt_slot+0x176>
10053b00:	9910      	ldr	r1, [sp, #64]	; 0x40
10053b02:	0789      	lsls	r1, r1, #30
10053b04:	d401      	bmi.n	10053b0a <adapt_slot+0x176>
10053b06:	2085      	movs	r0, #133	; 0x85
10053b08:	e779      	b.n	100539fe <adapt_slot+0x6a>
10053b0a:	9911      	ldr	r1, [sp, #68]	; 0x44
10053b0c:	aa03      	add	r2, sp, #12
10053b0e:	6008      	str	r0, [r1, #0]
10053b10:	9812      	ldr	r0, [sp, #72]	; 0x48
10053b12:	6004      	str	r4, [r0, #0]
10053b14:	6831      	ldr	r1, [r6, #0]
10053b16:	203f      	movs	r0, #63	; 0x3f
10053b18:	1e49      	subs	r1, r1, #1
10053b1a:	4301      	orrs	r1, r0
10053b1c:	1c49      	adds	r1, r1, #1
10053b1e:	4620      	mov	r0, r4
10053b20:	6031      	str	r1, [r6, #0]
10053b22:	f000 fba1 	bl	10054268 <nsar_searchBestFreeSlot>
10053b26:	2800      	cmp	r0, #0
10053b28:	d00a      	beq.n	10053b40 <adapt_slot+0x1ac>
10053b2a:	e00e      	b.n	10053b4a <adapt_slot+0x1b6>
10053b2c:	6830      	ldr	r0, [r6, #0]
10053b2e:	087f      	lsrs	r7, r7, #1
10053b30:	0840      	lsrs	r0, r0, #1
10053b32:	6030      	str	r0, [r6, #0]
10053b34:	9919      	ldr	r1, [sp, #100]	; 0x64
10053b36:	0849      	lsrs	r1, r1, #1
10053b38:	9119      	str	r1, [sp, #100]	; 0x64
10053b3a:	9905      	ldr	r1, [sp, #20]
10053b3c:	4281      	cmp	r1, r0
10053b3e:	d204      	bcs.n	10053b4a <adapt_slot+0x1b6>
10053b40:	9810      	ldr	r0, [sp, #64]	; 0x40
10053b42:	0740      	lsls	r0, r0, #29
10053b44:	d501      	bpl.n	10053b4a <adapt_slot+0x1b6>
10053b46:	2f00      	cmp	r7, #0
10053b48:	d1f0      	bne.n	10053b2c <adapt_slot+0x198>
10053b4a:	9805      	ldr	r0, [sp, #20]
10053b4c:	6831      	ldr	r1, [r6, #0]
10053b4e:	4288      	cmp	r0, r1
10053b50:	d908      	bls.n	10053b64 <adapt_slot+0x1d0>
10053b52:	203f      	movs	r0, #63	; 0x3f
10053b54:	1e49      	subs	r1, r1, #1
10053b56:	4301      	orrs	r1, r0
10053b58:	1c49      	adds	r1, r1, #1
10053b5a:	aa03      	add	r2, sp, #12
10053b5c:	4620      	mov	r0, r4
10053b5e:	6031      	str	r1, [r6, #0]
10053b60:	f000 fb82 	bl	10054268 <nsar_searchBestFreeSlot>
10053b64:	9905      	ldr	r1, [sp, #20]
10053b66:	9819      	ldr	r0, [sp, #100]	; 0x64
10053b68:	4281      	cmp	r1, r0
10053b6a:	d33c      	bcc.n	10053be6 <adapt_slot+0x252>
10053b6c:	4608      	mov	r0, r1
10053b6e:	2103      	movs	r1, #3
10053b70:	0209      	lsls	r1, r1, #8
10053b72:	4288      	cmp	r0, r1
10053b74:	d337      	bcc.n	10053be6 <adapt_slot+0x252>
10053b76:	980c      	ldr	r0, [sp, #48]	; 0x30
10053b78:	9008      	str	r0, [sp, #32]
10053b7a:	1e40      	subs	r0, r0, #1
10053b7c:	9009      	str	r0, [sp, #36]	; 0x24
10053b7e:	4668      	mov	r0, sp
10053b80:	7b01      	ldrb	r1, [r0, #12]
10053b82:	980f      	ldr	r0, [sp, #60]	; 0x3c
10053b84:	f000 fb62 	bl	1005424c <nsar_insertSlotListEntry>
10053b88:	b672      	cpsid	i
10053b8a:	4918      	ldr	r1, [pc, #96]	; (10053bec <adapt_slot+0x258>)
10053b8c:	6caa      	ldr	r2, [r5, #72]	; 0x48
10053b8e:	6808      	ldr	r0, [r1, #0]
10053b90:	30a0      	adds	r0, #160	; 0xa0
10053b92:	7b00      	ldrb	r0, [r0, #12]
10053b94:	5c10      	ldrb	r0, [r2, r0]
10053b96:	e012      	b.n	10053bbe <adapt_slot+0x22a>
10053b98:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10053b9a:	0041      	lsls	r1, r0, #1
10053b9c:	469c      	mov	ip, r3
10053b9e:	5a5a      	ldrh	r2, [r3, r1]
10053ba0:	9b08      	ldr	r3, [sp, #32]
10053ba2:	435a      	muls	r2, r3
10053ba4:	4663      	mov	r3, ip
10053ba6:	525a      	strh	r2, [r3, r1]
10053ba8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
10053baa:	469c      	mov	ip, r3
10053bac:	5a5a      	ldrh	r2, [r3, r1]
10053bae:	9b08      	ldr	r3, [sp, #32]
10053bb0:	435a      	muls	r2, r3
10053bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
10053bb4:	18d2      	adds	r2, r2, r3
10053bb6:	4663      	mov	r3, ip
10053bb8:	525a      	strh	r2, [r3, r1]
10053bba:	6ca9      	ldr	r1, [r5, #72]	; 0x48
10053bbc:	5c08      	ldrb	r0, [r1, r0]
10053bbe:	490b      	ldr	r1, [pc, #44]	; (10053bec <adapt_slot+0x258>)
10053bc0:	6809      	ldr	r1, [r1, #0]
10053bc2:	31a0      	adds	r1, #160	; 0xa0
10053bc4:	7b09      	ldrb	r1, [r1, #12]
10053bc6:	4281      	cmp	r1, r0
10053bc8:	d1e6      	bne.n	10053b98 <adapt_slot+0x204>
10053bca:	606c      	str	r4, [r5, #4]
10053bcc:	b662      	cpsie	i
10053bce:	9804      	ldr	r0, [sp, #16]
10053bd0:	0280      	lsls	r0, r0, #10
10053bd2:	0c01      	lsrs	r1, r0, #16
10053bd4:	981b      	ldr	r0, [sp, #108]	; 0x6c
10053bd6:	8001      	strh	r1, [r0, #0]
10053bd8:	9805      	ldr	r0, [sp, #20]
10053bda:	0980      	lsrs	r0, r0, #6
10053bdc:	6030      	str	r0, [r6, #0]
10053bde:	9818      	ldr	r0, [sp, #96]	; 0x60
10053be0:	8007      	strh	r7, [r0, #0]
10053be2:	2000      	movs	r0, #0
10053be4:	e70b      	b.n	100539fe <adapt_slot+0x6a>
10053be6:	2086      	movs	r0, #134	; 0x86
10053be8:	e709      	b.n	100539fe <adapt_slot+0x6a>
10053bea:	0000      	.short	0x0000
10053bec:	20000d64 	.word	0x20000d64
10053bf0:	fffffd9a 	.word	0xfffffd9a

10053bf4 <advance_slave_timing_MultiSlave>:
10053bf4:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
10053bf6:	4ab0      	ldr	r2, [pc, #704]	; (10053eb8 <advance_slave_timing_MultiSlave+0x2c4>)
10053bf8:	217b      	movs	r1, #123	; 0x7b
10053bfa:	6810      	ldr	r0, [r2, #0]
10053bfc:	0109      	lsls	r1, r1, #4
10053bfe:	b090      	sub	sp, #64	; 0x40
10053c00:	1841      	adds	r1, r0, r1
10053c02:	9104      	str	r1, [sp, #16]
10053c04:	2141      	movs	r1, #65	; 0x41
10053c06:	0149      	lsls	r1, r1, #5
10053c08:	1845      	adds	r5, r0, r1
10053c0a:	4604      	mov	r4, r0
10053c0c:	34c0      	adds	r4, #192	; 0xc0
10053c0e:	4601      	mov	r1, r0
10053c10:	3136      	adds	r1, #54	; 0x36
10053c12:	910d      	str	r1, [sp, #52]	; 0x34
10053c14:	2100      	movs	r1, #0
10053c16:	9102      	str	r1, [sp, #8]
10053c18:	49a8      	ldr	r1, [pc, #672]	; (10053ebc <advance_slave_timing_MultiSlave+0x2c8>)
10053c1a:	7a49      	ldrb	r1, [r1, #9]
10053c1c:	00c9      	lsls	r1, r1, #3
10053c1e:	910c      	str	r1, [sp, #48]	; 0x30
10053c20:	6a81      	ldr	r1, [r0, #40]	; 0x28
10053c22:	910b      	str	r1, [sp, #44]	; 0x2c
10053c24:	9904      	ldr	r1, [sp, #16]
10053c26:	3120      	adds	r1, #32
10053c28:	910e      	str	r1, [sp, #56]	; 0x38
10053c2a:	7e89      	ldrb	r1, [r1, #26]
10053c2c:	9107      	str	r1, [sp, #28]
10053c2e:	2908      	cmp	r1, #8
10053c30:	d27e      	bcs.n	10053d30 <advance_slave_timing_MultiSlave+0x13c>
10053c32:	2109      	movs	r1, #9
10053c34:	0209      	lsls	r1, r1, #8
10053c36:	1840      	adds	r0, r0, r1
10053c38:	6b01      	ldr	r1, [r0, #48]	; 0x30
10053c3a:	4617      	mov	r7, r2
10053c3c:	9807      	ldr	r0, [sp, #28]
10053c3e:	2258      	movs	r2, #88	; 0x58
10053c40:	4350      	muls	r0, r2
10053c42:	1808      	adds	r0, r1, r0
10053c44:	9008      	str	r0, [sp, #32]
10053c46:	9807      	ldr	r0, [sp, #28]
10053c48:	0181      	lsls	r1, r0, #6
10053c4a:	489c      	ldr	r0, [pc, #624]	; (10053ebc <advance_slave_timing_MultiSlave+0x2c8>)
10053c4c:	300c      	adds	r0, #12
10053c4e:	1808      	adds	r0, r1, r0
10053c50:	900a      	str	r0, [sp, #40]	; 0x28
10053c52:	7ac0      	ldrb	r0, [r0, #11]
10053c54:	462e      	mov	r6, r5
10053c56:	3640      	adds	r6, #64	; 0x40
10053c58:	9009      	str	r0, [sp, #36]	; 0x24
10053c5a:	8bb0      	ldrh	r0, [r6, #28]
10053c5c:	f003 fcd2 	bl	10057604 <set_sca>
10053c60:	6839      	ldr	r1, [r7, #0]
10053c62:	3140      	adds	r1, #64	; 0x40
10053c64:	8e09      	ldrh	r1, [r1, #48]	; 0x30
10053c66:	1840      	adds	r0, r0, r1
10053c68:	b280      	uxth	r0, r0
10053c6a:	9003      	str	r0, [sp, #12]
10053c6c:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
10053c6e:	9803      	ldr	r0, [sp, #12]
10053c70:	f003 fc66 	bl	10057540 <WindowWiden1>
10053c74:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
10053c76:	0209      	lsls	r1, r1, #8
10053c78:	1a0f      	subs	r7, r1, r0
10053c7a:	7fb0      	ldrb	r0, [r6, #30]
10053c7c:	f003 fcf0 	bl	10057660 <time_offset1>
10053c80:	1838      	adds	r0, r7, r0
10053c82:	f003 fc6b 	bl	1005755c <machine_time_trans>
10053c86:	6ca9      	ldr	r1, [r5, #72]	; 0x48
10053c88:	1841      	adds	r1, r0, r1
10053c8a:	980c      	ldr	r0, [sp, #48]	; 0x30
10053c8c:	1a08      	subs	r0, r1, r0
10053c8e:	0200      	lsls	r0, r0, #8
10053c90:	0a00      	lsrs	r0, r0, #8
10053c92:	9001      	str	r0, [sp, #4]
10053c94:	9910      	ldr	r1, [sp, #64]	; 0x40
10053c96:	1a41      	subs	r1, r0, r1
10053c98:	980b      	ldr	r0, [sp, #44]	; 0x2c
10053c9a:	1a08      	subs	r0, r1, r0
10053c9c:	0200      	lsls	r0, r0, #8
10053c9e:	2101      	movs	r1, #1
10053ca0:	0a00      	lsrs	r0, r0, #8
10053ca2:	05c9      	lsls	r1, r1, #23
10053ca4:	4288      	cmp	r0, r1
10053ca6:	d27d      	bcs.n	10053da4 <advance_slave_timing_MultiSlave+0x1b0>
10053ca8:	9904      	ldr	r1, [sp, #16]
10053caa:	9801      	ldr	r0, [sp, #4]
10053cac:	6348      	str	r0, [r1, #52]	; 0x34
10053cae:	9809      	ldr	r0, [sp, #36]	; 0x24
10053cb0:	f003 fc26 	bl	10057500 <modulo_37>
10053cb4:	990a      	ldr	r1, [sp, #40]	; 0x28
10053cb6:	72c8      	strb	r0, [r1, #11]
10053cb8:	980d      	ldr	r0, [sp, #52]	; 0x34
10053cba:	7800      	ldrb	r0, [r0, #0]
10053cbc:	43c1      	mvns	r1, r0
10053cbe:	0709      	lsls	r1, r1, #28
10053cc0:	d006      	beq.n	10053cd0 <advance_slave_timing_MultiSlave+0xdc>
10053cc2:	0741      	lsls	r1, r0, #29
10053cc4:	9807      	ldr	r0, [sp, #28]
10053cc6:	0f49      	lsrs	r1, r1, #29
10053cc8:	0740      	lsls	r0, r0, #29
10053cca:	0f40      	lsrs	r0, r0, #29
10053ccc:	4281      	cmp	r1, r0
10053cce:	d12b      	bne.n	10053d28 <advance_slave_timing_MultiSlave+0x134>
10053cd0:	980e      	ldr	r0, [sp, #56]	; 0x38
10053cd2:	2108      	movs	r1, #8
10053cd4:	7e80      	ldrb	r0, [r0, #26]
10053cd6:	4308      	orrs	r0, r1
10053cd8:	990d      	ldr	r1, [sp, #52]	; 0x34
10053cda:	7008      	strb	r0, [r1, #0]
10053cdc:	6ca8      	ldr	r0, [r5, #72]	; 0x48
10053cde:	6020      	str	r0, [r4, #0]
10053ce0:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
10053ce2:	6060      	str	r0, [r4, #4]
10053ce4:	9801      	ldr	r0, [sp, #4]
10053ce6:	60a0      	str	r0, [r4, #8]
10053ce8:	9802      	ldr	r0, [sp, #8]
10053cea:	60e0      	str	r0, [r4, #12]
10053cec:	6da8      	ldr	r0, [r5, #88]	; 0x58
10053cee:	6120      	str	r0, [r4, #16]
10053cf0:	6d68      	ldr	r0, [r5, #84]	; 0x54
10053cf2:	6160      	str	r0, [r4, #20]
10053cf4:	8bb0      	ldrh	r0, [r6, #28]
10053cf6:	8320      	strh	r0, [r4, #24]
10053cf8:	7fb0      	ldrb	r0, [r6, #30]
10053cfa:	76a0      	strb	r0, [r4, #26]
10053cfc:	4628      	mov	r0, r5
10053cfe:	3060      	adds	r0, #96	; 0x60
10053d00:	7801      	ldrb	r1, [r0, #0]
10053d02:	76e1      	strb	r1, [r4, #27]
10053d04:	8cb1      	ldrh	r1, [r6, #36]	; 0x24
10053d06:	83a1      	strh	r1, [r4, #28]
10053d08:	8d31      	ldrh	r1, [r6, #40]	; 0x28
10053d0a:	83e1      	strh	r1, [r4, #30]
10053d0c:	8db1      	ldrh	r1, [r6, #44]	; 0x2c
10053d0e:	8421      	strh	r1, [r4, #32]
10053d10:	8e31      	ldrh	r1, [r6, #48]	; 0x30
10053d12:	8461      	strh	r1, [r4, #34]	; 0x22
10053d14:	8eb1      	ldrh	r1, [r6, #52]	; 0x34
10053d16:	84a1      	strh	r1, [r4, #36]	; 0x24
10053d18:	8f31      	ldrh	r1, [r6, #56]	; 0x38
10053d1a:	84e1      	strh	r1, [r4, #38]	; 0x26
10053d1c:	7ec1      	ldrb	r1, [r0, #27]
10053d1e:	2028      	movs	r0, #40	; 0x28
10053d20:	5501      	strb	r1, [r0, r4]
10053d22:	2084      	movs	r0, #132	; 0x84
10053d24:	5940      	ldr	r0, [r0, r5]
10053d26:	62e0      	str	r0, [r4, #44]	; 0x2c
10053d28:	980d      	ldr	r0, [sp, #52]	; 0x34
10053d2a:	7800      	ldrb	r0, [r0, #0]
10053d2c:	0742      	lsls	r2, r0, #29
10053d2e:	e000      	b.n	10053d32 <advance_slave_timing_MultiSlave+0x13e>
10053d30:	e07b      	b.n	10053e2a <advance_slave_timing_MultiSlave+0x236>
10053d32:	9907      	ldr	r1, [sp, #28]
10053d34:	0f52      	lsrs	r2, r2, #29
10053d36:	0749      	lsls	r1, r1, #29
10053d38:	0f49      	lsrs	r1, r1, #29
10053d3a:	428a      	cmp	r2, r1
10053d3c:	d061      	beq.n	10053e02 <advance_slave_timing_MultiSlave+0x20e>
10053d3e:	21f7      	movs	r1, #247	; 0xf7
10053d40:	4008      	ands	r0, r1
10053d42:	990d      	ldr	r1, [sp, #52]	; 0x34
10053d44:	4f5c      	ldr	r7, [pc, #368]	; (10053eb8 <advance_slave_timing_MultiSlave+0x2c4>)
10053d46:	7008      	strb	r0, [r1, #0]
10053d48:	0740      	lsls	r0, r0, #29
10053d4a:	0f40      	lsrs	r0, r0, #29
10053d4c:	9007      	str	r0, [sp, #28]
10053d4e:	2009      	movs	r0, #9
10053d50:	6839      	ldr	r1, [r7, #0]
10053d52:	0200      	lsls	r0, r0, #8
10053d54:	1808      	adds	r0, r1, r0
10053d56:	6b01      	ldr	r1, [r0, #48]	; 0x30
10053d58:	9807      	ldr	r0, [sp, #28]
10053d5a:	2258      	movs	r2, #88	; 0x58
10053d5c:	4350      	muls	r0, r2
10053d5e:	1808      	adds	r0, r1, r0
10053d60:	9004      	str	r0, [sp, #16]
10053d62:	9807      	ldr	r0, [sp, #28]
10053d64:	0181      	lsls	r1, r0, #6
10053d66:	4855      	ldr	r0, [pc, #340]	; (10053ebc <advance_slave_timing_MultiSlave+0x2c8>)
10053d68:	300c      	adds	r0, #12
10053d6a:	1808      	adds	r0, r1, r0
10053d6c:	900a      	str	r0, [sp, #40]	; 0x28
10053d6e:	7ac0      	ldrb	r0, [r0, #11]
10053d70:	9009      	str	r0, [sp, #36]	; 0x24
10053d72:	8b20      	ldrh	r0, [r4, #24]
10053d74:	f003 fc46 	bl	10057604 <set_sca>
10053d78:	6839      	ldr	r1, [r7, #0]
10053d7a:	3140      	adds	r1, #64	; 0x40
10053d7c:	8e09      	ldrh	r1, [r1, #48]	; 0x30
10053d7e:	1840      	adds	r0, r0, r1
10053d80:	b280      	uxth	r0, r0
10053d82:	9003      	str	r0, [sp, #12]
10053d84:	6861      	ldr	r1, [r4, #4]
10053d86:	9803      	ldr	r0, [sp, #12]
10053d88:	f003 fbda 	bl	10057540 <WindowWiden1>
10053d8c:	6861      	ldr	r1, [r4, #4]
10053d8e:	0209      	lsls	r1, r1, #8
10053d90:	1a0f      	subs	r7, r1, r0
10053d92:	7ea0      	ldrb	r0, [r4, #26]
10053d94:	f003 fc64 	bl	10057660 <time_offset1>
10053d98:	1838      	adds	r0, r7, r0
10053d9a:	f003 fbdf 	bl	1005755c <machine_time_trans>
10053d9e:	6821      	ldr	r1, [r4, #0]
10053da0:	1841      	adds	r1, r0, r1
10053da2:	e000      	b.n	10053da6 <advance_slave_timing_MultiSlave+0x1b2>
10053da4:	e043      	b.n	10053e2e <advance_slave_timing_MultiSlave+0x23a>
10053da6:	980c      	ldr	r0, [sp, #48]	; 0x30
10053da8:	1a08      	subs	r0, r1, r0
10053daa:	0207      	lsls	r7, r0, #8
10053dac:	9810      	ldr	r0, [sp, #64]	; 0x40
10053dae:	0a3f      	lsrs	r7, r7, #8
10053db0:	1a39      	subs	r1, r7, r0
10053db2:	980b      	ldr	r0, [sp, #44]	; 0x2c
10053db4:	1a08      	subs	r0, r1, r0
10053db6:	0200      	lsls	r0, r0, #8
10053db8:	2101      	movs	r1, #1
10053dba:	0a00      	lsrs	r0, r0, #8
10053dbc:	05c9      	lsls	r1, r1, #23
10053dbe:	4288      	cmp	r0, r1
10053dc0:	d257      	bcs.n	10053e72 <advance_slave_timing_MultiSlave+0x27e>
10053dc2:	60a7      	str	r7, [r4, #8]
10053dc4:	9809      	ldr	r0, [sp, #36]	; 0x24
10053dc6:	f003 fb9b 	bl	10057500 <modulo_37>
10053dca:	990a      	ldr	r1, [sp, #40]	; 0x28
10053dcc:	72c8      	strb	r0, [r1, #11]
10053dce:	9801      	ldr	r0, [sp, #4]
10053dd0:	9908      	ldr	r1, [sp, #32]
10053dd2:	1bc0      	subs	r0, r0, r7
10053dd4:	0200      	lsls	r0, r0, #8
10053dd6:	7949      	ldrb	r1, [r1, #5]
10053dd8:	0a00      	lsrs	r0, r0, #8
10053dda:	2290      	movs	r2, #144	; 0x90
10053ddc:	4211      	tst	r1, r2
10053dde:	d110      	bne.n	10053e02 <advance_slave_timing_MultiSlave+0x20e>
10053de0:	2101      	movs	r1, #1
10053de2:	05c9      	lsls	r1, r1, #23
10053de4:	4288      	cmp	r0, r1
10053de6:	d30a      	bcc.n	10053dfe <advance_slave_timing_MultiSlave+0x20a>
10053de8:	9804      	ldr	r0, [sp, #16]
10053dea:	7bc1      	ldrb	r1, [r0, #15]
10053dec:	9808      	ldr	r0, [sp, #32]
10053dee:	7bc0      	ldrb	r0, [r0, #15]
10053df0:	1c40      	adds	r0, r0, #1
10053df2:	4281      	cmp	r1, r0
10053df4:	d803      	bhi.n	10053dfe <advance_slave_timing_MultiSlave+0x20a>
10053df6:	9804      	ldr	r0, [sp, #16]
10053df8:	7940      	ldrb	r0, [r0, #5]
10053dfa:	06c0      	lsls	r0, r0, #27
10053dfc:	d501      	bpl.n	10053e02 <advance_slave_timing_MultiSlave+0x20e>
10053dfe:	f003 fe3f 	bl	10057a80 <swap_slaves>
10053e02:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
10053e04:	9803      	ldr	r0, [sp, #12]
10053e06:	f003 fba0 	bl	1005754a <WindowWiden2>
10053e0a:	4604      	mov	r4, r0
10053e0c:	7fb0      	ldrb	r0, [r6, #30]
10053e0e:	f003 fc2f 	bl	10057670 <time_offset2>
10053e12:	6da9      	ldr	r1, [r5, #88]	; 0x58
10053e14:	1820      	adds	r0, r4, r0
10053e16:	1840      	adds	r0, r0, r1
10053e18:	2107      	movs	r1, #7
10053e1a:	0509      	lsls	r1, r1, #20
10053e1c:	4308      	orrs	r0, r1
10053e1e:	3580      	adds	r5, #128	; 0x80
10053e20:	6ba9      	ldr	r1, [r5, #56]	; 0x38
10053e22:	2203      	movs	r2, #3
10053e24:	1d09      	adds	r1, r1, #4
10053e26:	f7f8 fdff 	bl	1004ca28 <set_string>
10053e2a:	b011      	add	sp, #68	; 0x44
10053e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053e2e:	9808      	ldr	r0, [sp, #32]
10053e30:	8f00      	ldrh	r0, [r0, #56]	; 0x38
10053e32:	0041      	lsls	r1, r0, #1
10053e34:	980a      	ldr	r0, [sp, #40]	; 0x28
10053e36:	3020      	adds	r0, #32
10053e38:	7802      	ldrb	r2, [r0, #0]
10053e3a:	9809      	ldr	r0, [sp, #36]	; 0x24
10053e3c:	1810      	adds	r0, r2, r0
10053e3e:	b280      	uxth	r0, r0
10053e40:	9009      	str	r0, [sp, #36]	; 0x24
10053e42:	9808      	ldr	r0, [sp, #32]
10053e44:	9a08      	ldr	r2, [sp, #32]
10053e46:	8900      	ldrh	r0, [r0, #8]
10053e48:	1c40      	adds	r0, r0, #1
10053e4a:	8110      	strh	r0, [r2, #8]
10053e4c:	9808      	ldr	r0, [sp, #32]
10053e4e:	6940      	ldr	r0, [r0, #20]
10053e50:	1a42      	subs	r2, r0, r1
10053e52:	9808      	ldr	r0, [sp, #32]
10053e54:	6142      	str	r2, [r0, #20]
10053e56:	9808      	ldr	r0, [sp, #32]
10053e58:	7bc0      	ldrb	r0, [r0, #15]
10053e5a:	28ff      	cmp	r0, #255	; 0xff
10053e5c:	d202      	bcs.n	10053e64 <advance_slave_timing_MultiSlave+0x270>
10053e5e:	9a08      	ldr	r2, [sp, #32]
10053e60:	1c40      	adds	r0, r0, #1
10053e62:	73d0      	strb	r0, [r2, #15]
10053e64:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
10053e66:	1840      	adds	r0, r0, r1
10053e68:	64e8      	str	r0, [r5, #76]	; 0x4c
10053e6a:	9807      	ldr	r0, [sp, #28]
10053e6c:	f00b f828 	bl	1005eec0 <cancel_slave>
10053e70:	e6fc      	b.n	10053c6c <advance_slave_timing_MultiSlave+0x78>
10053e72:	9804      	ldr	r0, [sp, #16]
10053e74:	990a      	ldr	r1, [sp, #40]	; 0x28
10053e76:	8f00      	ldrh	r0, [r0, #56]	; 0x38
10053e78:	0040      	lsls	r0, r0, #1
10053e7a:	3120      	adds	r1, #32
10053e7c:	780a      	ldrb	r2, [r1, #0]
10053e7e:	9909      	ldr	r1, [sp, #36]	; 0x24
10053e80:	1851      	adds	r1, r2, r1
10053e82:	b289      	uxth	r1, r1
10053e84:	9109      	str	r1, [sp, #36]	; 0x24
10053e86:	9904      	ldr	r1, [sp, #16]
10053e88:	9a04      	ldr	r2, [sp, #16]
10053e8a:	8909      	ldrh	r1, [r1, #8]
10053e8c:	1c49      	adds	r1, r1, #1
10053e8e:	8111      	strh	r1, [r2, #8]
10053e90:	9904      	ldr	r1, [sp, #16]
10053e92:	6949      	ldr	r1, [r1, #20]
10053e94:	1a0a      	subs	r2, r1, r0
10053e96:	9904      	ldr	r1, [sp, #16]
10053e98:	614a      	str	r2, [r1, #20]
10053e9a:	9904      	ldr	r1, [sp, #16]
10053e9c:	7bc9      	ldrb	r1, [r1, #15]
10053e9e:	29ff      	cmp	r1, #255	; 0xff
10053ea0:	d202      	bcs.n	10053ea8 <advance_slave_timing_MultiSlave+0x2b4>
10053ea2:	9a04      	ldr	r2, [sp, #16]
10053ea4:	1c49      	adds	r1, r1, #1
10053ea6:	73d1      	strb	r1, [r2, #15]
10053ea8:	6861      	ldr	r1, [r4, #4]
10053eaa:	1808      	adds	r0, r1, r0
10053eac:	6060      	str	r0, [r4, #4]
10053eae:	9807      	ldr	r0, [sp, #28]
10053eb0:	f00b f806 	bl	1005eec0 <cancel_slave>
10053eb4:	e766      	b.n	10053d84 <advance_slave_timing_MultiSlave+0x190>
10053eb6:	0000      	.short	0x0000
10053eb8:	20000d64 	.word	0x20000d64
10053ebc:	200000c0 	.word	0x200000c0

10053ec0 <anchor_replace>:
10053ec0:	b510      	push	{r4, lr}
10053ec2:	4911      	ldr	r1, [pc, #68]	; (10053f08 <anchor_replace+0x48>)
10053ec4:	227b      	movs	r2, #123	; 0x7b
10053ec6:	6809      	ldr	r1, [r1, #0]
10053ec8:	0112      	lsls	r2, r2, #4
10053eca:	1889      	adds	r1, r1, r2
10053ecc:	684c      	ldr	r4, [r1, #4]
10053ece:	688b      	ldr	r3, [r1, #8]
10053ed0:	0042      	lsls	r2, r0, #1
10053ed2:	429c      	cmp	r4, r3
10053ed4:	d104      	bne.n	10053ee0 <anchor_replace+0x20>
10053ed6:	6b08      	ldr	r0, [r1, #48]	; 0x30
10053ed8:	8a4c      	ldrh	r4, [r1, #18]
10053eda:	5a80      	ldrh	r0, [r0, r2]
10053edc:	42a0      	cmp	r0, r4
10053ede:	d001      	beq.n	10053ee4 <anchor_replace+0x24>
10053ee0:	2001      	movs	r0, #1
10053ee2:	e000      	b.n	10053ee6 <anchor_replace+0x26>
10053ee4:	2000      	movs	r0, #0
10053ee6:	604b      	str	r3, [r1, #4]
10053ee8:	688b      	ldr	r3, [r1, #8]
10053eea:	618b      	str	r3, [r1, #24]
10053eec:	6a4c      	ldr	r4, [r1, #36]	; 0x24
10053eee:	898b      	ldrh	r3, [r1, #12]
10053ef0:	52a3      	strh	r3, [r4, r2]
10053ef2:	6a8c      	ldr	r4, [r1, #40]	; 0x28
10053ef4:	89cb      	ldrh	r3, [r1, #14]
10053ef6:	52a3      	strh	r3, [r4, r2]
10053ef8:	6b0c      	ldr	r4, [r1, #48]	; 0x30
10053efa:	8a4b      	ldrh	r3, [r1, #18]
10053efc:	52a3      	strh	r3, [r4, r2]
10053efe:	8a0b      	ldrh	r3, [r1, #16]
10053f00:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
10053f02:	528b      	strh	r3, [r1, r2]
10053f04:	bd10      	pop	{r4, pc}
10053f06:	0000      	.short	0x0000
10053f08:	20000d64 	.word	0x20000d64

10053f0c <cancel_current_master>:
10053f0c:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
10053f0e:	4967      	ldr	r1, [pc, #412]	; (100540ac <cancel_current_master+0x1a0>)
10053f10:	2241      	movs	r2, #65	; 0x41
10053f12:	6808      	ldr	r0, [r1, #0]
10053f14:	0152      	lsls	r2, r2, #5
10053f16:	b082      	sub	sp, #8
10053f18:	1882      	adds	r2, r0, r2
10053f1a:	9200      	str	r2, [sp, #0]
10053f1c:	227b      	movs	r2, #123	; 0x7b
10053f1e:	0112      	lsls	r2, r2, #4
10053f20:	1886      	adds	r6, r0, r2
10053f22:	22ac      	movs	r2, #172	; 0xac
10053f24:	5c15      	ldrb	r5, [r2, r0]
10053f26:	4604      	mov	r4, r0
10053f28:	4603      	mov	r3, r0
10053f2a:	9a02      	ldr	r2, [sp, #8]
10053f2c:	34c0      	adds	r4, #192	; 0xc0
10053f2e:	3336      	adds	r3, #54	; 0x36
10053f30:	4295      	cmp	r5, r2
10053f32:	d97d      	bls.n	10054030 <cancel_current_master+0x124>
10053f34:	2109      	movs	r1, #9
10053f36:	0209      	lsls	r1, r1, #8
10053f38:	1840      	adds	r0, r0, r1
10053f3a:	4617      	mov	r7, r2
10053f3c:	2158      	movs	r1, #88	; 0x58
10053f3e:	6b00      	ldr	r0, [r0, #48]	; 0x30
10053f40:	434f      	muls	r7, r1
10053f42:	2500      	movs	r5, #0
10053f44:	1cb9      	adds	r1, r7, #2
10053f46:	5445      	strb	r5, [r0, r1]
10053f48:	9802      	ldr	r0, [sp, #8]
10053f4a:	f000 f959 	bl	10054200 <is_slave>
10053f4e:	2800      	cmp	r0, #0
10053f50:	d10c      	bne.n	10053f6c <cancel_current_master+0x60>
10053f52:	4856      	ldr	r0, [pc, #344]	; (100540ac <cancel_current_master+0x1a0>)
10053f54:	1dbf      	adds	r7, r7, #6
10053f56:	6801      	ldr	r1, [r0, #0]
10053f58:	2009      	movs	r0, #9
10053f5a:	0200      	lsls	r0, r0, #8
10053f5c:	1808      	adds	r0, r1, r0
10053f5e:	6b00      	ldr	r0, [r0, #48]	; 0x30
10053f60:	5dc0      	ldrb	r0, [r0, r7]
10053f62:	2800      	cmp	r0, #0
10053f64:	d002      	beq.n	10053f6c <cancel_current_master+0x60>
10053f66:	9800      	ldr	r0, [sp, #0]
10053f68:	30c0      	adds	r0, #192	; 0xc0
10053f6a:	7205      	strb	r5, [r0, #8]
10053f6c:	b672      	cpsid	i
10053f6e:	484f      	ldr	r0, [pc, #316]	; (100540ac <cancel_current_master+0x1a0>)
10053f70:	9d02      	ldr	r5, [sp, #8]
10053f72:	6807      	ldr	r7, [r0, #0]
10053f74:	2001      	movs	r0, #1
10053f76:	4639      	mov	r1, r7
10053f78:	3120      	adds	r1, #32
10053f7a:	7dca      	ldrb	r2, [r1, #23]
10053f7c:	40a8      	lsls	r0, r5
10053f7e:	4382      	bics	r2, r0
10053f80:	75ca      	strb	r2, [r1, #23]
10053f82:	7d31      	ldrb	r1, [r6, #20]
10053f84:	4381      	bics	r1, r0
10053f86:	7531      	strb	r1, [r6, #20]
10053f88:	7819      	ldrb	r1, [r3, #0]
10053f8a:	0708      	lsls	r0, r1, #28
10053f8c:	d47a      	bmi.n	10054084 <cancel_current_master+0x178>
10053f8e:	074a      	lsls	r2, r1, #29
10053f90:	9802      	ldr	r0, [sp, #8]
10053f92:	0f52      	lsrs	r2, r2, #29
10053f94:	4282      	cmp	r2, r0
10053f96:	d07c      	beq.n	10054092 <cancel_current_master+0x186>
10053f98:	4630      	mov	r0, r6
10053f9a:	3020      	adds	r0, #32
10053f9c:	7e82      	ldrb	r2, [r0, #26]
10053f9e:	0755      	lsls	r5, r2, #29
10053fa0:	9a02      	ldr	r2, [sp, #8]
10053fa2:	0f6d      	lsrs	r5, r5, #29
10053fa4:	4295      	cmp	r5, r2
10053fa6:	d176      	bne.n	10054096 <cancel_current_master+0x18a>
10053fa8:	7681      	strb	r1, [r0, #26]
10053faa:	200f      	movs	r0, #15
10053fac:	7018      	strb	r0, [r3, #0]
10053fae:	2241      	movs	r2, #65	; 0x41
10053fb0:	68a0      	ldr	r0, [r4, #8]
10053fb2:	0152      	lsls	r2, r2, #5
10053fb4:	6370      	str	r0, [r6, #52]	; 0x34
10053fb6:	18bd      	adds	r5, r7, r2
10053fb8:	6da8      	ldr	r0, [r5, #88]	; 0x58
10053fba:	6921      	ldr	r1, [r4, #16]
10053fbc:	65a9      	str	r1, [r5, #88]	; 0x58
10053fbe:	6120      	str	r0, [r4, #16]
10053fc0:	6d68      	ldr	r0, [r5, #84]	; 0x54
10053fc2:	6961      	ldr	r1, [r4, #20]
10053fc4:	6569      	str	r1, [r5, #84]	; 0x54
10053fc6:	6160      	str	r0, [r4, #20]
10053fc8:	4621      	mov	r1, r4
10053fca:	4628      	mov	r0, r5
10053fcc:	3118      	adds	r1, #24
10053fce:	305c      	adds	r0, #92	; 0x5c
10053fd0:	f000 fbd8 	bl	10054784 <swap_u16>
10053fd4:	4836      	ldr	r0, [pc, #216]	; (100540b0 <cancel_current_master+0x1a4>)
10053fd6:	7ea3      	ldrb	r3, [r4, #26]
10053fd8:	1839      	adds	r1, r7, r0
10053fda:	780a      	ldrb	r2, [r1, #0]
10053fdc:	700b      	strb	r3, [r1, #0]
10053fde:	76a2      	strb	r2, [r4, #26]
10053fe0:	6ca8      	ldr	r0, [r5, #72]	; 0x48
10053fe2:	6821      	ldr	r1, [r4, #0]
10053fe4:	64a9      	str	r1, [r5, #72]	; 0x48
10053fe6:	6020      	str	r0, [r4, #0]
10053fe8:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
10053fea:	6861      	ldr	r1, [r4, #4]
10053fec:	64e9      	str	r1, [r5, #76]	; 0x4c
10053fee:	6060      	str	r0, [r4, #4]
10053ff0:	2011      	movs	r0, #17
10053ff2:	01c0      	lsls	r0, r0, #7
10053ff4:	1839      	adds	r1, r7, r0
10053ff6:	780a      	ldrb	r2, [r1, #0]
10053ff8:	7ee3      	ldrb	r3, [r4, #27]
10053ffa:	700b      	strb	r3, [r1, #0]
10053ffc:	4621      	mov	r1, r4
10053ffe:	4628      	mov	r0, r5
10054000:	76e2      	strb	r2, [r4, #27]
10054002:	311c      	adds	r1, #28
10054004:	3064      	adds	r0, #100	; 0x64
10054006:	f000 fbbd 	bl	10054784 <swap_u16>
1005400a:	4621      	mov	r1, r4
1005400c:	4628      	mov	r0, r5
1005400e:	311e      	adds	r1, #30
10054010:	3068      	adds	r0, #104	; 0x68
10054012:	f000 fbb7 	bl	10054784 <swap_u16>
10054016:	4621      	mov	r1, r4
10054018:	4628      	mov	r0, r5
1005401a:	3120      	adds	r1, #32
1005401c:	306c      	adds	r0, #108	; 0x6c
1005401e:	f000 fbb1 	bl	10054784 <swap_u16>
10054022:	4621      	mov	r1, r4
10054024:	4628      	mov	r0, r5
10054026:	3122      	adds	r1, #34	; 0x22
10054028:	3070      	adds	r0, #112	; 0x70
1005402a:	f000 fbab 	bl	10054784 <swap_u16>
1005402e:	e000      	b.n	10054032 <cancel_current_master+0x126>
10054030:	e03b      	b.n	100540aa <cancel_current_master+0x19e>
10054032:	4621      	mov	r1, r4
10054034:	4628      	mov	r0, r5
10054036:	3124      	adds	r1, #36	; 0x24
10054038:	3074      	adds	r0, #116	; 0x74
1005403a:	f000 fba3 	bl	10054784 <swap_u16>
1005403e:	4621      	mov	r1, r4
10054040:	4628      	mov	r0, r5
10054042:	3126      	adds	r1, #38	; 0x26
10054044:	3078      	adds	r0, #120	; 0x78
10054046:	f000 fb9d 	bl	10054784 <swap_u16>
1005404a:	4819      	ldr	r0, [pc, #100]	; (100540b0 <cancel_current_master+0x1a4>)
1005404c:	3580      	adds	r5, #128	; 0x80
1005404e:	301d      	adds	r0, #29
10054050:	1839      	adds	r1, r7, r0
10054052:	4620      	mov	r0, r4
10054054:	3028      	adds	r0, #40	; 0x28
10054056:	780a      	ldrb	r2, [r1, #0]
10054058:	7803      	ldrb	r3, [r0, #0]
1005405a:	700b      	strb	r3, [r1, #0]
1005405c:	7002      	strb	r2, [r0, #0]
1005405e:	4814      	ldr	r0, [pc, #80]	; (100540b0 <cancel_current_master+0x1a4>)
10054060:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10054062:	3026      	adds	r0, #38	; 0x26
10054064:	1838      	adds	r0, r7, r0
10054066:	6801      	ldr	r1, [r0, #0]
10054068:	6002      	str	r2, [r0, #0]
1005406a:	62e1      	str	r1, [r4, #44]	; 0x2c
1005406c:	2107      	movs	r1, #7
1005406e:	68e0      	ldr	r0, [r4, #12]
10054070:	0509      	lsls	r1, r1, #20
10054072:	4308      	orrs	r0, r1
10054074:	6ba9      	ldr	r1, [r5, #56]	; 0x38
10054076:	2203      	movs	r2, #3
10054078:	1d09      	adds	r1, r1, #4
1005407a:	f7f8 fcd5 	bl	1004ca28 <set_string>
1005407e:	e00a      	b.n	10054096 <cancel_current_master+0x18a>
10054080:	e000      	b.n	10054084 <cancel_current_master+0x178>
10054082:	e006      	b.n	10054092 <cancel_current_master+0x186>
10054084:	203a      	movs	r0, #58	; 0x3a
10054086:	5d80      	ldrb	r0, [r0, r6]
10054088:	0741      	lsls	r1, r0, #29
1005408a:	9802      	ldr	r0, [sp, #8]
1005408c:	0f49      	lsrs	r1, r1, #29
1005408e:	4281      	cmp	r1, r0
10054090:	d101      	bne.n	10054096 <cancel_current_master+0x18a>
10054092:	200f      	movs	r0, #15
10054094:	7018      	strb	r0, [r3, #0]
10054096:	3620      	adds	r6, #32
10054098:	7eb0      	ldrb	r0, [r6, #26]
1005409a:	0741      	lsls	r1, r0, #29
1005409c:	9802      	ldr	r0, [sp, #8]
1005409e:	0f49      	lsrs	r1, r1, #29
100540a0:	4281      	cmp	r1, r0
100540a2:	d101      	bne.n	100540a8 <cancel_current_master+0x19c>
100540a4:	200f      	movs	r0, #15
100540a6:	76b0      	strb	r0, [r6, #26]
100540a8:	b662      	cpsie	i
100540aa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100540ac:	20000d64 	.word	0x20000d64
100540b0:	0000087e 	.word	0x0000087e

100540b4 <get_advertiser>:
100540b4:	b570      	push	{r4, r5, r6, lr}
100540b6:	4810      	ldr	r0, [pc, #64]	; (100540f8 <get_advertiser+0x44>)
100540b8:	2409      	movs	r4, #9
100540ba:	6802      	ldr	r2, [r0, #0]
100540bc:	207b      	movs	r0, #123	; 0x7b
100540be:	0100      	lsls	r0, r0, #4
100540c0:	1810      	adds	r0, r2, r0
100540c2:	7d03      	ldrb	r3, [r0, #20]
100540c4:	0224      	lsls	r4, r4, #8
100540c6:	2008      	movs	r0, #8
100540c8:	2100      	movs	r1, #0
100540ca:	1914      	adds	r4, r2, r4
100540cc:	32a0      	adds	r2, #160	; 0xa0
100540ce:	7b15      	ldrb	r5, [r2, #12]
100540d0:	e00e      	b.n	100540f0 <get_advertiser+0x3c>
100540d2:	07da      	lsls	r2, r3, #31
100540d4:	d009      	beq.n	100540ea <get_advertiser+0x36>
100540d6:	2258      	movs	r2, #88	; 0x58
100540d8:	434a      	muls	r2, r1
100540da:	6b26      	ldr	r6, [r4, #48]	; 0x30
100540dc:	1c92      	adds	r2, r2, #2
100540de:	5cb2      	ldrb	r2, [r6, r2]
100540e0:	0752      	lsls	r2, r2, #29
100540e2:	0f52      	lsrs	r2, r2, #29
100540e4:	2a01      	cmp	r2, #1
100540e6:	d100      	bne.n	100540ea <get_advertiser+0x36>
100540e8:	4608      	mov	r0, r1
100540ea:	085b      	lsrs	r3, r3, #1
100540ec:	1c49      	adds	r1, r1, #1
100540ee:	b2c9      	uxtb	r1, r1
100540f0:	428d      	cmp	r5, r1
100540f2:	d8ee      	bhi.n	100540d2 <get_advertiser+0x1e>
100540f4:	bd70      	pop	{r4, r5, r6, pc}
100540f6:	0000      	.short	0x0000
100540f8:	20000d64 	.word	0x20000d64

100540fc <get_connection_no>:
100540fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100540fe:	4607      	mov	r7, r0
10054100:	481f      	ldr	r0, [pc, #124]	; (10054180 <get_connection_no+0x84>)
10054102:	2609      	movs	r6, #9
10054104:	6805      	ldr	r5, [r0, #0]
10054106:	207b      	movs	r0, #123	; 0x7b
10054108:	0100      	lsls	r0, r0, #4
1005410a:	182c      	adds	r4, r5, r0
1005410c:	4628      	mov	r0, r5
1005410e:	3036      	adds	r0, #54	; 0x36
10054110:	0236      	lsls	r6, r6, #8
10054112:	053f      	lsls	r7, r7, #20
10054114:	4684      	mov	ip, r0
10054116:	0d3f      	lsrs	r7, r7, #20
10054118:	19ae      	adds	r6, r5, r6
1005411a:	7d23      	ldrb	r3, [r4, #20]
1005411c:	2008      	movs	r0, #8
1005411e:	2200      	movs	r2, #0
10054120:	35a0      	adds	r5, #160	; 0xa0
10054122:	9700      	str	r7, [sp, #0]
10054124:	46b6      	mov	lr, r6
10054126:	7b2d      	ldrb	r5, [r5, #12]
10054128:	e00e      	b.n	10054148 <get_connection_no+0x4c>
1005412a:	07de      	lsls	r6, r3, #31
1005412c:	d009      	beq.n	10054142 <get_connection_no+0x46>
1005412e:	4676      	mov	r6, lr
10054130:	6b36      	ldr	r6, [r6, #48]	; 0x30
10054132:	2758      	movs	r7, #88	; 0x58
10054134:	4357      	muls	r7, r2
10054136:	19f6      	adds	r6, r6, r7
10054138:	8976      	ldrh	r6, [r6, #10]
1005413a:	9f00      	ldr	r7, [sp, #0]
1005413c:	42b7      	cmp	r7, r6
1005413e:	d100      	bne.n	10054142 <get_connection_no+0x46>
10054140:	4610      	mov	r0, r2
10054142:	085b      	lsrs	r3, r3, #1
10054144:	1c52      	adds	r2, r2, #1
10054146:	b2d2      	uxtb	r2, r2
10054148:	4295      	cmp	r5, r2
1005414a:	d8ee      	bhi.n	1005412a <get_connection_no+0x2e>
1005414c:	3420      	adds	r4, #32
1005414e:	7ea2      	ldrb	r2, [r4, #26]
10054150:	0712      	lsls	r2, r2, #28
10054152:	0f12      	lsrs	r2, r2, #28
10054154:	4282      	cmp	r2, r0
10054156:	d102      	bne.n	1005415e <get_connection_no+0x62>
10054158:	07cb      	lsls	r3, r1, #31
1005415a:	d100      	bne.n	1005415e <get_connection_no+0x62>
1005415c:	2008      	movs	r0, #8
1005415e:	4282      	cmp	r2, r0
10054160:	d007      	beq.n	10054172 <get_connection_no+0x76>
10054162:	4662      	mov	r2, ip
10054164:	7812      	ldrb	r2, [r2, #0]
10054166:	0713      	lsls	r3, r2, #28
10054168:	d407      	bmi.n	1005417a <get_connection_no+0x7e>
1005416a:	0752      	lsls	r2, r2, #29
1005416c:	0f52      	lsrs	r2, r2, #29
1005416e:	4282      	cmp	r2, r0
10054170:	d103      	bne.n	1005417a <get_connection_no+0x7e>
10054172:	07c9      	lsls	r1, r1, #31
10054174:	d100      	bne.n	10054178 <get_connection_no+0x7c>
10054176:	2008      	movs	r0, #8
10054178:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005417a:	0789      	lsls	r1, r1, #30
1005417c:	d5fb      	bpl.n	10054176 <get_connection_no+0x7a>
1005417e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054180:	20000d64 	.word	0x20000d64

10054184 <get_next_free_slot>:
10054184:	b510      	push	{r4, lr}
10054186:	480b      	ldr	r0, [pc, #44]	; (100541b4 <get_next_free_slot+0x30>)
10054188:	2100      	movs	r1, #0
1005418a:	6803      	ldr	r3, [r0, #0]
1005418c:	207b      	movs	r0, #123	; 0x7b
1005418e:	0100      	lsls	r0, r0, #4
10054190:	1818      	adds	r0, r3, r0
10054192:	7d02      	ldrb	r2, [r0, #20]
10054194:	2008      	movs	r0, #8
10054196:	33a0      	adds	r3, #160	; 0xa0
10054198:	7b1b      	ldrb	r3, [r3, #12]
1005419a:	e005      	b.n	100541a8 <get_next_free_slot+0x24>
1005419c:	07d4      	lsls	r4, r2, #31
1005419e:	d100      	bne.n	100541a2 <get_next_free_slot+0x1e>
100541a0:	4608      	mov	r0, r1
100541a2:	0852      	lsrs	r2, r2, #1
100541a4:	1c49      	adds	r1, r1, #1
100541a6:	b2c9      	uxtb	r1, r1
100541a8:	428b      	cmp	r3, r1
100541aa:	d901      	bls.n	100541b0 <get_next_free_slot+0x2c>
100541ac:	2808      	cmp	r0, #8
100541ae:	d0f5      	beq.n	1005419c <get_next_free_slot+0x18>
100541b0:	bd10      	pop	{r4, pc}
100541b2:	0000      	.short	0x0000
100541b4:	20000d64 	.word	0x20000d64

100541b8 <get_scan_connection>:
100541b8:	b570      	push	{r4, r5, r6, lr}
100541ba:	4810      	ldr	r0, [pc, #64]	; (100541fc <get_scan_connection+0x44>)
100541bc:	2409      	movs	r4, #9
100541be:	6802      	ldr	r2, [r0, #0]
100541c0:	207b      	movs	r0, #123	; 0x7b
100541c2:	0100      	lsls	r0, r0, #4
100541c4:	1811      	adds	r1, r2, r0
100541c6:	7d0b      	ldrb	r3, [r1, #20]
100541c8:	0224      	lsls	r4, r4, #8
100541ca:	2008      	movs	r0, #8
100541cc:	2100      	movs	r1, #0
100541ce:	1915      	adds	r5, r2, r4
100541d0:	32a0      	adds	r2, #160	; 0xa0
100541d2:	7b12      	ldrb	r2, [r2, #12]
100541d4:	e00e      	b.n	100541f4 <get_scan_connection+0x3c>
100541d6:	2458      	movs	r4, #88	; 0x58
100541d8:	434c      	muls	r4, r1
100541da:	6b2e      	ldr	r6, [r5, #48]	; 0x30
100541dc:	1ca4      	adds	r4, r4, #2
100541de:	5d34      	ldrb	r4, [r6, r4]
100541e0:	0764      	lsls	r4, r4, #29
100541e2:	0f64      	lsrs	r4, r4, #29
100541e4:	2c03      	cmp	r4, #3
100541e6:	d102      	bne.n	100541ee <get_scan_connection+0x36>
100541e8:	07dc      	lsls	r4, r3, #31
100541ea:	d000      	beq.n	100541ee <get_scan_connection+0x36>
100541ec:	4608      	mov	r0, r1
100541ee:	085b      	lsrs	r3, r3, #1
100541f0:	1c49      	adds	r1, r1, #1
100541f2:	b2c9      	uxtb	r1, r1
100541f4:	428a      	cmp	r2, r1
100541f6:	d8ee      	bhi.n	100541d6 <get_scan_connection+0x1e>
100541f8:	bd70      	pop	{r4, r5, r6, pc}
100541fa:	0000      	.short	0x0000
100541fc:	20000d64 	.word	0x20000d64

10054200 <is_slave>:
10054200:	490b      	ldr	r1, [pc, #44]	; (10054230 <is_slave+0x30>)
10054202:	227b      	movs	r2, #123	; 0x7b
10054204:	6809      	ldr	r1, [r1, #0]
10054206:	0112      	lsls	r2, r2, #4
10054208:	188a      	adds	r2, r1, r2
1005420a:	3220      	adds	r2, #32
1005420c:	7e92      	ldrb	r2, [r2, #26]
1005420e:	3136      	adds	r1, #54	; 0x36
10054210:	0712      	lsls	r2, r2, #28
10054212:	0f12      	lsrs	r2, r2, #28
10054214:	4282      	cmp	r2, r0
10054216:	d006      	beq.n	10054226 <is_slave+0x26>
10054218:	7809      	ldrb	r1, [r1, #0]
1005421a:	070a      	lsls	r2, r1, #28
1005421c:	d405      	bmi.n	1005422a <is_slave+0x2a>
1005421e:	0749      	lsls	r1, r1, #29
10054220:	0f49      	lsrs	r1, r1, #29
10054222:	4281      	cmp	r1, r0
10054224:	d101      	bne.n	1005422a <is_slave+0x2a>
10054226:	2001      	movs	r0, #1
10054228:	4770      	bx	lr
1005422a:	2000      	movs	r0, #0
1005422c:	4770      	bx	lr
1005422e:	0000      	.short	0x0000
10054230:	20000d64 	.word	0x20000d64

10054234 <nsar_init>:
10054234:	4804      	ldr	r0, [pc, #16]	; (10054248 <nsar_init+0x14>)
10054236:	217b      	movs	r1, #123	; 0x7b
10054238:	6800      	ldr	r0, [r0, #0]
1005423a:	0109      	lsls	r1, r1, #4
1005423c:	1841      	adds	r1, r0, r1
1005423e:	30a0      	adds	r0, #160	; 0xa0
10054240:	7b00      	ldrb	r0, [r0, #12]
10054242:	6c89      	ldr	r1, [r1, #72]	; 0x48
10054244:	5408      	strb	r0, [r1, r0]
10054246:	4770      	bx	lr
10054248:	20000d64 	.word	0x20000d64

1005424c <nsar_insertSlotListEntry>:
1005424c:	b510      	push	{r4, lr}
1005424e:	4a05      	ldr	r2, [pc, #20]	; (10054264 <nsar_insertSlotListEntry+0x18>)
10054250:	237b      	movs	r3, #123	; 0x7b
10054252:	6812      	ldr	r2, [r2, #0]
10054254:	011b      	lsls	r3, r3, #4
10054256:	18d2      	adds	r2, r2, r3
10054258:	6c93      	ldr	r3, [r2, #72]	; 0x48
1005425a:	5c5c      	ldrb	r4, [r3, r1]
1005425c:	541c      	strb	r4, [r3, r0]
1005425e:	6c92      	ldr	r2, [r2, #72]	; 0x48
10054260:	5450      	strb	r0, [r2, r1]
10054262:	bd10      	pop	{r4, pc}
10054264:	20000d64 	.word	0x20000d64

10054268 <nsar_searchBestFreeSlot>:
10054268:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005426a:	4607      	mov	r7, r0
1005426c:	4615      	mov	r5, r2
1005426e:	482d      	ldr	r0, [pc, #180]	; (10054324 <nsar_searchBestFreeSlot+0xbc>)
10054270:	227b      	movs	r2, #123	; 0x7b
10054272:	6801      	ldr	r1, [r0, #0]
10054274:	0112      	lsls	r2, r2, #4
10054276:	188e      	adds	r6, r1, r2
10054278:	b08a      	sub	sp, #40	; 0x28
1005427a:	2200      	movs	r2, #0
1005427c:	60af      	str	r7, [r5, #8]
1005427e:	9207      	str	r2, [sp, #28]
10054280:	9202      	str	r2, [sp, #8]
10054282:	31a0      	adds	r1, #160	; 0xa0
10054284:	7b09      	ldrb	r1, [r1, #12]
10054286:	466a      	mov	r2, sp
10054288:	7111      	strb	r1, [r2, #4]
1005428a:	7029      	strb	r1, [r5, #0]
1005428c:	6801      	ldr	r1, [r0, #0]
1005428e:	6cb2      	ldr	r2, [r6, #72]	; 0x48
10054290:	31a0      	adds	r1, #160	; 0xa0
10054292:	7b09      	ldrb	r1, [r1, #12]
10054294:	5c54      	ldrb	r4, [r2, r1]
10054296:	e023      	b.n	100542e0 <nsar_searchBestFreeSlot+0x78>
10054298:	6a70      	ldr	r0, [r6, #36]	; 0x24
1005429a:	0061      	lsls	r1, r4, #1
1005429c:	5a40      	ldrh	r0, [r0, r1]
1005429e:	0180      	lsls	r0, r0, #6
100542a0:	9000      	str	r0, [sp, #0]
100542a2:	6ab0      	ldr	r0, [r6, #40]	; 0x28
100542a4:	5a40      	ldrh	r0, [r0, r1]
100542a6:	9902      	ldr	r1, [sp, #8]
100542a8:	0180      	lsls	r0, r0, #6
100542aa:	9004      	str	r0, [sp, #16]
100542ac:	9800      	ldr	r0, [sp, #0]
100542ae:	1a41      	subs	r1, r0, r1
100542b0:	2005      	movs	r0, #5
100542b2:	01c0      	lsls	r0, r0, #7
100542b4:	9103      	str	r1, [sp, #12]
100542b6:	4281      	cmp	r1, r0
100542b8:	d301      	bcc.n	100542be <nsar_searchBestFreeSlot+0x56>
100542ba:	1a08      	subs	r0, r1, r0
100542bc:	9003      	str	r0, [sp, #12]
100542be:	ab05      	add	r3, sp, #20
100542c0:	462a      	mov	r2, r5
100542c2:	a901      	add	r1, sp, #4
100542c4:	980b      	ldr	r0, [sp, #44]	; 0x2c
100542c6:	f000 f86d 	bl	100543a4 <nsar_updateBestFreeSlot>
100542ca:	9904      	ldr	r1, [sp, #16]
100542cc:	9800      	ldr	r0, [sp, #0]
100542ce:	1841      	adds	r1, r0, r1
100542d0:	2005      	movs	r0, #5
100542d2:	01c0      	lsls	r0, r0, #7
100542d4:	1808      	adds	r0, r1, r0
100542d6:	9002      	str	r0, [sp, #8]
100542d8:	4668      	mov	r0, sp
100542da:	7104      	strb	r4, [r0, #4]
100542dc:	6cb0      	ldr	r0, [r6, #72]	; 0x48
100542de:	5d04      	ldrb	r4, [r0, r4]
100542e0:	4810      	ldr	r0, [pc, #64]	; (10054324 <nsar_searchBestFreeSlot+0xbc>)
100542e2:	6800      	ldr	r0, [r0, #0]
100542e4:	30a0      	adds	r0, #160	; 0xa0
100542e6:	7b00      	ldrb	r0, [r0, #12]
100542e8:	42a0      	cmp	r0, r4
100542ea:	d1d5      	bne.n	10054298 <nsar_searchBestFreeSlot+0x30>
100542ec:	9802      	ldr	r0, [sp, #8]
100542ee:	1a39      	subs	r1, r7, r0
100542f0:	2005      	movs	r0, #5
100542f2:	01c0      	lsls	r0, r0, #7
100542f4:	9103      	str	r1, [sp, #12]
100542f6:	4281      	cmp	r1, r0
100542f8:	d201      	bcs.n	100542fe <nsar_searchBestFreeSlot+0x96>
100542fa:	2000      	movs	r0, #0
100542fc:	e000      	b.n	10054300 <nsar_searchBestFreeSlot+0x98>
100542fe:	1a08      	subs	r0, r1, r0
10054300:	9003      	str	r0, [sp, #12]
10054302:	ab05      	add	r3, sp, #20
10054304:	462a      	mov	r2, r5
10054306:	a901      	add	r1, sp, #4
10054308:	980b      	ldr	r0, [sp, #44]	; 0x2c
1005430a:	f000 f84b 	bl	100543a4 <nsar_updateBestFreeSlot>
1005430e:	68a8      	ldr	r0, [r5, #8]
10054310:	1a38      	subs	r0, r7, r0
10054312:	d003      	beq.n	1005431c <nsar_searchBestFreeSlot+0xb4>
10054314:	990b      	ldr	r1, [sp, #44]	; 0x2c
10054316:	60a9      	str	r1, [r5, #8]
10054318:	b00d      	add	sp, #52	; 0x34
1005431a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005431c:	ac05      	add	r4, sp, #20
1005431e:	cc0e      	ldmia	r4!, {r1, r2, r3}
10054320:	c50e      	stmia	r5!, {r1, r2, r3}
10054322:	e7f9      	b.n	10054318 <nsar_searchBestFreeSlot+0xb0>
10054324:	20000d64 	.word	0x20000d64

10054328 <nsar_searchMaxFreeSlot>:
10054328:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005432a:	4686      	mov	lr, r0
1005432c:	481c      	ldr	r0, [pc, #112]	; (100543a0 <nsar_searchMaxFreeSlot+0x78>)
1005432e:	6801      	ldr	r1, [r0, #0]
10054330:	207b      	movs	r0, #123	; 0x7b
10054332:	0100      	lsls	r0, r0, #4
10054334:	180b      	adds	r3, r1, r0
10054336:	2000      	movs	r0, #0
10054338:	31a0      	adds	r1, #160	; 0xa0
1005433a:	9001      	str	r0, [sp, #4]
1005433c:	7b0c      	ldrb	r4, [r1, #12]
1005433e:	4669      	mov	r1, sp
10054340:	700c      	strb	r4, [r1, #0]
10054342:	6c99      	ldr	r1, [r3, #72]	; 0x48
10054344:	5d0a      	ldrb	r2, [r1, r4]
10054346:	468c      	mov	ip, r1
10054348:	2105      	movs	r1, #5
1005434a:	01c9      	lsls	r1, r1, #7
1005434c:	e017      	b.n	1005437e <nsar_searchMaxFreeSlot+0x56>
1005434e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
10054350:	0056      	lsls	r6, r2, #1
10054352:	6a9f      	ldr	r7, [r3, #40]	; 0x28
10054354:	5bad      	ldrh	r5, [r5, r6]
10054356:	5bbe      	ldrh	r6, [r7, r6]
10054358:	9f01      	ldr	r7, [sp, #4]
1005435a:	01ad      	lsls	r5, r5, #6
1005435c:	1bef      	subs	r7, r5, r7
1005435e:	01b6      	lsls	r6, r6, #6
10054360:	9702      	str	r7, [sp, #8]
10054362:	428f      	cmp	r7, r1
10054364:	d301      	bcc.n	1005436a <nsar_searchMaxFreeSlot+0x42>
10054366:	1a7f      	subs	r7, r7, r1
10054368:	9702      	str	r7, [sp, #8]
1005436a:	4287      	cmp	r7, r0
1005436c:	d300      	bcc.n	10054370 <nsar_searchMaxFreeSlot+0x48>
1005436e:	4638      	mov	r0, r7
10054370:	19ad      	adds	r5, r5, r6
10054372:	186d      	adds	r5, r5, r1
10054374:	9501      	str	r5, [sp, #4]
10054376:	466d      	mov	r5, sp
10054378:	702a      	strb	r2, [r5, #0]
1005437a:	4665      	mov	r5, ip
1005437c:	5caa      	ldrb	r2, [r5, r2]
1005437e:	4294      	cmp	r4, r2
10054380:	d1e5      	bne.n	1005434e <nsar_searchMaxFreeSlot+0x26>
10054382:	9b01      	ldr	r3, [sp, #4]
10054384:	4672      	mov	r2, lr
10054386:	1ad2      	subs	r2, r2, r3
10054388:	9202      	str	r2, [sp, #8]
1005438a:	428a      	cmp	r2, r1
1005438c:	d201      	bcs.n	10054392 <nsar_searchMaxFreeSlot+0x6a>
1005438e:	2100      	movs	r1, #0
10054390:	e000      	b.n	10054394 <nsar_searchMaxFreeSlot+0x6c>
10054392:	1a51      	subs	r1, r2, r1
10054394:	9102      	str	r1, [sp, #8]
10054396:	4281      	cmp	r1, r0
10054398:	d300      	bcc.n	1005439c <nsar_searchMaxFreeSlot+0x74>
1005439a:	4608      	mov	r0, r1
1005439c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005439e:	0000      	.short	0x0000
100543a0:	20000d64 	.word	0x20000d64

100543a4 <nsar_updateBestFreeSlot>:
100543a4:	b5f0      	push	{r4, r5, r6, r7, lr}
100543a6:	688c      	ldr	r4, [r1, #8]
100543a8:	689d      	ldr	r5, [r3, #8]
100543aa:	42a5      	cmp	r5, r4
100543ac:	d803      	bhi.n	100543b6 <nsar_updateBestFreeSlot+0x12>
100543ae:	c960      	ldmia	r1!, {r5, r6}
100543b0:	4627      	mov	r7, r4
100543b2:	c3e0      	stmia	r3!, {r5, r6, r7}
100543b4:	3908      	subs	r1, #8
100543b6:	42a0      	cmp	r0, r4
100543b8:	d804      	bhi.n	100543c4 <nsar_updateBestFreeSlot+0x20>
100543ba:	6890      	ldr	r0, [r2, #8]
100543bc:	42a0      	cmp	r0, r4
100543be:	d901      	bls.n	100543c4 <nsar_updateBestFreeSlot+0x20>
100543c0:	c90b      	ldmia	r1, {r0, r1, r3}
100543c2:	c20b      	stmia	r2!, {r0, r1, r3}
100543c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

100543c8 <nsar_updateSlotListEntry>:
100543c8:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
100543ca:	4b19      	ldr	r3, [pc, #100]	; (10054430 <nsar_updateSlotListEntry+0x68>)
100543cc:	217b      	movs	r1, #123	; 0x7b
100543ce:	6818      	ldr	r0, [r3, #0]
100543d0:	0109      	lsls	r1, r1, #4
100543d2:	4602      	mov	r2, r0
100543d4:	3236      	adds	r2, #54	; 0x36
100543d6:	1841      	adds	r1, r0, r1
100543d8:	4696      	mov	lr, r2
100543da:	30a0      	adds	r0, #160	; 0xa0
100543dc:	7b02      	ldrb	r2, [r0, #12]
100543de:	6c88      	ldr	r0, [r1, #72]	; 0x48
100543e0:	5c80      	ldrb	r0, [r0, r2]
100543e2:	460c      	mov	r4, r1
100543e4:	3420      	adds	r4, #32
100543e6:	46a4      	mov	ip, r4
100543e8:	e01b      	b.n	10054422 <nsar_updateSlotListEntry+0x5a>
100543ea:	6c8d      	ldr	r5, [r1, #72]	; 0x48
100543ec:	5c2c      	ldrb	r4, [r5, r0]
100543ee:	9e00      	ldr	r6, [sp, #0]
100543f0:	42b0      	cmp	r0, r6
100543f2:	d012      	beq.n	1005441a <nsar_updateSlotListEntry+0x52>
100543f4:	4666      	mov	r6, ip
100543f6:	7eb6      	ldrb	r6, [r6, #26]
100543f8:	0736      	lsls	r6, r6, #28
100543fa:	0f36      	lsrs	r6, r6, #28
100543fc:	4286      	cmp	r6, r0
100543fe:	d00c      	beq.n	1005441a <nsar_updateSlotListEntry+0x52>
10054400:	4676      	mov	r6, lr
10054402:	7836      	ldrb	r6, [r6, #0]
10054404:	0777      	lsls	r7, r6, #29
10054406:	0f7f      	lsrs	r7, r7, #29
10054408:	4287      	cmp	r7, r0
1005440a:	d101      	bne.n	10054410 <nsar_updateSlotListEntry+0x48>
1005440c:	0736      	lsls	r6, r6, #28
1005440e:	d504      	bpl.n	1005441a <nsar_updateSlotListEntry+0x52>
10054410:	2601      	movs	r6, #1
10054412:	7d0f      	ldrb	r7, [r1, #20]
10054414:	4086      	lsls	r6, r0
10054416:	423e      	tst	r6, r7
10054418:	d101      	bne.n	1005441e <nsar_updateSlotListEntry+0x56>
1005441a:	54ac      	strb	r4, [r5, r2]
1005441c:	e000      	b.n	10054420 <nsar_updateSlotListEntry+0x58>
1005441e:	4602      	mov	r2, r0
10054420:	4620      	mov	r0, r4
10054422:	681c      	ldr	r4, [r3, #0]
10054424:	34a0      	adds	r4, #160	; 0xa0
10054426:	7b24      	ldrb	r4, [r4, #12]
10054428:	4284      	cmp	r4, r0
1005442a:	d1de      	bne.n	100543ea <nsar_updateSlotListEntry+0x22>
1005442c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005442e:	0000      	.short	0x0000
10054430:	20000d64 	.word	0x20000d64

10054434 <request_connect_slot>:
10054434:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10054436:	491a      	ldr	r1, [pc, #104]	; (100544a0 <request_connect_slot+0x6c>)
10054438:	b086      	sub	sp, #24
1005443a:	6809      	ldr	r1, [r1, #0]
1005443c:	227b      	movs	r2, #123	; 0x7b
1005443e:	0112      	lsls	r2, r2, #4
10054440:	188c      	adds	r4, r1, r2
10054442:	4605      	mov	r5, r0
10054444:	980f      	ldr	r0, [sp, #60]	; 0x3c
10054446:	a905      	add	r1, sp, #20
10054448:	aa10      	add	r2, sp, #64	; 0x40
1005444a:	ab04      	add	r3, sp, #16
1005444c:	9300      	str	r3, [sp, #0]
1005444e:	9202      	str	r2, [sp, #8]
10054450:	9103      	str	r1, [sp, #12]
10054452:	9001      	str	r0, [sp, #4]
10054454:	ab0e      	add	r3, sp, #56	; 0x38
10054456:	aa09      	add	r2, sp, #36	; 0x24
10054458:	2100      	movs	r1, #0
1005445a:	4628      	mov	r0, r5
1005445c:	f7ff fa9a 	bl	10053994 <adapt_slot>
10054460:	0006      	movs	r6, r0
10054462:	d11a      	bne.n	1005449a <request_connect_slot+0x66>
10054464:	6a60      	ldr	r0, [r4, #36]	; 0x24
10054466:	0069      	lsls	r1, r5, #1
10054468:	5a40      	ldrh	r0, [r0, r1]
1005446a:	0180      	lsls	r0, r0, #6
1005446c:	f003 f876 	bl	1005755c <machine_time_trans>
10054470:	6821      	ldr	r1, [r4, #0]
10054472:	1845      	adds	r5, r0, r1
10054474:	2000      	movs	r0, #0
10054476:	8420      	strh	r0, [r4, #32]
10054478:	980e      	ldr	r0, [sp, #56]	; 0x38
1005447a:	61a0      	str	r0, [r4, #24]
1005447c:	4668      	mov	r0, sp
1005447e:	8a80      	ldrh	r0, [r0, #20]
10054480:	83a0      	strh	r0, [r4, #28]
10054482:	9810      	ldr	r0, [sp, #64]	; 0x40
10054484:	8460      	strh	r0, [r4, #34]	; 0x22
10054486:	4668      	mov	r0, sp
10054488:	8a00      	ldrh	r0, [r0, #16]
1005448a:	83e0      	strh	r0, [r4, #30]
1005448c:	4805      	ldr	r0, [pc, #20]	; (100544a4 <request_connect_slot+0x70>)
1005448e:	f003 f865 	bl	1005755c <machine_time_trans>
10054492:	1a28      	subs	r0, r5, r0
10054494:	0200      	lsls	r0, r0, #8
10054496:	0a00      	lsrs	r0, r0, #8
10054498:	6420      	str	r0, [r4, #64]	; 0x40
1005449a:	4630      	mov	r0, r6
1005449c:	b00a      	add	sp, #40	; 0x28
1005449e:	bd70      	pop	{r4, r5, r6, pc}
100544a0:	20000d64 	.word	0x20000d64
100544a4:	00000235 	.word	0x00000235

100544a8 <request_scan_slot>:
100544a8:	b5f0      	push	{r4, r5, r6, r7, lr}
100544aa:	4607      	mov	r7, r0
100544ac:	4821      	ldr	r0, [pc, #132]	; (10054534 <request_scan_slot+0x8c>)
100544ae:	b08b      	sub	sp, #44	; 0x2c
100544b0:	6800      	ldr	r0, [r0, #0]
100544b2:	461e      	mov	r6, r3
100544b4:	237b      	movs	r3, #123	; 0x7b
100544b6:	9109      	str	r1, [sp, #36]	; 0x24
100544b8:	2500      	movs	r5, #0
100544ba:	9108      	str	r1, [sp, #32]
100544bc:	011b      	lsls	r3, r3, #4
100544be:	4669      	mov	r1, sp
100544c0:	18c4      	adds	r4, r0, r3
100544c2:	828d      	strh	r5, [r1, #20]
100544c4:	0890      	lsrs	r0, r2, #2
100544c6:	9207      	str	r2, [sp, #28]
100544c8:	830d      	strh	r5, [r1, #24]
100544ca:	2f08      	cmp	r7, #8
100544cc:	d00f      	beq.n	100544ee <request_scan_slot+0x46>
100544ce:	a906      	add	r1, sp, #24
100544d0:	aa07      	add	r2, sp, #28
100544d2:	ab05      	add	r3, sp, #20
100544d4:	9300      	str	r3, [sp, #0]
100544d6:	9202      	str	r2, [sp, #8]
100544d8:	9103      	str	r1, [sp, #12]
100544da:	9001      	str	r0, [sp, #4]
100544dc:	ab08      	add	r3, sp, #32
100544de:	aa09      	add	r2, sp, #36	; 0x24
100544e0:	2107      	movs	r1, #7
100544e2:	4638      	mov	r0, r7
100544e4:	f7ff fa56 	bl	10053994 <adapt_slot>
100544e8:	0001      	movs	r1, r0
100544ea:	d002      	beq.n	100544f2 <request_scan_slot+0x4a>
100544ec:	e01e      	b.n	1005452c <request_scan_slot+0x84>
100544ee:	2182      	movs	r1, #130	; 0x82
100544f0:	e01c      	b.n	1005452c <request_scan_slot+0x84>
100544f2:	9808      	ldr	r0, [sp, #32]
100544f4:	6060      	str	r0, [r4, #4]
100544f6:	61a0      	str	r0, [r4, #24]
100544f8:	466a      	mov	r2, sp
100544fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
100544fc:	8b12      	ldrh	r2, [r2, #24]
100544fe:	0078      	lsls	r0, r7, #1
10054500:	521a      	strh	r2, [r3, r0]
10054502:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10054504:	9a07      	ldr	r2, [sp, #28]
10054506:	521a      	strh	r2, [r3, r0]
10054508:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1005450a:	5215      	strh	r5, [r2, r0]
1005450c:	466a      	mov	r2, sp
1005450e:	6b23      	ldr	r3, [r4, #48]	; 0x30
10054510:	8a92      	ldrh	r2, [r2, #20]
10054512:	521a      	strh	r2, [r3, r0]
10054514:	9807      	ldr	r0, [sp, #28]
10054516:	280c      	cmp	r0, #12
10054518:	d201      	bcs.n	1005451e <request_scan_slot+0x76>
1005451a:	2183      	movs	r1, #131	; 0x83
1005451c:	e002      	b.n	10054524 <request_scan_slot+0x7c>
1005451e:	2810      	cmp	r0, #16
10054520:	d900      	bls.n	10054524 <request_scan_slot+0x7c>
10054522:	2010      	movs	r0, #16
10054524:	4a04      	ldr	r2, [pc, #16]	; (10054538 <request_scan_slot+0x90>)
10054526:	4350      	muls	r0, r2
10054528:	0880      	lsrs	r0, r0, #2
1005452a:	6030      	str	r0, [r6, #0]
1005452c:	4608      	mov	r0, r1
1005452e:	b00b      	add	sp, #44	; 0x2c
10054530:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054532:	0000      	.short	0x0000
10054534:	20000d64 	.word	0x20000d64
10054538:	00000271 	.word	0x00000271

1005453c <reschedule_wakeup_slot>:
1005453c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005453e:	4f30      	ldr	r7, [pc, #192]	; (10054600 <reschedule_wakeup_slot+0xc4>)
10054540:	4606      	mov	r6, r0
10054542:	b08f      	sub	sp, #60	; 0x3c
10054544:	227b      	movs	r2, #123	; 0x7b
10054546:	6838      	ldr	r0, [r7, #0]
10054548:	0112      	lsls	r2, r2, #4
1005454a:	9d18      	ldr	r5, [sp, #96]	; 0x60
1005454c:	991a      	ldr	r1, [sp, #104]	; 0x68
1005454e:	1884      	adds	r4, r0, r2
10054550:	2e08      	cmp	r6, #8
10054552:	d021      	beq.n	10054598 <reschedule_wakeup_slot+0x5c>
10054554:	9105      	str	r1, [sp, #20]
10054556:	30a0      	adds	r0, #160	; 0xa0
10054558:	7b02      	ldrb	r2, [r0, #12]
1005455a:	a809      	add	r0, sp, #36	; 0x24
1005455c:	1c52      	adds	r2, r2, #1
1005455e:	6ca1      	ldr	r1, [r4, #72]	; 0x48
10054560:	f7ec f90f 	bl	10040782 <Osal_MemCpy>
10054564:	a807      	add	r0, sp, #28
10054566:	a912      	add	r1, sp, #72	; 0x48
10054568:	aa06      	add	r2, sp, #24
1005456a:	9200      	str	r2, [sp, #0]
1005456c:	9102      	str	r1, [sp, #8]
1005456e:	9003      	str	r0, [sp, #12]
10054570:	ab05      	add	r3, sp, #20
10054572:	9501      	str	r5, [sp, #4]
10054574:	2100      	movs	r1, #0
10054576:	4630      	mov	r0, r6
10054578:	9a19      	ldr	r2, [sp, #100]	; 0x64
1005457a:	f7ff fa0b 	bl	10053994 <adapt_slot>
1005457e:	0005      	movs	r5, r0
10054580:	d00c      	beq.n	1005459c <reschedule_wakeup_slot+0x60>
10054582:	6838      	ldr	r0, [r7, #0]
10054584:	a909      	add	r1, sp, #36	; 0x24
10054586:	30a0      	adds	r0, #160	; 0xa0
10054588:	7b02      	ldrb	r2, [r0, #12]
1005458a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
1005458c:	1c52      	adds	r2, r2, #1
1005458e:	f7ec f8f8 	bl	10040782 <Osal_MemCpy>
10054592:	4628      	mov	r0, r5
10054594:	b013      	add	sp, #76	; 0x4c
10054596:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054598:	2041      	movs	r0, #65	; 0x41
1005459a:	e7fb      	b.n	10054594 <reschedule_wakeup_slot+0x58>
1005459c:	4668      	mov	r0, sp
1005459e:	8b85      	ldrh	r5, [r0, #28]
100545a0:	81a5      	strh	r5, [r4, #12]
100545a2:	9812      	ldr	r0, [sp, #72]	; 0x48
100545a4:	81e0      	strh	r0, [r4, #14]
100545a6:	4668      	mov	r0, sp
100545a8:	8b00      	ldrh	r0, [r0, #24]
100545aa:	8260      	strh	r0, [r4, #18]
100545ac:	9805      	ldr	r0, [sp, #20]
100545ae:	60a0      	str	r0, [r4, #8]
100545b0:	4684      	mov	ip, r0
100545b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
100545b4:	0071      	lsls	r1, r6, #1
100545b6:	5a40      	ldrh	r0, [r0, r1]
100545b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
100545ba:	1c42      	adds	r2, r0, #1
100545bc:	435a      	muls	r2, r3
100545be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100545c0:	01ad      	lsls	r5, r5, #6
100545c2:	5a5b      	ldrh	r3, [r3, r1]
100545c4:	18d2      	adds	r2, r2, r3
100545c6:	b292      	uxth	r2, r2
100545c8:	1c53      	adds	r3, r2, #1
100545ca:	18c0      	adds	r0, r0, r3
100545cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
100545ce:	b287      	uxth	r7, r0
100545d0:	5a59      	ldrh	r1, [r3, r1]
100545d2:	2000      	movs	r0, #0
100545d4:	018e      	lsls	r6, r1, #6
100545d6:	6861      	ldr	r1, [r4, #4]
100545d8:	460b      	mov	r3, r1
100545da:	4379      	muls	r1, r7
100545dc:	9f11      	ldr	r7, [sp, #68]	; 0x44
100545de:	4353      	muls	r3, r2
100545e0:	087f      	lsrs	r7, r7, #1
100545e2:	19be      	adds	r6, r7, r6
100545e4:	198e      	adds	r6, r1, r6
100545e6:	18e9      	adds	r1, r5, r3
100545e8:	e002      	b.n	100545f0 <reschedule_wakeup_slot+0xb4>
100545ea:	1c40      	adds	r0, r0, #1
100545ec:	b280      	uxth	r0, r0
100545ee:	4461      	add	r1, ip
100545f0:	42b1      	cmp	r1, r6
100545f2:	d3fa      	bcc.n	100545ea <reschedule_wakeup_slot+0xae>
100545f4:	8220      	strh	r0, [r4, #16]
100545f6:	981b      	ldr	r0, [sp, #108]	; 0x6c
100545f8:	1b89      	subs	r1, r1, r6
100545fa:	6001      	str	r1, [r0, #0]
100545fc:	2000      	movs	r0, #0
100545fe:	e7c9      	b.n	10054594 <reschedule_wakeup_slot+0x58>
10054600:	20000d64 	.word	0x20000d64

10054604 <schedule_advertise_slot>:
10054604:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054606:	4e29      	ldr	r6, [pc, #164]	; (100546ac <schedule_advertise_slot+0xa8>)
10054608:	4607      	mov	r7, r0
1005460a:	b089      	sub	sp, #36	; 0x24
1005460c:	217b      	movs	r1, #123	; 0x7b
1005460e:	6830      	ldr	r0, [r6, #0]
10054610:	0109      	lsls	r1, r1, #4
10054612:	1845      	adds	r5, r0, r1
10054614:	4926      	ldr	r1, [pc, #152]	; (100546b0 <schedule_advertise_slot+0xac>)
10054616:	ab05      	add	r3, sp, #20
10054618:	aa07      	add	r2, sp, #28
1005461a:	a806      	add	r0, sp, #24
1005461c:	466c      	mov	r4, sp
1005461e:	9107      	str	r1, [sp, #28]
10054620:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10054622:	ab0c      	add	r3, sp, #48	; 0x30
10054624:	aa0b      	add	r2, sp, #44	; 0x2c
10054626:	2101      	movs	r1, #1
10054628:	4638      	mov	r0, r7
1005462a:	f7ff f9b3 	bl	10053994 <adapt_slot>
1005462e:	9000      	str	r0, [sp, #0]
10054630:	2800      	cmp	r0, #0
10054632:	d138      	bne.n	100546a6 <schedule_advertise_slot+0xa2>
10054634:	980c      	ldr	r0, [sp, #48]	; 0x30
10054636:	6068      	str	r0, [r5, #4]
10054638:	4669      	mov	r1, sp
1005463a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
1005463c:	8a89      	ldrh	r1, [r1, #20]
1005463e:	0078      	lsls	r0, r7, #1
10054640:	5211      	strh	r1, [r2, r0]
10054642:	6aaa      	ldr	r2, [r5, #40]	; 0x28
10054644:	9907      	ldr	r1, [sp, #28]
10054646:	5211      	strh	r1, [r2, r0]
10054648:	6aea      	ldr	r2, [r5, #44]	; 0x2c
1005464a:	2100      	movs	r1, #0
1005464c:	5211      	strh	r1, [r2, r0]
1005464e:	4669      	mov	r1, sp
10054650:	6b2a      	ldr	r2, [r5, #48]	; 0x30
10054652:	8b09      	ldrh	r1, [r1, #24]
10054654:	5211      	strh	r1, [r2, r0]
10054656:	2009      	movs	r0, #9
10054658:	6832      	ldr	r2, [r6, #0]
1005465a:	0200      	lsls	r0, r0, #8
1005465c:	1812      	adds	r2, r2, r0
1005465e:	463c      	mov	r4, r7
10054660:	2358      	movs	r3, #88	; 0x58
10054662:	6b12      	ldr	r2, [r2, #48]	; 0x30
10054664:	435c      	muls	r4, r3
10054666:	2100      	movs	r1, #0
10054668:	1d63      	adds	r3, r4, #5
1005466a:	54d1      	strb	r1, [r2, r3]
1005466c:	6832      	ldr	r2, [r6, #0]
1005466e:	990a      	ldr	r1, [sp, #40]	; 0x28
10054670:	1812      	adds	r2, r2, r0
10054672:	6b12      	ldr	r2, [r2, #48]	; 0x30
10054674:	1ca3      	adds	r3, r4, #2
10054676:	54d1      	strb	r1, [r2, r3]
10054678:	6832      	ldr	r2, [r6, #0]
1005467a:	2100      	movs	r1, #0
1005467c:	1812      	adds	r2, r2, r0
1005467e:	6b12      	ldr	r2, [r2, #48]	; 0x30
10054680:	43c9      	mvns	r1, r1
10054682:	3308      	adds	r3, #8
10054684:	52d1      	strh	r1, [r2, r3]
10054686:	6832      	ldr	r2, [r6, #0]
10054688:	2100      	movs	r1, #0
1005468a:	1810      	adds	r0, r2, r0
1005468c:	6b00      	ldr	r0, [r0, #48]	; 0x30
1005468e:	340f      	adds	r4, #15
10054690:	5501      	strb	r1, [r0, r4]
10054692:	b672      	cpsid	i
10054694:	7d29      	ldrb	r1, [r5, #20]
10054696:	2001      	movs	r0, #1
10054698:	40b8      	lsls	r0, r7
1005469a:	4308      	orrs	r0, r1
1005469c:	7528      	strb	r0, [r5, #20]
1005469e:	b662      	cpsie	i
100546a0:	4608      	mov	r0, r1
100546a2:	f000 f807 	bl	100546b4 <start_timebase>
100546a6:	9800      	ldr	r0, [sp, #0]
100546a8:	b00d      	add	sp, #52	; 0x34
100546aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
100546ac:	20000d64 	.word	0x20000d64
100546b0:	00001770 	.word	0x00001770

100546b4 <start_timebase>:
100546b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100546b6:	4f30      	ldr	r7, [pc, #192]	; (10054778 <start_timebase+0xc4>)
100546b8:	4605      	mov	r5, r0
100546ba:	207b      	movs	r0, #123	; 0x7b
100546bc:	683e      	ldr	r6, [r7, #0]
100546be:	0100      	lsls	r0, r0, #4
100546c0:	1834      	adds	r4, r6, r0
100546c2:	2041      	movs	r0, #65	; 0x41
100546c4:	0140      	lsls	r0, r0, #5
100546c6:	1830      	adds	r0, r6, r0
100546c8:	9000      	str	r0, [sp, #0]
100546ca:	482c      	ldr	r0, [pc, #176]	; (1005477c <start_timebase+0xc8>)
100546cc:	3636      	adds	r6, #54	; 0x36
100546ce:	f002 ff45 	bl	1005755c <machine_time_trans>
100546d2:	492b      	ldr	r1, [pc, #172]	; (10054780 <start_timebase+0xcc>)
100546d4:	7a4a      	ldrb	r2, [r1, #9]
100546d6:	00d2      	lsls	r2, r2, #3
100546d8:	1880      	adds	r0, r0, r2
100546da:	2d00      	cmp	r5, #0
100546dc:	d036      	beq.n	1005474c <start_timebase+0x98>
100546de:	7831      	ldrb	r1, [r6, #0]
100546e0:	074a      	lsls	r2, r1, #29
100546e2:	468e      	mov	lr, r1
100546e4:	213a      	movs	r1, #58	; 0x3a
100546e6:	5d09      	ldrb	r1, [r1, r4]
100546e8:	0f52      	lsrs	r2, r2, #29
100546ea:	074b      	lsls	r3, r1, #29
100546ec:	0f5b      	lsrs	r3, r3, #29
100546ee:	4694      	mov	ip, r2
100546f0:	429a      	cmp	r2, r3
100546f2:	d106      	bne.n	10054702 <start_timebase+0x4e>
100546f4:	070e      	lsls	r6, r1, #28
100546f6:	0f36      	lsrs	r6, r6, #28
100546f8:	2201      	movs	r2, #1
100546fa:	40b2      	lsls	r2, r6
100546fc:	462e      	mov	r6, r5
100546fe:	4396      	bics	r6, r2
10054700:	d00d      	beq.n	1005471e <start_timebase+0x6a>
10054702:	459c      	cmp	ip, r3
10054704:	d021      	beq.n	1005474a <start_timebase+0x96>
10054706:	070b      	lsls	r3, r1, #28
10054708:	2101      	movs	r1, #1
1005470a:	0f1b      	lsrs	r3, r3, #28
1005470c:	460a      	mov	r2, r1
1005470e:	409a      	lsls	r2, r3
10054710:	4673      	mov	r3, lr
10054712:	071b      	lsls	r3, r3, #28
10054714:	0f1b      	lsrs	r3, r3, #28
10054716:	4099      	lsls	r1, r3
10054718:	430a      	orrs	r2, r1
1005471a:	4395      	bics	r5, r2
1005471c:	d115      	bne.n	1005474a <start_timebase+0x96>
1005471e:	2109      	movs	r1, #9
10054720:	06c9      	lsls	r1, r1, #27
10054722:	6909      	ldr	r1, [r1, #16]
10054724:	2201      	movs	r2, #1
10054726:	1808      	adds	r0, r1, r0
10054728:	0200      	lsls	r0, r0, #8
1005472a:	2100      	movs	r1, #0
1005472c:	0a00      	lsrs	r0, r0, #8
1005472e:	6461      	str	r1, [r4, #68]	; 0x44
10054730:	6020      	str	r0, [r4, #0]
10054732:	6839      	ldr	r1, [r7, #0]
10054734:	02d2      	lsls	r2, r2, #11
10054736:	1889      	adds	r1, r1, r2
10054738:	6f09      	ldr	r1, [r1, #112]	; 0x70
1005473a:	1a40      	subs	r0, r0, r1
1005473c:	0200      	lsls	r0, r0, #8
1005473e:	1200      	asrs	r0, r0, #8
10054740:	2800      	cmp	r0, #0
10054742:	dc02      	bgt.n	1005474a <start_timebase+0x96>
10054744:	2000      	movs	r0, #0
10054746:	f008 fa67 	bl	1005cc18 <advance_wakeup_timer>
1005474a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005474c:	2248      	movs	r2, #72	; 0x48
1005474e:	800a      	strh	r2, [r1, #0]
10054750:	0611      	lsls	r1, r2, #24
10054752:	6909      	ldr	r1, [r1, #16]
10054754:	2500      	movs	r5, #0
10054756:	1808      	adds	r0, r1, r0
10054758:	0200      	lsls	r0, r0, #8
1005475a:	9900      	ldr	r1, [sp, #0]
1005475c:	0a00      	lsrs	r0, r0, #8
1005475e:	6508      	str	r0, [r1, #80]	; 0x50
10054760:	6465      	str	r5, [r4, #68]	; 0x44
10054762:	6020      	str	r0, [r4, #0]
10054764:	4628      	mov	r0, r5
10054766:	f008 fa57 	bl	1005cc18 <advance_wakeup_timer>
1005476a:	6838      	ldr	r0, [r7, #0]
1005476c:	3068      	adds	r0, #104	; 0x68
1005476e:	7145      	strb	r5, [r0, #5]
10054770:	f7f8 f912 	bl	1004c998 <hal_radio_activity_state_callback_check>
10054774:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054776:	0000      	.short	0x0000
10054778:	20000d64 	.word	0x20000d64
1005477c:	00000266 	.word	0x00000266
10054780:	200000c0 	.word	0x200000c0

10054784 <swap_u16>:
10054784:	8802      	ldrh	r2, [r0, #0]
10054786:	880b      	ldrh	r3, [r1, #0]
10054788:	8003      	strh	r3, [r0, #0]
1005478a:	800a      	strh	r2, [r1, #0]
1005478c:	4770      	bx	lr
	...

10054790 <timebase_start_connect>:
10054790:	480b      	ldr	r0, [pc, #44]	; (100547c0 <timebase_start_connect+0x30>)
10054792:	217b      	movs	r1, #123	; 0x7b
10054794:	6800      	ldr	r0, [r0, #0]
10054796:	0109      	lsls	r1, r1, #4
10054798:	1840      	adds	r0, r0, r1
1005479a:	490a      	ldr	r1, [pc, #40]	; (100547c4 <timebase_start_connect+0x34>)
1005479c:	8809      	ldrh	r1, [r1, #0]
1005479e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
100547a0:	0749      	lsls	r1, r1, #29
100547a2:	8c02      	ldrh	r2, [r0, #32]
100547a4:	0f09      	lsrs	r1, r1, #28
100547a6:	525a      	strh	r2, [r3, r1]
100547a8:	6b03      	ldr	r3, [r0, #48]	; 0x30
100547aa:	8bc2      	ldrh	r2, [r0, #30]
100547ac:	525a      	strh	r2, [r3, r1]
100547ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
100547b0:	8c42      	ldrh	r2, [r0, #34]	; 0x22
100547b2:	525a      	strh	r2, [r3, r1]
100547b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
100547b6:	8b82      	ldrh	r2, [r0, #28]
100547b8:	525a      	strh	r2, [r3, r1]
100547ba:	6981      	ldr	r1, [r0, #24]
100547bc:	6041      	str	r1, [r0, #4]
100547be:	4770      	bx	lr
100547c0:	20000d64 	.word	0x20000d64
100547c4:	200000c0 	.word	0x200000c0

100547c8 <Flash_Write_Flagged>:
100547c8:	b570      	push	{r4, r5, r6, lr}
100547ca:	460c      	mov	r4, r1
100547cc:	4e0b      	ldr	r6, [pc, #44]	; (100547fc <Flash_Write_Flagged+0x34>)
100547ce:	0081      	lsls	r1, r0, #2
100547d0:	480b      	ldr	r0, [pc, #44]	; (10054800 <Flash_Write_Flagged+0x38>)
100547d2:	6832      	ldr	r2, [r6, #0]
100547d4:	180d      	adds	r5, r1, r0
100547d6:	2301      	movs	r3, #1
100547d8:	3220      	adds	r2, #32
100547da:	77d3      	strb	r3, [r2, #31]
100547dc:	4621      	mov	r1, r4
100547de:	4628      	mov	r0, r5
100547e0:	f7ec fd10 	bl	10041204 <FLASH_ProgramWord>
100547e4:	6828      	ldr	r0, [r5, #0]
100547e6:	2100      	movs	r1, #0
100547e8:	4284      	cmp	r4, r0
100547ea:	d101      	bne.n	100547f0 <Flash_Write_Flagged+0x28>
100547ec:	4608      	mov	r0, r1
100547ee:	e000      	b.n	100547f2 <Flash_Write_Flagged+0x2a>
100547f0:	20fb      	movs	r0, #251	; 0xfb
100547f2:	6832      	ldr	r2, [r6, #0]
100547f4:	3220      	adds	r2, #32
100547f6:	77d1      	strb	r1, [r2, #31]
100547f8:	bd70      	pop	{r4, r5, r6, pc}
100547fa:	0000      	.short	0x0000
100547fc:	20000d64 	.word	0x20000d64
10054800:	10040000 	.word	0x10040000

10054804 <Is_Flash_Write_On_Going>:
10054804:	4802      	ldr	r0, [pc, #8]	; (10054810 <Is_Flash_Write_On_Going+0xc>)
10054806:	6800      	ldr	r0, [r0, #0]
10054808:	3020      	adds	r0, #32
1005480a:	7fc0      	ldrb	r0, [r0, #31]
1005480c:	4770      	bx	lr
1005480e:	0000      	.short	0x0000
10054810:	20000d64 	.word	0x20000d64

10054814 <BLEPLAT_PKA_Get_Current_Operation>:
10054814:	4903      	ldr	r1, [pc, #12]	; (10054824 <BLEPLAT_PKA_Get_Current_Operation+0x10>)
10054816:	2800      	cmp	r0, #0
10054818:	780a      	ldrb	r2, [r1, #0]
1005481a:	d001      	beq.n	10054820 <BLEPLAT_PKA_Get_Current_Operation+0xc>
1005481c:	2000      	movs	r0, #0
1005481e:	7008      	strb	r0, [r1, #0]
10054820:	4610      	mov	r0, r2
10054822:	4770      	bx	lr
10054824:	20000d68 	.word	0x20000d68

10054828 <BLEPLAT_PKA_Start_P256_DHKey_Generation>:
10054828:	b570      	push	{r4, r5, r6, lr}
1005482a:	4c12      	ldr	r4, [pc, #72]	; (10054874 <BLEPLAT_PKA_Start_P256_DHKey_Generation+0x4c>)
1005482c:	460e      	mov	r6, r1
1005482e:	7821      	ldrb	r1, [r4, #0]
10054830:	2501      	movs	r5, #1
10054832:	2900      	cmp	r1, #0
10054834:	d11b      	bne.n	1005486e <BLEPLAT_PKA_Start_P256_DHKey_Generation+0x46>
10054836:	4601      	mov	r1, r0
10054838:	2001      	movs	r0, #1
1005483a:	f7ec fda5 	bl	10041388 <PKA_SetData>
1005483e:	7060      	strb	r0, [r4, #1]
10054840:	4631      	mov	r1, r6
10054842:	2002      	movs	r0, #2
10054844:	f7ec fda0 	bl	10041388 <PKA_SetData>
10054848:	7861      	ldrb	r1, [r4, #1]
1005484a:	1840      	adds	r0, r0, r1
1005484c:	7060      	strb	r0, [r4, #1]
1005484e:	4631      	mov	r1, r6
10054850:	3120      	adds	r1, #32
10054852:	2003      	movs	r0, #3
10054854:	f7ec fd98 	bl	10041388 <PKA_SetData>
10054858:	7861      	ldrb	r1, [r4, #1]
1005485a:	1840      	adds	r0, r0, r1
1005485c:	0600      	lsls	r0, r0, #24
1005485e:	0e00      	lsrs	r0, r0, #24
10054860:	7060      	strb	r0, [r4, #1]
10054862:	d104      	bne.n	1005486e <BLEPLAT_PKA_Start_P256_DHKey_Generation+0x46>
10054864:	f7ec fd70 	bl	10041348 <PKA_StartProcessing>
10054868:	2002      	movs	r0, #2
1005486a:	7020      	strb	r0, [r4, #0]
1005486c:	2500      	movs	r5, #0
1005486e:	4628      	mov	r0, r5
10054870:	bd70      	pop	{r4, r5, r6, pc}
10054872:	0000      	.short	0x0000
10054874:	20000d68 	.word	0x20000d68

10054878 <BLEPLAT_PKA_Start_P256_Public_Key_Generation>:
10054878:	b570      	push	{r4, r5, r6, lr}
1005487a:	4d18      	ldr	r5, [pc, #96]	; (100548dc <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0x64>)
1005487c:	b090      	sub	sp, #64	; 0x40
1005487e:	7828      	ldrb	r0, [r5, #0]
10054880:	2800      	cmp	r0, #0
10054882:	d002      	beq.n	1005488a <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0x12>
10054884:	2001      	movs	r0, #1
10054886:	b010      	add	sp, #64	; 0x40
10054888:	bd70      	pop	{r4, r5, r6, pc}
1005488a:	466e      	mov	r6, sp
1005488c:	2400      	movs	r4, #0
1005488e:	f7f8 f85a 	bl	1004c946 <Hal_Get_Random_Number32>
10054892:	00a1      	lsls	r1, r4, #2
10054894:	1c64      	adds	r4, r4, #1
10054896:	5070      	str	r0, [r6, r1]
10054898:	2c08      	cmp	r4, #8
1005489a:	dbf8      	blt.n	1005488e <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0x16>
1005489c:	4669      	mov	r1, sp
1005489e:	2001      	movs	r0, #1
100548a0:	f7ec fd72 	bl	10041388 <PKA_SetData>
100548a4:	2801      	cmp	r0, #1
100548a6:	d0f1      	beq.n	1005488c <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0x14>
100548a8:	2220      	movs	r2, #32
100548aa:	490d      	ldr	r1, [pc, #52]	; (100548e0 <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0x68>)
100548ac:	4668      	mov	r0, sp
100548ae:	f7f1 ff5c 	bl	1004676a <__aeabi_memcpy>
100548b2:	490b      	ldr	r1, [pc, #44]	; (100548e0 <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0x68>)
100548b4:	2220      	movs	r2, #32
100548b6:	3120      	adds	r1, #32
100548b8:	a808      	add	r0, sp, #32
100548ba:	f7f1 ff56 	bl	1004676a <__aeabi_memcpy>
100548be:	4669      	mov	r1, sp
100548c0:	2002      	movs	r0, #2
100548c2:	f7ec fd61 	bl	10041388 <PKA_SetData>
100548c6:	a908      	add	r1, sp, #32
100548c8:	2003      	movs	r0, #3
100548ca:	f7ec fd5d 	bl	10041388 <PKA_SetData>
100548ce:	f7ec fd3b 	bl	10041348 <PKA_StartProcessing>
100548d2:	2001      	movs	r0, #1
100548d4:	7028      	strb	r0, [r5, #0]
100548d6:	2000      	movs	r0, #0
100548d8:	e7d5      	b.n	10054886 <BLEPLAT_PKA_Start_P256_Public_Key_Generation+0xe>
100548da:	0000      	.short	0x0000
100548dc:	20000d68 	.word	0x20000d68
100548e0:	1005fe74 	.word	0x1005fe74

100548e4 <PM_Check_And_Set>:
100548e4:	b570      	push	{r4, r5, r6, lr}
100548e6:	4a12      	ldr	r2, [pc, #72]	; (10054930 <PM_Check_And_Set+0x4c>)
100548e8:	2309      	movs	r3, #9
100548ea:	6812      	ldr	r2, [r2, #0]
100548ec:	021b      	lsls	r3, r3, #8
100548ee:	18d2      	adds	r2, r2, r3
100548f0:	2301      	movs	r3, #1
100548f2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
100548f4:	4383      	bics	r3, r0
100548f6:	005b      	lsls	r3, r3, #1
100548f8:	1e49      	subs	r1, r1, #1
100548fa:	2441      	movs	r4, #65	; 0x41
100548fc:	189b      	adds	r3, r3, r2
100548fe:	0949      	lsrs	r1, r1, #5
10054900:	1c49      	adds	r1, r1, #1
10054902:	b2c9      	uxtb	r1, r1
10054904:	b672      	cpsid	i
10054906:	7915      	ldrb	r5, [r2, #4]
10054908:	428d      	cmp	r5, r1
1005490a:	d30e      	bcc.n	1005492a <PM_Check_And_Set+0x46>
1005490c:	781e      	ldrb	r6, [r3, #0]
1005490e:	785b      	ldrb	r3, [r3, #1]
10054910:	19ad      	adds	r5, r5, r6
10054912:	b2ed      	uxtb	r5, r5
10054914:	185b      	adds	r3, r3, r1
10054916:	42ab      	cmp	r3, r5
10054918:	d807      	bhi.n	1005492a <PM_Check_And_Set+0x46>
1005491a:	0040      	lsls	r0, r0, #1
1005491c:	5c13      	ldrb	r3, [r2, r0]
1005491e:	2400      	movs	r4, #0
10054920:	185b      	adds	r3, r3, r1
10054922:	5413      	strb	r3, [r2, r0]
10054924:	7910      	ldrb	r0, [r2, #4]
10054926:	1a40      	subs	r0, r0, r1
10054928:	7110      	strb	r0, [r2, #4]
1005492a:	b662      	cpsie	i
1005492c:	4620      	mov	r0, r4
1005492e:	bd70      	pop	{r4, r5, r6, pc}
10054930:	20000d64 	.word	0x20000d64

10054934 <PM_Clone_Pckt>:
10054934:	b570      	push	{r4, r5, r6, lr}
10054936:	000d      	movs	r5, r1
10054938:	4604      	mov	r4, r0
1005493a:	d00a      	beq.n	10054952 <PM_Clone_Pckt+0x1e>
1005493c:	2c00      	cmp	r4, #0
1005493e:	d008      	beq.n	10054952 <PM_Clone_Pckt+0x1e>
10054940:	68a9      	ldr	r1, [r5, #8]
10054942:	68a0      	ldr	r0, [r4, #8]
10054944:	f7fe fe20 	bl	10053588 <Mem_Buff_Clone>
10054948:	2800      	cmp	r0, #0
1005494a:	d101      	bne.n	10054950 <PM_Clone_Pckt+0x1c>
1005494c:	88e9      	ldrh	r1, [r5, #6]
1005494e:	80e1      	strh	r1, [r4, #6]
10054950:	bd70      	pop	{r4, r5, r6, pc}
10054952:	2041      	movs	r0, #65	; 0x41
10054954:	bd70      	pop	{r4, r5, r6, pc}
	...

10054958 <PM_Compact>:
10054958:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1005495a:	460f      	mov	r7, r1
1005495c:	4812      	ldr	r0, [pc, #72]	; (100549a8 <PM_Compact+0x50>)
1005495e:	2109      	movs	r1, #9
10054960:	6800      	ldr	r0, [r0, #0]
10054962:	0209      	lsls	r1, r1, #8
10054964:	1840      	adds	r0, r0, r1
10054966:	68be      	ldr	r6, [r7, #8]
10054968:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
1005496a:	b081      	sub	sp, #4
1005496c:	4630      	mov	r0, r6
1005496e:	f7fe fed4 	bl	1005371a <Mem_Buff_Get_Chain_Count>
10054972:	4605      	mov	r5, r0
10054974:	88f8      	ldrh	r0, [r7, #6]
10054976:	1e40      	subs	r0, r0, #1
10054978:	0940      	lsrs	r0, r0, #5
1005497a:	1c40      	adds	r0, r0, #1
1005497c:	b2c0      	uxtb	r0, r0
1005497e:	42a8      	cmp	r0, r5
10054980:	d211      	bcs.n	100549a6 <PM_Compact+0x4e>
10054982:	4631      	mov	r1, r6
10054984:	68a0      	ldr	r0, [r4, #8]
10054986:	f7fe fe54 	bl	10053632 <Mem_Buff_Compact>
1005498a:	4630      	mov	r0, r6
1005498c:	f7fe fec5 	bl	1005371a <Mem_Buff_Get_Chain_Count>
10054990:	1a28      	subs	r0, r5, r0
10054992:	b672      	cpsid	i
10054994:	9901      	ldr	r1, [sp, #4]
10054996:	0049      	lsls	r1, r1, #1
10054998:	5c62      	ldrb	r2, [r4, r1]
1005499a:	1a12      	subs	r2, r2, r0
1005499c:	5462      	strb	r2, [r4, r1]
1005499e:	7921      	ldrb	r1, [r4, #4]
100549a0:	1808      	adds	r0, r1, r0
100549a2:	7120      	strb	r0, [r4, #4]
100549a4:	b662      	cpsie	i
100549a6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100549a8:	20000d64 	.word	0x20000d64

100549ac <PM_Copy_Pckt_Data>:
100549ac:	b510      	push	{r4, lr}
100549ae:	461c      	mov	r4, r3
100549b0:	4613      	mov	r3, r2
100549b2:	460a      	mov	r2, r1
100549b4:	6880      	ldr	r0, [r0, #8]
100549b6:	4621      	mov	r1, r4
100549b8:	f7fe fef8 	bl	100537ac <Mem_Buff_Read>
100549bc:	bd10      	pop	{r4, pc}
	...

100549c0 <PM_Eng_Config>:
100549c0:	4a04      	ldr	r2, [pc, #16]	; (100549d4 <PM_Eng_Config+0x14>)
100549c2:	2309      	movs	r3, #9
100549c4:	6812      	ldr	r2, [r2, #0]
100549c6:	021b      	lsls	r3, r3, #8
100549c8:	18d2      	adds	r2, r2, r3
100549ca:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
100549cc:	0040      	lsls	r0, r0, #1
100549ce:	1880      	adds	r0, r0, r2
100549d0:	7041      	strb	r1, [r0, #1]
100549d2:	4770      	bx	lr
100549d4:	20000d64 	.word	0x20000d64

100549d8 <PM_Extract_Pdu_MBuff>:
100549d8:	2200      	movs	r2, #0
100549da:	6881      	ldr	r1, [r0, #8]
100549dc:	3808      	subs	r0, #8
100549de:	6002      	str	r2, [r0, #0]
100549e0:	4608      	mov	r0, r1
100549e2:	4770      	bx	lr

100549e4 <PM_Get_Available_Buffer>:
100549e4:	490d      	ldr	r1, [pc, #52]	; (10054a1c <PM_Get_Available_Buffer+0x38>)
100549e6:	2209      	movs	r2, #9
100549e8:	6809      	ldr	r1, [r1, #0]
100549ea:	0212      	lsls	r2, r2, #8
100549ec:	1889      	adds	r1, r1, r2
100549ee:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
100549f0:	b672      	cpsid	i
100549f2:	2201      	movs	r2, #1
100549f4:	4382      	bics	r2, r0
100549f6:	0050      	lsls	r0, r2, #1
100549f8:	1842      	adds	r2, r0, r1
100549fa:	4b08      	ldr	r3, [pc, #32]	; (10054a1c <PM_Get_Available_Buffer+0x38>)
100549fc:	5c09      	ldrb	r1, [r1, r0]
100549fe:	2009      	movs	r0, #9
10054a00:	681b      	ldr	r3, [r3, #0]
10054a02:	0200      	lsls	r0, r0, #8
10054a04:	1818      	adds	r0, r3, r0
10054a06:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
10054a08:	7852      	ldrb	r2, [r2, #1]
10054a0a:	7900      	ldrb	r0, [r0, #4]
10054a0c:	428a      	cmp	r2, r1
10054a0e:	d902      	bls.n	10054a16 <PM_Get_Available_Buffer+0x32>
10054a10:	1a51      	subs	r1, r2, r1
10054a12:	1a40      	subs	r0, r0, r1
10054a14:	b2c0      	uxtb	r0, r0
10054a16:	b662      	cpsie	i
10054a18:	4770      	bx	lr
10054a1a:	0000      	.short	0x0000
10054a1c:	20000d64 	.word	0x20000d64

10054a20 <PM_Get_Mem_Buff_Count>:
10054a20:	b510      	push	{r4, lr}
10054a22:	6880      	ldr	r0, [r0, #8]
10054a24:	f7fe fe79 	bl	1005371a <Mem_Buff_Get_Chain_Count>
10054a28:	bd10      	pop	{r4, pc}
	...

10054a2c <PM_Get_Pckt>:
10054a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054a2e:	460d      	mov	r5, r1
10054a30:	490e      	ldr	r1, [pc, #56]	; (10054a6c <PM_Get_Pckt+0x40>)
10054a32:	2309      	movs	r3, #9
10054a34:	6809      	ldr	r1, [r1, #0]
10054a36:	021b      	lsls	r3, r3, #8
10054a38:	18c9      	adds	r1, r1, r3
10054a3a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
10054a3c:	211f      	movs	r1, #31
10054a3e:	1e52      	subs	r2, r2, #1
10054a40:	430a      	orrs	r2, r1
10054a42:	321d      	adds	r2, #29
10054a44:	b297      	uxth	r7, r2
10054a46:	2400      	movs	r4, #0
10054a48:	4639      	mov	r1, r7
10054a4a:	f7ff ff4b 	bl	100548e4 <PM_Check_And_Set>
10054a4e:	2800      	cmp	r0, #0
10054a50:	d10a      	bne.n	10054a68 <PM_Get_Pckt+0x3c>
10054a52:	4639      	mov	r1, r7
10054a54:	68b0      	ldr	r0, [r6, #8]
10054a56:	f7fe fe49 	bl	100536ec <Mem_Buff_Get>
10054a5a:	4604      	mov	r4, r0
10054a5c:	3408      	adds	r4, #8
10054a5e:	6800      	ldr	r0, [r0, #0]
10054a60:	60a0      	str	r0, [r4, #8]
10054a62:	2000      	movs	r0, #0
10054a64:	74e0      	strb	r0, [r4, #19]
10054a66:	80a5      	strh	r5, [r4, #4]
10054a68:	4620      	mov	r0, r4
10054a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054a6c:	20000d64 	.word	0x20000d64

10054a70 <PM_Init>:
10054a70:	b570      	push	{r4, r5, r6, lr}
10054a72:	4817      	ldr	r0, [pc, #92]	; (10054ad0 <PM_Init+0x60>)
10054a74:	2109      	movs	r1, #9
10054a76:	6800      	ldr	r0, [r0, #0]
10054a78:	0209      	lsls	r1, r1, #8
10054a7a:	1840      	adds	r0, r0, r1
10054a7c:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
10054a7e:	2204      	movs	r2, #4
10054a80:	2100      	movs	r1, #0
10054a82:	4620      	mov	r0, r4
10054a84:	f7eb fe81 	bl	1004078a <Osal_MemSet>
10054a88:	4d12      	ldr	r5, [pc, #72]	; (10054ad4 <PM_Init+0x64>)
10054a8a:	8c68      	ldrh	r0, [r5, #34]	; 0x22
10054a8c:	3023      	adds	r0, #35	; 0x23
10054a8e:	0940      	lsrs	r0, r0, #5
10054a90:	1c40      	adds	r0, r0, #1
10054a92:	b2c1      	uxtb	r1, r0
10054a94:	2000      	movs	r0, #0
10054a96:	f7ff ff93 	bl	100549c0 <PM_Eng_Config>
10054a9a:	8c68      	ldrh	r0, [r5, #34]	; 0x22
10054a9c:	7fa9      	ldrb	r1, [r5, #30]
10054a9e:	3023      	adds	r0, #35	; 0x23
10054aa0:	0940      	lsrs	r0, r0, #5
10054aa2:	1c80      	adds	r0, r0, #2
10054aa4:	4348      	muls	r0, r1
10054aa6:	1c40      	adds	r0, r0, #1
10054aa8:	b2c1      	uxtb	r1, r0
10054aaa:	2001      	movs	r0, #1
10054aac:	f7ff ff88 	bl	100549c0 <PM_Eng_Config>
10054ab0:	4628      	mov	r0, r5
10054ab2:	3020      	adds	r0, #32
10054ab4:	68a1      	ldr	r1, [r4, #8]
10054ab6:	7840      	ldrb	r0, [r0, #1]
10054ab8:	7048      	strb	r0, [r1, #1]
10054aba:	68a0      	ldr	r0, [r4, #8]
10054abc:	f7fe fe41 	bl	10053742 <Mem_Buff_Init>
10054ac0:	68a0      	ldr	r0, [r4, #8]
10054ac2:	b672      	cpsid	i
10054ac4:	7800      	ldrb	r0, [r0, #0]
10054ac6:	b662      	cpsie	i
10054ac8:	7120      	strb	r0, [r4, #4]
10054aca:	2000      	movs	r0, #0
10054acc:	bd70      	pop	{r4, r5, r6, pc}
10054ace:	0000      	.short	0x0000
10054ad0:	20000d64 	.word	0x20000d64
10054ad4:	200002dc 	.word	0x200002dc

10054ad8 <PM_Pckt_Cmp>:
10054ad8:	b510      	push	{r4, lr}
10054ada:	6880      	ldr	r0, [r0, #8]
10054adc:	f7fe fd6d 	bl	100535ba <Mem_Buff_Cmp>
10054ae0:	bd10      	pop	{r4, pc}
	...

10054ae4 <PM_Release_Acl_Pckt>:
10054ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054ae6:	460e      	mov	r6, r1
10054ae8:	490c      	ldr	r1, [pc, #48]	; (10054b1c <PM_Release_Acl_Pckt+0x38>)
10054aea:	2209      	movs	r2, #9
10054aec:	6809      	ldr	r1, [r1, #0]
10054aee:	0212      	lsls	r2, r2, #8
10054af0:	1889      	adds	r1, r1, r2
10054af2:	3808      	subs	r0, #8
10054af4:	4607      	mov	r7, r0
10054af6:	6acc      	ldr	r4, [r1, #44]	; 0x2c
10054af8:	f7fe fe0f 	bl	1005371a <Mem_Buff_Get_Chain_Count>
10054afc:	4605      	mov	r5, r0
10054afe:	4639      	mov	r1, r7
10054b00:	68a0      	ldr	r0, [r4, #8]
10054b02:	f7fe fe84 	bl	1005380e <Mem_Buff_Release>
10054b06:	b672      	cpsid	i
10054b08:	0071      	lsls	r1, r6, #1
10054b0a:	5c60      	ldrb	r0, [r4, r1]
10054b0c:	1b40      	subs	r0, r0, r5
10054b0e:	5460      	strb	r0, [r4, r1]
10054b10:	7920      	ldrb	r0, [r4, #4]
10054b12:	1940      	adds	r0, r0, r5
10054b14:	7120      	strb	r0, [r4, #4]
10054b16:	b662      	cpsie	i
10054b18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054b1a:	0000      	.short	0x0000
10054b1c:	20000d64 	.word	0x20000d64

10054b20 <PM_Resize_Pckt_Pdu_Size>:
10054b20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10054b22:	4607      	mov	r7, r0
10054b24:	4818      	ldr	r0, [pc, #96]	; (10054b88 <PM_Resize_Pckt_Pdu_Size+0x68>)
10054b26:	2109      	movs	r1, #9
10054b28:	6800      	ldr	r0, [r0, #0]
10054b2a:	0209      	lsls	r1, r1, #8
10054b2c:	1840      	adds	r0, r0, r1
10054b2e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
10054b30:	2041      	movs	r0, #65	; 0x41
10054b32:	4616      	mov	r6, r2
10054b34:	2f00      	cmp	r7, #0
10054b36:	d011      	beq.n	10054b5c <PM_Resize_Pckt_Pdu_Size+0x3c>
10054b38:	4638      	mov	r0, r7
10054b3a:	f7fe fdf8 	bl	1005372e <Mem_Buff_Get_Chain_Size>
10054b3e:	4605      	mov	r5, r0
10054b40:	42b0      	cmp	r0, r6
10054b42:	d20c      	bcs.n	10054b5e <PM_Resize_Pckt_Pdu_Size+0x3e>
10054b44:	1a30      	subs	r0, r6, r0
10054b46:	b281      	uxth	r1, r0
10054b48:	9801      	ldr	r0, [sp, #4]
10054b4a:	f7ff fecb 	bl	100548e4 <PM_Check_And_Set>
10054b4e:	2800      	cmp	r0, #0
10054b50:	d104      	bne.n	10054b5c <PM_Resize_Pckt_Pdu_Size+0x3c>
10054b52:	4632      	mov	r2, r6
10054b54:	4639      	mov	r1, r7
10054b56:	68a0      	ldr	r0, [r4, #8]
10054b58:	f7fe fe74 	bl	10053844 <Mem_Buff_Resize>
10054b5c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10054b5e:	4632      	mov	r2, r6
10054b60:	4639      	mov	r1, r7
10054b62:	68a0      	ldr	r0, [r4, #8]
10054b64:	f7fe fe6e 	bl	10053844 <Mem_Buff_Resize>
10054b68:	1e6d      	subs	r5, r5, #1
10054b6a:	1e76      	subs	r6, r6, #1
10054b6c:	0969      	lsrs	r1, r5, #5
10054b6e:	0972      	lsrs	r2, r6, #5
10054b70:	1a89      	subs	r1, r1, r2
10054b72:	b672      	cpsid	i
10054b74:	9a01      	ldr	r2, [sp, #4]
10054b76:	0052      	lsls	r2, r2, #1
10054b78:	5ca3      	ldrb	r3, [r4, r2]
10054b7a:	1a5b      	subs	r3, r3, r1
10054b7c:	54a3      	strb	r3, [r4, r2]
10054b7e:	7922      	ldrb	r2, [r4, #4]
10054b80:	1851      	adds	r1, r2, r1
10054b82:	7121      	strb	r1, [r4, #4]
10054b84:	b662      	cpsie	i
10054b86:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10054b88:	20000d64 	.word	0x20000d64

10054b8c <PM_Write_Pckt_Data>:
10054b8c:	b510      	push	{r4, lr}
10054b8e:	461c      	mov	r4, r3
10054b90:	4613      	mov	r3, r2
10054b92:	460a      	mov	r2, r1
10054b94:	6880      	ldr	r0, [r0, #8]
10054b96:	4621      	mov	r1, r4
10054b98:	f7fe fe9b 	bl	100538d2 <Mem_Buff_Write>
10054b9c:	bd10      	pop	{r4, pc}
	...

10054ba0 <ATT_fill_exchg_mtu_req>:
10054ba0:	b510      	push	{r4, lr}
10054ba2:	4808      	ldr	r0, [pc, #32]	; (10054bc4 <ATT_fill_exchg_mtu_req+0x24>)
10054ba4:	460c      	mov	r4, r1
10054ba6:	6800      	ldr	r0, [r0, #0]
10054ba8:	4907      	ldr	r1, [pc, #28]	; (10054bc8 <ATT_fill_exchg_mtu_req+0x28>)
10054baa:	2202      	movs	r2, #2
10054bac:	1841      	adds	r1, r0, r1
10054bae:	68a0      	ldr	r0, [r4, #8]
10054bb0:	315c      	adds	r1, #92	; 0x5c
10054bb2:	7302      	strb	r2, [r0, #12]
10054bb4:	68a0      	ldr	r0, [r4, #8]
10054bb6:	300d      	adds	r0, #13
10054bb8:	f7eb fde3 	bl	10040782 <Osal_MemCpy>
10054bbc:	2003      	movs	r0, #3
10054bbe:	80e0      	strh	r0, [r4, #6]
10054bc0:	bd10      	pop	{r4, pc}
10054bc2:	0000      	.short	0x0000
10054bc4:	20000d64 	.word	0x20000d64
10054bc8:	0000072c 	.word	0x0000072c

10054bcc <Accu_Handles_Requiring_Auth>:
10054bcc:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054bce:	88c8      	ldrh	r0, [r1, #6]
10054bd0:	2500      	movs	r5, #0
10054bd2:	1e40      	subs	r0, r0, #1
10054bd4:	b083      	sub	sp, #12
10054bd6:	460e      	mov	r6, r1
10054bd8:	b287      	uxth	r7, r0
10054bda:	2401      	movs	r4, #1
10054bdc:	e027      	b.n	10054c2e <Accu_Handles_Requiring_Auth+0x62>
10054bde:	68b0      	ldr	r0, [r6, #8]
10054be0:	2202      	movs	r2, #2
10054be2:	3008      	adds	r0, #8
10054be4:	1901      	adds	r1, r0, r4
10054be6:	4668      	mov	r0, sp
10054be8:	1d09      	adds	r1, r1, #4
10054bea:	f7eb fdca 	bl	10040782 <Osal_MemCpy>
10054bee:	4668      	mov	r0, sp
10054bf0:	8800      	ldrh	r0, [r0, #0]
10054bf2:	f7f6 f9e5 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
10054bf6:	0001      	movs	r1, r0
10054bf8:	d01d      	beq.n	10054c36 <Accu_Handles_Requiring_Auth+0x6a>
10054bfa:	4668      	mov	r0, sp
10054bfc:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
10054bfe:	8800      	ldrh	r0, [r0, #0]
10054c00:	4282      	cmp	r2, r0
10054c02:	d012      	beq.n	10054c2a <Accu_Handles_Requiring_Auth+0x5e>
10054c04:	aa01      	add	r2, sp, #4
10054c06:	f7f7 fa2f 	bl	1004c068 <Gatt_search_handle>
10054c0a:	2800      	cmp	r0, #0
10054c0c:	d10d      	bne.n	10054c2a <Accu_Handles_Requiring_Auth+0x5e>
10054c0e:	9901      	ldr	r1, [sp, #4]
10054c10:	2026      	movs	r0, #38	; 0x26
10054c12:	5c40      	ldrb	r0, [r0, r1]
10054c14:	0740      	lsls	r0, r0, #29
10054c16:	d508      	bpl.n	10054c2a <Accu_Handles_Requiring_Auth+0x5e>
10054c18:	9806      	ldr	r0, [sp, #24]
10054c1a:	006a      	lsls	r2, r5, #1
10054c1c:	1810      	adds	r0, r2, r0
10054c1e:	2202      	movs	r2, #2
10054c20:	311c      	adds	r1, #28
10054c22:	f7eb fdae 	bl	10040782 <Osal_MemCpy>
10054c26:	1c6d      	adds	r5, r5, #1
10054c28:	b2ad      	uxth	r5, r5
10054c2a:	1ca4      	adds	r4, r4, #2
10054c2c:	b2a4      	uxth	r4, r4
10054c2e:	42bc      	cmp	r4, r7
10054c30:	d3d5      	bcc.n	10054bde <Accu_Handles_Requiring_Auth+0x12>
10054c32:	980c      	ldr	r0, [sp, #48]	; 0x30
10054c34:	8005      	strh	r5, [r0, #0]
10054c36:	b007      	add	sp, #28
10054c38:	bdf0      	pop	{r4, r5, r6, r7, pc}

10054c3a <Accu_UuidTypes_Requiring_Auth>:
10054c3a:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054c3c:	4607      	mov	r7, r0
10054c3e:	b083      	sub	sp, #12
10054c40:	2000      	movs	r0, #0
10054c42:	9000      	str	r0, [sp, #0]
10054c44:	980d      	ldr	r0, [sp, #52]	; 0x34
10054c46:	f7f6 f9bb 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
10054c4a:	9906      	ldr	r1, [sp, #24]
10054c4c:	4605      	mov	r5, r0
10054c4e:	310c      	adds	r1, #12
10054c50:	9101      	str	r1, [sp, #4]
10054c52:	2800      	cmp	r0, #0
10054c54:	d026      	beq.n	10054ca4 <Accu_UuidTypes_Requiring_Auth+0x6a>
10054c56:	3708      	adds	r7, #8
10054c58:	42bd      	cmp	r5, r7
10054c5a:	d023      	beq.n	10054ca4 <Accu_UuidTypes_Requiring_Auth+0x6a>
10054c5c:	8d28      	ldrh	r0, [r5, #40]	; 0x28
10054c5e:	990e      	ldr	r1, [sp, #56]	; 0x38
10054c60:	4288      	cmp	r0, r1
10054c62:	d81f      	bhi.n	10054ca4 <Accu_UuidTypes_Requiring_Auth+0x6a>
10054c64:	990d      	ldr	r1, [sp, #52]	; 0x34
10054c66:	4288      	cmp	r0, r1
10054c68:	d313      	bcc.n	10054c92 <Accu_UuidTypes_Requiring_Auth+0x58>
10054c6a:	990e      	ldr	r1, [sp, #56]	; 0x38
10054c6c:	4288      	cmp	r0, r1
10054c6e:	d810      	bhi.n	10054c92 <Accu_UuidTypes_Requiring_Auth+0x58>
10054c70:	4629      	mov	r1, r5
10054c72:	2202      	movs	r2, #2
10054c74:	312a      	adds	r1, #42	; 0x2a
10054c76:	9801      	ldr	r0, [sp, #4]
10054c78:	f7eb fd83 	bl	10040782 <Osal_MemCpy>
10054c7c:	2210      	movs	r2, #16
10054c7e:	990c      	ldr	r1, [sp, #48]	; 0x30
10054c80:	9806      	ldr	r0, [sp, #24]
10054c82:	f7eb fd86 	bl	10040792 <Osal_MemCmp>
10054c86:	2800      	cmp	r0, #0
10054c88:	d009      	beq.n	10054c9e <Accu_UuidTypes_Requiring_Auth+0x64>
10054c8a:	8d29      	ldrh	r1, [r5, #40]	; 0x28
10054c8c:	980e      	ldr	r0, [sp, #56]	; 0x38
10054c8e:	4281      	cmp	r1, r0
10054c90:	d008      	beq.n	10054ca4 <Accu_UuidTypes_Requiring_Auth+0x6a>
10054c92:	462e      	mov	r6, r5
10054c94:	6a2c      	ldr	r4, [r5, #32]
10054c96:	3620      	adds	r6, #32
10054c98:	42b4      	cmp	r4, r6
10054c9a:	d13f      	bne.n	10054d1c <Accu_UuidTypes_Requiring_Auth+0xe2>
10054c9c:	e040      	b.n	10054d20 <Accu_UuidTypes_Requiring_Auth+0xe6>
10054c9e:	9805      	ldr	r0, [sp, #20]
10054ca0:	2100      	movs	r1, #0
10054ca2:	8001      	strh	r1, [r0, #0]
10054ca4:	b007      	add	sp, #28
10054ca6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054ca8:	8ba1      	ldrh	r1, [r4, #28]
10054caa:	980d      	ldr	r0, [sp, #52]	; 0x34
10054cac:	4281      	cmp	r1, r0
10054cae:	d334      	bcc.n	10054d1a <Accu_UuidTypes_Requiring_Auth+0xe0>
10054cb0:	980e      	ldr	r0, [sp, #56]	; 0x38
10054cb2:	4281      	cmp	r1, r0
10054cb4:	d834      	bhi.n	10054d20 <Accu_UuidTypes_Requiring_Auth+0xe6>
10054cb6:	4620      	mov	r0, r4
10054cb8:	3020      	adds	r0, #32
10054cba:	9002      	str	r0, [sp, #8]
10054cbc:	78c0      	ldrb	r0, [r0, #3]
10054cbe:	2801      	cmp	r0, #1
10054cc0:	d008      	beq.n	10054cd4 <Accu_UuidTypes_Requiring_Auth+0x9a>
10054cc2:	4620      	mov	r0, r4
10054cc4:	3008      	adds	r0, #8
10054cc6:	2210      	movs	r2, #16
10054cc8:	990c      	ldr	r1, [sp, #48]	; 0x30
10054cca:	f7eb fd62 	bl	10040792 <Osal_MemCmp>
10054cce:	2800      	cmp	r0, #0
10054cd0:	d008      	beq.n	10054ce4 <Accu_UuidTypes_Requiring_Auth+0xaa>
10054cd2:	e022      	b.n	10054d1a <Accu_UuidTypes_Requiring_Auth+0xe0>
10054cd4:	4621      	mov	r1, r4
10054cd6:	2202      	movs	r2, #2
10054cd8:	3108      	adds	r1, #8
10054cda:	9801      	ldr	r0, [sp, #4]
10054cdc:	f7eb fd51 	bl	10040782 <Osal_MemCpy>
10054ce0:	9806      	ldr	r0, [sp, #24]
10054ce2:	e7f0      	b.n	10054cc6 <Accu_UuidTypes_Requiring_Auth+0x8c>
10054ce4:	9802      	ldr	r0, [sp, #8]
10054ce6:	7980      	ldrb	r0, [r0, #6]
10054ce8:	0740      	lsls	r0, r0, #29
10054cea:	d516      	bpl.n	10054d1a <Accu_UuidTypes_Requiring_Auth+0xe0>
10054cec:	9800      	ldr	r0, [sp, #0]
10054cee:	2800      	cmp	r0, #0
10054cf0:	d101      	bne.n	10054cf6 <Accu_UuidTypes_Requiring_Auth+0xbc>
10054cf2:	8be0      	ldrh	r0, [r4, #30]
10054cf4:	9000      	str	r0, [sp, #0]
10054cf6:	8be1      	ldrh	r1, [r4, #30]
10054cf8:	4281      	cmp	r1, r0
10054cfa:	d111      	bne.n	10054d20 <Accu_UuidTypes_Requiring_Auth+0xe6>
10054cfc:	9805      	ldr	r0, [sp, #20]
10054cfe:	2202      	movs	r2, #2
10054d00:	8800      	ldrh	r0, [r0, #0]
10054d02:	0041      	lsls	r1, r0, #1
10054d04:	9804      	ldr	r0, [sp, #16]
10054d06:	1808      	adds	r0, r1, r0
10054d08:	4621      	mov	r1, r4
10054d0a:	311c      	adds	r1, #28
10054d0c:	f7eb fd39 	bl	10040782 <Osal_MemCpy>
10054d10:	9805      	ldr	r0, [sp, #20]
10054d12:	9905      	ldr	r1, [sp, #20]
10054d14:	8800      	ldrh	r0, [r0, #0]
10054d16:	1c40      	adds	r0, r0, #1
10054d18:	8008      	strh	r0, [r1, #0]
10054d1a:	6824      	ldr	r4, [r4, #0]
10054d1c:	42b4      	cmp	r4, r6
10054d1e:	d1c3      	bne.n	10054ca8 <Accu_UuidTypes_Requiring_Auth+0x6e>
10054d20:	682d      	ldr	r5, [r5, #0]
10054d22:	e799      	b.n	10054c58 <Accu_UuidTypes_Requiring_Auth+0x1e>

10054d24 <Att_Send_Confirmation_Pdu>:
10054d24:	6888      	ldr	r0, [r1, #8]
10054d26:	221e      	movs	r2, #30
10054d28:	7302      	strb	r2, [r0, #12]
10054d2a:	2001      	movs	r0, #1
10054d2c:	80c8      	strh	r0, [r1, #6]
10054d2e:	2000      	movs	r0, #0
10054d30:	4770      	bx	lr

10054d32 <Att_Send_Exec_Write_Req_Pdu>:
10054d32:	b510      	push	{r4, lr}
10054d34:	688b      	ldr	r3, [r1, #8]
10054d36:	2418      	movs	r4, #24
10054d38:	731c      	strb	r4, [r3, #12]
10054d3a:	688b      	ldr	r3, [r1, #8]
10054d3c:	735a      	strb	r2, [r3, #13]
10054d3e:	2202      	movs	r2, #2
10054d40:	80ca      	strh	r2, [r1, #6]
10054d42:	2221      	movs	r2, #33	; 0x21
10054d44:	6901      	ldr	r1, [r0, #16]
10054d46:	0192      	lsls	r2, r2, #6
10054d48:	4311      	orrs	r1, r2
10054d4a:	6101      	str	r1, [r0, #16]
10054d4c:	2119      	movs	r1, #25
10054d4e:	7381      	strb	r1, [r0, #14]
10054d50:	2000      	movs	r0, #0
10054d52:	bd10      	pop	{r4, pc}

10054d54 <Att_Send_Find_By_Typ_Val_Req_Pdu>:
10054d54:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054d56:	b081      	sub	sp, #4
10054d58:	4606      	mov	r6, r0
10054d5a:	4668      	mov	r0, sp
10054d5c:	8980      	ldrh	r0, [r0, #12]
10054d5e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
10054d60:	460c      	mov	r4, r1
10054d62:	2800      	cmp	r0, #0
10054d64:	d037      	beq.n	10054dd6 <Att_Send_Find_By_Typ_Val_Req_Pdu+0x82>
10054d66:	4669      	mov	r1, sp
10054d68:	8a09      	ldrh	r1, [r1, #16]
10054d6a:	4288      	cmp	r0, r1
10054d6c:	d833      	bhi.n	10054dd6 <Att_Send_Find_By_Typ_Val_Req_Pdu+0x82>
10054d6e:	8870      	ldrh	r0, [r6, #2]
10054d70:	1fc0      	subs	r0, r0, #7
10054d72:	42b8      	cmp	r0, r7
10054d74:	d32f      	bcc.n	10054dd6 <Att_Send_Find_By_Typ_Val_Req_Pdu+0x82>
10054d76:	1dfd      	adds	r5, r7, #7
10054d78:	b2aa      	uxth	r2, r5
10054d7a:	2100      	movs	r1, #0
10054d7c:	4620      	mov	r0, r4
10054d7e:	f000 f9dc 	bl	1005513a <Pm_Resize_Host_Acl_Pckt>
10054d82:	2800      	cmp	r0, #0
10054d84:	d002      	beq.n	10054d8c <Att_Send_Find_By_Typ_Val_Req_Pdu+0x38>
10054d86:	2064      	movs	r0, #100	; 0x64
10054d88:	b005      	add	sp, #20
10054d8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054d8c:	68a0      	ldr	r0, [r4, #8]
10054d8e:	2106      	movs	r1, #6
10054d90:	7301      	strb	r1, [r0, #12]
10054d92:	68a0      	ldr	r0, [r4, #8]
10054d94:	2202      	movs	r2, #2
10054d96:	a903      	add	r1, sp, #12
10054d98:	300d      	adds	r0, #13
10054d9a:	f7eb fcf2 	bl	10040782 <Osal_MemCpy>
10054d9e:	68a0      	ldr	r0, [r4, #8]
10054da0:	2202      	movs	r2, #2
10054da2:	a904      	add	r1, sp, #16
10054da4:	300f      	adds	r0, #15
10054da6:	f7eb fcec 	bl	10040782 <Osal_MemCpy>
10054daa:	68a0      	ldr	r0, [r4, #8]
10054dac:	2202      	movs	r2, #2
10054dae:	a90a      	add	r1, sp, #40	; 0x28
10054db0:	3011      	adds	r0, #17
10054db2:	f7eb fce6 	bl	10040782 <Osal_MemCpy>
10054db6:	463a      	mov	r2, r7
10054db8:	210b      	movs	r1, #11
10054dba:	4620      	mov	r0, r4
10054dbc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10054dbe:	f7ff fee5 	bl	10054b8c <PM_Write_Pckt_Data>
10054dc2:	80e5      	strh	r5, [r4, #6]
10054dc4:	2121      	movs	r1, #33	; 0x21
10054dc6:	6930      	ldr	r0, [r6, #16]
10054dc8:	0189      	lsls	r1, r1, #6
10054dca:	4308      	orrs	r0, r1
10054dcc:	6130      	str	r0, [r6, #16]
10054dce:	2007      	movs	r0, #7
10054dd0:	73b0      	strb	r0, [r6, #14]
10054dd2:	2000      	movs	r0, #0
10054dd4:	e7d8      	b.n	10054d88 <Att_Send_Find_By_Typ_Val_Req_Pdu+0x34>
10054dd6:	2042      	movs	r0, #66	; 0x42
10054dd8:	e7d6      	b.n	10054d88 <Att_Send_Find_By_Typ_Val_Req_Pdu+0x34>

10054dda <Att_Send_Find_Info_Req_Pdu>:
10054dda:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10054ddc:	4605      	mov	r5, r0
10054dde:	4668      	mov	r0, sp
10054de0:	8900      	ldrh	r0, [r0, #8]
10054de2:	460c      	mov	r4, r1
10054de4:	2800      	cmp	r0, #0
10054de6:	d01e      	beq.n	10054e26 <Att_Send_Find_Info_Req_Pdu+0x4c>
10054de8:	4669      	mov	r1, sp
10054dea:	8989      	ldrh	r1, [r1, #12]
10054dec:	4288      	cmp	r0, r1
10054dee:	d81a      	bhi.n	10054e26 <Att_Send_Find_Info_Req_Pdu+0x4c>
10054df0:	68a0      	ldr	r0, [r4, #8]
10054df2:	2104      	movs	r1, #4
10054df4:	7301      	strb	r1, [r0, #12]
10054df6:	68a0      	ldr	r0, [r4, #8]
10054df8:	2202      	movs	r2, #2
10054dfa:	a902      	add	r1, sp, #8
10054dfc:	300d      	adds	r0, #13
10054dfe:	f7eb fcc0 	bl	10040782 <Osal_MemCpy>
10054e02:	68a0      	ldr	r0, [r4, #8]
10054e04:	2202      	movs	r2, #2
10054e06:	a903      	add	r1, sp, #12
10054e08:	300f      	adds	r0, #15
10054e0a:	f7eb fcba 	bl	10040782 <Osal_MemCpy>
10054e0e:	2005      	movs	r0, #5
10054e10:	80e0      	strh	r0, [r4, #6]
10054e12:	2121      	movs	r1, #33	; 0x21
10054e14:	6928      	ldr	r0, [r5, #16]
10054e16:	0189      	lsls	r1, r1, #6
10054e18:	4308      	orrs	r0, r1
10054e1a:	6128      	str	r0, [r5, #16]
10054e1c:	2005      	movs	r0, #5
10054e1e:	73a8      	strb	r0, [r5, #14]
10054e20:	2000      	movs	r0, #0
10054e22:	b004      	add	sp, #16
10054e24:	bd70      	pop	{r4, r5, r6, pc}
10054e26:	2042      	movs	r0, #66	; 0x42
10054e28:	e7fb      	b.n	10054e22 <Att_Send_Find_Info_Req_Pdu+0x48>

10054e2a <Att_Send_Prp_Write_Req_Pdu>:
10054e2a:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054e2c:	b081      	sub	sp, #4
10054e2e:	4606      	mov	r6, r0
10054e30:	4668      	mov	r0, sp
10054e32:	8980      	ldrh	r0, [r0, #12]
10054e34:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
10054e36:	460d      	mov	r5, r1
10054e38:	2800      	cmp	r0, #0
10054e3a:	d02d      	beq.n	10054e98 <Att_Send_Prp_Write_Req_Pdu+0x6e>
10054e3c:	8870      	ldrh	r0, [r6, #2]
10054e3e:	1f40      	subs	r0, r0, #5
10054e40:	42b8      	cmp	r0, r7
10054e42:	d329      	bcc.n	10054e98 <Att_Send_Prp_Write_Req_Pdu+0x6e>
10054e44:	1d7c      	adds	r4, r7, #5
10054e46:	b2a2      	uxth	r2, r4
10054e48:	2100      	movs	r1, #0
10054e4a:	4628      	mov	r0, r5
10054e4c:	f000 f975 	bl	1005513a <Pm_Resize_Host_Acl_Pckt>
10054e50:	2800      	cmp	r0, #0
10054e52:	d002      	beq.n	10054e5a <Att_Send_Prp_Write_Req_Pdu+0x30>
10054e54:	2064      	movs	r0, #100	; 0x64
10054e56:	b005      	add	sp, #20
10054e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054e5a:	68a8      	ldr	r0, [r5, #8]
10054e5c:	2116      	movs	r1, #22
10054e5e:	7301      	strb	r1, [r0, #12]
10054e60:	68a8      	ldr	r0, [r5, #8]
10054e62:	2202      	movs	r2, #2
10054e64:	a903      	add	r1, sp, #12
10054e66:	300d      	adds	r0, #13
10054e68:	f7eb fc8b 	bl	10040782 <Osal_MemCpy>
10054e6c:	68a8      	ldr	r0, [r5, #8]
10054e6e:	2202      	movs	r2, #2
10054e70:	a904      	add	r1, sp, #16
10054e72:	300f      	adds	r0, #15
10054e74:	f7eb fc85 	bl	10040782 <Osal_MemCpy>
10054e78:	463a      	mov	r2, r7
10054e7a:	2109      	movs	r1, #9
10054e7c:	4628      	mov	r0, r5
10054e7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
10054e80:	f7ff fe84 	bl	10054b8c <PM_Write_Pckt_Data>
10054e84:	80ec      	strh	r4, [r5, #6]
10054e86:	2121      	movs	r1, #33	; 0x21
10054e88:	6930      	ldr	r0, [r6, #16]
10054e8a:	0189      	lsls	r1, r1, #6
10054e8c:	4308      	orrs	r0, r1
10054e8e:	6130      	str	r0, [r6, #16]
10054e90:	2017      	movs	r0, #23
10054e92:	73b0      	strb	r0, [r6, #14]
10054e94:	2000      	movs	r0, #0
10054e96:	e7de      	b.n	10054e56 <Att_Send_Prp_Write_Req_Pdu+0x2c>
10054e98:	2042      	movs	r0, #66	; 0x42
10054e9a:	e7dc      	b.n	10054e56 <Att_Send_Prp_Write_Req_Pdu+0x2c>

10054e9c <Att_Send_Read_Blob_Req_Pdu>:
10054e9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10054e9e:	4605      	mov	r5, r0
10054ea0:	4668      	mov	r0, sp
10054ea2:	8900      	ldrh	r0, [r0, #8]
10054ea4:	460c      	mov	r4, r1
10054ea6:	2800      	cmp	r0, #0
10054ea8:	d01a      	beq.n	10054ee0 <Att_Send_Read_Blob_Req_Pdu+0x44>
10054eaa:	68a0      	ldr	r0, [r4, #8]
10054eac:	210c      	movs	r1, #12
10054eae:	7301      	strb	r1, [r0, #12]
10054eb0:	68a0      	ldr	r0, [r4, #8]
10054eb2:	2202      	movs	r2, #2
10054eb4:	a902      	add	r1, sp, #8
10054eb6:	300d      	adds	r0, #13
10054eb8:	f7eb fc63 	bl	10040782 <Osal_MemCpy>
10054ebc:	68a0      	ldr	r0, [r4, #8]
10054ebe:	2202      	movs	r2, #2
10054ec0:	a903      	add	r1, sp, #12
10054ec2:	300f      	adds	r0, #15
10054ec4:	f7eb fc5d 	bl	10040782 <Osal_MemCpy>
10054ec8:	2005      	movs	r0, #5
10054eca:	80e0      	strh	r0, [r4, #6]
10054ecc:	2121      	movs	r1, #33	; 0x21
10054ece:	6928      	ldr	r0, [r5, #16]
10054ed0:	0189      	lsls	r1, r1, #6
10054ed2:	4308      	orrs	r0, r1
10054ed4:	6128      	str	r0, [r5, #16]
10054ed6:	200d      	movs	r0, #13
10054ed8:	73a8      	strb	r0, [r5, #14]
10054eda:	2000      	movs	r0, #0
10054edc:	b004      	add	sp, #16
10054ede:	bd70      	pop	{r4, r5, r6, pc}
10054ee0:	2042      	movs	r0, #66	; 0x42
10054ee2:	e7fb      	b.n	10054edc <Att_Send_Read_Blob_Req_Pdu+0x40>

10054ee4 <Att_Send_Read_By_Grp_Typ_Req_Pdu>:
10054ee4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10054ee6:	4605      	mov	r5, r0
10054ee8:	4668      	mov	r0, sp
10054eea:	8900      	ldrh	r0, [r0, #8]
10054eec:	9e0c      	ldr	r6, [sp, #48]	; 0x30
10054eee:	460c      	mov	r4, r1
10054ef0:	2800      	cmp	r0, #0
10054ef2:	d016      	beq.n	10054f22 <Att_Send_Read_By_Grp_Typ_Req_Pdu+0x3e>
10054ef4:	4669      	mov	r1, sp
10054ef6:	8989      	ldrh	r1, [r1, #12]
10054ef8:	4288      	cmp	r0, r1
10054efa:	d812      	bhi.n	10054f22 <Att_Send_Read_By_Grp_Typ_Req_Pdu+0x3e>
10054efc:	68a0      	ldr	r0, [r4, #8]
10054efe:	2110      	movs	r1, #16
10054f00:	7301      	strb	r1, [r0, #12]
10054f02:	68a0      	ldr	r0, [r4, #8]
10054f04:	2202      	movs	r2, #2
10054f06:	a902      	add	r1, sp, #8
10054f08:	300d      	adds	r0, #13
10054f0a:	f7eb fc3a 	bl	10040782 <Osal_MemCpy>
10054f0e:	68a0      	ldr	r0, [r4, #8]
10054f10:	2202      	movs	r2, #2
10054f12:	a903      	add	r1, sp, #12
10054f14:	300f      	adds	r0, #15
10054f16:	f7eb fc34 	bl	10040782 <Osal_MemCpy>
10054f1a:	2e01      	cmp	r6, #1
10054f1c:	d004      	beq.n	10054f28 <Att_Send_Read_By_Grp_Typ_Req_Pdu+0x44>
10054f1e:	2e02      	cmp	r6, #2
10054f20:	d00a      	beq.n	10054f38 <Att_Send_Read_By_Grp_Typ_Req_Pdu+0x54>
10054f22:	2042      	movs	r0, #66	; 0x42
10054f24:	b004      	add	sp, #16
10054f26:	bd70      	pop	{r4, r5, r6, pc}
10054f28:	68a0      	ldr	r0, [r4, #8]
10054f2a:	2202      	movs	r2, #2
10054f2c:	a908      	add	r1, sp, #32
10054f2e:	3011      	adds	r0, #17
10054f30:	f7eb fc27 	bl	10040782 <Osal_MemCpy>
10054f34:	2007      	movs	r0, #7
10054f36:	e006      	b.n	10054f46 <Att_Send_Read_By_Grp_Typ_Req_Pdu+0x62>
10054f38:	ab08      	add	r3, sp, #32
10054f3a:	2210      	movs	r2, #16
10054f3c:	2109      	movs	r1, #9
10054f3e:	4620      	mov	r0, r4
10054f40:	f7ff fe24 	bl	10054b8c <PM_Write_Pckt_Data>
10054f44:	2015      	movs	r0, #21
10054f46:	80e0      	strh	r0, [r4, #6]
10054f48:	2121      	movs	r1, #33	; 0x21
10054f4a:	6928      	ldr	r0, [r5, #16]
10054f4c:	0189      	lsls	r1, r1, #6
10054f4e:	4308      	orrs	r0, r1
10054f50:	6128      	str	r0, [r5, #16]
10054f52:	2011      	movs	r0, #17
10054f54:	73a8      	strb	r0, [r5, #14]
10054f56:	2000      	movs	r0, #0
10054f58:	e7e4      	b.n	10054f24 <Att_Send_Read_By_Grp_Typ_Req_Pdu+0x40>

10054f5a <Att_Send_Read_By_Typ_Req_Pdu>:
10054f5a:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10054f5c:	4605      	mov	r5, r0
10054f5e:	4668      	mov	r0, sp
10054f60:	8900      	ldrh	r0, [r0, #8]
10054f62:	9e0c      	ldr	r6, [sp, #48]	; 0x30
10054f64:	460c      	mov	r4, r1
10054f66:	2800      	cmp	r0, #0
10054f68:	d016      	beq.n	10054f98 <Att_Send_Read_By_Typ_Req_Pdu+0x3e>
10054f6a:	4669      	mov	r1, sp
10054f6c:	8989      	ldrh	r1, [r1, #12]
10054f6e:	4288      	cmp	r0, r1
10054f70:	d812      	bhi.n	10054f98 <Att_Send_Read_By_Typ_Req_Pdu+0x3e>
10054f72:	68a0      	ldr	r0, [r4, #8]
10054f74:	2108      	movs	r1, #8
10054f76:	7301      	strb	r1, [r0, #12]
10054f78:	68a0      	ldr	r0, [r4, #8]
10054f7a:	2202      	movs	r2, #2
10054f7c:	a902      	add	r1, sp, #8
10054f7e:	300d      	adds	r0, #13
10054f80:	f7eb fbff 	bl	10040782 <Osal_MemCpy>
10054f84:	68a0      	ldr	r0, [r4, #8]
10054f86:	2202      	movs	r2, #2
10054f88:	a903      	add	r1, sp, #12
10054f8a:	300f      	adds	r0, #15
10054f8c:	f7eb fbf9 	bl	10040782 <Osal_MemCpy>
10054f90:	2e01      	cmp	r6, #1
10054f92:	d004      	beq.n	10054f9e <Att_Send_Read_By_Typ_Req_Pdu+0x44>
10054f94:	2e02      	cmp	r6, #2
10054f96:	d00a      	beq.n	10054fae <Att_Send_Read_By_Typ_Req_Pdu+0x54>
10054f98:	2042      	movs	r0, #66	; 0x42
10054f9a:	b004      	add	sp, #16
10054f9c:	bd70      	pop	{r4, r5, r6, pc}
10054f9e:	68a0      	ldr	r0, [r4, #8]
10054fa0:	2202      	movs	r2, #2
10054fa2:	a908      	add	r1, sp, #32
10054fa4:	3011      	adds	r0, #17
10054fa6:	f7eb fbec 	bl	10040782 <Osal_MemCpy>
10054faa:	2007      	movs	r0, #7
10054fac:	e006      	b.n	10054fbc <Att_Send_Read_By_Typ_Req_Pdu+0x62>
10054fae:	ab08      	add	r3, sp, #32
10054fb0:	2210      	movs	r2, #16
10054fb2:	2109      	movs	r1, #9
10054fb4:	4620      	mov	r0, r4
10054fb6:	f7ff fde9 	bl	10054b8c <PM_Write_Pckt_Data>
10054fba:	2015      	movs	r0, #21
10054fbc:	80e0      	strh	r0, [r4, #6]
10054fbe:	2121      	movs	r1, #33	; 0x21
10054fc0:	6928      	ldr	r0, [r5, #16]
10054fc2:	0189      	lsls	r1, r1, #6
10054fc4:	4308      	orrs	r0, r1
10054fc6:	6128      	str	r0, [r5, #16]
10054fc8:	2009      	movs	r0, #9
10054fca:	73a8      	strb	r0, [r5, #14]
10054fcc:	2000      	movs	r0, #0
10054fce:	e7e4      	b.n	10054f9a <Att_Send_Read_By_Typ_Req_Pdu+0x40>

10054fd0 <Att_Send_Read_Multi_Req_Pdu>:
10054fd0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054fd2:	4607      	mov	r7, r0
10054fd4:	0458      	lsls	r0, r3, #17
10054fd6:	0c04      	lsrs	r4, r0, #16
10054fd8:	8878      	ldrh	r0, [r7, #2]
10054fda:	b081      	sub	sp, #4
10054fdc:	1e40      	subs	r0, r0, #1
10054fde:	460e      	mov	r6, r1
10054fe0:	42a0      	cmp	r0, r4
10054fe2:	d31f      	bcc.n	10055024 <Att_Send_Read_Multi_Req_Pdu+0x54>
10054fe4:	2c04      	cmp	r4, #4
10054fe6:	d31d      	bcc.n	10055024 <Att_Send_Read_Multi_Req_Pdu+0x54>
10054fe8:	1c65      	adds	r5, r4, #1
10054fea:	b2aa      	uxth	r2, r5
10054fec:	2100      	movs	r1, #0
10054fee:	4630      	mov	r0, r6
10054ff0:	f000 f8a3 	bl	1005513a <Pm_Resize_Host_Acl_Pckt>
10054ff4:	2800      	cmp	r0, #0
10054ff6:	d002      	beq.n	10054ffe <Att_Send_Read_Multi_Req_Pdu+0x2e>
10054ff8:	2064      	movs	r0, #100	; 0x64
10054ffa:	b005      	add	sp, #20
10054ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054ffe:	68b0      	ldr	r0, [r6, #8]
10055000:	210e      	movs	r1, #14
10055002:	7301      	strb	r1, [r0, #12]
10055004:	4622      	mov	r2, r4
10055006:	2105      	movs	r1, #5
10055008:	4630      	mov	r0, r6
1005500a:	9b03      	ldr	r3, [sp, #12]
1005500c:	f7ff fdbe 	bl	10054b8c <PM_Write_Pckt_Data>
10055010:	80f5      	strh	r5, [r6, #6]
10055012:	2021      	movs	r0, #33	; 0x21
10055014:	6939      	ldr	r1, [r7, #16]
10055016:	0180      	lsls	r0, r0, #6
10055018:	4301      	orrs	r1, r0
1005501a:	200f      	movs	r0, #15
1005501c:	6139      	str	r1, [r7, #16]
1005501e:	73b8      	strb	r0, [r7, #14]
10055020:	2000      	movs	r0, #0
10055022:	e7ea      	b.n	10054ffa <Att_Send_Read_Multi_Req_Pdu+0x2a>
10055024:	2042      	movs	r0, #66	; 0x42
10055026:	e7e8      	b.n	10054ffa <Att_Send_Read_Multi_Req_Pdu+0x2a>

10055028 <Att_Send_Read_Req_Pdu>:
10055028:	b537      	push	{r0, r1, r2, r4, r5, lr}
1005502a:	4605      	mov	r5, r0
1005502c:	4668      	mov	r0, sp
1005502e:	8900      	ldrh	r0, [r0, #8]
10055030:	460c      	mov	r4, r1
10055032:	2800      	cmp	r0, #0
10055034:	d013      	beq.n	1005505e <Att_Send_Read_Req_Pdu+0x36>
10055036:	68a0      	ldr	r0, [r4, #8]
10055038:	210a      	movs	r1, #10
1005503a:	7301      	strb	r1, [r0, #12]
1005503c:	68a0      	ldr	r0, [r4, #8]
1005503e:	2202      	movs	r2, #2
10055040:	a902      	add	r1, sp, #8
10055042:	300d      	adds	r0, #13
10055044:	f7eb fb9d 	bl	10040782 <Osal_MemCpy>
10055048:	2003      	movs	r0, #3
1005504a:	80e0      	strh	r0, [r4, #6]
1005504c:	2121      	movs	r1, #33	; 0x21
1005504e:	6928      	ldr	r0, [r5, #16]
10055050:	0189      	lsls	r1, r1, #6
10055052:	4308      	orrs	r0, r1
10055054:	6128      	str	r0, [r5, #16]
10055056:	200b      	movs	r0, #11
10055058:	73a8      	strb	r0, [r5, #14]
1005505a:	2000      	movs	r0, #0
1005505c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1005505e:	2042      	movs	r0, #66	; 0x42
10055060:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

10055062 <Att_Send_Signd_Write_Cmd_Pdu>:
10055062:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10055064:	4606      	mov	r6, r0
10055066:	b081      	sub	sp, #4
10055068:	460c      	mov	r4, r1
1005506a:	6888      	ldr	r0, [r1, #8]
1005506c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
1005506e:	21d2      	movs	r1, #210	; 0xd2
10055070:	7301      	strb	r1, [r0, #12]
10055072:	68a0      	ldr	r0, [r4, #8]
10055074:	461f      	mov	r7, r3
10055076:	2202      	movs	r2, #2
10055078:	a903      	add	r1, sp, #12
1005507a:	300d      	adds	r0, #13
1005507c:	f7eb fb81 	bl	10040782 <Osal_MemCpy>
10055080:	463b      	mov	r3, r7
10055082:	462a      	mov	r2, r5
10055084:	2107      	movs	r1, #7
10055086:	4620      	mov	r0, r4
10055088:	f7ff fd80 	bl	10054b8c <PM_Write_Pckt_Data>
1005508c:	1ced      	adds	r5, r5, #3
1005508e:	80e5      	strh	r5, [r4, #6]
10055090:	8830      	ldrh	r0, [r6, #0]
10055092:	4621      	mov	r1, r4
10055094:	0500      	lsls	r0, r0, #20
10055096:	0d00      	lsrs	r0, r0, #20
10055098:	f005 fe2c 	bl	1005acf4 <SMP_sign_packet>
1005509c:	2000      	movs	r0, #0
1005509e:	b005      	add	sp, #20
100550a0:	bdf0      	pop	{r4, r5, r6, r7, pc}

100550a2 <Att_Send_Write_Cmd_Pdu>:
100550a2:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100550a4:	b081      	sub	sp, #4
100550a6:	688c      	ldr	r4, [r1, #8]
100550a8:	9e0a      	ldr	r6, [sp, #40]	; 0x28
100550aa:	2052      	movs	r0, #82	; 0x52
100550ac:	7320      	strb	r0, [r4, #12]
100550ae:	6888      	ldr	r0, [r1, #8]
100550b0:	460d      	mov	r5, r1
100550b2:	461f      	mov	r7, r3
100550b4:	2202      	movs	r2, #2
100550b6:	a903      	add	r1, sp, #12
100550b8:	300d      	adds	r0, #13
100550ba:	f7eb fb62 	bl	10040782 <Osal_MemCpy>
100550be:	463b      	mov	r3, r7
100550c0:	4632      	mov	r2, r6
100550c2:	2107      	movs	r1, #7
100550c4:	4628      	mov	r0, r5
100550c6:	f7ff fd61 	bl	10054b8c <PM_Write_Pckt_Data>
100550ca:	1cf6      	adds	r6, r6, #3
100550cc:	80ee      	strh	r6, [r5, #6]
100550ce:	2000      	movs	r0, #0
100550d0:	b005      	add	sp, #20
100550d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100550d4 <Att_Send_Write_Req_Pdu>:
100550d4:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100550d6:	b081      	sub	sp, #4
100550d8:	4606      	mov	r6, r0
100550da:	4668      	mov	r0, sp
100550dc:	8980      	ldrh	r0, [r0, #12]
100550de:	9f0a      	ldr	r7, [sp, #40]	; 0x28
100550e0:	460d      	mov	r5, r1
100550e2:	2800      	cmp	r0, #0
100550e4:	d027      	beq.n	10055136 <Att_Send_Write_Req_Pdu+0x62>
100550e6:	8870      	ldrh	r0, [r6, #2]
100550e8:	1ec0      	subs	r0, r0, #3
100550ea:	42b8      	cmp	r0, r7
100550ec:	d323      	bcc.n	10055136 <Att_Send_Write_Req_Pdu+0x62>
100550ee:	1cfc      	adds	r4, r7, #3
100550f0:	b2a2      	uxth	r2, r4
100550f2:	2100      	movs	r1, #0
100550f4:	4628      	mov	r0, r5
100550f6:	f000 f820 	bl	1005513a <Pm_Resize_Host_Acl_Pckt>
100550fa:	2800      	cmp	r0, #0
100550fc:	d002      	beq.n	10055104 <Att_Send_Write_Req_Pdu+0x30>
100550fe:	2064      	movs	r0, #100	; 0x64
10055100:	b005      	add	sp, #20
10055102:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055104:	68a8      	ldr	r0, [r5, #8]
10055106:	2112      	movs	r1, #18
10055108:	7301      	strb	r1, [r0, #12]
1005510a:	68a8      	ldr	r0, [r5, #8]
1005510c:	2202      	movs	r2, #2
1005510e:	a903      	add	r1, sp, #12
10055110:	300d      	adds	r0, #13
10055112:	f7eb fb36 	bl	10040782 <Osal_MemCpy>
10055116:	463a      	mov	r2, r7
10055118:	2107      	movs	r1, #7
1005511a:	4628      	mov	r0, r5
1005511c:	9b04      	ldr	r3, [sp, #16]
1005511e:	f7ff fd35 	bl	10054b8c <PM_Write_Pckt_Data>
10055122:	80ec      	strh	r4, [r5, #6]
10055124:	2121      	movs	r1, #33	; 0x21
10055126:	6930      	ldr	r0, [r6, #16]
10055128:	0189      	lsls	r1, r1, #6
1005512a:	4308      	orrs	r0, r1
1005512c:	6130      	str	r0, [r6, #16]
1005512e:	2013      	movs	r0, #19
10055130:	73b0      	strb	r0, [r6, #14]
10055132:	2000      	movs	r0, #0
10055134:	e7e4      	b.n	10055100 <Att_Send_Write_Req_Pdu+0x2c>
10055136:	2042      	movs	r0, #66	; 0x42
10055138:	e7e2      	b.n	10055100 <Att_Send_Write_Req_Pdu+0x2c>

1005513a <Pm_Resize_Host_Acl_Pckt>:
1005513a:	b510      	push	{r4, lr}
1005513c:	1d12      	adds	r2, r2, #4
1005513e:	6880      	ldr	r0, [r0, #8]
10055140:	b292      	uxth	r2, r2
10055142:	f7ff fced 	bl	10054b20 <PM_Resize_Pckt_Pdu_Size>
10055146:	bd10      	pop	{r4, pc}

10055148 <GAP_Add_To_WhiteList>:
10055148:	b570      	push	{r4, r5, r6, lr}
1005514a:	460d      	mov	r5, r1
1005514c:	0004      	movs	r4, r0
1005514e:	d006      	beq.n	1005515e <GAP_Add_To_WhiteList+0x16>
10055150:	f7fb f8f8 	bl	10050344 <LL_LE_Clear_White_List>
10055154:	00e0      	lsls	r0, r4, #3
10055156:	1b00      	subs	r0, r0, r4
10055158:	b2c6      	uxtb	r6, r0
1005515a:	2400      	movs	r4, #0
1005515c:	e00f      	b.n	1005517e <GAP_Add_To_WhiteList+0x36>
1005515e:	2042      	movs	r0, #66	; 0x42
10055160:	bd70      	pop	{r4, r5, r6, pc}
10055162:	5d28      	ldrb	r0, [r5, r4]
10055164:	2801      	cmp	r0, #1
10055166:	d003      	beq.n	10055170 <GAP_Add_To_WhiteList+0x28>
10055168:	2800      	cmp	r0, #0
1005516a:	d001      	beq.n	10055170 <GAP_Add_To_WhiteList+0x28>
1005516c:	201f      	movs	r0, #31
1005516e:	bd70      	pop	{r4, r5, r6, pc}
10055170:	1928      	adds	r0, r5, r4
10055172:	f7fb f859 	bl	10050228 <LL_LE_Add_Device_To_White_List>
10055176:	2800      	cmp	r0, #0
10055178:	d1f9      	bne.n	1005516e <GAP_Add_To_WhiteList+0x26>
1005517a:	1de4      	adds	r4, r4, #7
1005517c:	b2e4      	uxtb	r4, r4
1005517e:	42b4      	cmp	r4, r6
10055180:	d3ef      	bcc.n	10055162 <GAP_Add_To_WhiteList+0x1a>
10055182:	2000      	movs	r0, #0
10055184:	bd70      	pop	{r4, r5, r6, pc}
	...

10055188 <GAP_Connection_Update>:
10055188:	b510      	push	{r4, lr}
1005518a:	4906      	ldr	r1, [pc, #24]	; (100551a4 <GAP_Connection_Update+0x1c>)
1005518c:	4602      	mov	r2, r0
1005518e:	6809      	ldr	r1, [r1, #0]
10055190:	2046      	movs	r0, #70	; 0x46
10055192:	31ae      	adds	r1, #174	; 0xae
10055194:	7889      	ldrb	r1, [r1, #2]
10055196:	0749      	lsls	r1, r1, #29
10055198:	d502      	bpl.n	100551a0 <GAP_Connection_Update+0x18>
1005519a:	4610      	mov	r0, r2
1005519c:	f7fd f87c 	bl	10052298 <LL_Start_Connection_Update>
100551a0:	bd10      	pop	{r4, pc}
100551a2:	0000      	.short	0x0000
100551a4:	20000d64 	.word	0x20000d64

100551a8 <GAP_Privacy1v2>:
100551a8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100551aa:	4607      	mov	r7, r0
100551ac:	4873      	ldr	r0, [pc, #460]	; (1005537c <GAP_Privacy1v2+0x1d4>)
100551ae:	460d      	mov	r5, r1
100551b0:	6804      	ldr	r4, [r0, #0]
100551b2:	b08f      	sub	sp, #60	; 0x3c
100551b4:	34ae      	adds	r4, #174	; 0xae
100551b6:	78a1      	ldrb	r1, [r4, #2]
100551b8:	461e      	mov	r6, r3
100551ba:	06c8      	lsls	r0, r1, #27
100551bc:	d502      	bpl.n	100551c4 <GAP_Privacy1v2+0x1c>
100551be:	78e0      	ldrb	r0, [r4, #3]
100551c0:	06c0      	lsls	r0, r0, #27
100551c2:	d47d      	bmi.n	100552c0 <GAP_Privacy1v2+0x118>
100551c4:	0688      	lsls	r0, r1, #26
100551c6:	d507      	bpl.n	100551d8 <GAP_Privacy1v2+0x30>
100551c8:	78e0      	ldrb	r0, [r4, #3]
100551ca:	0680      	lsls	r0, r0, #26
100551cc:	0f80      	lsrs	r0, r0, #30
100551ce:	d003      	beq.n	100551d8 <GAP_Privacy1v2+0x30>
100551d0:	2f02      	cmp	r7, #2
100551d2:	d001      	beq.n	100551d8 <GAP_Privacy1v2+0x30>
100551d4:	2e00      	cmp	r6, #0
100551d6:	d073      	beq.n	100552c0 <GAP_Privacy1v2+0x118>
100551d8:	0688      	lsls	r0, r1, #26
100551da:	0f80      	lsrs	r0, r0, #30
100551dc:	d006      	beq.n	100551ec <GAP_Privacy1v2+0x44>
100551de:	2f02      	cmp	r7, #2
100551e0:	d008      	beq.n	100551f4 <GAP_Privacy1v2+0x4c>
100551e2:	2f03      	cmp	r7, #3
100551e4:	d006      	beq.n	100551f4 <GAP_Privacy1v2+0x4c>
100551e6:	2e00      	cmp	r6, #0
100551e8:	d06a      	beq.n	100552c0 <GAP_Privacy1v2+0x118>
100551ea:	e003      	b.n	100551f4 <GAP_Privacy1v2+0x4c>
100551ec:	2f01      	cmp	r7, #1
100551ee:	d001      	beq.n	100551f4 <GAP_Privacy1v2+0x4c>
100551f0:	2f00      	cmp	r7, #0
100551f2:	d1f8      	bne.n	100551e6 <GAP_Privacy1v2+0x3e>
100551f4:	0688      	lsls	r0, r1, #26
100551f6:	d403      	bmi.n	10055200 <GAP_Privacy1v2+0x58>
100551f8:	2d00      	cmp	r5, #0
100551fa:	d001      	beq.n	10055200 <GAP_Privacy1v2+0x58>
100551fc:	2d01      	cmp	r5, #1
100551fe:	d15f      	bne.n	100552c0 <GAP_Privacy1v2+0x118>
10055200:	2e00      	cmp	r6, #0
10055202:	d106      	bne.n	10055212 <GAP_Privacy1v2+0x6a>
10055204:	2030      	movs	r0, #48	; 0x30
10055206:	4001      	ands	r1, r0
10055208:	4638      	mov	r0, r7
1005520a:	f000 fee2 	bl	10055fd2 <LL_Allow_Address_Setting>
1005520e:	2800      	cmp	r0, #0
10055210:	d156      	bne.n	100552c0 <GAP_Privacy1v2+0x118>
10055212:	9911      	ldr	r1, [sp, #68]	; 0x44
10055214:	2000      	movs	r0, #0
10055216:	7008      	strb	r0, [r1, #0]
10055218:	78a1      	ldrb	r1, [r4, #2]
1005521a:	0689      	lsls	r1, r1, #26
1005521c:	0f8a      	lsrs	r2, r1, #30
1005521e:	d07d      	beq.n	1005531c <GAP_Privacy1v2+0x174>
10055220:	a90c      	add	r1, sp, #48	; 0x30
10055222:	a808      	add	r0, sp, #32
10055224:	f001 f918 	bl	10056458 <LL_Get_AdvAddress>
10055228:	9007      	str	r0, [sp, #28]
1005522a:	a90d      	add	r1, sp, #52	; 0x34
1005522c:	a80a      	add	r0, sp, #40	; 0x28
1005522e:	f001 f969 	bl	10056504 <LL_Get_ScanAddress>
10055232:	9006      	str	r0, [sp, #24]
10055234:	9807      	ldr	r0, [sp, #28]
10055236:	2800      	cmp	r0, #0
10055238:	d002      	beq.n	10055240 <GAP_Privacy1v2+0x98>
1005523a:	9806      	ldr	r0, [sp, #24]
1005523c:	2800      	cmp	r0, #0
1005523e:	d101      	bne.n	10055244 <GAP_Privacy1v2+0x9c>
10055240:	2e01      	cmp	r6, #1
10055242:	d158      	bne.n	100552f6 <GAP_Privacy1v2+0x14e>
10055244:	2f02      	cmp	r7, #2
10055246:	a804      	add	r0, sp, #16
10055248:	d007      	beq.n	1005525a <GAP_Privacy1v2+0xb2>
1005524a:	f000 f913 	bl	10055474 <Generate_Non_Resolvable_Private_Address>
1005524e:	2e00      	cmp	r6, #0
10055250:	d03c      	beq.n	100552cc <GAP_Privacy1v2+0x124>
10055252:	9807      	ldr	r0, [sp, #28]
10055254:	2800      	cmp	r0, #0
10055256:	d003      	beq.n	10055260 <GAP_Privacy1v2+0xb8>
10055258:	e012      	b.n	10055280 <GAP_Privacy1v2+0xd8>
1005525a:	f005 f827 	bl	1005a2ac <SM_Generate_Resolvable_Private_Address>
1005525e:	e7f6      	b.n	1005524e <GAP_Privacy1v2+0xa6>
10055260:	4f46      	ldr	r7, [pc, #280]	; (1005537c <GAP_Privacy1v2+0x1d4>)
10055262:	4847      	ldr	r0, [pc, #284]	; (10055380 <GAP_Privacy1v2+0x1d8>)
10055264:	683b      	ldr	r3, [r7, #0]
10055266:	2206      	movs	r2, #6
10055268:	a908      	add	r1, sp, #32
1005526a:	1818      	adds	r0, r3, r0
1005526c:	f7eb fa91 	bl	10040792 <Osal_MemCmp>
10055270:	2800      	cmp	r0, #0
10055272:	6838      	ldr	r0, [r7, #0]
10055274:	d008      	beq.n	10055288 <GAP_Privacy1v2+0xe0>
10055276:	3040      	adds	r0, #64	; 0x40
10055278:	7e41      	ldrb	r1, [r0, #25]
1005527a:	0849      	lsrs	r1, r1, #1
1005527c:	0049      	lsls	r1, r1, #1
1005527e:	7641      	strb	r1, [r0, #25]
10055280:	9806      	ldr	r0, [sp, #24]
10055282:	2800      	cmp	r0, #0
10055284:	d005      	beq.n	10055292 <GAP_Privacy1v2+0xea>
10055286:	e014      	b.n	100552b2 <GAP_Privacy1v2+0x10a>
10055288:	3040      	adds	r0, #64	; 0x40
1005528a:	7e41      	ldrb	r1, [r0, #25]
1005528c:	2201      	movs	r2, #1
1005528e:	4311      	orrs	r1, r2
10055290:	e7f5      	b.n	1005527e <GAP_Privacy1v2+0xd6>
10055292:	4f3a      	ldr	r7, [pc, #232]	; (1005537c <GAP_Privacy1v2+0x1d4>)
10055294:	483a      	ldr	r0, [pc, #232]	; (10055380 <GAP_Privacy1v2+0x1d8>)
10055296:	683b      	ldr	r3, [r7, #0]
10055298:	2206      	movs	r2, #6
1005529a:	a90a      	add	r1, sp, #40	; 0x28
1005529c:	1818      	adds	r0, r3, r0
1005529e:	f7eb fa78 	bl	10040792 <Osal_MemCmp>
100552a2:	2800      	cmp	r0, #0
100552a4:	6838      	ldr	r0, [r7, #0]
100552a6:	d00c      	beq.n	100552c2 <GAP_Privacy1v2+0x11a>
100552a8:	3040      	adds	r0, #64	; 0x40
100552aa:	7e41      	ldrb	r1, [r0, #25]
100552ac:	22fd      	movs	r2, #253	; 0xfd
100552ae:	4011      	ands	r1, r2
100552b0:	7641      	strb	r1, [r0, #25]
100552b2:	9807      	ldr	r0, [sp, #28]
100552b4:	2800      	cmp	r0, #0
100552b6:	d009      	beq.n	100552cc <GAP_Privacy1v2+0x124>
100552b8:	9806      	ldr	r0, [sp, #24]
100552ba:	2800      	cmp	r0, #0
100552bc:	d006      	beq.n	100552cc <GAP_Privacy1v2+0x124>
100552be:	e01a      	b.n	100552f6 <GAP_Privacy1v2+0x14e>
100552c0:	e043      	b.n	1005534a <GAP_Privacy1v2+0x1a2>
100552c2:	3040      	adds	r0, #64	; 0x40
100552c4:	7e41      	ldrb	r1, [r0, #25]
100552c6:	2202      	movs	r2, #2
100552c8:	4311      	orrs	r1, r2
100552ca:	e7f1      	b.n	100552b0 <GAP_Privacy1v2+0x108>
100552cc:	482b      	ldr	r0, [pc, #172]	; (1005537c <GAP_Privacy1v2+0x1d4>)
100552ce:	2206      	movs	r2, #6
100552d0:	6803      	ldr	r3, [r0, #0]
100552d2:	482b      	ldr	r0, [pc, #172]	; (10055380 <GAP_Privacy1v2+0x1d8>)
100552d4:	a904      	add	r1, sp, #16
100552d6:	1818      	adds	r0, r3, r0
100552d8:	f7eb fa53 	bl	10040782 <Osal_MemCpy>
100552dc:	2005      	movs	r0, #5
100552de:	4669      	mov	r1, sp
100552e0:	7308      	strb	r0, [r1, #12]
100552e2:	2e00      	cmp	r6, #0
100552e4:	d102      	bne.n	100552ec <GAP_Privacy1v2+0x144>
100552e6:	4608      	mov	r0, r1
100552e8:	f7f8 fb5a 	bl	1004d9a0 <Timer_StopOneShot>
100552ec:	4825      	ldr	r0, [pc, #148]	; (10055384 <GAP_Privacy1v2+0x1dc>)
100552ee:	9002      	str	r0, [sp, #8]
100552f0:	4668      	mov	r0, sp
100552f2:	f7f8 fb09 	bl	1004d908 <Timer_StartOneShot>
100552f6:	78a0      	ldrb	r0, [r4, #2]
100552f8:	0680      	lsls	r0, r0, #26
100552fa:	d511      	bpl.n	10055320 <GAP_Privacy1v2+0x178>
100552fc:	9811      	ldr	r0, [sp, #68]	; 0x44
100552fe:	2103      	movs	r1, #3
10055300:	7001      	strb	r1, [r0, #0]
10055302:	7920      	ldrb	r0, [r4, #4]
10055304:	06c1      	lsls	r1, r0, #27
10055306:	d503      	bpl.n	10055310 <GAP_Privacy1v2+0x168>
10055308:	2d00      	cmp	r5, #0
1005530a:	d001      	beq.n	10055310 <GAP_Privacy1v2+0x168>
1005530c:	2d02      	cmp	r5, #2
1005530e:	d11c      	bne.n	1005534a <GAP_Privacy1v2+0x1a2>
10055310:	0680      	lsls	r0, r0, #26
10055312:	d505      	bpl.n	10055320 <GAP_Privacy1v2+0x178>
10055314:	2d01      	cmp	r5, #1
10055316:	d003      	beq.n	10055320 <GAP_Privacy1v2+0x178>
10055318:	2d03      	cmp	r5, #3
1005531a:	e000      	b.n	1005531e <GAP_Privacy1v2+0x176>
1005531c:	e018      	b.n	10055350 <GAP_Privacy1v2+0x1a8>
1005531e:	d114      	bne.n	1005534a <GAP_Privacy1v2+0x1a2>
10055320:	78a0      	ldrb	r0, [r4, #2]
10055322:	06c0      	lsls	r0, r0, #27
10055324:	d527      	bpl.n	10055376 <GAP_Privacy1v2+0x1ce>
10055326:	9911      	ldr	r1, [sp, #68]	; 0x44
10055328:	2001      	movs	r0, #1
1005532a:	7008      	strb	r0, [r1, #0]
1005532c:	7920      	ldrb	r0, [r4, #4]
1005532e:	06c1      	lsls	r1, r0, #27
10055330:	d501      	bpl.n	10055336 <GAP_Privacy1v2+0x18e>
10055332:	2d00      	cmp	r5, #0
10055334:	d109      	bne.n	1005534a <GAP_Privacy1v2+0x1a2>
10055336:	0681      	lsls	r1, r0, #26
10055338:	d501      	bpl.n	1005533e <GAP_Privacy1v2+0x196>
1005533a:	2d01      	cmp	r5, #1
1005533c:	d105      	bne.n	1005534a <GAP_Privacy1v2+0x1a2>
1005533e:	0600      	lsls	r0, r0, #24
10055340:	d519      	bpl.n	10055376 <GAP_Privacy1v2+0x1ce>
10055342:	2d00      	cmp	r5, #0
10055344:	d017      	beq.n	10055376 <GAP_Privacy1v2+0x1ce>
10055346:	2d01      	cmp	r5, #1
10055348:	d015      	beq.n	10055376 <GAP_Privacy1v2+0x1ce>
1005534a:	2042      	movs	r0, #66	; 0x42
1005534c:	b013      	add	sp, #76	; 0x4c
1005534e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055350:	2f01      	cmp	r7, #1
10055352:	d101      	bne.n	10055358 <GAP_Privacy1v2+0x1b0>
10055354:	2e00      	cmp	r6, #0
10055356:	d003      	beq.n	10055360 <GAP_Privacy1v2+0x1b8>
10055358:	0f89      	lsrs	r1, r1, #30
1005535a:	4331      	orrs	r1, r6
1005535c:	d009      	beq.n	10055372 <GAP_Privacy1v2+0x1ca>
1005535e:	e00a      	b.n	10055376 <GAP_Privacy1v2+0x1ce>
10055360:	4806      	ldr	r0, [pc, #24]	; (1005537c <GAP_Privacy1v2+0x1d4>)
10055362:	2206      	movs	r2, #6
10055364:	6803      	ldr	r3, [r0, #0]
10055366:	4806      	ldr	r0, [pc, #24]	; (10055380 <GAP_Privacy1v2+0x1d8>)
10055368:	1d61      	adds	r1, r4, #5
1005536a:	1818      	adds	r0, r3, r0
1005536c:	f7eb fa09 	bl	10040782 <Osal_MemCpy>
10055370:	2001      	movs	r0, #1
10055372:	9911      	ldr	r1, [sp, #68]	; 0x44
10055374:	7008      	strb	r0, [r1, #0]
10055376:	2000      	movs	r0, #0
10055378:	e7e8      	b.n	1005534c <GAP_Privacy1v2+0x1a4>
1005537a:	0000      	.short	0x0000
1005537c:	20000d64 	.word	0x20000d64
10055380:	000006ef 	.word	0x000006ef
10055384:	000dbba0 	.word	0x000dbba0

10055388 <GAP_PrivateAddrTimercb>:
10055388:	b53e      	push	{r1, r2, r3, r4, r5, lr}
1005538a:	f7fe fe93 	bl	100540b4 <get_advertiser>
1005538e:	4604      	mov	r4, r0
10055390:	f7fe ff12 	bl	100541b8 <get_scan_connection>
10055394:	2c08      	cmp	r4, #8
10055396:	d101      	bne.n	1005539c <GAP_PrivateAddrTimercb+0x14>
10055398:	2808      	cmp	r0, #8
1005539a:	d013      	beq.n	100553c4 <GAP_PrivateAddrTimercb+0x3c>
1005539c:	480a      	ldr	r0, [pc, #40]	; (100553c8 <GAP_PrivateAddrTimercb+0x40>)
1005539e:	490b      	ldr	r1, [pc, #44]	; (100553cc <GAP_PrivateAddrTimercb+0x44>)
100553a0:	6800      	ldr	r0, [r0, #0]
100553a2:	2206      	movs	r2, #6
100553a4:	1841      	adds	r1, r0, r1
100553a6:	4668      	mov	r0, sp
100553a8:	f7eb f9eb 	bl	10040782 <Osal_MemCpy>
100553ac:	4668      	mov	r0, sp
100553ae:	7940      	ldrb	r0, [r0, #5]
100553b0:	0640      	lsls	r0, r0, #25
100553b2:	d501      	bpl.n	100553b8 <GAP_PrivateAddrTimercb+0x30>
100553b4:	2002      	movs	r0, #2
100553b6:	e000      	b.n	100553ba <GAP_PrivateAddrTimercb+0x32>
100553b8:	2003      	movs	r0, #3
100553ba:	2301      	movs	r3, #1
100553bc:	aa02      	add	r2, sp, #8
100553be:	2100      	movs	r1, #0
100553c0:	f7ff fef2 	bl	100551a8 <GAP_Privacy1v2>
100553c4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
100553c6:	0000      	.short	0x0000
100553c8:	20000d64 	.word	0x20000d64
100553cc:	000006ef 	.word	0x000006ef

100553d0 <GAP_Resolve_Private_Addr>:
100553d0:	b510      	push	{r4, lr}
100553d2:	460c      	mov	r4, r1
100553d4:	7941      	ldrb	r1, [r0, #5]
100553d6:	b094      	sub	sp, #80	; 0x50
100553d8:	0649      	lsls	r1, r1, #25
100553da:	d510      	bpl.n	100553fe <GAP_Resolve_Private_Addr+0x2e>
100553dc:	466a      	mov	r2, sp
100553de:	2101      	movs	r1, #1
100553e0:	f002 fd6a 	bl	10057eb8 <SDB_Find_Record>
100553e4:	2800      	cmp	r0, #0
100553e6:	d002      	beq.n	100553ee <GAP_Resolve_Private_Addr+0x1e>
100553e8:	2070      	movs	r0, #112	; 0x70
100553ea:	b014      	add	sp, #80	; 0x50
100553ec:	bd10      	pop	{r4, pc}
100553ee:	a90f      	add	r1, sp, #60	; 0x3c
100553f0:	2206      	movs	r2, #6
100553f2:	4620      	mov	r0, r4
100553f4:	3102      	adds	r1, #2
100553f6:	f7eb f9c4 	bl	10040782 <Osal_MemCpy>
100553fa:	2000      	movs	r0, #0
100553fc:	e7f5      	b.n	100553ea <GAP_Resolve_Private_Addr+0x1a>
100553fe:	2042      	movs	r0, #66	; 0x42
10055400:	e7f3      	b.n	100553ea <GAP_Resolve_Private_Addr+0x1a>
	...

10055404 <GAP_Start_Discovery_Procedure>:
10055404:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10055406:	461e      	mov	r6, r3
10055408:	4617      	mov	r7, r2
1005540a:	460c      	mov	r4, r1
1005540c:	4605      	mov	r5, r0
1005540e:	2300      	movs	r3, #0
10055410:	aa02      	add	r2, sp, #8
10055412:	4619      	mov	r1, r3
10055414:	4638      	mov	r0, r7
10055416:	f7ff fec7 	bl	100551a8 <GAP_Privacy1v2>
1005541a:	2800      	cmp	r0, #0
1005541c:	d11d      	bne.n	1005545a <GAP_Start_Discovery_Procedure+0x56>
1005541e:	4668      	mov	r0, sp
10055420:	7a01      	ldrb	r1, [r0, #8]
10055422:	7181      	strb	r1, [r0, #6]
10055424:	4a0d      	ldr	r2, [pc, #52]	; (1005545c <GAP_Start_Discovery_Procedure+0x58>)
10055426:	1f28      	subs	r0, r5, #4
10055428:	4290      	cmp	r0, r2
1005542a:	d300      	bcc.n	1005542e <GAP_Start_Discovery_Procedure+0x2a>
1005542c:	2500      	movs	r5, #0
1005542e:	4a0b      	ldr	r2, [pc, #44]	; (1005545c <GAP_Start_Discovery_Procedure+0x58>)
10055430:	1ea0      	subs	r0, r4, #2
10055432:	1c92      	adds	r2, r2, #2
10055434:	4290      	cmp	r0, r2
10055436:	d300      	bcc.n	1005543a <GAP_Start_Discovery_Procedure+0x36>
10055438:	2400      	movs	r4, #0
1005543a:	4668      	mov	r0, sp
1005543c:	8005      	strh	r5, [r0, #0]
1005543e:	8044      	strh	r4, [r0, #2]
10055440:	2200      	movs	r2, #0
10055442:	7142      	strb	r2, [r0, #5]
10055444:	7181      	strb	r1, [r0, #6]
10055446:	2101      	movs	r1, #1
10055448:	7101      	strb	r1, [r0, #4]
1005544a:	f001 fceb 	bl	10056e24 <LL_Set_Scan_Params>
1005544e:	2800      	cmp	r0, #0
10055450:	d103      	bne.n	1005545a <GAP_Start_Discovery_Procedure+0x56>
10055452:	4631      	mov	r1, r6
10055454:	2001      	movs	r0, #1
10055456:	f7fc fe01 	bl	1005205c <LL_Enable_Disable_Scan>
1005545a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005545c:	00003ffd 	.word	0x00003ffd

10055460 <GapIsPrivacySupported>:
10055460:	4803      	ldr	r0, [pc, #12]	; (10055470 <GapIsPrivacySupported+0x10>)
10055462:	6800      	ldr	r0, [r0, #0]
10055464:	30ae      	adds	r0, #174	; 0xae
10055466:	7880      	ldrb	r0, [r0, #2]
10055468:	0680      	lsls	r0, r0, #26
1005546a:	0f80      	lsrs	r0, r0, #30
1005546c:	4770      	bx	lr
1005546e:	0000      	.short	0x0000
10055470:	20000d64 	.word	0x20000d64

10055474 <Generate_Non_Resolvable_Private_Address>:
10055474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10055476:	4e20      	ldr	r6, [pc, #128]	; (100554f8 <Generate_Non_Resolvable_Private_Address+0x84>)
10055478:	4604      	mov	r4, r0
1005547a:	6835      	ldr	r5, [r6, #0]
1005547c:	35ae      	adds	r5, #174	; 0xae
1005547e:	f7f7 fa45 	bl	1004c90c <Hal_Get_Random_Number>
10055482:	7020      	strb	r0, [r4, #0]
10055484:	0a00      	lsrs	r0, r0, #8
10055486:	7060      	strb	r0, [r4, #1]
10055488:	f7f7 fa40 	bl	1004c90c <Hal_Get_Random_Number>
1005548c:	70a0      	strb	r0, [r4, #2]
1005548e:	0a00      	lsrs	r0, r0, #8
10055490:	70e0      	strb	r0, [r4, #3]
10055492:	f7f7 fa3b 	bl	1004c90c <Hal_Get_Random_Number>
10055496:	b2c2      	uxtb	r2, r0
10055498:	0480      	lsls	r0, r0, #18
1005549a:	0e83      	lsrs	r3, r0, #26
1005549c:	7122      	strb	r2, [r4, #4]
1005549e:	2100      	movs	r1, #0
100554a0:	7163      	strb	r3, [r4, #5]
100554a2:	4608      	mov	r0, r1
100554a4:	5c27      	ldrb	r7, [r4, r0]
100554a6:	1c40      	adds	r0, r0, #1
100554a8:	1879      	adds	r1, r7, r1
100554aa:	b2c0      	uxtb	r0, r0
100554ac:	b289      	uxth	r1, r1
100554ae:	2806      	cmp	r0, #6
100554b0:	d3f8      	bcc.n	100554a4 <Generate_Non_Resolvable_Private_Address+0x30>
100554b2:	2900      	cmp	r1, #0
100554b4:	d0e3      	beq.n	1005547e <Generate_Non_Resolvable_Private_Address+0xa>
100554b6:	7820      	ldrb	r0, [r4, #0]
100554b8:	28ff      	cmp	r0, #255	; 0xff
100554ba:	d10c      	bne.n	100554d6 <Generate_Non_Resolvable_Private_Address+0x62>
100554bc:	7860      	ldrb	r0, [r4, #1]
100554be:	28ff      	cmp	r0, #255	; 0xff
100554c0:	d109      	bne.n	100554d6 <Generate_Non_Resolvable_Private_Address+0x62>
100554c2:	78a0      	ldrb	r0, [r4, #2]
100554c4:	28ff      	cmp	r0, #255	; 0xff
100554c6:	d106      	bne.n	100554d6 <Generate_Non_Resolvable_Private_Address+0x62>
100554c8:	78e0      	ldrb	r0, [r4, #3]
100554ca:	28ff      	cmp	r0, #255	; 0xff
100554cc:	d103      	bne.n	100554d6 <Generate_Non_Resolvable_Private_Address+0x62>
100554ce:	2aff      	cmp	r2, #255	; 0xff
100554d0:	d101      	bne.n	100554d6 <Generate_Non_Resolvable_Private_Address+0x62>
100554d2:	2bff      	cmp	r3, #255	; 0xff
100554d4:	d0d3      	beq.n	1005547e <Generate_Non_Resolvable_Private_Address+0xa>
100554d6:	2206      	movs	r2, #6
100554d8:	1d69      	adds	r1, r5, #5
100554da:	4620      	mov	r0, r4
100554dc:	f7eb f959 	bl	10040792 <Osal_MemCmp>
100554e0:	2800      	cmp	r0, #0
100554e2:	d0cc      	beq.n	1005547e <Generate_Non_Resolvable_Private_Address+0xa>
100554e4:	6831      	ldr	r1, [r6, #0]
100554e6:	2206      	movs	r2, #6
100554e8:	4620      	mov	r0, r4
100554ea:	3178      	adds	r1, #120	; 0x78
100554ec:	f7eb f951 	bl	10040792 <Osal_MemCmp>
100554f0:	2800      	cmp	r0, #0
100554f2:	d0c4      	beq.n	1005547e <Generate_Non_Resolvable_Private_Address+0xa>
100554f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100554f6:	0000      	.short	0x0000
100554f8:	20000d64 	.word	0x20000d64

100554fc <aci_gap_add_devices_to_resolving_list_api>:
100554fc:	b5f0      	push	{r4, r5, r6, r7, lr}
100554fe:	4606      	mov	r6, r0
10055500:	2000      	movs	r0, #0
10055502:	b08d      	sub	sp, #52	; 0x34
10055504:	460d      	mov	r5, r1
10055506:	2a00      	cmp	r2, #0
10055508:	d003      	beq.n	10055512 <aci_gap_add_devices_to_resolving_list_api+0x16>
1005550a:	f7f8 f87c 	bl	1004d606 <hci_le_clear_resolving_list_api>
1005550e:	2800      	cmp	r0, #0
10055510:	d106      	bne.n	10055520 <aci_gap_add_devices_to_resolving_list_api+0x24>
10055512:	2e00      	cmp	r6, #0
10055514:	d003      	beq.n	1005551e <aci_gap_add_devices_to_resolving_list_api+0x22>
10055516:	2d00      	cmp	r5, #0
10055518:	d004      	beq.n	10055524 <aci_gap_add_devices_to_resolving_list_api+0x28>
1005551a:	2400      	movs	r4, #0
1005551c:	e028      	b.n	10055570 <aci_gap_add_devices_to_resolving_list_api+0x74>
1005551e:	2000      	movs	r0, #0
10055520:	b00d      	add	sp, #52	; 0x34
10055522:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055524:	2042      	movs	r0, #66	; 0x42
10055526:	e7fb      	b.n	10055520 <aci_gap_add_devices_to_resolving_list_api+0x24>
10055528:	00e0      	lsls	r0, r4, #3
1005552a:	1b00      	subs	r0, r0, r4
1005552c:	5c29      	ldrb	r1, [r5, r0]
1005552e:	1947      	adds	r7, r0, r5
10055530:	4608      	mov	r0, r1
10055532:	1c7f      	adds	r7, r7, #1
10055534:	9100      	str	r1, [sp, #0]
10055536:	f000 f81e 	bl	10055576 <isIdentityAddress>
1005553a:	2800      	cmp	r0, #0
1005553c:	d1f0      	bne.n	10055520 <aci_gap_add_devices_to_resolving_list_api+0x24>
1005553e:	aa03      	add	r2, sp, #12
10055540:	4639      	mov	r1, r7
10055542:	9800      	ldr	r0, [sp, #0]
10055544:	f002 fd1a 	bl	10057f7c <SDB_Get_Irk_From_Identity_Addr>
10055548:	2800      	cmp	r0, #0
1005554a:	d004      	beq.n	10055556 <aci_gap_add_devices_to_resolving_list_api+0x5a>
1005554c:	2210      	movs	r2, #16
1005554e:	2100      	movs	r1, #0
10055550:	a803      	add	r0, sp, #12
10055552:	f7eb f91a 	bl	1004078a <Osal_MemSet>
10055556:	a807      	add	r0, sp, #28
10055558:	f004 fd40 	bl	10059fdc <SMA_Generate_IRK>
1005555c:	ab07      	add	r3, sp, #28
1005555e:	aa03      	add	r2, sp, #12
10055560:	4639      	mov	r1, r7
10055562:	9800      	ldr	r0, [sp, #0]
10055564:	f7f8 f82e 	bl	1004d5c4 <hci_le_add_device_to_resolving_list_api>
10055568:	2800      	cmp	r0, #0
1005556a:	d1d9      	bne.n	10055520 <aci_gap_add_devices_to_resolving_list_api+0x24>
1005556c:	1c64      	adds	r4, r4, #1
1005556e:	b2e4      	uxtb	r4, r4
10055570:	42b4      	cmp	r4, r6
10055572:	d3d9      	bcc.n	10055528 <aci_gap_add_devices_to_resolving_list_api+0x2c>
10055574:	e7d4      	b.n	10055520 <aci_gap_add_devices_to_resolving_list_api+0x24>

10055576 <isIdentityAddress>:
10055576:	2100      	movs	r1, #0
10055578:	2801      	cmp	r0, #1
1005557a:	d002      	beq.n	10055582 <isIdentityAddress+0xc>
1005557c:	2800      	cmp	r0, #0
1005557e:	d000      	beq.n	10055582 <isIdentityAddress+0xc>
10055580:	2147      	movs	r1, #71	; 0x47
10055582:	4608      	mov	r0, r1
10055584:	4770      	bx	lr
	...

10055588 <GAP_Delete_ADType>:
10055588:	b570      	push	{r4, r5, r6, lr}
1005558a:	b092      	sub	sp, #72	; 0x48
1005558c:	4606      	mov	r6, r0
1005558e:	2220      	movs	r2, #32
10055590:	a121      	add	r1, pc, #132	; (adr r1, 10055618 <GAP_Delete_ADType+0x90>)
10055592:	a801      	add	r0, sp, #4
10055594:	f7f1 f8e9 	bl	1004676a <__aeabi_memcpy>
10055598:	2120      	movs	r1, #32
1005559a:	a809      	add	r0, sp, #36	; 0x24
1005559c:	f7f1 f8e0 	bl	10046760 <__aeabi_memclr>
100555a0:	210a      	movs	r1, #10
100555a2:	4668      	mov	r0, sp
100555a4:	7001      	strb	r1, [r0, #0]
100555a6:	2400      	movs	r4, #0
100555a8:	4625      	mov	r5, r4
100555aa:	4669      	mov	r1, sp
100555ac:	a801      	add	r0, sp, #4
100555ae:	f000 ff73 	bl	10056498 <LL_Get_Adv_Data>
100555b2:	4668      	mov	r0, sp
100555b4:	7802      	ldrb	r2, [r0, #0]
100555b6:	a901      	add	r1, sp, #4
100555b8:	a809      	add	r0, sp, #36	; 0x24
100555ba:	f7eb f8e2 	bl	10040782 <Osal_MemCpy>
100555be:	a801      	add	r0, sp, #4
100555c0:	e024      	b.n	1005560c <GAP_Delete_ADType+0x84>
100555c2:	5d01      	ldrb	r1, [r0, r4]
100555c4:	1c49      	adds	r1, r1, #1
100555c6:	b2c9      	uxtb	r1, r1
100555c8:	4291      	cmp	r1, r2
100555ca:	d823      	bhi.n	10055614 <GAP_Delete_ADType+0x8c>
100555cc:	1903      	adds	r3, r0, r4
100555ce:	785b      	ldrb	r3, [r3, #1]
100555d0:	42b3      	cmp	r3, r6
100555d2:	d114      	bne.n	100555fe <GAP_Delete_ADType+0x76>
100555d4:	466b      	mov	r3, sp
100555d6:	781a      	ldrb	r2, [r3, #0]
100555d8:	1a52      	subs	r2, r2, r1
100555da:	1861      	adds	r1, r4, r1
100555dc:	b2c9      	uxtb	r1, r1
100555de:	1841      	adds	r1, r0, r1
100555e0:	b2d2      	uxtb	r2, r2
100555e2:	a809      	add	r0, sp, #36	; 0x24
100555e4:	701a      	strb	r2, [r3, #0]
100555e6:	1940      	adds	r0, r0, r5
100555e8:	f7eb f8cb 	bl	10040782 <Osal_MemCpy>
100555ec:	466b      	mov	r3, sp
100555ee:	7818      	ldrb	r0, [r3, #0]
100555f0:	1828      	adds	r0, r5, r0
100555f2:	b2c1      	uxtb	r1, r0
100555f4:	a809      	add	r0, sp, #36	; 0x24
100555f6:	f001 f893 	bl	10056720 <LL_Set_Adv_Data>
100555fa:	b012      	add	sp, #72	; 0x48
100555fc:	bd70      	pop	{r4, r5, r6, pc}
100555fe:	1a52      	subs	r2, r2, r1
10055600:	466b      	mov	r3, sp
10055602:	701a      	strb	r2, [r3, #0]
10055604:	1862      	adds	r2, r4, r1
10055606:	1869      	adds	r1, r5, r1
10055608:	b2d4      	uxtb	r4, r2
1005560a:	b2cd      	uxtb	r5, r1
1005560c:	4669      	mov	r1, sp
1005560e:	780a      	ldrb	r2, [r1, #0]
10055610:	2a00      	cmp	r2, #0
10055612:	d1d6      	bne.n	100555c2 <GAP_Delete_ADType+0x3a>
10055614:	201f      	movs	r0, #31
10055616:	e7f0      	b.n	100555fa <GAP_Delete_ADType+0x72>
10055618:	0201ff02 	.word	0x0201ff02
1005561c:	02030401 	.word	0x02030401
10055620:	0000fc8f 	.word	0x0000fc8f
	...

10055638 <GAP_Notify_Add_Charac>:
10055638:	b40f      	push	{r0, r1, r2, r3}
1005563a:	b510      	push	{r4, lr}
1005563c:	9c07      	ldr	r4, [sp, #28]
1005563e:	2801      	cmp	r0, #1
10055640:	d12d      	bne.n	1005569e <GAP_Notify_Add_Charac+0x66>
10055642:	4668      	mov	r0, sp
10055644:	8980      	ldrh	r0, [r0, #12]
10055646:	4917      	ldr	r1, [pc, #92]	; (100556a4 <GAP_Notify_Add_Charac+0x6c>)
10055648:	4288      	cmp	r0, r1
1005564a:	d110      	bne.n	1005566e <GAP_Notify_Add_Charac+0x36>
1005564c:	a803      	add	r0, sp, #12
1005564e:	c80f      	ldmia	r0, {r0, r1, r2, r3}
10055650:	f000 f8b4 	bl	100557bc <GATT_Num_Charac_Present>
10055654:	2800      	cmp	r0, #0
10055656:	d11d      	bne.n	10055694 <GAP_Notify_Add_Charac+0x5c>
10055658:	f002 fca4 	bl	10057fa4 <SDB_Get_Number_Of_Valid_Records>
1005565c:	28fa      	cmp	r0, #250	; 0xfa
1005565e:	d01e      	beq.n	1005569e <GAP_Notify_Add_Charac+0x66>
10055660:	2801      	cmp	r0, #1
10055662:	d91c      	bls.n	1005569e <GAP_Notify_Add_Charac+0x66>
10055664:	7820      	ldrb	r0, [r4, #0]
10055666:	21f3      	movs	r1, #243	; 0xf3
10055668:	4008      	ands	r0, r1
1005566a:	7020      	strb	r0, [r4, #0]
1005566c:	e017      	b.n	1005569e <GAP_Notify_Add_Charac+0x66>
1005566e:	490d      	ldr	r1, [pc, #52]	; (100556a4 <GAP_Notify_Add_Charac+0x6c>)
10055670:	1c49      	adds	r1, r1, #1
10055672:	4288      	cmp	r0, r1
10055674:	d008      	beq.n	10055688 <GAP_Notify_Add_Charac+0x50>
10055676:	1ec9      	subs	r1, r1, #3
10055678:	4288      	cmp	r0, r1
1005567a:	d005      	beq.n	10055688 <GAP_Notify_Add_Charac+0x50>
1005567c:	1c49      	adds	r1, r1, #1
1005567e:	4288      	cmp	r0, r1
10055680:	d002      	beq.n	10055688 <GAP_Notify_Add_Charac+0x50>
10055682:	1cc9      	adds	r1, r1, #3
10055684:	4288      	cmp	r0, r1
10055686:	d10a      	bne.n	1005569e <GAP_Notify_Add_Charac+0x66>
10055688:	ac03      	add	r4, sp, #12
1005568a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
1005568c:	f000 f896 	bl	100557bc <GATT_Num_Charac_Present>
10055690:	2800      	cmp	r0, #0
10055692:	d000      	beq.n	10055696 <GAP_Notify_Add_Charac+0x5e>
10055694:	2063      	movs	r0, #99	; 0x63
10055696:	bc10      	pop	{r4}
10055698:	bc08      	pop	{r3}
1005569a:	b004      	add	sp, #16
1005569c:	4718      	bx	r3
1005569e:	2000      	movs	r0, #0
100556a0:	e7f9      	b.n	10055696 <GAP_Notify_Add_Charac+0x5e>
100556a2:	0000      	.short	0x0000
100556a4:	00002a02 	.word	0x00002a02

100556a8 <GAP_Terminate_Link>:
100556a8:	b510      	push	{r4, lr}
100556aa:	f7fc f8b3 	bl	10051814 <LL_Disconnect_Link>
100556ae:	bd10      	pop	{r4, pc}

100556b0 <GAP_Update_Adv_Data>:
100556b0:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
100556b2:	b091      	sub	sp, #68	; 0x44
100556b4:	4604      	mov	r4, r0
100556b6:	2003      	movs	r0, #3
100556b8:	4669      	mov	r1, sp
100556ba:	7008      	strb	r0, [r1, #0]
100556bc:	2500      	movs	r5, #0
100556be:	a801      	add	r0, sp, #4
100556c0:	f000 feea 	bl	10056498 <LL_Get_Adv_Data>
100556c4:	4622      	mov	r2, r4
100556c6:	a809      	add	r0, sp, #36	; 0x24
100556c8:	9912      	ldr	r1, [sp, #72]	; 0x48
100556ca:	f7eb f85a 	bl	10040782 <Osal_MemCpy>
100556ce:	4621      	mov	r1, r4
100556d0:	e034      	b.n	1005573c <GAP_Update_Adv_Data+0x8c>
100556d2:	2000      	movs	r0, #0
100556d4:	ab01      	add	r3, sp, #4
100556d6:	195b      	adds	r3, r3, r5
100556d8:	469c      	mov	ip, r3
100556da:	e014      	b.n	10055706 <GAP_Update_Adv_Data+0x56>
100556dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
100556de:	5c1b      	ldrb	r3, [r3, r0]
100556e0:	4293      	cmp	r3, r2
100556e2:	d839      	bhi.n	10055758 <GAP_Update_Adv_Data+0xa8>
100556e4:	4293      	cmp	r3, r2
100556e6:	d101      	bne.n	100556ec <GAP_Update_Adv_Data+0x3c>
100556e8:	2b00      	cmp	r3, #0
100556ea:	d135      	bne.n	10055758 <GAP_Update_Adv_Data+0xa8>
100556ec:	9e12      	ldr	r6, [sp, #72]	; 0x48
100556ee:	1ad2      	subs	r2, r2, r3
100556f0:	1836      	adds	r6, r6, r0
100556f2:	4667      	mov	r7, ip
100556f4:	1e52      	subs	r2, r2, #1
100556f6:	7876      	ldrb	r6, [r6, #1]
100556f8:	787f      	ldrb	r7, [r7, #1]
100556fa:	b2d2      	uxtb	r2, r2
100556fc:	42be      	cmp	r6, r7
100556fe:	d013      	beq.n	10055728 <GAP_Update_Adv_Data+0x78>
10055700:	1c40      	adds	r0, r0, #1
10055702:	1818      	adds	r0, r3, r0
10055704:	b2c0      	uxtb	r0, r0
10055706:	42a0      	cmp	r0, r4
10055708:	d3e8      	bcc.n	100556dc <GAP_Update_Adv_Data+0x2c>
1005570a:	af01      	add	r7, sp, #4
1005570c:	5d7a      	ldrb	r2, [r7, r5]
1005570e:	1c4e      	adds	r6, r1, #1
10055710:	1990      	adds	r0, r2, r6
10055712:	281f      	cmp	r0, #31
10055714:	d82d      	bhi.n	10055772 <GAP_Update_Adv_Data+0xc2>
10055716:	ab09      	add	r3, sp, #36	; 0x24
10055718:	1858      	adds	r0, r3, r1
1005571a:	4661      	mov	r1, ip
1005571c:	1c52      	adds	r2, r2, #1
1005571e:	f7eb f830 	bl	10040782 <Osal_MemCpy>
10055722:	5d78      	ldrb	r0, [r7, r5]
10055724:	1980      	adds	r0, r0, r6
10055726:	b2c1      	uxtb	r1, r0
10055728:	a801      	add	r0, sp, #4
1005572a:	466b      	mov	r3, sp
1005572c:	5d40      	ldrb	r0, [r0, r5]
1005572e:	781a      	ldrb	r2, [r3, #0]
10055730:	1c6d      	adds	r5, r5, #1
10055732:	1a12      	subs	r2, r2, r0
10055734:	1e52      	subs	r2, r2, #1
10055736:	1940      	adds	r0, r0, r5
10055738:	701a      	strb	r2, [r3, #0]
1005573a:	b2c5      	uxtb	r5, r0
1005573c:	4668      	mov	r0, sp
1005573e:	7800      	ldrb	r0, [r0, #0]
10055740:	4622      	mov	r2, r4
10055742:	2800      	cmp	r0, #0
10055744:	d1c5      	bne.n	100556d2 <GAP_Update_Adv_Data+0x22>
10055746:	e010      	b.n	1005576a <GAP_Update_Adv_Data+0xba>
10055748:	9b12      	ldr	r3, [sp, #72]	; 0x48
1005574a:	5c1b      	ldrb	r3, [r3, r0]
1005574c:	4293      	cmp	r3, r2
1005574e:	d803      	bhi.n	10055758 <GAP_Update_Adv_Data+0xa8>
10055750:	4293      	cmp	r3, r2
10055752:	d104      	bne.n	1005575e <GAP_Update_Adv_Data+0xae>
10055754:	2b00      	cmp	r3, #0
10055756:	d002      	beq.n	1005575e <GAP_Update_Adv_Data+0xae>
10055758:	2042      	movs	r0, #66	; 0x42
1005575a:	b013      	add	sp, #76	; 0x4c
1005575c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005575e:	1ad2      	subs	r2, r2, r3
10055760:	1e52      	subs	r2, r2, #1
10055762:	1c40      	adds	r0, r0, #1
10055764:	1818      	adds	r0, r3, r0
10055766:	b2d2      	uxtb	r2, r2
10055768:	b2c0      	uxtb	r0, r0
1005576a:	42a0      	cmp	r0, r4
1005576c:	d3ec      	bcc.n	10055748 <GAP_Update_Adv_Data+0x98>
1005576e:	291f      	cmp	r1, #31
10055770:	d901      	bls.n	10055776 <GAP_Update_Adv_Data+0xc6>
10055772:	2041      	movs	r0, #65	; 0x41
10055774:	e7f1      	b.n	1005575a <GAP_Update_Adv_Data+0xaa>
10055776:	a809      	add	r0, sp, #36	; 0x24
10055778:	f000 ffd2 	bl	10056720 <LL_Set_Adv_Data>
1005577c:	e7ed      	b.n	1005575a <GAP_Update_Adv_Data+0xaa>
	...

10055780 <Get_GAP_Handle>:
10055780:	4802      	ldr	r0, [pc, #8]	; (1005578c <Get_GAP_Handle+0xc>)
10055782:	6800      	ldr	r0, [r0, #0]
10055784:	30ae      	adds	r0, #174	; 0xae
10055786:	8800      	ldrh	r0, [r0, #0]
10055788:	4770      	bx	lr
1005578a:	0000      	.short	0x0000
1005578c:	20000d64 	.word	0x20000d64

10055790 <Get_StaticRandAddr>:
10055790:	b510      	push	{r4, lr}
10055792:	4903      	ldr	r1, [pc, #12]	; (100557a0 <Get_StaticRandAddr+0x10>)
10055794:	2206      	movs	r2, #6
10055796:	6809      	ldr	r1, [r1, #0]
10055798:	31b3      	adds	r1, #179	; 0xb3
1005579a:	f7ea fff2 	bl	10040782 <Osal_MemCpy>
1005579e:	bd10      	pop	{r4, pc}
100557a0:	20000d64 	.word	0x20000d64

100557a4 <Check_Encry_Key_Size>:
100557a4:	2324      	movs	r3, #36	; 0x24
100557a6:	4218      	tst	r0, r3
100557a8:	d004      	beq.n	100557b4 <Check_Encry_Key_Size+0x10>
100557aa:	1fc8      	subs	r0, r1, #7
100557ac:	2809      	cmp	r0, #9
100557ae:	d803      	bhi.n	100557b8 <Check_Encry_Key_Size+0x14>
100557b0:	3220      	adds	r2, #32
100557b2:	71d1      	strb	r1, [r2, #7]
100557b4:	2000      	movs	r0, #0
100557b6:	4770      	bx	lr
100557b8:	2042      	movs	r0, #66	; 0x42
100557ba:	4770      	bx	lr

100557bc <GATT_Num_Charac_Present>:
100557bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
100557be:	b082      	sub	sp, #8
100557c0:	2400      	movs	r4, #0
100557c2:	f7ff ffdd 	bl	10055780 <Get_GAP_Handle>
100557c6:	4669      	mov	r1, sp
100557c8:	f7f6 fc5e 	bl	1004c088 <Gatt_search_service_handle>
100557cc:	9a00      	ldr	r2, [sp, #0]
100557ce:	4668      	mov	r0, sp
100557d0:	6a11      	ldr	r1, [r2, #32]
100557d2:	8900      	ldrh	r0, [r0, #8]
100557d4:	3220      	adds	r2, #32
100557d6:	e009      	b.n	100557ec <GATT_Num_Charac_Present+0x30>
100557d8:	2323      	movs	r3, #35	; 0x23
100557da:	5c5b      	ldrb	r3, [r3, r1]
100557dc:	2b01      	cmp	r3, #1
100557de:	d104      	bne.n	100557ea <GATT_Num_Charac_Present+0x2e>
100557e0:	890b      	ldrh	r3, [r1, #8]
100557e2:	4283      	cmp	r3, r0
100557e4:	d101      	bne.n	100557ea <GATT_Num_Charac_Present+0x2e>
100557e6:	1c64      	adds	r4, r4, #1
100557e8:	b2e4      	uxtb	r4, r4
100557ea:	6809      	ldr	r1, [r1, #0]
100557ec:	4291      	cmp	r1, r2
100557ee:	d1f3      	bne.n	100557d8 <GATT_Num_Charac_Present+0x1c>
100557f0:	4620      	mov	r0, r4
100557f2:	b006      	add	sp, #24
100557f4:	bd10      	pop	{r4, pc}
	...

100557f8 <Gatt_Change_Attribute_Permission>:
100557f8:	b538      	push	{r3, r4, r5, lr}
100557fa:	460d      	mov	r5, r1
100557fc:	4614      	mov	r4, r2
100557fe:	4669      	mov	r1, sp
10055800:	f7f6 fc42 	bl	1004c088 <Gatt_search_service_handle>
10055804:	2800      	cmp	r0, #0
10055806:	d117      	bne.n	10055838 <Gatt_Change_Attribute_Permission+0x40>
10055808:	9b00      	ldr	r3, [sp, #0]
1005580a:	6a18      	ldr	r0, [r3, #32]
1005580c:	3320      	adds	r3, #32
1005580e:	e011      	b.n	10055834 <Gatt_Change_Attribute_Permission+0x3c>
10055810:	8b81      	ldrh	r1, [r0, #28]
10055812:	42a9      	cmp	r1, r5
10055814:	d10d      	bne.n	10055832 <Gatt_Change_Attribute_Permission+0x3a>
10055816:	4601      	mov	r1, r0
10055818:	3120      	adds	r1, #32
1005581a:	78ca      	ldrb	r2, [r1, #3]
1005581c:	2a01      	cmp	r2, #1
1005581e:	d106      	bne.n	1005582e <Gatt_Change_Attribute_Permission+0x36>
10055820:	8900      	ldrh	r0, [r0, #8]
10055822:	4a06      	ldr	r2, [pc, #24]	; (1005583c <Gatt_Change_Attribute_Permission+0x44>)
10055824:	4290      	cmp	r0, r2
10055826:	d102      	bne.n	1005582e <Gatt_Change_Attribute_Permission+0x36>
10055828:	714c      	strb	r4, [r1, #5]
1005582a:	2000      	movs	r0, #0
1005582c:	bd38      	pop	{r3, r4, r5, pc}
1005582e:	2046      	movs	r0, #70	; 0x46
10055830:	bd38      	pop	{r3, r4, r5, pc}
10055832:	6800      	ldr	r0, [r0, #0]
10055834:	4298      	cmp	r0, r3
10055836:	d1eb      	bne.n	10055810 <Gatt_Change_Attribute_Permission+0x18>
10055838:	2041      	movs	r0, #65	; 0x41
1005583a:	bd38      	pop	{r3, r4, r5, pc}
1005583c:	00002902 	.word	0x00002902

10055840 <Start_Gatt_Timer>:
10055840:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10055842:	4604      	mov	r4, r0
10055844:	4806      	ldr	r0, [pc, #24]	; (10055860 <Start_Gatt_Timer+0x20>)
10055846:	9002      	str	r0, [sp, #8]
10055848:	4608      	mov	r0, r1
1005584a:	f7f5 fbdd 	bl	1004b008 <Gatt_Find_Timed_Out_Connection_Index>
1005584e:	0080      	lsls	r0, r0, #2
10055850:	1900      	adds	r0, r0, r4
10055852:	4669      	mov	r1, sp
10055854:	3011      	adds	r0, #17
10055856:	7308      	strb	r0, [r1, #12]
10055858:	4668      	mov	r0, sp
1005585a:	f7f8 f855 	bl	1004d908 <Timer_StartOneShot>
1005585e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
10055860:	00007530 	.word	0x00007530

10055864 <Stop_Gatt_Timer>:
10055864:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10055866:	4604      	mov	r4, r0
10055868:	4608      	mov	r0, r1
1005586a:	f7f5 fbcd 	bl	1004b008 <Gatt_Find_Timed_Out_Connection_Index>
1005586e:	0080      	lsls	r0, r0, #2
10055870:	1900      	adds	r0, r0, r4
10055872:	4669      	mov	r1, sp
10055874:	3011      	adds	r0, #17
10055876:	7308      	strb	r0, [r1, #12]
10055878:	4668      	mov	r0, sp
1005587a:	f7f8 f891 	bl	1004d9a0 <Timer_StopOneShot>
1005587e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

10055880 <List_Circular_Get_Size>:
10055880:	6802      	ldr	r2, [r0, #0]
10055882:	2300      	movs	r3, #0
10055884:	800b      	strh	r3, [r1, #0]
10055886:	4282      	cmp	r2, r0
10055888:	d003      	beq.n	10055892 <List_Circular_Get_Size+0x12>
1005588a:	b29b      	uxth	r3, r3
1005588c:	6812      	ldr	r2, [r2, #0]
1005588e:	1c5b      	adds	r3, r3, #1
10055890:	e7f8      	b.n	10055884 <List_Circular_Get_Size+0x4>
10055892:	4770      	bx	lr

10055894 <List_Circular_Insert_Tail>:
10055894:	6008      	str	r0, [r1, #0]
10055896:	6842      	ldr	r2, [r0, #4]
10055898:	604a      	str	r2, [r1, #4]
1005589a:	6842      	ldr	r2, [r0, #4]
1005589c:	6011      	str	r1, [r2, #0]
1005589e:	6041      	str	r1, [r0, #4]
100558a0:	4770      	bx	lr

100558a2 <List_Circular_Node_Present>:
100558a2:	6802      	ldr	r2, [r0, #0]
100558a4:	e004      	b.n	100558b0 <List_Circular_Node_Present+0xe>
100558a6:	428a      	cmp	r2, r1
100558a8:	d101      	bne.n	100558ae <List_Circular_Node_Present+0xc>
100558aa:	2001      	movs	r0, #1
100558ac:	4770      	bx	lr
100558ae:	6812      	ldr	r2, [r2, #0]
100558b0:	4282      	cmp	r2, r0
100558b2:	d1f8      	bne.n	100558a6 <List_Circular_Node_Present+0x4>
100558b4:	2000      	movs	r0, #0
100558b6:	4770      	bx	lr

100558b8 <List_Circular_Remove_Head>:
100558b8:	6802      	ldr	r2, [r0, #0]
100558ba:	600a      	str	r2, [r1, #0]
100558bc:	6812      	ldr	r2, [r2, #0]
100558be:	6002      	str	r2, [r0, #0]
100558c0:	680a      	ldr	r2, [r1, #0]
100558c2:	6812      	ldr	r2, [r2, #0]
100558c4:	6050      	str	r0, [r2, #4]
100558c6:	680a      	ldr	r2, [r1, #0]
100558c8:	2000      	movs	r0, #0
100558ca:	6010      	str	r0, [r2, #0]
100558cc:	6809      	ldr	r1, [r1, #0]
100558ce:	6048      	str	r0, [r1, #4]
100558d0:	4770      	bx	lr

100558d2 <List_Circular_Remove_Node>:
100558d2:	b500      	push	{lr}
100558d4:	460b      	mov	r3, r1
100558d6:	f7ff ffe4 	bl	100558a2 <List_Circular_Node_Present>
100558da:	2800      	cmp	r0, #0
100558dc:	d008      	beq.n	100558f0 <List_Circular_Remove_Node+0x1e>
100558de:	cb03      	ldmia	r3!, {r0, r1}
100558e0:	3b08      	subs	r3, #8
100558e2:	6008      	str	r0, [r1, #0]
100558e4:	cb03      	ldmia	r3!, {r0, r1}
100558e6:	6041      	str	r1, [r0, #4]
100558e8:	2000      	movs	r0, #0
100558ea:	3b08      	subs	r3, #8
100558ec:	6018      	str	r0, [r3, #0]
100558ee:	6058      	str	r0, [r3, #4]
100558f0:	bd00      	pop	{pc}
	...

100558f4 <isr_postproc1>:
100558f4:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100558f6:	6915      	ldr	r5, [r2, #16]
100558f8:	461e      	mov	r6, r3
100558fa:	03a8      	lsls	r0, r5, #14
100558fc:	362e      	adds	r6, #46	; 0x2e
100558fe:	b089      	sub	sp, #36	; 0x24
10055900:	461c      	mov	r4, r3
10055902:	4617      	mov	r7, r2
10055904:	2800      	cmp	r0, #0
10055906:	da32      	bge.n	1005596e <isr_postproc1+0x7a>
10055908:	2210      	movs	r2, #16
1005590a:	4669      	mov	r1, sp
1005590c:	4630      	mov	r0, r6
1005590e:	f7f7 f839 	bl	1004c984 <char_copy>
10055912:	2409      	movs	r4, #9
10055914:	06e4      	lsls	r4, r4, #27
10055916:	9803      	ldr	r0, [sp, #12]
10055918:	61a0      	str	r0, [r4, #24]
1005591a:	9802      	ldr	r0, [sp, #8]
1005591c:	61e0      	str	r0, [r4, #28]
1005591e:	9801      	ldr	r0, [sp, #4]
10055920:	6220      	str	r0, [r4, #32]
10055922:	9800      	ldr	r0, [sp, #0]
10055924:	6260      	str	r0, [r4, #36]	; 0x24
10055926:	4835      	ldr	r0, [pc, #212]	; (100559fc <isr_postproc1+0x108>)
10055928:	6801      	ldr	r1, [r0, #0]
1005592a:	14e0      	asrs	r0, r4, #19
1005592c:	1808      	adds	r0, r1, r0
1005592e:	6f01      	ldr	r1, [r0, #112]	; 0x70
10055930:	62a1      	str	r1, [r4, #40]	; 0x28
10055932:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
10055934:	62e0      	str	r0, [r4, #44]	; 0x2c
10055936:	980a      	ldr	r0, [sp, #40]	; 0x28
10055938:	3080      	adds	r0, #128	; 0x80
1005593a:	6c01      	ldr	r1, [r0, #64]	; 0x40
1005593c:	6321      	str	r1, [r4, #48]	; 0x30
1005593e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
10055940:	6360      	str	r0, [r4, #52]	; 0x34
10055942:	f000 f86a 	bl	10055a1a <wait_for_aes_ready>
10055946:	6ba0      	ldr	r0, [r4, #56]	; 0x38
10055948:	9003      	str	r0, [sp, #12]
1005594a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
1005594c:	9002      	str	r0, [sp, #8]
1005594e:	482c      	ldr	r0, [pc, #176]	; (10055a00 <isr_postproc1+0x10c>)
10055950:	6801      	ldr	r1, [r0, #0]
10055952:	9101      	str	r1, [sp, #4]
10055954:	6840      	ldr	r0, [r0, #4]
10055956:	9000      	str	r0, [sp, #0]
10055958:	2210      	movs	r2, #16
1005595a:	4631      	mov	r1, r6
1005595c:	4668      	mov	r0, sp
1005595e:	f7f7 f811 	bl	1004c984 <char_copy>
10055962:	2001      	movs	r0, #1
10055964:	0440      	lsls	r0, r0, #17
10055966:	4385      	bics	r5, r0
10055968:	613d      	str	r5, [r7, #16]
1005596a:	b00d      	add	sp, #52	; 0x34
1005596c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005596e:	05e8      	lsls	r0, r5, #23
10055970:	d53c      	bpl.n	100559ec <isr_postproc1+0xf8>
10055972:	a805      	add	r0, sp, #20
10055974:	4601      	mov	r1, r0
10055976:	9000      	str	r0, [sp, #0]
10055978:	2210      	movs	r2, #16
1005597a:	4630      	mov	r0, r6
1005597c:	f7f7 f802 	bl	1004c984 <char_copy>
10055980:	20ff      	movs	r0, #255	; 0xff
10055982:	3001      	adds	r0, #1
10055984:	4385      	bics	r5, r0
10055986:	2041      	movs	r0, #65	; 0x41
10055988:	0280      	lsls	r0, r0, #10
1005598a:	4305      	orrs	r5, r0
1005598c:	613d      	str	r5, [r7, #16]
1005598e:	9809      	ldr	r0, [sp, #36]	; 0x24
10055990:	2208      	movs	r2, #8
10055992:	a901      	add	r1, sp, #4
10055994:	1cc0      	adds	r0, r0, #3
10055996:	f7f6 fff5 	bl	1004c984 <char_copy>
1005599a:	9809      	ldr	r0, [sp, #36]	; 0x24
1005599c:	4621      	mov	r1, r4
1005599e:	2204      	movs	r2, #4
100559a0:	312a      	adds	r1, #42	; 0x2a
100559a2:	300b      	adds	r0, #11
100559a4:	f7f6 ffee 	bl	1004c984 <char_copy>
100559a8:	4815      	ldr	r0, [pc, #84]	; (10055a00 <isr_postproc1+0x10c>)
100559aa:	a905      	add	r1, sp, #20
100559ac:	3828      	subs	r0, #40	; 0x28
100559ae:	f7f8 fe41 	bl	1004e634 <copy_4_u32>
100559b2:	2409      	movs	r4, #9
100559b4:	06e4      	lsls	r4, r4, #27
100559b6:	9802      	ldr	r0, [sp, #8]
100559b8:	62a0      	str	r0, [r4, #40]	; 0x28
100559ba:	9801      	ldr	r0, [sp, #4]
100559bc:	62e0      	str	r0, [r4, #44]	; 0x2c
100559be:	6b78      	ldr	r0, [r7, #52]	; 0x34
100559c0:	2208      	movs	r2, #8
100559c2:	a903      	add	r1, sp, #12
100559c4:	300d      	adds	r0, #13
100559c6:	f7f6 ffdd 	bl	1004c984 <char_copy>
100559ca:	9804      	ldr	r0, [sp, #16]
100559cc:	6320      	str	r0, [r4, #48]	; 0x30
100559ce:	9803      	ldr	r0, [sp, #12]
100559d0:	6360      	str	r0, [r4, #52]	; 0x34
100559d2:	f000 f822 	bl	10055a1a <wait_for_aes_ready>
100559d6:	490a      	ldr	r1, [pc, #40]	; (10055a00 <isr_postproc1+0x10c>)
100559d8:	a805      	add	r0, sp, #20
100559da:	3908      	subs	r1, #8
100559dc:	f7f8 fe2a 	bl	1004e634 <copy_4_u32>
100559e0:	2210      	movs	r2, #16
100559e2:	4631      	mov	r1, r6
100559e4:	9800      	ldr	r0, [sp, #0]
100559e6:	f7f6 ffcd 	bl	1004c984 <char_copy>
100559ea:	e7be      	b.n	1005596a <isr_postproc1+0x76>
100559ec:	7aa0      	ldrb	r0, [r4, #10]
100559ee:	0600      	lsls	r0, r0, #24
100559f0:	d4bb      	bmi.n	1005596a <isr_postproc1+0x76>
100559f2:	980a      	ldr	r0, [sp, #40]	; 0x28
100559f4:	f000 f806 	bl	10055a04 <isr_postproc_encrypt_data>
100559f8:	e7b7      	b.n	1005596a <isr_postproc1+0x76>
100559fa:	0000      	.short	0x0000
100559fc:	20000d64 	.word	0x20000d64
10055a00:	48000040 	.word	0x48000040

10055a04 <isr_postproc_encrypt_data>:
10055a04:	b510      	push	{r4, lr}
10055a06:	4604      	mov	r4, r0
10055a08:	3480      	adds	r4, #128	; 0x80
10055a0a:	6c60      	ldr	r0, [r4, #68]	; 0x44
10055a0c:	2800      	cmp	r0, #0
10055a0e:	d003      	beq.n	10055a18 <isr_postproc_encrypt_data+0x14>
10055a10:	f7f8 fe5c 	bl	1004e6cc <encrypt>
10055a14:	2000      	movs	r0, #0
10055a16:	6460      	str	r0, [r4, #68]	; 0x44
10055a18:	bd10      	pop	{r4, pc}

10055a1a <wait_for_aes_ready>:
10055a1a:	b508      	push	{r3, lr}
10055a1c:	2064      	movs	r0, #100	; 0x64
10055a1e:	4669      	mov	r1, sp
10055a20:	7008      	strb	r0, [r1, #0]
10055a22:	2109      	movs	r1, #9
10055a24:	06c9      	lsls	r1, r1, #27
10055a26:	466a      	mov	r2, sp
10055a28:	7810      	ldrb	r0, [r2, #0]
10055a2a:	1e40      	subs	r0, r0, #1
10055a2c:	7010      	strb	r0, [r2, #0]
10055a2e:	6948      	ldr	r0, [r1, #20]
10055a30:	04c0      	lsls	r0, r0, #19
10055a32:	d402      	bmi.n	10055a3a <wait_for_aes_ready+0x20>
10055a34:	7810      	ldrb	r0, [r2, #0]
10055a36:	2800      	cmp	r0, #0
10055a38:	d1f5      	bne.n	10055a26 <wait_for_aes_ready+0xc>
10055a3a:	7810      	ldrb	r0, [r2, #0]
10055a3c:	bd08      	pop	{r3, pc}
	...

10055a40 <LL_update_proc>:
10055a40:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10055a42:	b081      	sub	sp, #4
10055a44:	2300      	movs	r3, #0
10055a46:	9300      	str	r3, [sp, #0]
10055a48:	9b04      	ldr	r3, [sp, #16]
10055a4a:	2b01      	cmp	r3, #1
10055a4c:	d02b      	beq.n	10055aa6 <LL_update_proc+0x66>
10055a4e:	8c4b      	ldrh	r3, [r1, #34]	; 0x22
10055a50:	4d20      	ldr	r5, [pc, #128]	; (10055ad4 <LL_update_proc+0x94>)
10055a52:	011c      	lsls	r4, r3, #4
10055a54:	8c0b      	ldrh	r3, [r1, #32]
10055a56:	469c      	mov	ip, r3
10055a58:	7ecb      	ldrb	r3, [r1, #27]
10055a5a:	436b      	muls	r3, r5
10055a5c:	8b8d      	ldrh	r5, [r1, #28]
10055a5e:	46ae      	mov	lr, r5
10055a60:	8bcd      	ldrh	r5, [r1, #30]
10055a62:	6996      	ldr	r6, [r2, #24]
10055a64:	42a6      	cmp	r6, r4
10055a66:	d105      	bne.n	10055a74 <LL_update_proc+0x34>
10055a68:	8996      	ldrh	r6, [r2, #12]
10055a6a:	4566      	cmp	r6, ip
10055a6c:	d102      	bne.n	10055a74 <LL_update_proc+0x34>
10055a6e:	8f16      	ldrh	r6, [r2, #56]	; 0x38
10055a70:	42ae      	cmp	r6, r5
10055a72:	d001      	beq.n	10055a78 <LL_update_proc+0x38>
10055a74:	2640      	movs	r6, #64	; 0x40
10055a76:	9600      	str	r6, [sp, #0]
10055a78:	7996      	ldrb	r6, [r2, #6]
10055a7a:	2704      	movs	r7, #4
10055a7c:	0876      	lsrs	r6, r6, #1
10055a7e:	0076      	lsls	r6, r6, #1
10055a80:	433e      	orrs	r6, r7
10055a82:	7196      	strb	r6, [r2, #6]
10055a84:	6194      	str	r4, [r2, #24]
10055a86:	6154      	str	r4, [r2, #20]
10055a88:	4664      	mov	r4, ip
10055a8a:	8194      	strh	r4, [r2, #12]
10055a8c:	8715      	strh	r5, [r2, #56]	; 0x38
10055a8e:	9a04      	ldr	r2, [sp, #16]
10055a90:	2a01      	cmp	r2, #1
10055a92:	d017      	beq.n	10055ac4 <LL_update_proc+0x84>
10055a94:	610b      	str	r3, [r1, #16]
10055a96:	4670      	mov	r0, lr
10055a98:	684a      	ldr	r2, [r1, #4]
10055a9a:	0040      	lsls	r0, r0, #1
10055a9c:	1810      	adds	r0, r2, r0
10055a9e:	6048      	str	r0, [r1, #4]
10055aa0:	9800      	ldr	r0, [sp, #0]
10055aa2:	b005      	add	sp, #20
10055aa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055aa6:	4603      	mov	r3, r0
10055aa8:	3340      	adds	r3, #64	; 0x40
10055aaa:	461d      	mov	r5, r3
10055aac:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
10055aae:	4e09      	ldr	r6, [pc, #36]	; (10055ad4 <LL_update_proc+0x94>)
10055ab0:	011c      	lsls	r4, r3, #4
10055ab2:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
10055ab4:	469c      	mov	ip, r3
10055ab6:	2360      	movs	r3, #96	; 0x60
10055ab8:	5c1b      	ldrb	r3, [r3, r0]
10055aba:	4373      	muls	r3, r6
10055abc:	8cae      	ldrh	r6, [r5, #36]	; 0x24
10055abe:	8d2d      	ldrh	r5, [r5, #40]	; 0x28
10055ac0:	46b6      	mov	lr, r6
10055ac2:	e7ce      	b.n	10055a62 <LL_update_proc+0x22>
10055ac4:	6583      	str	r3, [r0, #88]	; 0x58
10055ac6:	4671      	mov	r1, lr
10055ac8:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10055aca:	0049      	lsls	r1, r1, #1
10055acc:	1851      	adds	r1, r2, r1
10055ace:	64c1      	str	r1, [r0, #76]	; 0x4c
10055ad0:	e7e6      	b.n	10055aa0 <LL_update_proc+0x60>
10055ad2:	0000      	.short	0x0000
10055ad4:	000004e2 	.word	0x000004e2

10055ad8 <addr_u32_from_u8>:
10055ad8:	b570      	push	{r4, r5, r6, lr}
10055ada:	4604      	mov	r4, r0
10055adc:	4616      	mov	r6, r2
10055ade:	460d      	mov	r5, r1
10055ae0:	4608      	mov	r0, r1
10055ae2:	f000 fa24 	bl	10055f2e <le4ByteToInt32>
10055ae6:	6020      	str	r0, [r4, #0]
10055ae8:	1d28      	adds	r0, r5, #4
10055aea:	f000 fa1b 	bl	10055f24 <le2ByteToInt16>
10055aee:	0431      	lsls	r1, r6, #16
10055af0:	1840      	adds	r0, r0, r1
10055af2:	6060      	str	r0, [r4, #4]
10055af4:	bd70      	pop	{r4, r5, r6, pc}
	...

10055af8 <cancel_connect_master>:
10055af8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10055afa:	4939      	ldr	r1, [pc, #228]	; (10055be0 <cancel_connect_master+0xe8>)
10055afc:	2209      	movs	r2, #9
10055afe:	6809      	ldr	r1, [r1, #0]
10055b00:	0212      	lsls	r2, r2, #8
10055b02:	188a      	adds	r2, r1, r2
10055b04:	6b13      	ldr	r3, [r2, #48]	; 0x30
10055b06:	2258      	movs	r2, #88	; 0x58
10055b08:	4342      	muls	r2, r0
10055b0a:	189c      	adds	r4, r3, r2
10055b0c:	2241      	movs	r2, #65	; 0x41
10055b0e:	0152      	lsls	r2, r2, #5
10055b10:	188d      	adds	r5, r1, r2
10055b12:	4934      	ldr	r1, [pc, #208]	; (10055be4 <cancel_connect_master+0xec>)
10055b14:	0180      	lsls	r0, r0, #6
10055b16:	1846      	adds	r6, r0, r1
10055b18:	8922      	ldrh	r2, [r4, #8]
10055b1a:	8f20      	ldrh	r0, [r4, #56]	; 0x38
10055b1c:	2120      	movs	r1, #32
10055b1e:	5d89      	ldrb	r1, [r1, r6]
10055b20:	1c52      	adds	r2, r2, #1
10055b22:	8122      	strh	r2, [r4, #8]
10055b24:	0040      	lsls	r0, r0, #1
10055b26:	6962      	ldr	r2, [r4, #20]
10055b28:	2700      	movs	r7, #0
10055b2a:	b200      	sxth	r0, r0
10055b2c:	1a10      	subs	r0, r2, r0
10055b2e:	6160      	str	r0, [r4, #20]
10055b30:	7af0      	ldrb	r0, [r6, #11]
10055b32:	1840      	adds	r0, r0, r1
10055b34:	b2c0      	uxtb	r0, r0
10055b36:	2825      	cmp	r0, #37	; 0x25
10055b38:	d300      	bcc.n	10055b3c <cancel_connect_master+0x44>
10055b3a:	3825      	subs	r0, #37	; 0x25
10055b3c:	72f0      	strb	r0, [r6, #11]
10055b3e:	79a0      	ldrb	r0, [r4, #6]
10055b40:	07c0      	lsls	r0, r0, #31
10055b42:	d02e      	beq.n	10055ba2 <cancel_connect_master+0xaa>
10055b44:	4628      	mov	r0, r5
10055b46:	3040      	adds	r0, #64	; 0x40
10055b48:	9000      	str	r0, [sp, #0]
10055b4a:	8e40      	ldrh	r0, [r0, #50]	; 0x32
10055b4c:	8921      	ldrh	r1, [r4, #8]
10055b4e:	1a40      	subs	r0, r0, r1
10055b50:	0400      	lsls	r0, r0, #16
10055b52:	0c00      	lsrs	r0, r0, #16
10055b54:	d125      	bne.n	10055ba2 <cancel_connect_master+0xaa>
10055b56:	4823      	ldr	r0, [pc, #140]	; (10055be4 <cancel_connect_master+0xec>)
10055b58:	380c      	subs	r0, #12
10055b5a:	8800      	ldrh	r0, [r0, #0]
10055b5c:	0740      	lsls	r0, r0, #29
10055b5e:	0f40      	lsrs	r0, r0, #29
10055b60:	f7fe f9ae 	bl	10053ec0 <anchor_replace>
10055b64:	4684      	mov	ip, r0
10055b66:	79a0      	ldrb	r0, [r4, #6]
10055b68:	0840      	lsrs	r0, r0, #1
10055b6a:	0040      	lsls	r0, r0, #1
10055b6c:	71a0      	strb	r0, [r4, #6]
10055b6e:	4628      	mov	r0, r5
10055b70:	30c0      	adds	r0, #192	; 0xc0
10055b72:	7a01      	ldrb	r1, [r0, #8]
10055b74:	0849      	lsrs	r1, r1, #1
10055b76:	0049      	lsls	r1, r1, #1
10055b78:	7201      	strb	r1, [r0, #8]
10055b7a:	9900      	ldr	r1, [sp, #0]
10055b7c:	89a3      	ldrh	r3, [r4, #12]
10055b7e:	8d4a      	ldrh	r2, [r1, #42]	; 0x2a
10055b80:	8dc9      	ldrh	r1, [r1, #46]	; 0x2e
10055b82:	0509      	lsls	r1, r1, #20
10055b84:	0c09      	lsrs	r1, r1, #16
10055b86:	4293      	cmp	r3, r2
10055b88:	d105      	bne.n	10055b96 <cancel_connect_master+0x9e>
10055b8a:	69a3      	ldr	r3, [r4, #24]
10055b8c:	428b      	cmp	r3, r1
10055b8e:	d102      	bne.n	10055b96 <cancel_connect_master+0x9e>
10055b90:	4663      	mov	r3, ip
10055b92:	2b00      	cmp	r3, #0
10055b94:	d001      	beq.n	10055b9a <cancel_connect_master+0xa2>
10055b96:	2740      	movs	r7, #64	; 0x40
10055b98:	e001      	b.n	10055b9e <cancel_connect_master+0xa6>
10055b9a:	2308      	movs	r3, #8
10055b9c:	7383      	strb	r3, [r0, #14]
10055b9e:	81a2      	strh	r2, [r4, #12]
10055ba0:	61a1      	str	r1, [r4, #24]
10055ba2:	79a0      	ldrb	r0, [r4, #6]
10055ba4:	0780      	lsls	r0, r0, #30
10055ba6:	d519      	bpl.n	10055bdc <cancel_connect_master+0xe4>
10055ba8:	2076      	movs	r0, #118	; 0x76
10055baa:	5b40      	ldrh	r0, [r0, r5]
10055bac:	8921      	ldrh	r1, [r4, #8]
10055bae:	1a40      	subs	r0, r0, r1
10055bb0:	0400      	lsls	r0, r0, #16
10055bb2:	0c00      	lsrs	r0, r0, #16
10055bb4:	d112      	bne.n	10055bdc <cancel_connect_master+0xe4>
10055bb6:	2180      	movs	r1, #128	; 0x80
10055bb8:	5949      	ldr	r1, [r1, r5]
10055bba:	3560      	adds	r5, #96	; 0x60
10055bbc:	9100      	str	r1, [sp, #0]
10055bbe:	7ea9      	ldrb	r1, [r5, #26]
10055bc0:	9101      	str	r1, [sp, #4]
10055bc2:	79a1      	ldrb	r1, [r4, #6]
10055bc4:	22fd      	movs	r2, #253	; 0xfd
10055bc6:	4011      	ands	r1, r2
10055bc8:	71a1      	strb	r1, [r4, #6]
10055bca:	4631      	mov	r1, r6
10055bcc:	4668      	mov	r0, sp
10055bce:	2205      	movs	r2, #5
10055bd0:	3121      	adds	r1, #33	; 0x21
10055bd2:	f7f6 fed7 	bl	1004c984 <char_copy>
10055bd6:	2001      	movs	r0, #1
10055bd8:	0540      	lsls	r0, r0, #21
10055bda:	4307      	orrs	r7, r0
10055bdc:	4638      	mov	r0, r7
10055bde:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10055be0:	20000d64 	.word	0x20000d64
10055be4:	200000cc 	.word	0x200000cc

10055be8 <cancel_master>:
10055be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10055bea:	4601      	mov	r1, r0
10055bec:	481b      	ldr	r0, [pc, #108]	; (10055c5c <cancel_master+0x74>)
10055bee:	2209      	movs	r2, #9
10055bf0:	6800      	ldr	r0, [r0, #0]
10055bf2:	0212      	lsls	r2, r2, #8
10055bf4:	1882      	adds	r2, r0, r2
10055bf6:	6b13      	ldr	r3, [r2, #48]	; 0x30
10055bf8:	2258      	movs	r2, #88	; 0x58
10055bfa:	434a      	muls	r2, r1
10055bfc:	189e      	adds	r6, r3, r2
10055bfe:	2241      	movs	r2, #65	; 0x41
10055c00:	0152      	lsls	r2, r2, #5
10055c02:	1885      	adds	r5, r0, r2
10055c04:	4a16      	ldr	r2, [pc, #88]	; (10055c60 <cancel_master+0x78>)
10055c06:	0188      	lsls	r0, r1, #6
10055c08:	1887      	adds	r7, r0, r2
10055c0a:	78b0      	ldrb	r0, [r6, #2]
10055c0c:	2400      	movs	r4, #0
10055c0e:	0740      	lsls	r0, r0, #29
10055c10:	0f40      	lsrs	r0, r0, #29
10055c12:	2805      	cmp	r0, #5
10055c14:	d002      	beq.n	10055c1c <cancel_master+0x34>
10055c16:	2801      	cmp	r0, #1
10055c18:	d005      	beq.n	10055c26 <cancel_master+0x3e>
10055c1a:	e010      	b.n	10055c3e <cancel_master+0x56>
10055c1c:	4608      	mov	r0, r1
10055c1e:	f7eb ff67 	bl	10041af0 <cancel_connect_master_ucfg>
10055c22:	4604      	mov	r4, r0
10055c24:	e00b      	b.n	10055c3e <cancel_master+0x56>
10055c26:	462a      	mov	r2, r5
10055c28:	3280      	adds	r2, #128	; 0x80
10055c2a:	8a10      	ldrh	r0, [r2, #16]
10055c2c:	2800      	cmp	r0, #0
10055c2e:	d002      	beq.n	10055c36 <cancel_master+0x4e>
10055c30:	1e40      	subs	r0, r0, #1
10055c32:	8210      	strh	r0, [r2, #16]
10055c34:	e003      	b.n	10055c3e <cancel_master+0x56>
10055c36:	2401      	movs	r4, #1
10055c38:	4608      	mov	r0, r1
10055c3a:	f7fe f967 	bl	10053f0c <cancel_current_master>
10055c3e:	7bf0      	ldrb	r0, [r6, #15]
10055c40:	28ff      	cmp	r0, #255	; 0xff
10055c42:	d201      	bcs.n	10055c48 <cancel_master+0x60>
10055c44:	1c40      	adds	r0, r0, #1
10055c46:	73f0      	strb	r0, [r6, #15]
10055c48:	2c00      	cmp	r4, #0
10055c4a:	d006      	beq.n	10055c5a <cancel_master+0x72>
10055c4c:	4623      	mov	r3, r4
10055c4e:	4632      	mov	r2, r6
10055c50:	4629      	mov	r1, r5
10055c52:	2000      	movs	r0, #0
10055c54:	9700      	str	r7, [sp, #0]
10055c56:	f7fc fdb7 	bl	100527c8 <isr_event_handler>
10055c5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10055c5c:	20000d64 	.word	0x20000d64
10055c60:	200000cc 	.word	0x200000cc

10055c64 <get_adv_addr>:
10055c64:	b510      	push	{r4, lr}
10055c66:	460b      	mov	r3, r1
10055c68:	7801      	ldrb	r1, [r0, #0]
10055c6a:	09ca      	lsrs	r2, r1, #7
10055c6c:	4601      	mov	r1, r0
10055c6e:	3108      	adds	r1, #8
10055c70:	4618      	mov	r0, r3
10055c72:	f7ff ff31 	bl	10055ad8 <addr_u32_from_u8>
10055c76:	bd10      	pop	{r4, pc}

10055c78 <get_scan_addr>:
10055c78:	b510      	push	{r4, lr}
10055c7a:	460b      	mov	r3, r1
10055c7c:	7801      	ldrb	r1, [r0, #0]
10055c7e:	0649      	lsls	r1, r1, #25
10055c80:	0fca      	lsrs	r2, r1, #31
10055c82:	1c81      	adds	r1, r0, #2
10055c84:	4618      	mov	r0, r3
10055c86:	f7ff ff27 	bl	10055ad8 <addr_u32_from_u8>
10055c8a:	bd10      	pop	{r4, pc}

10055c8c <go_to_connect>:
10055c8c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10055c8e:	460d      	mov	r5, r1
10055c90:	4606      	mov	r6, r0
10055c92:	b08d      	sub	sp, #52	; 0x34
10055c94:	2000      	movs	r0, #0
10055c96:	2109      	movs	r1, #9
10055c98:	06c9      	lsls	r1, r1, #27
10055c9a:	9f16      	ldr	r7, [sp, #88]	; 0x58
10055c9c:	4614      	mov	r4, r2
10055c9e:	6048      	str	r0, [r1, #4]
10055ca0:	4630      	mov	r0, r6
10055ca2:	300e      	adds	r0, #14
10055ca4:	f000 f943 	bl	10055f2e <le4ByteToInt32>
10055ca8:	9008      	str	r0, [sp, #32]
10055caa:	7cb1      	ldrb	r1, [r6, #18]
10055cac:	7cf0      	ldrb	r0, [r6, #19]
10055cae:	0202      	lsls	r2, r0, #8
10055cb0:	7d30      	ldrb	r0, [r6, #20]
10055cb2:	0400      	lsls	r0, r0, #16
10055cb4:	4310      	orrs	r0, r2
10055cb6:	4308      	orrs	r0, r1
10055cb8:	900a      	str	r0, [sp, #40]	; 0x28
10055cba:	7d70      	ldrb	r0, [r6, #21]
10055cbc:	9007      	str	r0, [sp, #28]
10055cbe:	4630      	mov	r0, r6
10055cc0:	3016      	adds	r0, #22
10055cc2:	f000 f92f 	bl	10055f24 <le2ByteToInt16>
10055cc6:	900c      	str	r0, [sp, #48]	; 0x30
10055cc8:	4630      	mov	r0, r6
10055cca:	3018      	adds	r0, #24
10055ccc:	f000 f92a 	bl	10055f24 <le2ByteToInt16>
10055cd0:	9006      	str	r0, [sp, #24]
10055cd2:	4630      	mov	r0, r6
10055cd4:	301a      	adds	r0, #26
10055cd6:	f000 f925 	bl	10055f24 <le2ByteToInt16>
10055cda:	900b      	str	r0, [sp, #44]	; 0x2c
10055cdc:	4630      	mov	r0, r6
10055cde:	301c      	adds	r0, #28
10055ce0:	f000 f920 	bl	10055f24 <le2ByteToInt16>
10055ce4:	9001      	str	r0, [sp, #4]
10055ce6:	4630      	mov	r0, r6
10055ce8:	301e      	adds	r0, #30
10055cea:	3620      	adds	r6, #32
10055cec:	9000      	str	r0, [sp, #0]
10055cee:	78f0      	ldrb	r0, [r6, #3]
10055cf0:	06c1      	lsls	r1, r0, #27
10055cf2:	0ec9      	lsrs	r1, r1, #27
10055cf4:	0946      	lsrs	r6, r0, #5
10055cf6:	2009      	movs	r0, #9
10055cf8:	06c0      	lsls	r0, r0, #27
10055cfa:	9109      	str	r1, [sp, #36]	; 0x24
10055cfc:	6880      	ldr	r0, [r0, #8]
10055cfe:	64a8      	str	r0, [r5, #72]	; 0x48
10055d00:	2000      	movs	r0, #0
10055d02:	4639      	mov	r1, r7
10055d04:	64e8      	str	r0, [r5, #76]	; 0x4c
10055d06:	3121      	adds	r1, #33	; 0x21
10055d08:	2205      	movs	r2, #5
10055d0a:	9102      	str	r1, [sp, #8]
10055d0c:	9800      	ldr	r0, [sp, #0]
10055d0e:	f7f6 fe39 	bl	1004c984 <char_copy>
10055d12:	2102      	movs	r1, #2
10055d14:	70e1      	strb	r1, [r4, #3]
10055d16:	2000      	movs	r0, #0
10055d18:	2222      	movs	r2, #34	; 0x22
10055d1a:	5550      	strb	r0, [r2, r5]
10055d1c:	73e0      	strb	r0, [r4, #15]
10055d1e:	9806      	ldr	r0, [sp, #24]
10055d20:	220c      	movs	r2, #12
10055d22:	4350      	muls	r0, r2
10055d24:	6160      	str	r0, [r4, #20]
10055d26:	2000      	movs	r0, #0
10055d28:	2231      	movs	r2, #49	; 0x31
10055d2a:	5510      	strb	r0, [r2, r4]
10055d2c:	9801      	ldr	r0, [sp, #4]
10055d2e:	2301      	movs	r3, #1
10055d30:	0100      	lsls	r0, r0, #4
10055d32:	61a0      	str	r0, [r4, #24]
10055d34:	4628      	mov	r0, r5
10055d36:	7121      	strb	r1, [r4, #4]
10055d38:	3040      	adds	r0, #64	; 0x40
10055d3a:	9003      	str	r0, [sp, #12]
10055d3c:	7183      	strb	r3, [r0, #6]
10055d3e:	9806      	ldr	r0, [sp, #24]
10055d40:	4970      	ldr	r1, [pc, #448]	; (10055f04 <go_to_connect+0x278>)
10055d42:	0240      	lsls	r0, r0, #9
10055d44:	1840      	adds	r0, r0, r1
10055d46:	4970      	ldr	r1, [pc, #448]	; (10055f08 <go_to_connect+0x27c>)
10055d48:	6a89      	ldr	r1, [r1, #40]	; 0x28
10055d4a:	4281      	cmp	r1, r0
10055d4c:	d200      	bcs.n	10055d50 <go_to_connect+0xc4>
10055d4e:	4608      	mov	r0, r1
10055d50:	2100      	movs	r1, #0
10055d52:	6568      	str	r0, [r5, #84]	; 0x54
10055d54:	8121      	strh	r1, [r4, #8]
10055d56:	980b      	ldr	r0, [sp, #44]	; 0x2c
10055d58:	81a0      	strh	r0, [r4, #12]
10055d5a:	9806      	ldr	r0, [sp, #24]
10055d5c:	8720      	strh	r0, [r4, #56]	; 0x38
10055d5e:	980c      	ldr	r0, [sp, #48]	; 0x30
10055d60:	0042      	lsls	r2, r0, #1
10055d62:	2001      	movs	r0, #1
10055d64:	1c92      	adds	r2, r2, #2
10055d66:	64ea      	str	r2, [r5, #76]	; 0x4c
10055d68:	9a03      	ldr	r2, [sp, #12]
10055d6a:	8396      	strh	r6, [r2, #28]
10055d6c:	9a03      	ldr	r2, [sp, #12]
10055d6e:	8096      	strh	r6, [r2, #4]
10055d70:	71a1      	strb	r1, [r4, #6]
10055d72:	6121      	str	r1, [r4, #16]
10055d74:	8020      	strh	r0, [r4, #0]
10055d76:	6aa0      	ldr	r0, [r4, #40]	; 0x28
10055d78:	8000      	strh	r0, [r0, #0]
10055d7a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
10055d7c:	8044      	strh	r4, [r0, #2]
10055d7e:	4620      	mov	r0, r4
10055d80:	3040      	adds	r0, #64	; 0x40
10055d82:	7501      	strb	r1, [r0, #20]
10055d84:	261b      	movs	r6, #27
10055d86:	21ff      	movs	r1, #255	; 0xff
10055d88:	8766      	strh	r6, [r4, #58]	; 0x3a
10055d8a:	3149      	adds	r1, #73	; 0x49
10055d8c:	462a      	mov	r2, r5
10055d8e:	8101      	strh	r1, [r0, #8]
10055d90:	32c0      	adds	r2, #192	; 0xc0
10055d92:	8a13      	ldrh	r3, [r2, #16]
10055d94:	2b1b      	cmp	r3, #27
10055d96:	d102      	bne.n	10055d9e <go_to_connect+0x112>
10055d98:	8a53      	ldrh	r3, [r2, #18]
10055d9a:	428b      	cmp	r3, r1
10055d9c:	d001      	beq.n	10055da2 <go_to_connect+0x116>
10055d9e:	2310      	movs	r3, #16
10055da0:	7503      	strb	r3, [r0, #20]
10055da2:	8b13      	ldrh	r3, [r2, #24]
10055da4:	87a3      	strh	r3, [r4, #60]	; 0x3c
10055da6:	87e6      	strh	r6, [r4, #62]	; 0x3e
10055da8:	8006      	strh	r6, [r0, #0]
10055daa:	8046      	strh	r6, [r0, #2]
10055dac:	8086      	strh	r6, [r0, #4]
10055dae:	80c6      	strh	r6, [r0, #6]
10055db0:	8b52      	ldrh	r2, [r2, #26]
10055db2:	8142      	strh	r2, [r0, #10]
10055db4:	8181      	strh	r1, [r0, #12]
10055db6:	81c1      	strh	r1, [r0, #14]
10055db8:	8201      	strh	r1, [r0, #16]
10055dba:	8241      	strh	r1, [r0, #18]
10055dbc:	8c28      	ldrh	r0, [r5, #32]
10055dbe:	4953      	ldr	r1, [pc, #332]	; (10055f0c <go_to_connect+0x280>)
10055dc0:	1c40      	adds	r0, r0, #1
10055dc2:	b280      	uxth	r0, r0
10055dc4:	4288      	cmp	r0, r1
10055dc6:	d902      	bls.n	10055dce <go_to_connect+0x142>
10055dc8:	4249      	negs	r1, r1
10055dca:	1840      	adds	r0, r0, r1
10055dcc:	b280      	uxth	r0, r0
10055dce:	8160      	strh	r0, [r4, #10]
10055dd0:	8428      	strh	r0, [r5, #32]
10055dd2:	20c7      	movs	r0, #199	; 0xc7
10055dd4:	9001      	str	r0, [sp, #4]
10055dd6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10055dd8:	72c8      	strb	r0, [r1, #11]
10055dda:	2205      	movs	r2, #5
10055ddc:	9902      	ldr	r1, [sp, #8]
10055dde:	9800      	ldr	r0, [sp, #0]
10055de0:	f7f6 fdd0 	bl	1004c984 <char_copy>
10055de4:	2000      	movs	r0, #0
10055de6:	72f8      	strb	r0, [r7, #11]
10055de8:	8d21      	ldrh	r1, [r4, #40]	; 0x28
10055dea:	8239      	strh	r1, [r7, #16]
10055dec:	75f8      	strb	r0, [r7, #23]
10055dee:	9808      	ldr	r0, [sp, #32]
10055df0:	61b8      	str	r0, [r7, #24]
10055df2:	980a      	ldr	r0, [sp, #40]	; 0x28
10055df4:	61f8      	str	r0, [r7, #28]
10055df6:	2120      	movs	r1, #32
10055df8:	9809      	ldr	r0, [sp, #36]	; 0x24
10055dfa:	55c8      	strb	r0, [r1, r7]
10055dfc:	f7eb fec6 	bl	10041b8c <data_length_extension_csr_ucfg>
10055e00:	2280      	movs	r2, #128	; 0x80
10055e02:	2801      	cmp	r0, #1
10055e04:	d100      	bne.n	10055e08 <go_to_connect+0x17c>
10055e06:	75ba      	strb	r2, [r7, #22]
10055e08:	2042      	movs	r0, #66	; 0x42
10055e0a:	9002      	str	r0, [sp, #8]
10055e0c:	9005      	str	r0, [sp, #20]
10055e0e:	4840      	ldr	r0, [pc, #256]	; (10055f10 <go_to_connect+0x284>)
10055e10:	9004      	str	r0, [sp, #16]
10055e12:	462e      	mov	r6, r5
10055e14:	9810      	ldr	r0, [sp, #64]	; 0x40
10055e16:	493f      	ldr	r1, [pc, #252]	; (10055f14 <go_to_connect+0x288>)
10055e18:	3680      	adds	r6, #128	; 0x80
10055e1a:	2800      	cmp	r0, #0
10055e1c:	d039      	beq.n	10055e92 <go_to_connect+0x206>
10055e1e:	6bb0      	ldr	r0, [r6, #56]	; 0x38
10055e20:	8000      	strh	r0, [r0, #0]
10055e22:	6bb2      	ldr	r2, [r6, #56]	; 0x38
10055e24:	9801      	ldr	r0, [sp, #4]
10055e26:	72d0      	strb	r0, [r2, #11]
10055e28:	8f30      	ldrh	r0, [r6, #56]	; 0x38
10055e2a:	8278      	strh	r0, [r7, #18]
10055e2c:	9810      	ldr	r0, [sp, #64]	; 0x40
10055e2e:	4a3a      	ldr	r2, [pc, #232]	; (10055f18 <go_to_connect+0x28c>)
10055e30:	6800      	ldr	r0, [r0, #0]
10055e32:	6128      	str	r0, [r5, #16]
10055e34:	9810      	ldr	r0, [sp, #64]	; 0x40
10055e36:	6840      	ldr	r0, [r0, #4]
10055e38:	6168      	str	r0, [r5, #20]
10055e3a:	9807      	ldr	r0, [sp, #28]
10055e3c:	4350      	muls	r0, r2
10055e3e:	30ff      	adds	r0, #255	; 0xff
10055e40:	30f5      	adds	r0, #245	; 0xf5
10055e42:	65a8      	str	r0, [r5, #88]	; 0x58
10055e44:	9a03      	ldr	r2, [sp, #12]
10055e46:	2001      	movs	r0, #1
10055e48:	7790      	strb	r0, [r2, #30]
10055e4a:	8808      	ldrh	r0, [r1, #0]
10055e4c:	4a33      	ldr	r2, [pc, #204]	; (10055f1c <go_to_connect+0x290>)
10055e4e:	0740      	lsls	r0, r0, #29
10055e50:	6812      	ldr	r2, [r2, #0]
10055e52:	233f      	movs	r3, #63	; 0x3f
10055e54:	0f40      	lsrs	r0, r0, #29
10055e56:	015b      	lsls	r3, r3, #5
10055e58:	18d2      	adds	r2, r2, r3
10055e5a:	7290      	strb	r0, [r2, #10]
10055e5c:	7960      	ldrb	r0, [r4, #5]
10055e5e:	22c0      	movs	r2, #192	; 0xc0
10055e60:	4310      	orrs	r0, r2
10055e62:	7160      	strb	r0, [r4, #5]
10055e64:	2000      	movs	r0, #0
10055e66:	72b8      	strb	r0, [r7, #10]
10055e68:	78a0      	ldrb	r0, [r4, #2]
10055e6a:	08c0      	lsrs	r0, r0, #3
10055e6c:	00c0      	lsls	r0, r0, #3
10055e6e:	1c80      	adds	r0, r0, #2
10055e70:	70a0      	strb	r0, [r4, #2]
10055e72:	6bb2      	ldr	r2, [r6, #56]	; 0x38
10055e74:	201b      	movs	r0, #27
10055e76:	7290      	strb	r0, [r2, #10]
10055e78:	8808      	ldrh	r0, [r1, #0]
10055e7a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10055e7c:	0140      	lsls	r0, r0, #5
10055e7e:	3008      	adds	r0, #8
10055e80:	7288      	strb	r0, [r1, #10]
10055e82:	2000      	movs	r0, #0
10055e84:	43c0      	mvns	r0, r0
10055e86:	8230      	strh	r0, [r6, #16]
10055e88:	6bb1      	ldr	r1, [r6, #56]	; 0x38
10055e8a:	2203      	movs	r2, #3
10055e8c:	1dc9      	adds	r1, r1, #7
10055e8e:	9802      	ldr	r0, [sp, #8]
10055e90:	e025      	b.n	10055ede <go_to_connect+0x252>
10055e92:	6b70      	ldr	r0, [r6, #52]	; 0x34
10055e94:	8000      	strh	r0, [r0, #0]
10055e96:	6b73      	ldr	r3, [r6, #52]	; 0x34
10055e98:	9801      	ldr	r0, [sp, #4]
10055e9a:	72d8      	strb	r0, [r3, #11]
10055e9c:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
10055e9e:	8278      	strh	r0, [r7, #18]
10055ea0:	7960      	ldrb	r0, [r4, #5]
10055ea2:	23c0      	movs	r3, #192	; 0xc0
10055ea4:	4318      	orrs	r0, r3
10055ea6:	7160      	strb	r0, [r4, #5]
10055ea8:	72ba      	strb	r2, [r7, #10]
10055eaa:	78a0      	ldrb	r0, [r4, #2]
10055eac:	4d1c      	ldr	r5, [pc, #112]	; (10055f20 <go_to_connect+0x294>)
10055eae:	08c0      	lsrs	r0, r0, #3
10055eb0:	00c0      	lsls	r0, r0, #3
10055eb2:	1d40      	adds	r0, r0, #5
10055eb4:	70a0      	strb	r0, [r4, #2]
10055eb6:	8808      	ldrh	r0, [r1, #0]
10055eb8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10055eba:	0140      	lsls	r0, r0, #5
10055ebc:	3019      	adds	r0, #25
10055ebe:	7288      	strb	r0, [r1, #10]
10055ec0:	6b71      	ldr	r1, [r6, #52]	; 0x34
10055ec2:	200a      	movs	r0, #10
10055ec4:	7288      	strb	r0, [r1, #10]
10055ec6:	f7fe fc63 	bl	10054790 <timebase_start_connect>
10055eca:	6b71      	ldr	r1, [r6, #52]	; 0x34
10055ecc:	2203      	movs	r2, #3
10055ece:	1dc9      	adds	r1, r1, #7
10055ed0:	9802      	ldr	r0, [sp, #8]
10055ed2:	f7f6 fda9 	bl	1004ca28 <set_string>
10055ed6:	6b71      	ldr	r1, [r6, #52]	; 0x34
10055ed8:	2203      	movs	r2, #3
10055eda:	4628      	mov	r0, r5
10055edc:	1d09      	adds	r1, r1, #4
10055ede:	f7f6 fda3 	bl	1004ca28 <set_string>
10055ee2:	2001      	movs	r0, #1
10055ee4:	f006 fe98 	bl	1005cc18 <advance_wakeup_timer>
10055ee8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10055eea:	2203      	movs	r2, #3
10055eec:	1dc9      	adds	r1, r1, #7
10055eee:	9805      	ldr	r0, [sp, #20]
10055ef0:	f7f6 fd9a 	bl	1004ca28 <set_string>
10055ef4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10055ef6:	2203      	movs	r2, #3
10055ef8:	1d09      	adds	r1, r1, #4
10055efa:	9804      	ldr	r0, [sp, #16]
10055efc:	f7f6 fd94 	bl	1004ca28 <set_string>
10055f00:	b011      	add	sp, #68	; 0x44
10055f02:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055f04:	fffffd9a 	.word	0xfffffd9a
10055f08:	200002dc 	.word	0x200002dc
10055f0c:	00000eff 	.word	0x00000eff
10055f10:	003000fa 	.word	0x003000fa
10055f14:	200000c0 	.word	0x200000c0
10055f18:	000004e2 	.word	0x000004e2
10055f1c:	20000d64 	.word	0x20000d64
10055f20:	00b0012c 	.word	0x00b0012c

10055f24 <le2ByteToInt16>:
10055f24:	7801      	ldrb	r1, [r0, #0]
10055f26:	7840      	ldrb	r0, [r0, #1]
10055f28:	0200      	lsls	r0, r0, #8
10055f2a:	4308      	orrs	r0, r1
10055f2c:	4770      	bx	lr

10055f2e <le4ByteToInt32>:
10055f2e:	7801      	ldrb	r1, [r0, #0]
10055f30:	7842      	ldrb	r2, [r0, #1]
10055f32:	0213      	lsls	r3, r2, #8
10055f34:	7882      	ldrb	r2, [r0, #2]
10055f36:	78c0      	ldrb	r0, [r0, #3]
10055f38:	0412      	lsls	r2, r2, #16
10055f3a:	0600      	lsls	r0, r0, #24
10055f3c:	4310      	orrs	r0, r2
10055f3e:	4318      	orrs	r0, r3
10055f40:	4308      	orrs	r0, r1
10055f42:	4770      	bx	lr

10055f44 <unpack_channel_map>:
10055f44:	b570      	push	{r4, r5, r6, lr}
10055f46:	4605      	mov	r5, r0
10055f48:	4616      	mov	r6, r2
10055f4a:	460c      	mov	r4, r1
10055f4c:	1cc0      	adds	r0, r0, #3
10055f4e:	f7ff ffee 	bl	10055f2e <le4ByteToInt32>
10055f52:	2184      	movs	r1, #132	; 0x84
10055f54:	5108      	str	r0, [r1, r4]
10055f56:	79e9      	ldrb	r1, [r5, #7]
10055f58:	207b      	movs	r0, #123	; 0x7b
10055f5a:	5501      	strb	r1, [r0, r4]
10055f5c:	4628      	mov	r0, r5
10055f5e:	3008      	adds	r0, #8
10055f60:	f7ff ffe0 	bl	10055f24 <le2ByteToInt16>
10055f64:	3440      	adds	r4, #64	; 0x40
10055f66:	8720      	strh	r0, [r4, #56]	; 0x38
10055f68:	79b0      	ldrb	r0, [r6, #6]
10055f6a:	2102      	movs	r1, #2
10055f6c:	4308      	orrs	r0, r1
10055f6e:	71b0      	strb	r0, [r6, #6]
10055f70:	bd70      	pop	{r4, r5, r6, pc}

10055f72 <unpack_update_request>:
10055f72:	b570      	push	{r4, r5, r6, lr}
10055f74:	460c      	mov	r4, r1
10055f76:	4605      	mov	r5, r0
10055f78:	78c1      	ldrb	r1, [r0, #3]
10055f7a:	2060      	movs	r0, #96	; 0x60
10055f7c:	5501      	strb	r1, [r0, r4]
10055f7e:	4616      	mov	r6, r2
10055f80:	1d28      	adds	r0, r5, #4
10055f82:	f7ff ffcf 	bl	10055f24 <le2ByteToInt16>
10055f86:	3440      	adds	r4, #64	; 0x40
10055f88:	84a0      	strh	r0, [r4, #36]	; 0x24
10055f8a:	1da8      	adds	r0, r5, #6
10055f8c:	f7ff ffca 	bl	10055f24 <le2ByteToInt16>
10055f90:	8520      	strh	r0, [r4, #40]	; 0x28
10055f92:	4628      	mov	r0, r5
10055f94:	3008      	adds	r0, #8
10055f96:	f7ff ffc5 	bl	10055f24 <le2ByteToInt16>
10055f9a:	85a0      	strh	r0, [r4, #44]	; 0x2c
10055f9c:	4628      	mov	r0, r5
10055f9e:	300a      	adds	r0, #10
10055fa0:	f7ff ffc0 	bl	10055f24 <le2ByteToInt16>
10055fa4:	8620      	strh	r0, [r4, #48]	; 0x30
10055fa6:	4628      	mov	r0, r5
10055fa8:	300c      	adds	r0, #12
10055faa:	f7ff ffbb 	bl	10055f24 <le2ByteToInt16>
10055fae:	86a0      	strh	r0, [r4, #52]	; 0x34
10055fb0:	79b0      	ldrb	r0, [r6, #6]
10055fb2:	2101      	movs	r1, #1
10055fb4:	4308      	orrs	r0, r1
10055fb6:	71b0      	strb	r0, [r6, #6]
10055fb8:	bd70      	pop	{r4, r5, r6, pc}

10055fba <Is_Address_Initialized>:
10055fba:	4602      	mov	r2, r0
10055fbc:	2000      	movs	r0, #0
10055fbe:	4601      	mov	r1, r0
10055fc0:	5c53      	ldrb	r3, [r2, r1]
10055fc2:	2b00      	cmp	r3, #0
10055fc4:	d000      	beq.n	10055fc8 <Is_Address_Initialized+0xe>
10055fc6:	2001      	movs	r0, #1
10055fc8:	1c49      	adds	r1, r1, #1
10055fca:	b2c9      	uxtb	r1, r1
10055fcc:	2906      	cmp	r1, #6
10055fce:	d3f7      	bcc.n	10055fc0 <Is_Address_Initialized+0x6>
10055fd0:	4770      	bx	lr

10055fd2 <LL_Allow_Address_Setting>:
10055fd2:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10055fd4:	460f      	mov	r7, r1
10055fd6:	4606      	mov	r6, r0
10055fd8:	2400      	movs	r4, #0
10055fda:	f7fe f8ed 	bl	100541b8 <get_scan_connection>
10055fde:	4605      	mov	r5, r0
10055fe0:	f7fe f868 	bl	100540b4 <get_advertiser>
10055fe4:	2d08      	cmp	r5, #8
10055fe6:	d301      	bcc.n	10055fec <LL_Allow_Address_Setting+0x1a>
10055fe8:	2808      	cmp	r0, #8
10055fea:	d211      	bcs.n	10056010 <LL_Allow_Address_Setting+0x3e>
10055fec:	a902      	add	r1, sp, #8
10055fee:	4668      	mov	r0, sp
10055ff0:	f000 fa1c 	bl	1005642c <LL_Get_Address>
10055ff4:	2f00      	cmp	r7, #0
10055ff6:	4668      	mov	r0, sp
10055ff8:	d006      	beq.n	10056008 <LL_Allow_Address_Setting+0x36>
10055ffa:	7940      	ldrb	r0, [r0, #5]
10055ffc:	0640      	lsls	r0, r0, #25
10055ffe:	d501      	bpl.n	10056004 <LL_Allow_Address_Setting+0x32>
10056000:	2102      	movs	r1, #2
10056002:	e002      	b.n	1005600a <LL_Allow_Address_Setting+0x38>
10056004:	2103      	movs	r1, #3
10056006:	e000      	b.n	1005600a <LL_Allow_Address_Setting+0x38>
10056008:	7a01      	ldrb	r1, [r0, #8]
1005600a:	42b1      	cmp	r1, r6
1005600c:	d000      	beq.n	10056010 <LL_Allow_Address_Setting+0x3e>
1005600e:	2441      	movs	r4, #65	; 0x41
10056010:	4620      	mov	r0, r4
10056012:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10056014 <LL_Check_And_Set_Addresses>:
10056014:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10056016:	4607      	mov	r7, r0
10056018:	b08d      	sub	sp, #52	; 0x34
1005601a:	2000      	movs	r0, #0
1005601c:	9008      	str	r0, [sp, #32]
1005601e:	9007      	str	r0, [sp, #28]
10056020:	4878      	ldr	r0, [pc, #480]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
10056022:	461e      	mov	r6, r3
10056024:	6801      	ldr	r1, [r0, #0]
10056026:	2041      	movs	r0, #65	; 0x41
10056028:	0140      	lsls	r0, r0, #5
1005602a:	180c      	adds	r4, r1, r0
1005602c:	2023      	movs	r0, #35	; 0x23
1005602e:	0140      	lsls	r0, r0, #5
10056030:	1808      	adds	r0, r1, r0
10056032:	7147      	strb	r7, [r0, #5]
10056034:	4615      	mov	r5, r2
10056036:	71c2      	strb	r2, [r0, #7]
10056038:	2b00      	cmp	r3, #0
1005603a:	d001      	beq.n	10056040 <LL_Check_And_Set_Addresses+0x2c>
1005603c:	2100      	movs	r1, #0
1005603e:	7101      	strb	r1, [r0, #4]
10056040:	980e      	ldr	r0, [sp, #56]	; 0x38
10056042:	2800      	cmp	r0, #0
10056044:	d07e      	beq.n	10056144 <LL_Check_And_Set_Addresses+0x130>
10056046:	f7ff ffb8 	bl	10055fba <Is_Address_Initialized>
1005604a:	2800      	cmp	r0, #0
1005604c:	d07a      	beq.n	10056144 <LL_Check_And_Set_Addresses+0x130>
1005604e:	2e00      	cmp	r6, #0
10056050:	d003      	beq.n	1005605a <LL_Check_And_Set_Addresses+0x46>
10056052:	3420      	adds	r4, #32
10056054:	7920      	ldrb	r0, [r4, #4]
10056056:	2801      	cmp	r0, #1
10056058:	d074      	beq.n	10056144 <LL_Check_And_Set_Addresses+0x130>
1005605a:	24ff      	movs	r4, #255	; 0xff
1005605c:	2e00      	cmp	r6, #0
1005605e:	d007      	beq.n	10056070 <LL_Check_And_Set_Addresses+0x5c>
10056060:	2d02      	cmp	r5, #2
10056062:	d002      	beq.n	1005606a <LL_Check_And_Set_Addresses+0x56>
10056064:	2d03      	cmp	r5, #3
10056066:	d002      	beq.n	1005606e <LL_Check_And_Set_Addresses+0x5a>
10056068:	e002      	b.n	10056070 <LL_Check_And_Set_Addresses+0x5c>
1005606a:	2500      	movs	r5, #0
1005606c:	e000      	b.n	10056070 <LL_Check_And_Set_Addresses+0x5c>
1005606e:	2501      	movs	r5, #1
10056070:	4864      	ldr	r0, [pc, #400]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
10056072:	4965      	ldr	r1, [pc, #404]	; (10056208 <LL_Check_And_Set_Addresses+0x1f4>)
10056074:	6800      	ldr	r0, [r0, #0]
10056076:	1840      	adds	r0, r0, r1
10056078:	900b      	str	r0, [sp, #44]	; 0x2c
1005607a:	2f02      	cmp	r7, #2
1005607c:	d001      	beq.n	10056082 <LL_Check_And_Set_Addresses+0x6e>
1005607e:	2f03      	cmp	r7, #3
10056080:	d16a      	bne.n	10056158 <LL_Check_And_Set_Addresses+0x144>
10056082:	4668      	mov	r0, sp
10056084:	7005      	strb	r5, [r0, #0]
10056086:	2206      	movs	r2, #6
10056088:	1c40      	adds	r0, r0, #1
1005608a:	990e      	ldr	r1, [sp, #56]	; 0x38
1005608c:	f7ea fb79 	bl	10040782 <Osal_MemCpy>
10056090:	4669      	mov	r1, sp
10056092:	2000      	movs	r0, #0
10056094:	f7fa fbd4 	bl	10050840 <PRIVWHIT_u8SearchAddrInList>
10056098:	28ff      	cmp	r0, #255	; 0xff
1005609a:	d003      	beq.n	100560a4 <LL_Check_And_Set_Addresses+0x90>
1005609c:	990b      	ldr	r1, [sp, #44]	; 0x2c
1005609e:	00c2      	lsls	r2, r0, #3
100560a0:	1851      	adds	r1, r2, r1
100560a2:	79cc      	ldrb	r4, [r1, #7]
100560a4:	2311      	movs	r3, #17
100560a6:	019b      	lsls	r3, r3, #6
100560a8:	4956      	ldr	r1, [pc, #344]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
100560aa:	2e00      	cmp	r6, #0
100560ac:	d014      	beq.n	100560d8 <LL_Check_And_Set_Addresses+0xc4>
100560ae:	6809      	ldr	r1, [r1, #0]
100560b0:	18ca      	adds	r2, r1, r3
100560b2:	7694      	strb	r4, [r2, #26]
100560b4:	2323      	movs	r3, #35	; 0x23
100560b6:	2200      	movs	r2, #0
100560b8:	015b      	lsls	r3, r3, #5
100560ba:	18c9      	adds	r1, r1, r3
100560bc:	710a      	strb	r2, [r1, #4]
100560be:	28ff      	cmp	r0, #255	; 0xff
100560c0:	d04a      	beq.n	10056158 <LL_Check_And_Set_Addresses+0x144>
100560c2:	2037      	movs	r0, #55	; 0x37
100560c4:	4344      	muls	r4, r0
100560c6:	484f      	ldr	r0, [pc, #316]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
100560c8:	21ff      	movs	r1, #255	; 0xff
100560ca:	6800      	ldr	r0, [r0, #0]
100560cc:	312f      	adds	r1, #47	; 0x2f
100560ce:	1820      	adds	r0, r4, r0
100560d0:	5c09      	ldrb	r1, [r1, r0]
100560d2:	2900      	cmp	r1, #0
100560d4:	d004      	beq.n	100560e0 <LL_Check_And_Set_Addresses+0xcc>
100560d6:	e015      	b.n	10056104 <LL_Check_And_Set_Addresses+0xf0>
100560d8:	680a      	ldr	r2, [r1, #0]
100560da:	18d1      	adds	r1, r2, r3
100560dc:	758c      	strb	r4, [r1, #22]
100560de:	e7ee      	b.n	100560be <LL_Check_And_Set_Addresses+0xaa>
100560e0:	4601      	mov	r1, r0
100560e2:	31ff      	adds	r1, #255	; 0xff
100560e4:	30ff      	adds	r0, #255	; 0xff
100560e6:	3147      	adds	r1, #71	; 0x47
100560e8:	301f      	adds	r0, #31
100560ea:	f7eb fbc5 	bl	10041878 <PRIV_vGeneratePrivateAddress_ucfg>
100560ee:	4845      	ldr	r0, [pc, #276]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
100560f0:	2206      	movs	r2, #6
100560f2:	6800      	ldr	r0, [r0, #0]
100560f4:	1821      	adds	r1, r4, r0
100560f6:	31ff      	adds	r1, #255	; 0xff
100560f8:	a805      	add	r0, sp, #20
100560fa:	3148      	adds	r1, #72	; 0x48
100560fc:	f7ea fb41 	bl	10040782 <Osal_MemCpy>
10056100:	2001      	movs	r0, #1
10056102:	9007      	str	r0, [sp, #28]
10056104:	493f      	ldr	r1, [pc, #252]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
10056106:	22ff      	movs	r2, #255	; 0xff
10056108:	6808      	ldr	r0, [r1, #0]
1005610a:	324e      	adds	r2, #78	; 0x4e
1005610c:	1820      	adds	r0, r4, r0
1005610e:	5c12      	ldrb	r2, [r2, r0]
10056110:	2a00      	cmp	r2, #0
10056112:	d11c      	bne.n	1005614e <LL_Check_And_Set_Addresses+0x13a>
10056114:	4601      	mov	r1, r0
10056116:	31ff      	adds	r1, #255	; 0xff
10056118:	30ff      	adds	r0, #255	; 0xff
1005611a:	3140      	adds	r1, #64	; 0x40
1005611c:	3030      	adds	r0, #48	; 0x30
1005611e:	f7eb fbab 	bl	10041878 <PRIV_vGeneratePrivateAddress_ucfg>
10056122:	4838      	ldr	r0, [pc, #224]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
10056124:	2206      	movs	r2, #6
10056126:	6800      	ldr	r0, [r0, #0]
10056128:	1821      	adds	r1, r4, r0
1005612a:	31ff      	adds	r1, #255	; 0xff
1005612c:	a803      	add	r0, sp, #12
1005612e:	3141      	adds	r1, #65	; 0x41
10056130:	f7ea fb27 	bl	10040782 <Osal_MemCpy>
10056134:	2001      	movs	r0, #1
10056136:	9008      	str	r0, [sp, #32]
10056138:	2e00      	cmp	r6, #0
1005613a:	d008      	beq.n	1005614e <LL_Check_And_Set_Addresses+0x13a>
1005613c:	4831      	ldr	r0, [pc, #196]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
1005613e:	2101      	movs	r1, #1
10056140:	6802      	ldr	r2, [r0, #0]
10056142:	e000      	b.n	10056146 <LL_Check_And_Set_Addresses+0x132>
10056144:	e017      	b.n	10056176 <LL_Check_And_Set_Addresses+0x162>
10056146:	2023      	movs	r0, #35	; 0x23
10056148:	0140      	lsls	r0, r0, #5
1005614a:	1810      	adds	r0, r2, r0
1005614c:	7101      	strb	r1, [r0, #4]
1005614e:	9807      	ldr	r0, [sp, #28]
10056150:	2800      	cmp	r0, #0
10056152:	d001      	beq.n	10056158 <LL_Check_And_Set_Addresses+0x144>
10056154:	2e00      	cmp	r6, #0
10056156:	d00a      	beq.n	1005616e <LL_Check_And_Set_Addresses+0x15a>
10056158:	4632      	mov	r2, r6
1005615a:	4629      	mov	r1, r5
1005615c:	980e      	ldr	r0, [sp, #56]	; 0x38
1005615e:	f000 fc6b 	bl	10056a38 <LL_Set_DirectAddress>
10056162:	9808      	ldr	r0, [sp, #32]
10056164:	2800      	cmp	r0, #0
10056166:	d006      	beq.n	10056176 <LL_Check_And_Set_Addresses+0x162>
10056168:	2101      	movs	r1, #1
1005616a:	a803      	add	r0, sp, #12
1005616c:	e015      	b.n	1005619a <LL_Check_And_Set_Addresses+0x186>
1005616e:	4632      	mov	r2, r6
10056170:	2101      	movs	r1, #1
10056172:	a805      	add	r0, sp, #20
10056174:	e7f3      	b.n	1005615e <LL_Check_And_Set_Addresses+0x14a>
10056176:	2f00      	cmp	r7, #0
10056178:	d006      	beq.n	10056188 <LL_Check_And_Set_Addresses+0x174>
1005617a:	2f01      	cmp	r7, #1
1005617c:	d01a      	beq.n	100561b4 <LL_Check_And_Set_Addresses+0x1a0>
1005617e:	2f02      	cmp	r7, #2
10056180:	d002      	beq.n	10056188 <LL_Check_And_Set_Addresses+0x174>
10056182:	2f03      	cmp	r7, #3
10056184:	d107      	bne.n	10056196 <LL_Check_And_Set_Addresses+0x182>
10056186:	e015      	b.n	100561b4 <LL_Check_And_Set_Addresses+0x1a0>
10056188:	481e      	ldr	r0, [pc, #120]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
1005618a:	2206      	movs	r2, #6
1005618c:	6801      	ldr	r1, [r0, #0]
1005618e:	4668      	mov	r0, sp
10056190:	3178      	adds	r1, #120	; 0x78
10056192:	f7ea faf6 	bl	10040782 <Osal_MemCpy>
10056196:	2100      	movs	r1, #0
10056198:	4668      	mov	r0, sp
1005619a:	f000 fc69 	bl	10056a70 <LL_Set_OwnAddress>
1005619e:	2401      	movs	r4, #1
100561a0:	02a4      	lsls	r4, r4, #10
100561a2:	2f00      	cmp	r7, #0
100561a4:	d010      	beq.n	100561c8 <LL_Check_And_Set_Addresses+0x1b4>
100561a6:	2f01      	cmp	r7, #1
100561a8:	d016      	beq.n	100561d8 <LL_Check_And_Set_Addresses+0x1c4>
100561aa:	2f02      	cmp	r7, #2
100561ac:	d00c      	beq.n	100561c8 <LL_Check_And_Set_Addresses+0x1b4>
100561ae:	2f03      	cmp	r7, #3
100561b0:	d124      	bne.n	100561fc <LL_Check_And_Set_Addresses+0x1e8>
100561b2:	e011      	b.n	100561d8 <LL_Check_And_Set_Addresses+0x1c4>
100561b4:	4813      	ldr	r0, [pc, #76]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
100561b6:	2206      	movs	r2, #6
100561b8:	6801      	ldr	r1, [r0, #0]
100561ba:	4814      	ldr	r0, [pc, #80]	; (1005620c <LL_Check_And_Set_Addresses+0x1f8>)
100561bc:	1809      	adds	r1, r1, r0
100561be:	4668      	mov	r0, sp
100561c0:	f7ea fadf 	bl	10040782 <Osal_MemCpy>
100561c4:	2101      	movs	r1, #1
100561c6:	e7e7      	b.n	10056198 <LL_Check_And_Set_Addresses+0x184>
100561c8:	480e      	ldr	r0, [pc, #56]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
100561ca:	6800      	ldr	r0, [r0, #0]
100561cc:	6f81      	ldr	r1, [r0, #120]	; 0x78
100561ce:	1904      	adds	r4, r0, r4
100561d0:	0209      	lsls	r1, r1, #8
100561d2:	307b      	adds	r0, #123	; 0x7b
100561d4:	65e1      	str	r1, [r4, #92]	; 0x5c
100561d6:	e00c      	b.n	100561f2 <LL_Check_And_Set_Addresses+0x1de>
100561d8:	480a      	ldr	r0, [pc, #40]	; (10056204 <LL_Check_And_Set_Addresses+0x1f0>)
100561da:	6805      	ldr	r5, [r0, #0]
100561dc:	480b      	ldr	r0, [pc, #44]	; (1005620c <LL_Check_And_Set_Addresses+0x1f8>)
100561de:	1828      	adds	r0, r5, r0
100561e0:	f7ea f932 	bl	10040448 <__aeabi_uread4>
100561e4:	0200      	lsls	r0, r0, #8
100561e6:	192c      	adds	r4, r5, r4
100561e8:	1c40      	adds	r0, r0, #1
100561ea:	65e0      	str	r0, [r4, #92]	; 0x5c
100561ec:	4807      	ldr	r0, [pc, #28]	; (1005620c <LL_Check_And_Set_Addresses+0x1f8>)
100561ee:	1cc0      	adds	r0, r0, #3
100561f0:	1828      	adds	r0, r5, r0
100561f2:	f7ea f929 	bl	10040448 <__aeabi_uread4>
100561f6:	0200      	lsls	r0, r0, #8
100561f8:	0a00      	lsrs	r0, r0, #8
100561fa:	6620      	str	r0, [r4, #96]	; 0x60
100561fc:	2000      	movs	r0, #0
100561fe:	b011      	add	sp, #68	; 0x44
10056200:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056202:	0000      	.short	0x0000
10056204:	20000d64 	.word	0x20000d64
10056208:	0000046c 	.word	0x0000046c
1005620c:	000006ef 	.word	0x000006ef

10056210 <LL_Enable_Disable_Adv>:
10056210:	b5f0      	push	{r4, r5, r6, r7, lr}
10056212:	4d81      	ldr	r5, [pc, #516]	; (10056418 <LL_Enable_Disable_Adv+0x208>)
10056214:	4604      	mov	r4, r0
10056216:	2141      	movs	r1, #65	; 0x41
10056218:	6828      	ldr	r0, [r5, #0]
1005621a:	0149      	lsls	r1, r1, #5
1005621c:	b085      	sub	sp, #20
1005621e:	1840      	adds	r0, r0, r1
10056220:	9001      	str	r0, [sp, #4]
10056222:	f7fd ff47 	bl	100540b4 <get_advertiser>
10056226:	2609      	movs	r6, #9
10056228:	0236      	lsls	r6, r6, #8
1005622a:	2c00      	cmp	r4, #0
1005622c:	d07e      	beq.n	1005632c <LL_Enable_Disable_Adv+0x11c>
1005622e:	2808      	cmp	r0, #8
10056230:	d30d      	bcc.n	1005624e <LL_Enable_Disable_Adv+0x3e>
10056232:	2042      	movs	r0, #66	; 0x42
10056234:	4607      	mov	r7, r0
10056236:	9003      	str	r0, [sp, #12]
10056238:	4878      	ldr	r0, [pc, #480]	; (1005641c <LL_Enable_Disable_Adv+0x20c>)
1005623a:	2400      	movs	r4, #0
1005623c:	9002      	str	r0, [sp, #8]
1005623e:	f7fd ffa1 	bl	10054184 <get_next_free_slot>
10056242:	9000      	str	r0, [sp, #0]
10056244:	2008      	movs	r0, #8
10056246:	9004      	str	r0, [sp, #16]
10056248:	9800      	ldr	r0, [sp, #0]
1005624a:	2808      	cmp	r0, #8
1005624c:	d302      	bcc.n	10056254 <LL_Enable_Disable_Adv+0x44>
1005624e:	200c      	movs	r0, #12
10056250:	b005      	add	sp, #20
10056252:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056254:	f000 fbac 	bl	100569b0 <LL_Set_Advertising_Buffers>
10056258:	f000 fa9e 	bl	10056798 <LL_Set_Adv_PDU_Format>
1005625c:	9800      	ldr	r0, [sp, #0]
1005625e:	4970      	ldr	r1, [pc, #448]	; (10056420 <LL_Enable_Disable_Adv+0x210>)
10056260:	0180      	lsls	r0, r0, #6
10056262:	1842      	adds	r2, r0, r1
10056264:	6828      	ldr	r0, [r5, #0]
10056266:	1980      	adds	r0, r0, r6
10056268:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
1005626a:	9801      	ldr	r0, [sp, #4]
1005626c:	3080      	adds	r0, #128	; 0x80
1005626e:	6b03      	ldr	r3, [r0, #48]	; 0x30
10056270:	31c0      	adds	r1, #192	; 0xc0
10056272:	8059      	strh	r1, [r3, #2]
10056274:	6b01      	ldr	r1, [r0, #48]	; 0x30
10056276:	8009      	strh	r1, [r1, #0]
10056278:	2100      	movs	r1, #0
1005627a:	43c9      	mvns	r1, r1
1005627c:	8201      	strh	r1, [r0, #16]
1005627e:	2100      	movs	r1, #0
10056280:	6a45      	ldr	r5, [r0, #36]	; 0x24
10056282:	1dcb      	adds	r3, r1, #7
10056284:	54ef      	strb	r7, [r5, r3]
10056286:	6a85      	ldr	r5, [r0, #40]	; 0x28
10056288:	54ef      	strb	r7, [r5, r3]
1005628a:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
1005628c:	54ef      	strb	r7, [r5, r3]
1005628e:	6a05      	ldr	r5, [r0, #32]
10056290:	54ef      	strb	r7, [r5, r3]
10056292:	6b06      	ldr	r6, [r0, #48]	; 0x30
10056294:	9d03      	ldr	r5, [sp, #12]
10056296:	54f5      	strb	r5, [r6, r3]
10056298:	9b03      	ldr	r3, [sp, #12]
1005629a:	0a3f      	lsrs	r7, r7, #8
1005629c:	0a1b      	lsrs	r3, r3, #8
1005629e:	9303      	str	r3, [sp, #12]
100562a0:	6a46      	ldr	r6, [r0, #36]	; 0x24
100562a2:	9d02      	ldr	r5, [sp, #8]
100562a4:	1d0b      	adds	r3, r1, #4
100562a6:	54f5      	strb	r5, [r6, r3]
100562a8:	6a86      	ldr	r6, [r0, #40]	; 0x28
100562aa:	54f5      	strb	r5, [r6, r3]
100562ac:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
100562ae:	54f5      	strb	r5, [r6, r3]
100562b0:	6a06      	ldr	r6, [r0, #32]
100562b2:	54f5      	strb	r5, [r6, r3]
100562b4:	6b06      	ldr	r6, [r0, #48]	; 0x30
100562b6:	54f5      	strb	r5, [r6, r3]
100562b8:	9b02      	ldr	r3, [sp, #8]
100562ba:	1c49      	adds	r1, r1, #1
100562bc:	0a1b      	lsrs	r3, r3, #8
100562be:	b2c9      	uxtb	r1, r1
100562c0:	9302      	str	r3, [sp, #8]
100562c2:	2903      	cmp	r1, #3
100562c4:	d3dc      	bcc.n	10056280 <LL_Enable_Disable_Adv+0x70>
100562c6:	9900      	ldr	r1, [sp, #0]
100562c8:	2311      	movs	r3, #17
100562ca:	0749      	lsls	r1, r1, #29
100562cc:	0e09      	lsrs	r1, r1, #24
100562ce:	6a45      	ldr	r5, [r0, #36]	; 0x24
100562d0:	430b      	orrs	r3, r1
100562d2:	72ab      	strb	r3, [r5, #10]
100562d4:	6a85      	ldr	r5, [r0, #40]	; 0x28
100562d6:	72ab      	strb	r3, [r5, #10]
100562d8:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
100562da:	72ab      	strb	r3, [r5, #10]
100562dc:	9b01      	ldr	r3, [sp, #4]
100562de:	7e1d      	ldrb	r5, [r3, #24]
100562e0:	2302      	movs	r3, #2
100562e2:	2d02      	cmp	r5, #2
100562e4:	d10b      	bne.n	100562fe <LL_Enable_Disable_Adv+0xee>
100562e6:	6a45      	ldr	r5, [r0, #36]	; 0x24
100562e8:	7aae      	ldrb	r6, [r5, #10]
100562ea:	431e      	orrs	r6, r3
100562ec:	72ae      	strb	r6, [r5, #10]
100562ee:	6a85      	ldr	r5, [r0, #40]	; 0x28
100562f0:	7aae      	ldrb	r6, [r5, #10]
100562f2:	431e      	orrs	r6, r3
100562f4:	72ae      	strb	r6, [r5, #10]
100562f6:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
100562f8:	7aae      	ldrb	r6, [r5, #10]
100562fa:	431e      	orrs	r6, r3
100562fc:	72ae      	strb	r6, [r5, #10]
100562fe:	6a46      	ldr	r6, [r0, #36]	; 0x24
10056300:	2701      	movs	r7, #1
10056302:	72f7      	strb	r7, [r6, #11]
10056304:	6a86      	ldr	r6, [r0, #40]	; 0x28
10056306:	72f7      	strb	r7, [r6, #11]
10056308:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
1005630a:	72f7      	strb	r7, [r6, #11]
1005630c:	4319      	orrs	r1, r3
1005630e:	6b03      	ldr	r3, [r0, #48]	; 0x30
10056310:	7299      	strb	r1, [r3, #10]
10056312:	6a03      	ldr	r3, [r0, #32]
10056314:	7299      	strb	r1, [r3, #10]
10056316:	6b03      	ldr	r3, [r0, #48]	; 0x30
10056318:	2103      	movs	r1, #3
1005631a:	72d9      	strb	r1, [r3, #11]
1005631c:	6a01      	ldr	r1, [r0, #32]
1005631e:	72cf      	strb	r7, [r1, #11]
10056320:	2100      	movs	r1, #0
10056322:	460b      	mov	r3, r1
10056324:	5453      	strb	r3, [r2, r1]
10056326:	1855      	adds	r5, r2, r1
10056328:	716b      	strb	r3, [r5, #5]
1005632a:	e000      	b.n	1005632e <LL_Enable_Disable_Adv+0x11e>
1005632c:	e04b      	b.n	100563c6 <LL_Enable_Disable_Adv+0x1b6>
1005632e:	1c49      	adds	r1, r1, #1
10056330:	b2c9      	uxtb	r1, r1
10056332:	2905      	cmp	r1, #5
10056334:	d3f6      	bcc.n	10056324 <LL_Enable_Disable_Adv+0x114>
10056336:	2580      	movs	r5, #128	; 0x80
10056338:	7295      	strb	r5, [r2, #10]
1005633a:	9901      	ldr	r1, [sp, #4]
1005633c:	3120      	adds	r1, #32
1005633e:	7bce      	ldrb	r6, [r1, #15]
10056340:	72d6      	strb	r6, [r2, #11]
10056342:	8c86      	ldrh	r6, [r0, #36]	; 0x24
10056344:	8216      	strh	r6, [r2, #16]
10056346:	8e06      	ldrh	r6, [r0, #48]	; 0x30
10056348:	8256      	strh	r6, [r2, #18]
1005634a:	4e36      	ldr	r6, [pc, #216]	; (10056424 <LL_Enable_Disable_Adv+0x214>)
1005634c:	6196      	str	r6, [r2, #24]
1005634e:	4e36      	ldr	r6, [pc, #216]	; (10056428 <LL_Enable_Disable_Adv+0x218>)
10056350:	61d6      	str	r6, [r2, #28]
10056352:	463e      	mov	r6, r7
10056354:	2720      	movs	r7, #32
10056356:	54be      	strb	r6, [r7, r2]
10056358:	75d3      	strb	r3, [r2, #23]
1005635a:	9a01      	ldr	r2, [sp, #4]
1005635c:	7e12      	ldrb	r2, [r2, #24]
1005635e:	2a00      	cmp	r2, #0
10056360:	d004      	beq.n	1005636c <LL_Enable_Disable_Adv+0x15c>
10056362:	2a01      	cmp	r2, #1
10056364:	d004      	beq.n	10056370 <LL_Enable_Disable_Adv+0x160>
10056366:	2a06      	cmp	r2, #6
10056368:	d112      	bne.n	10056390 <LL_Enable_Disable_Adv+0x180>
1005636a:	e010      	b.n	1005638e <LL_Enable_Disable_Adv+0x17e>
1005636c:	2418      	movs	r4, #24
1005636e:	e00f      	b.n	10056390 <LL_Enable_Disable_Adv+0x180>
10056370:	2203      	movs	r2, #3
10056372:	6883      	ldr	r3, [r0, #8]
10056374:	2428      	movs	r4, #40	; 0x28
10056376:	0252      	lsls	r2, r2, #9
10056378:	4293      	cmp	r3, r2
1005637a:	d109      	bne.n	10056390 <LL_Enable_Disable_Adv+0x180>
1005637c:	68c3      	ldr	r3, [r0, #12]
1005637e:	4293      	cmp	r3, r2
10056380:	d106      	bne.n	10056390 <LL_Enable_Disable_Adv+0x180>
10056382:	2200      	movs	r2, #0
10056384:	9204      	str	r2, [sp, #16]
10056386:	22ff      	movs	r2, #255	; 0xff
10056388:	3256      	adds	r2, #86	; 0x56
1005638a:	8202      	strh	r2, [r0, #16]
1005638c:	e000      	b.n	10056390 <LL_Enable_Disable_Adv+0x180>
1005638e:	2410      	movs	r4, #16
10056390:	7b49      	ldrb	r1, [r1, #13]
10056392:	2900      	cmp	r1, #0
10056394:	d004      	beq.n	100563a0 <LL_Enable_Disable_Adv+0x190>
10056396:	2901      	cmp	r1, #1
10056398:	d004      	beq.n	100563a4 <LL_Enable_Disable_Adv+0x194>
1005639a:	2902      	cmp	r1, #2
1005639c:	d106      	bne.n	100563ac <LL_Enable_Disable_Adv+0x19c>
1005639e:	e003      	b.n	100563a8 <LL_Enable_Disable_Adv+0x198>
100563a0:	21c0      	movs	r1, #192	; 0xc0
100563a2:	e002      	b.n	100563aa <LL_Enable_Disable_Adv+0x19a>
100563a4:	432c      	orrs	r4, r5
100563a6:	e001      	b.n	100563ac <LL_Enable_Disable_Adv+0x19c>
100563a8:	2140      	movs	r1, #64	; 0x40
100563aa:	430c      	orrs	r4, r1
100563ac:	9904      	ldr	r1, [sp, #16]
100563ae:	68c2      	ldr	r2, [r0, #12]
100563b0:	0209      	lsls	r1, r1, #8
100563b2:	6880      	ldr	r0, [r0, #8]
100563b4:	1853      	adds	r3, r2, r1
100563b6:	1842      	adds	r2, r0, r1
100563b8:	08e1      	lsrs	r1, r4, #3
100563ba:	00c9      	lsls	r1, r1, #3
100563bc:	1c49      	adds	r1, r1, #1
100563be:	9800      	ldr	r0, [sp, #0]
100563c0:	f7fe f920 	bl	10054604 <schedule_advertise_slot>
100563c4:	e744      	b.n	10056250 <LL_Enable_Disable_Adv+0x40>
100563c6:	b672      	cpsid	i
100563c8:	2808      	cmp	r0, #8
100563ca:	d20a      	bcs.n	100563e2 <LL_Enable_Disable_Adv+0x1d2>
100563cc:	682a      	ldr	r2, [r5, #0]
100563ce:	1991      	adds	r1, r2, r6
100563d0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
100563d2:	2158      	movs	r1, #88	; 0x58
100563d4:	4341      	muls	r1, r0
100563d6:	1c89      	adds	r1, r1, #2
100563d8:	5c5c      	ldrb	r4, [r3, r1]
100563da:	0764      	lsls	r4, r4, #29
100563dc:	0f64      	lsrs	r4, r4, #29
100563de:	2c01      	cmp	r4, #1
100563e0:	d001      	beq.n	100563e6 <LL_Enable_Disable_Adv+0x1d6>
100563e2:	b662      	cpsie	i
100563e4:	e016      	b.n	10056414 <LL_Enable_Disable_Adv+0x204>
100563e6:	24f0      	movs	r4, #240	; 0xf0
100563e8:	5ca4      	ldrb	r4, [r4, r2]
100563ea:	2c00      	cmp	r4, #0
100563ec:	d004      	beq.n	100563f8 <LL_Enable_Disable_Adv+0x1e8>
100563ee:	2611      	movs	r6, #17
100563f0:	24ff      	movs	r4, #255	; 0xff
100563f2:	01b6      	lsls	r6, r6, #6
100563f4:	1992      	adds	r2, r2, r6
100563f6:	7594      	strb	r4, [r2, #22]
100563f8:	2200      	movs	r2, #0
100563fa:	545a      	strb	r2, [r3, r1]
100563fc:	211f      	movs	r1, #31
100563fe:	682a      	ldr	r2, [r5, #0]
10056400:	0189      	lsls	r1, r1, #6
10056402:	1851      	adds	r1, r2, r1
10056404:	790b      	ldrb	r3, [r1, #4]
10056406:	2201      	movs	r2, #1
10056408:	4082      	lsls	r2, r0
1005640a:	4393      	bics	r3, r2
1005640c:	710b      	strb	r3, [r1, #4]
1005640e:	b662      	cpsie	i
10056410:	f000 fc12 	bl	10056c38 <wait_for_prescheduled_slot_cancellation>
10056414:	2000      	movs	r0, #0
10056416:	e71b      	b.n	10056250 <LL_Enable_Disable_Adv+0x40>
10056418:	20000d64 	.word	0x20000d64
1005641c:	00b00081 	.word	0x00b00081
10056420:	200000cc 	.word	0x200000cc
10056424:	8e89bed6 	.word	0x8e89bed6
10056428:	00555555 	.word	0x00555555

1005642c <LL_Get_Address>:
1005642c:	b570      	push	{r4, r5, r6, lr}
1005642e:	4604      	mov	r4, r0
10056430:	4808      	ldr	r0, [pc, #32]	; (10056454 <LL_Get_Address+0x28>)
10056432:	460d      	mov	r5, r1
10056434:	6800      	ldr	r0, [r0, #0]
10056436:	2141      	movs	r1, #65	; 0x41
10056438:	0149      	lsls	r1, r1, #5
1005643a:	1846      	adds	r6, r0, r1
1005643c:	4620      	mov	r0, r4
1005643e:	6831      	ldr	r1, [r6, #0]
10056440:	f000 fbc0 	bl	10056bc4 <int32ToLe4Byte>
10056444:	6872      	ldr	r2, [r6, #4]
10056446:	7122      	strb	r2, [r4, #4]
10056448:	0a10      	lsrs	r0, r2, #8
1005644a:	7160      	strb	r0, [r4, #5]
1005644c:	0c10      	lsrs	r0, r2, #16
1005644e:	7028      	strb	r0, [r5, #0]
10056450:	2000      	movs	r0, #0
10056452:	bd70      	pop	{r4, r5, r6, pc}
10056454:	20000d64 	.word	0x20000d64

10056458 <LL_Get_AdvAddress>:
10056458:	b570      	push	{r4, r5, r6, lr}
1005645a:	460d      	mov	r5, r1
1005645c:	4604      	mov	r4, r0
1005645e:	f7fd fe29 	bl	100540b4 <get_advertiser>
10056462:	2808      	cmp	r0, #8
10056464:	d301      	bcc.n	1005646a <LL_Get_AdvAddress+0x12>
10056466:	201f      	movs	r0, #31
10056468:	bd70      	pop	{r4, r5, r6, pc}
1005646a:	480a      	ldr	r0, [pc, #40]	; (10056494 <LL_Get_AdvAddress+0x3c>)
1005646c:	2141      	movs	r1, #65	; 0x41
1005646e:	6800      	ldr	r0, [r0, #0]
10056470:	0149      	lsls	r1, r1, #5
10056472:	1840      	adds	r0, r0, r1
10056474:	2200      	movs	r2, #0
10056476:	6b41      	ldr	r1, [r0, #52]	; 0x34
10056478:	1c93      	adds	r3, r2, #2
1005647a:	5cc9      	ldrb	r1, [r1, r3]
1005647c:	54a1      	strb	r1, [r4, r2]
1005647e:	1c52      	adds	r2, r2, #1
10056480:	2a06      	cmp	r2, #6
10056482:	dbf8      	blt.n	10056476 <LL_Get_AdvAddress+0x1e>
10056484:	6b40      	ldr	r0, [r0, #52]	; 0x34
10056486:	7800      	ldrb	r0, [r0, #0]
10056488:	0640      	lsls	r0, r0, #25
1005648a:	0fc0      	lsrs	r0, r0, #31
1005648c:	7028      	strb	r0, [r5, #0]
1005648e:	2000      	movs	r0, #0
10056490:	bd70      	pop	{r4, r5, r6, pc}
10056492:	0000      	.short	0x0000
10056494:	20000d64 	.word	0x20000d64

10056498 <LL_Get_Adv_Data>:
10056498:	b530      	push	{r4, r5, lr}
1005649a:	4a0c      	ldr	r2, [pc, #48]	; (100564cc <LL_Get_Adv_Data+0x34>)
1005649c:	2341      	movs	r3, #65	; 0x41
1005649e:	6812      	ldr	r2, [r2, #0]
100564a0:	015b      	lsls	r3, r3, #5
100564a2:	18d2      	adds	r2, r2, r3
100564a4:	6a93      	ldr	r3, [r2, #40]	; 0x28
100564a6:	3220      	adds	r2, #32
100564a8:	7b14      	ldrb	r4, [r2, #12]
100564aa:	2c1f      	cmp	r4, #31
100564ac:	d902      	bls.n	100564b4 <LL_Get_Adv_Data+0x1c>
100564ae:	2000      	movs	r0, #0
100564b0:	7008      	strb	r0, [r1, #0]
100564b2:	bd30      	pop	{r4, r5, pc}
100564b4:	2200      	movs	r2, #0
100564b6:	e005      	b.n	100564c4 <LL_Get_Adv_Data+0x2c>
100564b8:	781d      	ldrb	r5, [r3, #0]
100564ba:	7005      	strb	r5, [r0, #0]
100564bc:	1c52      	adds	r2, r2, #1
100564be:	1c40      	adds	r0, r0, #1
100564c0:	b2d2      	uxtb	r2, r2
100564c2:	1c5b      	adds	r3, r3, #1
100564c4:	42a2      	cmp	r2, r4
100564c6:	d3f7      	bcc.n	100564b8 <LL_Get_Adv_Data+0x20>
100564c8:	700c      	strb	r4, [r1, #0]
100564ca:	bd30      	pop	{r4, r5, pc}
100564cc:	20000d64 	.word	0x20000d64

100564d0 <LL_Get_Channel_Map>:
100564d0:	b570      	push	{r4, r5, r6, lr}
100564d2:	460d      	mov	r5, r1
100564d4:	2103      	movs	r1, #3
100564d6:	f7fd fe11 	bl	100540fc <get_connection_no>
100564da:	4909      	ldr	r1, [pc, #36]	; (10056500 <LL_Get_Channel_Map+0x30>)
100564dc:	0180      	lsls	r0, r0, #6
100564de:	1844      	adds	r4, r0, r1
100564e0:	b672      	cpsid	i
100564e2:	4620      	mov	r0, r4
100564e4:	3021      	adds	r0, #33	; 0x21
100564e6:	f000 fb9b 	bl	10056c20 <le4ByteToInt32>
100564ea:	3420      	adds	r4, #32
100564ec:	7964      	ldrb	r4, [r4, #5]
100564ee:	4601      	mov	r1, r0
100564f0:	b662      	cpsie	i
100564f2:	4628      	mov	r0, r5
100564f4:	f000 fb66 	bl	10056bc4 <int32ToLe4Byte>
100564f8:	712c      	strb	r4, [r5, #4]
100564fa:	2000      	movs	r0, #0
100564fc:	bd70      	pop	{r4, r5, r6, pc}
100564fe:	0000      	.short	0x0000
10056500:	200000cc 	.word	0x200000cc

10056504 <LL_Get_ScanAddress>:
10056504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056506:	460c      	mov	r4, r1
10056508:	4605      	mov	r5, r0
1005650a:	f7fd fe55 	bl	100541b8 <get_scan_connection>
1005650e:	2808      	cmp	r0, #8
10056510:	d301      	bcc.n	10056516 <LL_Get_ScanAddress+0x12>
10056512:	201f      	movs	r0, #31
10056514:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056516:	4e0a      	ldr	r6, [pc, #40]	; (10056540 <LL_Get_ScanAddress+0x3c>)
10056518:	2709      	movs	r7, #9
1005651a:	6830      	ldr	r0, [r6, #0]
1005651c:	023f      	lsls	r7, r7, #8
1005651e:	19c0      	adds	r0, r0, r7
10056520:	6d00      	ldr	r0, [r0, #80]	; 0x50
10056522:	2206      	movs	r2, #6
10056524:	4629      	mov	r1, r5
10056526:	1c80      	adds	r0, r0, #2
10056528:	f7f6 fa2c 	bl	1004c984 <char_copy>
1005652c:	6830      	ldr	r0, [r6, #0]
1005652e:	19c0      	adds	r0, r0, r7
10056530:	6d00      	ldr	r0, [r0, #80]	; 0x50
10056532:	7800      	ldrb	r0, [r0, #0]
10056534:	0640      	lsls	r0, r0, #25
10056536:	0fc0      	lsrs	r0, r0, #31
10056538:	7020      	strb	r0, [r4, #0]
1005653a:	2000      	movs	r0, #0
1005653c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005653e:	0000      	.short	0x0000
10056540:	20000d64 	.word	0x20000d64

10056544 <LL_Init>:
10056544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056546:	4c5d      	ldr	r4, [pc, #372]	; (100566bc <LL_Init+0x178>)
10056548:	2041      	movs	r0, #65	; 0x41
1005654a:	6825      	ldr	r5, [r4, #0]
1005654c:	0140      	lsls	r0, r0, #5
1005654e:	1828      	adds	r0, r5, r0
10056550:	2200      	movs	r2, #0
10056552:	4601      	mov	r1, r0
10056554:	2309      	movs	r3, #9
10056556:	7602      	strb	r2, [r0, #24]
10056558:	3120      	adds	r1, #32
1005655a:	021b      	lsls	r3, r3, #8
1005655c:	730a      	strb	r2, [r1, #12]
1005655e:	18ed      	adds	r5, r5, r3
10056560:	6d2e      	ldr	r6, [r5, #80]	; 0x50
10056562:	27fb      	movs	r7, #251	; 0xfb
10056564:	3628      	adds	r6, #40	; 0x28
10056566:	6386      	str	r6, [r0, #56]	; 0x38
10056568:	6d2d      	ldr	r5, [r5, #80]	; 0x50
1005656a:	26ff      	movs	r6, #255	; 0xff
1005656c:	3550      	adds	r5, #80	; 0x50
1005656e:	6345      	str	r5, [r0, #52]	; 0x34
10056570:	3508      	adds	r5, #8
10056572:	6285      	str	r5, [r0, #40]	; 0x28
10056574:	2507      	movs	r5, #7
10056576:	738d      	strb	r5, [r1, #14]
10056578:	6b41      	ldr	r1, [r0, #52]	; 0x34
1005657a:	700a      	strb	r2, [r1, #0]
1005657c:	6b45      	ldr	r5, [r0, #52]	; 0x34
1005657e:	2106      	movs	r1, #6
10056580:	7069      	strb	r1, [r5, #1]
10056582:	6824      	ldr	r4, [r4, #0]
10056584:	18e1      	adds	r1, r4, r3
10056586:	6d0d      	ldr	r5, [r1, #80]	; 0x50
10056588:	3578      	adds	r5, #120	; 0x78
1005658a:	63c5      	str	r5, [r0, #60]	; 0x3c
1005658c:	6d09      	ldr	r1, [r1, #80]	; 0x50
1005658e:	2508      	movs	r5, #8
10056590:	31a0      	adds	r1, #160	; 0xa0
10056592:	6401      	str	r1, [r0, #64]	; 0x40
10056594:	4601      	mov	r1, r0
10056596:	31c0      	adds	r1, #192	; 0xc0
10056598:	724a      	strb	r2, [r1, #9]
1005659a:	720a      	strb	r2, [r1, #8]
1005659c:	73cd      	strb	r5, [r1, #15]
1005659e:	738d      	strb	r5, [r1, #14]
100565a0:	251b      	movs	r5, #27
100565a2:	820d      	strh	r5, [r1, #16]
100565a4:	3649      	adds	r6, #73	; 0x49
100565a6:	824e      	strh	r6, [r1, #18]
100565a8:	828f      	strh	r7, [r1, #20]
100565aa:	4f45      	ldr	r7, [pc, #276]	; (100566c0 <LL_Init+0x17c>)
100565ac:	82cf      	strh	r7, [r1, #22]
100565ae:	27fb      	movs	r7, #251	; 0xfb
100565b0:	830f      	strh	r7, [r1, #24]
100565b2:	4f43      	ldr	r7, [pc, #268]	; (100566c0 <LL_Init+0x17c>)
100565b4:	834f      	strh	r7, [r1, #26]
100565b6:	838d      	strh	r5, [r1, #28]
100565b8:	83ce      	strh	r6, [r1, #30]
100565ba:	4942      	ldr	r1, [pc, #264]	; (100566c4 <LL_Init+0x180>)
100565bc:	6562      	str	r2, [r4, #84]	; 0x54
100565be:	6521      	str	r1, [r4, #80]	; 0x50
100565c0:	4c3e      	ldr	r4, [pc, #248]	; (100566bc <LL_Init+0x178>)
100565c2:	4601      	mov	r1, r0
100565c4:	6826      	ldr	r6, [r4, #0]
100565c6:	18b5      	adds	r5, r6, r2
100565c8:	18f6      	adds	r6, r6, r3
100565ca:	6d37      	ldr	r7, [r6, #80]	; 0x50
100565cc:	3560      	adds	r5, #96	; 0x60
100565ce:	4616      	mov	r6, r2
100565d0:	7e2d      	ldrb	r5, [r5, #24]
100565d2:	362a      	adds	r6, #42	; 0x2a
100565d4:	55bd      	strb	r5, [r7, r6]
100565d6:	6826      	ldr	r6, [r4, #0]
100565d8:	18f6      	adds	r6, r6, r3
100565da:	6d37      	ldr	r7, [r6, #80]	; 0x50
100565dc:	4616      	mov	r6, r2
100565de:	3652      	adds	r6, #82	; 0x52
100565e0:	55bd      	strb	r5, [r7, r6]
100565e2:	6826      	ldr	r6, [r4, #0]
100565e4:	18f6      	adds	r6, r6, r3
100565e6:	6d37      	ldr	r7, [r6, #80]	; 0x50
100565e8:	4616      	mov	r6, r2
100565ea:	367a      	adds	r6, #122	; 0x7a
100565ec:	55bd      	strb	r5, [r7, r6]
100565ee:	6826      	ldr	r6, [r4, #0]
100565f0:	18f6      	adds	r6, r6, r3
100565f2:	6d37      	ldr	r7, [r6, #80]	; 0x50
100565f4:	4616      	mov	r6, r2
100565f6:	36a2      	adds	r6, #162	; 0xa2
100565f8:	55bd      	strb	r5, [r7, r6]
100565fa:	700d      	strb	r5, [r1, #0]
100565fc:	1c52      	adds	r2, r2, #1
100565fe:	b2d2      	uxtb	r2, r2
10056600:	1c49      	adds	r1, r1, #1
10056602:	2a06      	cmp	r2, #6
10056604:	d3de      	bcc.n	100565c4 <LL_Init+0x80>
10056606:	2500      	movs	r5, #0
10056608:	700d      	strb	r5, [r1, #0]
1005660a:	6b82      	ldr	r2, [r0, #56]	; 0x38
1005660c:	2106      	movs	r1, #6
1005660e:	7051      	strb	r1, [r2, #1]
10056610:	6b42      	ldr	r2, [r0, #52]	; 0x34
10056612:	7051      	strb	r1, [r2, #1]
10056614:	4602      	mov	r2, r0
10056616:	3280      	adds	r2, #128	; 0x80
10056618:	6155      	str	r5, [r2, #20]
1005661a:	4629      	mov	r1, r5
1005661c:	6195      	str	r5, [r2, #24]
1005661e:	e01b      	b.n	10056658 <LL_Init+0x114>
10056620:	2509      	movs	r5, #9
10056622:	022d      	lsls	r5, r5, #8
10056624:	195b      	adds	r3, r3, r5
10056626:	2558      	movs	r5, #88	; 0x58
10056628:	434d      	muls	r5, r1
1005662a:	6b1f      	ldr	r7, [r3, #48]	; 0x30
1005662c:	462b      	mov	r3, r5
1005662e:	4e26      	ldr	r6, [pc, #152]	; (100566c8 <LL_Init+0x184>)
10056630:	330a      	adds	r3, #10
10056632:	52fe      	strh	r6, [r7, r3]
10056634:	2309      	movs	r3, #9
10056636:	6827      	ldr	r7, [r4, #0]
10056638:	021b      	lsls	r3, r3, #8
1005663a:	18fb      	adds	r3, r7, r3
1005663c:	6b1f      	ldr	r7, [r3, #48]	; 0x30
1005663e:	462b      	mov	r3, r5
10056640:	2600      	movs	r6, #0
10056642:	3320      	adds	r3, #32
10056644:	50fe      	str	r6, [r7, r3]
10056646:	2309      	movs	r3, #9
10056648:	6827      	ldr	r7, [r4, #0]
1005664a:	021b      	lsls	r3, r3, #8
1005664c:	18fb      	adds	r3, r7, r3
1005664e:	3524      	adds	r5, #36	; 0x24
10056650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
10056652:	1c49      	adds	r1, r1, #1
10056654:	515e      	str	r6, [r3, r5]
10056656:	b2c9      	uxtb	r1, r1
10056658:	6823      	ldr	r3, [r4, #0]
1005665a:	25ac      	movs	r5, #172	; 0xac
1005665c:	5ced      	ldrb	r5, [r5, r3]
1005665e:	428d      	cmp	r5, r1
10056660:	d8de      	bhi.n	10056620 <LL_Init+0xdc>
10056662:	2500      	movs	r5, #0
10056664:	2101      	movs	r1, #1
10056666:	8395      	strh	r5, [r2, #28]
10056668:	02c9      	lsls	r1, r1, #11
1005666a:	8401      	strh	r1, [r0, #32]
1005666c:	6455      	str	r5, [r2, #68]	; 0x44
1005666e:	2009      	movs	r0, #9
10056670:	6821      	ldr	r1, [r4, #0]
10056672:	0200      	lsls	r0, r0, #8
10056674:	1809      	adds	r1, r1, r0
10056676:	6c09      	ldr	r1, [r1, #64]	; 0x40
10056678:	6b93      	ldr	r3, [r2, #56]	; 0x38
1005667a:	1c89      	adds	r1, r1, #2
1005667c:	8059      	strh	r1, [r3, #2]
1005667e:	6821      	ldr	r1, [r4, #0]
10056680:	1808      	adds	r0, r1, r0
10056682:	6c00      	ldr	r0, [r0, #64]	; 0x40
10056684:	6b51      	ldr	r1, [r2, #52]	; 0x34
10056686:	1c80      	adds	r0, r0, #2
10056688:	8048      	strh	r0, [r1, #2]
1005668a:	4810      	ldr	r0, [pc, #64]	; (100566cc <LL_Init+0x188>)
1005668c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
1005668e:	6820      	ldr	r0, [r4, #0]
10056690:	3040      	adds	r0, #64	; 0x40
10056692:	8601      	strh	r1, [r0, #48]	; 0x30
10056694:	f000 fff4 	bl	10057680 <Blue_Init_Global>
10056698:	211f      	movs	r1, #31
1005669a:	6820      	ldr	r0, [r4, #0]
1005669c:	0189      	lsls	r1, r1, #6
1005669e:	1841      	adds	r1, r0, r1
100566a0:	223f      	movs	r2, #63	; 0x3f
100566a2:	710d      	strb	r5, [r1, #4]
100566a4:	0152      	lsls	r2, r2, #5
100566a6:	2108      	movs	r1, #8
100566a8:	1880      	adds	r0, r0, r2
100566aa:	7281      	strb	r1, [r0, #10]
100566ac:	f7f9 fe4a 	bl	10050344 <LL_LE_Clear_White_List>
100566b0:	f7fd fdc0 	bl	10054234 <nsar_init>
100566b4:	6820      	ldr	r0, [r4, #0]
100566b6:	3020      	adds	r0, #32
100566b8:	74c5      	strb	r5, [r0, #19]
100566ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100566bc:	20000d64 	.word	0x20000d64
100566c0:	00000848 	.word	0x00000848
100566c4:	00002e86 	.word	0x00002e86
100566c8:	0000ffff 	.word	0x0000ffff
100566cc:	200002dc 	.word	0x200002dc

100566d0 <LL_Send_ACL_Data>:
100566d0:	b510      	push	{r4, lr}
100566d2:	4604      	mov	r4, r0
100566d4:	8880      	ldrh	r0, [r0, #4]
100566d6:	2103      	movs	r1, #3
100566d8:	f7fd fd10 	bl	100540fc <get_connection_no>
100566dc:	2102      	movs	r1, #2
100566de:	b672      	cpsid	i
100566e0:	2808      	cmp	r0, #8
100566e2:	d215      	bcs.n	10056710 <LL_Send_ACL_Data+0x40>
100566e4:	4a0d      	ldr	r2, [pc, #52]	; (1005671c <LL_Send_ACL_Data+0x4c>)
100566e6:	6813      	ldr	r3, [r2, #0]
100566e8:	2209      	movs	r2, #9
100566ea:	0212      	lsls	r2, r2, #8
100566ec:	189a      	adds	r2, r3, r2
100566ee:	2358      	movs	r3, #88	; 0x58
100566f0:	6b12      	ldr	r2, [r2, #48]	; 0x30
100566f2:	4358      	muls	r0, r3
100566f4:	1c83      	adds	r3, r0, #2
100566f6:	5cd3      	ldrb	r3, [r2, r3]
100566f8:	2b00      	cmp	r3, #0
100566fa:	d009      	beq.n	10056710 <LL_Send_ACL_Data+0x40>
100566fc:	2100      	movs	r1, #0
100566fe:	1810      	adds	r0, r2, r0
10056700:	6021      	str	r1, [r4, #0]
10056702:	6a01      	ldr	r1, [r0, #32]
10056704:	2900      	cmp	r1, #0
10056706:	d006      	beq.n	10056716 <LL_Send_ACL_Data+0x46>
10056708:	6a41      	ldr	r1, [r0, #36]	; 0x24
1005670a:	600c      	str	r4, [r1, #0]
1005670c:	2145      	movs	r1, #69	; 0x45
1005670e:	6244      	str	r4, [r0, #36]	; 0x24
10056710:	b662      	cpsie	i
10056712:	4608      	mov	r0, r1
10056714:	bd10      	pop	{r4, pc}
10056716:	6204      	str	r4, [r0, #32]
10056718:	e7f8      	b.n	1005670c <LL_Send_ACL_Data+0x3c>
1005671a:	0000      	.short	0x0000
1005671c:	20000d64 	.word	0x20000d64

10056720 <LL_Set_Adv_Data>:
10056720:	b570      	push	{r4, r5, r6, lr}
10056722:	4a1c      	ldr	r2, [pc, #112]	; (10056794 <LL_Set_Adv_Data+0x74>)
10056724:	2341      	movs	r3, #65	; 0x41
10056726:	6812      	ldr	r2, [r2, #0]
10056728:	015b      	lsls	r3, r3, #5
1005672a:	18d4      	adds	r4, r2, r3
1005672c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1005672e:	3308      	adds	r3, #8
10056730:	62a3      	str	r3, [r4, #40]	; 0x28
10056732:	291f      	cmp	r1, #31
10056734:	d901      	bls.n	1005673a <LL_Set_Adv_Data+0x1a>
10056736:	2030      	movs	r0, #48	; 0x30
10056738:	bd70      	pop	{r4, r5, r6, pc}
1005673a:	2200      	movs	r2, #0
1005673c:	6b65      	ldr	r5, [r4, #52]	; 0x34
1005673e:	6be6      	ldr	r6, [r4, #60]	; 0x3c
10056740:	5cad      	ldrb	r5, [r5, r2]
10056742:	54b5      	strb	r5, [r6, r2]
10056744:	1c52      	adds	r2, r2, #1
10056746:	b2d2      	uxtb	r2, r2
10056748:	2a08      	cmp	r2, #8
1005674a:	d3f7      	bcc.n	1005673c <LL_Set_Adv_Data+0x1c>
1005674c:	2200      	movs	r2, #0
1005674e:	e005      	b.n	1005675c <LL_Set_Adv_Data+0x3c>
10056750:	7805      	ldrb	r5, [r0, #0]
10056752:	1c52      	adds	r2, r2, #1
10056754:	701d      	strb	r5, [r3, #0]
10056756:	1c40      	adds	r0, r0, #1
10056758:	b2d2      	uxtb	r2, r2
1005675a:	1c5b      	adds	r3, r3, #1
1005675c:	428a      	cmp	r2, r1
1005675e:	d3f7      	bcc.n	10056750 <LL_Set_Adv_Data+0x30>
10056760:	202c      	movs	r0, #44	; 0x2c
10056762:	5501      	strb	r1, [r0, r4]
10056764:	6be0      	ldr	r0, [r4, #60]	; 0x3c
10056766:	1d89      	adds	r1, r1, #6
10056768:	7041      	strb	r1, [r0, #1]
1005676a:	f7fd fca3 	bl	100540b4 <get_advertiser>
1005676e:	7e21      	ldrb	r1, [r4, #24]
10056770:	2901      	cmp	r1, #1
10056772:	d00c      	beq.n	1005678e <LL_Set_Adv_Data+0x6e>
10056774:	2808      	cmp	r0, #8
10056776:	d20a      	bcs.n	1005678e <LL_Set_Adv_Data+0x6e>
10056778:	6b61      	ldr	r1, [r4, #52]	; 0x34
1005677a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
1005677c:	63e1      	str	r1, [r4, #60]	; 0x3c
1005677e:	6360      	str	r0, [r4, #52]	; 0x34
10056780:	3480      	adds	r4, #128	; 0x80
10056782:	6a61      	ldr	r1, [r4, #36]	; 0x24
10056784:	8048      	strh	r0, [r1, #2]
10056786:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10056788:	8048      	strh	r0, [r1, #2]
1005678a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
1005678c:	8048      	strh	r0, [r1, #2]
1005678e:	2000      	movs	r0, #0
10056790:	bd70      	pop	{r4, r5, r6, pc}
10056792:	0000      	.short	0x0000
10056794:	20000d64 	.word	0x20000d64

10056798 <LL_Set_Adv_PDU_Format>:
10056798:	b530      	push	{r4, r5, lr}
1005679a:	4831      	ldr	r0, [pc, #196]	; (10056860 <LL_Set_Adv_PDU_Format+0xc8>)
1005679c:	2141      	movs	r1, #65	; 0x41
1005679e:	6800      	ldr	r0, [r0, #0]
100567a0:	0149      	lsls	r1, r1, #5
100567a2:	1840      	adds	r0, r0, r1
100567a4:	6b41      	ldr	r1, [r0, #52]	; 0x34
100567a6:	7e03      	ldrb	r3, [r0, #24]
100567a8:	780a      	ldrb	r2, [r1, #0]
100567aa:	071b      	lsls	r3, r3, #28
100567ac:	0992      	lsrs	r2, r2, #6
100567ae:	0192      	lsls	r2, r2, #6
100567b0:	0f1b      	lsrs	r3, r3, #28
100567b2:	431a      	orrs	r2, r3
100567b4:	700a      	strb	r2, [r1, #0]
100567b6:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
100567b8:	7e03      	ldrb	r3, [r0, #24]
100567ba:	780a      	ldrb	r2, [r1, #0]
100567bc:	071b      	lsls	r3, r3, #28
100567be:	0992      	lsrs	r2, r2, #6
100567c0:	0192      	lsls	r2, r2, #6
100567c2:	0f1b      	lsrs	r3, r3, #28
100567c4:	431a      	orrs	r2, r3
100567c6:	700a      	strb	r2, [r1, #0]
100567c8:	6b81      	ldr	r1, [r0, #56]	; 0x38
100567ca:	780a      	ldrb	r2, [r1, #0]
100567cc:	0992      	lsrs	r2, r2, #6
100567ce:	0192      	lsls	r2, r2, #6
100567d0:	1d12      	adds	r2, r2, #4
100567d2:	700a      	strb	r2, [r1, #0]
100567d4:	6c01      	ldr	r1, [r0, #64]	; 0x40
100567d6:	780a      	ldrb	r2, [r1, #0]
100567d8:	0992      	lsrs	r2, r2, #6
100567da:	0192      	lsls	r2, r2, #6
100567dc:	1d12      	adds	r2, r2, #4
100567de:	700a      	strb	r2, [r1, #0]
100567e0:	2100      	movs	r1, #0
100567e2:	4602      	mov	r2, r0
100567e4:	3220      	adds	r2, #32
100567e6:	e00b      	b.n	10056800 <LL_Set_Adv_PDU_Format+0x68>
100567e8:	6a83      	ldr	r3, [r0, #40]	; 0x28
100567ea:	6b45      	ldr	r5, [r0, #52]	; 0x34
100567ec:	5c5c      	ldrb	r4, [r3, r1]
100567ee:	460b      	mov	r3, r1
100567f0:	3308      	adds	r3, #8
100567f2:	54ec      	strb	r4, [r5, r3]
100567f4:	6a84      	ldr	r4, [r0, #40]	; 0x28
100567f6:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
100567f8:	5c64      	ldrb	r4, [r4, r1]
100567fa:	1c49      	adds	r1, r1, #1
100567fc:	54ec      	strb	r4, [r5, r3]
100567fe:	b289      	uxth	r1, r1
10056800:	7b13      	ldrb	r3, [r2, #12]
10056802:	428b      	cmp	r3, r1
10056804:	d901      	bls.n	1005680a <LL_Set_Adv_PDU_Format+0x72>
10056806:	291f      	cmp	r1, #31
10056808:	d3ee      	bcc.n	100567e8 <LL_Set_Adv_PDU_Format+0x50>
1005680a:	7e01      	ldrb	r1, [r0, #24]
1005680c:	2901      	cmp	r1, #1
1005680e:	d007      	beq.n	10056820 <LL_Set_Adv_PDU_Format+0x88>
10056810:	b2d9      	uxtb	r1, r3
10056812:	6b42      	ldr	r2, [r0, #52]	; 0x34
10056814:	1d89      	adds	r1, r1, #6
10056816:	7051      	strb	r1, [r2, #1]
10056818:	6b41      	ldr	r1, [r0, #52]	; 0x34
1005681a:	3108      	adds	r1, #8
1005681c:	6281      	str	r1, [r0, #40]	; 0x28
1005681e:	bd30      	pop	{r4, r5, pc}
10056820:	4603      	mov	r3, r0
10056822:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
10056824:	3310      	adds	r3, #16
10056826:	3208      	adds	r2, #8
10056828:	6881      	ldr	r1, [r0, #8]
1005682a:	6282      	str	r2, [r0, #40]	; 0x28
1005682c:	6b44      	ldr	r4, [r0, #52]	; 0x34
1005682e:	220c      	movs	r2, #12
10056830:	7062      	strb	r2, [r4, #1]
10056832:	2200      	movs	r2, #0
10056834:	4615      	mov	r5, r2
10056836:	6b44      	ldr	r4, [r0, #52]	; 0x34
10056838:	3508      	adds	r5, #8
1005683a:	5561      	strb	r1, [r4, r5]
1005683c:	7019      	strb	r1, [r3, #0]
1005683e:	0a09      	lsrs	r1, r1, #8
10056840:	1c5b      	adds	r3, r3, #1
10056842:	2a03      	cmp	r2, #3
10056844:	d100      	bne.n	10056848 <LL_Set_Adv_PDU_Format+0xb0>
10056846:	68c1      	ldr	r1, [r0, #12]
10056848:	1c52      	adds	r2, r2, #1
1005684a:	b2d2      	uxtb	r2, r2
1005684c:	2a06      	cmp	r2, #6
1005684e:	d3f1      	bcc.n	10056834 <LL_Set_Adv_PDU_Format+0x9c>
10056850:	6b40      	ldr	r0, [r0, #52]	; 0x34
10056852:	7802      	ldrb	r2, [r0, #0]
10056854:	0652      	lsls	r2, r2, #25
10056856:	0e52      	lsrs	r2, r2, #25
10056858:	01c9      	lsls	r1, r1, #7
1005685a:	430a      	orrs	r2, r1
1005685c:	7002      	strb	r2, [r0, #0]
1005685e:	bd30      	pop	{r4, r5, pc}
10056860:	20000d64 	.word	0x20000d64

10056864 <LL_Set_Adv_Params>:
10056864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056866:	4f51      	ldr	r7, [pc, #324]	; (100569ac <LL_Set_Adv_Params+0x148>)
10056868:	4606      	mov	r6, r0
1005686a:	2141      	movs	r1, #65	; 0x41
1005686c:	6838      	ldr	r0, [r7, #0]
1005686e:	0149      	lsls	r1, r1, #5
10056870:	1845      	adds	r5, r0, r1
10056872:	f7fd fc1f 	bl	100540b4 <get_advertiser>
10056876:	2808      	cmp	r0, #8
10056878:	d112      	bne.n	100568a0 <LL_Set_Adv_Params+0x3c>
1005687a:	f7fd fc9d 	bl	100541b8 <get_scan_connection>
1005687e:	2808      	cmp	r0, #8
10056880:	d003      	beq.n	1005688a <LL_Set_Adv_Params+0x26>
10056882:	2023      	movs	r0, #35	; 0x23
10056884:	5d40      	ldrb	r0, [r0, r5]
10056886:	2802      	cmp	r0, #2
10056888:	d00a      	beq.n	100568a0 <LL_Set_Adv_Params+0x3c>
1005688a:	6838      	ldr	r0, [r7, #0]
1005688c:	4634      	mov	r4, r6
1005688e:	3020      	adds	r0, #32
10056890:	7d80      	ldrb	r0, [r0, #22]
10056892:	3409      	adds	r4, #9
10056894:	0700      	lsls	r0, r0, #28
10056896:	2800      	cmp	r0, #0
10056898:	7930      	ldrb	r0, [r6, #4]
1005689a:	db03      	blt.n	100568a4 <LL_Set_Adv_Params+0x40>
1005689c:	2803      	cmp	r0, #3
1005689e:	d003      	beq.n	100568a8 <LL_Set_Adv_Params+0x44>
100568a0:	200c      	movs	r0, #12
100568a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100568a4:	2801      	cmp	r0, #1
100568a6:	d004      	beq.n	100568b2 <LL_Set_Adv_Params+0x4e>
100568a8:	4620      	mov	r0, r4
100568aa:	f7ff fb86 	bl	10055fba <Is_Address_Initialized>
100568ae:	2800      	cmp	r0, #0
100568b0:	d006      	beq.n	100568c0 <LL_Set_Adv_Params+0x5c>
100568b2:	7a32      	ldrb	r2, [r6, #8]
100568b4:	79f0      	ldrb	r0, [r6, #7]
100568b6:	2300      	movs	r3, #0
100568b8:	4621      	mov	r1, r4
100568ba:	f7ff fbab 	bl	10056014 <LL_Check_And_Set_Addresses>
100568be:	e00b      	b.n	100568d8 <LL_Set_Adv_Params+0x74>
100568c0:	2300      	movs	r3, #0
100568c2:	79f0      	ldrb	r0, [r6, #7]
100568c4:	461a      	mov	r2, r3
100568c6:	4619      	mov	r1, r3
100568c8:	f7ff fba4 	bl	10056014 <LL_Check_And_Set_Addresses>
100568cc:	2211      	movs	r2, #17
100568ce:	6839      	ldr	r1, [r7, #0]
100568d0:	20ff      	movs	r0, #255	; 0xff
100568d2:	0192      	lsls	r2, r2, #6
100568d4:	1889      	adds	r1, r1, r2
100568d6:	7588      	strb	r0, [r1, #22]
100568d8:	462c      	mov	r4, r5
100568da:	3480      	adds	r4, #128	; 0x80
100568dc:	6a21      	ldr	r1, [r4, #32]
100568de:	8f28      	ldrh	r0, [r5, #56]	; 0x38
100568e0:	8048      	strh	r0, [r1, #2]
100568e2:	7930      	ldrb	r0, [r6, #4]
100568e4:	2801      	cmp	r0, #1
100568e6:	d021      	beq.n	1005692c <LL_Set_Adv_Params+0xc8>
100568e8:	8830      	ldrh	r0, [r6, #0]
100568ea:	0200      	lsls	r0, r0, #8
100568ec:	60a0      	str	r0, [r4, #8]
100568ee:	8870      	ldrh	r0, [r6, #2]
100568f0:	0200      	lsls	r0, r0, #8
100568f2:	60e0      	str	r0, [r4, #12]
100568f4:	2000      	movs	r0, #0
100568f6:	43c0      	mvns	r0, r0
100568f8:	8220      	strh	r0, [r4, #16]
100568fa:	7930      	ldrb	r0, [r6, #4]
100568fc:	2802      	cmp	r0, #2
100568fe:	d01c      	beq.n	1005693a <LL_Set_Adv_Params+0xd6>
10056900:	2803      	cmp	r0, #3
10056902:	d01c      	beq.n	1005693e <LL_Set_Adv_Params+0xda>
10056904:	2804      	cmp	r0, #4
10056906:	d01c      	beq.n	10056942 <LL_Set_Adv_Params+0xde>
10056908:	2801      	cmp	r0, #1
1005690a:	d01a      	beq.n	10056942 <LL_Set_Adv_Params+0xde>
1005690c:	2805      	cmp	r0, #5
1005690e:	d300      	bcc.n	10056912 <LL_Set_Adv_Params+0xae>
10056910:	20ff      	movs	r0, #255	; 0xff
10056912:	7628      	strb	r0, [r5, #24]
10056914:	4628      	mov	r0, r5
10056916:	3020      	adds	r0, #32
10056918:	79b1      	ldrb	r1, [r6, #6]
1005691a:	7341      	strb	r1, [r0, #13]
1005691c:	7971      	ldrb	r1, [r6, #5]
1005691e:	4603      	mov	r3, r0
10056920:	7381      	strb	r1, [r0, #14]
10056922:	2027      	movs	r0, #39	; 0x27
10056924:	2200      	movs	r2, #0
10056926:	07ce      	lsls	r6, r1, #31
10056928:	d00f      	beq.n	1005694a <LL_Set_Adv_Params+0xe6>
1005692a:	e011      	b.n	10056950 <LL_Set_Adv_Params+0xec>
1005692c:	2003      	movs	r0, #3
1005692e:	0240      	lsls	r0, r0, #9
10056930:	60a0      	str	r0, [r4, #8]
10056932:	60e0      	str	r0, [r4, #12]
10056934:	20ff      	movs	r0, #255	; 0xff
10056936:	3056      	adds	r0, #86	; 0x56
10056938:	e7de      	b.n	100568f8 <LL_Set_Adv_Params+0x94>
1005693a:	2006      	movs	r0, #6
1005693c:	e7e9      	b.n	10056912 <LL_Set_Adv_Params+0xae>
1005693e:	2002      	movs	r0, #2
10056940:	e7e7      	b.n	10056912 <LL_Set_Adv_Params+0xae>
10056942:	2001      	movs	r0, #1
10056944:	2100      	movs	r1, #0
10056946:	71b1      	strb	r1, [r6, #6]
10056948:	e7e3      	b.n	10056912 <LL_Set_Adv_Params+0xae>
1005694a:	0849      	lsrs	r1, r1, #1
1005694c:	1c40      	adds	r0, r0, #1
1005694e:	b2c0      	uxtb	r0, r0
10056950:	1c52      	adds	r2, r2, #1
10056952:	b2d2      	uxtb	r2, r2
10056954:	2a02      	cmp	r2, #2
10056956:	d3e6      	bcc.n	10056926 <LL_Set_Adv_Params+0xc2>
10056958:	2905      	cmp	r1, #5
1005695a:	d102      	bne.n	10056962 <LL_Set_Adv_Params+0xfe>
1005695c:	1c80      	adds	r0, r0, #2
1005695e:	b2c0      	uxtb	r0, r0
10056960:	2103      	movs	r1, #3
10056962:	2827      	cmp	r0, #39	; 0x27
10056964:	d901      	bls.n	1005696a <LL_Set_Adv_Params+0x106>
10056966:	1ec0      	subs	r0, r0, #3
10056968:	b2c0      	uxtb	r0, r0
1005696a:	6a66      	ldr	r6, [r4, #36]	; 0x24
1005696c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
1005696e:	8032      	strh	r2, [r6, #0]
10056970:	6aa6      	ldr	r6, [r4, #40]	; 0x28
10056972:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
10056974:	8032      	strh	r2, [r6, #0]
10056976:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
10056978:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
1005697a:	8032      	strh	r2, [r6, #0]
1005697c:	6a66      	ldr	r6, [r4, #36]	; 0x24
1005697e:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
10056980:	8072      	strh	r2, [r6, #2]
10056982:	6aa6      	ldr	r6, [r4, #40]	; 0x28
10056984:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
10056986:	8072      	strh	r2, [r6, #2]
10056988:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
1005698a:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
1005698c:	806a      	strh	r2, [r5, #2]
1005698e:	73d8      	strb	r0, [r3, #15]
10056990:	2903      	cmp	r1, #3
10056992:	d002      	beq.n	1005699a <LL_Set_Adv_Params+0x136>
10056994:	2901      	cmp	r1, #1
10056996:	d004      	beq.n	100569a2 <LL_Set_Adv_Params+0x13e>
10056998:	e005      	b.n	100569a6 <LL_Set_Adv_Params+0x142>
1005699a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
1005699c:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
1005699e:	8008      	strh	r0, [r1, #0]
100569a0:	e001      	b.n	100569a6 <LL_Set_Adv_Params+0x142>
100569a2:	6a60      	ldr	r0, [r4, #36]	; 0x24
100569a4:	8000      	strh	r0, [r0, #0]
100569a6:	2000      	movs	r0, #0
100569a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100569aa:	0000      	.short	0x0000
100569ac:	20000d64 	.word	0x20000d64

100569b0 <LL_Set_Advertising_Buffers>:
100569b0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100569b2:	4820      	ldr	r0, [pc, #128]	; (10056a34 <LL_Set_Advertising_Buffers+0x84>)
100569b4:	2141      	movs	r1, #65	; 0x41
100569b6:	6800      	ldr	r0, [r0, #0]
100569b8:	0149      	lsls	r1, r1, #5
100569ba:	1847      	adds	r7, r0, r1
100569bc:	4669      	mov	r1, sp
100569be:	a801      	add	r0, sp, #4
100569c0:	f7ff fd34 	bl	1005642c <LL_Get_Address>
100569c4:	6bbe      	ldr	r6, [r7, #56]	; 0x38
100569c6:	6b7d      	ldr	r5, [r7, #52]	; 0x34
100569c8:	6bfc      	ldr	r4, [r7, #60]	; 0x3c
100569ca:	6c3b      	ldr	r3, [r7, #64]	; 0x40
100569cc:	b672      	cpsid	i
100569ce:	2000      	movs	r0, #0
100569d0:	aa01      	add	r2, sp, #4
100569d2:	1c81      	adds	r1, r0, #2
100569d4:	5c17      	ldrb	r7, [r2, r0]
100569d6:	546f      	strb	r7, [r5, r1]
100569d8:	5c17      	ldrb	r7, [r2, r0]
100569da:	5477      	strb	r7, [r6, r1]
100569dc:	5c17      	ldrb	r7, [r2, r0]
100569de:	5467      	strb	r7, [r4, r1]
100569e0:	5c17      	ldrb	r7, [r2, r0]
100569e2:	1c40      	adds	r0, r0, #1
100569e4:	545f      	strb	r7, [r3, r1]
100569e6:	2806      	cmp	r0, #6
100569e8:	dbf3      	blt.n	100569d2 <LL_Set_Advertising_Buffers+0x22>
100569ea:	4669      	mov	r1, sp
100569ec:	7809      	ldrb	r1, [r1, #0]
100569ee:	782a      	ldrb	r2, [r5, #0]
100569f0:	20bf      	movs	r0, #191	; 0xbf
100569f2:	07c9      	lsls	r1, r1, #31
100569f4:	4002      	ands	r2, r0
100569f6:	0e49      	lsrs	r1, r1, #25
100569f8:	430a      	orrs	r2, r1
100569fa:	702a      	strb	r2, [r5, #0]
100569fc:	4669      	mov	r1, sp
100569fe:	7809      	ldrb	r1, [r1, #0]
10056a00:	7832      	ldrb	r2, [r6, #0]
10056a02:	07c9      	lsls	r1, r1, #31
10056a04:	4002      	ands	r2, r0
10056a06:	0e49      	lsrs	r1, r1, #25
10056a08:	430a      	orrs	r2, r1
10056a0a:	7032      	strb	r2, [r6, #0]
10056a0c:	4669      	mov	r1, sp
10056a0e:	7809      	ldrb	r1, [r1, #0]
10056a10:	7822      	ldrb	r2, [r4, #0]
10056a12:	07c9      	lsls	r1, r1, #31
10056a14:	4002      	ands	r2, r0
10056a16:	0e49      	lsrs	r1, r1, #25
10056a18:	430a      	orrs	r2, r1
10056a1a:	7022      	strb	r2, [r4, #0]
10056a1c:	781a      	ldrb	r2, [r3, #0]
10056a1e:	4669      	mov	r1, sp
10056a20:	4002      	ands	r2, r0
10056a22:	7808      	ldrb	r0, [r1, #0]
10056a24:	07c0      	lsls	r0, r0, #31
10056a26:	0e40      	lsrs	r0, r0, #25
10056a28:	4302      	orrs	r2, r0
10056a2a:	701a      	strb	r2, [r3, #0]
10056a2c:	b662      	cpsie	i
10056a2e:	2000      	movs	r0, #0
10056a30:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10056a32:	0000      	.short	0x0000
10056a34:	20000d64 	.word	0x20000d64

10056a38 <LL_Set_DirectAddress>:
10056a38:	4603      	mov	r3, r0
10056a3a:	b510      	push	{r4, lr}
10056a3c:	480a      	ldr	r0, [pc, #40]	; (10056a68 <LL_Set_DirectAddress+0x30>)
10056a3e:	2a00      	cmp	r2, #0
10056a40:	6800      	ldr	r0, [r0, #0]
10056a42:	d006      	beq.n	10056a52 <LL_Set_DirectAddress+0x1a>
10056a44:	4a09      	ldr	r2, [pc, #36]	; (10056a6c <LL_Set_DirectAddress+0x34>)
10056a46:	1880      	adds	r0, r0, r2
10056a48:	b672      	cpsid	i
10056a4a:	460a      	mov	r2, r1
10056a4c:	4619      	mov	r1, r3
10056a4e:	3010      	adds	r0, #16
10056a50:	e006      	b.n	10056a60 <LL_Set_DirectAddress+0x28>
10056a52:	2241      	movs	r2, #65	; 0x41
10056a54:	0152      	lsls	r2, r2, #5
10056a56:	1880      	adds	r0, r0, r2
10056a58:	b672      	cpsid	i
10056a5a:	460a      	mov	r2, r1
10056a5c:	4619      	mov	r1, r3
10056a5e:	3008      	adds	r0, #8
10056a60:	f000 f8a0 	bl	10056ba4 <addr_u32_from_u8>
10056a64:	b662      	cpsie	i
10056a66:	bd10      	pop	{r4, pc}
10056a68:	20000d64 	.word	0x20000d64
10056a6c:	00000904 	.word	0x00000904

10056a70 <LL_Set_OwnAddress>:
10056a70:	4603      	mov	r3, r0
10056a72:	b510      	push	{r4, lr}
10056a74:	4806      	ldr	r0, [pc, #24]	; (10056a90 <LL_Set_OwnAddress+0x20>)
10056a76:	2241      	movs	r2, #65	; 0x41
10056a78:	6800      	ldr	r0, [r0, #0]
10056a7a:	0152      	lsls	r2, r2, #5
10056a7c:	1880      	adds	r0, r0, r2
10056a7e:	b672      	cpsid	i
10056a80:	460a      	mov	r2, r1
10056a82:	4619      	mov	r1, r3
10056a84:	f000 f88e 	bl	10056ba4 <addr_u32_from_u8>
10056a88:	b662      	cpsie	i
10056a8a:	2000      	movs	r0, #0
10056a8c:	bd10      	pop	{r4, pc}
10056a8e:	0000      	.short	0x0000
10056a90:	20000d64 	.word	0x20000d64

10056a94 <LL_Set_Scan_Resp_Data>:
10056a94:	b5f0      	push	{r4, r5, r6, r7, lr}
10056a96:	4a15      	ldr	r2, [pc, #84]	; (10056aec <LL_Set_Scan_Resp_Data+0x58>)
10056a98:	2341      	movs	r3, #65	; 0x41
10056a9a:	6812      	ldr	r2, [r2, #0]
10056a9c:	015b      	lsls	r3, r3, #5
10056a9e:	18d3      	adds	r3, r2, r3
10056aa0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
10056aa2:	4615      	mov	r5, r2
10056aa4:	3208      	adds	r2, #8
10056aa6:	291f      	cmp	r1, #31
10056aa8:	d901      	bls.n	10056aae <LL_Set_Scan_Resp_Data+0x1a>
10056aaa:	2030      	movs	r0, #48	; 0x30
10056aac:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056aae:	2400      	movs	r4, #0
10056ab0:	6b9e      	ldr	r6, [r3, #56]	; 0x38
10056ab2:	6c1f      	ldr	r7, [r3, #64]	; 0x40
10056ab4:	5d36      	ldrb	r6, [r6, r4]
10056ab6:	553e      	strb	r6, [r7, r4]
10056ab8:	1c64      	adds	r4, r4, #1
10056aba:	b2e4      	uxtb	r4, r4
10056abc:	2c08      	cmp	r4, #8
10056abe:	d3f7      	bcc.n	10056ab0 <LL_Set_Scan_Resp_Data+0x1c>
10056ac0:	2400      	movs	r4, #0
10056ac2:	e005      	b.n	10056ad0 <LL_Set_Scan_Resp_Data+0x3c>
10056ac4:	7806      	ldrb	r6, [r0, #0]
10056ac6:	1c64      	adds	r4, r4, #1
10056ac8:	7016      	strb	r6, [r2, #0]
10056aca:	1c40      	adds	r0, r0, #1
10056acc:	b2e4      	uxtb	r4, r4
10056ace:	1c52      	adds	r2, r2, #1
10056ad0:	428c      	cmp	r4, r1
10056ad2:	d3f7      	bcc.n	10056ac4 <LL_Set_Scan_Resp_Data+0x30>
10056ad4:	6c18      	ldr	r0, [r3, #64]	; 0x40
10056ad6:	1d89      	adds	r1, r1, #6
10056ad8:	7041      	strb	r1, [r0, #1]
10056ada:	6b98      	ldr	r0, [r3, #56]	; 0x38
10056adc:	639d      	str	r5, [r3, #56]	; 0x38
10056ade:	6418      	str	r0, [r3, #64]	; 0x40
10056ae0:	3380      	adds	r3, #128	; 0x80
10056ae2:	6a18      	ldr	r0, [r3, #32]
10056ae4:	8045      	strh	r5, [r0, #2]
10056ae6:	2000      	movs	r0, #0
10056ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056aea:	0000      	.short	0x0000
10056aec:	20000d64 	.word	0x20000d64

10056af0 <LL_Update_Advertising_Buffers>:
10056af0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10056af2:	480f      	ldr	r0, [pc, #60]	; (10056b30 <LL_Update_Advertising_Buffers+0x40>)
10056af4:	2141      	movs	r1, #65	; 0x41
10056af6:	6800      	ldr	r0, [r0, #0]
10056af8:	0149      	lsls	r1, r1, #5
10056afa:	1844      	adds	r4, r0, r1
10056afc:	490d      	ldr	r1, [pc, #52]	; (10056b34 <LL_Update_Advertising_Buffers+0x44>)
10056afe:	2206      	movs	r2, #6
10056b00:	1841      	adds	r1, r0, r1
10056b02:	4668      	mov	r0, sp
10056b04:	f7e9 fe3d 	bl	10040782 <Osal_MemCpy>
10056b08:	6ba6      	ldr	r6, [r4, #56]	; 0x38
10056b0a:	6be5      	ldr	r5, [r4, #60]	; 0x3c
10056b0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
10056b0e:	6c24      	ldr	r4, [r4, #64]	; 0x40
10056b10:	2000      	movs	r0, #0
10056b12:	466a      	mov	r2, sp
10056b14:	1c81      	adds	r1, r0, #2
10056b16:	5c17      	ldrb	r7, [r2, r0]
10056b18:	545f      	strb	r7, [r3, r1]
10056b1a:	5c17      	ldrb	r7, [r2, r0]
10056b1c:	5477      	strb	r7, [r6, r1]
10056b1e:	5c17      	ldrb	r7, [r2, r0]
10056b20:	546f      	strb	r7, [r5, r1]
10056b22:	5c17      	ldrb	r7, [r2, r0]
10056b24:	1c40      	adds	r0, r0, #1
10056b26:	5467      	strb	r7, [r4, r1]
10056b28:	2806      	cmp	r0, #6
10056b2a:	dbf3      	blt.n	10056b14 <LL_Update_Advertising_Buffers+0x24>
10056b2c:	2000      	movs	r0, #0
10056b2e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10056b30:	20000d64 	.word	0x20000d64
10056b34:	000006ef 	.word	0x000006ef

10056b38 <LL_Update_Scanning_Initiating_Buffers>:
10056b38:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10056b3a:	4c0e      	ldr	r4, [pc, #56]	; (10056b74 <LL_Update_Scanning_Initiating_Buffers+0x3c>)
10056b3c:	490e      	ldr	r1, [pc, #56]	; (10056b78 <LL_Update_Scanning_Initiating_Buffers+0x40>)
10056b3e:	6820      	ldr	r0, [r4, #0]
10056b40:	2206      	movs	r2, #6
10056b42:	1845      	adds	r5, r0, r1
10056b44:	490d      	ldr	r1, [pc, #52]	; (10056b7c <LL_Update_Scanning_Initiating_Buffers+0x44>)
10056b46:	1841      	adds	r1, r0, r1
10056b48:	4668      	mov	r0, sp
10056b4a:	f7e9 fe1a 	bl	10040782 <Osal_MemCpy>
10056b4e:	6a29      	ldr	r1, [r5, #32]
10056b50:	2206      	movs	r2, #6
10056b52:	4668      	mov	r0, sp
10056b54:	1c89      	adds	r1, r1, #2
10056b56:	f7f5 ff15 	bl	1004c984 <char_copy>
10056b5a:	2109      	movs	r1, #9
10056b5c:	6820      	ldr	r0, [r4, #0]
10056b5e:	0209      	lsls	r1, r1, #8
10056b60:	1840      	adds	r0, r0, r1
10056b62:	6d01      	ldr	r1, [r0, #80]	; 0x50
10056b64:	2206      	movs	r2, #6
10056b66:	4668      	mov	r0, sp
10056b68:	1c89      	adds	r1, r1, #2
10056b6a:	f7f5 ff0b 	bl	1004c984 <char_copy>
10056b6e:	2000      	movs	r0, #0
10056b70:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10056b72:	0000      	.short	0x0000
10056b74:	20000d64 	.word	0x20000d64
10056b78:	00000904 	.word	0x00000904
10056b7c:	000006ef 	.word	0x000006ef

10056b80 <LL_busy>:
10056b80:	4806      	ldr	r0, [pc, #24]	; (10056b9c <LL_busy+0x1c>)
10056b82:	211f      	movs	r1, #31
10056b84:	6800      	ldr	r0, [r0, #0]
10056b86:	0189      	lsls	r1, r1, #6
10056b88:	1840      	adds	r0, r0, r1
10056b8a:	4905      	ldr	r1, [pc, #20]	; (10056ba0 <LL_busy+0x20>)
10056b8c:	7900      	ldrb	r0, [r0, #4]
10056b8e:	8809      	ldrh	r1, [r1, #0]
10056b90:	0709      	lsls	r1, r1, #28
10056b92:	d401      	bmi.n	10056b98 <LL_busy+0x18>
10056b94:	2800      	cmp	r0, #0
10056b96:	d000      	beq.n	10056b9a <LL_busy+0x1a>
10056b98:	2001      	movs	r0, #1
10056b9a:	4770      	bx	lr
10056b9c:	20000d64 	.word	0x20000d64
10056ba0:	200000c0 	.word	0x200000c0

10056ba4 <addr_u32_from_u8>:
10056ba4:	b570      	push	{r4, r5, r6, lr}
10056ba6:	4605      	mov	r5, r0
10056ba8:	4616      	mov	r6, r2
10056baa:	460c      	mov	r4, r1
10056bac:	4608      	mov	r0, r1
10056bae:	f000 f837 	bl	10056c20 <le4ByteToInt32>
10056bb2:	6028      	str	r0, [r5, #0]
10056bb4:	7921      	ldrb	r1, [r4, #4]
10056bb6:	7960      	ldrb	r0, [r4, #5]
10056bb8:	0200      	lsls	r0, r0, #8
10056bba:	4308      	orrs	r0, r1
10056bbc:	0431      	lsls	r1, r6, #16
10056bbe:	1840      	adds	r0, r0, r1
10056bc0:	6068      	str	r0, [r5, #4]
10056bc2:	bd70      	pop	{r4, r5, r6, pc}

10056bc4 <int32ToLe4Byte>:
10056bc4:	7001      	strb	r1, [r0, #0]
10056bc6:	0a0a      	lsrs	r2, r1, #8
10056bc8:	7042      	strb	r2, [r0, #1]
10056bca:	0c0a      	lsrs	r2, r1, #16
10056bcc:	7082      	strb	r2, [r0, #2]
10056bce:	0e09      	lsrs	r1, r1, #24
10056bd0:	70c1      	strb	r1, [r0, #3]
10056bd2:	4770      	bx	lr

10056bd4 <is_connected>:
10056bd4:	b570      	push	{r4, r5, r6, lr}
10056bd6:	4811      	ldr	r0, [pc, #68]	; (10056c1c <is_connected+0x48>)
10056bd8:	2409      	movs	r4, #9
10056bda:	6802      	ldr	r2, [r0, #0]
10056bdc:	201f      	movs	r0, #31
10056bde:	0180      	lsls	r0, r0, #6
10056be0:	1810      	adds	r0, r2, r0
10056be2:	7903      	ldrb	r3, [r0, #4]
10056be4:	2000      	movs	r0, #0
10056be6:	0224      	lsls	r4, r4, #8
10056be8:	1914      	adds	r4, r2, r4
10056bea:	32a0      	adds	r2, #160	; 0xa0
10056bec:	4601      	mov	r1, r0
10056bee:	7b15      	ldrb	r5, [r2, #12]
10056bf0:	e010      	b.n	10056c14 <is_connected+0x40>
10056bf2:	07da      	lsls	r2, r3, #31
10056bf4:	d00b      	beq.n	10056c0e <is_connected+0x3a>
10056bf6:	2258      	movs	r2, #88	; 0x58
10056bf8:	6b26      	ldr	r6, [r4, #48]	; 0x30
10056bfa:	434a      	muls	r2, r1
10056bfc:	18b2      	adds	r2, r6, r2
10056bfe:	7892      	ldrb	r2, [r2, #2]
10056c00:	0752      	lsls	r2, r2, #29
10056c02:	0f52      	lsrs	r2, r2, #29
10056c04:	2a05      	cmp	r2, #5
10056c06:	d001      	beq.n	10056c0c <is_connected+0x38>
10056c08:	2a02      	cmp	r2, #2
10056c0a:	d100      	bne.n	10056c0e <is_connected+0x3a>
10056c0c:	2001      	movs	r0, #1
10056c0e:	085b      	lsrs	r3, r3, #1
10056c10:	1c49      	adds	r1, r1, #1
10056c12:	b2c9      	uxtb	r1, r1
10056c14:	428d      	cmp	r5, r1
10056c16:	d8ec      	bhi.n	10056bf2 <is_connected+0x1e>
10056c18:	bd70      	pop	{r4, r5, r6, pc}
10056c1a:	0000      	.short	0x0000
10056c1c:	20000d64 	.word	0x20000d64

10056c20 <le4ByteToInt32>:
10056c20:	7801      	ldrb	r1, [r0, #0]
10056c22:	7842      	ldrb	r2, [r0, #1]
10056c24:	0213      	lsls	r3, r2, #8
10056c26:	7882      	ldrb	r2, [r0, #2]
10056c28:	78c0      	ldrb	r0, [r0, #3]
10056c2a:	0412      	lsls	r2, r2, #16
10056c2c:	0600      	lsls	r0, r0, #24
10056c2e:	4310      	orrs	r0, r2
10056c30:	4318      	orrs	r0, r3
10056c32:	4308      	orrs	r0, r1
10056c34:	4770      	bx	lr
	...

10056c38 <wait_for_prescheduled_slot_cancellation>:
10056c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056c3a:	4e1b      	ldr	r6, [pc, #108]	; (10056ca8 <wait_for_prescheduled_slot_cancellation+0x70>)
10056c3c:	8831      	ldrh	r1, [r6, #0]
10056c3e:	4604      	mov	r4, r0
10056c40:	0709      	lsls	r1, r1, #28
10056c42:	2008      	movs	r0, #8
10056c44:	0f09      	lsrs	r1, r1, #28
10056c46:	4304      	orrs	r4, r0
10056c48:	42a1      	cmp	r1, r4
10056c4a:	d12b      	bne.n	10056ca4 <wait_for_prescheduled_slot_cancellation+0x6c>
10056c4c:	4d17      	ldr	r5, [pc, #92]	; (10056cac <wait_for_prescheduled_slot_cancellation+0x74>)
10056c4e:	2100      	movs	r1, #0
10056c50:	6828      	ldr	r0, [r5, #0]
10056c52:	6381      	str	r1, [r0, #56]	; 0x38
10056c54:	14b1      	asrs	r1, r6, #18
10056c56:	1840      	adds	r0, r0, r1
10056c58:	2109      	movs	r1, #9
10056c5a:	06c9      	lsls	r1, r1, #27
10056c5c:	6f00      	ldr	r0, [r0, #112]	; 0x70
10056c5e:	6909      	ldr	r1, [r1, #16]
10056c60:	1a47      	subs	r7, r0, r1
10056c62:	2064      	movs	r0, #100	; 0x64
10056c64:	f000 fc7a 	bl	1005755c <machine_time_trans>
10056c68:	7a71      	ldrb	r1, [r6, #9]
10056c6a:	00c9      	lsls	r1, r1, #3
10056c6c:	1840      	adds	r0, r0, r1
10056c6e:	6829      	ldr	r1, [r5, #0]
10056c70:	6a89      	ldr	r1, [r1, #40]	; 0x28
10056c72:	1840      	adds	r0, r0, r1
10056c74:	1a38      	subs	r0, r7, r0
10056c76:	0200      	lsls	r0, r0, #8
10056c78:	2101      	movs	r1, #1
10056c7a:	0a00      	lsrs	r0, r0, #8
10056c7c:	05c9      	lsls	r1, r1, #23
10056c7e:	4288      	cmp	r0, r1
10056c80:	d202      	bcs.n	10056c88 <wait_for_prescheduled_slot_cancellation+0x50>
10056c82:	2000      	movs	r0, #0
10056c84:	f005 ffc8 	bl	1005cc18 <advance_wakeup_timer>
10056c88:	4909      	ldr	r1, [pc, #36]	; (10056cb0 <wait_for_prescheduled_slot_cancellation+0x78>)
10056c8a:	6828      	ldr	r0, [r5, #0]
10056c8c:	8832      	ldrh	r2, [r6, #0]
10056c8e:	0712      	lsls	r2, r2, #28
10056c90:	0f12      	lsrs	r2, r2, #28
10056c92:	42a2      	cmp	r2, r4
10056c94:	d106      	bne.n	10056ca4 <wait_for_prescheduled_slot_cancellation+0x6c>
10056c96:	6b82      	ldr	r2, [r0, #56]	; 0x38
10056c98:	428a      	cmp	r2, r1
10056c9a:	d203      	bcs.n	10056ca4 <wait_for_prescheduled_slot_cancellation+0x6c>
10056c9c:	6b82      	ldr	r2, [r0, #56]	; 0x38
10056c9e:	1c52      	adds	r2, r2, #1
10056ca0:	6382      	str	r2, [r0, #56]	; 0x38
10056ca2:	e7f3      	b.n	10056c8c <wait_for_prescheduled_slot_cancellation+0x54>
10056ca4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056ca6:	0000      	.short	0x0000
10056ca8:	200000c0 	.word	0x200000c0
10056cac:	20000d64 	.word	0x20000d64
10056cb0:	00027100 	.word	0x00027100

10056cb4 <write_radio_config>:
10056cb4:	2101      	movs	r1, #1
10056cb6:	b280      	uxth	r0, r0
10056cb8:	0409      	lsls	r1, r1, #16
10056cba:	1840      	adds	r0, r0, r1
10056cbc:	b508      	push	{r3, lr}
10056cbe:	2109      	movs	r1, #9
10056cc0:	06c9      	lsls	r1, r1, #27
10056cc2:	60c8      	str	r0, [r1, #12]
10056cc4:	2064      	movs	r0, #100	; 0x64
10056cc6:	466a      	mov	r2, sp
10056cc8:	7010      	strb	r0, [r2, #0]
10056cca:	7810      	ldrb	r0, [r2, #0]
10056ccc:	1e40      	subs	r0, r0, #1
10056cce:	7010      	strb	r0, [r2, #0]
10056cd0:	68c8      	ldr	r0, [r1, #12]
10056cd2:	03c0      	lsls	r0, r0, #15
10056cd4:	d502      	bpl.n	10056cdc <write_radio_config+0x28>
10056cd6:	7810      	ldrb	r0, [r2, #0]
10056cd8:	2800      	cmp	r0, #0
10056cda:	d1f6      	bne.n	10056cca <write_radio_config+0x16>
10056cdc:	7810      	ldrb	r0, [r2, #0]
10056cde:	bd08      	pop	{r3, pc}

10056ce0 <LL_Cancel_Connection_Req>:
10056ce0:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
10056ce2:	4c15      	ldr	r4, [pc, #84]	; (10056d38 <LL_Cancel_Connection_Req+0x58>)
10056ce4:	217b      	movs	r1, #123	; 0x7b
10056ce6:	6820      	ldr	r0, [r4, #0]
10056ce8:	0109      	lsls	r1, r1, #4
10056cea:	1845      	adds	r5, r0, r1
10056cec:	2141      	movs	r1, #65	; 0x41
10056cee:	0149      	lsls	r1, r1, #5
10056cf0:	260c      	movs	r6, #12
10056cf2:	1847      	adds	r7, r0, r1
10056cf4:	f7fd fa60 	bl	100541b8 <get_scan_connection>
10056cf8:	9900      	ldr	r1, [sp, #0]
10056cfa:	7dba      	ldrb	r2, [r7, #22]
10056cfc:	700a      	strb	r2, [r1, #0]
10056cfe:	b672      	cpsid	i
10056d00:	2808      	cmp	r0, #8
10056d02:	d215      	bcs.n	10056d30 <LL_Cancel_Connection_Req+0x50>
10056d04:	2109      	movs	r1, #9
10056d06:	6822      	ldr	r2, [r4, #0]
10056d08:	0209      	lsls	r1, r1, #8
10056d0a:	1851      	adds	r1, r2, r1
10056d0c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
10056d0e:	2158      	movs	r1, #88	; 0x58
10056d10:	4341      	muls	r1, r0
10056d12:	1c89      	adds	r1, r1, #2
10056d14:	5c53      	ldrb	r3, [r2, r1]
10056d16:	2b03      	cmp	r3, #3
10056d18:	d10a      	bne.n	10056d30 <LL_Cancel_Connection_Req+0x50>
10056d1a:	2300      	movs	r3, #0
10056d1c:	5453      	strb	r3, [r2, r1]
10056d1e:	7d29      	ldrb	r1, [r5, #20]
10056d20:	2201      	movs	r2, #1
10056d22:	4082      	lsls	r2, r0
10056d24:	4391      	bics	r1, r2
10056d26:	7529      	strb	r1, [r5, #20]
10056d28:	b662      	cpsie	i
10056d2a:	f000 f91f 	bl	10056f6c <wait_for_prescheduled_slot_cancellation>
10056d2e:	2600      	movs	r6, #0
10056d30:	b662      	cpsie	i
10056d32:	4630      	mov	r0, r6
10056d34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056d36:	0000      	.short	0x0000
10056d38:	20000d64 	.word	0x20000d64

10056d3c <LL_Read_Remote_Used_Features>:
10056d3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056d3e:	4d29      	ldr	r5, [pc, #164]	; (10056de4 <LL_Read_Remote_Used_Features+0xa8>)
10056d40:	2241      	movs	r2, #65	; 0x41
10056d42:	6829      	ldr	r1, [r5, #0]
10056d44:	0152      	lsls	r2, r2, #5
10056d46:	188c      	adds	r4, r1, r2
10056d48:	2103      	movs	r1, #3
10056d4a:	f7fd f9d7 	bl	100540fc <get_connection_no>
10056d4e:	4606      	mov	r6, r0
10056d50:	f7fd fa56 	bl	10054200 <is_slave>
10056d54:	0007      	movs	r7, r0
10056d56:	d005      	beq.n	10056d64 <LL_Read_Remote_Used_Features+0x28>
10056d58:	20cf      	movs	r0, #207	; 0xcf
10056d5a:	5d00      	ldrb	r0, [r0, r4]
10056d5c:	2e08      	cmp	r6, #8
10056d5e:	d304      	bcc.n	10056d6a <LL_Read_Remote_Used_Features+0x2e>
10056d60:	2002      	movs	r0, #2
10056d62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056d64:	20ce      	movs	r0, #206	; 0xce
10056d66:	5d00      	ldrb	r0, [r0, r4]
10056d68:	e7f8      	b.n	10056d5c <LL_Read_Remote_Used_Features+0x20>
10056d6a:	2808      	cmp	r0, #8
10056d6c:	d201      	bcs.n	10056d72 <LL_Read_Remote_Used_Features+0x36>
10056d6e:	203a      	movs	r0, #58	; 0x3a
10056d70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056d72:	b672      	cpsid	i
10056d74:	2109      	movs	r1, #9
10056d76:	6828      	ldr	r0, [r5, #0]
10056d78:	0209      	lsls	r1, r1, #8
10056d7a:	1840      	adds	r0, r0, r1
10056d7c:	6b01      	ldr	r1, [r0, #48]	; 0x30
10056d7e:	2058      	movs	r0, #88	; 0x58
10056d80:	4370      	muls	r0, r6
10056d82:	180d      	adds	r5, r1, r0
10056d84:	7968      	ldrb	r0, [r5, #5]
10056d86:	0780      	lsls	r0, r0, #30
10056d88:	d001      	beq.n	10056d8e <LL_Read_Remote_Used_Features+0x52>
10056d8a:	b662      	cpsie	i
10056d8c:	e7ef      	b.n	10056d6e <LL_Read_Remote_Used_Features+0x32>
10056d8e:	2008      	movs	r0, #8
10056d90:	9000      	str	r0, [sp, #0]
10056d92:	2f01      	cmp	r7, #1
10056d94:	d101      	bne.n	10056d9a <LL_Read_Remote_Used_Features+0x5e>
10056d96:	200e      	movs	r0, #14
10056d98:	9000      	str	r0, [sp, #0]
10056d9a:	f7ea fef7 	bl	10041b8c <data_length_extension_csr_ucfg>
10056d9e:	2109      	movs	r1, #9
10056da0:	0740      	lsls	r0, r0, #29
10056da2:	0609      	lsls	r1, r1, #24
10056da4:	1840      	adds	r0, r0, r1
10056da6:	9900      	ldr	r1, [sp, #0]
10056da8:	0409      	lsls	r1, r1, #16
10056daa:	4308      	orrs	r0, r1
10056dac:	490e      	ldr	r1, [pc, #56]	; (10056de8 <LL_Read_Remote_Used_Features+0xac>)
10056dae:	1840      	adds	r0, r0, r1
10056db0:	6b69      	ldr	r1, [r5, #52]	; 0x34
10056db2:	6008      	str	r0, [r1, #0]
10056db4:	6b69      	ldr	r1, [r5, #52]	; 0x34
10056db6:	2000      	movs	r0, #0
10056db8:	6048      	str	r0, [r1, #4]
10056dba:	6b69      	ldr	r1, [r5, #52]	; 0x34
10056dbc:	6088      	str	r0, [r1, #8]
10056dbe:	207d      	movs	r0, #125	; 0x7d
10056dc0:	0240      	lsls	r0, r0, #9
10056dc2:	2f00      	cmp	r7, #0
10056dc4:	d009      	beq.n	10056dda <LL_Read_Remote_Used_Features+0x9e>
10056dc6:	34c0      	adds	r4, #192	; 0xc0
10056dc8:	81a0      	strh	r0, [r4, #12]
10056dca:	73e6      	strb	r6, [r4, #15]
10056dcc:	7968      	ldrb	r0, [r5, #5]
10056dce:	2101      	movs	r1, #1
10056dd0:	4308      	orrs	r0, r1
10056dd2:	7168      	strb	r0, [r5, #5]
10056dd4:	b662      	cpsie	i
10056dd6:	2000      	movs	r0, #0
10056dd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056dda:	34c0      	adds	r4, #192	; 0xc0
10056ddc:	8160      	strh	r0, [r4, #10]
10056dde:	73a6      	strb	r6, [r4, #14]
10056de0:	e7f4      	b.n	10056dcc <LL_Read_Remote_Used_Features+0x90>
10056de2:	0000      	.short	0x0000
10056de4:	20000d64 	.word	0x20000d64
10056de8:	00000903 	.word	0x00000903

10056dec <LL_Set_Channel_Classification>:
10056dec:	b510      	push	{r4, lr}
10056dee:	490c      	ldr	r1, [pc, #48]	; (10056e20 <LL_Set_Channel_Classification+0x34>)
10056df0:	2241      	movs	r2, #65	; 0x41
10056df2:	6809      	ldr	r1, [r1, #0]
10056df4:	0152      	lsls	r2, r2, #5
10056df6:	188c      	adds	r4, r1, r2
10056df8:	34c0      	adds	r4, #192	; 0xc0
10056dfa:	7ba2      	ldrb	r2, [r4, #14]
10056dfc:	2a08      	cmp	r2, #8
10056dfe:	d201      	bcs.n	10056e04 <LL_Set_Channel_Classification+0x18>
10056e00:	200c      	movs	r0, #12
10056e02:	bd10      	pop	{r4, pc}
10056e04:	2205      	movs	r2, #5
10056e06:	3148      	adds	r1, #72	; 0x48
10056e08:	f7f5 fdbc 	bl	1004c984 <char_copy>
10056e0c:	7a20      	ldrb	r0, [r4, #8]
10056e0e:	2102      	movs	r1, #2
10056e10:	4308      	orrs	r0, r1
10056e12:	7220      	strb	r0, [r4, #8]
10056e14:	2000      	movs	r0, #0
10056e16:	f7ea fe73 	bl	10041b00 <Reclassify_All_Channels_ucfg>
10056e1a:	2000      	movs	r0, #0
10056e1c:	bd10      	pop	{r4, pc}
10056e1e:	0000      	.short	0x0000
10056e20:	20000d64 	.word	0x20000d64

10056e24 <LL_Set_Scan_Params>:
10056e24:	b570      	push	{r4, r5, r6, lr}
10056e26:	4605      	mov	r5, r0
10056e28:	4812      	ldr	r0, [pc, #72]	; (10056e74 <LL_Set_Scan_Params+0x50>)
10056e2a:	2141      	movs	r1, #65	; 0x41
10056e2c:	6800      	ldr	r0, [r0, #0]
10056e2e:	0149      	lsls	r1, r1, #5
10056e30:	1844      	adds	r4, r0, r1
10056e32:	f7fd f9c1 	bl	100541b8 <get_scan_connection>
10056e36:	2808      	cmp	r0, #8
10056e38:	d201      	bcs.n	10056e3e <LL_Set_Scan_Params+0x1a>
10056e3a:	200c      	movs	r0, #12
10056e3c:	bd70      	pop	{r4, r5, r6, pc}
10056e3e:	8828      	ldrh	r0, [r5, #0]
10056e40:	2205      	movs	r2, #5
10056e42:	0201      	lsls	r1, r0, #8
10056e44:	4620      	mov	r0, r4
10056e46:	3080      	adds	r0, #128	; 0x80
10056e48:	0252      	lsls	r2, r2, #9
10056e4a:	60c1      	str	r1, [r0, #12]
10056e4c:	4291      	cmp	r1, r2
10056e4e:	d200      	bcs.n	10056e52 <LL_Set_Scan_Params+0x2e>
10056e50:	60c2      	str	r2, [r0, #12]
10056e52:	8869      	ldrh	r1, [r5, #2]
10056e54:	3420      	adds	r4, #32
10056e56:	0209      	lsls	r1, r1, #8
10056e58:	6081      	str	r1, [r0, #8]
10056e5a:	7928      	ldrb	r0, [r5, #4]
10056e5c:	2300      	movs	r3, #0
10056e5e:	70e0      	strb	r0, [r4, #3]
10056e60:	79a8      	ldrb	r0, [r5, #6]
10056e62:	461a      	mov	r2, r3
10056e64:	4619      	mov	r1, r3
10056e66:	f7ff f8d5 	bl	10056014 <LL_Check_And_Set_Addresses>
10056e6a:	7968      	ldrb	r0, [r5, #5]
10056e6c:	7120      	strb	r0, [r4, #4]
10056e6e:	2000      	movs	r0, #0
10056e70:	bd70      	pop	{r4, r5, r6, pc}
10056e72:	0000      	.short	0x0000
10056e74:	20000d64 	.word	0x20000d64

10056e78 <LL_Start_Encryption>:
10056e78:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10056e7a:	4834      	ldr	r0, [pc, #208]	; (10056f4c <LL_Start_Encryption+0xd4>)
10056e7c:	460e      	mov	r6, r1
10056e7e:	6800      	ldr	r0, [r0, #0]
10056e80:	2141      	movs	r1, #65	; 0x41
10056e82:	0149      	lsls	r1, r1, #5
10056e84:	1845      	adds	r5, r0, r1
10056e86:	b087      	sub	sp, #28
10056e88:	461f      	mov	r7, r3
10056e8a:	4614      	mov	r4, r2
10056e8c:	4630      	mov	r0, r6
10056e8e:	f000 f861 	bl	10056f54 <le4ByteToInt32>
10056e92:	9001      	str	r0, [sp, #4]
10056e94:	1d30      	adds	r0, r6, #4
10056e96:	f000 f85d 	bl	10056f54 <le4ByteToInt32>
10056e9a:	9000      	str	r0, [sp, #0]
10056e9c:	7820      	ldrb	r0, [r4, #0]
10056e9e:	7861      	ldrb	r1, [r4, #1]
10056ea0:	ae02      	add	r6, sp, #8
10056ea2:	020c      	lsls	r4, r1, #8
10056ea4:	4304      	orrs	r4, r0
10056ea6:	2102      	movs	r1, #2
10056ea8:	9807      	ldr	r0, [sp, #28]
10056eaa:	f7fd f927 	bl	100540fc <get_connection_no>
10056eae:	2100      	movs	r1, #0
10056eb0:	783a      	ldrb	r2, [r7, #0]
10056eb2:	7032      	strb	r2, [r6, #0]
10056eb4:	1c49      	adds	r1, r1, #1
10056eb6:	b2c9      	uxtb	r1, r1
10056eb8:	1c76      	adds	r6, r6, #1
10056eba:	1c7f      	adds	r7, r7, #1
10056ebc:	2910      	cmp	r1, #16
10056ebe:	d3f7      	bcc.n	10056eb0 <LL_Start_Encryption+0x38>
10056ec0:	2808      	cmp	r0, #8
10056ec2:	d302      	bcc.n	10056eca <LL_Start_Encryption+0x52>
10056ec4:	2002      	movs	r0, #2
10056ec6:	b00b      	add	sp, #44	; 0x2c
10056ec8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056eca:	35c0      	adds	r5, #192	; 0xc0
10056ecc:	7ba9      	ldrb	r1, [r5, #14]
10056ece:	2908      	cmp	r1, #8
10056ed0:	d201      	bcs.n	10056ed6 <LL_Start_Encryption+0x5e>
10056ed2:	200c      	movs	r0, #12
10056ed4:	e7f7      	b.n	10056ec6 <LL_Start_Encryption+0x4e>
10056ed6:	491d      	ldr	r1, [pc, #116]	; (10056f4c <LL_Start_Encryption+0xd4>)
10056ed8:	2209      	movs	r2, #9
10056eda:	6809      	ldr	r1, [r1, #0]
10056edc:	0212      	lsls	r2, r2, #8
10056ede:	1889      	adds	r1, r1, r2
10056ee0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
10056ee2:	2158      	movs	r1, #88	; 0x58
10056ee4:	4341      	muls	r1, r0
10056ee6:	1851      	adds	r1, r2, r1
10056ee8:	b672      	cpsid	i
10056eea:	794a      	ldrb	r2, [r1, #5]
10056eec:	0792      	lsls	r2, r2, #30
10056eee:	d002      	beq.n	10056ef6 <LL_Start_Encryption+0x7e>
10056ef0:	b662      	cpsie	i
10056ef2:	203a      	movs	r0, #58	; 0x3a
10056ef4:	e7e7      	b.n	10056ec6 <LL_Start_Encryption+0x4e>
10056ef6:	227d      	movs	r2, #125	; 0x7d
10056ef8:	0252      	lsls	r2, r2, #9
10056efa:	816a      	strh	r2, [r5, #10]
10056efc:	73a8      	strb	r0, [r5, #14]
10056efe:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f00:	4813      	ldr	r0, [pc, #76]	; (10056f50 <LL_Start_Encryption+0xd8>)
10056f02:	6010      	str	r0, [r2, #0]
10056f04:	6908      	ldr	r0, [r1, #16]
10056f06:	0502      	lsls	r2, r0, #20
10056f08:	d504      	bpl.n	10056f14 <LL_Start_Encryption+0x9c>
10056f0a:	7948      	ldrb	r0, [r1, #5]
10056f0c:	2201      	movs	r2, #1
10056f0e:	4310      	orrs	r0, r2
10056f10:	7148      	strb	r0, [r1, #5]
10056f12:	e003      	b.n	10056f1c <LL_Start_Encryption+0xa4>
10056f14:	2201      	movs	r2, #1
10056f16:	0312      	lsls	r2, r2, #12
10056f18:	4310      	orrs	r0, r2
10056f1a:	6108      	str	r0, [r1, #16]
10056f1c:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f1e:	9801      	ldr	r0, [sp, #4]
10056f20:	6050      	str	r0, [r2, #4]
10056f22:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f24:	9800      	ldr	r0, [sp, #0]
10056f26:	6090      	str	r0, [r2, #8]
10056f28:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f2a:	9802      	ldr	r0, [sp, #8]
10056f2c:	60d0      	str	r0, [r2, #12]
10056f2e:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f30:	9803      	ldr	r0, [sp, #12]
10056f32:	6110      	str	r0, [r2, #16]
10056f34:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f36:	9804      	ldr	r0, [sp, #16]
10056f38:	6150      	str	r0, [r2, #20]
10056f3a:	6b4a      	ldr	r2, [r1, #52]	; 0x34
10056f3c:	9805      	ldr	r0, [sp, #20]
10056f3e:	6190      	str	r0, [r2, #24]
10056f40:	6b48      	ldr	r0, [r1, #52]	; 0x34
10056f42:	61c4      	str	r4, [r0, #28]
10056f44:	b662      	cpsie	i
10056f46:	2000      	movs	r0, #0
10056f48:	e7bd      	b.n	10056ec6 <LL_Start_Encryption+0x4e>
10056f4a:	0000      	.short	0x0000
10056f4c:	20000d64 	.word	0x20000d64
10056f50:	000a0103 	.word	0x000a0103

10056f54 <le4ByteToInt32>:
10056f54:	7801      	ldrb	r1, [r0, #0]
10056f56:	7842      	ldrb	r2, [r0, #1]
10056f58:	0213      	lsls	r3, r2, #8
10056f5a:	7882      	ldrb	r2, [r0, #2]
10056f5c:	78c0      	ldrb	r0, [r0, #3]
10056f5e:	0412      	lsls	r2, r2, #16
10056f60:	0600      	lsls	r0, r0, #24
10056f62:	4310      	orrs	r0, r2
10056f64:	4318      	orrs	r0, r3
10056f66:	4308      	orrs	r0, r1
10056f68:	4770      	bx	lr
	...

10056f6c <wait_for_prescheduled_slot_cancellation>:
10056f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056f6e:	4e1b      	ldr	r6, [pc, #108]	; (10056fdc <wait_for_prescheduled_slot_cancellation+0x70>)
10056f70:	8831      	ldrh	r1, [r6, #0]
10056f72:	4604      	mov	r4, r0
10056f74:	0709      	lsls	r1, r1, #28
10056f76:	2008      	movs	r0, #8
10056f78:	0f09      	lsrs	r1, r1, #28
10056f7a:	4304      	orrs	r4, r0
10056f7c:	42a1      	cmp	r1, r4
10056f7e:	d12b      	bne.n	10056fd8 <wait_for_prescheduled_slot_cancellation+0x6c>
10056f80:	4d17      	ldr	r5, [pc, #92]	; (10056fe0 <wait_for_prescheduled_slot_cancellation+0x74>)
10056f82:	2100      	movs	r1, #0
10056f84:	6828      	ldr	r0, [r5, #0]
10056f86:	6381      	str	r1, [r0, #56]	; 0x38
10056f88:	14b1      	asrs	r1, r6, #18
10056f8a:	1840      	adds	r0, r0, r1
10056f8c:	2109      	movs	r1, #9
10056f8e:	06c9      	lsls	r1, r1, #27
10056f90:	6f00      	ldr	r0, [r0, #112]	; 0x70
10056f92:	6909      	ldr	r1, [r1, #16]
10056f94:	1a47      	subs	r7, r0, r1
10056f96:	2064      	movs	r0, #100	; 0x64
10056f98:	f000 fae0 	bl	1005755c <machine_time_trans>
10056f9c:	7a71      	ldrb	r1, [r6, #9]
10056f9e:	00c9      	lsls	r1, r1, #3
10056fa0:	1840      	adds	r0, r0, r1
10056fa2:	6829      	ldr	r1, [r5, #0]
10056fa4:	6a89      	ldr	r1, [r1, #40]	; 0x28
10056fa6:	1840      	adds	r0, r0, r1
10056fa8:	1a38      	subs	r0, r7, r0
10056faa:	0200      	lsls	r0, r0, #8
10056fac:	2101      	movs	r1, #1
10056fae:	0a00      	lsrs	r0, r0, #8
10056fb0:	05c9      	lsls	r1, r1, #23
10056fb2:	4288      	cmp	r0, r1
10056fb4:	d202      	bcs.n	10056fbc <wait_for_prescheduled_slot_cancellation+0x50>
10056fb6:	2000      	movs	r0, #0
10056fb8:	f005 fe2e 	bl	1005cc18 <advance_wakeup_timer>
10056fbc:	4909      	ldr	r1, [pc, #36]	; (10056fe4 <wait_for_prescheduled_slot_cancellation+0x78>)
10056fbe:	6828      	ldr	r0, [r5, #0]
10056fc0:	8832      	ldrh	r2, [r6, #0]
10056fc2:	0712      	lsls	r2, r2, #28
10056fc4:	0f12      	lsrs	r2, r2, #28
10056fc6:	42a2      	cmp	r2, r4
10056fc8:	d106      	bne.n	10056fd8 <wait_for_prescheduled_slot_cancellation+0x6c>
10056fca:	6b82      	ldr	r2, [r0, #56]	; 0x38
10056fcc:	428a      	cmp	r2, r1
10056fce:	d203      	bcs.n	10056fd8 <wait_for_prescheduled_slot_cancellation+0x6c>
10056fd0:	6b82      	ldr	r2, [r0, #56]	; 0x38
10056fd2:	1c52      	adds	r2, r2, #1
10056fd4:	6382      	str	r2, [r0, #56]	; 0x38
10056fd6:	e7f3      	b.n	10056fc0 <wait_for_prescheduled_slot_cancellation+0x54>
10056fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056fda:	0000      	.short	0x0000
10056fdc:	200000c0 	.word	0x200000c0
10056fe0:	20000d64 	.word	0x20000d64
10056fe4:	00027100 	.word	0x00027100

10056fe8 <Blue_Set_Radio_Config_Data>:
10056fe8:	b510      	push	{r4, lr}
10056fea:	4806      	ldr	r0, [pc, #24]	; (10057004 <Blue_Set_Radio_Config_Data+0x1c>)
10056fec:	6801      	ldr	r1, [r0, #0]
10056fee:	4806      	ldr	r0, [pc, #24]	; (10057008 <Blue_Set_Radio_Config_Data+0x20>)
10056ff0:	6a40      	ldr	r0, [r0, #36]	; 0x24
10056ff2:	2800      	cmp	r0, #0
10056ff4:	d003      	beq.n	10056ffe <Blue_Set_Radio_Config_Data+0x16>
10056ff6:	2220      	movs	r2, #32
10056ff8:	f7f5 fcc4 	bl	1004c984 <char_copy>
10056ffc:	bd10      	pop	{r4, pc}
10056ffe:	2000      	movs	r0, #0
10057000:	7008      	strb	r0, [r1, #0]
10057002:	bd10      	pop	{r4, pc}
10057004:	20000d64 	.word	0x20000d64
10057008:	200002dc 	.word	0x200002dc

1005700c <LL_Get_Adv_Tx_Power_Level>:
1005700c:	b510      	push	{r4, lr}
1005700e:	4604      	mov	r4, r0
10057010:	4803      	ldr	r0, [pc, #12]	; (10057020 <LL_Get_Adv_Tx_Power_Level+0x14>)
10057012:	7a80      	ldrb	r0, [r0, #10]
10057014:	f000 fa62 	bl	100574dc <convert_power>
10057018:	7020      	strb	r0, [r4, #0]
1005701a:	2000      	movs	r0, #0
1005701c:	bd10      	pop	{r4, pc}
1005701e:	0000      	.short	0x0000
10057020:	20000100 	.word	0x20000100

10057024 <LL_Get_Link_Tx_Power_Level>:
10057024:	b510      	push	{r4, lr}
10057026:	4804      	ldr	r0, [pc, #16]	; (10057038 <LL_Get_Link_Tx_Power_Level+0x14>)
10057028:	460c      	mov	r4, r1
1005702a:	7a80      	ldrb	r0, [r0, #10]
1005702c:	f000 fa56 	bl	100574dc <convert_power>
10057030:	7020      	strb	r0, [r4, #0]
10057032:	2000      	movs	r0, #0
10057034:	bd10      	pop	{r4, pc}
10057036:	0000      	.short	0x0000
10057038:	20000100 	.word	0x20000100

1005703c <LL_Get_Random_data>:
1005703c:	b570      	push	{r4, r5, r6, lr}
1005703e:	4604      	mov	r4, r0
10057040:	2500      	movs	r5, #0
10057042:	f7f5 fc63 	bl	1004c90c <Hal_Get_Random_Number>
10057046:	7020      	strb	r0, [r4, #0]
10057048:	0a00      	lsrs	r0, r0, #8
1005704a:	7060      	strb	r0, [r4, #1]
1005704c:	1ca4      	adds	r4, r4, #2
1005704e:	1c6d      	adds	r5, r5, #1
10057050:	2d04      	cmp	r5, #4
10057052:	dbf6      	blt.n	10057042 <LL_Get_Random_data+0x6>
10057054:	2000      	movs	r0, #0
10057056:	bd70      	pop	{r4, r5, r6, pc}

10057058 <LL_Get_Supported_States>:
10057058:	4a04      	ldr	r2, [pc, #16]	; (1005706c <LL_Get_Supported_States+0x14>)
1005705a:	2100      	movs	r1, #0
1005705c:	5442      	strb	r2, [r0, r1]
1005705e:	1c49      	adds	r1, r1, #1
10057060:	0a12      	lsrs	r2, r2, #8
10057062:	b2c9      	uxtb	r1, r1
10057064:	2908      	cmp	r1, #8
10057066:	d3f9      	bcc.n	1005705c <LL_Get_Supported_States+0x4>
10057068:	4770      	bx	lr
1005706a:	0000      	.short	0x0000
1005706c:	330000ff 	.word	0x330000ff

10057070 <LL_Read_RSSI>:
10057070:	b510      	push	{r4, lr}
10057072:	460a      	mov	r2, r1
10057074:	4604      	mov	r4, r0
10057076:	2103      	movs	r1, #3
10057078:	4610      	mov	r0, r2
1005707a:	f7fd f83f 	bl	100540fc <get_connection_no>
1005707e:	2808      	cmp	r0, #8
10057080:	d20c      	bcs.n	1005709c <LL_Read_RSSI+0x2c>
10057082:	4907      	ldr	r1, [pc, #28]	; (100570a0 <LL_Read_RSSI+0x30>)
10057084:	2209      	movs	r2, #9
10057086:	6809      	ldr	r1, [r1, #0]
10057088:	0212      	lsls	r2, r2, #8
1005708a:	1889      	adds	r1, r1, r2
1005708c:	6b09      	ldr	r1, [r1, #48]	; 0x30
1005708e:	2258      	movs	r2, #88	; 0x58
10057090:	4350      	muls	r0, r2
10057092:	1808      	adds	r0, r1, r0
10057094:	7b80      	ldrb	r0, [r0, #14]
10057096:	7020      	strb	r0, [r4, #0]
10057098:	2000      	movs	r0, #0
1005709a:	bd10      	pop	{r4, pc}
1005709c:	2012      	movs	r0, #18
1005709e:	bd10      	pop	{r4, pc}
100570a0:	20000d64 	.word	0x20000d64

100570a4 <LL_Test_Receiver>:
100570a4:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
100570a6:	4c4a      	ldr	r4, [pc, #296]	; (100571d0 <LL_Test_Receiver+0x12c>)
100570a8:	211f      	movs	r1, #31
100570aa:	6820      	ldr	r0, [r4, #0]
100570ac:	0189      	lsls	r1, r1, #6
100570ae:	4a49      	ldr	r2, [pc, #292]	; (100571d4 <LL_Test_Receiver+0x130>)
100570b0:	1841      	adds	r1, r0, r1
100570b2:	7909      	ldrb	r1, [r1, #4]
100570b4:	8812      	ldrh	r2, [r2, #0]
100570b6:	0712      	lsls	r2, r2, #28
100570b8:	d401      	bmi.n	100570be <LL_Test_Receiver+0x1a>
100570ba:	2900      	cmp	r1, #0
100570bc:	d001      	beq.n	100570c2 <LL_Test_Receiver+0x1e>
100570be:	200c      	movs	r0, #12
100570c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100570c2:	2511      	movs	r5, #17
100570c4:	01ed      	lsls	r5, r5, #7
100570c6:	1940      	adds	r0, r0, r5
100570c8:	6c40      	ldr	r0, [r0, #68]	; 0x44
100570ca:	2742      	movs	r7, #66	; 0x42
100570cc:	4e42      	ldr	r6, [pc, #264]	; (100571d8 <LL_Test_Receiver+0x134>)
100570ce:	8000      	strh	r0, [r0, #0]
100570d0:	f7ea fd5c 	bl	10041b8c <data_length_extension_csr_ucfg>
100570d4:	2801      	cmp	r0, #1
100570d6:	d045      	beq.n	10057164 <LL_Test_Receiver+0xc0>
100570d8:	2009      	movs	r0, #9
100570da:	6821      	ldr	r1, [r4, #0]
100570dc:	0200      	lsls	r0, r0, #8
100570de:	1808      	adds	r0, r1, r0
100570e0:	6d00      	ldr	r0, [r0, #80]	; 0x50
100570e2:	1949      	adds	r1, r1, r5
100570e4:	6c49      	ldr	r1, [r1, #68]	; 0x44
100570e6:	3028      	adds	r0, #40	; 0x28
100570e8:	8048      	strh	r0, [r1, #2]
100570ea:	2000      	movs	r0, #0
100570ec:	6821      	ldr	r1, [r4, #0]
100570ee:	1949      	adds	r1, r1, r5
100570f0:	6c4a      	ldr	r2, [r1, #68]	; 0x44
100570f2:	1dc1      	adds	r1, r0, #7
100570f4:	5457      	strb	r7, [r2, r1]
100570f6:	6821      	ldr	r1, [r4, #0]
100570f8:	1949      	adds	r1, r1, r5
100570fa:	6c49      	ldr	r1, [r1, #68]	; 0x44
100570fc:	1d02      	adds	r2, r0, #4
100570fe:	548e      	strb	r6, [r1, r2]
10057100:	1c40      	adds	r0, r0, #1
10057102:	0a3f      	lsrs	r7, r7, #8
10057104:	0a36      	lsrs	r6, r6, #8
10057106:	b2c0      	uxtb	r0, r0
10057108:	2803      	cmp	r0, #3
1005710a:	d3ef      	bcc.n	100570ec <LL_Test_Receiver+0x48>
1005710c:	6820      	ldr	r0, [r4, #0]
1005710e:	2101      	movs	r1, #1
10057110:	1940      	adds	r0, r0, r5
10057112:	6c42      	ldr	r2, [r0, #68]	; 0x44
10057114:	7291      	strb	r1, [r2, #10]
10057116:	6c40      	ldr	r0, [r0, #68]	; 0x44
10057118:	2103      	movs	r1, #3
1005711a:	72c1      	strb	r1, [r0, #11]
1005711c:	4e2d      	ldr	r6, [pc, #180]	; (100571d4 <LL_Test_Receiver+0x130>)
1005711e:	2000      	movs	r0, #0
10057120:	75b0      	strb	r0, [r6, #22]
10057122:	4f2c      	ldr	r7, [pc, #176]	; (100571d4 <LL_Test_Receiver+0x130>)
10057124:	21ff      	movs	r1, #255	; 0xff
10057126:	3720      	adds	r7, #32
10057128:	19c2      	adds	r2, r0, r7
1005712a:	7351      	strb	r1, [r2, #13]
1005712c:	1c40      	adds	r0, r0, #1
1005712e:	b2c0      	uxtb	r0, r0
10057130:	2804      	cmp	r0, #4
10057132:	d3f9      	bcc.n	10057128 <LL_Test_Receiver+0x84>
10057134:	201f      	movs	r0, #31
10057136:	7478      	strb	r0, [r7, #17]
10057138:	9800      	ldr	r0, [sp, #0]
1005713a:	f000 f9bd 	bl	100574b8 <chan_remap>
1005713e:	75f0      	strb	r0, [r6, #23]
10057140:	6820      	ldr	r0, [r4, #0]
10057142:	1940      	adds	r0, r0, r5
10057144:	6c41      	ldr	r1, [r0, #68]	; 0x44
10057146:	83b1      	strh	r1, [r6, #28]
10057148:	6c40      	ldr	r0, [r0, #68]	; 0x44
1005714a:	83f0      	strh	r0, [r6, #30]
1005714c:	4823      	ldr	r0, [pc, #140]	; (100571dc <LL_Test_Receiver+0x138>)
1005714e:	6270      	str	r0, [r6, #36]	; 0x24
10057150:	4823      	ldr	r0, [pc, #140]	; (100571e0 <LL_Test_Receiver+0x13c>)
10057152:	62b0      	str	r0, [r6, #40]	; 0x28
10057154:	2500      	movs	r5, #0
10057156:	733d      	strb	r5, [r7, #12]
10057158:	70fd      	strb	r5, [r7, #3]
1005715a:	f7ea fd17 	bl	10041b8c <data_length_extension_csr_ucfg>
1005715e:	2801      	cmp	r0, #1
10057160:	d009      	beq.n	10057176 <LL_Test_Receiver+0xd2>
10057162:	e00a      	b.n	1005717a <LL_Test_Receiver+0xd6>
10057164:	2109      	movs	r1, #9
10057166:	6820      	ldr	r0, [r4, #0]
10057168:	0209      	lsls	r1, r1, #8
1005716a:	1841      	adds	r1, r0, r1
1005716c:	1940      	adds	r0, r0, r5
1005716e:	6c40      	ldr	r0, [r0, #68]	; 0x44
10057170:	6c09      	ldr	r1, [r1, #64]	; 0x40
10057172:	8041      	strh	r1, [r0, #2]
10057174:	e7b9      	b.n	100570ea <LL_Test_Receiver+0x46>
10057176:	2080      	movs	r0, #128	; 0x80
10057178:	70b8      	strb	r0, [r7, #2]
1005717a:	2008      	movs	r0, #8
1005717c:	8030      	strh	r0, [r6, #0]
1005717e:	2081      	movs	r0, #129	; 0x81
10057180:	71b0      	strb	r0, [r6, #6]
10057182:	7230      	strb	r0, [r6, #8]
10057184:	7170      	strb	r0, [r6, #5]
10057186:	71f0      	strb	r0, [r6, #7]
10057188:	2609      	movs	r6, #9
1005718a:	6820      	ldr	r0, [r4, #0]
1005718c:	0236      	lsls	r6, r6, #8
1005718e:	1980      	adds	r0, r0, r6
10057190:	6b00      	ldr	r0, [r0, #48]	; 0x30
10057192:	8105      	strh	r5, [r0, #8]
10057194:	20ff      	movs	r0, #255	; 0xff
10057196:	30f5      	adds	r0, #245	; 0xf5
10057198:	f004 fdc0 	bl	1005bd1c <Delay_With_NOP_Cycles>
1005719c:	b672      	cpsid	i
1005719e:	2109      	movs	r1, #9
100571a0:	06c9      	lsls	r1, r1, #27
100571a2:	6908      	ldr	r0, [r1, #16]
100571a4:	4a0f      	ldr	r2, [pc, #60]	; (100571e4 <LL_Test_Receiver+0x140>)
100571a6:	2301      	movs	r3, #1
100571a8:	1880      	adds	r0, r0, r2
100571aa:	6822      	ldr	r2, [r4, #0]
100571ac:	0200      	lsls	r0, r0, #8
100571ae:	02db      	lsls	r3, r3, #11
100571b0:	0a00      	lsrs	r0, r0, #8
100571b2:	18d3      	adds	r3, r2, r3
100571b4:	6718      	str	r0, [r3, #112]	; 0x70
100571b6:	2301      	movs	r3, #1
100571b8:	061b      	lsls	r3, r3, #24
100571ba:	4318      	orrs	r0, r3
100571bc:	6048      	str	r0, [r1, #4]
100571be:	1990      	adds	r0, r2, r6
100571c0:	6b01      	ldr	r1, [r0, #48]	; 0x30
100571c2:	714d      	strb	r5, [r1, #5]
100571c4:	6b00      	ldr	r0, [r0, #48]	; 0x30
100571c6:	2107      	movs	r1, #7
100571c8:	7081      	strb	r1, [r0, #2]
100571ca:	b662      	cpsie	i
100571cc:	2000      	movs	r0, #0
100571ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100571d0:	20000d64 	.word	0x20000d64
100571d4:	200000c0 	.word	0x200000c0
100571d8:	00303a98 	.word	0x00303a98
100571dc:	71764129 	.word	0x71764129
100571e0:	00555555 	.word	0x00555555
100571e4:	00001388 	.word	0x00001388

100571e8 <LL_Test_Stop>:
100571e8:	b510      	push	{r4, lr}
100571ea:	4914      	ldr	r1, [pc, #80]	; (1005723c <LL_Test_Stop+0x54>)
100571ec:	880a      	ldrh	r2, [r1, #0]
100571ee:	0712      	lsls	r2, r2, #28
100571f0:	d50d      	bpl.n	1005720e <LL_Test_Stop+0x26>
100571f2:	4a13      	ldr	r2, [pc, #76]	; (10057240 <LL_Test_Stop+0x58>)
100571f4:	6813      	ldr	r3, [r2, #0]
100571f6:	2209      	movs	r2, #9
100571f8:	0212      	lsls	r2, r2, #8
100571fa:	189a      	adds	r2, r3, r2
100571fc:	6b13      	ldr	r3, [r2, #48]	; 0x30
100571fe:	789b      	ldrb	r3, [r3, #2]
10057200:	075c      	lsls	r4, r3, #29
10057202:	0f64      	lsrs	r4, r4, #29
10057204:	2c06      	cmp	r4, #6
10057206:	d004      	beq.n	10057212 <LL_Test_Stop+0x2a>
10057208:	43db      	mvns	r3, r3
1005720a:	075b      	lsls	r3, r3, #29
1005720c:	d001      	beq.n	10057212 <LL_Test_Stop+0x2a>
1005720e:	200c      	movs	r0, #12
10057210:	bd10      	pop	{r4, pc}
10057212:	b672      	cpsid	i
10057214:	2300      	movs	r3, #0
10057216:	800b      	strh	r3, [r1, #0]
10057218:	2109      	movs	r1, #9
1005721a:	06c9      	lsls	r1, r1, #27
1005721c:	604b      	str	r3, [r1, #4]
1005721e:	6b12      	ldr	r2, [r2, #48]	; 0x30
10057220:	8911      	ldrh	r1, [r2, #8]
10057222:	b662      	cpsie	i
10057224:	7894      	ldrb	r4, [r2, #2]
10057226:	43e4      	mvns	r4, r4
10057228:	0764      	lsls	r4, r4, #29
1005722a:	d000      	beq.n	1005722e <LL_Test_Stop+0x46>
1005722c:	2100      	movs	r1, #0
1005722e:	7093      	strb	r3, [r2, #2]
10057230:	7001      	strb	r1, [r0, #0]
10057232:	0a09      	lsrs	r1, r1, #8
10057234:	7041      	strb	r1, [r0, #1]
10057236:	2000      	movs	r0, #0
10057238:	bd10      	pop	{r4, pc}
1005723a:	0000      	.short	0x0000
1005723c:	200000c0 	.word	0x200000c0
10057240:	20000d64 	.word	0x20000d64

10057244 <LL_Test_Transmitter>:
10057244:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10057246:	460d      	mov	r5, r1
10057248:	4991      	ldr	r1, [pc, #580]	; (10057490 <LL_Test_Transmitter+0x24c>)
1005724a:	221f      	movs	r2, #31
1005724c:	6808      	ldr	r0, [r1, #0]
1005724e:	0192      	lsls	r2, r2, #6
10057250:	4b90      	ldr	r3, [pc, #576]	; (10057494 <LL_Test_Transmitter+0x250>)
10057252:	1882      	adds	r2, r0, r2
10057254:	7912      	ldrb	r2, [r2, #4]
10057256:	881b      	ldrh	r3, [r3, #0]
10057258:	b084      	sub	sp, #16
1005725a:	071b      	lsls	r3, r3, #28
1005725c:	d401      	bmi.n	10057262 <LL_Test_Transmitter+0x1e>
1005725e:	2a00      	cmp	r2, #0
10057260:	d002      	beq.n	10057268 <LL_Test_Transmitter+0x24>
10057262:	200c      	movs	r0, #12
10057264:	b007      	add	sp, #28
10057266:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057268:	2111      	movs	r1, #17
1005726a:	4a8d      	ldr	r2, [pc, #564]	; (100574a0 <LL_Test_Transmitter+0x25c>)
1005726c:	01c9      	lsls	r1, r1, #7
1005726e:	1840      	adds	r0, r0, r1
10057270:	9200      	str	r2, [sp, #0]
10057272:	6c40      	ldr	r0, [r0, #68]	; 0x44
10057274:	2742      	movs	r7, #66	; 0x42
10057276:	4e88      	ldr	r6, [pc, #544]	; (10057498 <LL_Test_Transmitter+0x254>)
10057278:	4c88      	ldr	r4, [pc, #544]	; (1005749c <LL_Test_Transmitter+0x258>)
1005727a:	8000      	strh	r0, [r0, #0]
1005727c:	f7ea fc86 	bl	10041b8c <data_length_extension_csr_ucfg>
10057280:	2801      	cmp	r0, #1
10057282:	d037      	beq.n	100572f4 <LL_Test_Transmitter+0xb0>
10057284:	4882      	ldr	r0, [pc, #520]	; (10057490 <LL_Test_Transmitter+0x24c>)
10057286:	2211      	movs	r2, #17
10057288:	6801      	ldr	r1, [r0, #0]
1005728a:	2009      	movs	r0, #9
1005728c:	0200      	lsls	r0, r0, #8
1005728e:	1808      	adds	r0, r1, r0
10057290:	01d2      	lsls	r2, r2, #7
10057292:	6d00      	ldr	r0, [r0, #80]	; 0x50
10057294:	1889      	adds	r1, r1, r2
10057296:	6c49      	ldr	r1, [r1, #68]	; 0x44
10057298:	3028      	adds	r0, #40	; 0x28
1005729a:	8048      	strh	r0, [r1, #2]
1005729c:	2000      	movs	r0, #0
1005729e:	497c      	ldr	r1, [pc, #496]	; (10057490 <LL_Test_Transmitter+0x24c>)
100572a0:	680a      	ldr	r2, [r1, #0]
100572a2:	2111      	movs	r1, #17
100572a4:	01c9      	lsls	r1, r1, #7
100572a6:	1852      	adds	r2, r2, r1
100572a8:	6c53      	ldr	r3, [r2, #68]	; 0x44
100572aa:	1dc2      	adds	r2, r0, #7
100572ac:	549f      	strb	r7, [r3, r2]
100572ae:	4a78      	ldr	r2, [pc, #480]	; (10057490 <LL_Test_Transmitter+0x24c>)
100572b0:	6812      	ldr	r2, [r2, #0]
100572b2:	1851      	adds	r1, r2, r1
100572b4:	6c49      	ldr	r1, [r1, #68]	; 0x44
100572b6:	1d02      	adds	r2, r0, #4
100572b8:	548e      	strb	r6, [r1, r2]
100572ba:	1c40      	adds	r0, r0, #1
100572bc:	0a3f      	lsrs	r7, r7, #8
100572be:	0a36      	lsrs	r6, r6, #8
100572c0:	b2c0      	uxtb	r0, r0
100572c2:	2803      	cmp	r0, #3
100572c4:	d3eb      	bcc.n	1005729e <LL_Test_Transmitter+0x5a>
100572c6:	f7ea fc61 	bl	10041b8c <data_length_extension_csr_ucfg>
100572ca:	2801      	cmp	r0, #1
100572cc:	d02a      	beq.n	10057324 <LL_Test_Transmitter+0xe0>
100572ce:	2d25      	cmp	r5, #37	; 0x25
100572d0:	d900      	bls.n	100572d4 <LL_Test_Transmitter+0x90>
100572d2:	2525      	movs	r5, #37	; 0x25
100572d4:	486e      	ldr	r0, [pc, #440]	; (10057490 <LL_Test_Transmitter+0x24c>)
100572d6:	9906      	ldr	r1, [sp, #24]
100572d8:	6802      	ldr	r2, [r0, #0]
100572da:	2009      	movs	r0, #9
100572dc:	0200      	lsls	r0, r0, #8
100572de:	1810      	adds	r0, r2, r0
100572e0:	6d02      	ldr	r2, [r0, #80]	; 0x50
100572e2:	3220      	adds	r2, #32
100572e4:	7211      	strb	r1, [r2, #8]
100572e6:	6d01      	ldr	r1, [r0, #80]	; 0x50
100572e8:	3120      	adds	r1, #32
100572ea:	724d      	strb	r5, [r1, #9]
100572ec:	6d01      	ldr	r1, [r0, #80]	; 0x50
100572ee:	312a      	adds	r1, #42	; 0x2a
100572f0:	2200      	movs	r2, #0
100572f2:	e062      	b.n	100573ba <LL_Test_Transmitter+0x176>
100572f4:	496b      	ldr	r1, [pc, #428]	; (100574a4 <LL_Test_Transmitter+0x260>)
100572f6:	00e8      	lsls	r0, r5, #3
100572f8:	1840      	adds	r0, r0, r1
100572fa:	4968      	ldr	r1, [pc, #416]	; (1005749c <LL_Test_Transmitter+0x258>)
100572fc:	3172      	adds	r1, #114	; 0x72
100572fe:	f7e8 ffb3 	bl	10040268 <__aeabi_uidivmod>
10057302:	0201      	lsls	r1, r0, #8
10057304:	4862      	ldr	r0, [pc, #392]	; (10057490 <LL_Test_Transmitter+0x24c>)
10057306:	2201      	movs	r2, #1
10057308:	6800      	ldr	r0, [r0, #0]
1005730a:	02d2      	lsls	r2, r2, #11
1005730c:	1882      	adds	r2, r0, r2
1005730e:	66d1      	str	r1, [r2, #108]	; 0x6c
10057310:	2109      	movs	r1, #9
10057312:	0209      	lsls	r1, r1, #8
10057314:	2211      	movs	r2, #17
10057316:	1841      	adds	r1, r0, r1
10057318:	01d2      	lsls	r2, r2, #7
1005731a:	1880      	adds	r0, r0, r2
1005731c:	6c40      	ldr	r0, [r0, #68]	; 0x44
1005731e:	8f89      	ldrh	r1, [r1, #60]	; 0x3c
10057320:	8041      	strh	r1, [r0, #2]
10057322:	e7bb      	b.n	1005729c <LL_Test_Transmitter+0x58>
10057324:	2109      	movs	r1, #9
10057326:	2200      	movs	r2, #0
10057328:	0209      	lsls	r1, r1, #8
1005732a:	4859      	ldr	r0, [pc, #356]	; (10057490 <LL_Test_Transmitter+0x24c>)
1005732c:	23ff      	movs	r3, #255	; 0xff
1005732e:	6806      	ldr	r6, [r0, #0]
10057330:	1876      	adds	r6, r6, r1
10057332:	6bf6      	ldr	r6, [r6, #60]	; 0x3c
10057334:	54b3      	strb	r3, [r6, r2]
10057336:	1c52      	adds	r2, r2, #1
10057338:	b2d2      	uxtb	r2, r2
1005733a:	2aff      	cmp	r2, #255	; 0xff
1005733c:	d3f7      	bcc.n	1005732e <LL_Test_Transmitter+0xea>
1005733e:	6803      	ldr	r3, [r0, #0]
10057340:	9a06      	ldr	r2, [sp, #24]
10057342:	185b      	adds	r3, r3, r1
10057344:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
10057346:	701a      	strb	r2, [r3, #0]
10057348:	6802      	ldr	r2, [r0, #0]
1005734a:	1852      	adds	r2, r2, r1
1005734c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
1005734e:	7055      	strb	r5, [r2, #1]
10057350:	6800      	ldr	r0, [r0, #0]
10057352:	1840      	adds	r0, r0, r1
10057354:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
10057356:	1c89      	adds	r1, r1, #2
10057358:	e7ca      	b.n	100572f0 <LL_Test_Transmitter+0xac>
1005735a:	9e06      	ldr	r6, [sp, #24]
1005735c:	2000      	movs	r0, #0
1005735e:	0033      	movs	r3, r6
10057360:	f7f5 f9a3 	bl	1004c6aa <__ARM_common_switch8>
10057364:	16140508 	.word	0x16140508
10057368:	24272218 	.word	0x24272218
1005736c:	2726      	.short	0x2726
1005736e:	4620      	mov	r0, r4
10057370:	2300      	movs	r3, #0
10057372:	0727      	lsls	r7, r4, #28
10057374:	0926      	lsrs	r6, r4, #4
10057376:	0dff      	lsrs	r7, r7, #23
10057378:	407e      	eors	r6, r7
1005737a:	27f0      	movs	r7, #240	; 0xf0
1005737c:	403c      	ands	r4, r7
1005737e:	0064      	lsls	r4, r4, #1
10057380:	1c5b      	adds	r3, r3, #1
10057382:	4074      	eors	r4, r6
10057384:	b2db      	uxtb	r3, r3
10057386:	2b02      	cmp	r3, #2
10057388:	d3f3      	bcc.n	10057372 <LL_Test_Transmitter+0x12e>
1005738a:	e012      	b.n	100573b2 <LL_Test_Transmitter+0x16e>
1005738c:	200f      	movs	r0, #15
1005738e:	e010      	b.n	100573b2 <LL_Test_Transmitter+0x16e>
10057390:	2055      	movs	r0, #85	; 0x55
10057392:	e00e      	b.n	100573b2 <LL_Test_Transmitter+0x16e>
10057394:	9800      	ldr	r0, [sp, #0]
10057396:	0606      	lsls	r6, r0, #24
10057398:	0a03      	lsrs	r3, r0, #8
1005739a:	0c76      	lsrs	r6, r6, #17
1005739c:	4073      	eors	r3, r6
1005739e:	05c6      	lsls	r6, r0, #23
100573a0:	0c76      	lsrs	r6, r6, #17
100573a2:	4073      	eors	r3, r6
100573a4:	9300      	str	r3, [sp, #0]
100573a6:	e004      	b.n	100573b2 <LL_Test_Transmitter+0x16e>
100573a8:	20ff      	movs	r0, #255	; 0xff
100573aa:	e002      	b.n	100573b2 <LL_Test_Transmitter+0x16e>
100573ac:	20f0      	movs	r0, #240	; 0xf0
100573ae:	e000      	b.n	100573b2 <LL_Test_Transmitter+0x16e>
100573b0:	20aa      	movs	r0, #170	; 0xaa
100573b2:	1c52      	adds	r2, r2, #1
100573b4:	7008      	strb	r0, [r1, #0]
100573b6:	b2d2      	uxtb	r2, r2
100573b8:	1c49      	adds	r1, r1, #1
100573ba:	42aa      	cmp	r2, r5
100573bc:	d3cd      	bcc.n	1005735a <LL_Test_Transmitter+0x116>
100573be:	4d34      	ldr	r5, [pc, #208]	; (10057490 <LL_Test_Transmitter+0x24c>)
100573c0:	2711      	movs	r7, #17
100573c2:	6828      	ldr	r0, [r5, #0]
100573c4:	2103      	movs	r1, #3
100573c6:	01ff      	lsls	r7, r7, #7
100573c8:	19c0      	adds	r0, r0, r7
100573ca:	6c42      	ldr	r2, [r0, #68]	; 0x44
100573cc:	7291      	strb	r1, [r2, #10]
100573ce:	6c40      	ldr	r0, [r0, #68]	; 0x44
100573d0:	72c1      	strb	r1, [r0, #11]
100573d2:	4c30      	ldr	r4, [pc, #192]	; (10057494 <LL_Test_Transmitter+0x250>)
100573d4:	2080      	movs	r0, #128	; 0x80
100573d6:	75a0      	strb	r0, [r4, #22]
100573d8:	9804      	ldr	r0, [sp, #16]
100573da:	f000 f86d 	bl	100574b8 <chan_remap>
100573de:	75e0      	strb	r0, [r4, #23]
100573e0:	4e2c      	ldr	r6, [pc, #176]	; (10057494 <LL_Test_Transmitter+0x250>)
100573e2:	2000      	movs	r0, #0
100573e4:	21ff      	movs	r1, #255	; 0xff
100573e6:	3620      	adds	r6, #32
100573e8:	1982      	adds	r2, r0, r6
100573ea:	7351      	strb	r1, [r2, #13]
100573ec:	1c40      	adds	r0, r0, #1
100573ee:	b2c0      	uxtb	r0, r0
100573f0:	2804      	cmp	r0, #4
100573f2:	d3f9      	bcc.n	100573e8 <LL_Test_Transmitter+0x1a4>
100573f4:	201f      	movs	r0, #31
100573f6:	7470      	strb	r0, [r6, #17]
100573f8:	6828      	ldr	r0, [r5, #0]
100573fa:	19c0      	adds	r0, r0, r7
100573fc:	6c41      	ldr	r1, [r0, #68]	; 0x44
100573fe:	83a1      	strh	r1, [r4, #28]
10057400:	6c40      	ldr	r0, [r0, #68]	; 0x44
10057402:	83e0      	strh	r0, [r4, #30]
10057404:	4828      	ldr	r0, [pc, #160]	; (100574a8 <LL_Test_Transmitter+0x264>)
10057406:	6260      	str	r0, [r4, #36]	; 0x24
10057408:	4828      	ldr	r0, [pc, #160]	; (100574ac <LL_Test_Transmitter+0x268>)
1005740a:	62a0      	str	r0, [r4, #40]	; 0x28
1005740c:	2700      	movs	r7, #0
1005740e:	7337      	strb	r7, [r6, #12]
10057410:	70f7      	strb	r7, [r6, #3]
10057412:	f7ea fbbb 	bl	10041b8c <data_length_extension_csr_ucfg>
10057416:	2801      	cmp	r0, #1
10057418:	d101      	bne.n	1005741e <LL_Test_Transmitter+0x1da>
1005741a:	2080      	movs	r0, #128	; 0x80
1005741c:	70b0      	strb	r0, [r6, #2]
1005741e:	2008      	movs	r0, #8
10057420:	8020      	strh	r0, [r4, #0]
10057422:	2081      	movs	r0, #129	; 0x81
10057424:	71a0      	strb	r0, [r4, #6]
10057426:	7220      	strb	r0, [r4, #8]
10057428:	2085      	movs	r0, #133	; 0x85
1005742a:	7160      	strb	r0, [r4, #5]
1005742c:	71e0      	strb	r0, [r4, #7]
1005742e:	2609      	movs	r6, #9
10057430:	6828      	ldr	r0, [r5, #0]
10057432:	0236      	lsls	r6, r6, #8
10057434:	1980      	adds	r0, r0, r6
10057436:	6b00      	ldr	r0, [r0, #48]	; 0x30
10057438:	8107      	strh	r7, [r0, #8]
1005743a:	481d      	ldr	r0, [pc, #116]	; (100574b0 <LL_Test_Transmitter+0x26c>)
1005743c:	9001      	str	r0, [sp, #4]
1005743e:	2023      	movs	r0, #35	; 0x23
10057440:	9002      	str	r0, [sp, #8]
10057442:	f000 f86b 	bl	1005751c <wait_for_RadioConfig_ready>
10057446:	a801      	add	r0, sp, #4
10057448:	2101      	movs	r1, #1
1005744a:	b280      	uxth	r0, r0
1005744c:	0409      	lsls	r1, r1, #16
1005744e:	1840      	adds	r0, r0, r1
10057450:	04f4      	lsls	r4, r6, #19
10057452:	60e0      	str	r0, [r4, #12]
10057454:	f000 f862 	bl	1005751c <wait_for_RadioConfig_ready>
10057458:	20ff      	movs	r0, #255	; 0xff
1005745a:	30f5      	adds	r0, #245	; 0xf5
1005745c:	f004 fc5e 	bl	1005bd1c <Delay_With_NOP_Cycles>
10057460:	b672      	cpsid	i
10057462:	6920      	ldr	r0, [r4, #16]
10057464:	4913      	ldr	r1, [pc, #76]	; (100574b4 <LL_Test_Transmitter+0x270>)
10057466:	682a      	ldr	r2, [r5, #0]
10057468:	1840      	adds	r0, r0, r1
1005746a:	2101      	movs	r1, #1
1005746c:	0200      	lsls	r0, r0, #8
1005746e:	02c9      	lsls	r1, r1, #11
10057470:	0a00      	lsrs	r0, r0, #8
10057472:	1851      	adds	r1, r2, r1
10057474:	6708      	str	r0, [r1, #112]	; 0x70
10057476:	2101      	movs	r1, #1
10057478:	0609      	lsls	r1, r1, #24
1005747a:	4308      	orrs	r0, r1
1005747c:	6060      	str	r0, [r4, #4]
1005747e:	1990      	adds	r0, r2, r6
10057480:	6b01      	ldr	r1, [r0, #48]	; 0x30
10057482:	714f      	strb	r7, [r1, #5]
10057484:	6b00      	ldr	r0, [r0, #48]	; 0x30
10057486:	2106      	movs	r1, #6
10057488:	7081      	strb	r1, [r0, #2]
1005748a:	b662      	cpsie	i
1005748c:	2000      	movs	r0, #0
1005748e:	e6e9      	b.n	10057264 <LL_Test_Transmitter+0x20>
10057490:	20000d64 	.word	0x20000d64
10057494:	200000c0 	.word	0x200000c0
10057498:	00303a98 	.word	0x00303a98
1005749c:	000001ff 	.word	0x000001ff
100574a0:	00007fff 	.word	0x00007fff
100574a4:	000003b9 	.word	0x000003b9
100574a8:	71764129 	.word	0x71764129
100574ac:	00555555 	.word	0x00555555
100574b0:	02012302 	.word	0x02012302
100574b4:	00001388 	.word	0x00001388

100574b8 <chan_remap>:
100574b8:	2800      	cmp	r0, #0
100574ba:	d005      	beq.n	100574c8 <chan_remap+0x10>
100574bc:	280c      	cmp	r0, #12
100574be:	d005      	beq.n	100574cc <chan_remap+0x14>
100574c0:	280d      	cmp	r0, #13
100574c2:	d205      	bcs.n	100574d0 <chan_remap+0x18>
100574c4:	1e40      	subs	r0, r0, #1
100574c6:	e006      	b.n	100574d6 <chan_remap+0x1e>
100574c8:	2025      	movs	r0, #37	; 0x25
100574ca:	4770      	bx	lr
100574cc:	2026      	movs	r0, #38	; 0x26
100574ce:	4770      	bx	lr
100574d0:	2827      	cmp	r0, #39	; 0x27
100574d2:	d2fc      	bcs.n	100574ce <chan_remap+0x16>
100574d4:	1e80      	subs	r0, r0, #2
100574d6:	b2c0      	uxtb	r0, r0
100574d8:	4770      	bx	lr
	...

100574dc <convert_power>:
100574dc:	0641      	lsls	r1, r0, #25
100574de:	2203      	movs	r2, #3
100574e0:	0fc9      	lsrs	r1, r1, #31
100574e2:	0212      	lsls	r2, r2, #8
100574e4:	4351      	muls	r1, r2
100574e6:	0680      	lsls	r0, r0, #26
100574e8:	4a04      	ldr	r2, [pc, #16]	; (100574fc <convert_power+0x20>)
100574ea:	0f40      	lsrs	r0, r0, #29
100574ec:	4350      	muls	r0, r2
100574ee:	1808      	adds	r0, r1, r0
100574f0:	2123      	movs	r1, #35	; 0x23
100574f2:	01c9      	lsls	r1, r1, #7
100574f4:	1a40      	subs	r0, r0, r1
100574f6:	0400      	lsls	r0, r0, #16
100574f8:	0e00      	lsrs	r0, r0, #24
100574fa:	4770      	bx	lr
100574fc:	00000349 	.word	0x00000349

10057500 <modulo_37>:
10057500:	4905      	ldr	r1, [pc, #20]	; (10057518 <modulo_37+0x18>)
10057502:	2225      	movs	r2, #37	; 0x25
10057504:	4341      	muls	r1, r0
10057506:	0c09      	lsrs	r1, r1, #16
10057508:	4351      	muls	r1, r2
1005750a:	1a40      	subs	r0, r0, r1
1005750c:	b280      	uxth	r0, r0
1005750e:	2825      	cmp	r0, #37	; 0x25
10057510:	d300      	bcc.n	10057514 <modulo_37+0x14>
10057512:	3825      	subs	r0, #37	; 0x25
10057514:	b2c0      	uxtb	r0, r0
10057516:	4770      	bx	lr
10057518:	000006eb 	.word	0x000006eb

1005751c <wait_for_RadioConfig_ready>:
1005751c:	b508      	push	{r3, lr}
1005751e:	2064      	movs	r0, #100	; 0x64
10057520:	4669      	mov	r1, sp
10057522:	7008      	strb	r0, [r1, #0]
10057524:	2109      	movs	r1, #9
10057526:	06c9      	lsls	r1, r1, #27
10057528:	466a      	mov	r2, sp
1005752a:	7810      	ldrb	r0, [r2, #0]
1005752c:	1e40      	subs	r0, r0, #1
1005752e:	7010      	strb	r0, [r2, #0]
10057530:	68c8      	ldr	r0, [r1, #12]
10057532:	03c0      	lsls	r0, r0, #15
10057534:	d502      	bpl.n	1005753c <wait_for_RadioConfig_ready+0x20>
10057536:	7810      	ldrb	r0, [r2, #0]
10057538:	2800      	cmp	r0, #0
1005753a:	d1f5      	bne.n	10057528 <wait_for_RadioConfig_ready+0xc>
1005753c:	7810      	ldrb	r0, [r2, #0]
1005753e:	bd08      	pop	{r3, pc}

10057540 <WindowWiden1>:
10057540:	0889      	lsrs	r1, r1, #2
10057542:	4341      	muls	r1, r0
10057544:	0a88      	lsrs	r0, r1, #10
10057546:	1c40      	adds	r0, r0, #1
10057548:	4770      	bx	lr

1005754a <WindowWiden2>:
1005754a:	4341      	muls	r1, r0
1005754c:	0a08      	lsrs	r0, r1, #8
1005754e:	2129      	movs	r1, #41	; 0x29
10057550:	0109      	lsls	r1, r1, #4
10057552:	4348      	muls	r0, r1
10057554:	0ac0      	lsrs	r0, r0, #11
10057556:	1c40      	adds	r0, r0, #1
10057558:	4770      	bx	lr
	...

1005755c <machine_time_trans>:
1005755c:	4906      	ldr	r1, [pc, #24]	; (10057578 <machine_time_trans+0x1c>)
1005755e:	0bc2      	lsrs	r2, r0, #15
10057560:	6809      	ldr	r1, [r1, #0]
10057562:	0440      	lsls	r0, r0, #17
10057564:	6a09      	ldr	r1, [r1, #32]
10057566:	0c40      	lsrs	r0, r0, #17
10057568:	09cb      	lsrs	r3, r1, #7
1005756a:	4358      	muls	r0, r3
1005756c:	4351      	muls	r1, r2
1005756e:	0a00      	lsrs	r0, r0, #8
10057570:	1808      	adds	r0, r1, r0
10057572:	3020      	adds	r0, #32
10057574:	0980      	lsrs	r0, r0, #6
10057576:	4770      	bx	lr
10057578:	20000d64 	.word	0x20000d64

1005757c <set_freq>:
1005757c:	b570      	push	{r4, r5, r6, lr}
1005757e:	4a1a      	ldr	r2, [pc, #104]	; (100575e8 <set_freq+0x6c>)
10057580:	4c1a      	ldr	r4, [pc, #104]	; (100575ec <set_freq+0x70>)
10057582:	7bd3      	ldrb	r3, [r2, #15]
10057584:	6822      	ldr	r2, [r4, #0]
10057586:	2b00      	cmp	r3, #0
10057588:	d011      	beq.n	100575ae <set_freq+0x32>
1005758a:	4e1a      	ldr	r6, [pc, #104]	; (100575f4 <set_freq+0x78>)
1005758c:	4b18      	ldr	r3, [pc, #96]	; (100575f0 <set_freq+0x74>)
1005758e:	0980      	lsrs	r0, r0, #6
10057590:	b2cd      	uxtb	r5, r1
10057592:	4358      	muls	r0, r3
10057594:	4375      	muls	r5, r6
10057596:	0a0b      	lsrs	r3, r1, #8
10057598:	0a2d      	lsrs	r5, r5, #8
1005759a:	4373      	muls	r3, r6
1005759c:	3510      	adds	r5, #16
1005759e:	195b      	adds	r3, r3, r5
100575a0:	4d15      	ldr	r5, [pc, #84]	; (100575f8 <set_freq+0x7c>)
100575a2:	3080      	adds	r0, #128	; 0x80
100575a4:	095b      	lsrs	r3, r3, #5
100575a6:	0a00      	lsrs	r0, r0, #8
100575a8:	4369      	muls	r1, r5
100575aa:	0c09      	lsrs	r1, r1, #16
100575ac:	e004      	b.n	100575b8 <set_freq+0x3c>
100575ae:	2319      	movs	r3, #25
100575b0:	4812      	ldr	r0, [pc, #72]	; (100575fc <set_freq+0x80>)
100575b2:	041b      	lsls	r3, r3, #16
100575b4:	21ff      	movs	r1, #255	; 0xff
100575b6:	31e9      	adds	r1, #233	; 0xe9
100575b8:	4d11      	ldr	r5, [pc, #68]	; (10057600 <set_freq+0x84>)
100575ba:	8611      	strh	r1, [r2, #48]	; 0x30
100575bc:	8069      	strh	r1, [r5, #2]
100575be:	6253      	str	r3, [r2, #36]	; 0x24
100575c0:	6210      	str	r0, [r2, #32]
100575c2:	4809      	ldr	r0, [pc, #36]	; (100575e8 <set_freq+0x6c>)
100575c4:	3820      	subs	r0, #32
100575c6:	8e00      	ldrh	r0, [r0, #48]	; 0x30
100575c8:	f7ff ffc8 	bl	1005755c <machine_time_trans>
100575cc:	14e9      	asrs	r1, r5, #19
100575ce:	4288      	cmp	r0, r1
100575d0:	d300      	bcc.n	100575d4 <set_freq+0x58>
100575d2:	1e48      	subs	r0, r1, #1
100575d4:	0540      	lsls	r0, r0, #21
100575d6:	6821      	ldr	r1, [r4, #0]
100575d8:	0e00      	lsrs	r0, r0, #24
100575da:	3120      	adds	r1, #32
100575dc:	7508      	strb	r0, [r1, #20]
100575de:	8829      	ldrh	r1, [r5, #0]
100575e0:	0709      	lsls	r1, r1, #28
100575e2:	d400      	bmi.n	100575e6 <set_freq+0x6a>
100575e4:	7268      	strb	r0, [r5, #9]
100575e6:	bd70      	pop	{r4, r5, r6, pc}
100575e8:	200002fc 	.word	0x200002fc
100575ec:	20000d64 	.word	0x20000d64
100575f0:	00000753 	.word	0x00000753
100575f4:	0008bcf6 	.word	0x0008bcf6
100575f8:	00000555 	.word	0x00000555
100575fc:	0028f5c2 	.word	0x0028f5c2
10057600:	200000c0 	.word	0x200000c0

10057604 <set_sca>:
10057604:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10057606:	4c05      	ldr	r4, [pc, #20]	; (1005761c <set_sca+0x18>)
10057608:	0740      	lsls	r0, r0, #29
1005760a:	cc1e      	ldmia	r4, {r1, r2, r3, r4}
1005760c:	9403      	str	r4, [sp, #12]
1005760e:	466c      	mov	r4, sp
10057610:	c40e      	stmia	r4!, {r1, r2, r3}
10057612:	0f00      	lsrs	r0, r0, #28
10057614:	4669      	mov	r1, sp
10057616:	5a08      	ldrh	r0, [r1, r0]
10057618:	b004      	add	sp, #16
1005761a:	bd10      	pop	{r4, pc}
1005761c:	1005feb4 	.word	0x1005feb4

10057620 <system_time_trans>:
10057620:	b508      	push	{r3, lr}
10057622:	2100      	movs	r1, #0
10057624:	466a      	mov	r2, sp
10057626:	8011      	strh	r1, [r2, #0]
10057628:	4669      	mov	r1, sp
1005762a:	f000 f801 	bl	10057630 <system_time_trans_ext>
1005762e:	bd08      	pop	{r3, pc}

10057630 <system_time_trans_ext>:
10057630:	b510      	push	{r4, lr}
10057632:	4a0a      	ldr	r2, [pc, #40]	; (1005765c <system_time_trans_ext+0x2c>)
10057634:	0b83      	lsrs	r3, r0, #14
10057636:	6812      	ldr	r2, [r2, #0]
10057638:	0480      	lsls	r0, r0, #18
1005763a:	6a52      	ldr	r2, [r2, #36]	; 0x24
1005763c:	0c80      	lsrs	r0, r0, #18
1005763e:	0a14      	lsrs	r4, r2, #8
10057640:	4360      	muls	r0, r4
10057642:	435a      	muls	r2, r3
10057644:	0980      	lsrs	r0, r0, #6
10057646:	1810      	adds	r0, r2, r0
10057648:	2200      	movs	r2, #0
1005764a:	5e8a      	ldrsh	r2, [r1, r2]
1005764c:	1a82      	subs	r2, r0, r2
1005764e:	4610      	mov	r0, r2
10057650:	3040      	adds	r0, #64	; 0x40
10057652:	09c0      	lsrs	r0, r0, #7
10057654:	01c3      	lsls	r3, r0, #7
10057656:	1a9a      	subs	r2, r3, r2
10057658:	800a      	strh	r2, [r1, #0]
1005765a:	bd10      	pop	{r4, pc}
1005765c:	20000d64 	.word	0x20000d64

10057660 <time_offset1>:
10057660:	2803      	cmp	r0, #3
10057662:	d002      	beq.n	1005766a <time_offset1+0xa>
10057664:	2063      	movs	r0, #99	; 0x63
10057666:	43c0      	mvns	r0, r0
10057668:	4770      	bx	lr
1005766a:	2066      	movs	r0, #102	; 0x66
1005766c:	4770      	bx	lr
	...

10057670 <time_offset2>:
10057670:	2801      	cmp	r0, #1
10057672:	d001      	beq.n	10057678 <time_offset2+0x8>
10057674:	4801      	ldr	r0, [pc, #4]	; (1005767c <time_offset2+0xc>)
10057676:	4770      	bx	lr
10057678:	2000      	movs	r0, #0
1005767a:	4770      	bx	lr
1005767c:	0000037a 	.word	0x0000037a

10057680 <Blue_Init_Global>:
10057680:	b570      	push	{r4, r5, r6, lr}
10057682:	4a23      	ldr	r2, [pc, #140]	; (10057710 <Blue_Init_Global+0x90>)
10057684:	2100      	movs	r1, #0
10057686:	6810      	ldr	r0, [r2, #0]
10057688:	4604      	mov	r4, r0
1005768a:	3040      	adds	r0, #64	; 0x40
1005768c:	7641      	strb	r1, [r0, #25]
1005768e:	7601      	strb	r1, [r0, #24]
10057690:	2309      	movs	r3, #9
10057692:	021b      	lsls	r3, r3, #8
10057694:	18e0      	adds	r0, r4, r3
10057696:	7041      	strb	r1, [r0, #1]
10057698:	250f      	movs	r5, #15
1005769a:	2036      	movs	r0, #54	; 0x36
1005769c:	5505      	strb	r5, [r0, r4]
1005769e:	4608      	mov	r0, r1
100576a0:	6814      	ldr	r4, [r2, #0]
100576a2:	18e4      	adds	r4, r4, r3
100576a4:	6ce4      	ldr	r4, [r4, #76]	; 0x4c
100576a6:	5421      	strb	r1, [r4, r0]
100576a8:	6814      	ldr	r4, [r2, #0]
100576aa:	18e4      	adds	r4, r4, r3
100576ac:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
100576ae:	4604      	mov	r4, r0
100576b0:	3430      	adds	r4, #48	; 0x30
100576b2:	5529      	strb	r1, [r5, r4]
100576b4:	6814      	ldr	r4, [r2, #0]
100576b6:	18e4      	adds	r4, r4, r3
100576b8:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
100576ba:	4604      	mov	r4, r0
100576bc:	3460      	adds	r4, #96	; 0x60
100576be:	5529      	strb	r1, [r5, r4]
100576c0:	6814      	ldr	r4, [r2, #0]
100576c2:	18e4      	adds	r4, r4, r3
100576c4:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
100576c6:	4604      	mov	r4, r0
100576c8:	3490      	adds	r4, #144	; 0x90
100576ca:	1c40      	adds	r0, r0, #1
100576cc:	b2c0      	uxtb	r0, r0
100576ce:	5529      	strb	r1, [r5, r4]
100576d0:	282d      	cmp	r0, #45	; 0x2d
100576d2:	d3e5      	bcc.n	100576a0 <Blue_Init_Global+0x20>
100576d4:	6812      	ldr	r2, [r2, #0]
100576d6:	18d3      	adds	r3, r2, r3
100576d8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
100576da:	6258      	str	r0, [r3, #36]	; 0x24
100576dc:	4604      	mov	r4, r0
100576de:	3430      	adds	r4, #48	; 0x30
100576e0:	621c      	str	r4, [r3, #32]
100576e2:	3090      	adds	r0, #144	; 0x90
100576e4:	61d8      	str	r0, [r3, #28]
100576e6:	480b      	ldr	r0, [pc, #44]	; (10057714 <Blue_Init_Global+0x94>)
100576e8:	4614      	mov	r4, r2
100576ea:	3448      	adds	r4, #72	; 0x48
100576ec:	8001      	strh	r1, [r0, #0]
100576ee:	2109      	movs	r1, #9
100576f0:	7141      	strb	r1, [r0, #5]
100576f2:	2305      	movs	r3, #5
100576f4:	7183      	strb	r3, [r0, #6]
100576f6:	71c1      	strb	r1, [r0, #7]
100576f8:	7203      	strb	r3, [r0, #8]
100576fa:	8142      	strh	r2, [r0, #10]
100576fc:	f7ff fc74 	bl	10056fe8 <Blue_Set_Radio_Config_Data>
10057700:	20ff      	movs	r0, #255	; 0xff
10057702:	7020      	strb	r0, [r4, #0]
10057704:	7060      	strb	r0, [r4, #1]
10057706:	70a0      	strb	r0, [r4, #2]
10057708:	70e0      	strb	r0, [r4, #3]
1005770a:	201f      	movs	r0, #31
1005770c:	7120      	strb	r0, [r4, #4]
1005770e:	bd70      	pop	{r4, r5, r6, pc}
10057710:	20000d64 	.word	0x20000d64
10057714:	200000c0 	.word	0x200000c0

10057718 <LL_SetAddressResolutionEnable>:
10057718:	b510      	push	{r4, lr}
1005771a:	f7f8 fecb 	bl	100504b4 <LL_LE_Set_Address_Resolution_Enable>
1005771e:	bd10      	pop	{r4, pc}

10057720 <advance_transmit>:
10057720:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10057722:	4852      	ldr	r0, [pc, #328]	; (1005786c <advance_transmit+0x14c>)
10057724:	8800      	ldrh	r0, [r0, #0]
10057726:	2358      	movs	r3, #88	; 0x58
10057728:	0741      	lsls	r1, r0, #29
1005772a:	4851      	ldr	r0, [pc, #324]	; (10057870 <advance_transmit+0x150>)
1005772c:	0f49      	lsrs	r1, r1, #29
1005772e:	6802      	ldr	r2, [r0, #0]
10057730:	2009      	movs	r0, #9
10057732:	0200      	lsls	r0, r0, #8
10057734:	1810      	adds	r0, r2, r0
10057736:	6b02      	ldr	r2, [r0, #48]	; 0x30
10057738:	4359      	muls	r1, r3
1005773a:	1854      	adds	r4, r2, r1
1005773c:	78a2      	ldrb	r2, [r4, #2]
1005773e:	6925      	ldr	r5, [r4, #16]
10057740:	0752      	lsls	r2, r2, #29
10057742:	0f52      	lsrs	r2, r2, #29
10057744:	6a21      	ldr	r1, [r4, #32]
10057746:	9200      	str	r2, [sp, #0]
10057748:	2a02      	cmp	r2, #2
1005774a:	d001      	beq.n	10057750 <advance_transmit+0x30>
1005774c:	2a05      	cmp	r2, #5
1005774e:	d120      	bne.n	10057792 <advance_transmit+0x72>
10057750:	042a      	lsls	r2, r5, #16
10057752:	d404      	bmi.n	1005775e <advance_transmit+0x3e>
10057754:	7962      	ldrb	r2, [r4, #5]
10057756:	0792      	lsls	r2, r2, #30
10057758:	d101      	bne.n	1005775e <advance_transmit+0x3e>
1005775a:	2900      	cmp	r1, #0
1005775c:	d019      	beq.n	10057792 <advance_transmit+0x72>
1005775e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
10057760:	4a44      	ldr	r2, [pc, #272]	; (10057874 <advance_transmit+0x154>)
10057762:	042b      	lsls	r3, r5, #16
10057764:	d543      	bpl.n	100577ee <advance_transmit+0xce>
10057766:	7963      	ldrb	r3, [r4, #5]
10057768:	079b      	lsls	r3, r3, #30
1005776a:	d015      	beq.n	10057798 <advance_transmit+0x78>
1005776c:	6b67      	ldr	r7, [r4, #52]	; 0x34
1005776e:	8077      	strh	r7, [r6, #2]
10057770:	2001      	movs	r0, #1
10057772:	03c0      	lsls	r0, r0, #15
10057774:	4385      	bics	r5, r0
10057776:	6125      	str	r5, [r4, #16]
10057778:	f7ea fa08 	bl	10041b8c <data_length_extension_csr_ucfg>
1005777c:	2801      	cmp	r0, #1
1005777e:	d009      	beq.n	10057794 <advance_transmit+0x74>
10057780:	211f      	movs	r1, #31
10057782:	7878      	ldrb	r0, [r7, #1]
10057784:	4201      	tst	r1, r0
10057786:	d004      	beq.n	10057792 <advance_transmit+0x72>
10057788:	8a21      	ldrh	r1, [r4, #16]
1005778a:	0489      	lsls	r1, r1, #18
1005778c:	d501      	bpl.n	10057792 <advance_transmit+0x72>
1005778e:	1d00      	adds	r0, r0, #4
10057790:	7078      	strb	r0, [r7, #1]
10057792:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057794:	21ff      	movs	r1, #255	; 0xff
10057796:	e7f4      	b.n	10057782 <advance_transmit+0x62>
10057798:	2900      	cmp	r1, #0
1005779a:	d0fa      	beq.n	10057792 <advance_transmit+0x72>
1005779c:	4215      	tst	r5, r2
1005779e:	d1f8      	bne.n	10057792 <advance_transmit+0x72>
100577a0:	7c0a      	ldrb	r2, [r1, #16]
100577a2:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
100577a4:	06d2      	lsls	r2, r2, #27
100577a6:	0ed2      	lsrs	r2, r2, #27
100577a8:	1c92      	adds	r2, r2, #2
100577aa:	1817      	adds	r7, r2, r0
100577ac:	b2b8      	uxth	r0, r7
100577ae:	9001      	str	r0, [sp, #4]
100577b0:	8070      	strh	r0, [r6, #2]
100577b2:	4620      	mov	r0, r4
100577b4:	f7f6 ff48 	bl	1004e648 <copy_tx_data_packet>
100577b8:	2001      	movs	r0, #1
100577ba:	03c0      	lsls	r0, r0, #15
100577bc:	4385      	bics	r5, r0
100577be:	6125      	str	r5, [r4, #16]
100577c0:	1105      	asrs	r5, r0, #4
100577c2:	9800      	ldr	r0, [sp, #0]
100577c4:	2805      	cmp	r0, #5
100577c6:	d100      	bne.n	100577ca <advance_transmit+0xaa>
100577c8:	00ad      	lsls	r5, r5, #2
100577ca:	f7ea f9df 	bl	10041b8c <data_length_extension_csr_ucfg>
100577ce:	2801      	cmp	r0, #1
100577d0:	d00b      	beq.n	100577ea <advance_transmit+0xca>
100577d2:	211f      	movs	r1, #31
100577d4:	7878      	ldrb	r0, [r7, #1]
100577d6:	4201      	tst	r1, r0
100577d8:	d004      	beq.n	100577e4 <advance_transmit+0xc4>
100577da:	6921      	ldr	r1, [r4, #16]
100577dc:	4229      	tst	r1, r5
100577de:	d001      	beq.n	100577e4 <advance_transmit+0xc4>
100577e0:	1d00      	adds	r0, r0, #4
100577e2:	7078      	strb	r0, [r7, #1]
100577e4:	9801      	ldr	r0, [sp, #4]
100577e6:	8070      	strh	r0, [r6, #2]
100577e8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100577ea:	21ff      	movs	r1, #255	; 0xff
100577ec:	e7f2      	b.n	100577d4 <advance_transmit+0xb4>
100577ee:	8870      	ldrh	r0, [r6, #2]
100577f0:	2301      	movs	r3, #1
100577f2:	075b      	lsls	r3, r3, #29
100577f4:	18c0      	adds	r0, r0, r3
100577f6:	7963      	ldrb	r3, [r4, #5]
100577f8:	469c      	mov	ip, r3
100577fa:	079b      	lsls	r3, r3, #30
100577fc:	d004      	beq.n	10057808 <advance_transmit+0xe8>
100577fe:	6b63      	ldr	r3, [r4, #52]	; 0x34
10057800:	4283      	cmp	r3, r0
10057802:	d001      	beq.n	10057808 <advance_transmit+0xe8>
10057804:	2701      	movs	r7, #1
10057806:	e000      	b.n	1005780a <advance_transmit+0xea>
10057808:	2700      	movs	r7, #0
1005780a:	6b66      	ldr	r6, [r4, #52]	; 0x34
1005780c:	4286      	cmp	r6, r0
1005780e:	d002      	beq.n	10057816 <advance_transmit+0xf6>
10057810:	8823      	ldrh	r3, [r4, #0]
10057812:	4283      	cmp	r3, r0
10057814:	d112      	bne.n	1005783c <advance_transmit+0x11c>
10057816:	2900      	cmp	r1, #0
10057818:	d012      	beq.n	10057840 <advance_transmit+0x120>
1005781a:	4215      	tst	r5, r2
1005781c:	d10e      	bne.n	1005783c <advance_transmit+0x11c>
1005781e:	2301      	movs	r3, #1
10057820:	2900      	cmp	r1, #0
10057822:	d00e      	beq.n	10057842 <advance_transmit+0x122>
10057824:	4286      	cmp	r6, r0
10057826:	d00c      	beq.n	10057842 <advance_transmit+0x122>
10057828:	8824      	ldrh	r4, [r4, #0]
1005782a:	4284      	cmp	r4, r0
1005782c:	d009      	beq.n	10057842 <advance_transmit+0x122>
1005782e:	6809      	ldr	r1, [r1, #0]
10057830:	2900      	cmp	r1, #0
10057832:	d006      	beq.n	10057842 <advance_transmit+0x122>
10057834:	4215      	tst	r5, r2
10057836:	d104      	bne.n	10057842 <advance_transmit+0x122>
10057838:	2101      	movs	r1, #1
1005783a:	e003      	b.n	10057844 <advance_transmit+0x124>
1005783c:	2300      	movs	r3, #0
1005783e:	e7ef      	b.n	10057820 <advance_transmit+0x100>
10057840:	2300      	movs	r3, #0
10057842:	2100      	movs	r1, #0
10057844:	4662      	mov	r2, ip
10057846:	0692      	lsls	r2, r2, #26
10057848:	0f92      	lsrs	r2, r2, #30
1005784a:	d003      	beq.n	10057854 <advance_transmit+0x134>
1005784c:	2200      	movs	r2, #0
1005784e:	2f00      	cmp	r7, #0
10057850:	d106      	bne.n	10057860 <advance_transmit+0x140>
10057852:	e001      	b.n	10057858 <advance_transmit+0x138>
10057854:	2201      	movs	r2, #1
10057856:	e7fa      	b.n	1005784e <advance_transmit+0x12e>
10057858:	430b      	orrs	r3, r1
1005785a:	d0c5      	beq.n	100577e8 <advance_transmit+0xc8>
1005785c:	2a00      	cmp	r2, #0
1005785e:	d0c3      	beq.n	100577e8 <advance_transmit+0xc8>
10057860:	7801      	ldrb	r1, [r0, #0]
10057862:	2210      	movs	r2, #16
10057864:	4311      	orrs	r1, r2
10057866:	7001      	strb	r1, [r0, #0]
10057868:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005786a:	0000      	.short	0x0000
1005786c:	200000c0 	.word	0x200000c0
10057870:	20000d64 	.word	0x20000d64
10057874:	00000660 	.word	0x00000660

10057878 <microseconds_to_machine_time>:
10057878:	0141      	lsls	r1, r0, #5
1005787a:	1840      	adds	r0, r0, r1
1005787c:	0980      	lsrs	r0, r0, #6
1005787e:	4770      	bx	lr

10057880 <slave_advance>:
10057880:	b5f0      	push	{r4, r5, r6, r7, lr}
10057882:	4d7d      	ldr	r5, [pc, #500]	; (10057a78 <slave_advance+0x1f8>)
10057884:	4604      	mov	r4, r0
10057886:	2141      	movs	r1, #65	; 0x41
10057888:	6828      	ldr	r0, [r5, #0]
1005788a:	0149      	lsls	r1, r1, #5
1005788c:	b091      	sub	sp, #68	; 0x44
1005788e:	1840      	adds	r0, r0, r1
10057890:	9008      	str	r0, [sp, #32]
10057892:	2000      	movs	r0, #0
10057894:	900d      	str	r0, [sp, #52]	; 0x34
10057896:	b672      	cpsid	i
10057898:	f007 f90e 	bl	1005eab8 <LL_Sleep_Req>
1005789c:	2800      	cmp	r0, #0
1005789e:	d101      	bne.n	100578a4 <slave_advance+0x24>
100578a0:	2c00      	cmp	r4, #0
100578a2:	d007      	beq.n	100578b4 <slave_advance+0x34>
100578a4:	4874      	ldr	r0, [pc, #464]	; (10057a78 <slave_advance+0x1f8>)
100578a6:	2400      	movs	r4, #0
100578a8:	6801      	ldr	r1, [r0, #0]
100578aa:	2009      	movs	r0, #9
100578ac:	0200      	lsls	r0, r0, #8
100578ae:	1808      	adds	r0, r1, r0
100578b0:	7846      	ldrb	r6, [r0, #1]
100578b2:	e0dd      	b.n	10057a70 <slave_advance+0x1f0>
100578b4:	b662      	cpsie	i
100578b6:	980d      	ldr	r0, [sp, #52]	; 0x34
100578b8:	b011      	add	sp, #68	; 0x44
100578ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
100578bc:	07f0      	lsls	r0, r6, #31
100578be:	d07d      	beq.n	100579bc <slave_advance+0x13c>
100578c0:	496e      	ldr	r1, [pc, #440]	; (10057a7c <slave_advance+0x1fc>)
100578c2:	01a0      	lsls	r0, r4, #6
100578c4:	1840      	adds	r0, r0, r1
100578c6:	900e      	str	r0, [sp, #56]	; 0x38
100578c8:	486b      	ldr	r0, [pc, #428]	; (10057a78 <slave_advance+0x1f8>)
100578ca:	6801      	ldr	r1, [r0, #0]
100578cc:	2009      	movs	r0, #9
100578ce:	0200      	lsls	r0, r0, #8
100578d0:	1808      	adds	r0, r1, r0
100578d2:	6b01      	ldr	r1, [r0, #48]	; 0x30
100578d4:	2058      	movs	r0, #88	; 0x58
100578d6:	4360      	muls	r0, r4
100578d8:	180d      	adds	r5, r1, r0
100578da:	78a9      	ldrb	r1, [r5, #2]
100578dc:	6a28      	ldr	r0, [r5, #32]
100578de:	0749      	lsls	r1, r1, #29
100578e0:	0f49      	lsrs	r1, r1, #29
100578e2:	2902      	cmp	r1, #2
100578e4:	d14a      	bne.n	1005797c <slave_advance+0xfc>
100578e6:	79a9      	ldrb	r1, [r5, #6]
100578e8:	0749      	lsls	r1, r1, #29
100578ea:	d447      	bmi.n	1005797c <slave_advance+0xfc>
100578ec:	2800      	cmp	r0, #0
100578ee:	d045      	beq.n	1005797c <slave_advance+0xfc>
100578f0:	8f28      	ldrh	r0, [r5, #56]	; 0x38
100578f2:	0040      	lsls	r0, r0, #1
100578f4:	9009      	str	r0, [sp, #36]	; 0x24
100578f6:	0200      	lsls	r0, r0, #8
100578f8:	f7ff fe30 	bl	1005755c <machine_time_trans>
100578fc:	9003      	str	r0, [sp, #12]
100578fe:	2000      	movs	r0, #0
10057900:	900f      	str	r0, [sp, #60]	; 0x3c
10057902:	485d      	ldr	r0, [pc, #372]	; (10057a78 <slave_advance+0x1f8>)
10057904:	2136      	movs	r1, #54	; 0x36
10057906:	6800      	ldr	r0, [r0, #0]
10057908:	5c09      	ldrb	r1, [r1, r0]
1005790a:	070a      	lsls	r2, r1, #28
1005790c:	d40a      	bmi.n	10057924 <slave_advance+0xa4>
1005790e:	0749      	lsls	r1, r1, #29
10057910:	0f49      	lsrs	r1, r1, #29
10057912:	42a1      	cmp	r1, r4
10057914:	d106      	bne.n	10057924 <slave_advance+0xa4>
10057916:	2101      	movs	r1, #1
10057918:	3080      	adds	r0, #128	; 0x80
1005791a:	910f      	str	r1, [sp, #60]	; 0x3c
1005791c:	6c41      	ldr	r1, [r0, #68]	; 0x44
1005791e:	9101      	str	r1, [sp, #4]
10057920:	6c80      	ldr	r0, [r0, #72]	; 0x48
10057922:	e006      	b.n	10057932 <slave_advance+0xb2>
10057924:	9908      	ldr	r1, [sp, #32]
10057926:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
10057928:	9101      	str	r1, [sp, #4]
1005792a:	210f      	movs	r1, #15
1005792c:	01c9      	lsls	r1, r1, #7
1005792e:	1840      	adds	r0, r0, r1
10057930:	6e40      	ldr	r0, [r0, #100]	; 0x64
10057932:	9000      	str	r0, [sp, #0]
10057934:	20ff      	movs	r0, #255	; 0xff
10057936:	305f      	adds	r0, #95	; 0x5f
10057938:	f7ff fe10 	bl	1005755c <machine_time_trans>
1005793c:	494f      	ldr	r1, [pc, #316]	; (10057a7c <slave_advance+0x1fc>)
1005793e:	390c      	subs	r1, #12
10057940:	7a49      	ldrb	r1, [r1, #9]
10057942:	00c9      	lsls	r1, r1, #3
10057944:	1841      	adds	r1, r0, r1
10057946:	9800      	ldr	r0, [sp, #0]
10057948:	1a41      	subs	r1, r0, r1
1005794a:	9803      	ldr	r0, [sp, #12]
1005794c:	1a08      	subs	r0, r1, r0
1005794e:	9007      	str	r0, [sp, #28]
10057950:	980e      	ldr	r0, [sp, #56]	; 0x38
10057952:	210b      	movs	r1, #11
10057954:	5641      	ldrsb	r1, [r0, r1]
10057956:	3020      	adds	r0, #32
10057958:	9105      	str	r1, [sp, #20]
1005795a:	7800      	ldrb	r0, [r0, #0]
1005795c:	900a      	str	r0, [sp, #40]	; 0x28
1005795e:	2000      	movs	r0, #0
10057960:	9002      	str	r0, [sp, #8]
10057962:	8928      	ldrh	r0, [r5, #8]
10057964:	9006      	str	r0, [sp, #24]
10057966:	2009      	movs	r0, #9
10057968:	06c0      	lsls	r0, r0, #27
1005796a:	6901      	ldr	r1, [r0, #16]
1005796c:	9807      	ldr	r0, [sp, #28]
1005796e:	1a40      	subs	r0, r0, r1
10057970:	0207      	lsls	r7, r0, #8
10057972:	2001      	movs	r0, #1
10057974:	0a3f      	lsrs	r7, r7, #8
10057976:	05c0      	lsls	r0, r0, #23
10057978:	4287      	cmp	r7, r0
1005797a:	d329      	bcc.n	100579d0 <slave_advance+0x150>
1005797c:	e06b      	b.n	10057a56 <slave_advance+0x1d6>
1005797e:	2001      	movs	r0, #1
10057980:	900d      	str	r0, [sp, #52]	; 0x34
10057982:	9903      	ldr	r1, [sp, #12]
10057984:	9807      	ldr	r0, [sp, #28]
10057986:	1a40      	subs	r0, r0, r1
10057988:	9007      	str	r0, [sp, #28]
1005798a:	9802      	ldr	r0, [sp, #8]
1005798c:	1840      	adds	r0, r0, r1
1005798e:	9002      	str	r0, [sp, #8]
10057990:	9909      	ldr	r1, [sp, #36]	; 0x24
10057992:	9801      	ldr	r0, [sp, #4]
10057994:	1a40      	subs	r0, r0, r1
10057996:	9001      	str	r0, [sp, #4]
10057998:	6969      	ldr	r1, [r5, #20]
1005799a:	9809      	ldr	r0, [sp, #36]	; 0x24
1005799c:	1808      	adds	r0, r1, r0
1005799e:	6168      	str	r0, [r5, #20]
100579a0:	9905      	ldr	r1, [sp, #20]
100579a2:	980a      	ldr	r0, [sp, #40]	; 0x28
100579a4:	1a08      	subs	r0, r1, r0
100579a6:	b240      	sxtb	r0, r0
100579a8:	9005      	str	r0, [sp, #20]
100579aa:	9806      	ldr	r0, [sp, #24]
100579ac:	1e40      	subs	r0, r0, #1
100579ae:	b280      	uxth	r0, r0
100579b0:	9006      	str	r0, [sp, #24]
100579b2:	9805      	ldr	r0, [sp, #20]
100579b4:	2800      	cmp	r0, #0
100579b6:	da04      	bge.n	100579c2 <slave_advance+0x142>
100579b8:	3025      	adds	r0, #37	; 0x25
100579ba:	e000      	b.n	100579be <slave_advance+0x13e>
100579bc:	e055      	b.n	10057a6a <slave_advance+0x1ea>
100579be:	b240      	sxtb	r0, r0
100579c0:	9005      	str	r0, [sp, #20]
100579c2:	2009      	movs	r0, #9
100579c4:	06c0      	lsls	r0, r0, #27
100579c6:	6901      	ldr	r1, [r0, #16]
100579c8:	9807      	ldr	r0, [sp, #28]
100579ca:	1a40      	subs	r0, r0, r1
100579cc:	0207      	lsls	r7, r0, #8
100579ce:	0a3f      	lsrs	r7, r7, #8
100579d0:	2064      	movs	r0, #100	; 0x64
100579d2:	f7ff fdc3 	bl	1005755c <machine_time_trans>
100579d6:	4929      	ldr	r1, [pc, #164]	; (10057a7c <slave_advance+0x1fc>)
100579d8:	390c      	subs	r1, #12
100579da:	7a49      	ldrb	r1, [r1, #9]
100579dc:	00c9      	lsls	r1, r1, #3
100579de:	1841      	adds	r1, r0, r1
100579e0:	4825      	ldr	r0, [pc, #148]	; (10057a78 <slave_advance+0x1f8>)
100579e2:	6800      	ldr	r0, [r0, #0]
100579e4:	6a80      	ldr	r0, [r0, #40]	; 0x28
100579e6:	1808      	adds	r0, r1, r0
100579e8:	42b8      	cmp	r0, r7
100579ea:	d207      	bcs.n	100579fc <slave_advance+0x17c>
100579ec:	2001      	movs	r0, #1
100579ee:	05c0      	lsls	r0, r0, #23
100579f0:	4287      	cmp	r7, r0
100579f2:	d203      	bcs.n	100579fc <slave_advance+0x17c>
100579f4:	9909      	ldr	r1, [sp, #36]	; 0x24
100579f6:	9801      	ldr	r0, [sp, #4]
100579f8:	4288      	cmp	r0, r1
100579fa:	d8c0      	bhi.n	1005797e <slave_advance+0xfe>
100579fc:	9902      	ldr	r1, [sp, #8]
100579fe:	9800      	ldr	r0, [sp, #0]
10057a00:	1a40      	subs	r0, r0, r1
10057a02:	0200      	lsls	r0, r0, #8
10057a04:	990d      	ldr	r1, [sp, #52]	; 0x34
10057a06:	0a00      	lsrs	r0, r0, #8
10057a08:	2900      	cmp	r1, #0
10057a0a:	d00c      	beq.n	10057a26 <slave_advance+0x1a6>
10057a0c:	491a      	ldr	r1, [pc, #104]	; (10057a78 <slave_advance+0x1f8>)
10057a0e:	2201      	movs	r2, #1
10057a10:	6809      	ldr	r1, [r1, #0]
10057a12:	02d2      	lsls	r2, r2, #11
10057a14:	1889      	adds	r1, r1, r2
10057a16:	6f09      	ldr	r1, [r1, #112]	; 0x70
10057a18:	1a41      	subs	r1, r0, r1
10057a1a:	0209      	lsls	r1, r1, #8
10057a1c:	1209      	asrs	r1, r1, #8
10057a1e:	2900      	cmp	r1, #0
10057a20:	dd01      	ble.n	10057a26 <slave_advance+0x1a6>
10057a22:	2100      	movs	r1, #0
10057a24:	910d      	str	r1, [sp, #52]	; 0x34
10057a26:	990f      	ldr	r1, [sp, #60]	; 0x3c
10057a28:	2900      	cmp	r1, #0
10057a2a:	d006      	beq.n	10057a3a <slave_advance+0x1ba>
10057a2c:	4912      	ldr	r1, [pc, #72]	; (10057a78 <slave_advance+0x1f8>)
10057a2e:	9a01      	ldr	r2, [sp, #4]
10057a30:	6809      	ldr	r1, [r1, #0]
10057a32:	3180      	adds	r1, #128	; 0x80
10057a34:	644a      	str	r2, [r1, #68]	; 0x44
10057a36:	6488      	str	r0, [r1, #72]	; 0x48
10057a38:	e008      	b.n	10057a4c <slave_advance+0x1cc>
10057a3a:	9a08      	ldr	r2, [sp, #32]
10057a3c:	9901      	ldr	r1, [sp, #4]
10057a3e:	64d1      	str	r1, [r2, #76]	; 0x4c
10057a40:	490d      	ldr	r1, [pc, #52]	; (10057a78 <slave_advance+0x1f8>)
10057a42:	680a      	ldr	r2, [r1, #0]
10057a44:	210f      	movs	r1, #15
10057a46:	01c9      	lsls	r1, r1, #7
10057a48:	1851      	adds	r1, r2, r1
10057a4a:	6648      	str	r0, [r1, #100]	; 0x64
10057a4c:	990e      	ldr	r1, [sp, #56]	; 0x38
10057a4e:	9805      	ldr	r0, [sp, #20]
10057a50:	72c8      	strb	r0, [r1, #11]
10057a52:	9806      	ldr	r0, [sp, #24]
10057a54:	8128      	strh	r0, [r5, #8]
10057a56:	4808      	ldr	r0, [pc, #32]	; (10057a78 <slave_advance+0x1f8>)
10057a58:	2201      	movs	r2, #1
10057a5a:	6801      	ldr	r1, [r0, #0]
10057a5c:	2009      	movs	r0, #9
10057a5e:	0200      	lsls	r0, r0, #8
10057a60:	1808      	adds	r0, r1, r0
10057a62:	7841      	ldrb	r1, [r0, #1]
10057a64:	40a2      	lsls	r2, r4
10057a66:	4391      	bics	r1, r2
10057a68:	7041      	strb	r1, [r0, #1]
10057a6a:	1c64      	adds	r4, r4, #1
10057a6c:	b2e4      	uxtb	r4, r4
10057a6e:	0876      	lsrs	r6, r6, #1
10057a70:	2e00      	cmp	r6, #0
10057a72:	d000      	beq.n	10057a76 <slave_advance+0x1f6>
10057a74:	e722      	b.n	100578bc <slave_advance+0x3c>
10057a76:	e71d      	b.n	100578b4 <slave_advance+0x34>
10057a78:	20000d64 	.word	0x20000d64
10057a7c:	200000cc 	.word	0x200000cc

10057a80 <swap_slaves>:
10057a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10057a82:	4d4c      	ldr	r5, [pc, #304]	; (10057bb4 <swap_slaves+0x134>)
10057a84:	2141      	movs	r1, #65	; 0x41
10057a86:	6828      	ldr	r0, [r5, #0]
10057a88:	0149      	lsls	r1, r1, #5
10057a8a:	1844      	adds	r4, r0, r1
10057a8c:	4626      	mov	r6, r4
10057a8e:	3640      	adds	r6, #64	; 0x40
10057a90:	8bb0      	ldrh	r0, [r6, #28]
10057a92:	f7ff fdb7 	bl	10057604 <set_sca>
10057a96:	6829      	ldr	r1, [r5, #0]
10057a98:	3140      	adds	r1, #64	; 0x40
10057a9a:	8e09      	ldrh	r1, [r1, #48]	; 0x30
10057a9c:	1840      	adds	r0, r0, r1
10057a9e:	b280      	uxth	r0, r0
10057aa0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
10057aa2:	f7ff fd52 	bl	1005754a <WindowWiden2>
10057aa6:	4607      	mov	r7, r0
10057aa8:	7fb0      	ldrb	r0, [r6, #30]
10057aaa:	f7ff fde1 	bl	10057670 <time_offset2>
10057aae:	6da1      	ldr	r1, [r4, #88]	; 0x58
10057ab0:	1838      	adds	r0, r7, r0
10057ab2:	1841      	adds	r1, r0, r1
10057ab4:	2007      	movs	r0, #7
10057ab6:	0500      	lsls	r0, r0, #20
10057ab8:	4301      	orrs	r1, r0
10057aba:	9100      	str	r1, [sp, #0]
10057abc:	4a3e      	ldr	r2, [pc, #248]	; (10057bb8 <swap_slaves+0x138>)
10057abe:	6829      	ldr	r1, [r5, #0]
10057ac0:	1888      	adds	r0, r1, r2
10057ac2:	3136      	adds	r1, #54	; 0x36
10057ac4:	f000 f884 	bl	10057bd0 <swap_u8>
10057ac8:	213f      	movs	r1, #63	; 0x3f
10057aca:	6828      	ldr	r0, [r5, #0]
10057acc:	0149      	lsls	r1, r1, #5
10057ace:	1842      	adds	r2, r0, r1
10057ad0:	7a91      	ldrb	r1, [r2, #10]
10057ad2:	074b      	lsls	r3, r1, #29
10057ad4:	4601      	mov	r1, r0
10057ad6:	3120      	adds	r1, #32
10057ad8:	7d8e      	ldrb	r6, [r1, #22]
10057ada:	0f5b      	lsrs	r3, r3, #29
10057adc:	0937      	lsrs	r7, r6, #4
10057ade:	013f      	lsls	r7, r7, #4
10057ae0:	433b      	orrs	r3, r7
10057ae2:	7293      	strb	r3, [r2, #10]
10057ae4:	0772      	lsls	r2, r6, #29
10057ae6:	0f52      	lsrs	r2, r2, #29
10057ae8:	758a      	strb	r2, [r1, #22]
10057aea:	4a33      	ldr	r2, [pc, #204]	; (10057bb8 <swap_slaves+0x138>)
10057aec:	31a8      	adds	r1, #168	; 0xa8
10057aee:	1f92      	subs	r2, r2, #6
10057af0:	1880      	adds	r0, r0, r2
10057af2:	f000 f868 	bl	10057bc6 <swap_u32>
10057af6:	6828      	ldr	r0, [r5, #0]
10057af8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
10057afa:	30c0      	adds	r0, #192	; 0xc0
10057afc:	6802      	ldr	r2, [r0, #0]
10057afe:	64a2      	str	r2, [r4, #72]	; 0x48
10057b00:	6001      	str	r1, [r0, #0]
10057b02:	6828      	ldr	r0, [r5, #0]
10057b04:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
10057b06:	30c4      	adds	r0, #196	; 0xc4
10057b08:	6802      	ldr	r2, [r0, #0]
10057b0a:	64e2      	str	r2, [r4, #76]	; 0x4c
10057b0c:	6001      	str	r1, [r0, #0]
10057b0e:	6828      	ldr	r0, [r5, #0]
10057b10:	9900      	ldr	r1, [sp, #0]
10057b12:	22cc      	movs	r2, #204	; 0xcc
10057b14:	5011      	str	r1, [r2, r0]
10057b16:	30d0      	adds	r0, #208	; 0xd0
10057b18:	6da1      	ldr	r1, [r4, #88]	; 0x58
10057b1a:	6802      	ldr	r2, [r0, #0]
10057b1c:	65a2      	str	r2, [r4, #88]	; 0x58
10057b1e:	6001      	str	r1, [r0, #0]
10057b20:	6828      	ldr	r0, [r5, #0]
10057b22:	6d61      	ldr	r1, [r4, #84]	; 0x54
10057b24:	30d4      	adds	r0, #212	; 0xd4
10057b26:	6802      	ldr	r2, [r0, #0]
10057b28:	6562      	str	r2, [r4, #84]	; 0x54
10057b2a:	6001      	str	r1, [r0, #0]
10057b2c:	6829      	ldr	r1, [r5, #0]
10057b2e:	4620      	mov	r0, r4
10057b30:	305c      	adds	r0, #92	; 0x5c
10057b32:	31d8      	adds	r1, #216	; 0xd8
10057b34:	f000 f842 	bl	10057bbc <swap_u16>
10057b38:	6829      	ldr	r1, [r5, #0]
10057b3a:	4620      	mov	r0, r4
10057b3c:	305e      	adds	r0, #94	; 0x5e
10057b3e:	31da      	adds	r1, #218	; 0xda
10057b40:	f000 f846 	bl	10057bd0 <swap_u8>
10057b44:	6829      	ldr	r1, [r5, #0]
10057b46:	4620      	mov	r0, r4
10057b48:	3060      	adds	r0, #96	; 0x60
10057b4a:	31db      	adds	r1, #219	; 0xdb
10057b4c:	f000 f840 	bl	10057bd0 <swap_u8>
10057b50:	6829      	ldr	r1, [r5, #0]
10057b52:	4620      	mov	r0, r4
10057b54:	3064      	adds	r0, #100	; 0x64
10057b56:	31dc      	adds	r1, #220	; 0xdc
10057b58:	f000 f830 	bl	10057bbc <swap_u16>
10057b5c:	6829      	ldr	r1, [r5, #0]
10057b5e:	4620      	mov	r0, r4
10057b60:	3068      	adds	r0, #104	; 0x68
10057b62:	31de      	adds	r1, #222	; 0xde
10057b64:	f000 f82a 	bl	10057bbc <swap_u16>
10057b68:	6829      	ldr	r1, [r5, #0]
10057b6a:	4620      	mov	r0, r4
10057b6c:	306c      	adds	r0, #108	; 0x6c
10057b6e:	31e0      	adds	r1, #224	; 0xe0
10057b70:	f000 f824 	bl	10057bbc <swap_u16>
10057b74:	6829      	ldr	r1, [r5, #0]
10057b76:	4620      	mov	r0, r4
10057b78:	3070      	adds	r0, #112	; 0x70
10057b7a:	31e2      	adds	r1, #226	; 0xe2
10057b7c:	f000 f81e 	bl	10057bbc <swap_u16>
10057b80:	6829      	ldr	r1, [r5, #0]
10057b82:	4620      	mov	r0, r4
10057b84:	3074      	adds	r0, #116	; 0x74
10057b86:	31e4      	adds	r1, #228	; 0xe4
10057b88:	f000 f818 	bl	10057bbc <swap_u16>
10057b8c:	6829      	ldr	r1, [r5, #0]
10057b8e:	4620      	mov	r0, r4
10057b90:	3078      	adds	r0, #120	; 0x78
10057b92:	31e6      	adds	r1, #230	; 0xe6
10057b94:	f000 f812 	bl	10057bbc <swap_u16>
10057b98:	6829      	ldr	r1, [r5, #0]
10057b9a:	4620      	mov	r0, r4
10057b9c:	307b      	adds	r0, #123	; 0x7b
10057b9e:	31e8      	adds	r1, #232	; 0xe8
10057ba0:	f000 f816 	bl	10057bd0 <swap_u8>
10057ba4:	6829      	ldr	r1, [r5, #0]
10057ba6:	4620      	mov	r0, r4
10057ba8:	3084      	adds	r0, #132	; 0x84
10057baa:	31ec      	adds	r1, #236	; 0xec
10057bac:	f000 f80b 	bl	10057bc6 <swap_u32>
10057bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057bb2:	0000      	.short	0x0000
10057bb4:	20000d64 	.word	0x20000d64
10057bb8:	000007ea 	.word	0x000007ea

10057bbc <swap_u16>:
10057bbc:	8802      	ldrh	r2, [r0, #0]
10057bbe:	880b      	ldrh	r3, [r1, #0]
10057bc0:	8003      	strh	r3, [r0, #0]
10057bc2:	800a      	strh	r2, [r1, #0]
10057bc4:	4770      	bx	lr

10057bc6 <swap_u32>:
10057bc6:	6802      	ldr	r2, [r0, #0]
10057bc8:	680b      	ldr	r3, [r1, #0]
10057bca:	6003      	str	r3, [r0, #0]
10057bcc:	600a      	str	r2, [r1, #0]
10057bce:	4770      	bx	lr

10057bd0 <swap_u8>:
10057bd0:	7802      	ldrb	r2, [r0, #0]
10057bd2:	780b      	ldrb	r3, [r1, #0]
10057bd4:	7003      	strb	r3, [r0, #0]
10057bd6:	700a      	strb	r2, [r1, #0]
10057bd8:	4770      	bx	lr

10057bda <Erase_Sector>:
10057bda:	b510      	push	{r4, lr}
10057bdc:	01c0      	lsls	r0, r0, #7
10057bde:	0c00      	lsrs	r0, r0, #16
10057be0:	f7e9 faf8 	bl	100411d4 <FLASH_ErasePage>
10057be4:	2000      	movs	r0, #0
10057be6:	bd10      	pop	{r4, pc}

10057be8 <GAP_configure_whitelist>:
10057be8:	b5f0      	push	{r4, r5, r6, r7, lr}
10057bea:	4821      	ldr	r0, [pc, #132]	; (10057c70 <GAP_configure_whitelist+0x88>)
10057bec:	2109      	movs	r1, #9
10057bee:	6800      	ldr	r0, [r0, #0]
10057bf0:	0209      	lsls	r1, r1, #8
10057bf2:	1840      	adds	r0, r0, r1
10057bf4:	6f45      	ldr	r5, [r0, #116]	; 0x74
10057bf6:	b099      	sub	sp, #100	; 0x64
10057bf8:	2000      	movs	r0, #0
10057bfa:	4669      	mov	r1, sp
10057bfc:	7008      	strb	r0, [r1, #0]
10057bfe:	4604      	mov	r4, r0
10057c00:	270c      	movs	r7, #12
10057c02:	2614      	movs	r6, #20
10057c04:	f7f8 fb9e 	bl	10050344 <LL_LE_Clear_White_List>
10057c08:	a810      	add	r0, sp, #64	; 0x40
10057c0a:	3002      	adds	r0, #2
10057c0c:	9017      	str	r0, [sp, #92]	; 0x5c
10057c0e:	4669      	mov	r1, sp
10057c10:	4628      	mov	r0, r5
10057c12:	f000 fd77 	bl	10058704 <sdb_read_record_validity>
10057c16:	4668      	mov	r0, sp
10057c18:	1c64      	adds	r4, r4, #1
10057c1a:	7800      	ldrb	r0, [r0, #0]
10057c1c:	b2e4      	uxtb	r4, r4
10057c1e:	28fe      	cmp	r0, #254	; 0xfe
10057c20:	d120      	bne.n	10057c64 <GAP_configure_whitelist+0x7c>
10057c22:	a901      	add	r1, sp, #4
10057c24:	4628      	mov	r0, r5
10057c26:	f000 fd5b 	bl	100586e0 <sdb_read_record>
10057c2a:	4668      	mov	r0, sp
10057c2c:	7940      	ldrb	r0, [r0, #5]
10057c2e:	07c0      	lsls	r0, r0, #31
10057c30:	9817      	ldr	r0, [sp, #92]	; 0x5c
10057c32:	d004      	beq.n	10057c3e <GAP_configure_whitelist+0x56>
10057c34:	f7e8 fc08 	bl	10040448 <__aeabi_uread4>
10057c38:	0200      	lsls	r0, r0, #8
10057c3a:	1c40      	adds	r0, r0, #1
10057c3c:	e002      	b.n	10057c44 <GAP_configure_whitelist+0x5c>
10057c3e:	f7e8 fc03 	bl	10040448 <__aeabi_uread4>
10057c42:	0200      	lsls	r0, r0, #8
10057c44:	9015      	str	r0, [sp, #84]	; 0x54
10057c46:	a811      	add	r0, sp, #68	; 0x44
10057c48:	3001      	adds	r0, #1
10057c4a:	f7e8 fbfd 	bl	10040448 <__aeabi_uread4>
10057c4e:	0200      	lsls	r0, r0, #8
10057c50:	0a00      	lsrs	r0, r0, #8
10057c52:	9016      	str	r0, [sp, #88]	; 0x58
10057c54:	a815      	add	r0, sp, #84	; 0x54
10057c56:	f7f8 fae7 	bl	10050228 <LL_LE_Add_Device_To_White_List>
10057c5a:	2800      	cmp	r0, #0
10057c5c:	d002      	beq.n	10057c64 <GAP_configure_whitelist+0x7c>
10057c5e:	2047      	movs	r0, #71	; 0x47
10057c60:	b019      	add	sp, #100	; 0x64
10057c62:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057c64:	19ad      	adds	r5, r5, r6
10057c66:	42bc      	cmp	r4, r7
10057c68:	d3d1      	bcc.n	10057c0e <GAP_configure_whitelist+0x26>
10057c6a:	2000      	movs	r0, #0
10057c6c:	e7f8      	b.n	10057c60 <GAP_configure_whitelist+0x78>
10057c6e:	0000      	.short	0x0000
10057c70:	20000d64 	.word	0x20000d64

10057c74 <SDB_Add_Record>:
10057c74:	b40f      	push	{r0, r1, r2, r3}
10057c76:	b5f0      	push	{r4, r5, r6, r7, lr}
10057c78:	4e5e      	ldr	r6, [pc, #376]	; (10057df4 <SDB_Add_Record+0x180>)
10057c7a:	2709      	movs	r7, #9
10057c7c:	6830      	ldr	r0, [r6, #0]
10057c7e:	023f      	lsls	r7, r7, #8
10057c80:	b097      	sub	sp, #92	; 0x5c
10057c82:	19c0      	adds	r0, r0, r7
10057c84:	6f45      	ldr	r5, [r0, #116]	; 0x74
10057c86:	2400      	movs	r4, #0
10057c88:	4669      	mov	r1, sp
10057c8a:	a810      	add	r0, sp, #64	; 0x40
10057c8c:	700c      	strb	r4, [r1, #0]
10057c8e:	3002      	adds	r0, #2
10057c90:	9016      	str	r0, [sp, #88]	; 0x58
10057c92:	306c      	adds	r0, #108	; 0x6c
10057c94:	9015      	str	r0, [sp, #84]	; 0x54
10057c96:	e01d      	b.n	10057cd4 <SDB_Add_Record+0x60>
10057c98:	4669      	mov	r1, sp
10057c9a:	4628      	mov	r0, r5
10057c9c:	f000 fd32 	bl	10058704 <sdb_read_record_validity>
10057ca0:	4668      	mov	r0, sp
10057ca2:	7800      	ldrb	r0, [r0, #0]
10057ca4:	28fe      	cmp	r0, #254	; 0xfe
10057ca6:	d009      	beq.n	10057cbc <SDB_Add_Record+0x48>
10057ca8:	28ff      	cmp	r0, #255	; 0xff
10057caa:	d018      	beq.n	10057cde <SDB_Add_Record+0x6a>
10057cac:	2800      	cmp	r0, #0
10057cae:	d010      	beq.n	10057cd2 <SDB_Add_Record+0x5e>
10057cb0:	20fa      	movs	r0, #250	; 0xfa
10057cb2:	b017      	add	sp, #92	; 0x5c
10057cb4:	bcf0      	pop	{r4, r5, r6, r7}
10057cb6:	bc08      	pop	{r3}
10057cb8:	b004      	add	sp, #16
10057cba:	4718      	bx	r3
10057cbc:	a901      	add	r1, sp, #4
10057cbe:	4628      	mov	r0, r5
10057cc0:	f000 fd0e 	bl	100586e0 <sdb_read_record>
10057cc4:	2206      	movs	r2, #6
10057cc6:	9916      	ldr	r1, [sp, #88]	; 0x58
10057cc8:	9815      	ldr	r0, [sp, #84]	; 0x54
10057cca:	f7e8 fd62 	bl	10040792 <Osal_MemCmp>
10057cce:	2800      	cmp	r0, #0
10057cd0:	d01f      	beq.n	10057d12 <SDB_Add_Record+0x9e>
10057cd2:	3514      	adds	r5, #20
10057cd4:	4620      	mov	r0, r4
10057cd6:	1c64      	adds	r4, r4, #1
10057cd8:	b2e4      	uxtb	r4, r4
10057cda:	280c      	cmp	r0, #12
10057cdc:	d3dc      	bcc.n	10057c98 <SDB_Add_Record+0x24>
10057cde:	a818      	add	r0, sp, #96	; 0x60
10057ce0:	7c40      	ldrb	r0, [r0, #17]
10057ce2:	0900      	lsrs	r0, r0, #4
10057ce4:	d0e5      	beq.n	10057cb2 <SDB_Add_Record+0x3e>
10057ce6:	2c0c      	cmp	r4, #12
10057ce8:	d97e      	bls.n	10057de8 <SDB_Add_Record+0x174>
10057cea:	b672      	cpsid	i
10057cec:	f000 fbc6 	bl	1005847c <sdb_delete>
10057cf0:	b662      	cpsie	i
10057cf2:	6830      	ldr	r0, [r6, #0]
10057cf4:	4669      	mov	r1, sp
10057cf6:	19c0      	adds	r0, r0, r7
10057cf8:	6f45      	ldr	r5, [r0, #116]	; 0x74
10057cfa:	20fe      	movs	r0, #254	; 0xfe
10057cfc:	7008      	strb	r0, [r1, #0]
10057cfe:	4669      	mov	r1, sp
10057d00:	4628      	mov	r0, r5
10057d02:	f000 fcff 	bl	10058704 <sdb_read_record_validity>
10057d06:	4668      	mov	r0, sp
10057d08:	7800      	ldrb	r0, [r0, #0]
10057d0a:	28ff      	cmp	r0, #255	; 0xff
10057d0c:	d06c      	beq.n	10057de8 <SDB_Add_Record+0x174>
10057d0e:	3514      	adds	r5, #20
10057d10:	e7f5      	b.n	10057cfe <SDB_Add_Record+0x8a>
10057d12:	2250      	movs	r2, #80	; 0x50
10057d14:	a901      	add	r1, sp, #4
10057d16:	a81c      	add	r0, sp, #112	; 0x70
10057d18:	f7e8 fd3b 	bl	10040792 <Osal_MemCmp>
10057d1c:	2800      	cmp	r0, #0
10057d1e:	d0c8      	beq.n	10057cb2 <SDB_Add_Record+0x3e>
10057d20:	4628      	mov	r0, r5
10057d22:	f000 fccd 	bl	100586c0 <sdb_invalidate_record>
10057d26:	e00c      	b.n	10057d42 <SDB_Add_Record+0xce>
10057d28:	3514      	adds	r5, #20
10057d2a:	4669      	mov	r1, sp
10057d2c:	4628      	mov	r0, r5
10057d2e:	f000 fce9 	bl	10058704 <sdb_read_record_validity>
10057d32:	4668      	mov	r0, sp
10057d34:	7800      	ldrb	r0, [r0, #0]
10057d36:	28fe      	cmp	r0, #254	; 0xfe
10057d38:	d003      	beq.n	10057d42 <SDB_Add_Record+0xce>
10057d3a:	2800      	cmp	r0, #0
10057d3c:	d001      	beq.n	10057d42 <SDB_Add_Record+0xce>
10057d3e:	28ff      	cmp	r0, #255	; 0xff
10057d40:	d1b6      	bne.n	10057cb0 <SDB_Add_Record+0x3c>
10057d42:	4620      	mov	r0, r4
10057d44:	1c64      	adds	r4, r4, #1
10057d46:	b2e4      	uxtb	r4, r4
10057d48:	280c      	cmp	r0, #12
10057d4a:	d203      	bcs.n	10057d54 <SDB_Add_Record+0xe0>
10057d4c:	4668      	mov	r0, sp
10057d4e:	7800      	ldrb	r0, [r0, #0]
10057d50:	28ff      	cmp	r0, #255	; 0xff
10057d52:	d1e9      	bne.n	10057d28 <SDB_Add_Record+0xb4>
10057d54:	a818      	add	r0, sp, #96	; 0x60
10057d56:	7cc1      	ldrb	r1, [r0, #19]
10057d58:	4668      	mov	r0, sp
10057d5a:	79c0      	ldrb	r0, [r0, #7]
10057d5c:	4281      	cmp	r1, r0
10057d5e:	d1be      	bne.n	10057cde <SDB_Add_Record+0x6a>
10057d60:	a818      	add	r0, sp, #96	; 0x60
10057d62:	7c40      	ldrb	r0, [r0, #17]
10057d64:	06c0      	lsls	r0, r0, #27
10057d66:	d40e      	bmi.n	10057d86 <SDB_Add_Record+0x112>
10057d68:	4668      	mov	r0, sp
10057d6a:	7940      	ldrb	r0, [r0, #5]
10057d6c:	06c0      	lsls	r0, r0, #27
10057d6e:	d50a      	bpl.n	10057d86 <SDB_Add_Record+0x112>
10057d70:	2202      	movs	r2, #2
10057d72:	a912      	add	r1, sp, #72	; 0x48
10057d74:	a82d      	add	r0, sp, #180	; 0xb4
10057d76:	f7e8 fd04 	bl	10040782 <Osal_MemCpy>
10057d7a:	a918      	add	r1, sp, #96	; 0x60
10057d7c:	7c48      	ldrb	r0, [r1, #17]
10057d7e:	2110      	movs	r1, #16
10057d80:	4308      	orrs	r0, r1
10057d82:	a918      	add	r1, sp, #96	; 0x60
10057d84:	7448      	strb	r0, [r1, #17]
10057d86:	a818      	add	r0, sp, #96	; 0x60
10057d88:	7c40      	ldrb	r0, [r0, #17]
10057d8a:	0680      	lsls	r0, r0, #26
10057d8c:	d415      	bmi.n	10057dba <SDB_Add_Record+0x146>
10057d8e:	4668      	mov	r0, sp
10057d90:	7940      	ldrb	r0, [r0, #5]
10057d92:	0680      	lsls	r0, r0, #26
10057d94:	d511      	bpl.n	10057dba <SDB_Add_Record+0x146>
10057d96:	a908      	add	r1, sp, #32
10057d98:	a823      	add	r0, sp, #140	; 0x8c
10057d9a:	2210      	movs	r2, #16
10057d9c:	3102      	adds	r1, #2
10057d9e:	3002      	adds	r0, #2
10057da0:	f7e8 fcef 	bl	10040782 <Osal_MemCpy>
10057da4:	2206      	movs	r2, #6
10057da6:	9916      	ldr	r1, [sp, #88]	; 0x58
10057da8:	9815      	ldr	r0, [sp, #84]	; 0x54
10057daa:	f7e8 fcea 	bl	10040782 <Osal_MemCpy>
10057dae:	a818      	add	r0, sp, #96	; 0x60
10057db0:	7c41      	ldrb	r1, [r0, #17]
10057db2:	2020      	movs	r0, #32
10057db4:	4301      	orrs	r1, r0
10057db6:	a818      	add	r0, sp, #96	; 0x60
10057db8:	7441      	strb	r1, [r0, #17]
10057dba:	a818      	add	r0, sp, #96	; 0x60
10057dbc:	7c40      	ldrb	r0, [r0, #17]
10057dbe:	0640      	lsls	r0, r0, #25
10057dc0:	d48d      	bmi.n	10057cde <SDB_Add_Record+0x6a>
10057dc2:	4668      	mov	r0, sp
10057dc4:	7940      	ldrb	r0, [r0, #5]
10057dc6:	0640      	lsls	r0, r0, #25
10057dc8:	d589      	bpl.n	10057cde <SDB_Add_Record+0x6a>
10057dca:	a90c      	add	r1, sp, #48	; 0x30
10057dcc:	a827      	add	r0, sp, #156	; 0x9c
10057dce:	2210      	movs	r2, #16
10057dd0:	3102      	adds	r1, #2
10057dd2:	3002      	adds	r0, #2
10057dd4:	f7e8 fcd5 	bl	10040782 <Osal_MemCpy>
10057dd8:	a918      	add	r1, sp, #96	; 0x60
10057dda:	7c48      	ldrb	r0, [r1, #17]
10057ddc:	2140      	movs	r1, #64	; 0x40
10057dde:	4308      	orrs	r0, r1
10057de0:	a918      	add	r1, sp, #96	; 0x60
10057de2:	7448      	strb	r0, [r1, #17]
10057de4:	e77b      	b.n	10057cde <SDB_Add_Record+0x6a>
10057de6:	e7ff      	b.n	10057de8 <SDB_Add_Record+0x174>
10057de8:	2201      	movs	r2, #1
10057dea:	a91c      	add	r1, sp, #112	; 0x70
10057dec:	4628      	mov	r0, r5
10057dee:	f000 fc91 	bl	10058714 <sdb_write_record>
10057df2:	e75e      	b.n	10057cb2 <SDB_Add_Record+0x3e>
10057df4:	20000d64 	.word	0x20000d64

10057df8 <SDB_Clear>:
10057df8:	b510      	push	{r4, lr}
10057dfa:	4806      	ldr	r0, [pc, #24]	; (10057e14 <SDB_Clear+0x1c>)
10057dfc:	2109      	movs	r1, #9
10057dfe:	6800      	ldr	r0, [r0, #0]
10057e00:	0209      	lsls	r1, r1, #8
10057e02:	1840      	adds	r0, r0, r1
10057e04:	6f40      	ldr	r0, [r0, #116]	; 0x74
10057e06:	01c0      	lsls	r0, r0, #7
10057e08:	0c00      	lsrs	r0, r0, #16
10057e0a:	f7e9 f9e3 	bl	100411d4 <FLASH_ErasePage>
10057e0e:	2000      	movs	r0, #0
10057e10:	bd10      	pop	{r4, pc}
10057e12:	0000      	.short	0x0000
10057e14:	20000d64 	.word	0x20000d64

10057e18 <SDB_Find_Matching_LTK>:
10057e18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10057e1a:	4826      	ldr	r0, [pc, #152]	; (10057eb4 <SDB_Find_Matching_LTK+0x9c>)
10057e1c:	2109      	movs	r1, #9
10057e1e:	6800      	ldr	r0, [r0, #0]
10057e20:	0209      	lsls	r1, r1, #8
10057e22:	1840      	adds	r0, r0, r1
10057e24:	6f46      	ldr	r6, [r0, #116]	; 0x74
10057e26:	2000      	movs	r0, #0
10057e28:	b098      	sub	sp, #96	; 0x60
10057e2a:	4669      	mov	r1, sp
10057e2c:	7108      	strb	r0, [r1, #4]
10057e2e:	4605      	mov	r5, r0
10057e30:	9016      	str	r0, [sp, #88]	; 0x58
10057e32:	a813      	add	r0, sp, #76	; 0x4c
10057e34:	4614      	mov	r4, r2
10057e36:	270c      	movs	r7, #12
10057e38:	9000      	str	r0, [sp, #0]
10057e3a:	e020      	b.n	10057e7e <SDB_Find_Matching_LTK+0x66>
10057e3c:	a901      	add	r1, sp, #4
10057e3e:	4630      	mov	r0, r6
10057e40:	f000 fc60 	bl	10058704 <sdb_read_record_validity>
10057e44:	4668      	mov	r0, sp
10057e46:	7900      	ldrb	r0, [r0, #4]
10057e48:	28fe      	cmp	r0, #254	; 0xfe
10057e4a:	d002      	beq.n	10057e52 <SDB_Find_Matching_LTK+0x3a>
10057e4c:	2800      	cmp	r0, #0
10057e4e:	d11b      	bne.n	10057e88 <SDB_Find_Matching_LTK+0x70>
10057e50:	e014      	b.n	10057e7c <SDB_Find_Matching_LTK+0x64>
10057e52:	a902      	add	r1, sp, #8
10057e54:	4630      	mov	r0, r6
10057e56:	f000 fc43 	bl	100586e0 <sdb_read_record>
10057e5a:	4668      	mov	r0, sp
10057e5c:	7a40      	ldrb	r0, [r0, #9]
10057e5e:	06c0      	lsls	r0, r0, #27
10057e60:	d50c      	bpl.n	10057e7c <SDB_Find_Matching_LTK+0x64>
10057e62:	2301      	movs	r3, #1
10057e64:	aa17      	add	r2, sp, #92	; 0x5c
10057e66:	9919      	ldr	r1, [sp, #100]	; 0x64
10057e68:	9800      	ldr	r0, [sp, #0]
10057e6a:	f002 f9e5 	bl	1005a238 <SMA_generate_EDIV_recovery_DIV>
10057e6e:	2202      	movs	r2, #2
10057e70:	a817      	add	r0, sp, #92	; 0x5c
10057e72:	9918      	ldr	r1, [sp, #96]	; 0x60
10057e74:	f7e8 fc8d 	bl	10040792 <Osal_MemCmp>
10057e78:	2800      	cmp	r0, #0
10057e7a:	d008      	beq.n	10057e8e <SDB_Find_Matching_LTK+0x76>
10057e7c:	3614      	adds	r6, #20
10057e7e:	4628      	mov	r0, r5
10057e80:	1c6d      	adds	r5, r5, #1
10057e82:	b2ed      	uxtb	r5, r5
10057e84:	42b8      	cmp	r0, r7
10057e86:	d3d9      	bcc.n	10057e3c <SDB_Find_Matching_LTK+0x24>
10057e88:	2041      	movs	r0, #65	; 0x41
10057e8a:	b01b      	add	sp, #108	; 0x6c
10057e8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057e8e:	a902      	add	r1, sp, #8
10057e90:	4620      	mov	r0, r4
10057e92:	f000 f905 	bl	100580a0 <SDB_get_security_data_record>
10057e96:	2001      	movs	r0, #1
10057e98:	9000      	str	r0, [sp, #0]
10057e9a:	4806      	ldr	r0, [pc, #24]	; (10057eb4 <SDB_Find_Matching_LTK+0x9c>)
10057e9c:	4623      	mov	r3, r4
10057e9e:	6800      	ldr	r0, [r0, #0]
10057ea0:	4621      	mov	r1, r4
10057ea2:	332a      	adds	r3, #42	; 0x2a
10057ea4:	aa16      	add	r2, sp, #88	; 0x58
10057ea6:	3120      	adds	r1, #32
10057ea8:	3080      	adds	r0, #128	; 0x80
10057eaa:	f002 f86f 	bl	10059f8c <SMA_Diversify>
10057eae:	2000      	movs	r0, #0
10057eb0:	e7eb      	b.n	10057e8a <SDB_Find_Matching_LTK+0x72>
10057eb2:	0000      	.short	0x0000
10057eb4:	20000d64 	.word	0x20000d64

10057eb8 <SDB_Find_Record>:
10057eb8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10057eba:	4607      	mov	r7, r0
10057ebc:	482e      	ldr	r0, [pc, #184]	; (10057f78 <SDB_Find_Record+0xc0>)
10057ebe:	460e      	mov	r6, r1
10057ec0:	6800      	ldr	r0, [r0, #0]
10057ec2:	2109      	movs	r1, #9
10057ec4:	0209      	lsls	r1, r1, #8
10057ec6:	1840      	adds	r0, r0, r1
10057ec8:	6f45      	ldr	r5, [r0, #116]	; 0x74
10057eca:	2000      	movs	r0, #0
10057ecc:	4669      	mov	r1, sp
10057ece:	4614      	mov	r4, r2
10057ed0:	7008      	strb	r0, [r1, #0]
10057ed2:	2e00      	cmp	r6, #0
10057ed4:	d01b      	beq.n	10057f0e <SDB_Find_Record+0x56>
10057ed6:	2e01      	cmp	r6, #1
10057ed8:	d106      	bne.n	10057ee8 <SDB_Find_Record+0x30>
10057eda:	7978      	ldrb	r0, [r7, #5]
10057edc:	0601      	lsls	r1, r0, #24
10057ede:	d501      	bpl.n	10057ee4 <SDB_Find_Record+0x2c>
10057ee0:	0641      	lsls	r1, r0, #25
10057ee2:	d414      	bmi.n	10057f0e <SDB_Find_Record+0x56>
10057ee4:	0980      	lsrs	r0, r0, #6
10057ee6:	d012      	beq.n	10057f0e <SDB_Find_Record+0x56>
10057ee8:	7978      	ldrb	r0, [r7, #5]
10057eea:	0640      	lsls	r0, r0, #25
10057eec:	d541      	bpl.n	10057f72 <SDB_Find_Record+0xba>
10057eee:	4669      	mov	r1, sp
10057ef0:	4628      	mov	r0, r5
10057ef2:	f000 fc07 	bl	10058704 <sdb_read_record_validity>
10057ef6:	4626      	mov	r6, r4
10057ef8:	361e      	adds	r6, #30
10057efa:	4668      	mov	r0, sp
10057efc:	7800      	ldrb	r0, [r0, #0]
10057efe:	28fe      	cmp	r0, #254	; 0xfe
10057f00:	d027      	beq.n	10057f52 <SDB_Find_Record+0x9a>
10057f02:	28ff      	cmp	r0, #255	; 0xff
10057f04:	d035      	beq.n	10057f72 <SDB_Find_Record+0xba>
10057f06:	2800      	cmp	r0, #0
10057f08:	d02d      	beq.n	10057f66 <SDB_Find_Record+0xae>
10057f0a:	20fa      	movs	r0, #250	; 0xfa
10057f0c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057f0e:	4620      	mov	r0, r4
10057f10:	303e      	adds	r0, #62	; 0x3e
10057f12:	9001      	str	r0, [sp, #4]
10057f14:	4669      	mov	r1, sp
10057f16:	4628      	mov	r0, r5
10057f18:	f000 fbf4 	bl	10058704 <sdb_read_record_validity>
10057f1c:	4668      	mov	r0, sp
10057f1e:	7800      	ldrb	r0, [r0, #0]
10057f20:	28fe      	cmp	r0, #254	; 0xfe
10057f22:	d005      	beq.n	10057f30 <SDB_Find_Record+0x78>
10057f24:	28ff      	cmp	r0, #255	; 0xff
10057f26:	d024      	beq.n	10057f72 <SDB_Find_Record+0xba>
10057f28:	2800      	cmp	r0, #0
10057f2a:	d1ee      	bne.n	10057f0a <SDB_Find_Record+0x52>
10057f2c:	3514      	adds	r5, #20
10057f2e:	e7f1      	b.n	10057f14 <SDB_Find_Record+0x5c>
10057f30:	4621      	mov	r1, r4
10057f32:	4628      	mov	r0, r5
10057f34:	f000 fbd4 	bl	100586e0 <sdb_read_record>
10057f38:	7860      	ldrb	r0, [r4, #1]
10057f3a:	07c0      	lsls	r0, r0, #31
10057f3c:	0fc0      	lsrs	r0, r0, #31
10057f3e:	42b0      	cmp	r0, r6
10057f40:	d1f4      	bne.n	10057f2c <SDB_Find_Record+0x74>
10057f42:	2206      	movs	r2, #6
10057f44:	4639      	mov	r1, r7
10057f46:	9801      	ldr	r0, [sp, #4]
10057f48:	f7e8 fc23 	bl	10040792 <Osal_MemCmp>
10057f4c:	2800      	cmp	r0, #0
10057f4e:	d0dd      	beq.n	10057f0c <SDB_Find_Record+0x54>
10057f50:	e7ec      	b.n	10057f2c <SDB_Find_Record+0x74>
10057f52:	4621      	mov	r1, r4
10057f54:	4628      	mov	r0, r5
10057f56:	f000 fbc3 	bl	100586e0 <sdb_read_record>
10057f5a:	4631      	mov	r1, r6
10057f5c:	4638      	mov	r0, r7
10057f5e:	f002 f9cc 	bl	1005a2fa <SM_Resolve_Private_Address>
10057f62:	2800      	cmp	r0, #0
10057f64:	d0d2      	beq.n	10057f0c <SDB_Find_Record+0x54>
10057f66:	3514      	adds	r5, #20
10057f68:	4669      	mov	r1, sp
10057f6a:	4628      	mov	r0, r5
10057f6c:	f000 fbca 	bl	10058704 <sdb_read_record_validity>
10057f70:	e7c3      	b.n	10057efa <SDB_Find_Record+0x42>
10057f72:	205c      	movs	r0, #92	; 0x5c
10057f74:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057f76:	0000      	.short	0x0000
10057f78:	20000d64 	.word	0x20000d64

10057f7c <SDB_Get_Irk_From_Identity_Addr>:
10057f7c:	b530      	push	{r4, r5, lr}
10057f7e:	460b      	mov	r3, r1
10057f80:	b095      	sub	sp, #84	; 0x54
10057f82:	4615      	mov	r5, r2
10057f84:	4601      	mov	r1, r0
10057f86:	466a      	mov	r2, sp
10057f88:	4618      	mov	r0, r3
10057f8a:	f7ff ff95 	bl	10057eb8 <SDB_Find_Record>
10057f8e:	0004      	movs	r4, r0
10057f90:	d105      	bne.n	10057f9e <SDB_Get_Irk_From_Identity_Addr+0x22>
10057f92:	a907      	add	r1, sp, #28
10057f94:	2210      	movs	r2, #16
10057f96:	4628      	mov	r0, r5
10057f98:	3102      	adds	r1, #2
10057f9a:	f7e8 fbf2 	bl	10040782 <Osal_MemCpy>
10057f9e:	4620      	mov	r0, r4
10057fa0:	b015      	add	sp, #84	; 0x54
10057fa2:	bd30      	pop	{r4, r5, pc}

10057fa4 <SDB_Get_Number_Of_Valid_Records>:
10057fa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10057fa6:	480f      	ldr	r0, [pc, #60]	; (10057fe4 <SDB_Get_Number_Of_Valid_Records+0x40>)
10057fa8:	2109      	movs	r1, #9
10057faa:	6800      	ldr	r0, [r0, #0]
10057fac:	0209      	lsls	r1, r1, #8
10057fae:	1840      	adds	r0, r0, r1
10057fb0:	2614      	movs	r6, #20
10057fb2:	6f45      	ldr	r5, [r0, #116]	; 0x74
10057fb4:	2000      	movs	r0, #0
10057fb6:	4669      	mov	r1, sp
10057fb8:	7008      	strb	r0, [r1, #0]
10057fba:	4604      	mov	r4, r0
10057fbc:	4669      	mov	r1, sp
10057fbe:	4628      	mov	r0, r5
10057fc0:	f000 fba0 	bl	10058704 <sdb_read_record_validity>
10057fc4:	4668      	mov	r0, sp
10057fc6:	7800      	ldrb	r0, [r0, #0]
10057fc8:	28fe      	cmp	r0, #254	; 0xfe
10057fca:	d005      	beq.n	10057fd8 <SDB_Get_Number_Of_Valid_Records+0x34>
10057fcc:	28ff      	cmp	r0, #255	; 0xff
10057fce:	d007      	beq.n	10057fe0 <SDB_Get_Number_Of_Valid_Records+0x3c>
10057fd0:	2800      	cmp	r0, #0
10057fd2:	d003      	beq.n	10057fdc <SDB_Get_Number_Of_Valid_Records+0x38>
10057fd4:	20fa      	movs	r0, #250	; 0xfa
10057fd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057fd8:	1c64      	adds	r4, r4, #1
10057fda:	b2e4      	uxtb	r4, r4
10057fdc:	19ad      	adds	r5, r5, r6
10057fde:	e7ed      	b.n	10057fbc <SDB_Get_Number_Of_Valid_Records+0x18>
10057fe0:	4620      	mov	r0, r4
10057fe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057fe4:	20000d64 	.word	0x20000d64

10057fe8 <SDB_flash_write_client_data>:
10057fe8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10057fea:	b098      	sub	sp, #96	; 0x60
10057fec:	4616      	mov	r6, r2
10057fee:	255e      	movs	r5, #94	; 0x5e
10057ff0:	f002 fc80 	bl	1005a8f4 <SMP_get_remote_device_list_item>
10057ff4:	0004      	movs	r4, r0
10057ff6:	d04e      	beq.n	10058096 <SDB_flash_write_client_data+0xae>
10057ff8:	7860      	ldrb	r0, [r4, #1]
10057ffa:	07c0      	lsls	r0, r0, #31
10057ffc:	d020      	beq.n	10058040 <SDB_flash_write_client_data+0x58>
10057ffe:	79e0      	ldrb	r0, [r4, #7]
10058000:	0981      	lsrs	r1, r0, #6
10058002:	2903      	cmp	r1, #3
10058004:	d01c      	beq.n	10058040 <SDB_flash_write_client_data+0x58>
10058006:	0981      	lsrs	r1, r0, #6
10058008:	d01a      	beq.n	10058040 <SDB_flash_write_client_data+0x58>
1005800a:	0640      	lsls	r0, r0, #25
1005800c:	d515      	bpl.n	1005803a <SDB_flash_write_client_data+0x52>
1005800e:	4823      	ldr	r0, [pc, #140]	; (1005809c <SDB_flash_write_client_data+0xb4>)
10058010:	2109      	movs	r1, #9
10058012:	6800      	ldr	r0, [r0, #0]
10058014:	0209      	lsls	r1, r1, #8
10058016:	1840      	adds	r0, r0, r1
10058018:	6f45      	ldr	r5, [r0, #116]	; 0x74
1005801a:	2000      	movs	r0, #0
1005801c:	4669      	mov	r1, sp
1005801e:	7008      	strb	r0, [r1, #0]
10058020:	4628      	mov	r0, r5
10058022:	f000 fb6f 	bl	10058704 <sdb_read_record_validity>
10058026:	af08      	add	r7, sp, #32
10058028:	3702      	adds	r7, #2
1005802a:	4668      	mov	r0, sp
1005802c:	7800      	ldrb	r0, [r0, #0]
1005802e:	28fe      	cmp	r0, #254	; 0xfe
10058030:	d009      	beq.n	10058046 <SDB_flash_write_client_data+0x5e>
10058032:	28ff      	cmp	r0, #255	; 0xff
10058034:	d001      	beq.n	1005803a <SDB_flash_write_client_data+0x52>
10058036:	2800      	cmp	r0, #0
10058038:	d00f      	beq.n	1005805a <SDB_flash_write_client_data+0x72>
1005803a:	2047      	movs	r0, #71	; 0x47
1005803c:	b01b      	add	sp, #108	; 0x6c
1005803e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058040:	2206      	movs	r2, #6
10058042:	1ca1      	adds	r1, r4, #2
10058044:	e012      	b.n	1005806c <SDB_flash_write_client_data+0x84>
10058046:	a901      	add	r1, sp, #4
10058048:	4628      	mov	r0, r5
1005804a:	f000 fb49 	bl	100586e0 <sdb_read_record>
1005804e:	4639      	mov	r1, r7
10058050:	1ca0      	adds	r0, r4, #2
10058052:	f002 f952 	bl	1005a2fa <SM_Resolve_Private_Address>
10058056:	2800      	cmp	r0, #0
10058058:	d005      	beq.n	10058066 <SDB_flash_write_client_data+0x7e>
1005805a:	3514      	adds	r5, #20
1005805c:	4669      	mov	r1, sp
1005805e:	4628      	mov	r0, r5
10058060:	f000 fb50 	bl	10058704 <sdb_read_record_validity>
10058064:	e7e1      	b.n	1005802a <SDB_flash_write_client_data+0x42>
10058066:	2206      	movs	r2, #6
10058068:	a910      	add	r1, sp, #64	; 0x40
1005806a:	3102      	adds	r1, #2
1005806c:	a815      	add	r0, sp, #84	; 0x54
1005806e:	f7e8 fb88 	bl	10040782 <Osal_MemCpy>
10058072:	4632      	mov	r2, r6
10058074:	a815      	add	r0, sp, #84	; 0x54
10058076:	9919      	ldr	r1, [sp, #100]	; 0x64
10058078:	f000 f8d6 	bl	10058228 <Write_Client_Data>
1005807c:	4605      	mov	r5, r0
1005807e:	285d      	cmp	r0, #93	; 0x5d
10058080:	d109      	bne.n	10058096 <SDB_flash_write_client_data+0xae>
10058082:	b672      	cpsid	i
10058084:	f000 f9fa 	bl	1005847c <sdb_delete>
10058088:	b662      	cpsie	i
1005808a:	4632      	mov	r2, r6
1005808c:	a815      	add	r0, sp, #84	; 0x54
1005808e:	9919      	ldr	r1, [sp, #100]	; 0x64
10058090:	f000 f8ca 	bl	10058228 <Write_Client_Data>
10058094:	4605      	mov	r5, r0
10058096:	4628      	mov	r0, r5
10058098:	e7d0      	b.n	1005803c <SDB_flash_write_client_data+0x54>
1005809a:	0000      	.short	0x0000
1005809c:	20000d64 	.word	0x20000d64

100580a0 <SDB_get_security_data_record>:
100580a0:	b570      	push	{r4, r5, r6, lr}
100580a2:	4604      	mov	r4, r0
100580a4:	2001      	movs	r0, #1
100580a6:	460d      	mov	r5, r1
100580a8:	76a0      	strb	r0, [r4, #26]
100580aa:	78c9      	ldrb	r1, [r1, #3]
100580ac:	7721      	strb	r1, [r4, #28]
100580ae:	7869      	ldrb	r1, [r5, #1]
100580b0:	0609      	lsls	r1, r1, #24
100580b2:	d503      	bpl.n	100580bc <SDB_get_security_data_record+0x1c>
100580b4:	7f61      	ldrb	r1, [r4, #29]
100580b6:	2210      	movs	r2, #16
100580b8:	4311      	orrs	r1, r2
100580ba:	7761      	strb	r1, [r4, #29]
100580bc:	786a      	ldrb	r2, [r5, #1]
100580be:	7f61      	ldrb	r1, [r4, #29]
100580c0:	2360      	movs	r3, #96	; 0x60
100580c2:	401a      	ands	r2, r3
100580c4:	4311      	orrs	r1, r2
100580c6:	7761      	strb	r1, [r4, #29]
100580c8:	7869      	ldrb	r1, [r5, #1]
100580ca:	06c9      	lsls	r1, r1, #27
100580cc:	d502      	bpl.n	100580d4 <SDB_get_security_data_record+0x34>
100580ce:	7fa1      	ldrb	r1, [r4, #30]
100580d0:	4301      	orrs	r1, r0
100580d2:	77a1      	strb	r1, [r4, #30]
100580d4:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
100580d6:	6160      	str	r0, [r4, #20]
100580d8:	6ca8      	ldr	r0, [r5, #72]	; 0x48
100580da:	4629      	mov	r1, r5
100580dc:	6120      	str	r0, [r4, #16]
100580de:	310e      	adds	r1, #14
100580e0:	4620      	mov	r0, r4
100580e2:	2210      	movs	r2, #16
100580e4:	460e      	mov	r6, r1
100580e6:	303a      	adds	r0, #58	; 0x3a
100580e8:	f7e8 fb4b 	bl	10040782 <Osal_MemCpy>
100580ec:	4629      	mov	r1, r5
100580ee:	4620      	mov	r0, r4
100580f0:	2210      	movs	r2, #16
100580f2:	311e      	adds	r1, #30
100580f4:	3054      	adds	r0, #84	; 0x54
100580f6:	f7e8 fb44 	bl	10040782 <Osal_MemCpy>
100580fa:	4629      	mov	r1, r5
100580fc:	4620      	mov	r0, r4
100580fe:	2210      	movs	r2, #16
10058100:	312e      	adds	r1, #46	; 0x2e
10058102:	3064      	adds	r0, #100	; 0x64
10058104:	f7e8 fb3d 	bl	10040782 <Osal_MemCpy>
10058108:	4629      	mov	r1, r5
1005810a:	4620      	mov	r0, r4
1005810c:	2202      	movs	r2, #2
1005810e:	3144      	adds	r1, #68	; 0x44
10058110:	3020      	adds	r0, #32
10058112:	f7e8 fb36 	bl	10040782 <Osal_MemCpy>
10058116:	4620      	mov	r0, r4
10058118:	2208      	movs	r2, #8
1005811a:	1da9      	adds	r1, r5, #6
1005811c:	304a      	adds	r0, #74	; 0x4a
1005811e:	f7e8 fb30 	bl	10040782 <Osal_MemCpy>
10058122:	4620      	mov	r0, r4
10058124:	2202      	movs	r2, #2
10058126:	1d29      	adds	r1, r5, #4
10058128:	3052      	adds	r0, #82	; 0x52
1005812a:	f7e8 fb2a 	bl	10040782 <Osal_MemCpy>
1005812e:	7868      	ldrb	r0, [r5, #1]
10058130:	0780      	lsls	r0, r0, #30
10058132:	d504      	bpl.n	1005813e <SDB_get_security_data_record+0x9e>
10058134:	8920      	ldrh	r0, [r4, #8]
10058136:	2101      	movs	r1, #1
10058138:	0349      	lsls	r1, r1, #13
1005813a:	4308      	orrs	r0, r1
1005813c:	8120      	strh	r0, [r4, #8]
1005813e:	7868      	ldrb	r0, [r5, #1]
10058140:	0740      	lsls	r0, r0, #29
10058142:	d504      	bpl.n	1005814e <SDB_get_security_data_record+0xae>
10058144:	8920      	ldrh	r0, [r4, #8]
10058146:	2101      	movs	r1, #1
10058148:	0389      	lsls	r1, r1, #14
1005814a:	4308      	orrs	r0, r1
1005814c:	8120      	strh	r0, [r4, #8]
1005814e:	7868      	ldrb	r0, [r5, #1]
10058150:	0700      	lsls	r0, r0, #28
10058152:	d504      	bpl.n	1005815e <SDB_get_security_data_record+0xbe>
10058154:	8920      	ldrh	r0, [r4, #8]
10058156:	2101      	movs	r1, #1
10058158:	03c9      	lsls	r1, r1, #15
1005815a:	4308      	orrs	r0, r1
1005815c:	8120      	strh	r0, [r4, #8]
1005815e:	78a8      	ldrb	r0, [r5, #2]
10058160:	0701      	lsls	r1, r0, #28
10058162:	d506      	bpl.n	10058172 <SDB_get_security_data_record+0xd2>
10058164:	72e0      	strb	r0, [r4, #11]
10058166:	4620      	mov	r0, r4
10058168:	2210      	movs	r2, #16
1005816a:	4631      	mov	r1, r6
1005816c:	302a      	adds	r0, #42	; 0x2a
1005816e:	f7e8 fb08 	bl	10040782 <Osal_MemCpy>
10058172:	20f1      	movs	r0, #241	; 0xf1
10058174:	72a0      	strb	r0, [r4, #10]
10058176:	bd70      	pop	{r4, r5, r6, pc}

10058178 <SDB_read_peer_bonded_data>:
10058178:	b570      	push	{r4, r5, r6, lr}
1005817a:	b094      	sub	sp, #80	; 0x50
1005817c:	4615      	mov	r5, r2
1005817e:	460e      	mov	r6, r1
10058180:	466c      	mov	r4, sp
10058182:	f002 fbb7 	bl	1005a8f4 <SMP_get_remote_device_list_item>
10058186:	2800      	cmp	r0, #0
10058188:	d012      	beq.n	100581b0 <SDB_read_peer_bonded_data+0x38>
1005818a:	7841      	ldrb	r1, [r0, #1]
1005818c:	4622      	mov	r2, r4
1005818e:	07c9      	lsls	r1, r1, #31
10058190:	0fc9      	lsrs	r1, r1, #31
10058192:	1c80      	adds	r0, r0, #2
10058194:	f7ff fe90 	bl	10057eb8 <SDB_Find_Record>
10058198:	2800      	cmp	r0, #0
1005819a:	d002      	beq.n	100581a2 <SDB_read_peer_bonded_data+0x2a>
1005819c:	205c      	movs	r0, #92	; 0x5c
1005819e:	b014      	add	sp, #80	; 0x50
100581a0:	bd70      	pop	{r4, r5, r6, pc}
100581a2:	a80f      	add	r0, sp, #60	; 0x3c
100581a4:	462a      	mov	r2, r5
100581a6:	4631      	mov	r1, r6
100581a8:	3002      	adds	r0, #2
100581aa:	f000 fa19 	bl	100585e0 <sdb_find_client_data>
100581ae:	e7f6      	b.n	1005819e <SDB_read_peer_bonded_data+0x26>
100581b0:	2040      	movs	r0, #64	; 0x40
100581b2:	e7f4      	b.n	1005819e <SDB_read_peer_bonded_data+0x26>

100581b4 <SDB_remove_bonding_record>:
100581b4:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
100581b6:	481b      	ldr	r0, [pc, #108]	; (10058224 <SDB_remove_bonding_record+0x70>)
100581b8:	2109      	movs	r1, #9
100581ba:	6800      	ldr	r0, [r0, #0]
100581bc:	0209      	lsls	r1, r1, #8
100581be:	1840      	adds	r0, r0, r1
100581c0:	b095      	sub	sp, #84	; 0x54
100581c2:	6f44      	ldr	r4, [r0, #116]	; 0x74
100581c4:	2000      	movs	r0, #0
100581c6:	255c      	movs	r5, #92	; 0x5c
100581c8:	2714      	movs	r7, #20
100581ca:	4669      	mov	r1, sp
100581cc:	ae10      	add	r6, sp, #64	; 0x40
100581ce:	7008      	strb	r0, [r1, #0]
100581d0:	3602      	adds	r6, #2
100581d2:	4669      	mov	r1, sp
100581d4:	4620      	mov	r0, r4
100581d6:	f000 fa95 	bl	10058704 <sdb_read_record_validity>
100581da:	4668      	mov	r0, sp
100581dc:	7800      	ldrb	r0, [r0, #0]
100581de:	28fe      	cmp	r0, #254	; 0xfe
100581e0:	d005      	beq.n	100581ee <SDB_remove_bonding_record+0x3a>
100581e2:	28ff      	cmp	r0, #255	; 0xff
100581e4:	d01b      	beq.n	1005821e <SDB_remove_bonding_record+0x6a>
100581e6:	2800      	cmp	r0, #0
100581e8:	d013      	beq.n	10058212 <SDB_remove_bonding_record+0x5e>
100581ea:	25fa      	movs	r5, #250	; 0xfa
100581ec:	e017      	b.n	1005821e <SDB_remove_bonding_record+0x6a>
100581ee:	a901      	add	r1, sp, #4
100581f0:	4620      	mov	r0, r4
100581f2:	f000 fa75 	bl	100586e0 <sdb_read_record>
100581f6:	4668      	mov	r0, sp
100581f8:	7940      	ldrb	r0, [r0, #5]
100581fa:	07c1      	lsls	r1, r0, #31
100581fc:	9815      	ldr	r0, [sp, #84]	; 0x54
100581fe:	0fc9      	lsrs	r1, r1, #31
10058200:	4281      	cmp	r1, r0
10058202:	d106      	bne.n	10058212 <SDB_remove_bonding_record+0x5e>
10058204:	2206      	movs	r2, #6
10058206:	4630      	mov	r0, r6
10058208:	9916      	ldr	r1, [sp, #88]	; 0x58
1005820a:	f7e8 fac2 	bl	10040792 <Osal_MemCmp>
1005820e:	2800      	cmp	r0, #0
10058210:	d001      	beq.n	10058216 <SDB_remove_bonding_record+0x62>
10058212:	19e4      	adds	r4, r4, r7
10058214:	e7dd      	b.n	100581d2 <SDB_remove_bonding_record+0x1e>
10058216:	4620      	mov	r0, r4
10058218:	f000 fa52 	bl	100586c0 <sdb_invalidate_record>
1005821c:	4605      	mov	r5, r0
1005821e:	4628      	mov	r0, r5
10058220:	b017      	add	sp, #92	; 0x5c
10058222:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058224:	20000d64 	.word	0x20000d64

10058228 <Write_Client_Data>:
10058228:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005822a:	b086      	sub	sp, #24
1005822c:	4605      	mov	r5, r0
1005822e:	f000 fa3b 	bl	100586a8 <sdb_get_gatt_db_start_address>
10058232:	4604      	mov	r4, r0
10058234:	2000      	movs	r0, #0
10058236:	4669      	mov	r1, sp
10058238:	7208      	strb	r0, [r1, #8]
1005823a:	4606      	mov	r6, r0
1005823c:	200c      	movs	r0, #12
1005823e:	9003      	str	r0, [sp, #12]
10058240:	e05a      	b.n	100582f8 <Write_Client_Data+0xd0>
10058242:	a902      	add	r1, sp, #8
10058244:	4620      	mov	r0, r4
10058246:	f000 fa5d 	bl	10058704 <sdb_read_record_validity>
1005824a:	4668      	mov	r0, sp
1005824c:	7a02      	ldrb	r2, [r0, #8]
1005824e:	2aff      	cmp	r2, #255	; 0xff
10058250:	d059      	beq.n	10058306 <Write_Client_Data+0xde>
10058252:	2afe      	cmp	r2, #254	; 0xfe
10058254:	d004      	beq.n	10058260 <Write_Client_Data+0x38>
10058256:	2a00      	cmp	r2, #0
10058258:	d002      	beq.n	10058260 <Write_Client_Data+0x38>
1005825a:	20fa      	movs	r0, #250	; 0xfa
1005825c:	b009      	add	sp, #36	; 0x24
1005825e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058260:	495b      	ldr	r1, [pc, #364]	; (100583d0 <Write_Client_Data+0x1a8>)
10058262:	00a0      	lsls	r0, r4, #2
10058264:	1840      	adds	r0, r0, r1
10058266:	6800      	ldr	r0, [r0, #0]
10058268:	466b      	mov	r3, sp
1005826a:	0a07      	lsrs	r7, r0, #8
1005826c:	701f      	strb	r7, [r3, #0]
1005826e:	0c07      	lsrs	r7, r0, #16
10058270:	705f      	strb	r7, [r3, #1]
10058272:	0e00      	lsrs	r0, r0, #24
10058274:	7098      	strb	r0, [r3, #2]
10058276:	1c64      	adds	r4, r4, #1
10058278:	00a0      	lsls	r0, r4, #2
1005827a:	1840      	adds	r0, r0, r1
1005827c:	6800      	ldr	r0, [r0, #0]
1005827e:	70d8      	strb	r0, [r3, #3]
10058280:	0a07      	lsrs	r7, r0, #8
10058282:	711f      	strb	r7, [r3, #4]
10058284:	0c00      	lsrs	r0, r0, #16
10058286:	7158      	strb	r0, [r3, #5]
10058288:	1c64      	adds	r4, r4, #1
1005828a:	00a0      	lsls	r0, r4, #2
1005828c:	1840      	adds	r0, r0, r1
1005828e:	6800      	ldr	r0, [r0, #0]
10058290:	9004      	str	r0, [sp, #16]
10058292:	2afe      	cmp	r2, #254	; 0xfe
10058294:	d003      	beq.n	1005829e <Write_Client_Data+0x76>
10058296:	0880      	lsrs	r0, r0, #2
10058298:	1904      	adds	r4, r0, r4
1005829a:	1c64      	adds	r4, r4, #1
1005829c:	e02c      	b.n	100582f8 <Write_Client_Data+0xd0>
1005829e:	2206      	movs	r2, #6
100582a0:	4629      	mov	r1, r5
100582a2:	4618      	mov	r0, r3
100582a4:	f7e8 fa75 	bl	10040792 <Osal_MemCmp>
100582a8:	2800      	cmp	r0, #0
100582aa:	9804      	ldr	r0, [sp, #16]
100582ac:	d1f3      	bne.n	10058296 <Write_Client_Data+0x6e>
100582ae:	9907      	ldr	r1, [sp, #28]
100582b0:	4288      	cmp	r0, r1
100582b2:	d119      	bne.n	100582e8 <Write_Client_Data+0xc0>
100582b4:	2206      	movs	r2, #6
100582b6:	21ff      	movs	r1, #255	; 0xff
100582b8:	4668      	mov	r0, sp
100582ba:	f7e8 fa66 	bl	1004078a <Osal_MemSet>
100582be:	2700      	movs	r7, #0
100582c0:	e035      	b.n	1005832e <Write_Client_Data+0x106>
100582c2:	1c64      	adds	r4, r4, #1
100582c4:	4842      	ldr	r0, [pc, #264]	; (100583d0 <Write_Client_Data+0x1a8>)
100582c6:	00a1      	lsls	r1, r4, #2
100582c8:	1808      	adds	r0, r1, r0
100582ca:	6801      	ldr	r1, [r0, #0]
100582cc:	4668      	mov	r0, sp
100582ce:	f000 f8cd 	bl	1005846c <int32ToLe4Byte>
100582d2:	9808      	ldr	r0, [sp, #32]
100582d4:	2204      	movs	r2, #4
100582d6:	19c0      	adds	r0, r0, r7
100582d8:	4669      	mov	r1, sp
100582da:	f7e8 fa5a 	bl	10040792 <Osal_MemCmp>
100582de:	2800      	cmp	r0, #0
100582e0:	d024      	beq.n	1005832c <Write_Client_Data+0x104>
100582e2:	08b8      	lsrs	r0, r7, #2
100582e4:	1a24      	subs	r4, r4, r0
100582e6:	1e64      	subs	r4, r4, #1
100582e8:	1ea4      	subs	r4, r4, #2
100582ea:	4620      	mov	r0, r4
100582ec:	f000 f9e8 	bl	100586c0 <sdb_invalidate_record>
100582f0:	9804      	ldr	r0, [sp, #16]
100582f2:	0880      	lsrs	r0, r0, #2
100582f4:	1904      	adds	r4, r0, r4
100582f6:	1ce4      	adds	r4, r4, #3
100582f8:	4630      	mov	r0, r6
100582fa:	9903      	ldr	r1, [sp, #12]
100582fc:	1c76      	adds	r6, r6, #1
100582fe:	4288      	cmp	r0, r1
10058300:	d39f      	bcc.n	10058242 <Write_Client_Data+0x1a>
10058302:	428e      	cmp	r6, r1
10058304:	d810      	bhi.n	10058328 <Write_Client_Data+0x100>
10058306:	4833      	ldr	r0, [pc, #204]	; (100583d4 <Write_Client_Data+0x1ac>)
10058308:	6801      	ldr	r1, [r0, #0]
1005830a:	2009      	movs	r0, #9
1005830c:	0200      	lsls	r0, r0, #8
1005830e:	1808      	adds	r0, r1, r0
10058310:	6f82      	ldr	r2, [r0, #120]	; 0x78
10058312:	6f41      	ldr	r1, [r0, #116]	; 0x74
10058314:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
10058316:	1889      	adds	r1, r1, r2
10058318:	1e40      	subs	r0, r0, #1
1005831a:	1808      	adds	r0, r1, r0
1005831c:	9907      	ldr	r1, [sp, #28]
1005831e:	310c      	adds	r1, #12
10058320:	0889      	lsrs	r1, r1, #2
10058322:	1909      	adds	r1, r1, r4
10058324:	4288      	cmp	r0, r1
10058326:	d206      	bcs.n	10058336 <Write_Client_Data+0x10e>
10058328:	205d      	movs	r0, #93	; 0x5d
1005832a:	e797      	b.n	1005825c <Write_Client_Data+0x34>
1005832c:	1d3f      	adds	r7, r7, #4
1005832e:	9804      	ldr	r0, [sp, #16]
10058330:	4287      	cmp	r7, r0
10058332:	d3c6      	bcc.n	100582c2 <Write_Client_Data+0x9a>
10058334:	e04a      	b.n	100583cc <Write_Client_Data+0x1a4>
10058336:	20fe      	movs	r0, #254	; 0xfe
10058338:	4669      	mov	r1, sp
1005833a:	7008      	strb	r0, [r1, #0]
1005833c:	7828      	ldrb	r0, [r5, #0]
1005833e:	7048      	strb	r0, [r1, #1]
10058340:	7868      	ldrb	r0, [r5, #1]
10058342:	7088      	strb	r0, [r1, #2]
10058344:	78a8      	ldrb	r0, [r5, #2]
10058346:	70c8      	strb	r0, [r1, #3]
10058348:	9900      	ldr	r1, [sp, #0]
1005834a:	0600      	lsls	r0, r0, #24
1005834c:	0209      	lsls	r1, r1, #8
1005834e:	0a09      	lsrs	r1, r1, #8
10058350:	4301      	orrs	r1, r0
10058352:	4620      	mov	r0, r4
10058354:	f7fc fa38 	bl	100547c8 <Flash_Write_Flagged>
10058358:	2800      	cmp	r0, #0
1005835a:	d131      	bne.n	100583c0 <Write_Client_Data+0x198>
1005835c:	78e9      	ldrb	r1, [r5, #3]
1005835e:	4668      	mov	r0, sp
10058360:	7001      	strb	r1, [r0, #0]
10058362:	7929      	ldrb	r1, [r5, #4]
10058364:	7041      	strb	r1, [r0, #1]
10058366:	7969      	ldrb	r1, [r5, #5]
10058368:	7081      	strb	r1, [r0, #2]
1005836a:	21ff      	movs	r1, #255	; 0xff
1005836c:	70c1      	strb	r1, [r0, #3]
1005836e:	9800      	ldr	r0, [sp, #0]
10058370:	1c64      	adds	r4, r4, #1
10058372:	0201      	lsls	r1, r0, #8
10058374:	20ff      	movs	r0, #255	; 0xff
10058376:	0a09      	lsrs	r1, r1, #8
10058378:	0600      	lsls	r0, r0, #24
1005837a:	4301      	orrs	r1, r0
1005837c:	4620      	mov	r0, r4
1005837e:	f7fc fa23 	bl	100547c8 <Flash_Write_Flagged>
10058382:	2800      	cmp	r0, #0
10058384:	d11c      	bne.n	100583c0 <Write_Client_Data+0x198>
10058386:	1c64      	adds	r4, r4, #1
10058388:	4620      	mov	r0, r4
1005838a:	9907      	ldr	r1, [sp, #28]
1005838c:	f7fc fa1c 	bl	100547c8 <Flash_Write_Flagged>
10058390:	2800      	cmp	r0, #0
10058392:	d115      	bne.n	100583c0 <Write_Client_Data+0x198>
10058394:	9807      	ldr	r0, [sp, #28]
10058396:	2500      	movs	r5, #0
10058398:	0781      	lsls	r1, r0, #30
1005839a:	0f89      	lsrs	r1, r1, #30
1005839c:	180f      	adds	r7, r1, r0
1005839e:	1c64      	adds	r4, r4, #1
100583a0:	e012      	b.n	100583c8 <Write_Client_Data+0x1a0>
100583a2:	9808      	ldr	r0, [sp, #32]
100583a4:	1946      	adds	r6, r0, r5
100583a6:	4630      	mov	r0, r6
100583a8:	f7e8 f84e 	bl	10040448 <__aeabi_uread4>
100583ac:	0201      	lsls	r1, r0, #8
100583ae:	78f0      	ldrb	r0, [r6, #3]
100583b0:	0a09      	lsrs	r1, r1, #8
100583b2:	0600      	lsls	r0, r0, #24
100583b4:	4301      	orrs	r1, r0
100583b6:	4620      	mov	r0, r4
100583b8:	f7fc fa06 	bl	100547c8 <Flash_Write_Flagged>
100583bc:	2800      	cmp	r0, #0
100583be:	d001      	beq.n	100583c4 <Write_Client_Data+0x19c>
100583c0:	20fb      	movs	r0, #251	; 0xfb
100583c2:	e74b      	b.n	1005825c <Write_Client_Data+0x34>
100583c4:	1c64      	adds	r4, r4, #1
100583c6:	1d2d      	adds	r5, r5, #4
100583c8:	42bd      	cmp	r5, r7
100583ca:	d3ea      	bcc.n	100583a2 <Write_Client_Data+0x17a>
100583cc:	2000      	movs	r0, #0
100583ce:	e745      	b.n	1005825c <Write_Client_Data+0x34>
100583d0:	10040000 	.word	0x10040000
100583d4:	20000d64 	.word	0x20000d64

100583d8 <_SDB_Get_All_Bonded_Devices>:
100583d8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100583da:	b097      	sub	sp, #92	; 0x5c
100583dc:	200c      	movs	r0, #12
100583de:	9016      	str	r0, [sp, #88]	; 0x58
100583e0:	2014      	movs	r0, #20
100583e2:	9015      	str	r0, [sp, #84]	; 0x54
100583e4:	4820      	ldr	r0, [pc, #128]	; (10058468 <_SDB_Get_All_Bonded_Devices+0x90>)
100583e6:	2500      	movs	r5, #0
100583e8:	6800      	ldr	r0, [r0, #0]
100583ea:	2109      	movs	r1, #9
100583ec:	0209      	lsls	r1, r1, #8
100583ee:	1840      	adds	r0, r0, r1
100583f0:	4669      	mov	r1, sp
100583f2:	6f46      	ldr	r6, [r0, #116]	; 0x74
100583f4:	700d      	strb	r5, [r1, #0]
100583f6:	461f      	mov	r7, r3
100583f8:	462c      	mov	r4, r5
100583fa:	701d      	strb	r5, [r3, #0]
100583fc:	4669      	mov	r1, sp
100583fe:	4630      	mov	r0, r6
10058400:	f000 f980 	bl	10058704 <sdb_read_record_validity>
10058404:	4668      	mov	r0, sp
10058406:	1c6d      	adds	r5, r5, #1
10058408:	7800      	ldrb	r0, [r0, #0]
1005840a:	b2ed      	uxtb	r5, r5
1005840c:	28fe      	cmp	r0, #254	; 0xfe
1005840e:	d00b      	beq.n	10058428 <_SDB_Get_All_Bonded_Devices+0x50>
10058410:	28ff      	cmp	r0, #255	; 0xff
10058412:	d004      	beq.n	1005841e <_SDB_Get_All_Bonded_Devices+0x46>
10058414:	9815      	ldr	r0, [sp, #84]	; 0x54
10058416:	1836      	adds	r6, r6, r0
10058418:	9816      	ldr	r0, [sp, #88]	; 0x58
1005841a:	4285      	cmp	r5, r0
1005841c:	d3ee      	bcc.n	100583fc <_SDB_Get_All_Bonded_Devices+0x24>
1005841e:	9817      	ldr	r0, [sp, #92]	; 0x5c
10058420:	7004      	strb	r4, [r0, #0]
10058422:	2000      	movs	r0, #0
10058424:	b01b      	add	sp, #108	; 0x6c
10058426:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058428:	a901      	add	r1, sp, #4
1005842a:	4630      	mov	r0, r6
1005842c:	f000 f958 	bl	100586e0 <sdb_read_record>
10058430:	9919      	ldr	r1, [sp, #100]	; 0x64
10058432:	1de0      	adds	r0, r4, #7
10058434:	4288      	cmp	r0, r1
10058436:	d901      	bls.n	1005843c <_SDB_Get_All_Bonded_Devices+0x64>
10058438:	2064      	movs	r0, #100	; 0x64
1005843a:	e7f3      	b.n	10058424 <_SDB_Get_All_Bonded_Devices+0x4c>
1005843c:	4668      	mov	r0, sp
1005843e:	7940      	ldrb	r0, [r0, #5]
10058440:	2206      	movs	r2, #6
10058442:	07c1      	lsls	r1, r0, #31
10058444:	9818      	ldr	r0, [sp, #96]	; 0x60
10058446:	0fc9      	lsrs	r1, r1, #31
10058448:	5501      	strb	r1, [r0, r4]
1005844a:	1c64      	adds	r4, r4, #1
1005844c:	9818      	ldr	r0, [sp, #96]	; 0x60
1005844e:	b2a4      	uxth	r4, r4
10058450:	a910      	add	r1, sp, #64	; 0x40
10058452:	1900      	adds	r0, r0, r4
10058454:	3102      	adds	r1, #2
10058456:	f7e8 f994 	bl	10040782 <Osal_MemCpy>
1005845a:	1da4      	adds	r4, r4, #6
1005845c:	7838      	ldrb	r0, [r7, #0]
1005845e:	b2a4      	uxth	r4, r4
10058460:	1c40      	adds	r0, r0, #1
10058462:	7038      	strb	r0, [r7, #0]
10058464:	e7d6      	b.n	10058414 <_SDB_Get_All_Bonded_Devices+0x3c>
10058466:	0000      	.short	0x0000
10058468:	20000d64 	.word	0x20000d64

1005846c <int32ToLe4Byte>:
1005846c:	7001      	strb	r1, [r0, #0]
1005846e:	0a0a      	lsrs	r2, r1, #8
10058470:	7042      	strb	r2, [r0, #1]
10058472:	0c0a      	lsrs	r2, r1, #16
10058474:	7082      	strb	r2, [r0, #2]
10058476:	0e09      	lsrs	r1, r1, #24
10058478:	70c1      	strb	r1, [r0, #3]
1005847a:	4770      	bx	lr

1005847c <sdb_delete>:
1005847c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005847e:	b0ff      	sub	sp, #508	; 0x1fc
10058480:	b0ff      	sub	sp, #508	; 0x1fc
10058482:	2000      	movs	r0, #0
10058484:	b087      	sub	sp, #28
10058486:	4f55      	ldr	r7, [pc, #340]	; (100585dc <sdb_delete+0x160>)
10058488:	9000      	str	r0, [sp, #0]
1005848a:	9001      	str	r0, [sp, #4]
1005848c:	9002      	str	r0, [sp, #8]
1005848e:	9003      	str	r0, [sp, #12]
10058490:	2209      	movs	r2, #9
10058492:	6839      	ldr	r1, [r7, #0]
10058494:	0212      	lsls	r2, r2, #8
10058496:	1889      	adds	r1, r1, r2
10058498:	6f4e      	ldr	r6, [r1, #116]	; 0x74
1005849a:	9006      	str	r0, [sp, #24]
1005849c:	4669      	mov	r1, sp
1005849e:	9005      	str	r0, [sp, #20]
100584a0:	4605      	mov	r5, r0
100584a2:	7408      	strb	r0, [r1, #16]
100584a4:	4604      	mov	r4, r0
100584a6:	a904      	add	r1, sp, #16
100584a8:	4630      	mov	r0, r6
100584aa:	1c6d      	adds	r5, r5, #1
100584ac:	f000 f92a 	bl	10058704 <sdb_read_record_validity>
100584b0:	4668      	mov	r0, sp
100584b2:	7c00      	ldrb	r0, [r0, #16]
100584b4:	28fe      	cmp	r0, #254	; 0xfe
100584b6:	d00e      	beq.n	100584d6 <sdb_delete+0x5a>
100584b8:	28ff      	cmp	r0, #255	; 0xff
100584ba:	d011      	beq.n	100584e0 <sdb_delete+0x64>
100584bc:	2800      	cmp	r0, #0
100584be:	d00c      	beq.n	100584da <sdb_delete+0x5e>
100584c0:	2009      	movs	r0, #9
100584c2:	6839      	ldr	r1, [r7, #0]
100584c4:	0200      	lsls	r0, r0, #8
100584c6:	1808      	adds	r0, r1, r0
100584c8:	6f40      	ldr	r0, [r0, #116]	; 0x74
100584ca:	f7ff fb86 	bl	10057bda <Erase_Sector>
100584ce:	b07f      	add	sp, #508	; 0x1fc
100584d0:	b07f      	add	sp, #508	; 0x1fc
100584d2:	b007      	add	sp, #28
100584d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100584d6:	1c64      	adds	r4, r4, #1
100584d8:	b2e4      	uxtb	r4, r4
100584da:	3614      	adds	r6, #20
100584dc:	2d0c      	cmp	r5, #12
100584de:	d3e2      	bcc.n	100584a6 <sdb_delete+0x2a>
100584e0:	4625      	mov	r5, r4
100584e2:	2c04      	cmp	r4, #4
100584e4:	d900      	bls.n	100584e8 <sdb_delete+0x6c>
100584e6:	2404      	movs	r4, #4
100584e8:	1b28      	subs	r0, r5, r4
100584ea:	b2c0      	uxtb	r0, r0
100584ec:	9007      	str	r0, [sp, #28]
100584ee:	483b      	ldr	r0, [pc, #236]	; (100585dc <sdb_delete+0x160>)
100584f0:	2109      	movs	r1, #9
100584f2:	6800      	ldr	r0, [r0, #0]
100584f4:	2600      	movs	r6, #0
100584f6:	0209      	lsls	r1, r1, #8
100584f8:	1840      	adds	r0, r0, r1
100584fa:	6f47      	ldr	r7, [r0, #116]	; 0x74
100584fc:	e00f      	b.n	1005851e <sdb_delete+0xa2>
100584fe:	a904      	add	r1, sp, #16
10058500:	4638      	mov	r0, r7
10058502:	f000 f8ff 	bl	10058704 <sdb_read_record_validity>
10058506:	4668      	mov	r0, sp
10058508:	7c00      	ldrb	r0, [r0, #16]
1005850a:	28fe      	cmp	r0, #254	; 0xfe
1005850c:	d106      	bne.n	1005851c <sdb_delete+0xa0>
1005850e:	9807      	ldr	r0, [sp, #28]
10058510:	2800      	cmp	r0, #0
10058512:	d016      	beq.n	10058542 <sdb_delete+0xc6>
10058514:	1e40      	subs	r0, r0, #1
10058516:	b2c0      	uxtb	r0, r0
10058518:	9007      	str	r0, [sp, #28]
1005851a:	1c76      	adds	r6, r6, #1
1005851c:	3714      	adds	r7, #20
1005851e:	42ae      	cmp	r6, r5
10058520:	d3ed      	bcc.n	100584fe <sdb_delete+0x82>
10058522:	4d2e      	ldr	r5, [pc, #184]	; (100585dc <sdb_delete+0x160>)
10058524:	2609      	movs	r6, #9
10058526:	6828      	ldr	r0, [r5, #0]
10058528:	0236      	lsls	r6, r6, #8
1005852a:	1980      	adds	r0, r0, r6
1005852c:	6f40      	ldr	r0, [r0, #116]	; 0x74
1005852e:	01c0      	lsls	r0, r0, #7
10058530:	0c00      	lsrs	r0, r0, #16
10058532:	f7e8 fe4f 	bl	100411d4 <FLASH_ErasePage>
10058536:	6828      	ldr	r0, [r5, #0]
10058538:	1980      	adds	r0, r0, r6
1005853a:	2600      	movs	r6, #0
1005853c:	4635      	mov	r5, r6
1005853e:	6f47      	ldr	r7, [r0, #116]	; 0x74
10058540:	e048      	b.n	100585d4 <sdb_delete+0x158>
10058542:	9906      	ldr	r1, [sp, #24]
10058544:	2050      	movs	r0, #80	; 0x50
10058546:	4341      	muls	r1, r0
10058548:	a8b4      	add	r0, sp, #720	; 0x2d0
1005854a:	1808      	adds	r0, r1, r0
1005854c:	4601      	mov	r1, r0
1005854e:	9009      	str	r0, [sp, #36]	; 0x24
10058550:	4638      	mov	r0, r7
10058552:	f000 f8c5 	bl	100586e0 <sdb_read_record>
10058556:	2155      	movs	r1, #85	; 0x55
10058558:	9805      	ldr	r0, [sp, #20]
1005855a:	00c9      	lsls	r1, r1, #3
1005855c:	1a0a      	subs	r2, r1, r0
1005855e:	9806      	ldr	r0, [sp, #24]
10058560:	466b      	mov	r3, sp
10058562:	0080      	lsls	r0, r0, #2
10058564:	9008      	str	r0, [sp, #32]
10058566:	501a      	str	r2, [r3, r0]
10058568:	9a05      	ldr	r2, [sp, #20]
1005856a:	a90a      	add	r1, sp, #40	; 0x28
1005856c:	188a      	adds	r2, r1, r2
1005856e:	4669      	mov	r1, sp
10058570:	1841      	adds	r1, r0, r1
10058572:	9809      	ldr	r0, [sp, #36]	; 0x24
10058574:	303e      	adds	r0, #62	; 0x3e
10058576:	f000 f833 	bl	100585e0 <sdb_find_client_data>
1005857a:	2800      	cmp	r0, #0
1005857c:	d007      	beq.n	1005858e <sdb_delete+0x112>
1005857e:	9908      	ldr	r1, [sp, #32]
10058580:	2000      	movs	r0, #0
10058582:	466a      	mov	r2, sp
10058584:	5050      	str	r0, [r2, r1]
10058586:	9806      	ldr	r0, [sp, #24]
10058588:	1c40      	adds	r0, r0, #1
1005858a:	9006      	str	r0, [sp, #24]
1005858c:	e7c5      	b.n	1005851a <sdb_delete+0x9e>
1005858e:	9808      	ldr	r0, [sp, #32]
10058590:	4669      	mov	r1, sp
10058592:	5809      	ldr	r1, [r1, r0]
10058594:	9805      	ldr	r0, [sp, #20]
10058596:	1808      	adds	r0, r1, r0
10058598:	9005      	str	r0, [sp, #20]
1005859a:	e7f4      	b.n	10058586 <sdb_delete+0x10a>
1005859c:	2050      	movs	r0, #80	; 0x50
1005859e:	4629      	mov	r1, r5
100585a0:	4341      	muls	r1, r0
100585a2:	a8b4      	add	r0, sp, #720	; 0x2d0
100585a4:	1809      	adds	r1, r1, r0
100585a6:	2200      	movs	r2, #0
100585a8:	4638      	mov	r0, r7
100585aa:	9106      	str	r1, [sp, #24]
100585ac:	f000 f8b2 	bl	10058714 <sdb_write_record>
100585b0:	00a8      	lsls	r0, r5, #2
100585b2:	4669      	mov	r1, sp
100585b4:	9005      	str	r0, [sp, #20]
100585b6:	5809      	ldr	r1, [r1, r0]
100585b8:	3714      	adds	r7, #20
100585ba:	2900      	cmp	r1, #0
100585bc:	d005      	beq.n	100585ca <sdb_delete+0x14e>
100585be:	a80a      	add	r0, sp, #40	; 0x28
100585c0:	1982      	adds	r2, r0, r6
100585c2:	9806      	ldr	r0, [sp, #24]
100585c4:	303e      	adds	r0, #62	; 0x3e
100585c6:	f7ff fe2f 	bl	10058228 <Write_Client_Data>
100585ca:	9805      	ldr	r0, [sp, #20]
100585cc:	4669      	mov	r1, sp
100585ce:	5808      	ldr	r0, [r1, r0]
100585d0:	1986      	adds	r6, r0, r6
100585d2:	1c6d      	adds	r5, r5, #1
100585d4:	42a5      	cmp	r5, r4
100585d6:	d3e1      	bcc.n	1005859c <sdb_delete+0x120>
100585d8:	2000      	movs	r0, #0
100585da:	e778      	b.n	100584ce <sdb_delete+0x52>
100585dc:	20000d64 	.word	0x20000d64

100585e0 <sdb_find_client_data>:
100585e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100585e2:	b086      	sub	sp, #24
100585e4:	460f      	mov	r7, r1
100585e6:	f000 f85f 	bl	100586a8 <sdb_get_gatt_db_start_address>
100585ea:	4604      	mov	r4, r0
100585ec:	2000      	movs	r0, #0
100585ee:	4669      	mov	r1, sp
100585f0:	7208      	strb	r0, [r1, #8]
100585f2:	4606      	mov	r6, r0
100585f4:	6838      	ldr	r0, [r7, #0]
100585f6:	9004      	str	r0, [sp, #16]
100585f8:	200c      	movs	r0, #12
100585fa:	9003      	str	r0, [sp, #12]
100585fc:	a902      	add	r1, sp, #8
100585fe:	4620      	mov	r0, r4
10058600:	f000 f880 	bl	10058704 <sdb_read_record_validity>
10058604:	4668      	mov	r0, sp
10058606:	7a01      	ldrb	r1, [r0, #8]
10058608:	1c76      	adds	r6, r6, #1
1005860a:	29ff      	cmp	r1, #255	; 0xff
1005860c:	d032      	beq.n	10058674 <sdb_find_client_data+0x94>
1005860e:	29fe      	cmp	r1, #254	; 0xfe
10058610:	d004      	beq.n	1005861c <sdb_find_client_data+0x3c>
10058612:	2900      	cmp	r1, #0
10058614:	d002      	beq.n	1005861c <sdb_find_client_data+0x3c>
10058616:	20fa      	movs	r0, #250	; 0xfa
10058618:	b009      	add	sp, #36	; 0x24
1005861a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005861c:	4821      	ldr	r0, [pc, #132]	; (100586a4 <sdb_find_client_data+0xc4>)
1005861e:	00a2      	lsls	r2, r4, #2
10058620:	1812      	adds	r2, r2, r0
10058622:	6813      	ldr	r3, [r2, #0]
10058624:	466a      	mov	r2, sp
10058626:	0a1d      	lsrs	r5, r3, #8
10058628:	7015      	strb	r5, [r2, #0]
1005862a:	0c1d      	lsrs	r5, r3, #16
1005862c:	7055      	strb	r5, [r2, #1]
1005862e:	0e1b      	lsrs	r3, r3, #24
10058630:	7093      	strb	r3, [r2, #2]
10058632:	1c64      	adds	r4, r4, #1
10058634:	00a2      	lsls	r2, r4, #2
10058636:	1812      	adds	r2, r2, r0
10058638:	6813      	ldr	r3, [r2, #0]
1005863a:	466a      	mov	r2, sp
1005863c:	70d3      	strb	r3, [r2, #3]
1005863e:	0a1d      	lsrs	r5, r3, #8
10058640:	7115      	strb	r5, [r2, #4]
10058642:	0c1b      	lsrs	r3, r3, #16
10058644:	7153      	strb	r3, [r2, #5]
10058646:	1c64      	adds	r4, r4, #1
10058648:	00a2      	lsls	r2, r4, #2
1005864a:	1810      	adds	r0, r2, r0
1005864c:	6805      	ldr	r5, [r0, #0]
1005864e:	29fe      	cmp	r1, #254	; 0xfe
10058650:	d106      	bne.n	10058660 <sdb_find_client_data+0x80>
10058652:	2206      	movs	r2, #6
10058654:	4668      	mov	r0, sp
10058656:	9906      	ldr	r1, [sp, #24]
10058658:	f7e8 f89b 	bl	10040792 <Osal_MemCmp>
1005865c:	2800      	cmp	r0, #0
1005865e:	d00b      	beq.n	10058678 <sdb_find_client_data+0x98>
10058660:	08a8      	lsrs	r0, r5, #2
10058662:	1904      	adds	r4, r0, r4
10058664:	1c64      	adds	r4, r4, #1
10058666:	a902      	add	r1, sp, #8
10058668:	4620      	mov	r0, r4
1005866a:	f000 f84b 	bl	10058704 <sdb_read_record_validity>
1005866e:	9803      	ldr	r0, [sp, #12]
10058670:	4286      	cmp	r6, r0
10058672:	d3c7      	bcc.n	10058604 <sdb_find_client_data+0x24>
10058674:	205c      	movs	r0, #92	; 0x5c
10058676:	e7cf      	b.n	10058618 <sdb_find_client_data+0x38>
10058678:	9804      	ldr	r0, [sp, #16]
1005867a:	4285      	cmp	r5, r0
1005867c:	d901      	bls.n	10058682 <sdb_find_client_data+0xa2>
1005867e:	2048      	movs	r0, #72	; 0x48
10058680:	e7ca      	b.n	10058618 <sdb_find_client_data+0x38>
10058682:	603d      	str	r5, [r7, #0]
10058684:	2600      	movs	r6, #0
10058686:	4f07      	ldr	r7, [pc, #28]	; (100586a4 <sdb_find_client_data+0xc4>)
10058688:	e008      	b.n	1005869c <sdb_find_client_data+0xbc>
1005868a:	1c64      	adds	r4, r4, #1
1005868c:	00a0      	lsls	r0, r4, #2
1005868e:	19c0      	adds	r0, r0, r7
10058690:	6801      	ldr	r1, [r0, #0]
10058692:	9808      	ldr	r0, [sp, #32]
10058694:	1980      	adds	r0, r0, r6
10058696:	f7ff fee9 	bl	1005846c <int32ToLe4Byte>
1005869a:	1d36      	adds	r6, r6, #4
1005869c:	42ae      	cmp	r6, r5
1005869e:	d3f4      	bcc.n	1005868a <sdb_find_client_data+0xaa>
100586a0:	2000      	movs	r0, #0
100586a2:	e7b9      	b.n	10058618 <sdb_find_client_data+0x38>
100586a4:	10040000 	.word	0x10040000

100586a8 <sdb_get_gatt_db_start_address>:
100586a8:	4804      	ldr	r0, [pc, #16]	; (100586bc <sdb_get_gatt_db_start_address+0x14>)
100586aa:	6801      	ldr	r1, [r0, #0]
100586ac:	2009      	movs	r0, #9
100586ae:	0200      	lsls	r0, r0, #8
100586b0:	1808      	adds	r0, r1, r0
100586b2:	6f41      	ldr	r1, [r0, #116]	; 0x74
100586b4:	6f80      	ldr	r0, [r0, #120]	; 0x78
100586b6:	1808      	adds	r0, r1, r0
100586b8:	4770      	bx	lr
100586ba:	0000      	.short	0x0000
100586bc:	20000d64 	.word	0x20000d64

100586c0 <sdb_invalidate_record>:
100586c0:	0081      	lsls	r1, r0, #2
100586c2:	b510      	push	{r4, lr}
100586c4:	4805      	ldr	r0, [pc, #20]	; (100586dc <sdb_invalidate_record+0x1c>)
100586c6:	180c      	adds	r4, r1, r0
100586c8:	6820      	ldr	r0, [r4, #0]
100586ca:	0a01      	lsrs	r1, r0, #8
100586cc:	0209      	lsls	r1, r1, #8
100586ce:	4620      	mov	r0, r4
100586d0:	f7e8 fd98 	bl	10041204 <FLASH_ProgramWord>
100586d4:	6820      	ldr	r0, [r4, #0]
100586d6:	2000      	movs	r0, #0
100586d8:	bd10      	pop	{r4, pc}
100586da:	0000      	.short	0x0000
100586dc:	10040000 	.word	0x10040000

100586e0 <sdb_read_record>:
100586e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100586e2:	4f07      	ldr	r7, [pc, #28]	; (10058700 <sdb_read_record+0x20>)
100586e4:	460e      	mov	r6, r1
100586e6:	4604      	mov	r4, r0
100586e8:	2500      	movs	r5, #0
100586ea:	00a0      	lsls	r0, r4, #2
100586ec:	19c0      	adds	r0, r0, r7
100586ee:	6801      	ldr	r1, [r0, #0]
100586f0:	1970      	adds	r0, r6, r5
100586f2:	f7ff febb 	bl	1005846c <int32ToLe4Byte>
100586f6:	1c64      	adds	r4, r4, #1
100586f8:	1d2d      	adds	r5, r5, #4
100586fa:	2d50      	cmp	r5, #80	; 0x50
100586fc:	d3f5      	bcc.n	100586ea <sdb_read_record+0xa>
100586fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10058700:	10040000 	.word	0x10040000

10058704 <sdb_read_record_validity>:
10058704:	4a02      	ldr	r2, [pc, #8]	; (10058710 <sdb_read_record_validity+0xc>)
10058706:	0080      	lsls	r0, r0, #2
10058708:	1880      	adds	r0, r0, r2
1005870a:	6800      	ldr	r0, [r0, #0]
1005870c:	7008      	strb	r0, [r1, #0]
1005870e:	4770      	bx	lr
10058710:	10040000 	.word	0x10040000

10058714 <sdb_write_record>:
10058714:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10058716:	2400      	movs	r4, #0
10058718:	2650      	movs	r6, #80	; 0x50
1005871a:	4605      	mov	r5, r0
1005871c:	2a00      	cmp	r2, #0
1005871e:	d020      	beq.n	10058762 <sdb_write_record+0x4e>
10058720:	2700      	movs	r7, #0
10058722:	2009      	movs	r0, #9
10058724:	06c0      	lsls	r0, r0, #27
10058726:	6901      	ldr	r1, [r0, #16]
10058728:	6842      	ldr	r2, [r0, #4]
1005872a:	0152      	lsls	r2, r2, #5
1005872c:	0f52      	lsrs	r2, r2, #29
1005872e:	2a03      	cmp	r2, #3
10058730:	d00e      	beq.n	10058750 <sdb_write_record+0x3c>
10058732:	6842      	ldr	r2, [r0, #4]
10058734:	0152      	lsls	r2, r2, #5
10058736:	0f52      	lsrs	r2, r2, #29
10058738:	d00a      	beq.n	10058750 <sdb_write_record+0x3c>
1005873a:	6840      	ldr	r0, [r0, #4]
1005873c:	1a40      	subs	r0, r0, r1
1005873e:	0200      	lsls	r0, r0, #8
10058740:	0a00      	lsrs	r0, r0, #8
10058742:	f7fe ff6d 	bl	10057620 <system_time_trans>
10058746:	4601      	mov	r1, r0
10058748:	4810      	ldr	r0, [pc, #64]	; (1005878c <sdb_write_record+0x78>)
1005874a:	4281      	cmp	r1, r0
1005874c:	d809      	bhi.n	10058762 <sdb_write_record+0x4e>
1005874e:	e003      	b.n	10058758 <sdb_write_record+0x44>
10058750:	20ff      	movs	r0, #255	; 0xff
10058752:	30f5      	adds	r0, #245	; 0xf5
10058754:	f003 fae2 	bl	1005bd1c <Delay_With_NOP_Cycles>
10058758:	207d      	movs	r0, #125	; 0x7d
1005875a:	00c0      	lsls	r0, r0, #3
1005875c:	1c7f      	adds	r7, r7, #1
1005875e:	4287      	cmp	r7, r0
10058760:	dbdf      	blt.n	10058722 <sdb_write_record+0xe>
10058762:	9801      	ldr	r0, [sp, #4]
10058764:	1900      	adds	r0, r0, r4
10058766:	7807      	ldrb	r7, [r0, #0]
10058768:	7841      	ldrb	r1, [r0, #1]
1005876a:	020b      	lsls	r3, r1, #8
1005876c:	7881      	ldrb	r1, [r0, #2]
1005876e:	78c0      	ldrb	r0, [r0, #3]
10058770:	040a      	lsls	r2, r1, #16
10058772:	0601      	lsls	r1, r0, #24
10058774:	4311      	orrs	r1, r2
10058776:	4319      	orrs	r1, r3
10058778:	4339      	orrs	r1, r7
1005877a:	4628      	mov	r0, r5
1005877c:	f7fc f824 	bl	100547c8 <Flash_Write_Flagged>
10058780:	1d24      	adds	r4, r4, #4
10058782:	1c6d      	adds	r5, r5, #1
10058784:	42b4      	cmp	r4, r6
10058786:	d3ec      	bcc.n	10058762 <sdb_write_record+0x4e>
10058788:	2000      	movs	r0, #0
1005878a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005878c:	000004cc 	.word	0x000004cc

10058790 <SMP_MI_PairingRequest_Send>:
10058790:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10058792:	460e      	mov	r6, r1
10058794:	b084      	sub	sp, #16
10058796:	2107      	movs	r1, #7
10058798:	9101      	str	r1, [sp, #4]
1005879a:	9100      	str	r1, [sp, #0]
1005879c:	f002 f8aa 	bl	1005a8f4 <SMP_get_remote_device_list_item>
100587a0:	0004      	movs	r4, r0
100587a2:	d004      	beq.n	100587ae <SMP_MI_PairingRequest_Send+0x1e>
100587a4:	2074      	movs	r0, #116	; 0x74
100587a6:	5d00      	ldrb	r0, [r0, r4]
100587a8:	07c0      	lsls	r0, r0, #31
100587aa:	d11d      	bne.n	100587e8 <SMP_MI_PairingRequest_Send+0x58>
100587ac:	e002      	b.n	100587b4 <SMP_MI_PairingRequest_Send+0x24>
100587ae:	2040      	movs	r0, #64	; 0x40
100587b0:	b007      	add	sp, #28
100587b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100587b4:	1ca0      	adds	r0, r4, #2
100587b6:	f002 fe99 	bl	1005b4ec <smp_search_blacklist>
100587ba:	2800      	cmp	r0, #0
100587bc:	d016      	beq.n	100587ec <SMP_MI_PairingRequest_Send+0x5c>
100587be:	7ba0      	ldrb	r0, [r4, #14]
100587c0:	06c0      	lsls	r0, r0, #27
100587c2:	d411      	bmi.n	100587e8 <SMP_MI_PairingRequest_Send+0x58>
100587c4:	4d44      	ldr	r5, [pc, #272]	; (100588d8 <SMP_MI_PairingRequest_Send+0x148>)
100587c6:	6828      	ldr	r0, [r5, #0]
100587c8:	7d81      	ldrb	r1, [r0, #22]
100587ca:	084a      	lsrs	r2, r1, #1
100587cc:	4311      	orrs	r1, r2
100587ce:	07c9      	lsls	r1, r1, #31
100587d0:	d002      	beq.n	100587d8 <SMP_MI_PairingRequest_Send+0x48>
100587d2:	7e81      	ldrb	r1, [r0, #26]
100587d4:	0749      	lsls	r1, r1, #29
100587d6:	d407      	bmi.n	100587e8 <SMP_MI_PairingRequest_Send+0x58>
100587d8:	2100      	movs	r1, #0
100587da:	9102      	str	r1, [sp, #8]
100587dc:	73a1      	strb	r1, [r4, #14]
100587de:	7aa1      	ldrb	r1, [r4, #10]
100587e0:	2900      	cmp	r1, #0
100587e2:	d007      	beq.n	100587f4 <SMP_MI_PairingRequest_Send+0x64>
100587e4:	29f1      	cmp	r1, #241	; 0xf1
100587e6:	d003      	beq.n	100587f0 <SMP_MI_PairingRequest_Send+0x60>
100587e8:	2046      	movs	r0, #70	; 0x46
100587ea:	e7e1      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
100587ec:	2059      	movs	r0, #89	; 0x59
100587ee:	e7df      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
100587f0:	07f1      	lsls	r1, r6, #31
100587f2:	d01e      	beq.n	10058832 <SMP_MI_PairingRequest_Send+0xa2>
100587f4:	7e80      	ldrb	r0, [r0, #26]
100587f6:	43c0      	mvns	r0, r0
100587f8:	0780      	lsls	r0, r0, #30
100587fa:	d020      	beq.n	1005883e <SMP_MI_PairingRequest_Send+0xae>
100587fc:	8920      	ldrh	r0, [r4, #8]
100587fe:	2220      	movs	r2, #32
10058800:	0501      	lsls	r1, r0, #20
10058802:	0d09      	lsrs	r1, r1, #20
10058804:	2000      	movs	r0, #0
10058806:	f7fc f911 	bl	10054a2c <PM_Get_Pckt>
1005880a:	0007      	movs	r7, r0
1005880c:	d019      	beq.n	10058842 <SMP_MI_PairingRequest_Send+0xb2>
1005880e:	20a0      	movs	r0, #160	; 0xa0
10058810:	72a0      	strb	r0, [r4, #10]
10058812:	7ee0      	ldrb	r0, [r4, #27]
10058814:	212f      	movs	r1, #47	; 0x2f
10058816:	4008      	ands	r0, r1
10058818:	76e0      	strb	r0, [r4, #27]
1005881a:	07b0      	lsls	r0, r6, #30
1005881c:	d503      	bpl.n	10058826 <SMP_MI_PairingRequest_Send+0x96>
1005881e:	7ba0      	ldrb	r0, [r4, #14]
10058820:	2120      	movs	r1, #32
10058822:	4308      	orrs	r0, r1
10058824:	73a0      	strb	r0, [r4, #14]
10058826:	9806      	ldr	r0, [sp, #24]
10058828:	2800      	cmp	r0, #0
1005882a:	6828      	ldr	r0, [r5, #0]
1005882c:	d00b      	beq.n	10058846 <SMP_MI_PairingRequest_Send+0xb6>
1005882e:	7b41      	ldrb	r1, [r0, #13]
10058830:	e00d      	b.n	1005884e <SMP_MI_PairingRequest_Send+0xbe>
10058832:	2001      	movs	r0, #1
10058834:	73a0      	strb	r0, [r4, #14]
10058836:	4620      	mov	r0, r4
10058838:	f7e9 f974 	bl	10041b24 <smp_MI_Start_Encryption_ucfg>
1005883c:	e7b8      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
1005883e:	2038      	movs	r0, #56	; 0x38
10058840:	e7b6      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
10058842:	2064      	movs	r0, #100	; 0x64
10058844:	e7b4      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
10058846:	3080      	adds	r0, #128	; 0x80
10058848:	7b00      	ldrb	r0, [r0, #12]
1005884a:	0740      	lsls	r0, r0, #29
1005884c:	0fc1      	lsrs	r1, r0, #31
1005884e:	6828      	ldr	r0, [r5, #0]
10058850:	7d82      	ldrb	r2, [r0, #22]
10058852:	0853      	lsrs	r3, r2, #1
10058854:	431a      	orrs	r2, r3
10058856:	07d2      	lsls	r2, r2, #31
10058858:	7dc3      	ldrb	r3, [r0, #23]
1005885a:	0fd2      	lsrs	r2, r2, #31
1005885c:	7b00      	ldrb	r0, [r0, #12]
1005885e:	f000 f998 	bl	10058b92 <smp_Build_AuthReq_Field>
10058862:	4606      	mov	r6, r0
10058864:	4620      	mov	r0, r4
10058866:	f002 fce1 	bl	1005b22c <smp_oob_check_is_remote_data_present>
1005886a:	9901      	ldr	r1, [sp, #4]
1005886c:	9800      	ldr	r0, [sp, #0]
1005886e:	9100      	str	r1, [sp, #0]
10058870:	9001      	str	r0, [sp, #4]
10058872:	7e22      	ldrb	r2, [r4, #24]
10058874:	4633      	mov	r3, r6
10058876:	2101      	movs	r1, #1
10058878:	4638      	mov	r0, r7
1005887a:	f000 f997 	bl	10058bac <smp_Build_Pairing_ReqResp_Packet>
1005887e:	4621      	mov	r1, r4
10058880:	4638      	mov	r0, r7
10058882:	f001 fb67 	bl	10059f54 <smp_send_packet>
10058886:	2800      	cmp	r0, #0
10058888:	d002      	beq.n	10058890 <SMP_MI_PairingRequest_Send+0x100>
1005888a:	2041      	movs	r0, #65	; 0x41
1005888c:	9002      	str	r0, [sp, #8]
1005888e:	e78f      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
10058890:	6829      	ldr	r1, [r5, #0]
10058892:	7e88      	ldrb	r0, [r1, #26]
10058894:	43c2      	mvns	r2, r0
10058896:	0792      	lsls	r2, r2, #30
10058898:	d001      	beq.n	1005889e <SMP_MI_PairingRequest_Send+0x10e>
1005889a:	1c40      	adds	r0, r0, #1
1005889c:	7688      	strb	r0, [r1, #26]
1005889e:	4620      	mov	r0, r4
100588a0:	2254      	movs	r2, #84	; 0x54
100588a2:	2100      	movs	r1, #0
100588a4:	3020      	adds	r0, #32
100588a6:	f7e7 ff70 	bl	1004078a <Osal_MemSet>
100588aa:	4630      	mov	r0, r6
100588ac:	2118      	movs	r1, #24
100588ae:	4008      	ands	r0, r1
100588b0:	72e0      	strb	r0, [r4, #11]
100588b2:	7ea0      	ldrb	r0, [r4, #26]
100588b4:	07f1      	lsls	r1, r6, #31
100588b6:	d000      	beq.n	100588ba <SMP_MI_PairingRequest_Send+0x12a>
100588b8:	2102      	movs	r1, #2
100588ba:	4308      	orrs	r0, r1
100588bc:	76a0      	strb	r0, [r4, #26]
100588be:	7ee0      	ldrb	r0, [r4, #27]
100588c0:	0771      	lsls	r1, r6, #29
100588c2:	0fc9      	lsrs	r1, r1, #31
100588c4:	4308      	orrs	r0, r1
100588c6:	76e0      	strb	r0, [r4, #27]
100588c8:	6828      	ldr	r0, [r5, #0]
100588ca:	3080      	adds	r0, #128	; 0x80
100588cc:	72c6      	strb	r6, [r0, #11]
100588ce:	20a1      	movs	r0, #161	; 0xa1
100588d0:	72a0      	strb	r0, [r4, #10]
100588d2:	9802      	ldr	r0, [sp, #8]
100588d4:	e76c      	b.n	100587b0 <SMP_MI_PairingRequest_Send+0x20>
100588d6:	0000      	.short	0x0000
100588d8:	20000d6c 	.word	0x20000d6c

100588dc <SMP_Process_Q>:
100588dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100588de:	b093      	sub	sp, #76	; 0x4c
100588e0:	2000      	movs	r0, #0
100588e2:	9006      	str	r0, [sp, #24]
100588e4:	b672      	cpsid	i
100588e6:	4d61      	ldr	r5, [pc, #388]	; (10058a6c <SMP_Process_Q+0x190>)
100588e8:	2204      	movs	r2, #4
100588ea:	6828      	ldr	r0, [r5, #0]
100588ec:	3040      	adds	r0, #64	; 0x40
100588ee:	79c1      	ldrb	r1, [r0, #7]
100588f0:	4311      	orrs	r1, r2
100588f2:	71c1      	strb	r1, [r0, #7]
100588f4:	b662      	cpsie	i
100588f6:	f7e9 f967 	bl	10041bc8 <smp_sc_check_for_ecc_pk_generation_request_ucfg>
100588fa:	2700      	movs	r7, #0
100588fc:	4e5c      	ldr	r6, [pc, #368]	; (10058a70 <SMP_Process_Q+0x194>)
100588fe:	e073      	b.n	100589e8 <SMP_Process_Q+0x10c>
10058900:	6830      	ldr	r0, [r6, #0]
10058902:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
10058904:	207c      	movs	r0, #124	; 0x7c
10058906:	4378      	muls	r0, r7
10058908:	180c      	adds	r4, r1, r0
1005890a:	d06b      	beq.n	100589e4 <SMP_Process_Q+0x108>
1005890c:	8920      	ldrh	r0, [r4, #8]
1005890e:	2800      	cmp	r0, #0
10058910:	d068      	beq.n	100589e4 <SMP_Process_Q+0x108>
10058912:	7b61      	ldrb	r1, [r4, #13]
10058914:	07c9      	lsls	r1, r1, #31
10058916:	d05f      	beq.n	100589d8 <SMP_Process_Q+0xfc>
10058918:	0500      	lsls	r0, r0, #20
1005891a:	0d00      	lsrs	r0, r0, #20
1005891c:	4621      	mov	r1, r4
1005891e:	312a      	adds	r1, #42	; 0x2a
10058920:	9001      	str	r0, [sp, #4]
10058922:	2210      	movs	r2, #16
10058924:	9111      	str	r1, [sp, #68]	; 0x44
10058926:	a80c      	add	r0, sp, #48	; 0x30
10058928:	f7e7 ff2b 	bl	10040782 <Osal_MemCpy>
1005892c:	a907      	add	r1, sp, #28
1005892e:	4620      	mov	r0, r4
10058930:	f000 fb18 	bl	10058f64 <smp_Get_Long_Term_Key>
10058934:	2800      	cmp	r0, #0
10058936:	d03c      	beq.n	100589b2 <SMP_Process_Q+0xd6>
10058938:	9801      	ldr	r0, [sp, #4]
1005893a:	f7f4 fab8 	bl	1004ceae <hci_le_long_term_key_requested_negative_reply>
1005893e:	900b      	str	r0, [sp, #44]	; 0x2c
10058940:	7b20      	ldrb	r0, [r4, #12]
10058942:	0780      	lsls	r0, r0, #30
10058944:	d00c      	beq.n	10058960 <SMP_Process_Q+0x84>
10058946:	9801      	ldr	r0, [sp, #4]
10058948:	f002 fb56 	bl	1005aff8 <smp_find_remote_device_index>
1005894c:	4602      	mov	r2, r0
1005894e:	4b49      	ldr	r3, [pc, #292]	; (10058a74 <SMP_Process_Q+0x198>)
10058950:	2100      	movs	r1, #0
10058952:	2001      	movs	r0, #1
10058954:	f002 f95e 	bl	1005ac14 <SMP_reset_timer>
10058958:	7b20      	ldrb	r0, [r4, #12]
1005895a:	0900      	lsrs	r0, r0, #4
1005895c:	0100      	lsls	r0, r0, #4
1005895e:	7320      	strb	r0, [r4, #12]
10058960:	2002      	movs	r0, #2
10058962:	9004      	str	r0, [sp, #16]
10058964:	9801      	ldr	r0, [sp, #4]
10058966:	9003      	str	r0, [sp, #12]
10058968:	2003      	movs	r0, #3
1005896a:	9002      	str	r0, [sp, #8]
1005896c:	2137      	movs	r1, #55	; 0x37
1005896e:	6828      	ldr	r0, [r5, #0]
10058970:	0149      	lsls	r1, r1, #5
10058972:	1841      	adds	r1, r0, r1
10058974:	7a89      	ldrb	r1, [r1, #10]
10058976:	2301      	movs	r3, #1
10058978:	0789      	lsls	r1, r1, #30
1005897a:	d512      	bpl.n	100589a2 <SMP_Process_Q+0xc6>
1005897c:	02d9      	lsls	r1, r3, #11
1005897e:	3008      	adds	r0, #8
10058980:	1840      	adds	r0, r0, r1
10058982:	2213      	movs	r2, #19
10058984:	6940      	ldr	r0, [r0, #20]
10058986:	2102      	movs	r1, #2
10058988:	f003 fab0 	bl	1005beec <aci_event_fifo_push_header>
1005898c:	0001      	movs	r1, r0
1005898e:	d008      	beq.n	100589a2 <SMP_Process_Q+0xc6>
10058990:	9a03      	ldr	r2, [sp, #12]
10058992:	808a      	strh	r2, [r1, #4]
10058994:	9a02      	ldr	r2, [sp, #8]
10058996:	2300      	movs	r3, #0
10058998:	718a      	strb	r2, [r1, #6]
1005899a:	71cb      	strb	r3, [r1, #7]
1005899c:	9804      	ldr	r0, [sp, #16]
1005899e:	f003 fa91 	bl	1005bec4 <aci_event_fifo_push>
100589a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
100589a4:	283a      	cmp	r0, #58	; 0x3a
100589a6:	d00a      	beq.n	100589be <SMP_Process_Q+0xe2>
100589a8:	7b60      	ldrb	r0, [r4, #13]
100589aa:	0840      	lsrs	r0, r0, #1
100589ac:	0040      	lsls	r0, r0, #1
100589ae:	7360      	strb	r0, [r4, #13]
100589b0:	e012      	b.n	100589d8 <SMP_Process_Q+0xfc>
100589b2:	a907      	add	r1, sp, #28
100589b4:	9801      	ldr	r0, [sp, #4]
100589b6:	f7f4 fa73 	bl	1004cea0 <hci_le_long_term_key_request_reply>
100589ba:	900b      	str	r0, [sp, #44]	; 0x2c
100589bc:	e7f1      	b.n	100589a2 <SMP_Process_Q+0xc6>
100589be:	2210      	movs	r2, #16
100589c0:	a90c      	add	r1, sp, #48	; 0x30
100589c2:	9811      	ldr	r0, [sp, #68]	; 0x44
100589c4:	f7e7 fedd 	bl	10040782 <Osal_MemCpy>
100589c8:	b672      	cpsid	i
100589ca:	6828      	ldr	r0, [r5, #0]
100589cc:	22fb      	movs	r2, #251	; 0xfb
100589ce:	3040      	adds	r0, #64	; 0x40
100589d0:	79c1      	ldrb	r1, [r0, #7]
100589d2:	4011      	ands	r1, r2
100589d4:	71c1      	strb	r1, [r0, #7]
100589d6:	b662      	cpsie	i
100589d8:	7aa0      	ldrb	r0, [r4, #10]
100589da:	2800      	cmp	r0, #0
100589dc:	d002      	beq.n	100589e4 <SMP_Process_Q+0x108>
100589de:	4620      	mov	r0, r4
100589e0:	f000 f968 	bl	10058cb4 <smp_Execute_Actions_wrt_Current_State>
100589e4:	1c7f      	adds	r7, r7, #1
100589e6:	b2ff      	uxtb	r7, r7
100589e8:	6828      	ldr	r0, [r5, #0]
100589ea:	30a0      	adds	r0, #160	; 0xa0
100589ec:	7b00      	ldrb	r0, [r0, #12]
100589ee:	42b8      	cmp	r0, r7
100589f0:	d886      	bhi.n	10058900 <SMP_Process_Q+0x24>
100589f2:	e034      	b.n	10058a5e <SMP_Process_Q+0x182>
100589f4:	a906      	add	r1, sp, #24
100589f6:	6830      	ldr	r0, [r6, #0]
100589f8:	f004 f8f7 	bl	1005cbea <acl_list_remove_head>
100589fc:	9806      	ldr	r0, [sp, #24]
100589fe:	8880      	ldrh	r0, [r0, #4]
10058a00:	f001 ff78 	bl	1005a8f4 <SMP_get_remote_device_list_item>
10058a04:	0004      	movs	r4, r0
10058a06:	d02a      	beq.n	10058a5e <SMP_Process_Q+0x182>
10058a08:	9806      	ldr	r0, [sp, #24]
10058a0a:	6881      	ldr	r1, [r0, #8]
10058a0c:	7b09      	ldrb	r1, [r1, #12]
10058a0e:	2905      	cmp	r1, #5
10058a10:	d005      	beq.n	10058a1e <SMP_Process_Q+0x142>
10058a12:	4621      	mov	r1, r4
10058a14:	f000 fd88 	bl	10059528 <smp_Process_Rx_Packet_wrt_Current_State>
10058a18:	28ff      	cmp	r0, #255	; 0xff
10058a1a:	d007      	beq.n	10058a2c <SMP_Process_Q+0x150>
10058a1c:	e013      	b.n	10058a46 <SMP_Process_Q+0x16a>
10058a1e:	7aa1      	ldrb	r1, [r4, #10]
10058a20:	29fb      	cmp	r1, #251	; 0xfb
10058a22:	d018      	beq.n	10058a56 <SMP_Process_Q+0x17a>
10058a24:	4621      	mov	r1, r4
10058a26:	f002 fc99 	bl	1005b35c <smp_pairing_failed_receive>
10058a2a:	e014      	b.n	10058a56 <SMP_Process_Q+0x17a>
10058a2c:	9806      	ldr	r0, [sp, #24]
10058a2e:	6881      	ldr	r1, [r0, #8]
10058a30:	7b09      	ldrb	r1, [r1, #12]
10058a32:	2903      	cmp	r1, #3
10058a34:	d009      	beq.n	10058a4a <SMP_Process_Q+0x16e>
10058a36:	7ae1      	ldrb	r1, [r4, #11]
10058a38:	0709      	lsls	r1, r1, #28
10058a3a:	d506      	bpl.n	10058a4a <SMP_Process_Q+0x16e>
10058a3c:	9000      	str	r0, [sp, #0]
10058a3e:	9401      	str	r4, [sp, #4]
10058a40:	4668      	mov	r0, sp
10058a42:	f7e9 f903 	bl	10041c4c <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt_ucfg>
10058a46:	2800      	cmp	r0, #0
10058a48:	d005      	beq.n	10058a56 <SMP_Process_Q+0x17a>
10058a4a:	9906      	ldr	r1, [sp, #24]
10058a4c:	6830      	ldr	r0, [r6, #0]
10058a4e:	f004 f87a 	bl	1005cb46 <acl_list_insert_head>
10058a52:	b013      	add	sp, #76	; 0x4c
10058a54:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058a56:	2101      	movs	r1, #1
10058a58:	9806      	ldr	r0, [sp, #24]
10058a5a:	f7fc f843 	bl	10054ae4 <PM_Release_Acl_Pckt>
10058a5e:	6830      	ldr	r0, [r6, #0]
10058a60:	f004 f89a 	bl	1005cb98 <acl_list_is_empty>
10058a64:	2800      	cmp	r0, #0
10058a66:	d0c5      	beq.n	100589f4 <SMP_Process_Q+0x118>
10058a68:	e7f3      	b.n	10058a52 <SMP_Process_Q+0x176>
10058a6a:	0000      	.short	0x0000
10058a6c:	20000d64 	.word	0x20000d64
10058a70:	20000d6c 	.word	0x20000d6c
10058a74:	00007530 	.word	0x00007530

10058a78 <SMP_SR_SecurityRequest_Send>:
10058a78:	b570      	push	{r4, r5, r6, lr}
10058a7a:	f001 ff3b 	bl	1005a8f4 <SMP_get_remote_device_list_item>
10058a7e:	0004      	movs	r4, r0
10058a80:	d007      	beq.n	10058a92 <SMP_SR_SecurityRequest_Send+0x1a>
10058a82:	2074      	movs	r0, #116	; 0x74
10058a84:	5d00      	ldrb	r0, [r0, r4]
10058a86:	07c0      	lsls	r0, r0, #31
10058a88:	d00a      	beq.n	10058aa0 <SMP_SR_SecurityRequest_Send+0x28>
10058a8a:	7b20      	ldrb	r0, [r4, #12]
10058a8c:	0780      	lsls	r0, r0, #30
10058a8e:	d107      	bne.n	10058aa0 <SMP_SR_SecurityRequest_Send+0x28>
10058a90:	e001      	b.n	10058a96 <SMP_SR_SecurityRequest_Send+0x1e>
10058a92:	2040      	movs	r0, #64	; 0x40
10058a94:	bd70      	pop	{r4, r5, r6, pc}
10058a96:	7aa0      	ldrb	r0, [r4, #10]
10058a98:	2800      	cmp	r0, #0
10058a9a:	d003      	beq.n	10058aa4 <SMP_SR_SecurityRequest_Send+0x2c>
10058a9c:	28f1      	cmp	r0, #241	; 0xf1
10058a9e:	d001      	beq.n	10058aa4 <SMP_SR_SecurityRequest_Send+0x2c>
10058aa0:	2046      	movs	r0, #70	; 0x46
10058aa2:	bd70      	pop	{r4, r5, r6, pc}
10058aa4:	4e1a      	ldr	r6, [pc, #104]	; (10058b10 <SMP_SR_SecurityRequest_Send+0x98>)
10058aa6:	6830      	ldr	r0, [r6, #0]
10058aa8:	7e80      	ldrb	r0, [r0, #26]
10058aaa:	43c0      	mvns	r0, r0
10058aac:	0780      	lsls	r0, r0, #30
10058aae:	d02b      	beq.n	10058b08 <SMP_SR_SecurityRequest_Send+0x90>
10058ab0:	8920      	ldrh	r0, [r4, #8]
10058ab2:	2220      	movs	r2, #32
10058ab4:	0501      	lsls	r1, r0, #20
10058ab6:	0d09      	lsrs	r1, r1, #20
10058ab8:	2000      	movs	r0, #0
10058aba:	f7fb ffb7 	bl	10054a2c <PM_Get_Pckt>
10058abe:	0005      	movs	r5, r0
10058ac0:	d024      	beq.n	10058b0c <SMP_SR_SecurityRequest_Send+0x94>
10058ac2:	2002      	movs	r0, #2
10058ac4:	80e8      	strh	r0, [r5, #6]
10058ac6:	68a8      	ldr	r0, [r5, #8]
10058ac8:	210b      	movs	r1, #11
10058aca:	7301      	strb	r1, [r0, #12]
10058acc:	6830      	ldr	r0, [r6, #0]
10058ace:	7d81      	ldrb	r1, [r0, #22]
10058ad0:	7dc3      	ldrb	r3, [r0, #23]
10058ad2:	084a      	lsrs	r2, r1, #1
10058ad4:	4311      	orrs	r1, r2
10058ad6:	07ca      	lsls	r2, r1, #31
10058ad8:	7b41      	ldrb	r1, [r0, #13]
10058ada:	7b00      	ldrb	r0, [r0, #12]
10058adc:	0fd2      	lsrs	r2, r2, #31
10058ade:	07c0      	lsls	r0, r0, #31
10058ae0:	0fc0      	lsrs	r0, r0, #31
10058ae2:	f000 f856 	bl	10058b92 <smp_Build_AuthReq_Field>
10058ae6:	4601      	mov	r1, r0
10058ae8:	6830      	ldr	r0, [r6, #0]
10058aea:	3080      	adds	r0, #128	; 0x80
10058aec:	7301      	strb	r1, [r0, #12]
10058aee:	68a8      	ldr	r0, [r5, #8]
10058af0:	7341      	strb	r1, [r0, #13]
10058af2:	4621      	mov	r1, r4
10058af4:	4628      	mov	r0, r5
10058af6:	f001 fa2d 	bl	10059f54 <smp_send_packet>
10058afa:	2800      	cmp	r0, #0
10058afc:	d1d1      	bne.n	10058aa2 <SMP_SR_SecurityRequest_Send+0x2a>
10058afe:	7b21      	ldrb	r1, [r4, #12]
10058b00:	2201      	movs	r2, #1
10058b02:	4311      	orrs	r1, r2
10058b04:	7321      	strb	r1, [r4, #12]
10058b06:	bd70      	pop	{r4, r5, r6, pc}
10058b08:	2038      	movs	r0, #56	; 0x38
10058b0a:	bd70      	pop	{r4, r5, r6, pc}
10058b0c:	2064      	movs	r0, #100	; 0x64
10058b0e:	bd70      	pop	{r4, r5, r6, pc}
10058b10:	20000d6c 	.word	0x20000d6c

10058b14 <aci_gap_numeric_comparison_value_event_push>:
10058b14:	b570      	push	{r4, r5, r6, lr}
10058b16:	460e      	mov	r6, r1
10058b18:	2302      	movs	r3, #2
10058b1a:	4604      	mov	r4, r0
10058b1c:	06c1      	lsls	r1, r0, #27
10058b1e:	4812      	ldr	r0, [pc, #72]	; (10058b68 <aci_gap_numeric_comparison_value_event_push+0x54>)
10058b20:	4615      	mov	r5, r2
10058b22:	6800      	ldr	r0, [r0, #0]
10058b24:	d503      	bpl.n	10058b2e <aci_gap_numeric_comparison_value_event_push+0x1a>
10058b26:	221e      	movs	r2, #30
10058b28:	21bf      	movs	r1, #191	; 0xbf
10058b2a:	400c      	ands	r4, r1
10058b2c:	e008      	b.n	10058b40 <aci_gap_numeric_comparison_value_event_push+0x2c>
10058b2e:	2137      	movs	r1, #55	; 0x37
10058b30:	0149      	lsls	r1, r1, #5
10058b32:	1841      	adds	r1, r0, r1
10058b34:	7ac9      	ldrb	r1, [r1, #11]
10058b36:	0689      	lsls	r1, r1, #26
10058b38:	d401      	bmi.n	10058b3e <aci_gap_numeric_comparison_value_event_push+0x2a>
10058b3a:	2000      	movs	r0, #0
10058b3c:	bd70      	pop	{r4, r5, r6, pc}
10058b3e:	221b      	movs	r2, #27
10058b40:	0721      	lsls	r1, r4, #28
10058b42:	0e89      	lsrs	r1, r1, #26
10058b44:	1808      	adds	r0, r1, r0
10058b46:	2101      	movs	r1, #1
10058b48:	02c9      	lsls	r1, r1, #11
10058b4a:	1840      	adds	r0, r0, r1
10058b4c:	6940      	ldr	r0, [r0, #20]
10058b4e:	4621      	mov	r1, r4
10058b50:	f003 f9cc 	bl	1005beec <aci_event_fifo_push_header>
10058b54:	0001      	movs	r1, r0
10058b56:	d005      	beq.n	10058b64 <aci_gap_numeric_comparison_value_event_push+0x50>
10058b58:	808e      	strh	r6, [r1, #4]
10058b5a:	4620      	mov	r0, r4
10058b5c:	608d      	str	r5, [r1, #8]
10058b5e:	f003 f9b1 	bl	1005bec4 <aci_event_fifo_push>
10058b62:	e7ea      	b.n	10058b3a <aci_gap_numeric_comparison_value_event_push+0x26>
10058b64:	2007      	movs	r0, #7
10058b66:	bd70      	pop	{r4, r5, r6, pc}
10058b68:	20000d64 	.word	0x20000d64

10058b6c <int32ToLe4Byte>:
10058b6c:	7001      	strb	r1, [r0, #0]
10058b6e:	0a0a      	lsrs	r2, r1, #8
10058b70:	7042      	strb	r2, [r0, #1]
10058b72:	0c0a      	lsrs	r2, r1, #16
10058b74:	7082      	strb	r2, [r0, #2]
10058b76:	0e09      	lsrs	r1, r1, #24
10058b78:	70c1      	strb	r1, [r0, #3]
10058b7a:	4770      	bx	lr

10058b7c <le4ByteToInt32>:
10058b7c:	7801      	ldrb	r1, [r0, #0]
10058b7e:	7842      	ldrb	r2, [r0, #1]
10058b80:	0213      	lsls	r3, r2, #8
10058b82:	7882      	ldrb	r2, [r0, #2]
10058b84:	78c0      	ldrb	r0, [r0, #3]
10058b86:	0412      	lsls	r2, r2, #16
10058b88:	0600      	lsls	r0, r0, #24
10058b8a:	4310      	orrs	r0, r2
10058b8c:	4318      	orrs	r0, r3
10058b8e:	4308      	orrs	r0, r1
10058b90:	4770      	bx	lr

10058b92 <smp_Build_AuthReq_Field>:
10058b92:	07c0      	lsls	r0, r0, #31
10058b94:	07c9      	lsls	r1, r1, #31
10058b96:	0fc0      	lsrs	r0, r0, #31
10058b98:	0f49      	lsrs	r1, r1, #29
10058b9a:	4308      	orrs	r0, r1
10058b9c:	07d1      	lsls	r1, r2, #31
10058b9e:	0f09      	lsrs	r1, r1, #28
10058ba0:	4308      	orrs	r0, r1
10058ba2:	07d9      	lsls	r1, r3, #31
10058ba4:	0ec9      	lsrs	r1, r1, #27
10058ba6:	4308      	orrs	r0, r1
10058ba8:	4770      	bx	lr
	...

10058bac <smp_Build_Pairing_ReqResp_Packet>:
10058bac:	b5f0      	push	{r4, r5, r6, r7, lr}
10058bae:	2407      	movs	r4, #7
10058bb0:	9e05      	ldr	r6, [sp, #20]
10058bb2:	9d06      	ldr	r5, [sp, #24]
10058bb4:	80c4      	strh	r4, [r0, #6]
10058bb6:	6884      	ldr	r4, [r0, #8]
10058bb8:	07d2      	lsls	r2, r2, #31
10058bba:	7321      	strb	r1, [r4, #12]
10058bbc:	4c08      	ldr	r4, [pc, #32]	; (10058be0 <smp_Build_Pairing_ReqResp_Packet+0x34>)
10058bbe:	6881      	ldr	r1, [r0, #8]
10058bc0:	6824      	ldr	r4, [r4, #0]
10058bc2:	0fd2      	lsrs	r2, r2, #31
10058bc4:	7e27      	ldrb	r7, [r4, #24]
10058bc6:	734f      	strb	r7, [r1, #13]
10058bc8:	6881      	ldr	r1, [r0, #8]
10058bca:	738a      	strb	r2, [r1, #14]
10058bcc:	6881      	ldr	r1, [r0, #8]
10058bce:	73cb      	strb	r3, [r1, #15]
10058bd0:	6881      	ldr	r1, [r0, #8]
10058bd2:	7be2      	ldrb	r2, [r4, #15]
10058bd4:	740a      	strb	r2, [r1, #16]
10058bd6:	6881      	ldr	r1, [r0, #8]
10058bd8:	744e      	strb	r6, [r1, #17]
10058bda:	6880      	ldr	r0, [r0, #8]
10058bdc:	7485      	strb	r5, [r0, #18]
10058bde:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058be0:	20000d6c 	.word	0x20000d6c

10058be4 <smp_Check_Incoming_Pairing_Parameters>:
10058be4:	4601      	mov	r1, r0
10058be6:	6889      	ldr	r1, [r1, #8]
10058be8:	2000      	movs	r0, #0
10058bea:	7b4a      	ldrb	r2, [r1, #13]
10058bec:	2a04      	cmp	r2, #4
10058bee:	d805      	bhi.n	10058bfc <smp_Check_Incoming_Pairing_Parameters+0x18>
10058bf0:	7b8a      	ldrb	r2, [r1, #14]
10058bf2:	2a01      	cmp	r2, #1
10058bf4:	d802      	bhi.n	10058bfc <smp_Check_Incoming_Pairing_Parameters+0x18>
10058bf6:	7bca      	ldrb	r2, [r1, #15]
10058bf8:	0792      	lsls	r2, r2, #30
10058bfa:	d501      	bpl.n	10058c00 <smp_Check_Incoming_Pairing_Parameters+0x1c>
10058bfc:	200a      	movs	r0, #10
10058bfe:	4770      	bx	lr
10058c00:	4a04      	ldr	r2, [pc, #16]	; (10058c14 <smp_Check_Incoming_Pairing_Parameters+0x30>)
10058c02:	7c09      	ldrb	r1, [r1, #16]
10058c04:	6812      	ldr	r2, [r2, #0]
10058c06:	7b92      	ldrb	r2, [r2, #14]
10058c08:	4291      	cmp	r1, r2
10058c0a:	d301      	bcc.n	10058c10 <smp_Check_Incoming_Pairing_Parameters+0x2c>
10058c0c:	2910      	cmp	r1, #16
10058c0e:	d9f6      	bls.n	10058bfe <smp_Check_Incoming_Pairing_Parameters+0x1a>
10058c10:	2006      	movs	r0, #6
10058c12:	4770      	bx	lr
10058c14:	20000d6c 	.word	0x20000d6c

10058c18 <smp_Determine_Key_Association_Method>:
10058c18:	b5f0      	push	{r4, r5, r6, r7, lr}
10058c1a:	b087      	sub	sp, #28
10058c1c:	4604      	mov	r4, r0
10058c1e:	221c      	movs	r2, #28
10058c20:	4922      	ldr	r1, [pc, #136]	; (10058cac <smp_Determine_Key_Association_Method+0x94>)
10058c22:	4668      	mov	r0, sp
10058c24:	f7ed fda1 	bl	1004676a <__aeabi_memcpy>
10058c28:	7e22      	ldrb	r2, [r4, #24]
10058c2a:	2103      	movs	r1, #3
10058c2c:	43d0      	mvns	r0, r2
10058c2e:	0783      	lsls	r3, r0, #30
10058c30:	481f      	ldr	r0, [pc, #124]	; (10058cb0 <smp_Determine_Key_Association_Method+0x98>)
10058c32:	2b00      	cmp	r3, #0
10058c34:	6800      	ldr	r0, [r0, #0]
10058c36:	d004      	beq.n	10058c42 <smp_Determine_Key_Association_Method+0x2a>
10058c38:	7ae3      	ldrb	r3, [r4, #11]
10058c3a:	071d      	lsls	r5, r3, #28
10058c3c:	d505      	bpl.n	10058c4a <smp_Determine_Key_Association_Method+0x32>
10058c3e:	07d5      	lsls	r5, r2, #31
10058c40:	d001      	beq.n	10058c46 <smp_Determine_Key_Association_Method+0x2e>
10058c42:	77e1      	strb	r1, [r4, #31]
10058c44:	e01c      	b.n	10058c80 <smp_Determine_Key_Association_Method+0x68>
10058c46:	0792      	lsls	r2, r2, #30
10058c48:	d4fb      	bmi.n	10058c42 <smp_Determine_Key_Association_Method+0x2a>
10058c4a:	7ee2      	ldrb	r2, [r4, #27]
10058c4c:	2505      	movs	r5, #5
10058c4e:	422a      	tst	r2, r5
10058c50:	d012      	beq.n	10058c78 <smp_Determine_Key_Association_Method+0x60>
10058c52:	7e62      	ldrb	r2, [r4, #25]
10058c54:	7e05      	ldrb	r5, [r0, #24]
10058c56:	0096      	lsls	r6, r2, #2
10058c58:	1996      	adds	r6, r2, r6
10058c5a:	466f      	mov	r7, sp
10058c5c:	19f6      	adds	r6, r6, r7
10058c5e:	5dad      	ldrb	r5, [r5, r6]
10058c60:	77e5      	strb	r5, [r4, #31]
10058c62:	2d00      	cmp	r5, #0
10058c64:	d10c      	bne.n	10058c80 <smp_Determine_Key_Association_Method+0x68>
10058c66:	071b      	lsls	r3, r3, #28
10058c68:	d408      	bmi.n	10058c7c <smp_Determine_Key_Association_Method+0x64>
10058c6a:	2a01      	cmp	r2, #1
10058c6c:	d102      	bne.n	10058c74 <smp_Determine_Key_Association_Method+0x5c>
10058c6e:	7e02      	ldrb	r2, [r0, #24]
10058c70:	2a01      	cmp	r2, #1
10058c72:	d001      	beq.n	10058c78 <smp_Determine_Key_Association_Method+0x60>
10058c74:	2202      	movs	r2, #2
10058c76:	e002      	b.n	10058c7e <smp_Determine_Key_Association_Method+0x66>
10058c78:	2201      	movs	r2, #1
10058c7a:	e000      	b.n	10058c7e <smp_Determine_Key_Association_Method+0x66>
10058c7c:	2204      	movs	r2, #4
10058c7e:	77e2      	strb	r2, [r4, #31]
10058c80:	7b40      	ldrb	r0, [r0, #13]
10058c82:	07c0      	lsls	r0, r0, #31
10058c84:	0fc0      	lsrs	r0, r0, #31
10058c86:	d002      	beq.n	10058c8e <smp_Determine_Key_Association_Method+0x76>
10058c88:	7fe0      	ldrb	r0, [r4, #31]
10058c8a:	2801      	cmp	r0, #1
10058c8c:	d006      	beq.n	10058c9c <smp_Determine_Key_Association_Method+0x84>
10058c8e:	7ae0      	ldrb	r0, [r4, #11]
10058c90:	0700      	lsls	r0, r0, #28
10058c92:	d509      	bpl.n	10058ca8 <smp_Determine_Key_Association_Method+0x90>
10058c94:	7fe0      	ldrb	r0, [r4, #31]
10058c96:	2802      	cmp	r0, #2
10058c98:	d004      	beq.n	10058ca4 <smp_Determine_Key_Association_Method+0x8c>
10058c9a:	e005      	b.n	10058ca8 <smp_Determine_Key_Association_Method+0x90>
10058c9c:	77e1      	strb	r1, [r4, #31]
10058c9e:	2047      	movs	r0, #71	; 0x47
10058ca0:	b007      	add	sp, #28
10058ca2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058ca4:	2000      	movs	r0, #0
10058ca6:	73e0      	strb	r0, [r4, #15]
10058ca8:	2000      	movs	r0, #0
10058caa:	e7f9      	b.n	10058ca0 <smp_Determine_Key_Association_Method+0x88>
10058cac:	1005fec4 	.word	0x1005fec4
10058cb0:	20000d6c 	.word	0x20000d6c

10058cb4 <smp_Execute_Actions_wrt_Current_State>:
10058cb4:	b5f0      	push	{r4, r5, r6, r7, lr}
10058cb6:	4604      	mov	r4, r0
10058cb8:	7a80      	ldrb	r0, [r0, #10]
10058cba:	4625      	mov	r5, r4
10058cbc:	3560      	adds	r5, #96	; 0x60
10058cbe:	b099      	sub	sp, #100	; 0x64
10058cc0:	2810      	cmp	r0, #16
10058cc2:	d020      	beq.n	10058d06 <smp_Execute_Actions_wrt_Current_State+0x52>
10058cc4:	28d1      	cmp	r0, #209	; 0xd1
10058cc6:	d07b      	beq.n	10058dc0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10058cc8:	28d2      	cmp	r0, #210	; 0xd2
10058cca:	d079      	beq.n	10058dc0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10058ccc:	28d3      	cmp	r0, #211	; 0xd3
10058cce:	d077      	beq.n	10058dc0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10058cd0:	28d4      	cmp	r0, #212	; 0xd4
10058cd2:	d075      	beq.n	10058dc0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10058cd4:	28d5      	cmp	r0, #213	; 0xd5
10058cd6:	d073      	beq.n	10058dc0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10058cd8:	28f0      	cmp	r0, #240	; 0xf0
10058cda:	d075      	beq.n	10058dc8 <smp_Execute_Actions_wrt_Current_State+0x114>
10058cdc:	28fe      	cmp	r0, #254	; 0xfe
10058cde:	d077      	beq.n	10058dd0 <smp_Execute_Actions_wrt_Current_State+0x11c>
10058ce0:	28a2      	cmp	r0, #162	; 0xa2
10058ce2:	d07f      	beq.n	10058de4 <smp_Execute_Actions_wrt_Current_State+0x130>
10058ce4:	28b2      	cmp	r0, #178	; 0xb2
10058ce6:	d07d      	beq.n	10058de4 <smp_Execute_Actions_wrt_Current_State+0x130>
10058ce8:	28b4      	cmp	r0, #180	; 0xb4
10058cea:	d068      	beq.n	10058dbe <smp_Execute_Actions_wrt_Current_State+0x10a>
10058cec:	28bf      	cmp	r0, #191	; 0xbf
10058cee:	4620      	mov	r0, r4
10058cf0:	d077      	beq.n	10058de2 <smp_Execute_Actions_wrt_Current_State+0x12e>
10058cf2:	f7e8 ff1b 	bl	10041b2c <smp_Execute_Actions_wrt_Current_State_MI_excerpt_ucfg>
10058cf6:	7ae0      	ldrb	r0, [r4, #11]
10058cf8:	0700      	lsls	r0, r0, #28
10058cfa:	d502      	bpl.n	10058d02 <smp_Execute_Actions_wrt_Current_State+0x4e>
10058cfc:	4620      	mov	r0, r4
10058cfe:	f7e8 ff9d 	bl	10041c3c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2_ucfg>
10058d02:	b019      	add	sp, #100	; 0x64
10058d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058d06:	7860      	ldrb	r0, [r4, #1]
10058d08:	aa04      	add	r2, sp, #16
10058d0a:	07c1      	lsls	r1, r0, #31
10058d0c:	0fc9      	lsrs	r1, r1, #31
10058d0e:	1ca0      	adds	r0, r4, #2
10058d10:	f7ff f8d2 	bl	10057eb8 <SDB_Find_Record>
10058d14:	2702      	movs	r7, #2
10058d16:	4e49      	ldr	r6, [pc, #292]	; (10058e3c <smp_Execute_Actions_wrt_Current_State+0x188>)
10058d18:	2800      	cmp	r0, #0
10058d1a:	d02a      	beq.n	10058d72 <smp_Execute_Actions_wrt_Current_State+0xbe>
10058d1c:	f7fc fba0 	bl	10055460 <GapIsPrivacySupported>
10058d20:	2800      	cmp	r0, #0
10058d22:	d024      	beq.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d24:	7d28      	ldrb	r0, [r5, #20]
10058d26:	07c0      	lsls	r0, r0, #31
10058d28:	d021      	beq.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d2a:	f7ff f93b 	bl	10057fa4 <SDB_Get_Number_Of_Valid_Records>
10058d2e:	28fa      	cmp	r0, #250	; 0xfa
10058d30:	d01d      	beq.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d32:	2800      	cmp	r0, #0
10058d34:	d01b      	beq.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d36:	79e0      	ldrb	r0, [r4, #7]
10058d38:	0640      	lsls	r0, r0, #25
10058d3a:	d518      	bpl.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d3c:	2002      	movs	r0, #2
10058d3e:	9003      	str	r0, [sp, #12]
10058d40:	2137      	movs	r1, #55	; 0x37
10058d42:	6830      	ldr	r0, [r6, #0]
10058d44:	0149      	lsls	r1, r1, #5
10058d46:	1841      	adds	r1, r0, r1
10058d48:	7ac9      	ldrb	r1, [r1, #11]
10058d4a:	8925      	ldrh	r5, [r4, #8]
10058d4c:	2301      	movs	r3, #1
10058d4e:	0709      	lsls	r1, r1, #28
10058d50:	d50d      	bpl.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d52:	02de      	lsls	r6, r3, #11
10058d54:	3008      	adds	r0, #8
10058d56:	1980      	adds	r0, r0, r6
10058d58:	221a      	movs	r2, #26
10058d5a:	4639      	mov	r1, r7
10058d5c:	6940      	ldr	r0, [r0, #20]
10058d5e:	f003 f8c5 	bl	1005beec <aci_event_fifo_push_header>
10058d62:	0001      	movs	r1, r0
10058d64:	d003      	beq.n	10058d6e <smp_Execute_Actions_wrt_Current_State+0xba>
10058d66:	808d      	strh	r5, [r1, #4]
10058d68:	9803      	ldr	r0, [sp, #12]
10058d6a:	f003 f8ab 	bl	1005bec4 <aci_event_fifo_push>
10058d6e:	2000      	movs	r0, #0
10058d70:	e04d      	b.n	10058e0e <smp_Execute_Actions_wrt_Current_State+0x15a>
10058d72:	a904      	add	r1, sp, #16
10058d74:	4620      	mov	r0, r4
10058d76:	f7ff f993 	bl	100580a0 <SDB_get_security_data_record>
10058d7a:	8920      	ldrh	r0, [r4, #8]
10058d7c:	0401      	lsls	r1, r0, #16
10058d7e:	d5ba      	bpl.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058d80:	2102      	movs	r1, #2
10058d82:	9101      	str	r1, [sp, #4]
10058d84:	0505      	lsls	r5, r0, #20
10058d86:	2137      	movs	r1, #55	; 0x37
10058d88:	6830      	ldr	r0, [r6, #0]
10058d8a:	0149      	lsls	r1, r1, #5
10058d8c:	1841      	adds	r1, r0, r1
10058d8e:	7a89      	ldrb	r1, [r1, #10]
10058d90:	0d2d      	lsrs	r5, r5, #20
10058d92:	2301      	movs	r3, #1
10058d94:	0709      	lsls	r1, r1, #28
10058d96:	d5ae      	bpl.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058d98:	02de      	lsls	r6, r3, #11
10058d9a:	3008      	adds	r0, #8
10058d9c:	1980      	adds	r0, r0, r6
10058d9e:	2215      	movs	r2, #21
10058da0:	4639      	mov	r1, r7
10058da2:	6940      	ldr	r0, [r0, #20]
10058da4:	f003 f8a2 	bl	1005beec <aci_event_fifo_push_header>
10058da8:	0001      	movs	r1, r0
10058daa:	d0a4      	beq.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058dac:	808d      	strh	r5, [r1, #4]
10058dae:	9801      	ldr	r0, [sp, #4]
10058db0:	f003 f888 	bl	1005bec4 <aci_event_fifo_push>
10058db4:	e79f      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058db6:	e003      	b.n	10058dc0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10058db8:	e006      	b.n	10058dc8 <smp_Execute_Actions_wrt_Current_State+0x114>
10058dba:	e009      	b.n	10058dd0 <smp_Execute_Actions_wrt_Current_State+0x11c>
10058dbc:	e012      	b.n	10058de4 <smp_Execute_Actions_wrt_Current_State+0x130>
10058dbe:	e02a      	b.n	10058e16 <smp_Execute_Actions_wrt_Current_State+0x162>
10058dc0:	4620      	mov	r0, r4
10058dc2:	f000 f953 	bl	1005906c <smp_Keys_Distribution_Send>
10058dc6:	e796      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058dc8:	4620      	mov	r0, r4
10058dca:	f002 fa8b 	bl	1005b2e4 <smp_pairing_completed>
10058dce:	e792      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058dd0:	7d28      	ldrb	r0, [r5, #20]
10058dd2:	0600      	lsls	r0, r0, #24
10058dd4:	d58f      	bpl.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058dd6:	227c      	movs	r2, #124	; 0x7c
10058dd8:	2100      	movs	r1, #0
10058dda:	4620      	mov	r0, r4
10058ddc:	f7e7 fcd5 	bl	1004078a <Osal_MemSet>
10058de0:	e789      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058de2:	e027      	b.n	10058e34 <smp_Execute_Actions_wrt_Current_State+0x180>
10058de4:	7ae1      	ldrb	r1, [r4, #11]
10058de6:	2001      	movs	r0, #1
10058de8:	0709      	lsls	r1, r1, #28
10058dea:	d504      	bpl.n	10058df6 <smp_Execute_Actions_wrt_Current_State+0x142>
10058dec:	4620      	mov	r0, r4
10058dee:	f7e8 ff21 	bl	10041c34 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2_ucfg>
10058df2:	2800      	cmp	r0, #0
10058df4:	d0de      	beq.n	10058db4 <smp_Execute_Actions_wrt_Current_State+0x100>
10058df6:	7fe1      	ldrb	r1, [r4, #31]
10058df8:	2902      	cmp	r1, #2
10058dfa:	d102      	bne.n	10058e02 <smp_Execute_Actions_wrt_Current_State+0x14e>
10058dfc:	7ee1      	ldrb	r1, [r4, #27]
10058dfe:	06c9      	lsls	r1, r1, #27
10058e00:	d5d8      	bpl.n	10058db4 <smp_Execute_Actions_wrt_Current_State+0x100>
10058e02:	2800      	cmp	r0, #0
10058e04:	d0d6      	beq.n	10058db4 <smp_Execute_Actions_wrt_Current_State+0x100>
10058e06:	7d28      	ldrb	r0, [r5, #20]
10058e08:	07c0      	lsls	r0, r0, #31
10058e0a:	d002      	beq.n	10058e12 <smp_Execute_Actions_wrt_Current_State+0x15e>
10058e0c:	20b4      	movs	r0, #180	; 0xb4
10058e0e:	72a0      	strb	r0, [r4, #10]
10058e10:	e771      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058e12:	20a4      	movs	r0, #164	; 0xa4
10058e14:	e7fb      	b.n	10058e0e <smp_Execute_Actions_wrt_Current_State+0x15a>
10058e16:	4620      	mov	r0, r4
10058e18:	2110      	movs	r1, #16
10058e1a:	3064      	adds	r0, #100	; 0x64
10058e1c:	f7f3 fc7c 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
10058e20:	7ae0      	ldrb	r0, [r4, #11]
10058e22:	0700      	lsls	r0, r0, #28
10058e24:	d503      	bpl.n	10058e2e <smp_Execute_Actions_wrt_Current_State+0x17a>
10058e26:	4620      	mov	r0, r4
10058e28:	f7e8 feec 	bl	10041c04 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg>
10058e2c:	e763      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058e2e:	21b5      	movs	r1, #181	; 0xb5
10058e30:	72a1      	strb	r1, [r4, #10]
10058e32:	e760      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058e34:	f002 f972 	bl	1005b11c <smp_keys_distribution_start>
10058e38:	e75d      	b.n	10058cf6 <smp_Execute_Actions_wrt_Current_State+0x42>
10058e3a:	0000      	.short	0x0000
10058e3c:	20000d64 	.word	0x20000d64

10058e40 <smp_Execute_Actions_wrt_Current_State_MI_excerpt>:
10058e40:	b510      	push	{r4, lr}
10058e42:	2174      	movs	r1, #116	; 0x74
10058e44:	5c09      	ldrb	r1, [r1, r0]
10058e46:	07c9      	lsls	r1, r1, #31
10058e48:	d10b      	bne.n	10058e62 <smp_Execute_Actions_wrt_Current_State_MI_excerpt+0x22>
10058e4a:	7a81      	ldrb	r1, [r0, #10]
10058e4c:	29a4      	cmp	r1, #164	; 0xa4
10058e4e:	d009      	beq.n	10058e64 <smp_Execute_Actions_wrt_Current_State_MI_excerpt+0x24>
10058e50:	29ac      	cmp	r1, #172	; 0xac
10058e52:	d016      	beq.n	10058e82 <smp_Execute_Actions_wrt_Current_State_MI_excerpt+0x42>
10058e54:	29af      	cmp	r1, #175	; 0xaf
10058e56:	d104      	bne.n	10058e62 <smp_Execute_Actions_wrt_Current_State_MI_excerpt+0x22>
10058e58:	7f41      	ldrb	r1, [r0, #29]
10058e5a:	2900      	cmp	r1, #0
10058e5c:	d014      	beq.n	10058e88 <smp_Execute_Actions_wrt_Current_State_MI_excerpt+0x48>
10058e5e:	21d0      	movs	r1, #208	; 0xd0
10058e60:	7281      	strb	r1, [r0, #10]
10058e62:	bd10      	pop	{r4, pc}
10058e64:	4604      	mov	r4, r0
10058e66:	2110      	movs	r1, #16
10058e68:	3054      	adds	r0, #84	; 0x54
10058e6a:	f7f3 fc55 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
10058e6e:	7ae0      	ldrb	r0, [r4, #11]
10058e70:	0700      	lsls	r0, r0, #28
10058e72:	4620      	mov	r0, r4
10058e74:	d502      	bpl.n	10058e7c <smp_Execute_Actions_wrt_Current_State_MI_excerpt+0x3c>
10058e76:	f7e8 fec1 	bl	10041bfc <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg>
10058e7a:	bd10      	pop	{r4, pc}
10058e7c:	f000 fca2 	bl	100597c4 <smp____MI_PairingConfirm_Send>
10058e80:	bd10      	pop	{r4, pc}
10058e82:	f7e8 fe4f 	bl	10041b24 <smp_MI_Start_Encryption_ucfg>
10058e86:	bd10      	pop	{r4, pc}
10058e88:	f002 f948 	bl	1005b11c <smp_keys_distribution_start>
10058e8c:	bd10      	pop	{r4, pc}

10058e8e <smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2>:
10058e8e:	b510      	push	{r4, lr}
10058e90:	4601      	mov	r1, r0
10058e92:	7a80      	ldrb	r0, [r0, #10]
10058e94:	28a9      	cmp	r0, #169	; 0xa9
10058e96:	d102      	bne.n	10058e9e <smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2+0x10>
10058e98:	2000      	movs	r0, #0
10058e9a:	f000 fc67 	bl	1005976c <smp____MI_PairingConfirm_Receive>
10058e9e:	bd10      	pop	{r4, pc}

10058ea0 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2>:
10058ea0:	b510      	push	{r4, lr}
10058ea2:	4604      	mov	r4, r0
10058ea4:	7a80      	ldrb	r0, [r0, #10]
10058ea6:	28aa      	cmp	r0, #170	; 0xaa
10058ea8:	d00b      	beq.n	10058ec2 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x22>
10058eaa:	28ba      	cmp	r0, #186	; 0xba
10058eac:	d009      	beq.n	10058ec2 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x22>
10058eae:	28b9      	cmp	r0, #185	; 0xb9
10058eb0:	d010      	beq.n	10058ed4 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x34>
10058eb2:	2074      	movs	r0, #116	; 0x74
10058eb4:	5d00      	ldrb	r0, [r0, r4]
10058eb6:	07c0      	lsls	r0, r0, #31
10058eb8:	d102      	bne.n	10058ec0 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x20>
10058eba:	4620      	mov	r0, r4
10058ebc:	f7e8 fe3e 	bl	10041b3c <smp_Execute_Actions_wrt_Current_State_sc_MI_excerpt_phase2as2_ucfg>
10058ec0:	bd10      	pop	{r4, pc}
10058ec2:	4620      	mov	r0, r4
10058ec4:	f002 fe28 	bl	1005bb18 <smp_sc_phase_2as2_start>
10058ec8:	2800      	cmp	r0, #0
10058eca:	d0f9      	beq.n	10058ec0 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x20>
10058ecc:	2301      	movs	r3, #1
10058ece:	2200      	movs	r2, #0
10058ed0:	210b      	movs	r1, #11
10058ed2:	e00d      	b.n	10058ef0 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x50>
10058ed4:	7fe0      	ldrb	r0, [r4, #31]
10058ed6:	2804      	cmp	r0, #4
10058ed8:	d1f2      	bne.n	10058ec0 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x20>
10058eda:	7ee0      	ldrb	r0, [r4, #27]
10058edc:	0641      	lsls	r1, r0, #25
10058ede:	d502      	bpl.n	10058ee6 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x46>
10058ee0:	20ba      	movs	r0, #186	; 0xba
10058ee2:	72a0      	strb	r0, [r4, #10]
10058ee4:	bd10      	pop	{r4, pc}
10058ee6:	0600      	lsls	r0, r0, #24
10058ee8:	d5fc      	bpl.n	10058ee4 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2+0x44>
10058eea:	2301      	movs	r3, #1
10058eec:	2200      	movs	r2, #0
10058eee:	210c      	movs	r1, #12
10058ef0:	4620      	mov	r0, r4
10058ef2:	f002 fa3b 	bl	1005b36c <smp_pairing_failed_send>
10058ef6:	bd10      	pop	{r4, pc}

10058ef8 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2>:
10058ef8:	b570      	push	{r4, r5, r6, lr}
10058efa:	4604      	mov	r4, r0
10058efc:	4817      	ldr	r0, [pc, #92]	; (10058f5c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x64>)
10058efe:	2501      	movs	r5, #1
10058f00:	6802      	ldr	r2, [r0, #0]
10058f02:	2140      	movs	r1, #64	; 0x40
10058f04:	2000      	movs	r0, #0
10058f06:	323c      	adds	r2, #60	; 0x3c
10058f08:	f002 ff1f 	bl	1005bd4a <is_Buffer_All_Set_To>
10058f0c:	2800      	cmp	r0, #0
10058f0e:	d10a      	bne.n	10058f26 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x2e>
10058f10:	4813      	ldr	r0, [pc, #76]	; (10058f60 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x68>)
10058f12:	2179      	movs	r1, #121	; 0x79
10058f14:	6800      	ldr	r0, [r0, #0]
10058f16:	0109      	lsls	r1, r1, #4
10058f18:	1842      	adds	r2, r0, r1
10058f1a:	2120      	movs	r1, #32
10058f1c:	2000      	movs	r0, #0
10058f1e:	f002 ff14 	bl	1005bd4a <is_Buffer_All_Set_To>
10058f22:	2800      	cmp	r0, #0
10058f24:	d003      	beq.n	10058f2e <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x36>
10058f26:	2500      	movs	r5, #0
10058f28:	f002 fe48 	bl	1005bbbc <smp_sc_submit_ecc_pk_generation_request>
10058f2c:	e00e      	b.n	10058f4c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x54>
10058f2e:	7ae0      	ldrb	r0, [r4, #11]
10058f30:	43c1      	mvns	r1, r0
10058f32:	0649      	lsls	r1, r1, #25
10058f34:	0f89      	lsrs	r1, r1, #30
10058f36:	d009      	beq.n	10058f4c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x54>
10058f38:	2174      	movs	r1, #116	; 0x74
10058f3a:	5d09      	ldrb	r1, [r1, r4]
10058f3c:	2500      	movs	r5, #0
10058f3e:	07c9      	lsls	r1, r1, #31
10058f40:	d006      	beq.n	10058f50 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x58>
10058f42:	0640      	lsls	r0, r0, #25
10058f44:	d502      	bpl.n	10058f4c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x54>
10058f46:	4620      	mov	r0, r4
10058f48:	f002 fd76 	bl	1005ba38 <smp_sc_pairing_public_key_send>
10058f4c:	4628      	mov	r0, r5
10058f4e:	bd70      	pop	{r4, r5, r6, pc}
10058f50:	0681      	lsls	r1, r0, #26
10058f52:	d4fb      	bmi.n	10058f4c <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x54>
10058f54:	219b      	movs	r1, #155	; 0x9b
10058f56:	4008      	ands	r0, r1
10058f58:	72e0      	strb	r0, [r4, #11]
10058f5a:	e7f4      	b.n	10058f46 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2+0x4e>
10058f5c:	20000d6c 	.word	0x20000d6c
10058f60:	20000d64 	.word	0x20000d64

10058f64 <smp_Get_Long_Term_Key>:
10058f64:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
10058f66:	b085      	sub	sp, #20
10058f68:	2700      	movs	r7, #0
10058f6a:	4604      	mov	r4, r0
10058f6c:	4605      	mov	r5, r0
10058f6e:	4606      	mov	r6, r0
10058f70:	9701      	str	r7, [sp, #4]
10058f72:	7a80      	ldrb	r0, [r0, #10]
10058f74:	352a      	adds	r5, #42	; 0x2a
10058f76:	3632      	adds	r6, #50	; 0x32
10058f78:	28bc      	cmp	r0, #188	; 0xbc
10058f7a:	d024      	beq.n	10058fc6 <smp_Get_Long_Term_Key+0x62>
10058f7c:	28f1      	cmp	r0, #241	; 0xf1
10058f7e:	d111      	bne.n	10058fa4 <smp_Get_Long_Term_Key+0x40>
10058f80:	7ae0      	ldrb	r0, [r4, #11]
10058f82:	0700      	lsls	r0, r0, #28
10058f84:	d41f      	bmi.n	10058fc6 <smp_Get_Long_Term_Key+0x62>
10058f86:	4620      	mov	r0, r4
10058f88:	3020      	adds	r0, #32
10058f8a:	2300      	movs	r3, #0
10058f8c:	aa02      	add	r2, sp, #8
10058f8e:	4629      	mov	r1, r5
10058f90:	9003      	str	r0, [sp, #12]
10058f92:	f001 f951 	bl	1005a238 <SMA_generate_EDIV_recovery_DIV>
10058f96:	2202      	movs	r2, #2
10058f98:	4631      	mov	r1, r6
10058f9a:	a802      	add	r0, sp, #8
10058f9c:	f7e7 fbf9 	bl	10040792 <Osal_MemCmp>
10058fa0:	2800      	cmp	r0, #0
10058fa2:	d007      	beq.n	10058fb4 <smp_Get_Long_Term_Key+0x50>
10058fa4:	4622      	mov	r2, r4
10058fa6:	4629      	mov	r1, r5
10058fa8:	4630      	mov	r0, r6
10058faa:	f7fe ff35 	bl	10057e18 <SDB_Find_Matching_LTK>
10058fae:	2041      	movs	r0, #65	; 0x41
10058fb0:	b007      	add	sp, #28
10058fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058fb4:	480a      	ldr	r0, [pc, #40]	; (10058fe0 <smp_Get_Long_Term_Key+0x7c>)
10058fb6:	9700      	str	r7, [sp, #0]
10058fb8:	6800      	ldr	r0, [r0, #0]
10058fba:	462b      	mov	r3, r5
10058fbc:	aa01      	add	r2, sp, #4
10058fbe:	9903      	ldr	r1, [sp, #12]
10058fc0:	3080      	adds	r0, #128	; 0x80
10058fc2:	f000 ffe3 	bl	10059f8c <SMA_Diversify>
10058fc6:	2210      	movs	r2, #16
10058fc8:	2100      	movs	r1, #0
10058fca:	9806      	ldr	r0, [sp, #24]
10058fcc:	f7e7 fbdd 	bl	1004078a <Osal_MemSet>
10058fd0:	7f22      	ldrb	r2, [r4, #28]
10058fd2:	4629      	mov	r1, r5
10058fd4:	9806      	ldr	r0, [sp, #24]
10058fd6:	f7e7 fbd4 	bl	10040782 <Osal_MemCpy>
10058fda:	2000      	movs	r0, #0
10058fdc:	e7e8      	b.n	10058fb0 <smp_Get_Long_Term_Key+0x4c>
10058fde:	0000      	.short	0x0000
10058fe0:	20000d64 	.word	0x20000d64

10058fe4 <smp_Get_Pairing_Parameters_From_Peer_Packet>:
10058fe4:	b510      	push	{r4, lr}
10058fe6:	6882      	ldr	r2, [r0, #8]
10058fe8:	7b52      	ldrb	r2, [r2, #13]
10058fea:	764a      	strb	r2, [r1, #25]
10058fec:	6882      	ldr	r2, [r0, #8]
10058fee:	7b92      	ldrb	r2, [r2, #14]
10058ff0:	2a01      	cmp	r2, #1
10058ff2:	d103      	bne.n	10058ffc <smp_Get_Pairing_Parameters_From_Peer_Packet+0x18>
10058ff4:	7e0a      	ldrb	r2, [r1, #24]
10058ff6:	2302      	movs	r3, #2
10058ff8:	431a      	orrs	r2, r3
10058ffa:	760a      	strb	r2, [r1, #24]
10058ffc:	4b1a      	ldr	r3, [pc, #104]	; (10059068 <smp_Get_Pairing_Parameters_From_Peer_Packet+0x84>)
10058ffe:	6882      	ldr	r2, [r0, #8]
10059000:	681b      	ldr	r3, [r3, #0]
10059002:	7bd2      	ldrb	r2, [r2, #15]
10059004:	3380      	adds	r3, #128	; 0x80
10059006:	721a      	strb	r2, [r3, #8]
10059008:	6884      	ldr	r4, [r0, #8]
1005900a:	7c64      	ldrb	r4, [r4, #17]
1005900c:	725c      	strb	r4, [r3, #9]
1005900e:	6884      	ldr	r4, [r0, #8]
10059010:	7ca4      	ldrb	r4, [r4, #18]
10059012:	729c      	strb	r4, [r3, #10]
10059014:	7e8b      	ldrb	r3, [r1, #26]
10059016:	07d4      	lsls	r4, r2, #31
10059018:	0fe4      	lsrs	r4, r4, #31
1005901a:	4323      	orrs	r3, r4
1005901c:	768b      	strb	r3, [r1, #26]
1005901e:	7ecb      	ldrb	r3, [r1, #27]
10059020:	2404      	movs	r4, #4
10059022:	4022      	ands	r2, r4
10059024:	4313      	orrs	r3, r2
10059026:	76cb      	strb	r3, [r1, #27]
10059028:	6882      	ldr	r2, [r0, #8]
1005902a:	7c12      	ldrb	r2, [r2, #16]
1005902c:	770a      	strb	r2, [r1, #28]
1005902e:	2274      	movs	r2, #116	; 0x74
10059030:	5c52      	ldrb	r2, [r2, r1]
10059032:	07d2      	lsls	r2, r2, #31
10059034:	d012      	beq.n	1005905c <smp_Get_Pairing_Parameters_From_Peer_Packet+0x78>
10059036:	7f8b      	ldrb	r3, [r1, #30]
10059038:	2205      	movs	r2, #5
1005903a:	08dc      	lsrs	r4, r3, #3
1005903c:	00e4      	lsls	r4, r4, #3
1005903e:	778c      	strb	r4, [r1, #30]
10059040:	6883      	ldr	r3, [r0, #8]
10059042:	7c9b      	ldrb	r3, [r3, #18]
10059044:	075b      	lsls	r3, r3, #29
10059046:	0f5b      	lsrs	r3, r3, #29
10059048:	4323      	orrs	r3, r4
1005904a:	778b      	strb	r3, [r1, #30]
1005904c:	6880      	ldr	r0, [r0, #8]
1005904e:	3008      	adds	r0, #8
10059050:	1880      	adds	r0, r0, r2
10059052:	7900      	ldrb	r0, [r0, #4]
10059054:	0740      	lsls	r0, r0, #29
10059056:	0f40      	lsrs	r0, r0, #29
10059058:	7748      	strb	r0, [r1, #29]
1005905a:	bd10      	pop	{r4, pc}
1005905c:	6883      	ldr	r3, [r0, #8]
1005905e:	2206      	movs	r2, #6
10059060:	7c5b      	ldrb	r3, [r3, #17]
10059062:	075b      	lsls	r3, r3, #29
10059064:	0f5b      	lsrs	r3, r3, #29
10059066:	e7f0      	b.n	1005904a <smp_Get_Pairing_Parameters_From_Peer_Packet+0x66>
10059068:	20000d6c 	.word	0x20000d6c

1005906c <smp_Keys_Distribution_Send>:
1005906c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005906e:	b08d      	sub	sp, #52	; 0x34
10059070:	2700      	movs	r7, #0
10059072:	4605      	mov	r5, r0
10059074:	9707      	str	r7, [sp, #28]
10059076:	8900      	ldrh	r0, [r0, #8]
10059078:	2220      	movs	r2, #32
1005907a:	0501      	lsls	r1, r0, #20
1005907c:	0d09      	lsrs	r1, r1, #20
1005907e:	4638      	mov	r0, r7
10059080:	f7fb fcd4 	bl	10054a2c <PM_Get_Pckt>
10059084:	0004      	movs	r4, r0
10059086:	d06f      	beq.n	10059168 <smp_Keys_Distribution_Send+0xfc>
10059088:	462e      	mov	r6, r5
1005908a:	3660      	adds	r6, #96	; 0x60
1005908c:	7d30      	ldrb	r0, [r6, #20]
1005908e:	06c1      	lsls	r1, r0, #27
10059090:	4628      	mov	r0, r5
10059092:	3020      	adds	r0, #32
10059094:	9002      	str	r0, [sp, #8]
10059096:	2900      	cmp	r1, #0
10059098:	db06      	blt.n	100590a8 <smp_Keys_Distribution_Send+0x3c>
1005909a:	2102      	movs	r1, #2
1005909c:	f7f3 fb3c 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
100590a0:	7d30      	ldrb	r0, [r6, #20]
100590a2:	2110      	movs	r1, #16
100590a4:	4308      	orrs	r0, r1
100590a6:	7530      	strb	r0, [r6, #20]
100590a8:	7aa8      	ldrb	r0, [r5, #10]
100590aa:	462e      	mov	r6, r5
100590ac:	3622      	adds	r6, #34	; 0x22
100590ae:	28d1      	cmp	r0, #209	; 0xd1
100590b0:	d008      	beq.n	100590c4 <smp_Keys_Distribution_Send+0x58>
100590b2:	28d2      	cmp	r0, #210	; 0xd2
100590b4:	d01b      	beq.n	100590ee <smp_Keys_Distribution_Send+0x82>
100590b6:	28d3      	cmp	r0, #211	; 0xd3
100590b8:	d02e      	beq.n	10059118 <smp_Keys_Distribution_Send+0xac>
100590ba:	28d4      	cmp	r0, #212	; 0xd4
100590bc:	d037      	beq.n	1005912e <smp_Keys_Distribution_Send+0xc2>
100590be:	28d5      	cmp	r0, #213	; 0xd5
100590c0:	d054      	beq.n	1005916c <smp_Keys_Distribution_Send+0x100>
100590c2:	e049      	b.n	10059158 <smp_Keys_Distribution_Send+0xec>
100590c4:	2108      	movs	r1, #8
100590c6:	4630      	mov	r0, r6
100590c8:	f7f3 fb26 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
100590cc:	482d      	ldr	r0, [pc, #180]	; (10059184 <smp_Keys_Distribution_Send+0x118>)
100590ce:	9700      	str	r7, [sp, #0]
100590d0:	6800      	ldr	r0, [r0, #0]
100590d2:	ab03      	add	r3, sp, #12
100590d4:	aa07      	add	r2, sp, #28
100590d6:	9902      	ldr	r1, [sp, #8]
100590d8:	3080      	adds	r0, #128	; 0x80
100590da:	f000 ff57 	bl	10059f8c <SMA_Diversify>
100590de:	68a0      	ldr	r0, [r4, #8]
100590e0:	2106      	movs	r1, #6
100590e2:	7301      	strb	r1, [r0, #12]
100590e4:	2011      	movs	r0, #17
100590e6:	80e0      	strh	r0, [r4, #6]
100590e8:	7f2a      	ldrb	r2, [r5, #28]
100590ea:	ab03      	add	r3, sp, #12
100590ec:	e01d      	b.n	1005912a <smp_Keys_Distribution_Send+0xbe>
100590ee:	200b      	movs	r0, #11
100590f0:	80e0      	strh	r0, [r4, #6]
100590f2:	68a0      	ldr	r0, [r4, #8]
100590f4:	2107      	movs	r1, #7
100590f6:	7301      	strb	r1, [r0, #12]
100590f8:	2300      	movs	r3, #0
100590fa:	aa07      	add	r2, sp, #28
100590fc:	4631      	mov	r1, r6
100590fe:	9802      	ldr	r0, [sp, #8]
10059100:	f001 f89a 	bl	1005a238 <SMA_generate_EDIV_recovery_DIV>
10059104:	ab07      	add	r3, sp, #28
10059106:	2202      	movs	r2, #2
10059108:	2105      	movs	r1, #5
1005910a:	4620      	mov	r0, r4
1005910c:	f7fb fd3e 	bl	10054b8c <PM_Write_Pckt_Data>
10059110:	2208      	movs	r2, #8
10059112:	4633      	mov	r3, r6
10059114:	2107      	movs	r1, #7
10059116:	e01c      	b.n	10059152 <smp_Keys_Distribution_Send+0xe6>
10059118:	2011      	movs	r0, #17
1005911a:	80e0      	strh	r0, [r4, #6]
1005911c:	68a0      	ldr	r0, [r4, #8]
1005911e:	2108      	movs	r1, #8
10059120:	7301      	strb	r1, [r0, #12]
10059122:	a808      	add	r0, sp, #32
10059124:	f000 ff5a 	bl	10059fdc <SMA_Generate_IRK>
10059128:	e029      	b.n	1005917e <smp_Keys_Distribution_Send+0x112>
1005912a:	2105      	movs	r1, #5
1005912c:	e011      	b.n	10059152 <smp_Keys_Distribution_Send+0xe6>
1005912e:	4669      	mov	r1, sp
10059130:	700f      	strb	r7, [r1, #0]
10059132:	a908      	add	r1, sp, #32
10059134:	4668      	mov	r0, sp
10059136:	f001 ffad 	bl	1005b094 <smp_get_local_identity_address>
1005913a:	2008      	movs	r0, #8
1005913c:	80e0      	strh	r0, [r4, #6]
1005913e:	2109      	movs	r1, #9
10059140:	68a0      	ldr	r0, [r4, #8]
10059142:	2206      	movs	r2, #6
10059144:	7301      	strb	r1, [r0, #12]
10059146:	4669      	mov	r1, sp
10059148:	68a0      	ldr	r0, [r4, #8]
1005914a:	7809      	ldrb	r1, [r1, #0]
1005914c:	7341      	strb	r1, [r0, #13]
1005914e:	ab08      	add	r3, sp, #32
10059150:	4611      	mov	r1, r2
10059152:	4620      	mov	r0, r4
10059154:	f7fb fd1a 	bl	10054b8c <PM_Write_Pckt_Data>
10059158:	4629      	mov	r1, r5
1005915a:	4620      	mov	r0, r4
1005915c:	f000 fefa 	bl	10059f54 <smp_send_packet>
10059160:	2800      	cmp	r0, #0
10059162:	d101      	bne.n	10059168 <smp_Keys_Distribution_Send+0xfc>
10059164:	20dd      	movs	r0, #221	; 0xdd
10059166:	72a8      	strb	r0, [r5, #10]
10059168:	b00d      	add	sp, #52	; 0x34
1005916a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005916c:	2011      	movs	r0, #17
1005916e:	80e0      	strh	r0, [r4, #6]
10059170:	68a0      	ldr	r0, [r4, #8]
10059172:	210a      	movs	r1, #10
10059174:	7301      	strb	r1, [r0, #12]
10059176:	a908      	add	r1, sp, #32
10059178:	4628      	mov	r0, r5
1005917a:	f000 ff1b 	bl	10059fb4 <SMA_Generate_CSRK>
1005917e:	ab08      	add	r3, sp, #32
10059180:	2210      	movs	r2, #16
10059182:	e7d2      	b.n	1005912a <smp_Keys_Distribution_Send+0xbe>
10059184:	20000d64 	.word	0x20000d64

10059188 <smp_LP_MI_Compute_c1_Confirm_Value>:
10059188:	b5f0      	push	{r4, r5, r6, r7, lr}
1005918a:	b099      	sub	sp, #100	; 0x64
1005918c:	4616      	mov	r6, r2
1005918e:	460d      	mov	r5, r1
10059190:	4604      	mov	r4, r0
10059192:	223c      	movs	r2, #60	; 0x3c
10059194:	2100      	movs	r1, #0
10059196:	4668      	mov	r0, sp
10059198:	f7e7 faf7 	bl	1004078a <Osal_MemSet>
1005919c:	2210      	movs	r2, #16
1005919e:	4629      	mov	r1, r5
100591a0:	a804      	add	r0, sp, #16
100591a2:	f7e7 faee 	bl	10040782 <Osal_MemCpy>
100591a6:	7fe0      	ldrb	r0, [r4, #31]
100591a8:	4d46      	ldr	r5, [pc, #280]	; (100592c4 <smp_LP_MI_Compute_c1_Confirm_Value+0x13c>)
100591aa:	2802      	cmp	r0, #2
100591ac:	d002      	beq.n	100591b4 <smp_LP_MI_Compute_c1_Confirm_Value+0x2c>
100591ae:	2803      	cmp	r0, #3
100591b0:	d006      	beq.n	100591c0 <smp_LP_MI_Compute_c1_Confirm_Value+0x38>
100591b2:	e00b      	b.n	100591cc <smp_LP_MI_Compute_c1_Confirm_Value+0x44>
100591b4:	6828      	ldr	r0, [r5, #0]
100591b6:	6901      	ldr	r1, [r0, #16]
100591b8:	4668      	mov	r0, sp
100591ba:	f7ff fcd7 	bl	10058b6c <int32ToLe4Byte>
100591be:	e005      	b.n	100591cc <smp_LP_MI_Compute_c1_Confirm_Value+0x44>
100591c0:	6829      	ldr	r1, [r5, #0]
100591c2:	2210      	movs	r2, #16
100591c4:	4668      	mov	r0, sp
100591c6:	311c      	adds	r1, #28
100591c8:	f7e7 fadb 	bl	10040782 <Osal_MemCpy>
100591cc:	2101      	movs	r1, #1
100591ce:	a808      	add	r0, sp, #32
100591d0:	7001      	strb	r1, [r0, #0]
100591d2:	682a      	ldr	r2, [r5, #0]
100591d4:	7e11      	ldrb	r1, [r2, #24]
100591d6:	7041      	strb	r1, [r0, #1]
100591d8:	7e20      	ldrb	r0, [r4, #24]
100591da:	07c1      	lsls	r1, r0, #31
100591dc:	0fc9      	lsrs	r1, r1, #31
100591de:	a808      	add	r0, sp, #32
100591e0:	7081      	strb	r1, [r0, #2]
100591e2:	4611      	mov	r1, r2
100591e4:	3180      	adds	r1, #128	; 0x80
100591e6:	7acb      	ldrb	r3, [r1, #11]
100591e8:	70c3      	strb	r3, [r0, #3]
100591ea:	7bd2      	ldrb	r2, [r2, #15]
100591ec:	7102      	strb	r2, [r0, #4]
100591ee:	2207      	movs	r2, #7
100591f0:	7142      	strb	r2, [r0, #5]
100591f2:	7182      	strb	r2, [r0, #6]
100591f4:	2202      	movs	r2, #2
100591f6:	71c2      	strb	r2, [r0, #7]
100591f8:	7e62      	ldrb	r2, [r4, #25]
100591fa:	7202      	strb	r2, [r0, #8]
100591fc:	7e20      	ldrb	r0, [r4, #24]
100591fe:	0780      	lsls	r0, r0, #30
10059200:	0fc2      	lsrs	r2, r0, #31
10059202:	a808      	add	r0, sp, #32
10059204:	7242      	strb	r2, [r0, #9]
10059206:	7a0a      	ldrb	r2, [r1, #8]
10059208:	7282      	strb	r2, [r0, #10]
1005920a:	7f22      	ldrb	r2, [r4, #28]
1005920c:	72c2      	strb	r2, [r0, #11]
1005920e:	7a4a      	ldrb	r2, [r1, #9]
10059210:	7302      	strb	r2, [r0, #12]
10059212:	7a89      	ldrb	r1, [r1, #10]
10059214:	7341      	strb	r1, [r0, #13]
10059216:	300f      	adds	r0, #15
10059218:	1e47      	subs	r7, r0, #1
1005921a:	4605      	mov	r5, r0
1005921c:	4639      	mov	r1, r7
1005921e:	f7fd f905 	bl	1005642c <LL_Get_Address>
10059222:	7860      	ldrb	r0, [r4, #1]
10059224:	2206      	movs	r2, #6
10059226:	07c1      	lsls	r1, r0, #31
10059228:	0fc9      	lsrs	r1, r1, #31
1005922a:	a808      	add	r0, sp, #32
1005922c:	7541      	strb	r1, [r0, #21]
1005922e:	3016      	adds	r0, #22
10059230:	1ca1      	adds	r1, r4, #2
10059232:	9017      	str	r0, [sp, #92]	; 0x5c
10059234:	f7e7 faa5 	bl	10040782 <Osal_MemCpy>
10059238:	a811      	add	r0, sp, #68	; 0x44
1005923a:	2207      	movs	r2, #7
1005923c:	3001      	adds	r0, #1
1005923e:	1ff9      	subs	r1, r7, #7
10059240:	f7e7 fa9f 	bl	10040782 <Osal_MemCpy>
10059244:	ac0f      	add	r4, sp, #60	; 0x3c
10059246:	2207      	movs	r2, #7
10059248:	1ca0      	adds	r0, r4, #2
1005924a:	a908      	add	r1, sp, #32
1005924c:	f7e7 fa99 	bl	10040782 <Osal_MemCpy>
10059250:	2201      	movs	r2, #1
10059252:	1c60      	adds	r0, r4, #1
10059254:	1fe1      	subs	r1, r4, #7
10059256:	f7e7 fa94 	bl	10040782 <Osal_MemCpy>
1005925a:	2201      	movs	r2, #1
1005925c:	4639      	mov	r1, r7
1005925e:	a80f      	add	r0, sp, #60	; 0x3c
10059260:	f7e7 fa8f 	bl	10040782 <Osal_MemCpy>
10059264:	2000      	movs	r0, #0
10059266:	4669      	mov	r1, sp
10059268:	af13      	add	r7, sp, #76	; 0x4c
1005926a:	180a      	adds	r2, r1, r0
1005926c:	7c12      	ldrb	r2, [r2, #16]
1005926e:	5c23      	ldrb	r3, [r4, r0]
10059270:	405a      	eors	r2, r3
10059272:	543a      	strb	r2, [r7, r0]
10059274:	1c40      	adds	r0, r0, #1
10059276:	b2c0      	uxtb	r0, r0
10059278:	2810      	cmp	r0, #16
1005927a:	d3f6      	bcc.n	1005926a <smp_LP_MI_Compute_c1_Confirm_Value+0xe2>
1005927c:	4632      	mov	r2, r6
1005927e:	4639      	mov	r1, r7
10059280:	4668      	mov	r0, sp
10059282:	f7f3 fdca 	bl	1004ce1a <hci_le_encrypt>
10059286:	2210      	movs	r2, #16
10059288:	2100      	movs	r1, #0
1005928a:	a80f      	add	r0, sp, #60	; 0x3c
1005928c:	f7e7 fa7d 	bl	1004078a <Osal_MemSet>
10059290:	2206      	movs	r2, #6
10059292:	4629      	mov	r1, r5
10059294:	1da0      	adds	r0, r4, #6
10059296:	f7e7 fa74 	bl	10040782 <Osal_MemCpy>
1005929a:	2206      	movs	r2, #6
1005929c:	a80f      	add	r0, sp, #60	; 0x3c
1005929e:	9917      	ldr	r1, [sp, #92]	; 0x5c
100592a0:	f7e7 fa6f 	bl	10040782 <Osal_MemCpy>
100592a4:	2100      	movs	r1, #0
100592a6:	5c70      	ldrb	r0, [r6, r1]
100592a8:	5c62      	ldrb	r2, [r4, r1]
100592aa:	4050      	eors	r0, r2
100592ac:	5478      	strb	r0, [r7, r1]
100592ae:	1c49      	adds	r1, r1, #1
100592b0:	b2c9      	uxtb	r1, r1
100592b2:	2910      	cmp	r1, #16
100592b4:	d3f7      	bcc.n	100592a6 <smp_LP_MI_Compute_c1_Confirm_Value+0x11e>
100592b6:	4632      	mov	r2, r6
100592b8:	a913      	add	r1, sp, #76	; 0x4c
100592ba:	4668      	mov	r0, sp
100592bc:	f7f3 fdad 	bl	1004ce1a <hci_le_encrypt>
100592c0:	b019      	add	sp, #100	; 0x64
100592c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100592c4:	20000d6c 	.word	0x20000d6c

100592c8 <smp_LP_SR_Compute_c1_Confirm_Value>:
100592c8:	b5f0      	push	{r4, r5, r6, r7, lr}
100592ca:	b099      	sub	sp, #100	; 0x64
100592cc:	4616      	mov	r6, r2
100592ce:	460d      	mov	r5, r1
100592d0:	4604      	mov	r4, r0
100592d2:	223c      	movs	r2, #60	; 0x3c
100592d4:	2100      	movs	r1, #0
100592d6:	4668      	mov	r0, sp
100592d8:	f7e7 fa57 	bl	1004078a <Osal_MemSet>
100592dc:	2210      	movs	r2, #16
100592de:	4629      	mov	r1, r5
100592e0:	a804      	add	r0, sp, #16
100592e2:	f7e7 fa4e 	bl	10040782 <Osal_MemCpy>
100592e6:	7fe0      	ldrb	r0, [r4, #31]
100592e8:	4d4a      	ldr	r5, [pc, #296]	; (10059414 <smp_LP_SR_Compute_c1_Confirm_Value+0x14c>)
100592ea:	2802      	cmp	r0, #2
100592ec:	d002      	beq.n	100592f4 <smp_LP_SR_Compute_c1_Confirm_Value+0x2c>
100592ee:	2803      	cmp	r0, #3
100592f0:	d006      	beq.n	10059300 <smp_LP_SR_Compute_c1_Confirm_Value+0x38>
100592f2:	e00b      	b.n	1005930c <smp_LP_SR_Compute_c1_Confirm_Value+0x44>
100592f4:	6828      	ldr	r0, [r5, #0]
100592f6:	6901      	ldr	r1, [r0, #16]
100592f8:	4668      	mov	r0, sp
100592fa:	f7ff fc37 	bl	10058b6c <int32ToLe4Byte>
100592fe:	e005      	b.n	1005930c <smp_LP_SR_Compute_c1_Confirm_Value+0x44>
10059300:	6829      	ldr	r1, [r5, #0]
10059302:	2210      	movs	r2, #16
10059304:	4668      	mov	r0, sp
10059306:	311c      	adds	r1, #28
10059308:	f7e7 fa3b 	bl	10040782 <Osal_MemCpy>
1005930c:	2101      	movs	r1, #1
1005930e:	a808      	add	r0, sp, #32
10059310:	7001      	strb	r1, [r0, #0]
10059312:	7e61      	ldrb	r1, [r4, #25]
10059314:	7041      	strb	r1, [r0, #1]
10059316:	7e20      	ldrb	r0, [r4, #24]
10059318:	0780      	lsls	r0, r0, #30
1005931a:	0fc1      	lsrs	r1, r0, #31
1005931c:	a808      	add	r0, sp, #32
1005931e:	7081      	strb	r1, [r0, #2]
10059320:	682a      	ldr	r2, [r5, #0]
10059322:	4611      	mov	r1, r2
10059324:	3180      	adds	r1, #128	; 0x80
10059326:	7a0b      	ldrb	r3, [r1, #8]
10059328:	70c3      	strb	r3, [r0, #3]
1005932a:	7f23      	ldrb	r3, [r4, #28]
1005932c:	7103      	strb	r3, [r0, #4]
1005932e:	7a4b      	ldrb	r3, [r1, #9]
10059330:	7143      	strb	r3, [r0, #5]
10059332:	7a8b      	ldrb	r3, [r1, #10]
10059334:	7183      	strb	r3, [r0, #6]
10059336:	2302      	movs	r3, #2
10059338:	71c3      	strb	r3, [r0, #7]
1005933a:	7e13      	ldrb	r3, [r2, #24]
1005933c:	7203      	strb	r3, [r0, #8]
1005933e:	7e20      	ldrb	r0, [r4, #24]
10059340:	07c3      	lsls	r3, r0, #31
10059342:	0fdb      	lsrs	r3, r3, #31
10059344:	a808      	add	r0, sp, #32
10059346:	7243      	strb	r3, [r0, #9]
10059348:	7ac9      	ldrb	r1, [r1, #11]
1005934a:	7281      	strb	r1, [r0, #10]
1005934c:	7bd1      	ldrb	r1, [r2, #15]
1005934e:	72c1      	strb	r1, [r0, #11]
10059350:	7f60      	ldrb	r0, [r4, #29]
10059352:	0741      	lsls	r1, r0, #29
10059354:	0f49      	lsrs	r1, r1, #29
10059356:	a808      	add	r0, sp, #32
10059358:	7301      	strb	r1, [r0, #12]
1005935a:	7fa0      	ldrb	r0, [r4, #30]
1005935c:	0741      	lsls	r1, r0, #29
1005935e:	0f49      	lsrs	r1, r1, #29
10059360:	a808      	add	r0, sp, #32
10059362:	7341      	strb	r1, [r0, #13]
10059364:	3016      	adds	r0, #22
10059366:	1e47      	subs	r7, r0, #1
10059368:	4605      	mov	r5, r0
1005936a:	4639      	mov	r1, r7
1005936c:	f7fd f85e 	bl	1005642c <LL_Get_Address>
10059370:	7860      	ldrb	r0, [r4, #1]
10059372:	2206      	movs	r2, #6
10059374:	07c1      	lsls	r1, r0, #31
10059376:	0fc9      	lsrs	r1, r1, #31
10059378:	a808      	add	r0, sp, #32
1005937a:	7381      	strb	r1, [r0, #14]
1005937c:	300f      	adds	r0, #15
1005937e:	1ca1      	adds	r1, r4, #2
10059380:	9017      	str	r0, [sp, #92]	; 0x5c
10059382:	f7e7 f9fe 	bl	10040782 <Osal_MemCpy>
10059386:	a811      	add	r0, sp, #68	; 0x44
10059388:	a909      	add	r1, sp, #36	; 0x24
1005938a:	2207      	movs	r2, #7
1005938c:	3001      	adds	r0, #1
1005938e:	3103      	adds	r1, #3
10059390:	f7e7 f9f7 	bl	10040782 <Osal_MemCpy>
10059394:	ac0f      	add	r4, sp, #60	; 0x3c
10059396:	2207      	movs	r2, #7
10059398:	1ca0      	adds	r0, r4, #2
1005939a:	a908      	add	r1, sp, #32
1005939c:	f7e7 f9f1 	bl	10040782 <Osal_MemCpy>
100593a0:	2201      	movs	r2, #1
100593a2:	4639      	mov	r1, r7
100593a4:	1c60      	adds	r0, r4, #1
100593a6:	f7e7 f9ec 	bl	10040782 <Osal_MemCpy>
100593aa:	2201      	movs	r2, #1
100593ac:	a80f      	add	r0, sp, #60	; 0x3c
100593ae:	1ff9      	subs	r1, r7, #7
100593b0:	f7e7 f9e7 	bl	10040782 <Osal_MemCpy>
100593b4:	2000      	movs	r0, #0
100593b6:	4669      	mov	r1, sp
100593b8:	af13      	add	r7, sp, #76	; 0x4c
100593ba:	180a      	adds	r2, r1, r0
100593bc:	7c12      	ldrb	r2, [r2, #16]
100593be:	5c23      	ldrb	r3, [r4, r0]
100593c0:	405a      	eors	r2, r3
100593c2:	543a      	strb	r2, [r7, r0]
100593c4:	1c40      	adds	r0, r0, #1
100593c6:	b2c0      	uxtb	r0, r0
100593c8:	2810      	cmp	r0, #16
100593ca:	d3f6      	bcc.n	100593ba <smp_LP_SR_Compute_c1_Confirm_Value+0xf2>
100593cc:	4632      	mov	r2, r6
100593ce:	4639      	mov	r1, r7
100593d0:	4668      	mov	r0, sp
100593d2:	f7f3 fd22 	bl	1004ce1a <hci_le_encrypt>
100593d6:	2210      	movs	r2, #16
100593d8:	2100      	movs	r1, #0
100593da:	a80f      	add	r0, sp, #60	; 0x3c
100593dc:	f7e7 f9d5 	bl	1004078a <Osal_MemSet>
100593e0:	2206      	movs	r2, #6
100593e2:	1da0      	adds	r0, r4, #6
100593e4:	9917      	ldr	r1, [sp, #92]	; 0x5c
100593e6:	f7e7 f9cc 	bl	10040782 <Osal_MemCpy>
100593ea:	2206      	movs	r2, #6
100593ec:	4629      	mov	r1, r5
100593ee:	a80f      	add	r0, sp, #60	; 0x3c
100593f0:	f7e7 f9c7 	bl	10040782 <Osal_MemCpy>
100593f4:	2000      	movs	r0, #0
100593f6:	5c31      	ldrb	r1, [r6, r0]
100593f8:	5c22      	ldrb	r2, [r4, r0]
100593fa:	4051      	eors	r1, r2
100593fc:	5439      	strb	r1, [r7, r0]
100593fe:	1c40      	adds	r0, r0, #1
10059400:	b2c0      	uxtb	r0, r0
10059402:	2810      	cmp	r0, #16
10059404:	d3f7      	bcc.n	100593f6 <smp_LP_SR_Compute_c1_Confirm_Value+0x12e>
10059406:	4632      	mov	r2, r6
10059408:	a913      	add	r1, sp, #76	; 0x4c
1005940a:	4668      	mov	r0, sp
1005940c:	f7f3 fd05 	bl	1004ce1a <hci_le_encrypt>
10059410:	b019      	add	sp, #100	; 0x64
10059412:	bdf0      	pop	{r4, r5, r6, r7, pc}
10059414:	20000d6c 	.word	0x20000d6c

10059418 <smp_MI_Start_Encryption>:
10059418:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
1005941a:	21ac      	movs	r1, #172	; 0xac
1005941c:	7281      	strb	r1, [r0, #10]
1005941e:	7b81      	ldrb	r1, [r0, #14]
10059420:	4605      	mov	r5, r0
10059422:	078a      	lsls	r2, r1, #30
10059424:	352a      	adds	r5, #42	; 0x2a
10059426:	4604      	mov	r4, r0
10059428:	2a00      	cmp	r2, #0
1005942a:	da09      	bge.n	10059440 <smp_MI_Start_Encryption+0x28>
1005942c:	2210      	movs	r2, #16
1005942e:	2100      	movs	r1, #0
10059430:	4668      	mov	r0, sp
10059432:	f7e7 f9aa 	bl	1004078a <Osal_MemSet>
10059436:	4669      	mov	r1, sp
10059438:	462b      	mov	r3, r5
1005943a:	460a      	mov	r2, r1
1005943c:	25ad      	movs	r5, #173	; 0xad
1005943e:	e00f      	b.n	10059460 <smp_MI_Start_Encryption+0x48>
10059440:	07c8      	lsls	r0, r1, #31
10059442:	d101      	bne.n	10059448 <smp_MI_Start_Encryption+0x30>
10059444:	0748      	lsls	r0, r1, #29
10059446:	d519      	bpl.n	1005947c <smp_MI_Start_Encryption+0x64>
10059448:	4621      	mov	r1, r4
1005944a:	314a      	adds	r1, #74	; 0x4a
1005944c:	4622      	mov	r2, r4
1005944e:	7ae0      	ldrb	r0, [r4, #11]
10059450:	3252      	adds	r2, #82	; 0x52
10059452:	0700      	lsls	r0, r0, #28
10059454:	d501      	bpl.n	1005945a <smp_MI_Start_Encryption+0x42>
10059456:	462b      	mov	r3, r5
10059458:	e001      	b.n	1005945e <smp_MI_Start_Encryption+0x46>
1005945a:	4623      	mov	r3, r4
1005945c:	333a      	adds	r3, #58	; 0x3a
1005945e:	25ae      	movs	r5, #174	; 0xae
10059460:	8920      	ldrh	r0, [r4, #8]
10059462:	0500      	lsls	r0, r0, #20
10059464:	0d00      	lsrs	r0, r0, #20
10059466:	f7fd fd07 	bl	10056e78 <LL_Start_Encryption>
1005946a:	2800      	cmp	r0, #0
1005946c:	d00b      	beq.n	10059486 <smp_MI_Start_Encryption+0x6e>
1005946e:	283a      	cmp	r0, #58	; 0x3a
10059470:	d001      	beq.n	10059476 <smp_MI_Start_Encryption+0x5e>
10059472:	280c      	cmp	r0, #12
10059474:	d100      	bne.n	10059478 <smp_MI_Start_Encryption+0x60>
10059476:	2000      	movs	r0, #0
10059478:	b004      	add	sp, #16
1005947a:	bd70      	pop	{r4, r5, r6, pc}
1005947c:	08c8      	lsrs	r0, r1, #3
1005947e:	00c0      	lsls	r0, r0, #3
10059480:	73a0      	strb	r0, [r4, #14]
10059482:	2046      	movs	r0, #70	; 0x46
10059484:	e7f8      	b.n	10059478 <smp_MI_Start_Encryption+0x60>
10059486:	7ba1      	ldrb	r1, [r4, #14]
10059488:	07ca      	lsls	r2, r1, #31
1005948a:	d003      	beq.n	10059494 <smp_MI_Start_Encryption+0x7c>
1005948c:	2210      	movs	r2, #16
1005948e:	4311      	orrs	r1, r2
10059490:	73a1      	strb	r1, [r4, #14]
10059492:	25f1      	movs	r5, #241	; 0xf1
10059494:	b2c9      	uxtb	r1, r1
10059496:	08c9      	lsrs	r1, r1, #3
10059498:	00c9      	lsls	r1, r1, #3
1005949a:	73a1      	strb	r1, [r4, #14]
1005949c:	72a5      	strb	r5, [r4, #10]
1005949e:	e7eb      	b.n	10059478 <smp_MI_Start_Encryption+0x60>

100594a0 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt>:
100594a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100594a2:	6802      	ldr	r2, [r0, #0]
100594a4:	6841      	ldr	r1, [r0, #4]
100594a6:	6892      	ldr	r2, [r2, #8]
100594a8:	20ff      	movs	r0, #255	; 0xff
100594aa:	7b13      	ldrb	r3, [r2, #12]
100594ac:	2b0e      	cmp	r3, #14
100594ae:	d113      	bne.n	100594d8 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x38>
100594b0:	7acb      	ldrb	r3, [r1, #11]
100594b2:	06db      	lsls	r3, r3, #27
100594b4:	d510      	bpl.n	100594d8 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x38>
100594b6:	7fcb      	ldrb	r3, [r1, #31]
100594b8:	2b02      	cmp	r3, #2
100594ba:	d10d      	bne.n	100594d8 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x38>
100594bc:	7e4b      	ldrb	r3, [r1, #25]
100594be:	2b02      	cmp	r3, #2
100594c0:	d10a      	bne.n	100594d8 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x38>
100594c2:	2374      	movs	r3, #116	; 0x74
100594c4:	5c5b      	ldrb	r3, [r3, r1]
100594c6:	07db      	lsls	r3, r3, #31
100594c8:	7a8b      	ldrb	r3, [r1, #10]
100594ca:	d006      	beq.n	100594da <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x3a>
100594cc:	2bb2      	cmp	r3, #178	; 0xb2
100594ce:	d00a      	beq.n	100594e6 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x46>
100594d0:	2bb4      	cmp	r3, #180	; 0xb4
100594d2:	d008      	beq.n	100594e6 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x46>
100594d4:	2bb5      	cmp	r3, #181	; 0xb5
100594d6:	d006      	beq.n	100594e6 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x46>
100594d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100594da:	2ba2      	cmp	r3, #162	; 0xa2
100594dc:	d003      	beq.n	100594e6 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x46>
100594de:	2ba4      	cmp	r3, #164	; 0xa4
100594e0:	d001      	beq.n	100594e6 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x46>
100594e2:	2ba5      	cmp	r3, #165	; 0xa5
100594e4:	d1f8      	bne.n	100594d8 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x38>
100594e6:	8908      	ldrh	r0, [r1, #8]
100594e8:	2137      	movs	r1, #55	; 0x37
100594ea:	0505      	lsls	r5, r0, #20
100594ec:	480d      	ldr	r0, [pc, #52]	; (10059524 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x84>)
100594ee:	0149      	lsls	r1, r1, #5
100594f0:	6800      	ldr	r0, [r0, #0]
100594f2:	2602      	movs	r6, #2
100594f4:	1841      	adds	r1, r0, r1
100594f6:	7ac9      	ldrb	r1, [r1, #11]
100594f8:	0d2d      	lsrs	r5, r5, #20
100594fa:	7b54      	ldrb	r4, [r2, #13]
100594fc:	2301      	movs	r3, #1
100594fe:	0649      	lsls	r1, r1, #25
10059500:	d50e      	bpl.n	10059520 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x80>
10059502:	2102      	movs	r1, #2
10059504:	028f      	lsls	r7, r1, #10
10059506:	3008      	adds	r0, #8
10059508:	19c0      	adds	r0, r0, r7
1005950a:	221c      	movs	r2, #28
1005950c:	6940      	ldr	r0, [r0, #20]
1005950e:	f002 fced 	bl	1005beec <aci_event_fifo_push_header>
10059512:	0001      	movs	r1, r0
10059514:	d004      	beq.n	10059520 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt+0x80>
10059516:	808d      	strh	r5, [r1, #4]
10059518:	718c      	strb	r4, [r1, #6]
1005951a:	4630      	mov	r0, r6
1005951c:	f002 fcd2 	bl	1005bec4 <aci_event_fifo_push>
10059520:	2000      	movs	r0, #0
10059522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10059524:	20000d64 	.word	0x20000d64

10059528 <smp_Process_Rx_Packet_wrt_Current_State>:
10059528:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005952a:	4606      	mov	r6, r0
1005952c:	6880      	ldr	r0, [r0, #8]
1005952e:	25ff      	movs	r5, #255	; 0xff
10059530:	7b07      	ldrb	r7, [r0, #12]
10059532:	7a88      	ldrb	r0, [r1, #10]
10059534:	460c      	mov	r4, r1
10059536:	28d0      	cmp	r0, #208	; 0xd0
10059538:	d00b      	beq.n	10059552 <smp_Process_Rx_Packet_wrt_Current_State+0x2a>
1005953a:	7ae0      	ldrb	r0, [r4, #11]
1005953c:	0700      	lsls	r0, r0, #28
1005953e:	d50d      	bpl.n	1005955c <smp_Process_Rx_Packet_wrt_Current_State+0x34>
10059540:	4668      	mov	r0, sp
10059542:	9600      	str	r6, [sp, #0]
10059544:	9401      	str	r4, [sp, #4]
10059546:	f7e8 fb7d 	bl	10041c44 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt_ucfg>
1005954a:	4605      	mov	r5, r0
1005954c:	28ff      	cmp	r0, #255	; 0xff
1005954e:	d005      	beq.n	1005955c <smp_Process_Rx_Packet_wrt_Current_State+0x34>
10059550:	e07c      	b.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10059552:	4630      	mov	r0, r6
10059554:	f001 fdfe 	bl	1005b154 <smp_keys_receiving>
10059558:	2500      	movs	r5, #0
1005955a:	e077      	b.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
1005955c:	2074      	movs	r0, #116	; 0x74
1005955e:	5d00      	ldrb	r0, [r0, r4]
10059560:	07c0      	lsls	r0, r0, #31
10059562:	d06d      	beq.n	10059640 <smp_Process_Rx_Packet_wrt_Current_State+0x118>
10059564:	7aa0      	ldrb	r0, [r4, #10]
10059566:	2800      	cmp	r0, #0
10059568:	d008      	beq.n	1005957c <smp_Process_Rx_Packet_wrt_Current_State+0x54>
1005956a:	28f1      	cmp	r0, #241	; 0xf1
1005956c:	d006      	beq.n	1005957c <smp_Process_Rx_Packet_wrt_Current_State+0x54>
1005956e:	28b5      	cmp	r0, #181	; 0xb5
10059570:	d04f      	beq.n	10059612 <smp_Process_Rx_Packet_wrt_Current_State+0xea>
10059572:	28b6      	cmp	r0, #182	; 0xb6
10059574:	d054      	beq.n	10059620 <smp_Process_Rx_Packet_wrt_Current_State+0xf8>
10059576:	28fb      	cmp	r0, #251	; 0xfb
10059578:	d059      	beq.n	1005962e <smp_Process_Rx_Packet_wrt_Current_State+0x106>
1005957a:	e067      	b.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
1005957c:	2f01      	cmp	r7, #1
1005957e:	d165      	bne.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10059580:	2700      	movs	r7, #0
10059582:	8920      	ldrh	r0, [r4, #8]
10059584:	f001 fd38 	bl	1005aff8 <smp_find_remote_device_index>
10059588:	4602      	mov	r2, r0
1005958a:	2100      	movs	r1, #0
1005958c:	4b30      	ldr	r3, [pc, #192]	; (10059650 <smp_Process_Rx_Packet_wrt_Current_State+0x128>)
1005958e:	4608      	mov	r0, r1
10059590:	f001 fb40 	bl	1005ac14 <SMP_reset_timer>
10059594:	7b20      	ldrb	r0, [r4, #12]
10059596:	43c1      	mvns	r1, r0
10059598:	0789      	lsls	r1, r1, #30
1005959a:	d005      	beq.n	100595a8 <smp_Process_Rx_Packet_wrt_Current_State+0x80>
1005959c:	0781      	lsls	r1, r0, #30
1005959e:	d515      	bpl.n	100595cc <smp_Process_Rx_Packet_wrt_Current_State+0xa4>
100595a0:	2101      	movs	r1, #1
100595a2:	4308      	orrs	r0, r1
100595a4:	7320      	strb	r0, [r4, #12]
100595a6:	e00c      	b.n	100595c2 <smp_Process_Rx_Packet_wrt_Current_State+0x9a>
100595a8:	210c      	movs	r1, #12
100595aa:	4008      	ands	r0, r1
100595ac:	d030      	beq.n	10059610 <smp_Process_Rx_Packet_wrt_Current_State+0xe8>
100595ae:	2804      	cmp	r0, #4
100595b0:	d007      	beq.n	100595c2 <smp_Process_Rx_Packet_wrt_Current_State+0x9a>
100595b2:	2808      	cmp	r0, #8
100595b4:	d02b      	beq.n	1005960e <smp_Process_Rx_Packet_wrt_Current_State+0xe6>
100595b6:	280c      	cmp	r0, #12
100595b8:	d100      	bne.n	100595bc <smp_Process_Rx_Packet_wrt_Current_State+0x94>
100595ba:	2701      	movs	r7, #1
100595bc:	2f00      	cmp	r7, #0
100595be:	d105      	bne.n	100595cc <smp_Process_Rx_Packet_wrt_Current_State+0xa4>
100595c0:	e044      	b.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
100595c2:	7b20      	ldrb	r0, [r4, #12]
100595c4:	0701      	lsls	r1, r0, #28
100595c6:	0f89      	lsrs	r1, r1, #30
100595c8:	2901      	cmp	r1, #1
100595ca:	d004      	beq.n	100595d6 <smp_Process_Rx_Packet_wrt_Current_State+0xae>
100595cc:	4621      	mov	r1, r4
100595ce:	4630      	mov	r0, r6
100595d0:	f000 fae4 	bl	10059b9c <smp____SR_PairingRequest_Receive>
100595d4:	e039      	b.n	1005964a <smp_Process_Rx_Packet_wrt_Current_State+0x122>
100595d6:	21fb      	movs	r1, #251	; 0xfb
100595d8:	4008      	ands	r0, r1
100595da:	2108      	movs	r1, #8
100595dc:	4308      	orrs	r0, r1
100595de:	7320      	strb	r0, [r4, #12]
100595e0:	481c      	ldr	r0, [pc, #112]	; (10059654 <smp_Process_Rx_Packet_wrt_Current_State+0x12c>)
100595e2:	2137      	movs	r1, #55	; 0x37
100595e4:	6800      	ldr	r0, [r0, #0]
100595e6:	0149      	lsls	r1, r1, #5
100595e8:	1841      	adds	r1, r0, r1
100595ea:	7a89      	ldrb	r1, [r1, #10]
100595ec:	2402      	movs	r4, #2
100595ee:	0689      	lsls	r1, r1, #26
100595f0:	d50d      	bpl.n	1005960e <smp_Process_Rx_Packet_wrt_Current_State+0xe6>
100595f2:	2102      	movs	r1, #2
100595f4:	028b      	lsls	r3, r1, #10
100595f6:	3008      	adds	r0, #8
100595f8:	18c0      	adds	r0, r0, r3
100595fa:	2217      	movs	r2, #23
100595fc:	6940      	ldr	r0, [r0, #20]
100595fe:	2300      	movs	r3, #0
10059600:	f002 fc74 	bl	1005beec <aci_event_fifo_push_header>
10059604:	0001      	movs	r1, r0
10059606:	d002      	beq.n	1005960e <smp_Process_Rx_Packet_wrt_Current_State+0xe6>
10059608:	4620      	mov	r0, r4
1005960a:	f002 fc5b 	bl	1005bec4 <aci_event_fifo_push>
1005960e:	2043      	movs	r0, #67	; 0x43
10059610:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10059612:	2f03      	cmp	r7, #3
10059614:	d11a      	bne.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10059616:	4621      	mov	r1, r4
10059618:	4630      	mov	r0, r6
1005961a:	f000 f9f1 	bl	10059a00 <smp____SR_PairingConfirm_Receive>
1005961e:	e014      	b.n	1005964a <smp_Process_Rx_Packet_wrt_Current_State+0x122>
10059620:	2f04      	cmp	r7, #4
10059622:	d113      	bne.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10059624:	4621      	mov	r1, r4
10059626:	4630      	mov	r0, r6
10059628:	f000 fa28 	bl	10059a7c <smp____SR_PairingRandom_Receive>
1005962c:	e00d      	b.n	1005964a <smp_Process_Rx_Packet_wrt_Current_State+0x122>
1005962e:	2f01      	cmp	r7, #1
10059630:	d10c      	bne.n	1005964c <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10059632:	2301      	movs	r3, #1
10059634:	2200      	movs	r2, #0
10059636:	2109      	movs	r1, #9
10059638:	4620      	mov	r0, r4
1005963a:	f001 fe97 	bl	1005b36c <smp_pairing_failed_send>
1005963e:	e004      	b.n	1005964a <smp_Process_Rx_Packet_wrt_Current_State+0x122>
10059640:	4668      	mov	r0, sp
10059642:	9600      	str	r6, [sp, #0]
10059644:	9401      	str	r4, [sp, #4]
10059646:	f7e8 fa75 	bl	10041b34 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt_ucfg>
1005964a:	4605      	mov	r5, r0
1005964c:	4628      	mov	r0, r5
1005964e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10059650:	00007530 	.word	0x00007530
10059654:	20000d64 	.word	0x20000d64

10059658 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt>:
10059658:	b510      	push	{r4, lr}
1005965a:	6804      	ldr	r4, [r0, #0]
1005965c:	6841      	ldr	r1, [r0, #4]
1005965e:	68a2      	ldr	r2, [r4, #8]
10059660:	20ff      	movs	r0, #255	; 0xff
10059662:	7b13      	ldrb	r3, [r2, #12]
10059664:	7a8a      	ldrb	r2, [r1, #10]
10059666:	2a00      	cmp	r2, #0
10059668:	d00d      	beq.n	10059686 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x2e>
1005966a:	2af1      	cmp	r2, #241	; 0xf1
1005966c:	d00b      	beq.n	10059686 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x2e>
1005966e:	2aa1      	cmp	r2, #161	; 0xa1
10059670:	d00f      	beq.n	10059692 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x3a>
10059672:	2aa5      	cmp	r2, #165	; 0xa5
10059674:	d013      	beq.n	1005969e <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x46>
10059676:	2aa6      	cmp	r2, #166	; 0xa6
10059678:	d104      	bne.n	10059684 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x2c>
1005967a:	2b04      	cmp	r3, #4
1005967c:	d102      	bne.n	10059684 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x2c>
1005967e:	4620      	mov	r0, r4
10059680:	f000 f8d4 	bl	1005982c <smp____MI_PairingRandom_Receive>
10059684:	bd10      	pop	{r4, pc}
10059686:	2b0b      	cmp	r3, #11
10059688:	d1fc      	bne.n	10059684 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x2c>
1005968a:	4620      	mov	r0, r4
1005968c:	f000 f976 	bl	1005997c <smp____MI_SecurityRequest_Receive>
10059690:	bd10      	pop	{r4, pc}
10059692:	2b02      	cmp	r3, #2
10059694:	d1fc      	bne.n	10059690 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x38>
10059696:	4620      	mov	r0, r4
10059698:	f000 f93a 	bl	10059910 <smp____MI_PairingResponse_Receive>
1005969c:	bd10      	pop	{r4, pc}
1005969e:	2b03      	cmp	r3, #3
100596a0:	d1fc      	bne.n	1005969c <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt+0x44>
100596a2:	4620      	mov	r0, r4
100596a4:	f000 f862 	bl	1005976c <smp____MI_PairingConfirm_Receive>
100596a8:	bd10      	pop	{r4, pc}

100596aa <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt>:
100596aa:	b510      	push	{r4, lr}
100596ac:	6803      	ldr	r3, [r0, #0]
100596ae:	6841      	ldr	r1, [r0, #4]
100596b0:	689a      	ldr	r2, [r3, #8]
100596b2:	20ff      	movs	r0, #255	; 0xff
100596b4:	7b14      	ldrb	r4, [r2, #12]
100596b6:	7a8a      	ldrb	r2, [r1, #10]
100596b8:	2aa2      	cmp	r2, #162	; 0xa2
100596ba:	d00b      	beq.n	100596d4 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x2a>
100596bc:	2ab2      	cmp	r2, #178	; 0xb2
100596be:	d009      	beq.n	100596d4 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x2a>
100596c0:	2aab      	cmp	r2, #171	; 0xab
100596c2:	d001      	beq.n	100596c8 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x1e>
100596c4:	2abb      	cmp	r2, #187	; 0xbb
100596c6:	d104      	bne.n	100596d2 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x28>
100596c8:	2c0d      	cmp	r4, #13
100596ca:	d102      	bne.n	100596d2 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x28>
100596cc:	4618      	mov	r0, r3
100596ce:	f002 f9e9 	bl	1005baa4 <smp_sc_phase_2as2_dhkey_check_receive>
100596d2:	bd10      	pop	{r4, pc}
100596d4:	2c0c      	cmp	r4, #12
100596d6:	d1fc      	bne.n	100596d2 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x28>
100596d8:	2274      	movs	r2, #116	; 0x74
100596da:	5c52      	ldrb	r2, [r2, r1]
100596dc:	07d2      	lsls	r2, r2, #31
100596de:	7aca      	ldrb	r2, [r1, #11]
100596e0:	d005      	beq.n	100596ee <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x44>
100596e2:	0652      	lsls	r2, r2, #25
100596e4:	d4f5      	bmi.n	100596d2 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x28>
100596e6:	4618      	mov	r0, r3
100596e8:	f002 f952 	bl	1005b990 <smp_sc_pairing_public_key_receive>
100596ec:	bd10      	pop	{r4, pc}
100596ee:	0692      	lsls	r2, r2, #26
100596f0:	d4f9      	bmi.n	100596e6 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt+0x3c>
100596f2:	bd10      	pop	{r4, pc}

100596f4 <smp_Set_Key_Association_Method>:
100596f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100596f6:	4604      	mov	r4, r0
100596f8:	2500      	movs	r5, #0
100596fa:	f7ff fa8d 	bl	10058c18 <smp_Determine_Key_Association_Method>
100596fe:	2847      	cmp	r0, #71	; 0x47
10059700:	d003      	beq.n	1005970a <smp_Set_Key_Association_Method+0x16>
10059702:	7fe0      	ldrb	r0, [r4, #31]
10059704:	2802      	cmp	r0, #2
10059706:	d002      	beq.n	1005970e <smp_Set_Key_Association_Method+0x1a>
10059708:	e026      	b.n	10059758 <smp_Set_Key_Association_Method+0x64>
1005970a:	7fe5      	ldrb	r5, [r4, #31]
1005970c:	e024      	b.n	10059758 <smp_Set_Key_Association_Method+0x64>
1005970e:	4815      	ldr	r0, [pc, #84]	; (10059764 <smp_Set_Key_Association_Method+0x70>)
10059710:	6800      	ldr	r0, [r0, #0]
10059712:	7d00      	ldrb	r0, [r0, #20]
10059714:	2800      	cmp	r0, #0
10059716:	d021      	beq.n	1005975c <smp_Set_Key_Association_Method+0x68>
10059718:	2002      	movs	r0, #2
1005971a:	9000      	str	r0, [sp, #0]
1005971c:	8920      	ldrh	r0, [r4, #8]
1005971e:	2137      	movs	r1, #55	; 0x37
10059720:	0506      	lsls	r6, r0, #20
10059722:	4811      	ldr	r0, [pc, #68]	; (10059768 <smp_Set_Key_Association_Method+0x74>)
10059724:	0149      	lsls	r1, r1, #5
10059726:	6800      	ldr	r0, [r0, #0]
10059728:	0d36      	lsrs	r6, r6, #20
1005972a:	1841      	adds	r1, r0, r1
1005972c:	7a89      	ldrb	r1, [r1, #10]
1005972e:	2301      	movs	r3, #1
10059730:	0749      	lsls	r1, r1, #29
10059732:	d50d      	bpl.n	10059750 <smp_Set_Key_Association_Method+0x5c>
10059734:	2102      	movs	r1, #2
10059736:	028f      	lsls	r7, r1, #10
10059738:	3008      	adds	r0, #8
1005973a:	19c0      	adds	r0, r0, r7
1005973c:	2214      	movs	r2, #20
1005973e:	6940      	ldr	r0, [r0, #20]
10059740:	f002 fbd4 	bl	1005beec <aci_event_fifo_push_header>
10059744:	0001      	movs	r1, r0
10059746:	d003      	beq.n	10059750 <smp_Set_Key_Association_Method+0x5c>
10059748:	808e      	strh	r6, [r1, #4]
1005974a:	9800      	ldr	r0, [sp, #0]
1005974c:	f002 fbba 	bl	1005bec4 <aci_event_fifo_push>
10059750:	7ee0      	ldrb	r0, [r4, #27]
10059752:	21ef      	movs	r1, #239	; 0xef
10059754:	4008      	ands	r0, r1
10059756:	76e0      	strb	r0, [r4, #27]
10059758:	4628      	mov	r0, r5
1005975a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005975c:	7ee0      	ldrb	r0, [r4, #27]
1005975e:	2110      	movs	r1, #16
10059760:	4308      	orrs	r0, r1
10059762:	e7f8      	b.n	10059756 <smp_Set_Key_Association_Method+0x62>
10059764:	20000d6c 	.word	0x20000d6c
10059768:	20000d64 	.word	0x20000d64

1005976c <smp____MI_PairingConfirm_Receive>:
1005976c:	b570      	push	{r4, r5, r6, lr}
1005976e:	4606      	mov	r6, r0
10059770:	8908      	ldrh	r0, [r1, #8]
10059772:	460d      	mov	r5, r1
10059774:	0501      	lsls	r1, r0, #20
10059776:	0d09      	lsrs	r1, r1, #20
10059778:	2220      	movs	r2, #32
1005977a:	2000      	movs	r0, #0
1005977c:	f7fb f956 	bl	10054a2c <PM_Get_Pckt>
10059780:	0004      	movs	r4, r0
10059782:	d01d      	beq.n	100597c0 <smp____MI_PairingConfirm_Receive+0x54>
10059784:	2e00      	cmp	r6, #0
10059786:	d006      	beq.n	10059796 <smp____MI_PairingConfirm_Receive+0x2a>
10059788:	462b      	mov	r3, r5
1005978a:	332a      	adds	r3, #42	; 0x2a
1005978c:	2210      	movs	r2, #16
1005978e:	2105      	movs	r1, #5
10059790:	4630      	mov	r0, r6
10059792:	f7fb f90b 	bl	100549ac <PM_Copy_Pckt_Data>
10059796:	2011      	movs	r0, #17
10059798:	80e0      	strh	r0, [r4, #6]
1005979a:	68a0      	ldr	r0, [r4, #8]
1005979c:	2104      	movs	r1, #4
1005979e:	7301      	strb	r1, [r0, #12]
100597a0:	462b      	mov	r3, r5
100597a2:	3354      	adds	r3, #84	; 0x54
100597a4:	2210      	movs	r2, #16
100597a6:	2105      	movs	r1, #5
100597a8:	4620      	mov	r0, r4
100597aa:	f7fb f9ef 	bl	10054b8c <PM_Write_Pckt_Data>
100597ae:	4629      	mov	r1, r5
100597b0:	4620      	mov	r0, r4
100597b2:	f000 fbcf 	bl	10059f54 <smp_send_packet>
100597b6:	2800      	cmp	r0, #0
100597b8:	d101      	bne.n	100597be <smp____MI_PairingConfirm_Receive+0x52>
100597ba:	21a6      	movs	r1, #166	; 0xa6
100597bc:	72a9      	strb	r1, [r5, #10]
100597be:	bd70      	pop	{r4, r5, r6, pc}
100597c0:	2064      	movs	r0, #100	; 0x64
100597c2:	bd70      	pop	{r4, r5, r6, pc}

100597c4 <smp____MI_PairingConfirm_Send>:
100597c4:	b530      	push	{r4, r5, lr}
100597c6:	4604      	mov	r4, r0
100597c8:	8900      	ldrh	r0, [r0, #8]
100597ca:	b089      	sub	sp, #36	; 0x24
100597cc:	0501      	lsls	r1, r0, #20
100597ce:	0d09      	lsrs	r1, r1, #20
100597d0:	2220      	movs	r2, #32
100597d2:	2000      	movs	r0, #0
100597d4:	f7fb f92a 	bl	10054a2c <PM_Get_Pckt>
100597d8:	0005      	movs	r5, r0
100597da:	d009      	beq.n	100597f0 <smp____MI_PairingConfirm_Send+0x2c>
100597dc:	7ae0      	ldrb	r0, [r4, #11]
100597de:	0700      	lsls	r0, r0, #28
100597e0:	d509      	bpl.n	100597f6 <smp____MI_PairingConfirm_Send+0x32>
100597e2:	a805      	add	r0, sp, #20
100597e4:	9002      	str	r0, [sp, #8]
100597e6:	9401      	str	r4, [sp, #4]
100597e8:	a801      	add	r0, sp, #4
100597ea:	f7e8 fa0f 	bl	10041c0c <smp_sc_MI_PairingConfirm_Send_sc_excerpt_ucfg>
100597ee:	e008      	b.n	10059802 <smp____MI_PairingConfirm_Send+0x3e>
100597f0:	2064      	movs	r0, #100	; 0x64
100597f2:	b009      	add	sp, #36	; 0x24
100597f4:	bd30      	pop	{r4, r5, pc}
100597f6:	4621      	mov	r1, r4
100597f8:	aa05      	add	r2, sp, #20
100597fa:	3154      	adds	r1, #84	; 0x54
100597fc:	4620      	mov	r0, r4
100597fe:	f7ff fcc3 	bl	10059188 <smp_LP_MI_Compute_c1_Confirm_Value>
10059802:	2011      	movs	r0, #17
10059804:	80e8      	strh	r0, [r5, #6]
10059806:	68a8      	ldr	r0, [r5, #8]
10059808:	2103      	movs	r1, #3
1005980a:	7301      	strb	r1, [r0, #12]
1005980c:	ab05      	add	r3, sp, #20
1005980e:	2210      	movs	r2, #16
10059810:	2105      	movs	r1, #5
10059812:	4628      	mov	r0, r5
10059814:	f7fb f9ba 	bl	10054b8c <PM_Write_Pckt_Data>
10059818:	4621      	mov	r1, r4
1005981a:	4628      	mov	r0, r5
1005981c:	f000 fb9a 	bl	10059f54 <smp_send_packet>
10059820:	2800      	cmp	r0, #0
10059822:	d1e6      	bne.n	100597f2 <smp____MI_PairingConfirm_Send+0x2e>
10059824:	21a5      	movs	r1, #165	; 0xa5
10059826:	72a1      	strb	r1, [r4, #10]
10059828:	e7e3      	b.n	100597f2 <smp____MI_PairingConfirm_Send+0x2e>
	...

1005982c <smp____MI_PairingRandom_Receive>:
1005982c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005982e:	460b      	mov	r3, r1
10059830:	b093      	sub	sp, #76	; 0x4c
10059832:	460c      	mov	r4, r1
10059834:	3364      	adds	r3, #100	; 0x64
10059836:	2500      	movs	r5, #0
10059838:	2210      	movs	r2, #16
1005983a:	2105      	movs	r1, #5
1005983c:	9309      	str	r3, [sp, #36]	; 0x24
1005983e:	f7fb f8b5 	bl	100549ac <PM_Copy_Pckt_Data>
10059842:	7ae0      	ldrb	r0, [r4, #11]
10059844:	0700      	lsls	r0, r0, #28
10059846:	d50b      	bpl.n	10059860 <smp____MI_PairingRandom_Receive+0x34>
10059848:	a804      	add	r0, sp, #16
1005984a:	900f      	str	r0, [sp, #60]	; 0x3c
1005984c:	940e      	str	r4, [sp, #56]	; 0x38
1005984e:	a80e      	add	r0, sp, #56	; 0x38
10059850:	f7e8 f9e0 	bl	10041c14 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1_ucfg>
10059854:	4605      	mov	r5, r0
10059856:	28eb      	cmp	r0, #235	; 0xeb
10059858:	d107      	bne.n	1005986a <smp____MI_PairingRandom_Receive+0x3e>
1005985a:	2000      	movs	r0, #0
1005985c:	b013      	add	sp, #76	; 0x4c
1005985e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10059860:	aa04      	add	r2, sp, #16
10059862:	4620      	mov	r0, r4
10059864:	9909      	ldr	r1, [sp, #36]	; 0x24
10059866:	f7ff fc8f 	bl	10059188 <smp_LP_MI_Compute_c1_Confirm_Value>
1005986a:	4621      	mov	r1, r4
1005986c:	312a      	adds	r1, #42	; 0x2a
1005986e:	2210      	movs	r2, #16
10059870:	460f      	mov	r7, r1
10059872:	a804      	add	r0, sp, #16
10059874:	f7e6 ff8d 	bl	10040792 <Osal_MemCmp>
10059878:	2800      	cmp	r0, #0
1005987a:	d006      	beq.n	1005988a <smp____MI_PairingRandom_Receive+0x5e>
1005987c:	2300      	movs	r3, #0
1005987e:	461a      	mov	r2, r3
10059880:	2104      	movs	r1, #4
10059882:	4620      	mov	r0, r4
10059884:	f001 fd72 	bl	1005b36c <smp_pairing_failed_send>
10059888:	e03c      	b.n	10059904 <smp____MI_PairingRandom_Receive+0xd8>
1005988a:	4e20      	ldr	r6, [pc, #128]	; (1005990c <smp____MI_PairingRandom_Receive+0xe0>)
1005988c:	7f21      	ldrb	r1, [r4, #28]
1005988e:	6830      	ldr	r0, [r6, #0]
10059890:	7bc0      	ldrb	r0, [r0, #15]
10059892:	4281      	cmp	r1, r0
10059894:	d900      	bls.n	10059898 <smp____MI_PairingRandom_Receive+0x6c>
10059896:	7720      	strb	r0, [r4, #28]
10059898:	7ae0      	ldrb	r0, [r4, #11]
1005989a:	0700      	lsls	r0, r0, #28
1005989c:	d503      	bpl.n	100598a6 <smp____MI_PairingRandom_Receive+0x7a>
1005989e:	4620      	mov	r0, r4
100598a0:	f7e8 f9bc 	bl	10041c1c <smp_sc_MI_PairingRandom_Receive_sc_excerpt2_ucfg>
100598a4:	e02f      	b.n	10059906 <smp____MI_PairingRandom_Receive+0xda>
100598a6:	2210      	movs	r2, #16
100598a8:	2100      	movs	r1, #0
100598aa:	4668      	mov	r0, sp
100598ac:	f7e6 ff6d 	bl	1004078a <Osal_MemSet>
100598b0:	7fe0      	ldrb	r0, [r4, #31]
100598b2:	2802      	cmp	r0, #2
100598b4:	d002      	beq.n	100598bc <smp____MI_PairingRandom_Receive+0x90>
100598b6:	2803      	cmp	r0, #3
100598b8:	d006      	beq.n	100598c8 <smp____MI_PairingRandom_Receive+0x9c>
100598ba:	e00b      	b.n	100598d4 <smp____MI_PairingRandom_Receive+0xa8>
100598bc:	6830      	ldr	r0, [r6, #0]
100598be:	6901      	ldr	r1, [r0, #16]
100598c0:	4668      	mov	r0, sp
100598c2:	f7ff f953 	bl	10058b6c <int32ToLe4Byte>
100598c6:	e005      	b.n	100598d4 <smp____MI_PairingRandom_Receive+0xa8>
100598c8:	6831      	ldr	r1, [r6, #0]
100598ca:	2210      	movs	r2, #16
100598cc:	4668      	mov	r0, sp
100598ce:	311c      	adds	r1, #28
100598d0:	f7e6 ff57 	bl	10040782 <Osal_MemCpy>
100598d4:	4622      	mov	r2, r4
100598d6:	ab0a      	add	r3, sp, #40	; 0x28
100598d8:	3254      	adds	r2, #84	; 0x54
100598da:	4668      	mov	r0, sp
100598dc:	9909      	ldr	r1, [sp, #36]	; 0x24
100598de:	f000 fb91 	bl	1005a004 <SMA_LP_s1_Generate_STK>
100598e2:	2210      	movs	r2, #16
100598e4:	2100      	movs	r1, #0
100598e6:	4638      	mov	r0, r7
100598e8:	f7e6 ff4f 	bl	1004078a <Osal_MemSet>
100598ec:	7f22      	ldrb	r2, [r4, #28]
100598ee:	a90a      	add	r1, sp, #40	; 0x28
100598f0:	4638      	mov	r0, r7
100598f2:	f7e6 ff46 	bl	10040782 <Osal_MemCpy>
100598f6:	7ba0      	ldrb	r0, [r4, #14]
100598f8:	2102      	movs	r1, #2
100598fa:	4308      	orrs	r0, r1
100598fc:	73a0      	strb	r0, [r4, #14]
100598fe:	4620      	mov	r0, r4
10059900:	f7e8 f910 	bl	10041b24 <smp_MI_Start_Encryption_ucfg>
10059904:	4605      	mov	r5, r0
10059906:	4628      	mov	r0, r5
10059908:	e7a8      	b.n	1005985c <smp____MI_PairingRandom_Receive+0x30>
1005990a:	0000      	.short	0x0000
1005990c:	20000d6c 	.word	0x20000d6c

10059910 <smp____MI_PairingResponse_Receive>:
10059910:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10059912:	460c      	mov	r4, r1
10059914:	4606      	mov	r6, r0
10059916:	25a4      	movs	r5, #164	; 0xa4
10059918:	f7ff f964 	bl	10058be4 <smp_Check_Incoming_Pairing_Parameters>
1005991c:	2800      	cmp	r0, #0
1005991e:	d11b      	bne.n	10059958 <smp____MI_PairingResponse_Receive+0x48>
10059920:	7ae0      	ldrb	r0, [r4, #11]
10059922:	0700      	lsls	r0, r0, #28
10059924:	d507      	bpl.n	10059936 <smp____MI_PairingResponse_Receive+0x26>
10059926:	4668      	mov	r0, sp
10059928:	9600      	str	r6, [sp, #0]
1005992a:	9401      	str	r4, [sp, #4]
1005992c:	f7e8 f962 	bl	10041bf4 <smp_sc_MI_PairingResponse_Receive_sc_excerpt_ucfg>
10059930:	2800      	cmp	r0, #0
10059932:	d111      	bne.n	10059958 <smp____MI_PairingResponse_Receive+0x48>
10059934:	25a2      	movs	r5, #162	; 0xa2
10059936:	7ea0      	ldrb	r0, [r4, #26]
10059938:	21fb      	movs	r1, #251	; 0xfb
1005993a:	0840      	lsrs	r0, r0, #1
1005993c:	0040      	lsls	r0, r0, #1
1005993e:	76a0      	strb	r0, [r4, #26]
10059940:	7ee0      	ldrb	r0, [r4, #27]
10059942:	4008      	ands	r0, r1
10059944:	76e0      	strb	r0, [r4, #27]
10059946:	4621      	mov	r1, r4
10059948:	4630      	mov	r0, r6
1005994a:	f7ff fb4b 	bl	10058fe4 <smp_Get_Pairing_Parameters_From_Peer_Packet>
1005994e:	4620      	mov	r0, r4
10059950:	f7ff fed0 	bl	100596f4 <smp_Set_Key_Association_Method>
10059954:	2800      	cmp	r0, #0
10059956:	d008      	beq.n	1005996a <smp____MI_PairingResponse_Receive+0x5a>
10059958:	2864      	cmp	r0, #100	; 0x64
1005995a:	d005      	beq.n	10059968 <smp____MI_PairingResponse_Receive+0x58>
1005995c:	4601      	mov	r1, r0
1005995e:	2301      	movs	r3, #1
10059960:	2200      	movs	r2, #0
10059962:	4620      	mov	r0, r4
10059964:	f001 fd02 	bl	1005b36c <smp_pairing_failed_send>
10059968:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005996a:	7fe1      	ldrb	r1, [r4, #31]
1005996c:	2902      	cmp	r1, #2
1005996e:	d103      	bne.n	10059978 <smp____MI_PairingResponse_Receive+0x68>
10059970:	7ee1      	ldrb	r1, [r4, #27]
10059972:	06c9      	lsls	r1, r1, #27
10059974:	d400      	bmi.n	10059978 <smp____MI_PairingResponse_Receive+0x68>
10059976:	25a2      	movs	r5, #162	; 0xa2
10059978:	72a5      	strb	r5, [r4, #10]
1005997a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1005997c <smp____MI_SecurityRequest_Receive>:
1005997c:	b570      	push	{r4, r5, r6, lr}
1005997e:	4606      	mov	r6, r0
10059980:	460c      	mov	r4, r1
10059982:	2500      	movs	r5, #0
10059984:	8908      	ldrh	r0, [r1, #8]
10059986:	f001 fb37 	bl	1005aff8 <smp_find_remote_device_index>
1005998a:	4602      	mov	r2, r0
1005998c:	2100      	movs	r1, #0
1005998e:	4b1a      	ldr	r3, [pc, #104]	; (100599f8 <smp____MI_SecurityRequest_Receive+0x7c>)
10059990:	4608      	mov	r0, r1
10059992:	f001 f93f 	bl	1005ac14 <SMP_reset_timer>
10059996:	4919      	ldr	r1, [pc, #100]	; (100599fc <smp____MI_SecurityRequest_Receive+0x80>)
10059998:	68b0      	ldr	r0, [r6, #8]
1005999a:	6809      	ldr	r1, [r1, #0]
1005999c:	7b40      	ldrb	r0, [r0, #13]
1005999e:	7d8a      	ldrb	r2, [r1, #22]
100599a0:	2a02      	cmp	r2, #2
100599a2:	d103      	bne.n	100599ac <smp____MI_SecurityRequest_Receive+0x30>
100599a4:	0702      	lsls	r2, r0, #28
100599a6:	d401      	bmi.n	100599ac <smp____MI_SecurityRequest_Receive+0x30>
100599a8:	2003      	movs	r0, #3
100599aa:	e018      	b.n	100599de <smp____MI_SecurityRequest_Receive+0x62>
100599ac:	7aa2      	ldrb	r2, [r4, #10]
100599ae:	2af1      	cmp	r2, #241	; 0xf1
100599b0:	d106      	bne.n	100599c0 <smp____MI_SecurityRequest_Receive+0x44>
100599b2:	8922      	ldrh	r2, [r4, #8]
100599b4:	0452      	lsls	r2, r2, #17
100599b6:	0f92      	lsrs	r2, r2, #30
100599b8:	d102      	bne.n	100599c0 <smp____MI_SecurityRequest_Receive+0x44>
100599ba:	0742      	lsls	r2, r0, #29
100599bc:	d500      	bpl.n	100599c0 <smp____MI_SecurityRequest_Receive+0x44>
100599be:	2501      	movs	r5, #1
100599c0:	06c0      	lsls	r0, r0, #27
100599c2:	0ec0      	lsrs	r0, r0, #27
100599c4:	3180      	adds	r1, #128	; 0x80
100599c6:	7308      	strb	r0, [r1, #12]
100599c8:	8920      	ldrh	r0, [r4, #8]
100599ca:	2200      	movs	r2, #0
100599cc:	0500      	lsls	r0, r0, #20
100599ce:	0d00      	lsrs	r0, r0, #20
100599d0:	4629      	mov	r1, r5
100599d2:	f7fe fedd 	bl	10058790 <SMP_MI_PairingRequest_Send>
100599d6:	2800      	cmp	r0, #0
100599d8:	d008      	beq.n	100599ec <smp____MI_SecurityRequest_Receive+0x70>
100599da:	2864      	cmp	r0, #100	; 0x64
100599dc:	d005      	beq.n	100599ea <smp____MI_SecurityRequest_Receive+0x6e>
100599de:	4601      	mov	r1, r0
100599e0:	2301      	movs	r3, #1
100599e2:	2200      	movs	r2, #0
100599e4:	4620      	mov	r0, r4
100599e6:	f001 fcc1 	bl	1005b36c <smp_pairing_failed_send>
100599ea:	bd70      	pop	{r4, r5, r6, pc}
100599ec:	7ba1      	ldrb	r1, [r4, #14]
100599ee:	2280      	movs	r2, #128	; 0x80
100599f0:	4311      	orrs	r1, r2
100599f2:	73a1      	strb	r1, [r4, #14]
100599f4:	bd70      	pop	{r4, r5, r6, pc}
100599f6:	0000      	.short	0x0000
100599f8:	00007530 	.word	0x00007530
100599fc:	20000d6c 	.word	0x20000d6c

10059a00 <smp____SR_PairingConfirm_Receive>:
10059a00:	b570      	push	{r4, r5, r6, lr}
10059a02:	4606      	mov	r6, r0
10059a04:	8908      	ldrh	r0, [r1, #8]
10059a06:	460c      	mov	r4, r1
10059a08:	0501      	lsls	r1, r0, #20
10059a0a:	b08a      	sub	sp, #40	; 0x28
10059a0c:	0d09      	lsrs	r1, r1, #20
10059a0e:	2220      	movs	r2, #32
10059a10:	2000      	movs	r0, #0
10059a12:	f7fb f80b 	bl	10054a2c <PM_Get_Pckt>
10059a16:	0005      	movs	r5, r0
10059a18:	d012      	beq.n	10059a40 <smp____SR_PairingConfirm_Receive+0x40>
10059a1a:	2e00      	cmp	r6, #0
10059a1c:	d006      	beq.n	10059a2c <smp____SR_PairingConfirm_Receive+0x2c>
10059a1e:	4623      	mov	r3, r4
10059a20:	332a      	adds	r3, #42	; 0x2a
10059a22:	2210      	movs	r2, #16
10059a24:	2105      	movs	r1, #5
10059a26:	4630      	mov	r0, r6
10059a28:	f7fa ffc0 	bl	100549ac <PM_Copy_Pckt_Data>
10059a2c:	7ae0      	ldrb	r0, [r4, #11]
10059a2e:	0700      	lsls	r0, r0, #28
10059a30:	d509      	bpl.n	10059a46 <smp____SR_PairingConfirm_Receive+0x46>
10059a32:	a805      	add	r0, sp, #20
10059a34:	9002      	str	r0, [sp, #8]
10059a36:	9401      	str	r4, [sp, #4]
10059a38:	a801      	add	r0, sp, #4
10059a3a:	f7e8 f8f3 	bl	10041c24 <smp_sc_SR_PairingConfirm_Receive_sc_excerpt_ucfg>
10059a3e:	e008      	b.n	10059a52 <smp____SR_PairingConfirm_Receive+0x52>
10059a40:	2064      	movs	r0, #100	; 0x64
10059a42:	b00a      	add	sp, #40	; 0x28
10059a44:	bd70      	pop	{r4, r5, r6, pc}
10059a46:	4621      	mov	r1, r4
10059a48:	aa05      	add	r2, sp, #20
10059a4a:	3164      	adds	r1, #100	; 0x64
10059a4c:	4620      	mov	r0, r4
10059a4e:	f7ff fc3b 	bl	100592c8 <smp_LP_SR_Compute_c1_Confirm_Value>
10059a52:	2011      	movs	r0, #17
10059a54:	80e8      	strh	r0, [r5, #6]
10059a56:	68a8      	ldr	r0, [r5, #8]
10059a58:	2103      	movs	r1, #3
10059a5a:	7301      	strb	r1, [r0, #12]
10059a5c:	ab05      	add	r3, sp, #20
10059a5e:	2210      	movs	r2, #16
10059a60:	2105      	movs	r1, #5
10059a62:	4628      	mov	r0, r5
10059a64:	f7fb f892 	bl	10054b8c <PM_Write_Pckt_Data>
10059a68:	4621      	mov	r1, r4
10059a6a:	4628      	mov	r0, r5
10059a6c:	f000 fa72 	bl	10059f54 <smp_send_packet>
10059a70:	2800      	cmp	r0, #0
10059a72:	d1e6      	bne.n	10059a42 <smp____SR_PairingConfirm_Receive+0x42>
10059a74:	21b6      	movs	r1, #182	; 0xb6
10059a76:	72a1      	strb	r1, [r4, #10]
10059a78:	e7e3      	b.n	10059a42 <smp____SR_PairingConfirm_Receive+0x42>
	...

10059a7c <smp____SR_PairingRandom_Receive>:
10059a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
10059a7e:	4606      	mov	r6, r0
10059a80:	b093      	sub	sp, #76	; 0x4c
10059a82:	2000      	movs	r0, #0
10059a84:	9005      	str	r0, [sp, #20]
10059a86:	8908      	ldrh	r0, [r1, #8]
10059a88:	460c      	mov	r4, r1
10059a8a:	0501      	lsls	r1, r0, #20
10059a8c:	0d09      	lsrs	r1, r1, #20
10059a8e:	2220      	movs	r2, #32
10059a90:	2000      	movs	r0, #0
10059a92:	f7fa ffcb 	bl	10054a2c <PM_Get_Pckt>
10059a96:	0005      	movs	r5, r0
10059a98:	d019      	beq.n	10059ace <smp____SR_PairingRandom_Receive+0x52>
10059a9a:	4623      	mov	r3, r4
10059a9c:	3354      	adds	r3, #84	; 0x54
10059a9e:	2210      	movs	r2, #16
10059aa0:	2105      	movs	r1, #5
10059aa2:	4630      	mov	r0, r6
10059aa4:	9302      	str	r3, [sp, #8]
10059aa6:	f7fa ff81 	bl	100549ac <PM_Copy_Pckt_Data>
10059aaa:	7ae0      	ldrb	r0, [r4, #11]
10059aac:	0701      	lsls	r1, r0, #28
10059aae:	4620      	mov	r0, r4
10059ab0:	302a      	adds	r0, #42	; 0x2a
10059ab2:	9001      	str	r0, [sp, #4]
10059ab4:	2900      	cmp	r1, #0
10059ab6:	da0d      	bge.n	10059ad4 <smp____SR_PairingRandom_Receive+0x58>
10059ab8:	a80f      	add	r0, sp, #60	; 0x3c
10059aba:	9008      	str	r0, [sp, #32]
10059abc:	a805      	add	r0, sp, #20
10059abe:	9009      	str	r0, [sp, #36]	; 0x24
10059ac0:	a806      	add	r0, sp, #24
10059ac2:	900a      	str	r0, [sp, #40]	; 0x28
10059ac4:	9407      	str	r4, [sp, #28]
10059ac6:	a807      	add	r0, sp, #28
10059ac8:	f7e8 f8b0 	bl	10041c2c <smp_sc_SR_PairingRandom_Receive_sc_excerpt_ucfg>
10059acc:	e010      	b.n	10059af0 <smp____SR_PairingRandom_Receive+0x74>
10059ace:	2064      	movs	r0, #100	; 0x64
10059ad0:	b013      	add	sp, #76	; 0x4c
10059ad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10059ad4:	aa0f      	add	r2, sp, #60	; 0x3c
10059ad6:	4620      	mov	r0, r4
10059ad8:	9902      	ldr	r1, [sp, #8]
10059ada:	f7ff fbf5 	bl	100592c8 <smp_LP_SR_Compute_c1_Confirm_Value>
10059ade:	2210      	movs	r2, #16
10059ae0:	a80f      	add	r0, sp, #60	; 0x3c
10059ae2:	9901      	ldr	r1, [sp, #4]
10059ae4:	f7e6 fe55 	bl	10040792 <Osal_MemCmp>
10059ae8:	9005      	str	r0, [sp, #20]
10059aea:	20bc      	movs	r0, #188	; 0xbc
10059aec:	4669      	mov	r1, sp
10059aee:	7608      	strb	r0, [r1, #24]
10059af0:	4626      	mov	r6, r4
10059af2:	9805      	ldr	r0, [sp, #20]
10059af4:	3664      	adds	r6, #100	; 0x64
10059af6:	4f28      	ldr	r7, [pc, #160]	; (10059b98 <smp____SR_PairingRandom_Receive+0x11c>)
10059af8:	2800      	cmp	r0, #0
10059afa:	d009      	beq.n	10059b10 <smp____SR_PairingRandom_Receive+0x94>
10059afc:	2301      	movs	r3, #1
10059afe:	462a      	mov	r2, r5
10059b00:	2104      	movs	r1, #4
10059b02:	4620      	mov	r0, r4
10059b04:	f001 fc32 	bl	1005b36c <smp_pairing_failed_send>
10059b08:	9805      	ldr	r0, [sp, #20]
10059b0a:	2800      	cmp	r0, #0
10059b0c:	d01b      	beq.n	10059b46 <smp____SR_PairingRandom_Receive+0xca>
10059b0e:	e040      	b.n	10059b92 <smp____SR_PairingRandom_Receive+0x116>
10059b10:	2011      	movs	r0, #17
10059b12:	80e8      	strh	r0, [r5, #6]
10059b14:	68a8      	ldr	r0, [r5, #8]
10059b16:	2104      	movs	r1, #4
10059b18:	7301      	strb	r1, [r0, #12]
10059b1a:	4633      	mov	r3, r6
10059b1c:	2210      	movs	r2, #16
10059b1e:	2105      	movs	r1, #5
10059b20:	4628      	mov	r0, r5
10059b22:	f7fb f833 	bl	10054b8c <PM_Write_Pckt_Data>
10059b26:	4621      	mov	r1, r4
10059b28:	4628      	mov	r0, r5
10059b2a:	f000 fa13 	bl	10059f54 <smp_send_packet>
10059b2e:	2800      	cmp	r0, #0
10059b30:	d1ea      	bne.n	10059b08 <smp____SR_PairingRandom_Receive+0x8c>
10059b32:	4668      	mov	r0, sp
10059b34:	7e00      	ldrb	r0, [r0, #24]
10059b36:	72a0      	strb	r0, [r4, #10]
10059b38:	6838      	ldr	r0, [r7, #0]
10059b3a:	7f21      	ldrb	r1, [r4, #28]
10059b3c:	7bc0      	ldrb	r0, [r0, #15]
10059b3e:	4281      	cmp	r1, r0
10059b40:	d9e2      	bls.n	10059b08 <smp____SR_PairingRandom_Receive+0x8c>
10059b42:	7720      	strb	r0, [r4, #28]
10059b44:	e7e0      	b.n	10059b08 <smp____SR_PairingRandom_Receive+0x8c>
10059b46:	7ae0      	ldrb	r0, [r4, #11]
10059b48:	0700      	lsls	r0, r0, #28
10059b4a:	d422      	bmi.n	10059b92 <smp____SR_PairingRandom_Receive+0x116>
10059b4c:	7f60      	ldrb	r0, [r4, #29]
10059b4e:	07c1      	lsls	r1, r0, #31
10059b50:	d002      	beq.n	10059b58 <smp____SR_PairingRandom_Receive+0xdc>
10059b52:	0840      	lsrs	r0, r0, #1
10059b54:	0040      	lsls	r0, r0, #1
10059b56:	7760      	strb	r0, [r4, #29]
10059b58:	2210      	movs	r2, #16
10059b5a:	2100      	movs	r1, #0
10059b5c:	a80b      	add	r0, sp, #44	; 0x2c
10059b5e:	f7e6 fe14 	bl	1004078a <Osal_MemSet>
10059b62:	7fe0      	ldrb	r0, [r4, #31]
10059b64:	2802      	cmp	r0, #2
10059b66:	d002      	beq.n	10059b6e <smp____SR_PairingRandom_Receive+0xf2>
10059b68:	2803      	cmp	r0, #3
10059b6a:	d006      	beq.n	10059b7a <smp____SR_PairingRandom_Receive+0xfe>
10059b6c:	e00b      	b.n	10059b86 <smp____SR_PairingRandom_Receive+0x10a>
10059b6e:	6838      	ldr	r0, [r7, #0]
10059b70:	6901      	ldr	r1, [r0, #16]
10059b72:	a80b      	add	r0, sp, #44	; 0x2c
10059b74:	f7fe fffa 	bl	10058b6c <int32ToLe4Byte>
10059b78:	e005      	b.n	10059b86 <smp____SR_PairingRandom_Receive+0x10a>
10059b7a:	6839      	ldr	r1, [r7, #0]
10059b7c:	2210      	movs	r2, #16
10059b7e:	a80b      	add	r0, sp, #44	; 0x2c
10059b80:	311c      	adds	r1, #28
10059b82:	f7e6 fdfe 	bl	10040782 <Osal_MemCpy>
10059b86:	4631      	mov	r1, r6
10059b88:	a80b      	add	r0, sp, #44	; 0x2c
10059b8a:	9b01      	ldr	r3, [sp, #4]
10059b8c:	9a02      	ldr	r2, [sp, #8]
10059b8e:	f000 fa39 	bl	1005a004 <SMA_LP_s1_Generate_STK>
10059b92:	2000      	movs	r0, #0
10059b94:	e79c      	b.n	10059ad0 <smp____SR_PairingRandom_Receive+0x54>
10059b96:	0000      	.short	0x0000
10059b98:	20000d6c 	.word	0x20000d6c

10059b9c <smp____SR_PairingRequest_Receive>:
10059b9c:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
10059b9e:	4e5d      	ldr	r6, [pc, #372]	; (10059d14 <smp____SR_PairingRequest_Receive+0x178>)
10059ba0:	2500      	movs	r5, #0
10059ba2:	6830      	ldr	r0, [r6, #0]
10059ba4:	27b4      	movs	r7, #180	; 0xb4
10059ba6:	7e80      	ldrb	r0, [r0, #26]
10059ba8:	b083      	sub	sp, #12
10059baa:	43c0      	mvns	r0, r0
10059bac:	460c      	mov	r4, r1
10059bae:	0780      	lsls	r0, r0, #30
10059bb0:	d00e      	beq.n	10059bd0 <smp____SR_PairingRequest_Receive+0x34>
10059bb2:	8920      	ldrh	r0, [r4, #8]
10059bb4:	2220      	movs	r2, #32
10059bb6:	0501      	lsls	r1, r0, #20
10059bb8:	0d09      	lsrs	r1, r1, #20
10059bba:	2000      	movs	r0, #0
10059bbc:	f7fa ff36 	bl	10054a2c <PM_Get_Pckt>
10059bc0:	9002      	str	r0, [sp, #8]
10059bc2:	2800      	cmp	r0, #0
10059bc4:	d007      	beq.n	10059bd6 <smp____SR_PairingRequest_Receive+0x3a>
10059bc6:	7aa1      	ldrb	r1, [r4, #10]
10059bc8:	2000      	movs	r0, #0
10059bca:	29f1      	cmp	r1, #241	; 0xf1
10059bcc:	d005      	beq.n	10059bda <smp____SR_PairingRequest_Receive+0x3e>
10059bce:	e032      	b.n	10059c36 <smp____SR_PairingRequest_Receive+0x9a>
10059bd0:	2008      	movs	r0, #8
10059bd2:	b005      	add	sp, #20
10059bd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10059bd6:	2064      	movs	r0, #100	; 0x64
10059bd8:	e7fb      	b.n	10059bd2 <smp____SR_PairingRequest_Receive+0x36>
10059bda:	7ee1      	ldrb	r1, [r4, #27]
10059bdc:	222f      	movs	r2, #47	; 0x2f
10059bde:	4011      	ands	r1, r2
10059be0:	76e1      	strb	r1, [r4, #27]
10059be2:	6831      	ldr	r1, [r6, #0]
10059be4:	7f23      	ldrb	r3, [r4, #28]
10059be6:	7bc9      	ldrb	r1, [r1, #15]
10059be8:	428b      	cmp	r3, r1
10059bea:	d004      	beq.n	10059bf6 <smp____SR_PairingRequest_Receive+0x5a>
10059bec:	9a03      	ldr	r2, [sp, #12]
10059bee:	6892      	ldr	r2, [r2, #8]
10059bf0:	7c12      	ldrb	r2, [r2, #16]
10059bf2:	428a      	cmp	r2, r1
10059bf4:	d807      	bhi.n	10059c06 <smp____SR_PairingRequest_Receive+0x6a>
10059bf6:	9a03      	ldr	r2, [sp, #12]
10059bf8:	6892      	ldr	r2, [r2, #8]
10059bfa:	4694      	mov	ip, r2
10059bfc:	7c12      	ldrb	r2, [r2, #16]
10059bfe:	429a      	cmp	r2, r3
10059c00:	d003      	beq.n	10059c0a <smp____SR_PairingRequest_Receive+0x6e>
10059c02:	428a      	cmp	r2, r1
10059c04:	d801      	bhi.n	10059c0a <smp____SR_PairingRequest_Receive+0x6e>
10059c06:	7760      	strb	r0, [r4, #29]
10059c08:	e015      	b.n	10059c36 <smp____SR_PairingRequest_Receive+0x9a>
10059c0a:	7f61      	ldrb	r1, [r4, #29]
10059c0c:	068a      	lsls	r2, r1, #26
10059c0e:	d500      	bpl.n	10059c12 <smp____SR_PairingRequest_Receive+0x76>
10059c10:	2502      	movs	r5, #2
10059c12:	0649      	lsls	r1, r1, #25
10059c14:	d501      	bpl.n	10059c1a <smp____SR_PairingRequest_Receive+0x7e>
10059c16:	2104      	movs	r1, #4
10059c18:	430d      	orrs	r5, r1
10059c1a:	4661      	mov	r1, ip
10059c1c:	7c49      	ldrb	r1, [r1, #17]
10059c1e:	42a9      	cmp	r1, r5
10059c20:	d003      	beq.n	10059c2a <smp____SR_PairingRequest_Receive+0x8e>
10059c22:	2201      	movs	r2, #1
10059c24:	4315      	orrs	r5, r2
10059c26:	42a9      	cmp	r1, r5
10059c28:	d102      	bne.n	10059c30 <smp____SR_PairingRequest_Receive+0x94>
10059c2a:	7760      	strb	r0, [r4, #29]
10059c2c:	77a0      	strb	r0, [r4, #30]
10059c2e:	e002      	b.n	10059c36 <smp____SR_PairingRequest_Receive+0x9a>
10059c30:	4620      	mov	r0, r4
10059c32:	f001 f93d 	bl	1005aeb0 <smp_add_pairing_record_to_bonding_database>
10059c36:	20b0      	movs	r0, #176	; 0xb0
10059c38:	72a0      	strb	r0, [r4, #10]
10059c3a:	6831      	ldr	r1, [r6, #0]
10059c3c:	7e88      	ldrb	r0, [r1, #26]
10059c3e:	43c2      	mvns	r2, r0
10059c40:	0792      	lsls	r2, r2, #30
10059c42:	d001      	beq.n	10059c48 <smp____SR_PairingRequest_Receive+0xac>
10059c44:	1c40      	adds	r0, r0, #1
10059c46:	7688      	strb	r0, [r1, #26]
10059c48:	9803      	ldr	r0, [sp, #12]
10059c4a:	f7fe ffcb 	bl	10058be4 <smp_Check_Incoming_Pairing_Parameters>
10059c4e:	9903      	ldr	r1, [sp, #12]
10059c50:	2800      	cmp	r0, #0
10059c52:	6889      	ldr	r1, [r1, #8]
10059c54:	7bcd      	ldrb	r5, [r1, #15]
10059c56:	d14b      	bne.n	10059cf0 <smp____SR_PairingRequest_Receive+0x154>
10059c58:	6830      	ldr	r0, [r6, #0]
10059c5a:	7d81      	ldrb	r1, [r0, #22]
10059c5c:	2902      	cmp	r1, #2
10059c5e:	d103      	bne.n	10059c68 <smp____SR_PairingRequest_Receive+0xcc>
10059c60:	072a      	lsls	r2, r5, #28
10059c62:	d401      	bmi.n	10059c68 <smp____SR_PairingRequest_Receive+0xcc>
10059c64:	2003      	movs	r0, #3
10059c66:	e043      	b.n	10059cf0 <smp____SR_PairingRequest_Receive+0x154>
10059c68:	084a      	lsrs	r2, r1, #1
10059c6a:	4311      	orrs	r1, r2
10059c6c:	07ca      	lsls	r2, r1, #31
10059c6e:	7dc3      	ldrb	r3, [r0, #23]
10059c70:	7b41      	ldrb	r1, [r0, #13]
10059c72:	0fd2      	lsrs	r2, r2, #31
10059c74:	7b00      	ldrb	r0, [r0, #12]
10059c76:	f7fe ff8c 	bl	10058b92 <smp_Build_AuthReq_Field>
10059c7a:	4606      	mov	r6, r0
10059c7c:	4035      	ands	r5, r6
10059c7e:	2018      	movs	r0, #24
10059c80:	4005      	ands	r5, r0
10059c82:	72e5      	strb	r5, [r4, #11]
10059c84:	0728      	lsls	r0, r5, #28
10059c86:	d505      	bpl.n	10059c94 <smp____SR_PairingRequest_Receive+0xf8>
10059c88:	4620      	mov	r0, r4
10059c8a:	f7e7 ff99 	bl	10041bc0 <smp_sc_continue_on_exclusive_sc_pairing_ucfg>
10059c8e:	2800      	cmp	r0, #0
10059c90:	d12e      	bne.n	10059cf0 <smp____SR_PairingRequest_Receive+0x154>
10059c92:	27b2      	movs	r7, #178	; 0xb2
10059c94:	4620      	mov	r0, r4
10059c96:	f001 fac9 	bl	1005b22c <smp_oob_check_is_remote_data_present>
10059c9a:	07f0      	lsls	r0, r6, #31
10059c9c:	d000      	beq.n	10059ca0 <smp____SR_PairingRequest_Receive+0x104>
10059c9e:	2002      	movs	r0, #2
10059ca0:	76a0      	strb	r0, [r4, #26]
10059ca2:	0770      	lsls	r0, r6, #29
10059ca4:	0fc0      	lsrs	r0, r0, #31
10059ca6:	76e0      	strb	r0, [r4, #27]
10059ca8:	4621      	mov	r1, r4
10059caa:	9803      	ldr	r0, [sp, #12]
10059cac:	f7ff f99a 	bl	10058fe4 <smp_Get_Pairing_Parameters_From_Peer_Packet>
10059cb0:	4620      	mov	r0, r4
10059cb2:	f7ff fd1f 	bl	100596f4 <smp_Set_Key_Association_Method>
10059cb6:	2800      	cmp	r0, #0
10059cb8:	d11a      	bne.n	10059cf0 <smp____SR_PairingRequest_Receive+0x154>
10059cba:	7fe0      	ldrb	r0, [r4, #31]
10059cbc:	2802      	cmp	r0, #2
10059cbe:	d103      	bne.n	10059cc8 <smp____SR_PairingRequest_Receive+0x12c>
10059cc0:	7ee0      	ldrb	r0, [r4, #27]
10059cc2:	06c0      	lsls	r0, r0, #27
10059cc4:	d400      	bmi.n	10059cc8 <smp____SR_PairingRequest_Receive+0x12c>
10059cc6:	27b2      	movs	r7, #178	; 0xb2
10059cc8:	7fa0      	ldrb	r0, [r4, #30]
10059cca:	7f61      	ldrb	r1, [r4, #29]
10059ccc:	0740      	lsls	r0, r0, #29
10059cce:	0749      	lsls	r1, r1, #29
10059cd0:	0f40      	lsrs	r0, r0, #29
10059cd2:	0f49      	lsrs	r1, r1, #29
10059cd4:	9100      	str	r1, [sp, #0]
10059cd6:	9001      	str	r0, [sp, #4]
10059cd8:	7e22      	ldrb	r2, [r4, #24]
10059cda:	4633      	mov	r3, r6
10059cdc:	2102      	movs	r1, #2
10059cde:	9802      	ldr	r0, [sp, #8]
10059ce0:	f7fe ff64 	bl	10058bac <smp_Build_Pairing_ReqResp_Packet>
10059ce4:	4621      	mov	r1, r4
10059ce6:	9802      	ldr	r0, [sp, #8]
10059ce8:	f000 f934 	bl	10059f54 <smp_send_packet>
10059cec:	2800      	cmp	r0, #0
10059cee:	d006      	beq.n	10059cfe <smp____SR_PairingRequest_Receive+0x162>
10059cf0:	4601      	mov	r1, r0
10059cf2:	2301      	movs	r3, #1
10059cf4:	4620      	mov	r0, r4
10059cf6:	9a02      	ldr	r2, [sp, #8]
10059cf8:	f001 fb38 	bl	1005b36c <smp_pairing_failed_send>
10059cfc:	e769      	b.n	10059bd2 <smp____SR_PairingRequest_Receive+0x36>
10059cfe:	8921      	ldrh	r1, [r4, #8]
10059d00:	2207      	movs	r2, #7
10059d02:	0312      	lsls	r2, r2, #12
10059d04:	4391      	bics	r1, r2
10059d06:	8121      	strh	r1, [r4, #8]
10059d08:	4902      	ldr	r1, [pc, #8]	; (10059d14 <smp____SR_PairingRequest_Receive+0x178>)
10059d0a:	6809      	ldr	r1, [r1, #0]
10059d0c:	3180      	adds	r1, #128	; 0x80
10059d0e:	72ce      	strb	r6, [r1, #11]
10059d10:	72a7      	strb	r7, [r4, #10]
10059d12:	e75e      	b.n	10059bd2 <smp____SR_PairingRequest_Receive+0x36>
10059d14:	20000d6c 	.word	0x20000d6c

10059d18 <smp_sc_MI_PairingConfirm_Send_sc_excerpt>:
10059d18:	b538      	push	{r3, r4, r5, lr}
10059d1a:	c814      	ldmia	r0!, {r2, r4}
10059d1c:	7fd0      	ldrb	r0, [r2, #31]
10059d1e:	2802      	cmp	r0, #2
10059d20:	d10f      	bne.n	10059d42 <smp_sc_MI_PairingConfirm_Send_sc_excerpt+0x2a>
10059d22:	4808      	ldr	r0, [pc, #32]	; (10059d44 <smp_sc_MI_PairingConfirm_Send_sc_excerpt+0x2c>)
10059d24:	7bd1      	ldrb	r1, [r2, #15]
10059d26:	6800      	ldr	r0, [r0, #0]
10059d28:	1e49      	subs	r1, r1, #1
10059d2a:	6903      	ldr	r3, [r0, #16]
10059d2c:	9400      	str	r4, [sp, #0]
10059d2e:	40cb      	lsrs	r3, r1
10059d30:	07db      	lsls	r3, r3, #31
10059d32:	4601      	mov	r1, r0
10059d34:	0fdb      	lsrs	r3, r3, #31
10059d36:	3190      	adds	r1, #144	; 0x90
10059d38:	303c      	adds	r0, #60	; 0x3c
10059d3a:	3254      	adds	r2, #84	; 0x54
10059d3c:	3380      	adds	r3, #128	; 0x80
10059d3e:	f000 f974 	bl	1005a02a <SMA_SC_Gen_f4_Confirm>
10059d42:	bd38      	pop	{r3, r4, r5, pc}
10059d44:	20000d6c 	.word	0x20000d6c

10059d48 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1>:
10059d48:	b538      	push	{r3, r4, r5, lr}
10059d4a:	c814      	ldmia	r0!, {r2, r4}
10059d4c:	7fd1      	ldrb	r1, [r2, #31]
10059d4e:	2300      	movs	r3, #0
10059d50:	2903      	cmp	r1, #3
10059d52:	d004      	beq.n	10059d5e <smp_sc_MI_PairingRandom_Receive_sc_excerpt1+0x16>
10059d54:	480c      	ldr	r0, [pc, #48]	; (10059d88 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1+0x40>)
10059d56:	2902      	cmp	r1, #2
10059d58:	6800      	ldr	r0, [r0, #0]
10059d5a:	d004      	beq.n	10059d66 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1+0x1e>
10059d5c:	e00a      	b.n	10059d74 <smp_sc_MI_PairingRandom_Receive_sc_excerpt1+0x2c>
10059d5e:	20aa      	movs	r0, #170	; 0xaa
10059d60:	7290      	strb	r0, [r2, #10]
10059d62:	20eb      	movs	r0, #235	; 0xeb
10059d64:	bd38      	pop	{r3, r4, r5, pc}
10059d66:	7bd1      	ldrb	r1, [r2, #15]
10059d68:	6903      	ldr	r3, [r0, #16]
10059d6a:	1e49      	subs	r1, r1, #1
10059d6c:	40cb      	lsrs	r3, r1
10059d6e:	07db      	lsls	r3, r3, #31
10059d70:	0fdb      	lsrs	r3, r3, #31
10059d72:	3380      	adds	r3, #128	; 0x80
10059d74:	4601      	mov	r1, r0
10059d76:	313c      	adds	r1, #60	; 0x3c
10059d78:	3090      	adds	r0, #144	; 0x90
10059d7a:	3264      	adds	r2, #100	; 0x64
10059d7c:	9400      	str	r4, [sp, #0]
10059d7e:	f000 f954 	bl	1005a02a <SMA_SC_Gen_f4_Confirm>
10059d82:	2000      	movs	r0, #0
10059d84:	bd38      	pop	{r3, r4, r5, pc}
10059d86:	0000      	.short	0x0000
10059d88:	20000d6c 	.word	0x20000d6c

10059d8c <smp_sc_MI_PairingRandom_Receive_sc_excerpt2>:
10059d8c:	b51c      	push	{r2, r3, r4, lr}
10059d8e:	4604      	mov	r4, r0
10059d90:	7fc0      	ldrb	r0, [r0, #31]
10059d92:	2804      	cmp	r0, #4
10059d94:	d006      	beq.n	10059da4 <smp_sc_MI_PairingRandom_Receive_sc_excerpt2+0x18>
10059d96:	21aa      	movs	r1, #170	; 0xaa
10059d98:	2802      	cmp	r0, #2
10059d9a:	d020      	beq.n	10059dde <smp_sc_MI_PairingRandom_Receive_sc_excerpt2+0x52>
10059d9c:	2801      	cmp	r0, #1
10059d9e:	d100      	bne.n	10059da2 <smp_sc_MI_PairingRandom_Receive_sc_excerpt2+0x16>
10059da0:	72a1      	strb	r1, [r4, #10]
10059da2:	bd1c      	pop	{r2, r3, r4, pc}
10059da4:	a801      	add	r0, sp, #4
10059da6:	9000      	str	r0, [sp, #0]
10059da8:	4810      	ldr	r0, [pc, #64]	; (10059dec <smp_sc_MI_PairingRandom_Receive_sc_excerpt2+0x60>)
10059daa:	4623      	mov	r3, r4
10059dac:	6800      	ldr	r0, [r0, #0]
10059dae:	4622      	mov	r2, r4
10059db0:	4601      	mov	r1, r0
10059db2:	3364      	adds	r3, #100	; 0x64
10059db4:	3254      	adds	r2, #84	; 0x54
10059db6:	3190      	adds	r1, #144	; 0x90
10059db8:	303c      	adds	r0, #60	; 0x3c
10059dba:	f000 fa11 	bl	1005a1e0 <SMA_SC_Gen_g2_NumComp_Val>
10059dbe:	20b9      	movs	r0, #185	; 0xb9
10059dc0:	72a0      	strb	r0, [r4, #10]
10059dc2:	a801      	add	r0, sp, #4
10059dc4:	f7fe feda 	bl	10058b7c <le4ByteToInt32>
10059dc8:	4909      	ldr	r1, [pc, #36]	; (10059df0 <smp_sc_MI_PairingRandom_Receive_sc_excerpt2+0x64>)
10059dca:	f7e6 fa4d 	bl	10040268 <__aeabi_uidivmod>
10059dce:	8920      	ldrh	r0, [r4, #8]
10059dd0:	460a      	mov	r2, r1
10059dd2:	0501      	lsls	r1, r0, #20
10059dd4:	0d09      	lsrs	r1, r1, #20
10059dd6:	2002      	movs	r0, #2
10059dd8:	f7fe fe9c 	bl	10058b14 <aci_gap_numeric_comparison_value_event_push>
10059ddc:	bd1c      	pop	{r2, r3, r4, pc}
10059dde:	7be0      	ldrb	r0, [r4, #15]
10059de0:	2814      	cmp	r0, #20
10059de2:	d2dd      	bcs.n	10059da0 <smp_sc_MI_PairingRandom_Receive_sc_excerpt2+0x14>
10059de4:	20a4      	movs	r0, #164	; 0xa4
10059de6:	72a0      	strb	r0, [r4, #10]
10059de8:	bd1c      	pop	{r2, r3, r4, pc}
10059dea:	0000      	.short	0x0000
10059dec:	20000d6c 	.word	0x20000d6c
10059df0:	000f4240 	.word	0x000f4240

10059df4 <smp_sc_MI_PairingResponse_Receive_sc_excerpt>:
10059df4:	b510      	push	{r4, lr}
10059df6:	4a0b      	ldr	r2, [pc, #44]	; (10059e24 <smp_sc_MI_PairingResponse_Receive_sc_excerpt+0x30>)
10059df8:	6801      	ldr	r1, [r0, #0]
10059dfa:	6812      	ldr	r2, [r2, #0]
10059dfc:	6889      	ldr	r1, [r1, #8]
10059dfe:	7d92      	ldrb	r2, [r2, #22]
10059e00:	6840      	ldr	r0, [r0, #4]
10059e02:	7bc9      	ldrb	r1, [r1, #15]
10059e04:	2a02      	cmp	r2, #2
10059e06:	d103      	bne.n	10059e10 <smp_sc_MI_PairingResponse_Receive_sc_excerpt+0x1c>
10059e08:	070a      	lsls	r2, r1, #28
10059e0a:	d401      	bmi.n	10059e10 <smp_sc_MI_PairingResponse_Receive_sc_excerpt+0x1c>
10059e0c:	2003      	movs	r0, #3
10059e0e:	bd10      	pop	{r4, pc}
10059e10:	2318      	movs	r3, #24
10059e12:	7ac2      	ldrb	r2, [r0, #11]
10059e14:	43db      	mvns	r3, r3
10059e16:	4319      	orrs	r1, r3
10059e18:	400a      	ands	r2, r1
10059e1a:	72c2      	strb	r2, [r0, #11]
10059e1c:	f7e7 fed0 	bl	10041bc0 <smp_sc_continue_on_exclusive_sc_pairing_ucfg>
10059e20:	bd10      	pop	{r4, pc}
10059e22:	0000      	.short	0x0000
10059e24:	20000d6c 	.word	0x20000d6c

10059e28 <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt>:
10059e28:	b510      	push	{r4, lr}
10059e2a:	7fc1      	ldrb	r1, [r0, #31]
10059e2c:	2901      	cmp	r1, #1
10059e2e:	d008      	beq.n	10059e42 <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt+0x1a>
10059e30:	2904      	cmp	r1, #4
10059e32:	d006      	beq.n	10059e42 <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt+0x1a>
10059e34:	2902      	cmp	r1, #2
10059e36:	d007      	beq.n	10059e48 <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt+0x20>
10059e38:	2903      	cmp	r1, #3
10059e3a:	d101      	bne.n	10059e40 <smp_sc_MI_Pairing_Phase_2AS1_Start_sc_excerpt+0x18>
10059e3c:	f001 fd62 	bl	1005b904 <smp_sc_pairing_oob_confirm_receive_verify>
10059e40:	bd10      	pop	{r4, pc}
10059e42:	21a5      	movs	r1, #165	; 0xa5
10059e44:	7281      	strb	r1, [r0, #10]
10059e46:	bd10      	pop	{r4, pc}
10059e48:	7bc1      	ldrb	r1, [r0, #15]
10059e4a:	1c49      	adds	r1, r1, #1
10059e4c:	73c1      	strb	r1, [r0, #15]
10059e4e:	f7ff fcb9 	bl	100597c4 <smp____MI_PairingConfirm_Send>
10059e52:	bd10      	pop	{r4, pc}

10059e54 <smp_sc_SR_PairingConfirm_Receive_sc_excerpt>:
10059e54:	b538      	push	{r3, r4, r5, lr}
10059e56:	c814      	ldmia	r0!, {r2, r4}
10059e58:	480a      	ldr	r0, [pc, #40]	; (10059e84 <smp_sc_SR_PairingConfirm_Receive_sc_excerpt+0x30>)
10059e5a:	7fd1      	ldrb	r1, [r2, #31]
10059e5c:	2300      	movs	r3, #0
10059e5e:	6800      	ldr	r0, [r0, #0]
10059e60:	2902      	cmp	r1, #2
10059e62:	d106      	bne.n	10059e72 <smp_sc_SR_PairingConfirm_Receive_sc_excerpt+0x1e>
10059e64:	7bd1      	ldrb	r1, [r2, #15]
10059e66:	6903      	ldr	r3, [r0, #16]
10059e68:	1e49      	subs	r1, r1, #1
10059e6a:	40cb      	lsrs	r3, r1
10059e6c:	07db      	lsls	r3, r3, #31
10059e6e:	0fdb      	lsrs	r3, r3, #31
10059e70:	3380      	adds	r3, #128	; 0x80
10059e72:	4601      	mov	r1, r0
10059e74:	3190      	adds	r1, #144	; 0x90
10059e76:	303c      	adds	r0, #60	; 0x3c
10059e78:	3264      	adds	r2, #100	; 0x64
10059e7a:	9400      	str	r4, [sp, #0]
10059e7c:	f000 f8d5 	bl	1005a02a <SMA_SC_Gen_f4_Confirm>
10059e80:	bd38      	pop	{r3, r4, r5, pc}
10059e82:	0000      	.short	0x0000
10059e84:	20000d6c 	.word	0x20000d6c

10059e88 <smp_sc_SR_PairingRandom_Receive_sc_excerpt>:
10059e88:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10059e8a:	6804      	ldr	r4, [r0, #0]
10059e8c:	6841      	ldr	r1, [r0, #4]
10059e8e:	9102      	str	r1, [sp, #8]
10059e90:	6886      	ldr	r6, [r0, #8]
10059e92:	68c5      	ldr	r5, [r0, #12]
10059e94:	20ba      	movs	r0, #186	; 0xba
10059e96:	7028      	strb	r0, [r5, #0]
10059e98:	2000      	movs	r0, #0
10059e9a:	6030      	str	r0, [r6, #0]
10059e9c:	7fe1      	ldrb	r1, [r4, #31]
10059e9e:	481f      	ldr	r0, [pc, #124]	; (10059f1c <smp_sc_SR_PairingRandom_Receive_sc_excerpt+0x94>)
10059ea0:	2904      	cmp	r1, #4
10059ea2:	d01e      	beq.n	10059ee2 <smp_sc_SR_PairingRandom_Receive_sc_excerpt+0x5a>
10059ea4:	2902      	cmp	r1, #2
10059ea6:	d11b      	bne.n	10059ee0 <smp_sc_SR_PairingRandom_Receive_sc_excerpt+0x58>
10059ea8:	6800      	ldr	r0, [r0, #0]
10059eaa:	7be7      	ldrb	r7, [r4, #15]
10059eac:	6901      	ldr	r1, [r0, #16]
10059eae:	1e7a      	subs	r2, r7, #1
10059eb0:	40d1      	lsrs	r1, r2
10059eb2:	07cb      	lsls	r3, r1, #31
10059eb4:	9902      	ldr	r1, [sp, #8]
10059eb6:	9100      	str	r1, [sp, #0]
10059eb8:	4601      	mov	r1, r0
10059eba:	0fdb      	lsrs	r3, r3, #31
10059ebc:	4622      	mov	r2, r4
10059ebe:	3254      	adds	r2, #84	; 0x54
10059ec0:	313c      	adds	r1, #60	; 0x3c
10059ec2:	3090      	adds	r0, #144	; 0x90
10059ec4:	3380      	adds	r3, #128	; 0x80
10059ec6:	f000 f8b0 	bl	1005a02a <SMA_SC_Gen_f4_Confirm>
10059eca:	4621      	mov	r1, r4
10059ecc:	2210      	movs	r2, #16
10059ece:	312a      	adds	r1, #42	; 0x2a
10059ed0:	9802      	ldr	r0, [sp, #8]
10059ed2:	f7e6 fc5e 	bl	10040792 <Osal_MemCmp>
10059ed6:	6030      	str	r0, [r6, #0]
10059ed8:	2f14      	cmp	r7, #20
10059eda:	d201      	bcs.n	10059ee0 <smp_sc_SR_PairingRandom_Receive_sc_excerpt+0x58>
10059edc:	20b4      	movs	r0, #180	; 0xb4
10059ede:	7028      	strb	r0, [r5, #0]
10059ee0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10059ee2:	a901      	add	r1, sp, #4
10059ee4:	9100      	str	r1, [sp, #0]
10059ee6:	6800      	ldr	r0, [r0, #0]
10059ee8:	4623      	mov	r3, r4
10059eea:	4601      	mov	r1, r0
10059eec:	4622      	mov	r2, r4
10059eee:	3364      	adds	r3, #100	; 0x64
10059ef0:	3254      	adds	r2, #84	; 0x54
10059ef2:	313c      	adds	r1, #60	; 0x3c
10059ef4:	3090      	adds	r0, #144	; 0x90
10059ef6:	f000 f973 	bl	1005a1e0 <SMA_SC_Gen_g2_NumComp_Val>
10059efa:	20b9      	movs	r0, #185	; 0xb9
10059efc:	7028      	strb	r0, [r5, #0]
10059efe:	a801      	add	r0, sp, #4
10059f00:	f7fe fe3c 	bl	10058b7c <le4ByteToInt32>
10059f04:	4906      	ldr	r1, [pc, #24]	; (10059f20 <smp_sc_SR_PairingRandom_Receive_sc_excerpt+0x98>)
10059f06:	f7e6 f9af 	bl	10040268 <__aeabi_uidivmod>
10059f0a:	8920      	ldrh	r0, [r4, #8]
10059f0c:	460a      	mov	r2, r1
10059f0e:	0501      	lsls	r1, r0, #20
10059f10:	0d09      	lsrs	r1, r1, #20
10059f12:	2002      	movs	r0, #2
10059f14:	f7fe fdfe 	bl	10058b14 <aci_gap_numeric_comparison_value_event_push>
10059f18:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10059f1a:	0000      	.short	0x0000
10059f1c:	20000d6c 	.word	0x20000d6c
10059f20:	000f4240 	.word	0x000f4240

10059f24 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt>:
10059f24:	b510      	push	{r4, lr}
10059f26:	7fc1      	ldrb	r1, [r0, #31]
10059f28:	2901      	cmp	r1, #1
10059f2a:	d008      	beq.n	10059f3e <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt+0x1a>
10059f2c:	2904      	cmp	r1, #4
10059f2e:	d006      	beq.n	10059f3e <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt+0x1a>
10059f30:	2902      	cmp	r1, #2
10059f32:	d009      	beq.n	10059f48 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt+0x24>
10059f34:	2903      	cmp	r1, #3
10059f36:	d101      	bne.n	10059f3c <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt+0x18>
10059f38:	f001 fce4 	bl	1005b904 <smp_sc_pairing_oob_confirm_receive_verify>
10059f3c:	bd10      	pop	{r4, pc}
10059f3e:	4601      	mov	r1, r0
10059f40:	2000      	movs	r0, #0
10059f42:	f7ff fd5d 	bl	10059a00 <smp____SR_PairingConfirm_Receive>
10059f46:	bd10      	pop	{r4, pc}
10059f48:	7bc1      	ldrb	r1, [r0, #15]
10059f4a:	1c49      	adds	r1, r1, #1
10059f4c:	73c1      	strb	r1, [r0, #15]
10059f4e:	21b5      	movs	r1, #181	; 0xb5
10059f50:	7281      	strb	r1, [r0, #10]
10059f52:	bd10      	pop	{r4, pc}

10059f54 <smp_send_packet>:
10059f54:	b570      	push	{r4, r5, r6, lr}
10059f56:	460d      	mov	r5, r1
10059f58:	4606      	mov	r6, r0
10059f5a:	4601      	mov	r1, r0
10059f5c:	2006      	movs	r0, #6
10059f5e:	f7f4 f80f 	bl	1004df80 <L2C_Send_Data>
10059f62:	0004      	movs	r4, r0
10059f64:	d005      	beq.n	10059f72 <smp_send_packet+0x1e>
10059f66:	2100      	movs	r1, #0
10059f68:	4630      	mov	r0, r6
10059f6a:	f7fa fdbb 	bl	10054ae4 <PM_Release_Acl_Pckt>
10059f6e:	4620      	mov	r0, r4
10059f70:	bd70      	pop	{r4, r5, r6, pc}
10059f72:	8928      	ldrh	r0, [r5, #8]
10059f74:	f001 f840 	bl	1005aff8 <smp_find_remote_device_index>
10059f78:	4602      	mov	r2, r0
10059f7a:	2100      	movs	r1, #0
10059f7c:	4b02      	ldr	r3, [pc, #8]	; (10059f88 <smp_send_packet+0x34>)
10059f7e:	4608      	mov	r0, r1
10059f80:	f000 fe48 	bl	1005ac14 <SMP_reset_timer>
10059f84:	e7f3      	b.n	10059f6e <smp_send_packet+0x1a>
10059f86:	0000      	.short	0x0000
10059f88:	00007530 	.word	0x00007530

10059f8c <SMA_Diversify>:
10059f8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10059f8e:	2400      	movs	r4, #0
10059f90:	9400      	str	r4, [sp, #0]
10059f92:	9401      	str	r4, [sp, #4]
10059f94:	9402      	str	r4, [sp, #8]
10059f96:	9403      	str	r4, [sp, #12]
10059f98:	780d      	ldrb	r5, [r1, #0]
10059f9a:	466c      	mov	r4, sp
10059f9c:	7025      	strb	r5, [r4, #0]
10059f9e:	7849      	ldrb	r1, [r1, #1]
10059fa0:	7061      	strb	r1, [r4, #1]
10059fa2:	7811      	ldrb	r1, [r2, #0]
10059fa4:	70a1      	strb	r1, [r4, #2]
10059fa6:	7851      	ldrb	r1, [r2, #1]
10059fa8:	70e1      	strb	r1, [r4, #3]
10059faa:	461a      	mov	r2, r3
10059fac:	4669      	mov	r1, sp
10059fae:	f7f2 ff34 	bl	1004ce1a <hci_le_encrypt>
10059fb2:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

10059fb4 <SMA_Generate_CSRK>:
10059fb4:	b51c      	push	{r2, r3, r4, lr}
10059fb6:	a207      	add	r2, pc, #28	; (adr r2, 10059fd4 <SMA_Generate_CSRK+0x20>)
10059fb8:	6812      	ldr	r2, [r2, #0]
10059fba:	460b      	mov	r3, r1
10059fbc:	9201      	str	r2, [sp, #4]
10059fbe:	4601      	mov	r1, r0
10059fc0:	2200      	movs	r2, #0
10059fc2:	4805      	ldr	r0, [pc, #20]	; (10059fd8 <SMA_Generate_CSRK+0x24>)
10059fc4:	9200      	str	r2, [sp, #0]
10059fc6:	6800      	ldr	r0, [r0, #0]
10059fc8:	aa01      	add	r2, sp, #4
10059fca:	3120      	adds	r1, #32
10059fcc:	3080      	adds	r0, #128	; 0x80
10059fce:	f7ff ffdd 	bl	10059f8c <SMA_Diversify>
10059fd2:	bd1c      	pop	{r2, r3, r4, pc}
10059fd4:	00000001 	.word	0x00000001
10059fd8:	20000d64 	.word	0x20000d64

10059fdc <SMA_Generate_IRK>:
10059fdc:	b50e      	push	{r1, r2, r3, lr}
10059fde:	a107      	add	r1, pc, #28	; (adr r1, 10059ffc <SMA_Generate_IRK+0x20>)
10059fe0:	6809      	ldr	r1, [r1, #0]
10059fe2:	9101      	str	r1, [sp, #4]
10059fe4:	2100      	movs	r1, #0
10059fe6:	4603      	mov	r3, r0
10059fe8:	4805      	ldr	r0, [pc, #20]	; (1005a000 <SMA_Generate_IRK+0x24>)
10059fea:	9102      	str	r1, [sp, #8]
10059fec:	9100      	str	r1, [sp, #0]
10059fee:	6800      	ldr	r0, [r0, #0]
10059ff0:	aa02      	add	r2, sp, #8
10059ff2:	a901      	add	r1, sp, #4
10059ff4:	3090      	adds	r0, #144	; 0x90
10059ff6:	f7ff ffc9 	bl	10059f8c <SMA_Diversify>
10059ffa:	bd0e      	pop	{r1, r2, r3, pc}
10059ffc:	00000001 	.word	0x00000001
1005a000:	20000d64 	.word	0x20000d64

1005a004 <SMA_LP_s1_Generate_STK>:
1005a004:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
1005a006:	4616      	mov	r6, r2
1005a008:	4604      	mov	r4, r0
1005a00a:	461d      	mov	r5, r3
1005a00c:	2208      	movs	r2, #8
1005a00e:	a802      	add	r0, sp, #8
1005a010:	f7e6 fbb7 	bl	10040782 <Osal_MemCpy>
1005a014:	2208      	movs	r2, #8
1005a016:	4631      	mov	r1, r6
1005a018:	4668      	mov	r0, sp
1005a01a:	f7e6 fbb2 	bl	10040782 <Osal_MemCpy>
1005a01e:	462a      	mov	r2, r5
1005a020:	4669      	mov	r1, sp
1005a022:	4620      	mov	r0, r4
1005a024:	f7f2 fef9 	bl	1004ce1a <hci_le_encrypt>
1005a028:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

1005a02a <SMA_SC_Gen_f4_Confirm>:
1005a02a:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a02c:	b099      	sub	sp, #100	; 0x64
1005a02e:	460e      	mov	r6, r1
1005a030:	461c      	mov	r4, r3
1005a032:	4617      	mov	r7, r2
1005a034:	4601      	mov	r1, r0
1005a036:	2301      	movs	r3, #1
1005a038:	2220      	movs	r2, #32
1005a03a:	4668      	mov	r0, sp
1005a03c:	9d1e      	ldr	r5, [sp, #120]	; 0x78
1005a03e:	f001 fe74 	bl	1005bd2a <copy_swap_buffer>
1005a042:	2301      	movs	r3, #1
1005a044:	2220      	movs	r2, #32
1005a046:	4631      	mov	r1, r6
1005a048:	a808      	add	r0, sp, #32
1005a04a:	f001 fe6e 	bl	1005bd2a <copy_swap_buffer>
1005a04e:	a810      	add	r0, sp, #64	; 0x40
1005a050:	7004      	strb	r4, [r0, #0]
1005a052:	2301      	movs	r3, #1
1005a054:	2210      	movs	r2, #16
1005a056:	4639      	mov	r1, r7
1005a058:	a811      	add	r0, sp, #68	; 0x44
1005a05a:	f001 fe66 	bl	1005bd2a <copy_swap_buffer>
1005a05e:	ab15      	add	r3, sp, #84	; 0x54
1005a060:	aa11      	add	r2, sp, #68	; 0x44
1005a062:	2141      	movs	r1, #65	; 0x41
1005a064:	4668      	mov	r0, sp
1005a066:	f003 f95c 	bl	1005d322 <AES_CMAC_Encrypt>
1005a06a:	2301      	movs	r3, #1
1005a06c:	2210      	movs	r2, #16
1005a06e:	a915      	add	r1, sp, #84	; 0x54
1005a070:	4628      	mov	r0, r5
1005a072:	f001 fe5a 	bl	1005bd2a <copy_swap_buffer>
1005a076:	b019      	add	sp, #100	; 0x64
1005a078:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1005a07c <SMA_SC_Gen_f5_Keys>:
1005a07c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005a07e:	b0a3      	sub	sp, #140	; 0x8c
1005a080:	460f      	mov	r7, r1
1005a082:	4605      	mov	r5, r0
1005a084:	461c      	mov	r4, r3
1005a086:	2238      	movs	r2, #56	; 0x38
1005a088:	a125      	add	r1, pc, #148	; (adr r1, 1005a120 <SMA_SC_Gen_f5_Keys+0xa4>)
1005a08a:	4668      	mov	r0, sp
1005a08c:	9e30      	ldr	r6, [sp, #192]	; 0xc0
1005a08e:	f7ec fb6c 	bl	1004676a <__aeabi_memcpy>
1005a092:	2301      	movs	r3, #1
1005a094:	2220      	movs	r2, #32
1005a096:	4629      	mov	r1, r5
1005a098:	a80e      	add	r0, sp, #56	; 0x38
1005a09a:	f001 fe46 	bl	1005bd2a <copy_swap_buffer>
1005a09e:	ab16      	add	r3, sp, #88	; 0x58
1005a0a0:	4a2d      	ldr	r2, [pc, #180]	; (1005a158 <SMA_SC_Gen_f5_Keys+0xdc>)
1005a0a2:	2120      	movs	r1, #32
1005a0a4:	a80e      	add	r0, sp, #56	; 0x38
1005a0a6:	f003 f93c 	bl	1005d322 <AES_CMAC_Encrypt>
1005a0aa:	a801      	add	r0, sp, #4
1005a0ac:	2301      	movs	r3, #1
1005a0ae:	2210      	movs	r2, #16
1005a0b0:	4639      	mov	r1, r7
1005a0b2:	3001      	adds	r0, #1
1005a0b4:	f001 fe39 	bl	1005bd2a <copy_swap_buffer>
1005a0b8:	a805      	add	r0, sp, #20
1005a0ba:	2301      	movs	r3, #1
1005a0bc:	2210      	movs	r2, #16
1005a0be:	3001      	adds	r0, #1
1005a0c0:	9925      	ldr	r1, [sp, #148]	; 0x94
1005a0c2:	f001 fe32 	bl	1005bd2a <copy_swap_buffer>
1005a0c6:	a808      	add	r0, sp, #32
1005a0c8:	7144      	strb	r4, [r0, #5]
1005a0ca:	2301      	movs	r3, #1
1005a0cc:	2206      	movs	r2, #6
1005a0ce:	1d80      	adds	r0, r0, #6
1005a0d0:	992c      	ldr	r1, [sp, #176]	; 0xb0
1005a0d2:	f001 fe2a 	bl	1005bd2a <copy_swap_buffer>
1005a0d6:	a808      	add	r0, sp, #32
1005a0d8:	992d      	ldr	r1, [sp, #180]	; 0xb4
1005a0da:	7301      	strb	r1, [r0, #12]
1005a0dc:	2301      	movs	r3, #1
1005a0de:	2206      	movs	r2, #6
1005a0e0:	300d      	adds	r0, #13
1005a0e2:	992e      	ldr	r1, [sp, #184]	; 0xb8
1005a0e4:	f001 fe21 	bl	1005bd2a <copy_swap_buffer>
1005a0e8:	ab1a      	add	r3, sp, #104	; 0x68
1005a0ea:	aa16      	add	r2, sp, #88	; 0x58
1005a0ec:	2135      	movs	r1, #53	; 0x35
1005a0ee:	4668      	mov	r0, sp
1005a0f0:	f003 f917 	bl	1005d322 <AES_CMAC_Encrypt>
1005a0f4:	2301      	movs	r3, #1
1005a0f6:	2210      	movs	r2, #16
1005a0f8:	a91a      	add	r1, sp, #104	; 0x68
1005a0fa:	982f      	ldr	r0, [sp, #188]	; 0xbc
1005a0fc:	f001 fe15 	bl	1005bd2a <copy_swap_buffer>
1005a100:	2101      	movs	r1, #1
1005a102:	4668      	mov	r0, sp
1005a104:	7001      	strb	r1, [r0, #0]
1005a106:	ab1e      	add	r3, sp, #120	; 0x78
1005a108:	aa16      	add	r2, sp, #88	; 0x58
1005a10a:	2135      	movs	r1, #53	; 0x35
1005a10c:	f003 f909 	bl	1005d322 <AES_CMAC_Encrypt>
1005a110:	2301      	movs	r3, #1
1005a112:	2210      	movs	r2, #16
1005a114:	a91e      	add	r1, sp, #120	; 0x78
1005a116:	4630      	mov	r0, r6
1005a118:	f001 fe07 	bl	1005bd2a <copy_swap_buffer>
1005a11c:	b027      	add	sp, #156	; 0x9c
1005a11e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a120:	6c746200 	.word	0x6c746200
1005a124:	00000065 	.word	0x00000065
	...
1005a150:	01000000 	.word	0x01000000
1005a154:	00000000 	.word	0x00000000
1005a158:	1005fedd 	.word	0x1005fedd

1005a15c <SMA_SC_Gen_f6_Check_Val>:
1005a15c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005a15e:	b099      	sub	sp, #100	; 0x64
1005a160:	4604      	mov	r4, r0
1005a162:	2301      	movs	r3, #1
1005a164:	2210      	movs	r2, #16
1005a166:	4668      	mov	r0, sp
1005a168:	9f22      	ldr	r7, [sp, #136]	; 0x88
1005a16a:	9e25      	ldr	r6, [sp, #148]	; 0x94
1005a16c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
1005a16e:	f001 fddc 	bl	1005bd2a <copy_swap_buffer>
1005a172:	2301      	movs	r3, #1
1005a174:	2210      	movs	r2, #16
1005a176:	a804      	add	r0, sp, #16
1005a178:	991b      	ldr	r1, [sp, #108]	; 0x6c
1005a17a:	f001 fdd6 	bl	1005bd2a <copy_swap_buffer>
1005a17e:	2301      	movs	r3, #1
1005a180:	2210      	movs	r2, #16
1005a182:	a808      	add	r0, sp, #32
1005a184:	991c      	ldr	r1, [sp, #112]	; 0x70
1005a186:	f001 fdd0 	bl	1005bd2a <copy_swap_buffer>
1005a18a:	2301      	movs	r3, #1
1005a18c:	2203      	movs	r2, #3
1005a18e:	4639      	mov	r1, r7
1005a190:	a80c      	add	r0, sp, #48	; 0x30
1005a192:	f001 fdca 	bl	1005bd2a <copy_swap_buffer>
1005a196:	a808      	add	r0, sp, #32
1005a198:	9923      	ldr	r1, [sp, #140]	; 0x8c
1005a19a:	74c1      	strb	r1, [r0, #19]
1005a19c:	2301      	movs	r3, #1
1005a19e:	2206      	movs	r2, #6
1005a1a0:	a80d      	add	r0, sp, #52	; 0x34
1005a1a2:	9924      	ldr	r1, [sp, #144]	; 0x90
1005a1a4:	f001 fdc1 	bl	1005bd2a <copy_swap_buffer>
1005a1a8:	a808      	add	r0, sp, #32
1005a1aa:	7686      	strb	r6, [r0, #26]
1005a1ac:	2301      	movs	r3, #1
1005a1ae:	2206      	movs	r2, #6
1005a1b0:	301b      	adds	r0, #27
1005a1b2:	9926      	ldr	r1, [sp, #152]	; 0x98
1005a1b4:	f001 fdb9 	bl	1005bd2a <copy_swap_buffer>
1005a1b8:	2301      	movs	r3, #1
1005a1ba:	2210      	movs	r2, #16
1005a1bc:	4621      	mov	r1, r4
1005a1be:	a815      	add	r0, sp, #84	; 0x54
1005a1c0:	f001 fdb3 	bl	1005bd2a <copy_swap_buffer>
1005a1c4:	ab11      	add	r3, sp, #68	; 0x44
1005a1c6:	aa15      	add	r2, sp, #84	; 0x54
1005a1c8:	2141      	movs	r1, #65	; 0x41
1005a1ca:	4668      	mov	r0, sp
1005a1cc:	f003 f8a9 	bl	1005d322 <AES_CMAC_Encrypt>
1005a1d0:	2301      	movs	r3, #1
1005a1d2:	2210      	movs	r2, #16
1005a1d4:	a911      	add	r1, sp, #68	; 0x44
1005a1d6:	4628      	mov	r0, r5
1005a1d8:	f001 fda7 	bl	1005bd2a <copy_swap_buffer>
1005a1dc:	b01d      	add	sp, #116	; 0x74
1005a1de:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005a1e0 <SMA_SC_Gen_g2_NumComp_Val>:
1005a1e0:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a1e2:	b09d      	sub	sp, #116	; 0x74
1005a1e4:	460d      	mov	r5, r1
1005a1e6:	461e      	mov	r6, r3
1005a1e8:	4617      	mov	r7, r2
1005a1ea:	4601      	mov	r1, r0
1005a1ec:	2301      	movs	r3, #1
1005a1ee:	2220      	movs	r2, #32
1005a1f0:	4668      	mov	r0, sp
1005a1f2:	9c22      	ldr	r4, [sp, #136]	; 0x88
1005a1f4:	f001 fd99 	bl	1005bd2a <copy_swap_buffer>
1005a1f8:	2301      	movs	r3, #1
1005a1fa:	2220      	movs	r2, #32
1005a1fc:	4629      	mov	r1, r5
1005a1fe:	a808      	add	r0, sp, #32
1005a200:	f001 fd93 	bl	1005bd2a <copy_swap_buffer>
1005a204:	2301      	movs	r3, #1
1005a206:	2210      	movs	r2, #16
1005a208:	4631      	mov	r1, r6
1005a20a:	a810      	add	r0, sp, #64	; 0x40
1005a20c:	f001 fd8d 	bl	1005bd2a <copy_swap_buffer>
1005a210:	2301      	movs	r3, #1
1005a212:	2210      	movs	r2, #16
1005a214:	4639      	mov	r1, r7
1005a216:	a814      	add	r0, sp, #80	; 0x50
1005a218:	f001 fd87 	bl	1005bd2a <copy_swap_buffer>
1005a21c:	ab18      	add	r3, sp, #96	; 0x60
1005a21e:	aa14      	add	r2, sp, #80	; 0x50
1005a220:	2150      	movs	r1, #80	; 0x50
1005a222:	4668      	mov	r0, sp
1005a224:	f003 f87d 	bl	1005d322 <AES_CMAC_Encrypt>
1005a228:	2301      	movs	r3, #1
1005a22a:	2204      	movs	r2, #4
1005a22c:	a91b      	add	r1, sp, #108	; 0x6c
1005a22e:	4620      	mov	r0, r4
1005a230:	f001 fd7b 	bl	1005bd2a <copy_swap_buffer>
1005a234:	b01d      	add	sp, #116	; 0x74
1005a236:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005a238 <SMA_generate_EDIV_recovery_DIV>:
1005a238:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a23a:	b091      	sub	sp, #68	; 0x44
1005a23c:	4605      	mov	r5, r0
1005a23e:	a019      	add	r0, pc, #100	; (adr r0, 1005a2a4 <SMA_generate_EDIV_recovery_DIV+0x6c>)
1005a240:	6800      	ldr	r0, [r0, #0]
1005a242:	9006      	str	r0, [sp, #24]
1005a244:	2000      	movs	r0, #0
1005a246:	9007      	str	r0, [sp, #28]
1005a248:	4817      	ldr	r0, [pc, #92]	; (1005a2a8 <SMA_generate_EDIV_recovery_DIV+0x70>)
1005a24a:	9300      	str	r3, [sp, #0]
1005a24c:	6800      	ldr	r0, [r0, #0]
1005a24e:	4614      	mov	r4, r2
1005a250:	460e      	mov	r6, r1
1005a252:	ab01      	add	r3, sp, #4
1005a254:	aa07      	add	r2, sp, #28
1005a256:	a906      	add	r1, sp, #24
1005a258:	3090      	adds	r0, #144	; 0x90
1005a25a:	f7ff fe97 	bl	10059f8c <SMA_Diversify>
1005a25e:	a801      	add	r0, sp, #4
1005a260:	9000      	str	r0, [sp, #0]
1005a262:	af05      	add	r7, sp, #20
1005a264:	2210      	movs	r2, #16
1005a266:	2100      	movs	r1, #0
1005a268:	a808      	add	r0, sp, #32
1005a26a:	f7e6 fa8e 	bl	1004078a <Osal_MemSet>
1005a26e:	2208      	movs	r2, #8
1005a270:	4631      	mov	r1, r6
1005a272:	a808      	add	r0, sp, #32
1005a274:	f7e6 fa85 	bl	10040782 <Osal_MemCpy>
1005a278:	aa0c      	add	r2, sp, #48	; 0x30
1005a27a:	a908      	add	r1, sp, #32
1005a27c:	9800      	ldr	r0, [sp, #0]
1005a27e:	f7f2 fdcc 	bl	1004ce1a <hci_le_encrypt>
1005a282:	2202      	movs	r2, #2
1005a284:	a90c      	add	r1, sp, #48	; 0x30
1005a286:	4638      	mov	r0, r7
1005a288:	f7e6 fa7b 	bl	10040782 <Osal_MemCpy>
1005a28c:	4668      	mov	r0, sp
1005a28e:	7d00      	ldrb	r0, [r0, #20]
1005a290:	7829      	ldrb	r1, [r5, #0]
1005a292:	4048      	eors	r0, r1
1005a294:	7020      	strb	r0, [r4, #0]
1005a296:	4668      	mov	r0, sp
1005a298:	7d40      	ldrb	r0, [r0, #21]
1005a29a:	7869      	ldrb	r1, [r5, #1]
1005a29c:	4048      	eors	r0, r1
1005a29e:	7060      	strb	r0, [r4, #1]
1005a2a0:	b011      	add	sp, #68	; 0x44
1005a2a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a2a4:	00000003 	.word	0x00000003
1005a2a8:	20000d64 	.word	0x20000d64

1005a2ac <SM_Generate_Resolvable_Private_Address>:
1005a2ac:	b510      	push	{r4, lr}
1005a2ae:	b086      	sub	sp, #24
1005a2b0:	4604      	mov	r4, r0
1005a2b2:	a801      	add	r0, sp, #4
1005a2b4:	f7ff fe92 	bl	10059fdc <SMA_Generate_IRK>
1005a2b8:	f7f2 fb28 	bl	1004c90c <Hal_Get_Random_Number>
1005a2bc:	4669      	mov	r1, sp
1005a2be:	7088      	strb	r0, [r1, #2]
1005a2c0:	0a00      	lsrs	r0, r0, #8
1005a2c2:	7048      	strb	r0, [r1, #1]
1005a2c4:	f7f2 fb22 	bl	1004c90c <Hal_Get_Random_Number>
1005a2c8:	4669      	mov	r1, sp
1005a2ca:	7008      	strb	r0, [r1, #0]
1005a2cc:	7888      	ldrb	r0, [r1, #2]
1005a2ce:	2140      	movs	r1, #64	; 0x40
1005a2d0:	0640      	lsls	r0, r0, #25
1005a2d2:	0e40      	lsrs	r0, r0, #25
1005a2d4:	4308      	orrs	r0, r1
1005a2d6:	4669      	mov	r1, sp
1005a2d8:	7088      	strb	r0, [r1, #2]
1005a2da:	aa05      	add	r2, sp, #20
1005a2dc:	a801      	add	r0, sp, #4
1005a2de:	f000 f880 	bl	1005a3e2 <sma_Calculate_Hash>
1005a2e2:	2203      	movs	r2, #3
1005a2e4:	a905      	add	r1, sp, #20
1005a2e6:	4620      	mov	r0, r4
1005a2e8:	f7e6 fa4b 	bl	10040782 <Osal_MemCpy>
1005a2ec:	2203      	movs	r2, #3
1005a2ee:	4669      	mov	r1, sp
1005a2f0:	1ce0      	adds	r0, r4, #3
1005a2f2:	f7e6 fa46 	bl	10040782 <Osal_MemCpy>
1005a2f6:	b006      	add	sp, #24
1005a2f8:	bd10      	pop	{r4, pc}

1005a2fa <SM_Resolve_Private_Address>:
1005a2fa:	b538      	push	{r3, r4, r5, lr}
1005a2fc:	460b      	mov	r3, r1
1005a2fe:	4604      	mov	r4, r0
1005a300:	1cc1      	adds	r1, r0, #3
1005a302:	466a      	mov	r2, sp
1005a304:	4618      	mov	r0, r3
1005a306:	f000 f86c 	bl	1005a3e2 <sma_Calculate_Hash>
1005a30a:	2203      	movs	r2, #3
1005a30c:	4621      	mov	r1, r4
1005a30e:	4668      	mov	r0, sp
1005a310:	f7e6 fa3f 	bl	10040792 <Osal_MemCmp>
1005a314:	2800      	cmp	r0, #0
1005a316:	d000      	beq.n	1005a31a <SM_Resolve_Private_Address+0x20>
1005a318:	2041      	movs	r0, #65	; 0x41
1005a31a:	bd38      	pop	{r3, r4, r5, pc}

1005a31c <sma_CMAC_generate_tag>:
1005a31c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005a31e:	b093      	sub	sp, #76	; 0x4c
1005a320:	4614      	mov	r4, r2
1005a322:	aa0f      	add	r2, sp, #60	; 0x3c
1005a324:	a90b      	add	r1, sp, #44	; 0x2c
1005a326:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005a328:	f000 f876 	bl	1005a418 <sma_generate_subkeys>
1005a32c:	2210      	movs	r2, #16
1005a32e:	2100      	movs	r1, #0
1005a330:	a802      	add	r0, sp, #8
1005a332:	f7e6 fa2a 	bl	1004078a <Osal_MemSet>
1005a336:	2500      	movs	r5, #0
1005a338:	ae02      	add	r6, sp, #8
1005a33a:	af06      	add	r7, sp, #24
1005a33c:	e01d      	b.n	1005a37a <sma_CMAC_generate_tag+0x5e>
1005a33e:	1d28      	adds	r0, r5, #4
1005a340:	b281      	uxth	r1, r0
1005a342:	ab06      	add	r3, sp, #24
1005a344:	2210      	movs	r2, #16
1005a346:	9814      	ldr	r0, [sp, #80]	; 0x50
1005a348:	f7fa fb30 	bl	100549ac <PM_Copy_Pckt_Data>
1005a34c:	2000      	movs	r0, #0
1005a34e:	5c31      	ldrb	r1, [r6, r0]
1005a350:	5c3a      	ldrb	r2, [r7, r0]
1005a352:	4051      	eors	r1, r2
1005a354:	5431      	strb	r1, [r6, r0]
1005a356:	1c40      	adds	r0, r0, #1
1005a358:	b2c0      	uxtb	r0, r0
1005a35a:	2810      	cmp	r0, #16
1005a35c:	d3f7      	bcc.n	1005a34e <sma_CMAC_generate_tag+0x32>
1005a35e:	aa06      	add	r2, sp, #24
1005a360:	a902      	add	r1, sp, #8
1005a362:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005a364:	f7f2 fd59 	bl	1004ce1a <hci_le_encrypt>
1005a368:	2210      	movs	r2, #16
1005a36a:	a906      	add	r1, sp, #24
1005a36c:	a802      	add	r0, sp, #8
1005a36e:	f7e6 fa08 	bl	10040782 <Osal_MemCpy>
1005a372:	3510      	adds	r5, #16
1005a374:	3c10      	subs	r4, #16
1005a376:	b2ad      	uxth	r5, r5
1005a378:	b2e4      	uxtb	r4, r4
1005a37a:	2c10      	cmp	r4, #16
1005a37c:	d8df      	bhi.n	1005a33e <sma_CMAC_generate_tag+0x22>
1005a37e:	d027      	beq.n	1005a3d0 <sma_CMAC_generate_tag+0xb4>
1005a380:	2210      	movs	r2, #16
1005a382:	2100      	movs	r1, #0
1005a384:	a806      	add	r0, sp, #24
1005a386:	f7e6 fa00 	bl	1004078a <Osal_MemSet>
1005a38a:	2c00      	cmp	r4, #0
1005a38c:	d008      	beq.n	1005a3a0 <sma_CMAC_generate_tag+0x84>
1005a38e:	2010      	movs	r0, #16
1005a390:	1b00      	subs	r0, r0, r4
1005a392:	19c3      	adds	r3, r0, r7
1005a394:	1d2d      	adds	r5, r5, #4
1005a396:	b2a9      	uxth	r1, r5
1005a398:	4622      	mov	r2, r4
1005a39a:	9814      	ldr	r0, [sp, #80]	; 0x50
1005a39c:	f7fa fb06 	bl	100549ac <PM_Copy_Pckt_Data>
1005a3a0:	2080      	movs	r0, #128	; 0x80
1005a3a2:	210f      	movs	r1, #15
1005a3a4:	1b09      	subs	r1, r1, r4
1005a3a6:	5478      	strb	r0, [r7, r1]
1005a3a8:	ac0f      	add	r4, sp, #60	; 0x3c
1005a3aa:	2000      	movs	r0, #0
1005a3ac:	5c39      	ldrb	r1, [r7, r0]
1005a3ae:	5c22      	ldrb	r2, [r4, r0]
1005a3b0:	4051      	eors	r1, r2
1005a3b2:	5c32      	ldrb	r2, [r6, r0]
1005a3b4:	4051      	eors	r1, r2
1005a3b6:	5431      	strb	r1, [r6, r0]
1005a3b8:	1c40      	adds	r0, r0, #1
1005a3ba:	b2c0      	uxtb	r0, r0
1005a3bc:	2810      	cmp	r0, #16
1005a3be:	d3f5      	bcc.n	1005a3ac <sma_CMAC_generate_tag+0x90>
1005a3c0:	a902      	add	r1, sp, #8
1005a3c2:	9a16      	ldr	r2, [sp, #88]	; 0x58
1005a3c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005a3c6:	f7f2 fd28 	bl	1004ce1a <hci_le_encrypt>
1005a3ca:	2000      	movs	r0, #0
1005a3cc:	b017      	add	sp, #92	; 0x5c
1005a3ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a3d0:	1d2d      	adds	r5, r5, #4
1005a3d2:	ac0b      	add	r4, sp, #44	; 0x2c
1005a3d4:	b2a9      	uxth	r1, r5
1005a3d6:	ab06      	add	r3, sp, #24
1005a3d8:	2210      	movs	r2, #16
1005a3da:	9814      	ldr	r0, [sp, #80]	; 0x50
1005a3dc:	f7fa fae6 	bl	100549ac <PM_Copy_Pckt_Data>
1005a3e0:	e7e3      	b.n	1005a3aa <sma_CMAC_generate_tag+0x8e>

1005a3e2 <sma_Calculate_Hash>:
1005a3e2:	b570      	push	{r4, r5, r6, lr}
1005a3e4:	b088      	sub	sp, #32
1005a3e6:	4616      	mov	r6, r2
1005a3e8:	460c      	mov	r4, r1
1005a3ea:	4605      	mov	r5, r0
1005a3ec:	2210      	movs	r2, #16
1005a3ee:	2100      	movs	r1, #0
1005a3f0:	4668      	mov	r0, sp
1005a3f2:	f7e6 f9ca 	bl	1004078a <Osal_MemSet>
1005a3f6:	2203      	movs	r2, #3
1005a3f8:	4621      	mov	r1, r4
1005a3fa:	4668      	mov	r0, sp
1005a3fc:	f7e6 f9c1 	bl	10040782 <Osal_MemCpy>
1005a400:	aa04      	add	r2, sp, #16
1005a402:	4669      	mov	r1, sp
1005a404:	4628      	mov	r0, r5
1005a406:	f7f2 fd08 	bl	1004ce1a <hci_le_encrypt>
1005a40a:	2203      	movs	r2, #3
1005a40c:	a904      	add	r1, sp, #16
1005a40e:	4630      	mov	r0, r6
1005a410:	f7e6 f9b7 	bl	10040782 <Osal_MemCpy>
1005a414:	b008      	add	sp, #32
1005a416:	bd70      	pop	{r4, r5, r6, pc}

1005a418 <sma_generate_subkeys>:
1005a418:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a41a:	b089      	sub	sp, #36	; 0x24
1005a41c:	4603      	mov	r3, r0
1005a41e:	2000      	movs	r0, #0
1005a420:	4615      	mov	r5, r2
1005a422:	460c      	mov	r4, r1
1005a424:	9000      	str	r0, [sp, #0]
1005a426:	9001      	str	r0, [sp, #4]
1005a428:	9002      	str	r0, [sp, #8]
1005a42a:	9003      	str	r0, [sp, #12]
1005a42c:	aa04      	add	r2, sp, #16
1005a42e:	4669      	mov	r1, sp
1005a430:	4618      	mov	r0, r3
1005a432:	f7f2 fcf2 	bl	1004ce1a <hci_le_encrypt>
1005a436:	4668      	mov	r0, sp
1005a438:	7fc0      	ldrb	r0, [r0, #31]
1005a43a:	2787      	movs	r7, #135	; 0x87
1005a43c:	0600      	lsls	r0, r0, #24
1005a43e:	2800      	cmp	r0, #0
1005a440:	466e      	mov	r6, sp
1005a442:	4621      	mov	r1, r4
1005a444:	a804      	add	r0, sp, #16
1005a446:	da0d      	bge.n	1005a464 <sma_generate_subkeys+0x4c>
1005a448:	f000 f825 	bl	1005a496 <sma_left_shift>
1005a44c:	4668      	mov	r0, sp
1005a44e:	7007      	strb	r7, [r0, #0]
1005a450:	2000      	movs	r0, #0
1005a452:	5c21      	ldrb	r1, [r4, r0]
1005a454:	5c32      	ldrb	r2, [r6, r0]
1005a456:	4051      	eors	r1, r2
1005a458:	5421      	strb	r1, [r4, r0]
1005a45a:	1c40      	adds	r0, r0, #1
1005a45c:	b2c0      	uxtb	r0, r0
1005a45e:	280f      	cmp	r0, #15
1005a460:	d3f7      	bcc.n	1005a452 <sma_generate_subkeys+0x3a>
1005a462:	e001      	b.n	1005a468 <sma_generate_subkeys+0x50>
1005a464:	f000 f817 	bl	1005a496 <sma_left_shift>
1005a468:	7be0      	ldrb	r0, [r4, #15]
1005a46a:	4629      	mov	r1, r5
1005a46c:	0600      	lsls	r0, r0, #24
1005a46e:	4620      	mov	r0, r4
1005a470:	d50e      	bpl.n	1005a490 <sma_generate_subkeys+0x78>
1005a472:	f000 f810 	bl	1005a496 <sma_left_shift>
1005a476:	4668      	mov	r0, sp
1005a478:	7007      	strb	r7, [r0, #0]
1005a47a:	2000      	movs	r0, #0
1005a47c:	5c29      	ldrb	r1, [r5, r0]
1005a47e:	5c32      	ldrb	r2, [r6, r0]
1005a480:	4051      	eors	r1, r2
1005a482:	5429      	strb	r1, [r5, r0]
1005a484:	1c40      	adds	r0, r0, #1
1005a486:	b2c0      	uxtb	r0, r0
1005a488:	280f      	cmp	r0, #15
1005a48a:	d3f7      	bcc.n	1005a47c <sma_generate_subkeys+0x64>
1005a48c:	b009      	add	sp, #36	; 0x24
1005a48e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a490:	f000 f801 	bl	1005a496 <sma_left_shift>
1005a494:	e7fa      	b.n	1005a48c <sma_generate_subkeys+0x74>

1005a496 <sma_left_shift>:
1005a496:	b530      	push	{r4, r5, lr}
1005a498:	7802      	ldrb	r2, [r0, #0]
1005a49a:	0052      	lsls	r2, r2, #1
1005a49c:	700a      	strb	r2, [r1, #0]
1005a49e:	2201      	movs	r2, #1
1005a4a0:	4614      	mov	r4, r2
1005a4a2:	5c83      	ldrb	r3, [r0, r2]
1005a4a4:	1885      	adds	r5, r0, r2
1005a4a6:	065b      	lsls	r3, r3, #25
1005a4a8:	0e1b      	lsrs	r3, r3, #24
1005a4aa:	548b      	strb	r3, [r1, r2]
1005a4ac:	3d20      	subs	r5, #32
1005a4ae:	7fed      	ldrb	r5, [r5, #31]
1005a4b0:	062d      	lsls	r5, r5, #24
1005a4b2:	d501      	bpl.n	1005a4b8 <sma_left_shift+0x22>
1005a4b4:	4323      	orrs	r3, r4
1005a4b6:	548b      	strb	r3, [r1, r2]
1005a4b8:	1c52      	adds	r2, r2, #1
1005a4ba:	b2d2      	uxtb	r2, r2
1005a4bc:	2a0f      	cmp	r2, #15
1005a4be:	d9f0      	bls.n	1005a4a2 <sma_left_shift+0xc>
1005a4c0:	bd30      	pop	{r4, r5, pc}
	...

1005a4c4 <SMP_Init>:
1005a4c4:	b510      	push	{r4, lr}
1005a4c6:	4c0d      	ldr	r4, [pc, #52]	; (1005a4fc <SMP_Init+0x38>)
1005a4c8:	22ff      	movs	r2, #255	; 0xff
1005a4ca:	2100      	movs	r1, #0
1005a4cc:	6820      	ldr	r0, [r4, #0]
1005a4ce:	f002 fb32 	bl	1005cb36 <acl_list_init>
1005a4d2:	6820      	ldr	r0, [r4, #0]
1005a4d4:	2100      	movs	r1, #0
1005a4d6:	7681      	strb	r1, [r0, #26]
1005a4d8:	76c1      	strb	r1, [r0, #27]
1005a4da:	2201      	movs	r2, #1
1005a4dc:	7342      	strb	r2, [r0, #13]
1005a4de:	2307      	movs	r3, #7
1005a4e0:	7383      	strb	r3, [r0, #14]
1005a4e2:	2310      	movs	r3, #16
1005a4e4:	73c3      	strb	r3, [r0, #15]
1005a4e6:	7602      	strb	r2, [r0, #24]
1005a4e8:	7501      	strb	r1, [r0, #20]
1005a4ea:	6101      	str	r1, [r0, #16]
1005a4ec:	7302      	strb	r2, [r0, #12]
1005a4ee:	7581      	strb	r1, [r0, #22]
1005a4f0:	75c1      	strb	r1, [r0, #23]
1005a4f2:	4608      	mov	r0, r1
1005a4f4:	f7e7 fb60 	bl	10041bb8 <smp_sc_init_ucfg>
1005a4f8:	bd10      	pop	{r4, pc}
1005a4fa:	0000      	.short	0x0000
1005a4fc:	20000d6c 	.word	0x20000d6c

1005a500 <SMP_Protocol_Timer_cb>:
1005a500:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1005a502:	3808      	subs	r0, #8
1005a504:	4e0e      	ldr	r6, [pc, #56]	; (1005a540 <SMP_Protocol_Timer_cb+0x40>)
1005a506:	b2c4      	uxtb	r4, r0
1005a508:	6830      	ldr	r0, [r6, #0]
1005a50a:	217c      	movs	r1, #124	; 0x7c
1005a50c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1005a50e:	434c      	muls	r4, r1
1005a510:	1905      	adds	r5, r0, r4
1005a512:	8928      	ldrh	r0, [r5, #8]
1005a514:	2300      	movs	r3, #0
1005a516:	0501      	lsls	r1, r0, #20
1005a518:	0d09      	lsrs	r1, r1, #20
1005a51a:	2201      	movs	r2, #1
1005a51c:	2002      	movs	r0, #2
1005a51e:	f000 fc7f 	bl	1005ae20 <aci_gap_pairing_complete_event_push>
1005a522:	2002      	movs	r0, #2
1005a524:	4669      	mov	r1, sp
1005a526:	9500      	str	r5, [sp, #0]
1005a528:	7108      	strb	r0, [r1, #4]
1005a52a:	4668      	mov	r0, sp
1005a52c:	f001 f800 	bl	1005b530 <smp_update_statistics_on_pairing_complete>
1005a530:	6830      	ldr	r0, [r6, #0]
1005a532:	227c      	movs	r2, #124	; 0x7c
1005a534:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1005a536:	2100      	movs	r1, #0
1005a538:	1900      	adds	r0, r0, r4
1005a53a:	f7e6 f926 	bl	1004078a <Osal_MemSet>
1005a53e:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005a540:	20000d6c 	.word	0x20000d6c

1005a544 <SMP_aci_get_oob_data>:
1005a544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005a546:	461e      	mov	r6, r3
1005a548:	460b      	mov	r3, r1
1005a54a:	490e      	ldr	r1, [pc, #56]	; (1005a584 <SMP_aci_get_oob_data+0x40>)
1005a54c:	2500      	movs	r5, #0
1005a54e:	9f06      	ldr	r7, [sp, #24]
1005a550:	680c      	ldr	r4, [r1, #0]
1005a552:	2800      	cmp	r0, #0
1005a554:	d005      	beq.n	1005a562 <SMP_aci_get_oob_data+0x1e>
1005a556:	2801      	cmp	r0, #1
1005a558:	d003      	beq.n	1005a562 <SMP_aci_get_oob_data+0x1e>
1005a55a:	2802      	cmp	r0, #2
1005a55c:	d003      	beq.n	1005a566 <SMP_aci_get_oob_data+0x22>
1005a55e:	2542      	movs	r5, #66	; 0x42
1005a560:	e00d      	b.n	1005a57e <SMP_aci_get_oob_data+0x3a>
1005a562:	341c      	adds	r4, #28
1005a564:	e000      	b.n	1005a568 <SMP_aci_get_oob_data+0x24>
1005a566:	342c      	adds	r4, #44	; 0x2c
1005a568:	4611      	mov	r1, r2
1005a56a:	4618      	mov	r0, r3
1005a56c:	f000 fd92 	bl	1005b094 <smp_get_local_identity_address>
1005a570:	2010      	movs	r0, #16
1005a572:	7030      	strb	r0, [r6, #0]
1005a574:	4602      	mov	r2, r0
1005a576:	4621      	mov	r1, r4
1005a578:	4638      	mov	r0, r7
1005a57a:	f7e6 f902 	bl	10040782 <Osal_MemCpy>
1005a57e:	4628      	mov	r0, r5
1005a580:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005a582:	0000      	.short	0x0000
1005a584:	20000d6c 	.word	0x20000d6c

1005a588 <SMP_aci_passkey_response>:
1005a588:	b510      	push	{r4, lr}
1005a58a:	460c      	mov	r4, r1
1005a58c:	f000 f9b2 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a590:	2800      	cmp	r0, #0
1005a592:	d004      	beq.n	1005a59e <SMP_aci_passkey_response+0x16>
1005a594:	7fc1      	ldrb	r1, [r0, #31]
1005a596:	2902      	cmp	r1, #2
1005a598:	d003      	beq.n	1005a5a2 <SMP_aci_passkey_response+0x1a>
1005a59a:	2046      	movs	r0, #70	; 0x46
1005a59c:	bd10      	pop	{r4, pc}
1005a59e:	2040      	movs	r0, #64	; 0x40
1005a5a0:	bd10      	pop	{r4, pc}
1005a5a2:	4904      	ldr	r1, [pc, #16]	; (1005a5b4 <SMP_aci_passkey_response+0x2c>)
1005a5a4:	2210      	movs	r2, #16
1005a5a6:	6809      	ldr	r1, [r1, #0]
1005a5a8:	610c      	str	r4, [r1, #16]
1005a5aa:	7ec1      	ldrb	r1, [r0, #27]
1005a5ac:	4311      	orrs	r1, r2
1005a5ae:	76c1      	strb	r1, [r0, #27]
1005a5b0:	2000      	movs	r0, #0
1005a5b2:	bd10      	pop	{r4, pc}
1005a5b4:	20000d6c 	.word	0x20000d6c

1005a5b8 <SMP_aci_set_oob_data>:
1005a5b8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005a5ba:	2400      	movs	r4, #0
1005a5bc:	b083      	sub	sp, #12
1005a5be:	461f      	mov	r7, r3
1005a5c0:	4605      	mov	r5, r0
1005a5c2:	4626      	mov	r6, r4
1005a5c4:	9400      	str	r4, [sp, #0]
1005a5c6:	f000 fd83 	bl	1005b0d0 <smp_is_any_pairing_ongoing>
1005a5ca:	2801      	cmp	r0, #1
1005a5cc:	d00d      	beq.n	1005a5ea <SMP_aci_set_oob_data+0x32>
1005a5ce:	0028      	movs	r0, r5
1005a5d0:	4d22      	ldr	r5, [pc, #136]	; (1005a65c <SMP_aci_set_oob_data+0xa4>)
1005a5d2:	d00d      	beq.n	1005a5f0 <SMP_aci_set_oob_data+0x38>
1005a5d4:	4668      	mov	r0, sp
1005a5d6:	7106      	strb	r6, [r0, #4]
1005a5d8:	4631      	mov	r1, r6
1005a5da:	466b      	mov	r3, sp
1005a5dc:	463a      	mov	r2, r7
1005a5de:	2000      	movs	r0, #0
1005a5e0:	f000 fe42 	bl	1005b268 <smp_oob_get_remote_data_reference>
1005a5e4:	0004      	movs	r4, r0
1005a5e6:	d024      	beq.n	1005a632 <SMP_aci_set_oob_data+0x7a>
1005a5e8:	e035      	b.n	1005a656 <SMP_aci_set_oob_data+0x9e>
1005a5ea:	2046      	movs	r0, #70	; 0x46
1005a5ec:	b007      	add	sp, #28
1005a5ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a5f0:	980c      	ldr	r0, [sp, #48]	; 0x30
1005a5f2:	2800      	cmp	r0, #0
1005a5f4:	d00c      	beq.n	1005a610 <SMP_aci_set_oob_data+0x58>
1005a5f6:	2f00      	cmp	r7, #0
1005a5f8:	d014      	beq.n	1005a624 <SMP_aci_set_oob_data+0x6c>
1005a5fa:	2f01      	cmp	r7, #1
1005a5fc:	d012      	beq.n	1005a624 <SMP_aci_set_oob_data+0x6c>
1005a5fe:	2f02      	cmp	r7, #2
1005a600:	d013      	beq.n	1005a62a <SMP_aci_set_oob_data+0x72>
1005a602:	9800      	ldr	r0, [sp, #0]
1005a604:	2442      	movs	r4, #66	; 0x42
1005a606:	2800      	cmp	r0, #0
1005a608:	d025      	beq.n	1005a656 <SMP_aci_set_oob_data+0x9e>
1005a60a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005a60c:	990d      	ldr	r1, [sp, #52]	; 0x34
1005a60e:	e020      	b.n	1005a652 <SMP_aci_set_oob_data+0x9a>
1005a610:	f7e7 fae6 	bl	10041be0 <secure_connections_csr_ucfg>
1005a614:	2801      	cmp	r0, #1
1005a616:	d001      	beq.n	1005a61c <SMP_aci_set_oob_data+0x64>
1005a618:	2411      	movs	r4, #17
1005a61a:	e01c      	b.n	1005a656 <SMP_aci_set_oob_data+0x9e>
1005a61c:	f7e7 fad8 	bl	10041bd0 <smp_sc_generate_new_local_oob_data_ucfg>
1005a620:	4604      	mov	r4, r0
1005a622:	e018      	b.n	1005a656 <SMP_aci_set_oob_data+0x9e>
1005a624:	6828      	ldr	r0, [r5, #0]
1005a626:	301c      	adds	r0, #28
1005a628:	e001      	b.n	1005a62e <SMP_aci_set_oob_data+0x76>
1005a62a:	6828      	ldr	r0, [r5, #0]
1005a62c:	302c      	adds	r0, #44	; 0x2c
1005a62e:	9000      	str	r0, [sp, #0]
1005a630:	e7e9      	b.n	1005a606 <SMP_aci_set_oob_data+0x4e>
1005a632:	6829      	ldr	r1, [r5, #0]
1005a634:	9804      	ldr	r0, [sp, #16]
1005a636:	3180      	adds	r1, #128	; 0x80
1005a638:	6849      	ldr	r1, [r1, #4]
1005a63a:	2206      	movs	r2, #6
1005a63c:	7048      	strb	r0, [r1, #1]
1005a63e:	6828      	ldr	r0, [r5, #0]
1005a640:	9905      	ldr	r1, [sp, #20]
1005a642:	3080      	adds	r0, #128	; 0x80
1005a644:	6840      	ldr	r0, [r0, #4]
1005a646:	1c80      	adds	r0, r0, #2
1005a648:	f7e6 f89b 	bl	10040782 <Osal_MemCpy>
1005a64c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005a64e:	990d      	ldr	r1, [sp, #52]	; 0x34
1005a650:	9800      	ldr	r0, [sp, #0]
1005a652:	f7e6 f896 	bl	10040782 <Osal_MemCpy>
1005a656:	4620      	mov	r0, r4
1005a658:	e7c8      	b.n	1005a5ec <SMP_aci_set_oob_data+0x34>
1005a65a:	0000      	.short	0x0000
1005a65c:	20000d6c 	.word	0x20000d6c

1005a660 <SMP_acl_data_hndl>:
1005a660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005a662:	4607      	mov	r7, r0
1005a664:	460d      	mov	r5, r1
1005a666:	2600      	movs	r6, #0
1005a668:	8888      	ldrh	r0, [r1, #4]
1005a66a:	f000 f943 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a66e:	0004      	movs	r4, r0
1005a670:	d064      	beq.n	1005a73c <SMP_acl_data_hndl+0xdc>
1005a672:	2f01      	cmp	r7, #1
1005a674:	d002      	beq.n	1005a67c <SMP_acl_data_hndl+0x1c>
1005a676:	2f00      	cmp	r7, #0
1005a678:	d009      	beq.n	1005a68e <SMP_acl_data_hndl+0x2e>
1005a67a:	e062      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a67c:	88e8      	ldrh	r0, [r5, #6]
1005a67e:	2841      	cmp	r0, #65	; 0x41
1005a680:	d85e      	bhi.n	1005a740 <SMP_acl_data_hndl+0xe0>
1005a682:	4833      	ldr	r0, [pc, #204]	; (1005a750 <SMP_acl_data_hndl+0xf0>)
1005a684:	4629      	mov	r1, r5
1005a686:	6800      	ldr	r0, [r0, #0]
1005a688:	f002 fa70 	bl	1005cb6c <acl_list_insert_tail>
1005a68c:	e05d      	b.n	1005a74a <SMP_acl_data_hndl+0xea>
1005a68e:	68a8      	ldr	r0, [r5, #8]
1005a690:	7b00      	ldrb	r0, [r0, #12]
1005a692:	2806      	cmp	r0, #6
1005a694:	d00b      	beq.n	1005a6ae <SMP_acl_data_hndl+0x4e>
1005a696:	21d5      	movs	r1, #213	; 0xd5
1005a698:	2807      	cmp	r0, #7
1005a69a:	d00a      	beq.n	1005a6b2 <SMP_acl_data_hndl+0x52>
1005a69c:	2808      	cmp	r0, #8
1005a69e:	d019      	beq.n	1005a6d4 <SMP_acl_data_hndl+0x74>
1005a6a0:	2809      	cmp	r0, #9
1005a6a2:	d019      	beq.n	1005a6d8 <SMP_acl_data_hndl+0x78>
1005a6a4:	280a      	cmp	r0, #10
1005a6a6:	d01c      	beq.n	1005a6e2 <SMP_acl_data_hndl+0x82>
1005a6a8:	280b      	cmp	r0, #11
1005a6aa:	d01e      	beq.n	1005a6ea <SMP_acl_data_hndl+0x8a>
1005a6ac:	e049      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6ae:	20d2      	movs	r0, #210	; 0xd2
1005a6b0:	e006      	b.n	1005a6c0 <SMP_acl_data_hndl+0x60>
1005a6b2:	7aa0      	ldrb	r0, [r4, #10]
1005a6b4:	28dd      	cmp	r0, #221	; 0xdd
1005a6b6:	d144      	bne.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6b8:	7fa0      	ldrb	r0, [r4, #30]
1005a6ba:	0782      	lsls	r2, r0, #30
1005a6bc:	d502      	bpl.n	1005a6c4 <SMP_acl_data_hndl+0x64>
1005a6be:	20d3      	movs	r0, #211	; 0xd3
1005a6c0:	72a0      	strb	r0, [r4, #10]
1005a6c2:	e03e      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6c4:	0740      	lsls	r0, r0, #29
1005a6c6:	d501      	bpl.n	1005a6cc <SMP_acl_data_hndl+0x6c>
1005a6c8:	72a1      	strb	r1, [r4, #10]
1005a6ca:	e03a      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6cc:	4620      	mov	r0, r4
1005a6ce:	f000 fbd5 	bl	1005ae7c <smp_Keys_Distribution_Complete>
1005a6d2:	e036      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6d4:	20d4      	movs	r0, #212	; 0xd4
1005a6d6:	e7f3      	b.n	1005a6c0 <SMP_acl_data_hndl+0x60>
1005a6d8:	7aa0      	ldrb	r0, [r4, #10]
1005a6da:	28dd      	cmp	r0, #221	; 0xdd
1005a6dc:	d131      	bne.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6de:	7fa0      	ldrb	r0, [r4, #30]
1005a6e0:	e7f0      	b.n	1005a6c4 <SMP_acl_data_hndl+0x64>
1005a6e2:	7aa0      	ldrb	r0, [r4, #10]
1005a6e4:	28dd      	cmp	r0, #221	; 0xdd
1005a6e6:	d0f1      	beq.n	1005a6cc <SMP_acl_data_hndl+0x6c>
1005a6e8:	e02b      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6ea:	7b20      	ldrb	r0, [r4, #12]
1005a6ec:	0781      	lsls	r1, r0, #30
1005a6ee:	0f89      	lsrs	r1, r1, #30
1005a6f0:	2901      	cmp	r1, #1
1005a6f2:	d126      	bne.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a6f4:	4388      	bics	r0, r1
1005a6f6:	2102      	movs	r1, #2
1005a6f8:	4308      	orrs	r0, r1
1005a6fa:	7320      	strb	r0, [r4, #12]
1005a6fc:	4815      	ldr	r0, [pc, #84]	; (1005a754 <SMP_acl_data_hndl+0xf4>)
1005a6fe:	2137      	movs	r1, #55	; 0x37
1005a700:	6800      	ldr	r0, [r0, #0]
1005a702:	0149      	lsls	r1, r1, #5
1005a704:	1841      	adds	r1, r0, r1
1005a706:	7a89      	ldrb	r1, [r1, #10]
1005a708:	2742      	movs	r7, #66	; 0x42
1005a70a:	06c9      	lsls	r1, r1, #27
1005a70c:	d50e      	bpl.n	1005a72c <SMP_acl_data_hndl+0xcc>
1005a70e:	2101      	movs	r1, #1
1005a710:	02c9      	lsls	r1, r1, #11
1005a712:	3008      	adds	r0, #8
1005a714:	1840      	adds	r0, r0, r1
1005a716:	2216      	movs	r2, #22
1005a718:	6940      	ldr	r0, [r0, #20]
1005a71a:	2300      	movs	r3, #0
1005a71c:	4639      	mov	r1, r7
1005a71e:	f001 fbe5 	bl	1005beec <aci_event_fifo_push_header>
1005a722:	0001      	movs	r1, r0
1005a724:	d002      	beq.n	1005a72c <SMP_acl_data_hndl+0xcc>
1005a726:	4638      	mov	r0, r7
1005a728:	f001 fbcc 	bl	1005bec4 <aci_event_fifo_push>
1005a72c:	7aa0      	ldrb	r0, [r4, #10]
1005a72e:	28f1      	cmp	r0, #241	; 0xf1
1005a730:	d107      	bne.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a732:	7b20      	ldrb	r0, [r4, #12]
1005a734:	2104      	movs	r1, #4
1005a736:	4308      	orrs	r0, r1
1005a738:	7320      	strb	r0, [r4, #12]
1005a73a:	e002      	b.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a73c:	2f01      	cmp	r7, #1
1005a73e:	d100      	bne.n	1005a742 <SMP_acl_data_hndl+0xe2>
1005a740:	2601      	movs	r6, #1
1005a742:	4631      	mov	r1, r6
1005a744:	4628      	mov	r0, r5
1005a746:	f7fa f9cd 	bl	10054ae4 <PM_Release_Acl_Pckt>
1005a74a:	2000      	movs	r0, #0
1005a74c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005a74e:	0000      	.short	0x0000
1005a750:	20000d6c 	.word	0x20000d6c
1005a754:	20000d64 	.word	0x20000d64

1005a758 <SMP_allow_rebond>:
1005a758:	b500      	push	{lr}
1005a75a:	0500      	lsls	r0, r0, #20
1005a75c:	0d00      	lsrs	r0, r0, #20
1005a75e:	f000 f8c9 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a762:	2800      	cmp	r0, #0
1005a764:	d006      	beq.n	1005a774 <SMP_allow_rebond+0x1c>
1005a766:	7b01      	ldrb	r1, [r0, #12]
1005a768:	070a      	lsls	r2, r1, #28
1005a76a:	0f92      	lsrs	r2, r2, #30
1005a76c:	2a02      	cmp	r2, #2
1005a76e:	d003      	beq.n	1005a778 <SMP_allow_rebond+0x20>
1005a770:	2046      	movs	r0, #70	; 0x46
1005a772:	bd00      	pop	{pc}
1005a774:	2040      	movs	r0, #64	; 0x40
1005a776:	bd00      	pop	{pc}
1005a778:	220c      	movs	r2, #12
1005a77a:	4311      	orrs	r1, r2
1005a77c:	7301      	strb	r1, [r0, #12]
1005a77e:	2000      	movs	r0, #0
1005a780:	bd00      	pop	{pc}

1005a782 <SMP_authorization_response>:
1005a782:	b510      	push	{r4, lr}
1005a784:	460c      	mov	r4, r1
1005a786:	f000 f8b5 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a78a:	2800      	cmp	r0, #0
1005a78c:	d005      	beq.n	1005a79a <SMP_authorization_response+0x18>
1005a78e:	8901      	ldrh	r1, [r0, #8]
1005a790:	040a      	lsls	r2, r1, #16
1005a792:	d509      	bpl.n	1005a7a8 <SMP_authorization_response+0x26>
1005a794:	2c01      	cmp	r4, #1
1005a796:	d002      	beq.n	1005a79e <SMP_authorization_response+0x1c>
1005a798:	e004      	b.n	1005a7a4 <SMP_authorization_response+0x22>
1005a79a:	2040      	movs	r0, #64	; 0x40
1005a79c:	bd10      	pop	{r4, pc}
1005a79e:	0449      	lsls	r1, r1, #17
1005a7a0:	0c49      	lsrs	r1, r1, #17
1005a7a2:	8101      	strh	r1, [r0, #8]
1005a7a4:	2000      	movs	r0, #0
1005a7a6:	bd10      	pop	{r4, pc}
1005a7a8:	2046      	movs	r0, #70	; 0x46
1005a7aa:	bd10      	pop	{r4, pc}

1005a7ac <SMP_check_encryption_key_size>:
1005a7ac:	b510      	push	{r4, lr}
1005a7ae:	460c      	mov	r4, r1
1005a7b0:	f000 f8a0 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a7b4:	2800      	cmp	r0, #0
1005a7b6:	d007      	beq.n	1005a7c8 <SMP_check_encryption_key_size+0x1c>
1005a7b8:	7a81      	ldrb	r1, [r0, #10]
1005a7ba:	2900      	cmp	r1, #0
1005a7bc:	d004      	beq.n	1005a7c8 <SMP_check_encryption_key_size+0x1c>
1005a7be:	7f00      	ldrb	r0, [r0, #28]
1005a7c0:	42a0      	cmp	r0, r4
1005a7c2:	d301      	bcc.n	1005a7c8 <SMP_check_encryption_key_size+0x1c>
1005a7c4:	2000      	movs	r0, #0
1005a7c6:	bd10      	pop	{r4, pc}
1005a7c8:	205f      	movs	r0, #95	; 0x5f
1005a7ca:	bd10      	pop	{r4, pc}

1005a7cc <SMP_check_is_device_bonded>:
1005a7cc:	b510      	push	{r4, lr}
1005a7ce:	b094      	sub	sp, #80	; 0x50
1005a7d0:	4604      	mov	r4, r0
1005a7d2:	f000 f88f 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a7d6:	2800      	cmp	r0, #0
1005a7d8:	d01a      	beq.n	1005a810 <SMP_check_is_device_bonded+0x44>
1005a7da:	7841      	ldrb	r1, [r0, #1]
1005a7dc:	466a      	mov	r2, sp
1005a7de:	07c9      	lsls	r1, r1, #31
1005a7e0:	0fc9      	lsrs	r1, r1, #31
1005a7e2:	1c80      	adds	r0, r0, #2
1005a7e4:	f7fd fb68 	bl	10057eb8 <SDB_Find_Record>
1005a7e8:	2800      	cmp	r0, #0
1005a7ea:	d00d      	beq.n	1005a808 <SMP_check_is_device_bonded+0x3c>
1005a7ec:	4620      	mov	r0, r4
1005a7ee:	f000 f881 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a7f2:	2800      	cmp	r0, #0
1005a7f4:	d00c      	beq.n	1005a810 <SMP_check_is_device_bonded+0x44>
1005a7f6:	7a81      	ldrb	r1, [r0, #10]
1005a7f8:	29f1      	cmp	r1, #241	; 0xf1
1005a7fa:	d107      	bne.n	1005a80c <SMP_check_is_device_bonded+0x40>
1005a7fc:	7e80      	ldrb	r0, [r0, #26]
1005a7fe:	07c1      	lsls	r1, r0, #31
1005a800:	d004      	beq.n	1005a80c <SMP_check_is_device_bonded+0x40>
1005a802:	0780      	lsls	r0, r0, #30
1005a804:	d502      	bpl.n	1005a80c <SMP_check_is_device_bonded+0x40>
1005a806:	2000      	movs	r0, #0
1005a808:	b014      	add	sp, #80	; 0x50
1005a80a:	bd10      	pop	{r4, pc}
1005a80c:	205e      	movs	r0, #94	; 0x5e
1005a80e:	e7fb      	b.n	1005a808 <SMP_check_is_device_bonded+0x3c>
1005a810:	2040      	movs	r0, #64	; 0x40
1005a812:	e7f9      	b.n	1005a808 <SMP_check_is_device_bonded+0x3c>

1005a814 <SMP_connection_complete_handler>:
1005a814:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005a816:	469c      	mov	ip, r3
1005a818:	4b22      	ldr	r3, [pc, #136]	; (1005a8a4 <SMP_connection_complete_handler+0x90>)
1005a81a:	2400      	movs	r4, #0
1005a81c:	681b      	ldr	r3, [r3, #0]
1005a81e:	4920      	ldr	r1, [pc, #128]	; (1005a8a0 <SMP_connection_complete_handler+0x8c>)
1005a820:	4606      	mov	r6, r0
1005a822:	33a0      	adds	r3, #160	; 0xa0
1005a824:	b081      	sub	sp, #4
1005a826:	4627      	mov	r7, r4
1005a828:	4620      	mov	r0, r4
1005a82a:	6809      	ldr	r1, [r1, #0]
1005a82c:	7b1d      	ldrb	r5, [r3, #12]
1005a82e:	e008      	b.n	1005a842 <SMP_connection_complete_handler+0x2e>
1005a830:	237c      	movs	r3, #124	; 0x7c
1005a832:	6fcc      	ldr	r4, [r1, #124]	; 0x7c
1005a834:	4343      	muls	r3, r0
1005a836:	18e4      	adds	r4, r4, r3
1005a838:	8923      	ldrh	r3, [r4, #8]
1005a83a:	2b00      	cmp	r3, #0
1005a83c:	d00d      	beq.n	1005a85a <SMP_connection_complete_handler+0x46>
1005a83e:	1c40      	adds	r0, r0, #1
1005a840:	b2c0      	uxtb	r0, r0
1005a842:	4285      	cmp	r5, r0
1005a844:	d8f4      	bhi.n	1005a830 <SMP_connection_complete_handler+0x1c>
1005a846:	4285      	cmp	r5, r0
1005a848:	d027      	beq.n	1005a89a <SMP_connection_complete_handler+0x86>
1005a84a:	2f00      	cmp	r7, #0
1005a84c:	d025      	beq.n	1005a89a <SMP_connection_complete_handler+0x86>
1005a84e:	2003      	movs	r0, #3
1005a850:	7020      	strb	r0, [r4, #0]
1005a852:	2a00      	cmp	r2, #0
1005a854:	d003      	beq.n	1005a85e <SMP_connection_complete_handler+0x4a>
1005a856:	2001      	movs	r0, #1
1005a858:	e002      	b.n	1005a860 <SMP_connection_complete_handler+0x4c>
1005a85a:	2701      	movs	r7, #1
1005a85c:	e7f3      	b.n	1005a846 <SMP_connection_complete_handler+0x32>
1005a85e:	2000      	movs	r0, #0
1005a860:	7060      	strb	r0, [r4, #1]
1005a862:	2206      	movs	r2, #6
1005a864:	4661      	mov	r1, ip
1005a866:	1ca0      	adds	r0, r4, #2
1005a868:	f7e5 ff8b 	bl	10040782 <Osal_MemCpy>
1005a86c:	8126      	strh	r6, [r4, #8]
1005a86e:	2010      	movs	r0, #16
1005a870:	72a0      	strb	r0, [r4, #10]
1005a872:	4620      	mov	r0, r4
1005a874:	3060      	adds	r0, #96	; 0x60
1005a876:	9902      	ldr	r1, [sp, #8]
1005a878:	7501      	strb	r1, [r0, #20]
1005a87a:	990b      	ldr	r1, [sp, #44]	; 0x2c
1005a87c:	7541      	strb	r1, [r0, #21]
1005a87e:	2206      	movs	r2, #6
1005a880:	3016      	adds	r0, #22
1005a882:	990a      	ldr	r1, [sp, #40]	; 0x28
1005a884:	f7e5 ff7d 	bl	10040782 <Osal_MemCpy>
1005a888:	4620      	mov	r0, r4
1005a88a:	2204      	movs	r2, #4
1005a88c:	2100      	movs	r1, #0
1005a88e:	300c      	adds	r0, #12
1005a890:	f7e5 ff7b 	bl	1004078a <Osal_MemSet>
1005a894:	2000      	movs	r0, #0
1005a896:	43c0      	mvns	r0, r0
1005a898:	6160      	str	r0, [r4, #20]
1005a89a:	b005      	add	sp, #20
1005a89c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a89e:	0000      	.short	0x0000
1005a8a0:	20000d6c 	.word	0x20000d6c
1005a8a4:	20000d64 	.word	0x20000d64

1005a8a8 <SMP_forget_device_by_conn_handle>:
1005a8a8:	b510      	push	{r4, lr}
1005a8aa:	2441      	movs	r4, #65	; 0x41
1005a8ac:	f000 f822 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a8b0:	2800      	cmp	r0, #0
1005a8b2:	d005      	beq.n	1005a8c0 <SMP_forget_device_by_conn_handle+0x18>
1005a8b4:	3060      	adds	r0, #96	; 0x60
1005a8b6:	7d01      	ldrb	r1, [r0, #20]
1005a8b8:	2280      	movs	r2, #128	; 0x80
1005a8ba:	4311      	orrs	r1, r2
1005a8bc:	7501      	strb	r1, [r0, #20]
1005a8be:	2400      	movs	r4, #0
1005a8c0:	4620      	mov	r0, r4
1005a8c2:	bd10      	pop	{r4, pc}

1005a8c4 <SMP_get_link_status>:
1005a8c4:	b510      	push	{r4, lr}
1005a8c6:	2400      	movs	r4, #0
1005a8c8:	f000 f814 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a8cc:	2800      	cmp	r0, #0
1005a8ce:	d00e      	beq.n	1005a8ee <SMP_get_link_status+0x2a>
1005a8d0:	8900      	ldrh	r0, [r0, #8]
1005a8d2:	04c1      	lsls	r1, r0, #19
1005a8d4:	d507      	bpl.n	1005a8e6 <SMP_get_link_status+0x22>
1005a8d6:	2401      	movs	r4, #1
1005a8d8:	0481      	lsls	r1, r0, #18
1005a8da:	d501      	bpl.n	1005a8e0 <SMP_get_link_status+0x1c>
1005a8dc:	2403      	movs	r4, #3
1005a8de:	e002      	b.n	1005a8e6 <SMP_get_link_status+0x22>
1005a8e0:	0441      	lsls	r1, r0, #17
1005a8e2:	d500      	bpl.n	1005a8e6 <SMP_get_link_status+0x22>
1005a8e4:	2405      	movs	r4, #5
1005a8e6:	0400      	lsls	r0, r0, #16
1005a8e8:	d401      	bmi.n	1005a8ee <SMP_get_link_status+0x2a>
1005a8ea:	2008      	movs	r0, #8
1005a8ec:	4304      	orrs	r4, r0
1005a8ee:	4620      	mov	r0, r4
1005a8f0:	bd10      	pop	{r4, pc}
	...

1005a8f4 <SMP_get_remote_device_list_item>:
1005a8f4:	b570      	push	{r4, r5, r6, lr}
1005a8f6:	2800      	cmp	r0, #0
1005a8f8:	d01b      	beq.n	1005a932 <SMP_get_remote_device_list_item+0x3e>
1005a8fa:	0503      	lsls	r3, r0, #20
1005a8fc:	480f      	ldr	r0, [pc, #60]	; (1005a93c <SMP_get_remote_device_list_item+0x48>)
1005a8fe:	2100      	movs	r1, #0
1005a900:	6800      	ldr	r0, [r0, #0]
1005a902:	4a0d      	ldr	r2, [pc, #52]	; (1005a938 <SMP_get_remote_device_list_item+0x44>)
1005a904:	0d1b      	lsrs	r3, r3, #20
1005a906:	30a0      	adds	r0, #160	; 0xa0
1005a908:	6812      	ldr	r2, [r2, #0]
1005a90a:	7b04      	ldrb	r4, [r0, #12]
1005a90c:	e00f      	b.n	1005a92e <SMP_get_remote_device_list_item+0x3a>
1005a90e:	4608      	mov	r0, r1
1005a910:	267c      	movs	r6, #124	; 0x7c
1005a912:	4370      	muls	r0, r6
1005a914:	6fd5      	ldr	r5, [r2, #124]	; 0x7c
1005a916:	3008      	adds	r0, #8
1005a918:	5a28      	ldrh	r0, [r5, r0]
1005a91a:	0500      	lsls	r0, r0, #20
1005a91c:	0d00      	lsrs	r0, r0, #20
1005a91e:	4298      	cmp	r0, r3
1005a920:	d103      	bne.n	1005a92a <SMP_get_remote_device_list_item+0x36>
1005a922:	227c      	movs	r2, #124	; 0x7c
1005a924:	4351      	muls	r1, r2
1005a926:	1868      	adds	r0, r5, r1
1005a928:	bd70      	pop	{r4, r5, r6, pc}
1005a92a:	1c49      	adds	r1, r1, #1
1005a92c:	b2c9      	uxtb	r1, r1
1005a92e:	428c      	cmp	r4, r1
1005a930:	d8ed      	bhi.n	1005a90e <SMP_get_remote_device_list_item+0x1a>
1005a932:	2000      	movs	r0, #0
1005a934:	bd70      	pop	{r4, r5, r6, pc}
1005a936:	0000      	.short	0x0000
1005a938:	20000d6c 	.word	0x20000d6c
1005a93c:	20000d64 	.word	0x20000d64

1005a940 <SMP_get_security_level>:
1005a940:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a942:	4614      	mov	r4, r2
1005a944:	460e      	mov	r6, r1
1005a946:	4607      	mov	r7, r0
1005a948:	f7ff ffd4 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a94c:	0005      	movs	r5, r0
1005a94e:	d016      	beq.n	1005a97e <SMP_get_security_level+0x3e>
1005a950:	4638      	mov	r0, r7
1005a952:	f7ff ffb7 	bl	1005a8c4 <SMP_get_link_status>
1005a956:	2201      	movs	r2, #1
1005a958:	7f29      	ldrb	r1, [r5, #28]
1005a95a:	7032      	strb	r2, [r6, #0]
1005a95c:	07c3      	lsls	r3, r0, #31
1005a95e:	d009      	beq.n	1005a974 <SMP_get_security_level+0x34>
1005a960:	0743      	lsls	r3, r0, #29
1005a962:	2203      	movs	r2, #3
1005a964:	2b00      	cmp	r3, #0
1005a966:	da03      	bge.n	1005a970 <SMP_get_security_level+0x30>
1005a968:	2910      	cmp	r1, #16
1005a96a:	d103      	bne.n	1005a974 <SMP_get_security_level+0x34>
1005a96c:	2004      	movs	r0, #4
1005a96e:	e004      	b.n	1005a97a <SMP_get_security_level+0x3a>
1005a970:	0780      	lsls	r0, r0, #30
1005a972:	d501      	bpl.n	1005a978 <SMP_get_security_level+0x38>
1005a974:	7022      	strb	r2, [r4, #0]
1005a976:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a978:	2002      	movs	r0, #2
1005a97a:	7020      	strb	r0, [r4, #0]
1005a97c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a97e:	2000      	movs	r0, #0
1005a980:	7030      	strb	r0, [r6, #0]
1005a982:	e7fa      	b.n	1005a97a <SMP_get_security_level+0x3a>

1005a984 <SMP_hci_disconnection_complete_evt_hndl>:
1005a984:	b51c      	push	{r2, r3, r4, lr}
1005a986:	f7ff ffb5 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a98a:	0004      	movs	r4, r0
1005a98c:	d016      	beq.n	1005a9bc <SMP_hci_disconnection_complete_evt_hndl+0x38>
1005a98e:	8920      	ldrh	r0, [r4, #8]
1005a990:	f000 fb32 	bl	1005aff8 <smp_find_remote_device_index>
1005a994:	4602      	mov	r2, r0
1005a996:	4b0a      	ldr	r3, [pc, #40]	; (1005a9c0 <SMP_hci_disconnection_complete_evt_hndl+0x3c>)
1005a998:	2100      	movs	r1, #0
1005a99a:	2001      	movs	r0, #1
1005a99c:	f000 f93a 	bl	1005ac14 <SMP_reset_timer>
1005a9a0:	8920      	ldrh	r0, [r4, #8]
1005a9a2:	0500      	lsls	r0, r0, #20
1005a9a4:	0d00      	lsrs	r0, r0, #20
1005a9a6:	f000 fb49 	bl	1005b03c <smp_flush_rx_queues>
1005a9aa:	2002      	movs	r0, #2
1005a9ac:	4669      	mov	r1, sp
1005a9ae:	9400      	str	r4, [sp, #0]
1005a9b0:	7108      	strb	r0, [r1, #4]
1005a9b2:	4668      	mov	r0, sp
1005a9b4:	f000 fdbc 	bl	1005b530 <smp_update_statistics_on_pairing_complete>
1005a9b8:	20fe      	movs	r0, #254	; 0xfe
1005a9ba:	72a0      	strb	r0, [r4, #10]
1005a9bc:	bd1c      	pop	{r2, r3, r4, pc}
1005a9be:	0000      	.short	0x0000
1005a9c0:	00007530 	.word	0x00007530

1005a9c4 <SMP_hci_encryption_change_evt_hndl>:
1005a9c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005a9c6:	4607      	mov	r7, r0
1005a9c8:	460e      	mov	r6, r1
1005a9ca:	2500      	movs	r5, #0
1005a9cc:	4610      	mov	r0, r2
1005a9ce:	f7ff ff91 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005a9d2:	0004      	movs	r4, r0
1005a9d4:	d07d      	beq.n	1005aad2 <SMP_hci_encryption_change_evt_hndl+0x10e>
1005a9d6:	2e00      	cmp	r6, #0
1005a9d8:	d10b      	bne.n	1005a9f2 <SMP_hci_encryption_change_evt_hndl+0x2e>
1005a9da:	8920      	ldrh	r0, [r4, #8]
1005a9dc:	2101      	movs	r1, #1
1005a9de:	0309      	lsls	r1, r1, #12
1005a9e0:	4308      	orrs	r0, r1
1005a9e2:	8120      	strh	r0, [r4, #8]
1005a9e4:	7fe1      	ldrb	r1, [r4, #31]
1005a9e6:	2902      	cmp	r1, #2
1005a9e8:	d00d      	beq.n	1005aa06 <SMP_hci_encryption_change_evt_hndl+0x42>
1005a9ea:	2903      	cmp	r1, #3
1005a9ec:	d00b      	beq.n	1005aa06 <SMP_hci_encryption_change_evt_hndl+0x42>
1005a9ee:	2904      	cmp	r1, #4
1005a9f0:	d009      	beq.n	1005aa06 <SMP_hci_encryption_change_evt_hndl+0x42>
1005a9f2:	8920      	ldrh	r0, [r4, #8]
1005a9f4:	0501      	lsls	r1, r0, #20
1005a9f6:	0d09      	lsrs	r1, r1, #20
1005a9f8:	2e00      	cmp	r6, #0
1005a9fa:	d00a      	beq.n	1005aa12 <SMP_hci_encryption_change_evt_hndl+0x4e>
1005a9fc:	2074      	movs	r0, #116	; 0x74
1005a9fe:	5d00      	ldrb	r0, [r0, r4]
1005aa00:	07c0      	lsls	r0, r0, #31
1005aa02:	d01d      	beq.n	1005aa40 <SMP_hci_encryption_change_evt_hndl+0x7c>
1005aa04:	e037      	b.n	1005aa76 <SMP_hci_encryption_change_evt_hndl+0xb2>
1005aa06:	2101      	movs	r1, #1
1005aa08:	0349      	lsls	r1, r1, #13
1005aa0a:	4308      	orrs	r0, r1
1005aa0c:	0501      	lsls	r1, r0, #20
1005aa0e:	8120      	strh	r0, [r4, #8]
1005aa10:	0d09      	lsrs	r1, r1, #20
1005aa12:	7aa0      	ldrb	r0, [r4, #10]
1005aa14:	28bc      	cmp	r0, #188	; 0xbc
1005aa16:	d006      	beq.n	1005aa26 <SMP_hci_encryption_change_evt_hndl+0x62>
1005aa18:	28ad      	cmp	r0, #173	; 0xad
1005aa1a:	d006      	beq.n	1005aa2a <SMP_hci_encryption_change_evt_hndl+0x66>
1005aa1c:	28ae      	cmp	r0, #174	; 0xae
1005aa1e:	d006      	beq.n	1005aa2e <SMP_hci_encryption_change_evt_hndl+0x6a>
1005aa20:	28f1      	cmp	r0, #241	; 0xf1
1005aa22:	d007      	beq.n	1005aa34 <SMP_hci_encryption_change_evt_hndl+0x70>
1005aa24:	e037      	b.n	1005aa96 <SMP_hci_encryption_change_evt_hndl+0xd2>
1005aa26:	20bf      	movs	r0, #191	; 0xbf
1005aa28:	e002      	b.n	1005aa30 <SMP_hci_encryption_change_evt_hndl+0x6c>
1005aa2a:	20af      	movs	r0, #175	; 0xaf
1005aa2c:	e000      	b.n	1005aa30 <SMP_hci_encryption_change_evt_hndl+0x6c>
1005aa2e:	20f0      	movs	r0, #240	; 0xf0
1005aa30:	72a0      	strb	r0, [r4, #10]
1005aa32:	e030      	b.n	1005aa96 <SMP_hci_encryption_change_evt_hndl+0xd2>
1005aa34:	2f03      	cmp	r7, #3
1005aa36:	d12e      	bne.n	1005aa96 <SMP_hci_encryption_change_evt_hndl+0xd2>
1005aa38:	2300      	movs	r3, #0
1005aa3a:	461a      	mov	r2, r3
1005aa3c:	2042      	movs	r0, #66	; 0x42
1005aa3e:	e028      	b.n	1005aa92 <SMP_hci_encryption_change_evt_hndl+0xce>
1005aa40:	7aa0      	ldrb	r0, [r4, #10]
1005aa42:	28f1      	cmp	r0, #241	; 0xf1
1005aa44:	d117      	bne.n	1005aa76 <SMP_hci_encryption_change_evt_hndl+0xb2>
1005aa46:	4825      	ldr	r0, [pc, #148]	; (1005aadc <SMP_hci_encryption_change_evt_hndl+0x118>)
1005aa48:	2137      	movs	r1, #55	; 0x37
1005aa4a:	6800      	ldr	r0, [r0, #0]
1005aa4c:	0149      	lsls	r1, r1, #5
1005aa4e:	1841      	adds	r1, r0, r1
1005aa50:	7a89      	ldrb	r1, [r1, #10]
1005aa52:	2542      	movs	r5, #66	; 0x42
1005aa54:	0689      	lsls	r1, r1, #26
1005aa56:	d50e      	bpl.n	1005aa76 <SMP_hci_encryption_change_evt_hndl+0xb2>
1005aa58:	2101      	movs	r1, #1
1005aa5a:	02c9      	lsls	r1, r1, #11
1005aa5c:	3008      	adds	r0, #8
1005aa5e:	1840      	adds	r0, r0, r1
1005aa60:	2217      	movs	r2, #23
1005aa62:	6940      	ldr	r0, [r0, #20]
1005aa64:	2300      	movs	r3, #0
1005aa66:	4629      	mov	r1, r5
1005aa68:	f001 fa40 	bl	1005beec <aci_event_fifo_push_header>
1005aa6c:	0001      	movs	r1, r0
1005aa6e:	d002      	beq.n	1005aa76 <SMP_hci_encryption_change_evt_hndl+0xb2>
1005aa70:	4628      	mov	r0, r5
1005aa72:	f001 fa27 	bl	1005bec4 <aci_event_fifo_push>
1005aa76:	2000      	movs	r0, #0
1005aa78:	2501      	movs	r5, #1
1005aa7a:	72a0      	strb	r0, [r4, #10]
1005aa7c:	2f03      	cmp	r7, #3
1005aa7e:	d10a      	bne.n	1005aa96 <SMP_hci_encryption_change_evt_hndl+0xd2>
1005aa80:	2205      	movs	r2, #5
1005aa82:	2e06      	cmp	r6, #6
1005aa84:	d100      	bne.n	1005aa88 <SMP_hci_encryption_change_evt_hndl+0xc4>
1005aa86:	2204      	movs	r2, #4
1005aa88:	8920      	ldrh	r0, [r4, #8]
1005aa8a:	2300      	movs	r3, #0
1005aa8c:	0501      	lsls	r1, r0, #20
1005aa8e:	0d09      	lsrs	r1, r1, #20
1005aa90:	2002      	movs	r0, #2
1005aa92:	f000 f9c5 	bl	1005ae20 <aci_gap_pairing_complete_event_push>
1005aa96:	2074      	movs	r0, #116	; 0x74
1005aa98:	5d00      	ldrb	r0, [r0, r4]
1005aa9a:	07c0      	lsls	r0, r0, #31
1005aa9c:	d007      	beq.n	1005aaae <SMP_hci_encryption_change_evt_hndl+0xea>
1005aa9e:	7b20      	ldrb	r0, [r4, #12]
1005aaa0:	0781      	lsls	r1, r0, #30
1005aaa2:	d000      	beq.n	1005aaa6 <SMP_hci_encryption_change_evt_hndl+0xe2>
1005aaa4:	2501      	movs	r5, #1
1005aaa6:	0900      	lsrs	r0, r0, #4
1005aaa8:	0100      	lsls	r0, r0, #4
1005aaaa:	7320      	strb	r0, [r4, #12]
1005aaac:	e007      	b.n	1005aabe <SMP_hci_encryption_change_evt_hndl+0xfa>
1005aaae:	7ba0      	ldrb	r0, [r4, #14]
1005aab0:	06c1      	lsls	r1, r0, #27
1005aab2:	d504      	bpl.n	1005aabe <SMP_hci_encryption_change_evt_hndl+0xfa>
1005aab4:	21ef      	movs	r1, #239	; 0xef
1005aab6:	4008      	ands	r0, r1
1005aab8:	73a0      	strb	r0, [r4, #14]
1005aaba:	0600      	lsls	r0, r0, #24
1005aabc:	d401      	bmi.n	1005aac2 <SMP_hci_encryption_change_evt_hndl+0xfe>
1005aabe:	2d00      	cmp	r5, #0
1005aac0:	d00a      	beq.n	1005aad8 <SMP_hci_encryption_change_evt_hndl+0x114>
1005aac2:	8920      	ldrh	r0, [r4, #8]
1005aac4:	f000 fa98 	bl	1005aff8 <smp_find_remote_device_index>
1005aac8:	4602      	mov	r2, r0
1005aaca:	2100      	movs	r1, #0
1005aacc:	4b04      	ldr	r3, [pc, #16]	; (1005aae0 <SMP_hci_encryption_change_evt_hndl+0x11c>)
1005aace:	2001      	movs	r0, #1
1005aad0:	e000      	b.n	1005aad4 <SMP_hci_encryption_change_evt_hndl+0x110>
1005aad2:	e001      	b.n	1005aad8 <SMP_hci_encryption_change_evt_hndl+0x114>
1005aad4:	f000 f89e 	bl	1005ac14 <SMP_reset_timer>
1005aad8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005aada:	0000      	.short	0x0000
1005aadc:	20000d64 	.word	0x20000d64
1005aae0:	00007530 	.word	0x00007530

1005aae4 <SMP_hci_le_connection_complete_evt_hndl>:
1005aae4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005aae6:	b085      	sub	sp, #20
1005aae8:	460e      	mov	r6, r1
1005aaea:	4607      	mov	r7, r0
1005aaec:	461c      	mov	r4, r3
1005aaee:	4615      	mov	r5, r2
1005aaf0:	a802      	add	r0, sp, #8
1005aaf2:	a904      	add	r1, sp, #16
1005aaf4:	f7fb fc9a 	bl	1005642c <LL_Get_Address>
1005aaf8:	4669      	mov	r1, sp
1005aafa:	7c09      	ldrb	r1, [r1, #16]
1005aafc:	a802      	add	r0, sp, #8
1005aafe:	9101      	str	r1, [sp, #4]
1005ab00:	9000      	str	r0, [sp, #0]
1005ab02:	4623      	mov	r3, r4
1005ab04:	462a      	mov	r2, r5
1005ab06:	4631      	mov	r1, r6
1005ab08:	4638      	mov	r0, r7
1005ab0a:	f7ff fe83 	bl	1005a814 <SMP_connection_complete_handler>
1005ab0e:	b005      	add	sp, #20
1005ab10:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005ab12 <SMP_hci_le_enhanced_connection_complete_evt_hndl>:
1005ab12:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005ab14:	b085      	sub	sp, #20
1005ab16:	4615      	mov	r5, r2
1005ab18:	460e      	mov	r6, r1
1005ab1a:	461c      	mov	r4, r3
1005ab1c:	2206      	movs	r2, #6
1005ab1e:	a802      	add	r0, sp, #8
1005ab20:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
1005ab22:	990e      	ldr	r1, [sp, #56]	; 0x38
1005ab24:	f7e5 fe2d 	bl	10040782 <Osal_MemCpy>
1005ab28:	a802      	add	r0, sp, #8
1005ab2a:	f7fb fa46 	bl	10055fba <Is_Address_Initialized>
1005ab2e:	2800      	cmp	r0, #0
1005ab30:	d006      	beq.n	1005ab40 <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x2e>
1005ab32:	2001      	movs	r0, #1
1005ab34:	4669      	mov	r1, sp
1005ab36:	7408      	strb	r0, [r1, #16]
1005ab38:	07a8      	lsls	r0, r5, #30
1005ab3a:	d506      	bpl.n	1005ab4a <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x38>
1005ab3c:	463b      	mov	r3, r7
1005ab3e:	e005      	b.n	1005ab4c <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x3a>
1005ab40:	a802      	add	r0, sp, #8
1005ab42:	a904      	add	r1, sp, #16
1005ab44:	f7fb fc72 	bl	1005642c <LL_Get_Address>
1005ab48:	e7f6      	b.n	1005ab38 <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x26>
1005ab4a:	4623      	mov	r3, r4
1005ab4c:	4669      	mov	r1, sp
1005ab4e:	7c09      	ldrb	r1, [r1, #16]
1005ab50:	a802      	add	r0, sp, #8
1005ab52:	9101      	str	r1, [sp, #4]
1005ab54:	9000      	str	r0, [sp, #0]
1005ab56:	462a      	mov	r2, r5
1005ab58:	4631      	mov	r1, r6
1005ab5a:	9805      	ldr	r0, [sp, #20]
1005ab5c:	f7ff fe5a 	bl	1005a814 <SMP_connection_complete_handler>
1005ab60:	b009      	add	sp, #36	; 0x24
1005ab62:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005ab64 <SMP_hci_le_long_term_key_request_evt_hndl>:
1005ab64:	b570      	push	{r4, r5, r6, lr}
1005ab66:	4615      	mov	r5, r2
1005ab68:	460e      	mov	r6, r1
1005ab6a:	f7ff fec3 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005ab6e:	0004      	movs	r4, r0
1005ab70:	d013      	beq.n	1005ab9a <SMP_hci_le_long_term_key_request_evt_hndl+0x36>
1005ab72:	7b60      	ldrb	r0, [r4, #13]
1005ab74:	2101      	movs	r1, #1
1005ab76:	4308      	orrs	r0, r1
1005ab78:	7360      	strb	r0, [r4, #13]
1005ab7a:	7aa0      	ldrb	r0, [r4, #10]
1005ab7c:	28bc      	cmp	r0, #188	; 0xbc
1005ab7e:	d00c      	beq.n	1005ab9a <SMP_hci_le_long_term_key_request_evt_hndl+0x36>
1005ab80:	7ae0      	ldrb	r0, [r4, #11]
1005ab82:	0700      	lsls	r0, r0, #28
1005ab84:	d409      	bmi.n	1005ab9a <SMP_hci_le_long_term_key_request_evt_hndl+0x36>
1005ab86:	4620      	mov	r0, r4
1005ab88:	2208      	movs	r2, #8
1005ab8a:	4631      	mov	r1, r6
1005ab8c:	302a      	adds	r0, #42	; 0x2a
1005ab8e:	f7e5 fdf8 	bl	10040782 <Osal_MemCpy>
1005ab92:	3432      	adds	r4, #50	; 0x32
1005ab94:	7025      	strb	r5, [r4, #0]
1005ab96:	0a28      	lsrs	r0, r5, #8
1005ab98:	7060      	strb	r0, [r4, #1]
1005ab9a:	bd70      	pop	{r4, r5, r6, pc}

1005ab9c <SMP_repeated_attacks_timer_cb>:
1005ab9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005ab9e:	4e1b      	ldr	r6, [pc, #108]	; (1005ac0c <SMP_repeated_attacks_timer_cb+0x70>)
1005aba0:	00c0      	lsls	r0, r0, #3
1005aba2:	6831      	ldr	r1, [r6, #0]
1005aba4:	4605      	mov	r5, r0
1005aba6:	3180      	adds	r1, #128	; 0x80
1005aba8:	680a      	ldr	r2, [r1, #0]
1005abaa:	3d08      	subs	r5, #8
1005abac:	5d51      	ldrb	r1, [r2, r5]
1005abae:	2340      	movs	r3, #64	; 0x40
1005abb0:	0649      	lsls	r1, r1, #25
1005abb2:	0e49      	lsrs	r1, r1, #25
1005abb4:	5551      	strb	r1, [r2, r5]
1005abb6:	6832      	ldr	r2, [r6, #0]
1005abb8:	4319      	orrs	r1, r3
1005abba:	3280      	adds	r2, #128	; 0x80
1005abbc:	6812      	ldr	r2, [r2, #0]
1005abbe:	2400      	movs	r4, #0
1005abc0:	5551      	strb	r1, [r2, r5]
1005abc2:	1f85      	subs	r5, r0, #6
1005abc4:	4f12      	ldr	r7, [pc, #72]	; (1005ac10 <SMP_repeated_attacks_timer_cb+0x74>)
1005abc6:	e01a      	b.n	1005abfe <SMP_repeated_attacks_timer_cb+0x62>
1005abc8:	6830      	ldr	r0, [r6, #0]
1005abca:	2180      	movs	r1, #128	; 0x80
1005abcc:	5809      	ldr	r1, [r1, r0]
1005abce:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1005abd0:	4620      	mov	r0, r4
1005abd2:	237c      	movs	r3, #124	; 0x7c
1005abd4:	4358      	muls	r0, r3
1005abd6:	9000      	str	r0, [sp, #0]
1005abd8:	1c80      	adds	r0, r0, #2
1005abda:	1810      	adds	r0, r2, r0
1005abdc:	1949      	adds	r1, r1, r5
1005abde:	2206      	movs	r2, #6
1005abe0:	f7e5 fdd7 	bl	10040792 <Osal_MemCmp>
1005abe4:	2800      	cmp	r0, #0
1005abe6:	d108      	bne.n	1005abfa <SMP_repeated_attacks_timer_cb+0x5e>
1005abe8:	6830      	ldr	r0, [r6, #0]
1005abea:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
1005abec:	9800      	ldr	r0, [sp, #0]
1005abee:	1808      	adds	r0, r1, r0
1005abf0:	7a81      	ldrb	r1, [r0, #10]
1005abf2:	29fb      	cmp	r1, #251	; 0xfb
1005abf4:	d101      	bne.n	1005abfa <SMP_repeated_attacks_timer_cb+0x5e>
1005abf6:	2110      	movs	r1, #16
1005abf8:	7281      	strb	r1, [r0, #10]
1005abfa:	1c64      	adds	r4, r4, #1
1005abfc:	b2e4      	uxtb	r4, r4
1005abfe:	6838      	ldr	r0, [r7, #0]
1005ac00:	30a0      	adds	r0, #160	; 0xa0
1005ac02:	7b00      	ldrb	r0, [r0, #12]
1005ac04:	42a0      	cmp	r0, r4
1005ac06:	d8df      	bhi.n	1005abc8 <SMP_repeated_attacks_timer_cb+0x2c>
1005ac08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005ac0a:	0000      	.short	0x0000
1005ac0c:	20000d6c 	.word	0x20000d6c
1005ac10:	20000d64 	.word	0x20000d64

1005ac14 <SMP_reset_timer>:
1005ac14:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
1005ac16:	2400      	movs	r4, #0
1005ac18:	2900      	cmp	r1, #0
1005ac1a:	d002      	beq.n	1005ac22 <SMP_reset_timer+0xe>
1005ac1c:	2901      	cmp	r1, #1
1005ac1e:	d002      	beq.n	1005ac26 <SMP_reset_timer+0x12>
1005ac20:	e002      	b.n	1005ac28 <SMP_reset_timer+0x14>
1005ac22:	2508      	movs	r5, #8
1005ac24:	e000      	b.n	1005ac28 <SMP_reset_timer+0x14>
1005ac26:	2500      	movs	r5, #0
1005ac28:	18a9      	adds	r1, r5, r2
1005ac2a:	466a      	mov	r2, sp
1005ac2c:	7311      	strb	r1, [r2, #12]
1005ac2e:	9302      	str	r3, [sp, #8]
1005ac30:	2801      	cmp	r0, #1
1005ac32:	d009      	beq.n	1005ac48 <SMP_reset_timer+0x34>
1005ac34:	2800      	cmp	r0, #0
1005ac36:	d10a      	bne.n	1005ac4e <SMP_reset_timer+0x3a>
1005ac38:	4610      	mov	r0, r2
1005ac3a:	f7f2 feb1 	bl	1004d9a0 <Timer_StopOneShot>
1005ac3e:	4668      	mov	r0, sp
1005ac40:	f7f2 fe62 	bl	1004d908 <Timer_StartOneShot>
1005ac44:	4604      	mov	r4, r0
1005ac46:	e002      	b.n	1005ac4e <SMP_reset_timer+0x3a>
1005ac48:	4610      	mov	r0, r2
1005ac4a:	f7f2 fea9 	bl	1004d9a0 <Timer_StopOneShot>
1005ac4e:	4620      	mov	r0, r4
1005ac50:	b004      	add	sp, #16
1005ac52:	bd70      	pop	{r4, r5, r6, pc}

1005ac54 <SMP_set_authentication_req>:
1005ac54:	b570      	push	{r4, r5, r6, lr}
1005ac56:	4605      	mov	r5, r0
1005ac58:	f000 fa3a 	bl	1005b0d0 <smp_is_any_pairing_ongoing>
1005ac5c:	2800      	cmp	r0, #0
1005ac5e:	d001      	beq.n	1005ac64 <SMP_set_authentication_req+0x10>
1005ac60:	2446      	movs	r4, #70	; 0x46
1005ac62:	e007      	b.n	1005ac74 <SMP_set_authentication_req+0x20>
1005ac64:	4804      	ldr	r0, [pc, #16]	; (1005ac78 <SMP_set_authentication_req+0x24>)
1005ac66:	2400      	movs	r4, #0
1005ac68:	6800      	ldr	r0, [r0, #0]
1005ac6a:	220c      	movs	r2, #12
1005ac6c:	4629      	mov	r1, r5
1005ac6e:	300c      	adds	r0, #12
1005ac70:	f7e5 fd87 	bl	10040782 <Osal_MemCpy>
1005ac74:	4620      	mov	r0, r4
1005ac76:	bd70      	pop	{r4, r5, r6, pc}
1005ac78:	20000d6c 	.word	0x20000d6c

1005ac7c <SMP_set_authorization_request>:
1005ac7c:	b510      	push	{r4, lr}
1005ac7e:	460c      	mov	r4, r1
1005ac80:	f7ff fe38 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005ac84:	2800      	cmp	r0, #0
1005ac86:	d00f      	beq.n	1005aca8 <SMP_set_authorization_request+0x2c>
1005ac88:	8901      	ldrh	r1, [r0, #8]
1005ac8a:	2c00      	cmp	r4, #0
1005ac8c:	d00e      	beq.n	1005acac <SMP_set_authorization_request+0x30>
1005ac8e:	2201      	movs	r2, #1
1005ac90:	03d2      	lsls	r2, r2, #15
1005ac92:	4311      	orrs	r1, r2
1005ac94:	8101      	strh	r1, [r0, #8]
1005ac96:	0448      	lsls	r0, r1, #17
1005ac98:	0f80      	lsrs	r0, r0, #30
1005ac9a:	d00a      	beq.n	1005acb2 <SMP_set_authorization_request+0x36>
1005ac9c:	0509      	lsls	r1, r1, #20
1005ac9e:	0d09      	lsrs	r1, r1, #20
1005aca0:	2002      	movs	r0, #2
1005aca2:	f000 f893 	bl	1005adcc <aci_gap_authorization_req_event_push>
1005aca6:	e004      	b.n	1005acb2 <SMP_set_authorization_request+0x36>
1005aca8:	2040      	movs	r0, #64	; 0x40
1005acaa:	bd10      	pop	{r4, pc}
1005acac:	0449      	lsls	r1, r1, #17
1005acae:	0c49      	lsrs	r1, r1, #17
1005acb0:	8101      	strh	r1, [r0, #8]
1005acb2:	2000      	movs	r0, #0
1005acb4:	bd10      	pop	{r4, pc}
	...

1005acb8 <SMP_set_io_capabilities>:
1005acb8:	b530      	push	{r4, r5, lr}
1005acba:	4a0c      	ldr	r2, [pc, #48]	; (1005acec <SMP_set_io_capabilities+0x34>)
1005acbc:	2100      	movs	r1, #0
1005acbe:	6813      	ldr	r3, [r2, #0]
1005acc0:	4a0b      	ldr	r2, [pc, #44]	; (1005acf0 <SMP_set_io_capabilities+0x38>)
1005acc2:	6812      	ldr	r2, [r2, #0]
1005acc4:	32a0      	adds	r2, #160	; 0xa0
1005acc6:	7b14      	ldrb	r4, [r2, #12]
1005acc8:	e00a      	b.n	1005ace0 <SMP_set_io_capabilities+0x28>
1005acca:	227c      	movs	r2, #124	; 0x7c
1005accc:	434a      	muls	r2, r1
1005acce:	6fdd      	ldr	r5, [r3, #124]	; 0x7c
1005acd0:	3208      	adds	r2, #8
1005acd2:	5aaa      	ldrh	r2, [r5, r2]
1005acd4:	2a00      	cmp	r2, #0
1005acd6:	d001      	beq.n	1005acdc <SMP_set_io_capabilities+0x24>
1005acd8:	2046      	movs	r0, #70	; 0x46
1005acda:	bd30      	pop	{r4, r5, pc}
1005acdc:	1c49      	adds	r1, r1, #1
1005acde:	b2c9      	uxtb	r1, r1
1005ace0:	428c      	cmp	r4, r1
1005ace2:	d8f2      	bhi.n	1005acca <SMP_set_io_capabilities+0x12>
1005ace4:	7618      	strb	r0, [r3, #24]
1005ace6:	2000      	movs	r0, #0
1005ace8:	bd30      	pop	{r4, r5, pc}
1005acea:	0000      	.short	0x0000
1005acec:	20000d6c 	.word	0x20000d6c
1005acf0:	20000d64 	.word	0x20000d64

1005acf4 <SMP_sign_packet>:
1005acf4:	b570      	push	{r4, r5, r6, lr}
1005acf6:	b088      	sub	sp, #32
1005acf8:	460e      	mov	r6, r1
1005acfa:	f7ff fdfb 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005acfe:	0005      	movs	r5, r0
1005ad00:	d024      	beq.n	1005ad4c <SMP_sign_packet+0x58>
1005ad02:	4669      	mov	r1, sp
1005ad04:	f7ff f956 	bl	10059fb4 <SMA_Generate_CSRK>
1005ad08:	88f4      	ldrh	r4, [r6, #6]
1005ad0a:	462b      	mov	r3, r5
1005ad0c:	1d24      	adds	r4, r4, #4
1005ad0e:	b2a1      	uxth	r1, r4
1005ad10:	3310      	adds	r3, #16
1005ad12:	2204      	movs	r2, #4
1005ad14:	4630      	mov	r0, r6
1005ad16:	f7f9 ff39 	bl	10054b8c <PM_Write_Pckt_Data>
1005ad1a:	b2e2      	uxtb	r2, r4
1005ad1c:	ab04      	add	r3, sp, #16
1005ad1e:	4631      	mov	r1, r6
1005ad20:	4668      	mov	r0, sp
1005ad22:	f7ff fafb 	bl	1005a31c <sma_CMAC_generate_tag>
1005ad26:	1d20      	adds	r0, r4, #4
1005ad28:	b281      	uxth	r1, r0
1005ad2a:	ab06      	add	r3, sp, #24
1005ad2c:	2208      	movs	r2, #8
1005ad2e:	4630      	mov	r0, r6
1005ad30:	f7f9 ff2c 	bl	10054b8c <PM_Write_Pckt_Data>
1005ad34:	3408      	adds	r4, #8
1005ad36:	80f4      	strh	r4, [r6, #6]
1005ad38:	6928      	ldr	r0, [r5, #16]
1005ad3a:	1c41      	adds	r1, r0, #1
1005ad3c:	d004      	beq.n	1005ad48 <SMP_sign_packet+0x54>
1005ad3e:	1c40      	adds	r0, r0, #1
1005ad40:	6128      	str	r0, [r5, #16]
1005ad42:	2000      	movs	r0, #0
1005ad44:	b008      	add	sp, #32
1005ad46:	bd70      	pop	{r4, r5, r6, pc}
1005ad48:	2000      	movs	r0, #0
1005ad4a:	e7f9      	b.n	1005ad40 <SMP_sign_packet+0x4c>
1005ad4c:	2040      	movs	r0, #64	; 0x40
1005ad4e:	e7f9      	b.n	1005ad44 <SMP_sign_packet+0x50>

1005ad50 <SMP_validate_signed_packet>:
1005ad50:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ad52:	b08b      	sub	sp, #44	; 0x2c
1005ad54:	460f      	mov	r7, r1
1005ad56:	88ce      	ldrh	r6, [r1, #6]
1005ad58:	f7ff fdcc 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005ad5c:	0005      	movs	r5, r0
1005ad5e:	d032      	beq.n	1005adc6 <SMP_validate_signed_packet+0x76>
1005ad60:	a907      	add	r1, sp, #28
1005ad62:	f000 f987 	bl	1005b074 <smp_get_CSRK>
1005ad66:	2800      	cmp	r0, #0
1005ad68:	d002      	beq.n	1005ad70 <SMP_validate_signed_packet+0x20>
1005ad6a:	205a      	movs	r0, #90	; 0x5a
1005ad6c:	b00b      	add	sp, #44	; 0x2c
1005ad6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005ad70:	3e08      	subs	r6, #8
1005ad72:	b2b1      	uxth	r1, r6
1005ad74:	466b      	mov	r3, sp
1005ad76:	220c      	movs	r2, #12
1005ad78:	4638      	mov	r0, r7
1005ad7a:	f7f9 fe17 	bl	100549ac <PM_Copy_Pckt_Data>
1005ad7e:	4668      	mov	r0, sp
1005ad80:	7801      	ldrb	r1, [r0, #0]
1005ad82:	7840      	ldrb	r0, [r0, #1]
1005ad84:	0202      	lsls	r2, r0, #8
1005ad86:	4668      	mov	r0, sp
1005ad88:	7880      	ldrb	r0, [r0, #2]
1005ad8a:	0403      	lsls	r3, r0, #16
1005ad8c:	4668      	mov	r0, sp
1005ad8e:	78c0      	ldrb	r0, [r0, #3]
1005ad90:	0604      	lsls	r4, r0, #24
1005ad92:	431c      	orrs	r4, r3
1005ad94:	4314      	orrs	r4, r2
1005ad96:	6968      	ldr	r0, [r5, #20]
1005ad98:	430c      	orrs	r4, r1
1005ad9a:	1c41      	adds	r1, r0, #1
1005ad9c:	d001      	beq.n	1005ada2 <SMP_validate_signed_packet+0x52>
1005ad9e:	42a0      	cmp	r0, r4
1005ada0:	d20c      	bcs.n	1005adbc <SMP_validate_signed_packet+0x6c>
1005ada2:	b2f2      	uxtb	r2, r6
1005ada4:	ab03      	add	r3, sp, #12
1005ada6:	4639      	mov	r1, r7
1005ada8:	a807      	add	r0, sp, #28
1005adaa:	f7ff fab7 	bl	1005a31c <sma_CMAC_generate_tag>
1005adae:	2208      	movs	r2, #8
1005adb0:	a905      	add	r1, sp, #20
1005adb2:	a801      	add	r0, sp, #4
1005adb4:	f7e5 fced 	bl	10040792 <Osal_MemCmp>
1005adb8:	2800      	cmp	r0, #0
1005adba:	d001      	beq.n	1005adc0 <SMP_validate_signed_packet+0x70>
1005adbc:	2005      	movs	r0, #5
1005adbe:	e7d5      	b.n	1005ad6c <SMP_validate_signed_packet+0x1c>
1005adc0:	2000      	movs	r0, #0
1005adc2:	616c      	str	r4, [r5, #20]
1005adc4:	e7d2      	b.n	1005ad6c <SMP_validate_signed_packet+0x1c>
1005adc6:	2040      	movs	r0, #64	; 0x40
1005adc8:	e7d0      	b.n	1005ad6c <SMP_validate_signed_packet+0x1c>
	...

1005adcc <aci_gap_authorization_req_event_push>:
1005adcc:	b570      	push	{r4, r5, r6, lr}
1005adce:	460d      	mov	r5, r1
1005add0:	2301      	movs	r3, #1
1005add2:	4604      	mov	r4, r0
1005add4:	06c1      	lsls	r1, r0, #27
1005add6:	4811      	ldr	r0, [pc, #68]	; (1005ae1c <aci_gap_authorization_req_event_push+0x50>)
1005add8:	6800      	ldr	r0, [r0, #0]
1005adda:	d503      	bpl.n	1005ade4 <aci_gap_authorization_req_event_push+0x18>
1005addc:	2218      	movs	r2, #24
1005adde:	21bf      	movs	r1, #191	; 0xbf
1005ade0:	400c      	ands	r4, r1
1005ade2:	e008      	b.n	1005adf6 <aci_gap_authorization_req_event_push+0x2a>
1005ade4:	2137      	movs	r1, #55	; 0x37
1005ade6:	0149      	lsls	r1, r1, #5
1005ade8:	1841      	adds	r1, r0, r1
1005adea:	7a89      	ldrb	r1, [r1, #10]
1005adec:	0709      	lsls	r1, r1, #28
1005adee:	d401      	bmi.n	1005adf4 <aci_gap_authorization_req_event_push+0x28>
1005adf0:	2000      	movs	r0, #0
1005adf2:	bd70      	pop	{r4, r5, r6, pc}
1005adf4:	2215      	movs	r2, #21
1005adf6:	0721      	lsls	r1, r4, #28
1005adf8:	0e89      	lsrs	r1, r1, #26
1005adfa:	1808      	adds	r0, r1, r0
1005adfc:	2101      	movs	r1, #1
1005adfe:	02c9      	lsls	r1, r1, #11
1005ae00:	1840      	adds	r0, r0, r1
1005ae02:	6940      	ldr	r0, [r0, #20]
1005ae04:	4621      	mov	r1, r4
1005ae06:	f001 f871 	bl	1005beec <aci_event_fifo_push_header>
1005ae0a:	0001      	movs	r1, r0
1005ae0c:	d004      	beq.n	1005ae18 <aci_gap_authorization_req_event_push+0x4c>
1005ae0e:	808d      	strh	r5, [r1, #4]
1005ae10:	4620      	mov	r0, r4
1005ae12:	f001 f857 	bl	1005bec4 <aci_event_fifo_push>
1005ae16:	e7eb      	b.n	1005adf0 <aci_gap_authorization_req_event_push+0x24>
1005ae18:	2007      	movs	r0, #7
1005ae1a:	bd70      	pop	{r4, r5, r6, pc}
1005ae1c:	20000d64 	.word	0x20000d64

1005ae20 <aci_gap_pairing_complete_event_push>:
1005ae20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005ae22:	461d      	mov	r5, r3
1005ae24:	460f      	mov	r7, r1
1005ae26:	2301      	movs	r3, #1
1005ae28:	4604      	mov	r4, r0
1005ae2a:	06c1      	lsls	r1, r0, #27
1005ae2c:	4812      	ldr	r0, [pc, #72]	; (1005ae78 <aci_gap_pairing_complete_event_push+0x58>)
1005ae2e:	4616      	mov	r6, r2
1005ae30:	6800      	ldr	r0, [r0, #0]
1005ae32:	d503      	bpl.n	1005ae3c <aci_gap_pairing_complete_event_push+0x1c>
1005ae34:	2216      	movs	r2, #22
1005ae36:	21bf      	movs	r1, #191	; 0xbf
1005ae38:	400c      	ands	r4, r1
1005ae3a:	e008      	b.n	1005ae4e <aci_gap_pairing_complete_event_push+0x2e>
1005ae3c:	2137      	movs	r1, #55	; 0x37
1005ae3e:	0149      	lsls	r1, r1, #5
1005ae40:	1841      	adds	r1, r0, r1
1005ae42:	7a89      	ldrb	r1, [r1, #10]
1005ae44:	0789      	lsls	r1, r1, #30
1005ae46:	d401      	bmi.n	1005ae4c <aci_gap_pairing_complete_event_push+0x2c>
1005ae48:	2000      	movs	r0, #0
1005ae4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005ae4c:	2213      	movs	r2, #19
1005ae4e:	0721      	lsls	r1, r4, #28
1005ae50:	0e89      	lsrs	r1, r1, #26
1005ae52:	1808      	adds	r0, r1, r0
1005ae54:	2101      	movs	r1, #1
1005ae56:	02c9      	lsls	r1, r1, #11
1005ae58:	1840      	adds	r0, r0, r1
1005ae5a:	6940      	ldr	r0, [r0, #20]
1005ae5c:	4621      	mov	r1, r4
1005ae5e:	f001 f845 	bl	1005beec <aci_event_fifo_push_header>
1005ae62:	0001      	movs	r1, r0
1005ae64:	d006      	beq.n	1005ae74 <aci_gap_pairing_complete_event_push+0x54>
1005ae66:	808f      	strh	r7, [r1, #4]
1005ae68:	718e      	strb	r6, [r1, #6]
1005ae6a:	71cd      	strb	r5, [r1, #7]
1005ae6c:	4620      	mov	r0, r4
1005ae6e:	f001 f829 	bl	1005bec4 <aci_event_fifo_push>
1005ae72:	e7e9      	b.n	1005ae48 <aci_gap_pairing_complete_event_push+0x28>
1005ae74:	2007      	movs	r0, #7
1005ae76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005ae78:	20000d64 	.word	0x20000d64

1005ae7c <smp_Keys_Distribution_Complete>:
1005ae7c:	b510      	push	{r4, lr}
1005ae7e:	2174      	movs	r1, #116	; 0x74
1005ae80:	5c09      	ldrb	r1, [r1, r0]
1005ae82:	07ca      	lsls	r2, r1, #31
1005ae84:	7f41      	ldrb	r1, [r0, #29]
1005ae86:	d007      	beq.n	1005ae98 <smp_Keys_Distribution_Complete+0x1c>
1005ae88:	2900      	cmp	r1, #0
1005ae8a:	d002      	beq.n	1005ae92 <smp_Keys_Distribution_Complete+0x16>
1005ae8c:	21d0      	movs	r1, #208	; 0xd0
1005ae8e:	7281      	strb	r1, [r0, #10]
1005ae90:	bd10      	pop	{r4, pc}
1005ae92:	f000 fa27 	bl	1005b2e4 <smp_pairing_completed>
1005ae96:	bd10      	pop	{r4, pc}
1005ae98:	06c9      	lsls	r1, r1, #27
1005ae9a:	d5fa      	bpl.n	1005ae92 <smp_Keys_Distribution_Complete+0x16>
1005ae9c:	7b81      	ldrb	r1, [r0, #14]
1005ae9e:	068a      	lsls	r2, r1, #26
1005aea0:	d5f7      	bpl.n	1005ae92 <smp_Keys_Distribution_Complete+0x16>
1005aea2:	2204      	movs	r2, #4
1005aea4:	4311      	orrs	r1, r2
1005aea6:	7381      	strb	r1, [r0, #14]
1005aea8:	f7e6 fe3c 	bl	10041b24 <smp_MI_Start_Encryption_ucfg>
1005aeac:	bd10      	pop	{r4, pc}
	...

1005aeb0 <smp_add_pairing_record_to_bonding_database>:
1005aeb0:	b530      	push	{r4, r5, lr}
1005aeb2:	4604      	mov	r4, r0
1005aeb4:	7ea1      	ldrb	r1, [r4, #26]
1005aeb6:	2000      	movs	r0, #0
1005aeb8:	b0a5      	sub	sp, #148	; 0x94
1005aeba:	07ca      	lsls	r2, r1, #31
1005aebc:	d079      	beq.n	1005afb2 <smp_add_pairing_record_to_bonding_database+0x102>
1005aebe:	0789      	lsls	r1, r1, #30
1005aec0:	d577      	bpl.n	1005afb2 <smp_add_pairing_record_to_bonding_database+0x102>
1005aec2:	2250      	movs	r2, #80	; 0x50
1005aec4:	2100      	movs	r1, #0
1005aec6:	a810      	add	r0, sp, #64	; 0x40
1005aec8:	f7e5 fc5f 	bl	1004078a <Osal_MemSet>
1005aecc:	21fe      	movs	r1, #254	; 0xfe
1005aece:	a810      	add	r0, sp, #64	; 0x40
1005aed0:	7001      	strb	r1, [r0, #0]
1005aed2:	7841      	ldrb	r1, [r0, #1]
1005aed4:	7860      	ldrb	r0, [r4, #1]
1005aed6:	2206      	movs	r2, #6
1005aed8:	07c0      	lsls	r0, r0, #31
1005aeda:	0fc0      	lsrs	r0, r0, #31
1005aedc:	4301      	orrs	r1, r0
1005aede:	a810      	add	r0, sp, #64	; 0x40
1005aee0:	7041      	strb	r1, [r0, #1]
1005aee2:	1ca1      	adds	r1, r4, #2
1005aee4:	303e      	adds	r0, #62	; 0x3e
1005aee6:	f7e5 fc4c 	bl	10040782 <Osal_MemCpy>
1005aeea:	7f21      	ldrb	r1, [r4, #28]
1005aeec:	a810      	add	r0, sp, #64	; 0x40
1005aeee:	70c1      	strb	r1, [r0, #3]
1005aef0:	7f60      	ldrb	r0, [r4, #29]
1005aef2:	4d40      	ldr	r5, [pc, #256]	; (1005aff4 <smp_add_pairing_record_to_bonding_database+0x144>)
1005aef4:	06c0      	lsls	r0, r0, #27
1005aef6:	446d      	add	r5, sp
1005aef8:	d519      	bpl.n	1005af2e <smp_add_pairing_record_to_bonding_database+0x7e>
1005aefa:	4620      	mov	r0, r4
1005aefc:	3040      	adds	r0, #64	; 0x40
1005aefe:	7c82      	ldrb	r2, [r0, #18]
1005af00:	a910      	add	r1, sp, #64	; 0x40
1005af02:	710a      	strb	r2, [r1, #4]
1005af04:	7cc0      	ldrb	r0, [r0, #19]
1005af06:	7148      	strb	r0, [r1, #5]
1005af08:	4621      	mov	r1, r4
1005af0a:	a811      	add	r0, sp, #68	; 0x44
1005af0c:	2208      	movs	r2, #8
1005af0e:	314a      	adds	r1, #74	; 0x4a
1005af10:	3002      	adds	r0, #2
1005af12:	f7e5 fc36 	bl	10040782 <Osal_MemCpy>
1005af16:	4621      	mov	r1, r4
1005af18:	2210      	movs	r2, #16
1005af1a:	313a      	adds	r1, #58	; 0x3a
1005af1c:	4628      	mov	r0, r5
1005af1e:	f7e5 fc30 	bl	10040782 <Osal_MemCpy>
1005af22:	a910      	add	r1, sp, #64	; 0x40
1005af24:	7848      	ldrb	r0, [r1, #1]
1005af26:	2180      	movs	r1, #128	; 0x80
1005af28:	4308      	orrs	r0, r1
1005af2a:	a910      	add	r1, sp, #64	; 0x40
1005af2c:	7048      	strb	r0, [r1, #1]
1005af2e:	7ae0      	ldrb	r0, [r4, #11]
1005af30:	0701      	lsls	r1, r0, #28
1005af32:	d507      	bpl.n	1005af44 <smp_add_pairing_record_to_bonding_database+0x94>
1005af34:	a910      	add	r1, sp, #64	; 0x40
1005af36:	7088      	strb	r0, [r1, #2]
1005af38:	4621      	mov	r1, r4
1005af3a:	2210      	movs	r2, #16
1005af3c:	312a      	adds	r1, #42	; 0x2a
1005af3e:	4628      	mov	r0, r5
1005af40:	f7e5 fc1f 	bl	10040782 <Osal_MemCpy>
1005af44:	7fa0      	ldrb	r0, [r4, #30]
1005af46:	2105      	movs	r1, #5
1005af48:	4208      	tst	r0, r1
1005af4a:	d00b      	beq.n	1005af64 <smp_add_pairing_record_to_bonding_database+0xb4>
1005af4c:	4621      	mov	r1, r4
1005af4e:	2202      	movs	r2, #2
1005af50:	3120      	adds	r1, #32
1005af52:	a821      	add	r0, sp, #132	; 0x84
1005af54:	f7e5 fc15 	bl	10040782 <Osal_MemCpy>
1005af58:	a910      	add	r1, sp, #64	; 0x40
1005af5a:	7848      	ldrb	r0, [r1, #1]
1005af5c:	2110      	movs	r1, #16
1005af5e:	4308      	orrs	r0, r1
1005af60:	a910      	add	r1, sp, #64	; 0x40
1005af62:	7048      	strb	r0, [r1, #1]
1005af64:	7f60      	ldrb	r0, [r4, #29]
1005af66:	0680      	lsls	r0, r0, #26
1005af68:	d50c      	bpl.n	1005af84 <smp_add_pairing_record_to_bonding_database+0xd4>
1005af6a:	4621      	mov	r1, r4
1005af6c:	a817      	add	r0, sp, #92	; 0x5c
1005af6e:	2210      	movs	r2, #16
1005af70:	3154      	adds	r1, #84	; 0x54
1005af72:	3002      	adds	r0, #2
1005af74:	f7e5 fc05 	bl	10040782 <Osal_MemCpy>
1005af78:	a910      	add	r1, sp, #64	; 0x40
1005af7a:	7848      	ldrb	r0, [r1, #1]
1005af7c:	2120      	movs	r1, #32
1005af7e:	4308      	orrs	r0, r1
1005af80:	a910      	add	r1, sp, #64	; 0x40
1005af82:	7048      	strb	r0, [r1, #1]
1005af84:	7f60      	ldrb	r0, [r4, #29]
1005af86:	0640      	lsls	r0, r0, #25
1005af88:	d50c      	bpl.n	1005afa4 <smp_add_pairing_record_to_bonding_database+0xf4>
1005af8a:	4621      	mov	r1, r4
1005af8c:	a81b      	add	r0, sp, #108	; 0x6c
1005af8e:	2210      	movs	r2, #16
1005af90:	3164      	adds	r1, #100	; 0x64
1005af92:	3002      	adds	r0, #2
1005af94:	f7e5 fbf5 	bl	10040782 <Osal_MemCpy>
1005af98:	a910      	add	r1, sp, #64	; 0x40
1005af9a:	7848      	ldrb	r0, [r1, #1]
1005af9c:	2140      	movs	r1, #64	; 0x40
1005af9e:	4308      	orrs	r0, r1
1005afa0:	a910      	add	r1, sp, #64	; 0x40
1005afa2:	7048      	strb	r0, [r1, #1]
1005afa4:	8920      	ldrh	r0, [r4, #8]
1005afa6:	0481      	lsls	r1, r0, #18
1005afa8:	d504      	bpl.n	1005afb4 <smp_add_pairing_record_to_bonding_database+0x104>
1005afaa:	a910      	add	r1, sp, #64	; 0x40
1005afac:	7848      	ldrb	r0, [r1, #1]
1005afae:	2102      	movs	r1, #2
1005afb0:	e005      	b.n	1005afbe <smp_add_pairing_record_to_bonding_database+0x10e>
1005afb2:	e01d      	b.n	1005aff0 <smp_add_pairing_record_to_bonding_database+0x140>
1005afb4:	0440      	lsls	r0, r0, #17
1005afb6:	d505      	bpl.n	1005afc4 <smp_add_pairing_record_to_bonding_database+0x114>
1005afb8:	a910      	add	r1, sp, #64	; 0x40
1005afba:	7848      	ldrb	r0, [r1, #1]
1005afbc:	2104      	movs	r1, #4
1005afbe:	4308      	orrs	r0, r1
1005afc0:	a910      	add	r1, sp, #64	; 0x40
1005afc2:	7048      	strb	r0, [r1, #1]
1005afc4:	8920      	ldrh	r0, [r4, #8]
1005afc6:	0400      	lsls	r0, r0, #16
1005afc8:	d505      	bpl.n	1005afd6 <smp_add_pairing_record_to_bonding_database+0x126>
1005afca:	a910      	add	r1, sp, #64	; 0x40
1005afcc:	7848      	ldrb	r0, [r1, #1]
1005afce:	2108      	movs	r1, #8
1005afd0:	4308      	orrs	r0, r1
1005afd2:	a910      	add	r1, sp, #64	; 0x40
1005afd4:	7048      	strb	r0, [r1, #1]
1005afd6:	6920      	ldr	r0, [r4, #16]
1005afd8:	9022      	str	r0, [sp, #136]	; 0x88
1005afda:	6960      	ldr	r0, [r4, #20]
1005afdc:	9023      	str	r0, [sp, #140]	; 0x8c
1005afde:	2240      	movs	r2, #64	; 0x40
1005afe0:	a914      	add	r1, sp, #80	; 0x50
1005afe2:	4668      	mov	r0, sp
1005afe4:	f7eb fbc1 	bl	1004676a <__aeabi_memcpy>
1005afe8:	ad10      	add	r5, sp, #64	; 0x40
1005afea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1005afec:	f7fc fe42 	bl	10057c74 <SDB_Add_Record>
1005aff0:	b025      	add	sp, #148	; 0x94
1005aff2:	bd30      	pop	{r4, r5, pc}
1005aff4:	0000004e 	.word	0x0000004e

1005aff8 <smp_find_remote_device_index>:
1005aff8:	b530      	push	{r4, r5, lr}
1005affa:	4602      	mov	r2, r0
1005affc:	480d      	ldr	r0, [pc, #52]	; (1005b034 <smp_find_remote_device_index+0x3c>)
1005affe:	6800      	ldr	r0, [r0, #0]
1005b000:	30a0      	adds	r0, #160	; 0xa0
1005b002:	7b00      	ldrb	r0, [r0, #12]
1005b004:	2a00      	cmp	r2, #0
1005b006:	4601      	mov	r1, r0
1005b008:	d012      	beq.n	1005b030 <smp_find_remote_device_index+0x38>
1005b00a:	4c0b      	ldr	r4, [pc, #44]	; (1005b038 <smp_find_remote_device_index+0x40>)
1005b00c:	0513      	lsls	r3, r2, #20
1005b00e:	2000      	movs	r0, #0
1005b010:	0d1b      	lsrs	r3, r3, #20
1005b012:	6822      	ldr	r2, [r4, #0]
1005b014:	e00a      	b.n	1005b02c <smp_find_remote_device_index+0x34>
1005b016:	247c      	movs	r4, #124	; 0x7c
1005b018:	4344      	muls	r4, r0
1005b01a:	6fd5      	ldr	r5, [r2, #124]	; 0x7c
1005b01c:	3408      	adds	r4, #8
1005b01e:	5b2c      	ldrh	r4, [r5, r4]
1005b020:	0524      	lsls	r4, r4, #20
1005b022:	0d24      	lsrs	r4, r4, #20
1005b024:	429c      	cmp	r4, r3
1005b026:	d003      	beq.n	1005b030 <smp_find_remote_device_index+0x38>
1005b028:	1c40      	adds	r0, r0, #1
1005b02a:	b2c0      	uxtb	r0, r0
1005b02c:	4281      	cmp	r1, r0
1005b02e:	d8f2      	bhi.n	1005b016 <smp_find_remote_device_index+0x1e>
1005b030:	bd30      	pop	{r4, r5, pc}
1005b032:	0000      	.short	0x0000
1005b034:	20000d64 	.word	0x20000d64
1005b038:	20000d6c 	.word	0x20000d6c

1005b03c <smp_flush_rx_queues>:
1005b03c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005b03e:	4e0c      	ldr	r6, [pc, #48]	; (1005b070 <smp_flush_rx_queues+0x34>)
1005b040:	4605      	mov	r5, r0
1005b042:	6830      	ldr	r0, [r6, #0]
1005b044:	f001 fd62 	bl	1005cb0c <acl_list_first>
1005b048:	052f      	lsls	r7, r5, #20
1005b04a:	4604      	mov	r4, r0
1005b04c:	0d3f      	lsrs	r7, r7, #20
1005b04e:	e00c      	b.n	1005b06a <smp_flush_rx_queues+0x2e>
1005b050:	88a0      	ldrh	r0, [r4, #4]
1005b052:	6825      	ldr	r5, [r4, #0]
1005b054:	42b8      	cmp	r0, r7
1005b056:	d107      	bne.n	1005b068 <smp_flush_rx_queues+0x2c>
1005b058:	4621      	mov	r1, r4
1005b05a:	6830      	ldr	r0, [r6, #0]
1005b05c:	f001 fda3 	bl	1005cba6 <acl_list_remove>
1005b060:	2101      	movs	r1, #1
1005b062:	4620      	mov	r0, r4
1005b064:	f7f9 fd3e 	bl	10054ae4 <PM_Release_Acl_Pckt>
1005b068:	462c      	mov	r4, r5
1005b06a:	2c00      	cmp	r4, #0
1005b06c:	d1f0      	bne.n	1005b050 <smp_flush_rx_queues+0x14>
1005b06e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005b070:	20000d6c 	.word	0x20000d6c

1005b074 <smp_get_CSRK>:
1005b074:	b510      	push	{r4, lr}
1005b076:	460b      	mov	r3, r1
1005b078:	7f41      	ldrb	r1, [r0, #29]
1005b07a:	0649      	lsls	r1, r1, #25
1005b07c:	d507      	bpl.n	1005b08e <smp_get_CSRK+0x1a>
1005b07e:	4601      	mov	r1, r0
1005b080:	2210      	movs	r2, #16
1005b082:	3164      	adds	r1, #100	; 0x64
1005b084:	4618      	mov	r0, r3
1005b086:	f7e5 fb7c 	bl	10040782 <Osal_MemCpy>
1005b08a:	2000      	movs	r0, #0
1005b08c:	bd10      	pop	{r4, pc}
1005b08e:	2041      	movs	r0, #65	; 0x41
1005b090:	bd10      	pop	{r4, pc}
	...

1005b094 <smp_get_local_identity_address>:
1005b094:	4602      	mov	r2, r0
1005b096:	b510      	push	{r4, lr}
1005b098:	480b      	ldr	r0, [pc, #44]	; (1005b0c8 <smp_get_local_identity_address+0x34>)
1005b09a:	2400      	movs	r4, #0
1005b09c:	6800      	ldr	r0, [r0, #0]
1005b09e:	7d40      	ldrb	r0, [r0, #21]
1005b0a0:	7010      	strb	r0, [r2, #0]
1005b0a2:	2800      	cmp	r0, #0
1005b0a4:	d004      	beq.n	1005b0b0 <smp_get_local_identity_address+0x1c>
1005b0a6:	2801      	cmp	r0, #1
1005b0a8:	d00a      	beq.n	1005b0c0 <smp_get_local_identity_address+0x2c>
1005b0aa:	241f      	movs	r4, #31
1005b0ac:	4620      	mov	r0, r4
1005b0ae:	bd10      	pop	{r4, pc}
1005b0b0:	4608      	mov	r0, r1
1005b0b2:	4906      	ldr	r1, [pc, #24]	; (1005b0cc <smp_get_local_identity_address+0x38>)
1005b0b4:	2206      	movs	r2, #6
1005b0b6:	6809      	ldr	r1, [r1, #0]
1005b0b8:	3178      	adds	r1, #120	; 0x78
1005b0ba:	f7e5 fb62 	bl	10040782 <Osal_MemCpy>
1005b0be:	e7f5      	b.n	1005b0ac <smp_get_local_identity_address+0x18>
1005b0c0:	4608      	mov	r0, r1
1005b0c2:	f7fa fb65 	bl	10055790 <Get_StaticRandAddr>
1005b0c6:	e7f1      	b.n	1005b0ac <smp_get_local_identity_address+0x18>
1005b0c8:	20000d6c 	.word	0x20000d6c
1005b0cc:	20000d64 	.word	0x20000d64

1005b0d0 <smp_is_any_pairing_ongoing>:
1005b0d0:	b530      	push	{r4, r5, lr}
1005b0d2:	4a10      	ldr	r2, [pc, #64]	; (1005b114 <smp_is_any_pairing_ongoing+0x44>)
1005b0d4:	2000      	movs	r0, #0
1005b0d6:	6813      	ldr	r3, [r2, #0]
1005b0d8:	4a0f      	ldr	r2, [pc, #60]	; (1005b118 <smp_is_any_pairing_ongoing+0x48>)
1005b0da:	4601      	mov	r1, r0
1005b0dc:	6812      	ldr	r2, [r2, #0]
1005b0de:	32a0      	adds	r2, #160	; 0xa0
1005b0e0:	7b14      	ldrb	r4, [r2, #12]
1005b0e2:	e013      	b.n	1005b10c <smp_is_any_pairing_ongoing+0x3c>
1005b0e4:	227c      	movs	r2, #124	; 0x7c
1005b0e6:	6fdd      	ldr	r5, [r3, #124]	; 0x7c
1005b0e8:	434a      	muls	r2, r1
1005b0ea:	18aa      	adds	r2, r5, r2
1005b0ec:	2574      	movs	r5, #116	; 0x74
1005b0ee:	5cad      	ldrb	r5, [r5, r2]
1005b0f0:	07ed      	lsls	r5, r5, #31
1005b0f2:	7a95      	ldrb	r5, [r2, #10]
1005b0f4:	d006      	beq.n	1005b104 <smp_is_any_pairing_ongoing+0x34>
1005b0f6:	2db0      	cmp	r5, #176	; 0xb0
1005b0f8:	d306      	bcc.n	1005b108 <smp_is_any_pairing_ongoing+0x38>
1005b0fa:	b2ea      	uxtb	r2, r5
1005b0fc:	2af0      	cmp	r2, #240	; 0xf0
1005b0fe:	d803      	bhi.n	1005b108 <smp_is_any_pairing_ongoing+0x38>
1005b100:	2001      	movs	r0, #1
1005b102:	bd30      	pop	{r4, r5, pc}
1005b104:	2da0      	cmp	r5, #160	; 0xa0
1005b106:	d2f8      	bcs.n	1005b0fa <smp_is_any_pairing_ongoing+0x2a>
1005b108:	1c49      	adds	r1, r1, #1
1005b10a:	b2c9      	uxtb	r1, r1
1005b10c:	428c      	cmp	r4, r1
1005b10e:	d8e9      	bhi.n	1005b0e4 <smp_is_any_pairing_ongoing+0x14>
1005b110:	bd30      	pop	{r4, r5, pc}
1005b112:	0000      	.short	0x0000
1005b114:	20000d6c 	.word	0x20000d6c
1005b118:	20000d64 	.word	0x20000d64

1005b11c <smp_keys_distribution_start>:
1005b11c:	7ac1      	ldrb	r1, [r0, #11]
1005b11e:	070a      	lsls	r2, r1, #28
1005b120:	7f81      	ldrb	r1, [r0, #30]
1005b122:	d403      	bmi.n	1005b12c <smp_keys_distribution_start+0x10>
1005b124:	07ca      	lsls	r2, r1, #31
1005b126:	d001      	beq.n	1005b12c <smp_keys_distribution_start+0x10>
1005b128:	21d1      	movs	r1, #209	; 0xd1
1005b12a:	e002      	b.n	1005b132 <smp_keys_distribution_start+0x16>
1005b12c:	078a      	lsls	r2, r1, #30
1005b12e:	d502      	bpl.n	1005b136 <smp_keys_distribution_start+0x1a>
1005b130:	21d3      	movs	r1, #211	; 0xd3
1005b132:	7281      	strb	r1, [r0, #10]
1005b134:	4770      	bx	lr
1005b136:	0749      	lsls	r1, r1, #29
1005b138:	d501      	bpl.n	1005b13e <smp_keys_distribution_start+0x22>
1005b13a:	21d5      	movs	r1, #213	; 0xd5
1005b13c:	e7f9      	b.n	1005b132 <smp_keys_distribution_start+0x16>
1005b13e:	2174      	movs	r1, #116	; 0x74
1005b140:	5c09      	ldrb	r1, [r1, r0]
1005b142:	07c9      	lsls	r1, r1, #31
1005b144:	d004      	beq.n	1005b150 <smp_keys_distribution_start+0x34>
1005b146:	7f41      	ldrb	r1, [r0, #29]
1005b148:	0749      	lsls	r1, r1, #29
1005b14a:	d001      	beq.n	1005b150 <smp_keys_distribution_start+0x34>
1005b14c:	21d0      	movs	r1, #208	; 0xd0
1005b14e:	e7f0      	b.n	1005b132 <smp_keys_distribution_start+0x16>
1005b150:	21f0      	movs	r1, #240	; 0xf0
1005b152:	e7ee      	b.n	1005b132 <smp_keys_distribution_start+0x16>

1005b154 <smp_keys_receiving>:
1005b154:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1005b156:	4605      	mov	r5, r0
1005b158:	6880      	ldr	r0, [r0, #8]
1005b15a:	460c      	mov	r4, r1
1005b15c:	7b01      	ldrb	r1, [r0, #12]
1005b15e:	2906      	cmp	r1, #6
1005b160:	d01d      	beq.n	1005b19e <smp_keys_receiving+0x4a>
1005b162:	2907      	cmp	r1, #7
1005b164:	d01e      	beq.n	1005b1a4 <smp_keys_receiving+0x50>
1005b166:	2908      	cmp	r1, #8
1005b168:	d032      	beq.n	1005b1d0 <smp_keys_receiving+0x7c>
1005b16a:	2909      	cmp	r1, #9
1005b16c:	d03b      	beq.n	1005b1e6 <smp_keys_receiving+0x92>
1005b16e:	290a      	cmp	r1, #10
1005b170:	d114      	bne.n	1005b19c <smp_keys_receiving+0x48>
1005b172:	7f60      	ldrb	r0, [r4, #29]
1005b174:	0740      	lsls	r0, r0, #29
1005b176:	d511      	bpl.n	1005b19c <smp_keys_receiving+0x48>
1005b178:	4623      	mov	r3, r4
1005b17a:	3364      	adds	r3, #100	; 0x64
1005b17c:	2210      	movs	r2, #16
1005b17e:	2105      	movs	r1, #5
1005b180:	4628      	mov	r0, r5
1005b182:	f7f9 fc13 	bl	100549ac <PM_Copy_Pckt_Data>
1005b186:	7f60      	ldrb	r0, [r4, #29]
1005b188:	2140      	movs	r1, #64	; 0x40
1005b18a:	4308      	orrs	r0, r1
1005b18c:	7760      	strb	r0, [r4, #29]
1005b18e:	2074      	movs	r0, #116	; 0x74
1005b190:	5d00      	ldrb	r0, [r0, r4]
1005b192:	07c0      	lsls	r0, r0, #31
1005b194:	4620      	mov	r0, r4
1005b196:	d045      	beq.n	1005b224 <smp_keys_receiving+0xd0>
1005b198:	f000 f8a4 	bl	1005b2e4 <smp_pairing_completed>
1005b19c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005b19e:	4623      	mov	r3, r4
1005b1a0:	333a      	adds	r3, #58	; 0x3a
1005b1a2:	e01a      	b.n	1005b1da <smp_keys_receiving+0x86>
1005b1a4:	4621      	mov	r1, r4
1005b1a6:	7b42      	ldrb	r2, [r0, #13]
1005b1a8:	3140      	adds	r1, #64	; 0x40
1005b1aa:	748a      	strb	r2, [r1, #18]
1005b1ac:	68a8      	ldr	r0, [r5, #8]
1005b1ae:	4623      	mov	r3, r4
1005b1b0:	7b80      	ldrb	r0, [r0, #14]
1005b1b2:	74c8      	strb	r0, [r1, #19]
1005b1b4:	334a      	adds	r3, #74	; 0x4a
1005b1b6:	2208      	movs	r2, #8
1005b1b8:	2107      	movs	r1, #7
1005b1ba:	4628      	mov	r0, r5
1005b1bc:	f7f9 fbf6 	bl	100549ac <PM_Copy_Pckt_Data>
1005b1c0:	7f60      	ldrb	r0, [r4, #29]
1005b1c2:	2110      	movs	r1, #16
1005b1c4:	4308      	orrs	r0, r1
1005b1c6:	7760      	strb	r0, [r4, #29]
1005b1c8:	0740      	lsls	r0, r0, #29
1005b1ca:	0f80      	lsrs	r0, r0, #30
1005b1cc:	d0df      	beq.n	1005b18e <smp_keys_receiving+0x3a>
1005b1ce:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005b1d0:	7f60      	ldrb	r0, [r4, #29]
1005b1d2:	0780      	lsls	r0, r0, #30
1005b1d4:	d5fb      	bpl.n	1005b1ce <smp_keys_receiving+0x7a>
1005b1d6:	4623      	mov	r3, r4
1005b1d8:	3354      	adds	r3, #84	; 0x54
1005b1da:	2210      	movs	r2, #16
1005b1dc:	2105      	movs	r1, #5
1005b1de:	4628      	mov	r0, r5
1005b1e0:	f7f9 fbe4 	bl	100549ac <PM_Copy_Pckt_Data>
1005b1e4:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005b1e6:	7f60      	ldrb	r0, [r4, #29]
1005b1e8:	0780      	lsls	r0, r0, #30
1005b1ea:	d5fb      	bpl.n	1005b1e4 <smp_keys_receiving+0x90>
1005b1ec:	2000      	movs	r0, #0
1005b1ee:	9000      	str	r0, [sp, #0]
1005b1f0:	2306      	movs	r3, #6
1005b1f2:	9001      	str	r0, [sp, #4]
1005b1f4:	461a      	mov	r2, r3
1005b1f6:	4669      	mov	r1, sp
1005b1f8:	4628      	mov	r0, r5
1005b1fa:	f7f9 fc6d 	bl	10054ad8 <PM_Pckt_Cmp>
1005b1fe:	2800      	cmp	r0, #0
1005b200:	d00c      	beq.n	1005b21c <smp_keys_receiving+0xc8>
1005b202:	68a8      	ldr	r0, [r5, #8]
1005b204:	2206      	movs	r2, #6
1005b206:	7b40      	ldrb	r0, [r0, #13]
1005b208:	7060      	strb	r0, [r4, #1]
1005b20a:	1ca3      	adds	r3, r4, #2
1005b20c:	4611      	mov	r1, r2
1005b20e:	4628      	mov	r0, r5
1005b210:	f7f9 fbcc 	bl	100549ac <PM_Copy_Pckt_Data>
1005b214:	7f60      	ldrb	r0, [r4, #29]
1005b216:	2120      	movs	r1, #32
1005b218:	4308      	orrs	r0, r1
1005b21a:	7760      	strb	r0, [r4, #29]
1005b21c:	7f60      	ldrb	r0, [r4, #29]
1005b21e:	0740      	lsls	r0, r0, #29
1005b220:	d5b5      	bpl.n	1005b18e <smp_keys_receiving+0x3a>
1005b222:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005b224:	f7ff ff7a 	bl	1005b11c <smp_keys_distribution_start>
1005b228:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
	...

1005b22c <smp_oob_check_is_remote_data_present>:
1005b22c:	b570      	push	{r4, r5, r6, lr}
1005b22e:	4604      	mov	r4, r0
1005b230:	480c      	ldr	r0, [pc, #48]	; (1005b264 <smp_oob_check_is_remote_data_present+0x38>)
1005b232:	7862      	ldrb	r2, [r4, #1]
1005b234:	6800      	ldr	r0, [r0, #0]
1005b236:	07d2      	lsls	r2, r2, #31
1005b238:	3080      	adds	r0, #128	; 0x80
1005b23a:	6840      	ldr	r0, [r0, #4]
1005b23c:	2500      	movs	r5, #0
1005b23e:	7841      	ldrb	r1, [r0, #1]
1005b240:	0fd2      	lsrs	r2, r2, #31
1005b242:	1c80      	adds	r0, r0, #2
1005b244:	428a      	cmp	r2, r1
1005b246:	d10a      	bne.n	1005b25e <smp_oob_check_is_remote_data_present+0x32>
1005b248:	2206      	movs	r2, #6
1005b24a:	1ca1      	adds	r1, r4, #2
1005b24c:	f7e5 faa1 	bl	10040792 <Osal_MemCmp>
1005b250:	2800      	cmp	r0, #0
1005b252:	d104      	bne.n	1005b25e <smp_oob_check_is_remote_data_present+0x32>
1005b254:	7e20      	ldrb	r0, [r4, #24]
1005b256:	2101      	movs	r1, #1
1005b258:	4308      	orrs	r0, r1
1005b25a:	7620      	strb	r0, [r4, #24]
1005b25c:	460d      	mov	r5, r1
1005b25e:	4628      	mov	r0, r5
1005b260:	bd70      	pop	{r4, r5, r6, pc}
1005b262:	0000      	.short	0x0000
1005b264:	20000d6c 	.word	0x20000d6c

1005b268 <smp_oob_get_remote_data_reference>:
1005b268:	b570      	push	{r4, r5, r6, lr}
1005b26a:	2400      	movs	r4, #0
1005b26c:	461d      	mov	r5, r3
1005b26e:	4616      	mov	r6, r2
1005b270:	2800      	cmp	r0, #0
1005b272:	d004      	beq.n	1005b27e <smp_oob_get_remote_data_reference+0x16>
1005b274:	f7ff ffda 	bl	1005b22c <smp_oob_check_is_remote_data_present>
1005b278:	2800      	cmp	r0, #0
1005b27a:	d002      	beq.n	1005b282 <smp_oob_get_remote_data_reference+0x1a>
1005b27c:	e003      	b.n	1005b286 <smp_oob_get_remote_data_reference+0x1e>
1005b27e:	2900      	cmp	r1, #0
1005b280:	d001      	beq.n	1005b286 <smp_oob_get_remote_data_reference+0x1e>
1005b282:	2442      	movs	r4, #66	; 0x42
1005b284:	e00b      	b.n	1005b29e <smp_oob_get_remote_data_reference+0x36>
1005b286:	4809      	ldr	r0, [pc, #36]	; (1005b2ac <smp_oob_get_remote_data_reference+0x44>)
1005b288:	2e00      	cmp	r6, #0
1005b28a:	d00a      	beq.n	1005b2a2 <smp_oob_get_remote_data_reference+0x3a>
1005b28c:	2e01      	cmp	r6, #1
1005b28e:	d008      	beq.n	1005b2a2 <smp_oob_get_remote_data_reference+0x3a>
1005b290:	2e02      	cmp	r6, #2
1005b292:	d1f6      	bne.n	1005b282 <smp_oob_get_remote_data_reference+0x1a>
1005b294:	6800      	ldr	r0, [r0, #0]
1005b296:	3080      	adds	r0, #128	; 0x80
1005b298:	6840      	ldr	r0, [r0, #4]
1005b29a:	3018      	adds	r0, #24
1005b29c:	6028      	str	r0, [r5, #0]
1005b29e:	4620      	mov	r0, r4
1005b2a0:	bd70      	pop	{r4, r5, r6, pc}
1005b2a2:	6800      	ldr	r0, [r0, #0]
1005b2a4:	3080      	adds	r0, #128	; 0x80
1005b2a6:	6840      	ldr	r0, [r0, #4]
1005b2a8:	3008      	adds	r0, #8
1005b2aa:	e7f7      	b.n	1005b29c <smp_oob_get_remote_data_reference+0x34>
1005b2ac:	20000d6c 	.word	0x20000d6c

1005b2b0 <smp_pairing_2octets_packet_send>:
1005b2b0:	b570      	push	{r4, r5, r6, lr}
1005b2b2:	461c      	mov	r4, r3
1005b2b4:	4615      	mov	r5, r2
1005b2b6:	2900      	cmp	r1, #0
1005b2b8:	d108      	bne.n	1005b2cc <smp_pairing_2octets_packet_send+0x1c>
1005b2ba:	8900      	ldrh	r0, [r0, #8]
1005b2bc:	2220      	movs	r2, #32
1005b2be:	0501      	lsls	r1, r0, #20
1005b2c0:	0d09      	lsrs	r1, r1, #20
1005b2c2:	2000      	movs	r0, #0
1005b2c4:	f7f9 fbb2 	bl	10054a2c <PM_Get_Pckt>
1005b2c8:	0001      	movs	r1, r0
1005b2ca:	d009      	beq.n	1005b2e0 <smp_pairing_2octets_packet_send+0x30>
1005b2cc:	2002      	movs	r0, #2
1005b2ce:	80c8      	strh	r0, [r1, #6]
1005b2d0:	6888      	ldr	r0, [r1, #8]
1005b2d2:	7305      	strb	r5, [r0, #12]
1005b2d4:	6888      	ldr	r0, [r1, #8]
1005b2d6:	7344      	strb	r4, [r0, #13]
1005b2d8:	2006      	movs	r0, #6
1005b2da:	f7f2 fe51 	bl	1004df80 <L2C_Send_Data>
1005b2de:	bd70      	pop	{r4, r5, r6, pc}
1005b2e0:	2064      	movs	r0, #100	; 0x64
1005b2e2:	bd70      	pop	{r4, r5, r6, pc}

1005b2e4 <smp_pairing_completed>:
1005b2e4:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1005b2e6:	4604      	mov	r4, r0
1005b2e8:	8900      	ldrh	r0, [r0, #8]
1005b2ea:	0505      	lsls	r5, r0, #20
1005b2ec:	0d2d      	lsrs	r5, r5, #20
1005b2ee:	f7ff fe83 	bl	1005aff8 <smp_find_remote_device_index>
1005b2f2:	4602      	mov	r2, r0
1005b2f4:	4b17      	ldr	r3, [pc, #92]	; (1005b354 <smp_pairing_completed+0x70>)
1005b2f6:	2100      	movs	r1, #0
1005b2f8:	2001      	movs	r0, #1
1005b2fa:	f7ff fc8b 	bl	1005ac14 <SMP_reset_timer>
1005b2fe:	4620      	mov	r0, r4
1005b300:	f7ff fdd6 	bl	1005aeb0 <smp_add_pairing_record_to_bonding_database>
1005b304:	7fe0      	ldrb	r0, [r4, #31]
1005b306:	2600      	movs	r6, #0
1005b308:	2803      	cmp	r0, #3
1005b30a:	d107      	bne.n	1005b31c <smp_pairing_completed+0x38>
1005b30c:	4812      	ldr	r0, [pc, #72]	; (1005b358 <smp_pairing_completed+0x74>)
1005b30e:	2228      	movs	r2, #40	; 0x28
1005b310:	6800      	ldr	r0, [r0, #0]
1005b312:	2100      	movs	r1, #0
1005b314:	3080      	adds	r0, #128	; 0x80
1005b316:	6840      	ldr	r0, [r0, #4]
1005b318:	f7e5 fa37 	bl	1004078a <Osal_MemSet>
1005b31c:	4620      	mov	r0, r4
1005b31e:	2204      	movs	r2, #4
1005b320:	2100      	movs	r1, #0
1005b322:	300c      	adds	r0, #12
1005b324:	f7e5 fa31 	bl	1004078a <Osal_MemSet>
1005b328:	4668      	mov	r0, sp
1005b32a:	9400      	str	r4, [sp, #0]
1005b32c:	7106      	strb	r6, [r0, #4]
1005b32e:	f000 f8ff 	bl	1005b530 <smp_update_statistics_on_pairing_complete>
1005b332:	20f1      	movs	r0, #241	; 0xf1
1005b334:	72a0      	strb	r0, [r4, #10]
1005b336:	2300      	movs	r3, #0
1005b338:	461a      	mov	r2, r3
1005b33a:	4629      	mov	r1, r5
1005b33c:	2002      	movs	r0, #2
1005b33e:	f7ff fd6f 	bl	1005ae20 <aci_gap_pairing_complete_event_push>
1005b342:	8920      	ldrh	r0, [r4, #8]
1005b344:	0401      	lsls	r1, r0, #16
1005b346:	d504      	bpl.n	1005b352 <smp_pairing_completed+0x6e>
1005b348:	0501      	lsls	r1, r0, #20
1005b34a:	0d09      	lsrs	r1, r1, #20
1005b34c:	2002      	movs	r0, #2
1005b34e:	f7ff fd3d 	bl	1005adcc <aci_gap_authorization_req_event_push>
1005b352:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005b354:	00007530 	.word	0x00007530
1005b358:	20000d6c 	.word	0x20000d6c

1005b35c <smp_pairing_failed_receive>:
1005b35c:	b510      	push	{r4, lr}
1005b35e:	460a      	mov	r2, r1
1005b360:	6881      	ldr	r1, [r0, #8]
1005b362:	4610      	mov	r0, r2
1005b364:	7b49      	ldrb	r1, [r1, #13]
1005b366:	f000 f817 	bl	1005b398 <smp_pairing_process_abort>
1005b36a:	bd10      	pop	{r4, pc}

1005b36c <smp_pairing_failed_send>:
1005b36c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005b36e:	461d      	mov	r5, r3
1005b370:	4614      	mov	r4, r2
1005b372:	460e      	mov	r6, r1
1005b374:	460b      	mov	r3, r1
1005b376:	4607      	mov	r7, r0
1005b378:	2205      	movs	r2, #5
1005b37a:	4621      	mov	r1, r4
1005b37c:	f7ff ff98 	bl	1005b2b0 <smp_pairing_2octets_packet_send>
1005b380:	4604      	mov	r4, r0
1005b382:	2864      	cmp	r0, #100	; 0x64
1005b384:	d101      	bne.n	1005b38a <smp_pairing_failed_send+0x1e>
1005b386:	2d01      	cmp	r5, #1
1005b388:	d103      	bne.n	1005b392 <smp_pairing_failed_send+0x26>
1005b38a:	4631      	mov	r1, r6
1005b38c:	4638      	mov	r0, r7
1005b38e:	f000 f803 	bl	1005b398 <smp_pairing_process_abort>
1005b392:	4620      	mov	r0, r4
1005b394:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1005b398 <smp_pairing_process_abort>:
1005b398:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1005b39a:	4604      	mov	r4, r0
1005b39c:	460d      	mov	r5, r1
1005b39e:	8900      	ldrh	r0, [r0, #8]
1005b3a0:	f7ff fe2a 	bl	1005aff8 <smp_find_remote_device_index>
1005b3a4:	4602      	mov	r2, r0
1005b3a6:	4b14      	ldr	r3, [pc, #80]	; (1005b3f8 <smp_pairing_process_abort+0x60>)
1005b3a8:	2100      	movs	r1, #0
1005b3aa:	2001      	movs	r0, #1
1005b3ac:	f7ff fc32 	bl	1005ac14 <SMP_reset_timer>
1005b3b0:	8920      	ldrh	r0, [r4, #8]
1005b3b2:	0500      	lsls	r0, r0, #20
1005b3b4:	0d00      	lsrs	r0, r0, #20
1005b3b6:	f7ff fe41 	bl	1005b03c <smp_flush_rx_queues>
1005b3ba:	2002      	movs	r0, #2
1005b3bc:	4669      	mov	r1, sp
1005b3be:	9400      	str	r4, [sp, #0]
1005b3c0:	7108      	strb	r0, [r1, #4]
1005b3c2:	4668      	mov	r0, sp
1005b3c4:	f000 f8b4 	bl	1005b530 <smp_update_statistics_on_pairing_complete>
1005b3c8:	4620      	mov	r0, r4
1005b3ca:	2204      	movs	r2, #4
1005b3cc:	2100      	movs	r1, #0
1005b3ce:	300c      	adds	r0, #12
1005b3d0:	f7e5 f9db 	bl	1004078a <Osal_MemSet>
1005b3d4:	7ee0      	ldrb	r0, [r4, #27]
1005b3d6:	212f      	movs	r1, #47	; 0x2f
1005b3d8:	4008      	ands	r0, r1
1005b3da:	76e0      	strb	r0, [r4, #27]
1005b3dc:	4620      	mov	r0, r4
1005b3de:	f000 f80d 	bl	1005b3fc <smp_repeated_attacks_protection>
1005b3e2:	20fb      	movs	r0, #251	; 0xfb
1005b3e4:	72a0      	strb	r0, [r4, #10]
1005b3e6:	8920      	ldrh	r0, [r4, #8]
1005b3e8:	2202      	movs	r2, #2
1005b3ea:	0501      	lsls	r1, r0, #20
1005b3ec:	0d09      	lsrs	r1, r1, #20
1005b3ee:	462b      	mov	r3, r5
1005b3f0:	4610      	mov	r0, r2
1005b3f2:	f7ff fd15 	bl	1005ae20 <aci_gap_pairing_complete_event_push>
1005b3f6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005b3f8:	00007530 	.word	0x00007530

1005b3fc <smp_repeated_attacks_protection>:
1005b3fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005b3fe:	2400      	movs	r4, #0
1005b400:	4606      	mov	r6, r0
1005b402:	2701      	movs	r7, #1
1005b404:	4d34      	ldr	r5, [pc, #208]	; (1005b4d8 <smp_repeated_attacks_protection+0xdc>)
1005b406:	e00c      	b.n	1005b422 <smp_repeated_attacks_protection+0x26>
1005b408:	3080      	adds	r0, #128	; 0x80
1005b40a:	6801      	ldr	r1, [r0, #0]
1005b40c:	00e0      	lsls	r0, r4, #3
1005b40e:	1c80      	adds	r0, r0, #2
1005b410:	1808      	adds	r0, r1, r0
1005b412:	2206      	movs	r2, #6
1005b414:	1cb1      	adds	r1, r6, #2
1005b416:	f7e5 f9bc 	bl	10040792 <Osal_MemCmp>
1005b41a:	2800      	cmp	r0, #0
1005b41c:	d021      	beq.n	1005b462 <smp_repeated_attacks_protection+0x66>
1005b41e:	1c64      	adds	r4, r4, #1
1005b420:	b2e4      	uxtb	r4, r4
1005b422:	6828      	ldr	r0, [r5, #0]
1005b424:	7e41      	ldrb	r1, [r0, #25]
1005b426:	42a1      	cmp	r1, r4
1005b428:	d8ee      	bhi.n	1005b408 <smp_repeated_attacks_protection+0xc>
1005b42a:	7e41      	ldrb	r1, [r0, #25]
1005b42c:	2903      	cmp	r1, #3
1005b42e:	d03f      	beq.n	1005b4b0 <smp_repeated_attacks_protection+0xb4>
1005b430:	1c49      	adds	r1, r1, #1
1005b432:	7641      	strb	r1, [r0, #25]
1005b434:	6828      	ldr	r0, [r5, #0]
1005b436:	00e7      	lsls	r7, r4, #3
1005b438:	3080      	adds	r0, #128	; 0x80
1005b43a:	6801      	ldr	r1, [r0, #0]
1005b43c:	1cb8      	adds	r0, r7, #2
1005b43e:	1808      	adds	r0, r1, r0
1005b440:	2206      	movs	r2, #6
1005b442:	1cb1      	adds	r1, r6, #2
1005b444:	f7e5 f99d 	bl	10040782 <Osal_MemCpy>
1005b448:	6829      	ldr	r1, [r5, #0]
1005b44a:	2080      	movs	r0, #128	; 0x80
1005b44c:	3180      	adds	r1, #128	; 0x80
1005b44e:	6809      	ldr	r1, [r1, #0]
1005b450:	1c64      	adds	r4, r4, #1
1005b452:	4b22      	ldr	r3, [pc, #136]	; (1005b4dc <smp_repeated_attacks_protection+0xe0>)
1005b454:	55c8      	strb	r0, [r1, r7]
1005b456:	b2e2      	uxtb	r2, r4
1005b458:	2101      	movs	r1, #1
1005b45a:	2000      	movs	r0, #0
1005b45c:	f7ff fbda 	bl	1005ac14 <SMP_reset_timer>
1005b460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005b462:	6828      	ldr	r0, [r5, #0]
1005b464:	00e1      	lsls	r1, r4, #3
1005b466:	3080      	adds	r0, #128	; 0x80
1005b468:	6802      	ldr	r2, [r0, #0]
1005b46a:	2380      	movs	r3, #128	; 0x80
1005b46c:	5c50      	ldrb	r0, [r2, r1]
1005b46e:	4318      	orrs	r0, r3
1005b470:	5450      	strb	r0, [r2, r1]
1005b472:	682a      	ldr	r2, [r5, #0]
1005b474:	3280      	adds	r2, #128	; 0x80
1005b476:	6812      	ldr	r2, [r2, #0]
1005b478:	0783      	lsls	r3, r0, #30
1005b47a:	d505      	bpl.n	1005b488 <smp_repeated_attacks_protection+0x8c>
1005b47c:	4e18      	ldr	r6, [pc, #96]	; (1005b4e0 <smp_repeated_attacks_protection+0xe4>)
1005b47e:	07c3      	lsls	r3, r0, #31
1005b480:	d112      	bne.n	1005b4a8 <smp_repeated_attacks_protection+0xac>
1005b482:	4338      	orrs	r0, r7
1005b484:	5450      	strb	r0, [r2, r1]
1005b486:	e00f      	b.n	1005b4a8 <smp_repeated_attacks_protection+0xac>
1005b488:	07c3      	lsls	r3, r0, #31
1005b48a:	d00a      	beq.n	1005b4a2 <smp_repeated_attacks_protection+0xa6>
1005b48c:	2302      	movs	r3, #2
1005b48e:	4318      	orrs	r0, r3
1005b490:	5450      	strb	r0, [r2, r1]
1005b492:	682a      	ldr	r2, [r5, #0]
1005b494:	0840      	lsrs	r0, r0, #1
1005b496:	3280      	adds	r2, #128	; 0x80
1005b498:	6812      	ldr	r2, [r2, #0]
1005b49a:	0040      	lsls	r0, r0, #1
1005b49c:	5450      	strb	r0, [r2, r1]
1005b49e:	4e11      	ldr	r6, [pc, #68]	; (1005b4e4 <smp_repeated_attacks_protection+0xe8>)
1005b4a0:	e002      	b.n	1005b4a8 <smp_repeated_attacks_protection+0xac>
1005b4a2:	4338      	orrs	r0, r7
1005b4a4:	4e10      	ldr	r6, [pc, #64]	; (1005b4e8 <smp_repeated_attacks_protection+0xec>)
1005b4a6:	5450      	strb	r0, [r2, r1]
1005b4a8:	1c64      	adds	r4, r4, #1
1005b4aa:	b2e2      	uxtb	r2, r4
1005b4ac:	4633      	mov	r3, r6
1005b4ae:	e7d3      	b.n	1005b458 <smp_repeated_attacks_protection+0x5c>
1005b4b0:	2400      	movs	r4, #0
1005b4b2:	3080      	adds	r0, #128	; 0x80
1005b4b4:	6800      	ldr	r0, [r0, #0]
1005b4b6:	00e1      	lsls	r1, r4, #3
1005b4b8:	5c41      	ldrb	r1, [r0, r1]
1005b4ba:	0649      	lsls	r1, r1, #25
1005b4bc:	d4ba      	bmi.n	1005b434 <smp_repeated_attacks_protection+0x38>
1005b4be:	1c64      	adds	r4, r4, #1
1005b4c0:	b2e4      	uxtb	r4, r4
1005b4c2:	2c03      	cmp	r4, #3
1005b4c4:	d3f7      	bcc.n	1005b4b6 <smp_repeated_attacks_protection+0xba>
1005b4c6:	2101      	movs	r1, #1
1005b4c8:	2400      	movs	r4, #0
1005b4ca:	463a      	mov	r2, r7
1005b4cc:	4633      	mov	r3, r6
1005b4ce:	4608      	mov	r0, r1
1005b4d0:	f7ff fba0 	bl	1005ac14 <SMP_reset_timer>
1005b4d4:	e7ae      	b.n	1005b434 <smp_repeated_attacks_protection+0x38>
1005b4d6:	0000      	.short	0x0000
1005b4d8:	20000d6c 	.word	0x20000d6c
1005b4dc:	00001388 	.word	0x00001388
1005b4e0:	00020f58 	.word	0x00020f58
1005b4e4:	0000afc8 	.word	0x0000afc8
1005b4e8:	00003a98 	.word	0x00003a98

1005b4ec <smp_search_blacklist>:
1005b4ec:	b570      	push	{r4, r5, r6, lr}
1005b4ee:	4d0f      	ldr	r5, [pc, #60]	; (1005b52c <smp_search_blacklist+0x40>)
1005b4f0:	4606      	mov	r6, r0
1005b4f2:	2400      	movs	r4, #0
1005b4f4:	6828      	ldr	r0, [r5, #0]
1005b4f6:	2206      	movs	r2, #6
1005b4f8:	3080      	adds	r0, #128	; 0x80
1005b4fa:	6801      	ldr	r1, [r0, #0]
1005b4fc:	00e0      	lsls	r0, r4, #3
1005b4fe:	1c80      	adds	r0, r0, #2
1005b500:	1808      	adds	r0, r1, r0
1005b502:	4631      	mov	r1, r6
1005b504:	f7e5 f945 	bl	10040792 <Osal_MemCmp>
1005b508:	2800      	cmp	r0, #0
1005b50a:	d005      	beq.n	1005b518 <smp_search_blacklist+0x2c>
1005b50c:	1c64      	adds	r4, r4, #1
1005b50e:	b2e4      	uxtb	r4, r4
1005b510:	2c03      	cmp	r4, #3
1005b512:	d3ef      	bcc.n	1005b4f4 <smp_search_blacklist+0x8>
1005b514:	2041      	movs	r0, #65	; 0x41
1005b516:	bd70      	pop	{r4, r5, r6, pc}
1005b518:	6828      	ldr	r0, [r5, #0]
1005b51a:	00e1      	lsls	r1, r4, #3
1005b51c:	3080      	adds	r0, #128	; 0x80
1005b51e:	6800      	ldr	r0, [r0, #0]
1005b520:	5c40      	ldrb	r0, [r0, r1]
1005b522:	0600      	lsls	r0, r0, #24
1005b524:	d5f6      	bpl.n	1005b514 <smp_search_blacklist+0x28>
1005b526:	2000      	movs	r0, #0
1005b528:	bd70      	pop	{r4, r5, r6, pc}
1005b52a:	0000      	.short	0x0000
1005b52c:	20000d6c 	.word	0x20000d6c

1005b530 <smp_update_statistics_on_pairing_complete>:
1005b530:	b510      	push	{r4, lr}
1005b532:	6801      	ldr	r1, [r0, #0]
1005b534:	3160      	adds	r1, #96	; 0x60
1005b536:	7d09      	ldrb	r1, [r1, #20]
1005b538:	07ca      	lsls	r2, r1, #31
1005b53a:	6801      	ldr	r1, [r0, #0]
1005b53c:	7a89      	ldrb	r1, [r1, #10]
1005b53e:	d00d      	beq.n	1005b55c <smp_update_statistics_on_pairing_complete+0x2c>
1005b540:	29b0      	cmp	r1, #176	; 0xb0
1005b542:	d308      	bcc.n	1005b556 <smp_update_statistics_on_pairing_complete+0x26>
1005b544:	29f0      	cmp	r1, #240	; 0xf0
1005b546:	d806      	bhi.n	1005b556 <smp_update_statistics_on_pairing_complete+0x26>
1005b548:	4906      	ldr	r1, [pc, #24]	; (1005b564 <smp_update_statistics_on_pairing_complete+0x34>)
1005b54a:	680a      	ldr	r2, [r1, #0]
1005b54c:	7e91      	ldrb	r1, [r2, #26]
1005b54e:	078b      	lsls	r3, r1, #30
1005b550:	d001      	beq.n	1005b556 <smp_update_statistics_on_pairing_complete+0x26>
1005b552:	1e49      	subs	r1, r1, #1
1005b554:	7691      	strb	r1, [r2, #26]
1005b556:	f7e6 fb3f 	bl	10041bd8 <smp_sc_update_statistics_on_pairing_complete_ucfg>
1005b55a:	bd10      	pop	{r4, pc}
1005b55c:	29a0      	cmp	r1, #160	; 0xa0
1005b55e:	d2f1      	bcs.n	1005b544 <smp_update_statistics_on_pairing_complete+0x14>
1005b560:	e7f9      	b.n	1005b556 <smp_update_statistics_on_pairing_complete+0x26>
1005b562:	0000      	.short	0x0000
1005b564:	20000d6c 	.word	0x20000d6c

1005b568 <SMP_ACI_sc_numeric_comparison_response>:
1005b568:	b570      	push	{r4, r5, r6, lr}
1005b56a:	460d      	mov	r5, r1
1005b56c:	2446      	movs	r4, #70	; 0x46
1005b56e:	f7ff f9c1 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005b572:	2800      	cmp	r0, #0
1005b574:	d00f      	beq.n	1005b596 <SMP_ACI_sc_numeric_comparison_response+0x2e>
1005b576:	7a81      	ldrb	r1, [r0, #10]
1005b578:	29b9      	cmp	r1, #185	; 0xb9
1005b57a:	d10d      	bne.n	1005b598 <SMP_ACI_sc_numeric_comparison_response+0x30>
1005b57c:	7fc1      	ldrb	r1, [r0, #31]
1005b57e:	2904      	cmp	r1, #4
1005b580:	d10a      	bne.n	1005b598 <SMP_ACI_sc_numeric_comparison_response+0x30>
1005b582:	7ec1      	ldrb	r1, [r0, #27]
1005b584:	2d01      	cmp	r5, #1
1005b586:	d004      	beq.n	1005b592 <SMP_ACI_sc_numeric_comparison_response+0x2a>
1005b588:	2280      	movs	r2, #128	; 0x80
1005b58a:	4311      	orrs	r1, r2
1005b58c:	76c1      	strb	r1, [r0, #27]
1005b58e:	2400      	movs	r4, #0
1005b590:	e002      	b.n	1005b598 <SMP_ACI_sc_numeric_comparison_response+0x30>
1005b592:	2240      	movs	r2, #64	; 0x40
1005b594:	e7f9      	b.n	1005b58a <SMP_ACI_sc_numeric_comparison_response+0x22>
1005b596:	2440      	movs	r4, #64	; 0x40
1005b598:	4620      	mov	r0, r4
1005b59a:	bd70      	pop	{r4, r5, r6, pc}

1005b59c <SMP_ACI_sc_passkey_input_type_to_notify>:
1005b59c:	b570      	push	{r4, r5, r6, lr}
1005b59e:	460d      	mov	r5, r1
1005b5a0:	2446      	movs	r4, #70	; 0x46
1005b5a2:	f7ff f9a7 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005b5a6:	2800      	cmp	r0, #0
1005b5a8:	d011      	beq.n	1005b5ce <SMP_ACI_sc_passkey_input_type_to_notify+0x32>
1005b5aa:	7fc1      	ldrb	r1, [r0, #31]
1005b5ac:	2902      	cmp	r1, #2
1005b5ae:	d10f      	bne.n	1005b5d0 <SMP_ACI_sc_passkey_input_type_to_notify+0x34>
1005b5b0:	7ac1      	ldrb	r1, [r0, #11]
1005b5b2:	06c9      	lsls	r1, r1, #27
1005b5b4:	d50c      	bpl.n	1005b5d0 <SMP_ACI_sc_passkey_input_type_to_notify+0x34>
1005b5b6:	4907      	ldr	r1, [pc, #28]	; (1005b5d4 <SMP_ACI_sc_passkey_input_type_to_notify+0x38>)
1005b5b8:	6809      	ldr	r1, [r1, #0]
1005b5ba:	7e09      	ldrb	r1, [r1, #24]
1005b5bc:	2902      	cmp	r1, #2
1005b5be:	d107      	bne.n	1005b5d0 <SMP_ACI_sc_passkey_input_type_to_notify+0x34>
1005b5c0:	462b      	mov	r3, r5
1005b5c2:	220e      	movs	r2, #14
1005b5c4:	2100      	movs	r1, #0
1005b5c6:	f7ff fe73 	bl	1005b2b0 <smp_pairing_2octets_packet_send>
1005b5ca:	4604      	mov	r4, r0
1005b5cc:	e000      	b.n	1005b5d0 <SMP_ACI_sc_passkey_input_type_to_notify+0x34>
1005b5ce:	2440      	movs	r4, #64	; 0x40
1005b5d0:	4620      	mov	r0, r4
1005b5d2:	bd70      	pop	{r4, r5, r6, pc}
1005b5d4:	20000d6c 	.word	0x20000d6c

1005b5d8 <smp____SC_Phase_2AS2_DHKeyCheck_Send>:
1005b5d8:	b570      	push	{r4, r5, r6, lr}
1005b5da:	4605      	mov	r5, r0
1005b5dc:	8900      	ldrh	r0, [r0, #8]
1005b5de:	2220      	movs	r2, #32
1005b5e0:	0501      	lsls	r1, r0, #20
1005b5e2:	0d09      	lsrs	r1, r1, #20
1005b5e4:	2000      	movs	r0, #0
1005b5e6:	f7f9 fa21 	bl	10054a2c <PM_Get_Pckt>
1005b5ea:	0004      	movs	r4, r0
1005b5ec:	d018      	beq.n	1005b620 <smp____SC_Phase_2AS2_DHKeyCheck_Send+0x48>
1005b5ee:	2011      	movs	r0, #17
1005b5f0:	80e0      	strh	r0, [r4, #6]
1005b5f2:	68a0      	ldr	r0, [r4, #8]
1005b5f4:	210d      	movs	r1, #13
1005b5f6:	7301      	strb	r1, [r0, #12]
1005b5f8:	480d      	ldr	r0, [pc, #52]	; (1005b630 <smp____SC_Phase_2AS2_DHKeyCheck_Send+0x58>)
1005b5fa:	2210      	movs	r2, #16
1005b5fc:	6803      	ldr	r3, [r0, #0]
1005b5fe:	2105      	movs	r1, #5
1005b600:	4620      	mov	r0, r4
1005b602:	33e0      	adds	r3, #224	; 0xe0
1005b604:	f7f9 fac2 	bl	10054b8c <PM_Write_Pckt_Data>
1005b608:	2074      	movs	r0, #116	; 0x74
1005b60a:	5d40      	ldrb	r0, [r0, r5]
1005b60c:	07c0      	lsls	r0, r0, #31
1005b60e:	d009      	beq.n	1005b624 <smp____SC_Phase_2AS2_DHKeyCheck_Send+0x4c>
1005b610:	26bc      	movs	r6, #188	; 0xbc
1005b612:	4629      	mov	r1, r5
1005b614:	4620      	mov	r0, r4
1005b616:	f7fe fc9d 	bl	10059f54 <smp_send_packet>
1005b61a:	2800      	cmp	r0, #0
1005b61c:	d004      	beq.n	1005b628 <smp____SC_Phase_2AS2_DHKeyCheck_Send+0x50>
1005b61e:	e004      	b.n	1005b62a <smp____SC_Phase_2AS2_DHKeyCheck_Send+0x52>
1005b620:	2064      	movs	r0, #100	; 0x64
1005b622:	bd70      	pop	{r4, r5, r6, pc}
1005b624:	26ab      	movs	r6, #171	; 0xab
1005b626:	e7f4      	b.n	1005b612 <smp____SC_Phase_2AS2_DHKeyCheck_Send+0x3a>
1005b628:	72ae      	strb	r6, [r5, #10]
1005b62a:	2000      	movs	r0, #0
1005b62c:	bd70      	pop	{r4, r5, r6, pc}
1005b62e:	0000      	.short	0x0000
1005b630:	20000d6c 	.word	0x20000d6c

1005b634 <smp____SC_Phase_2AS2_Generate_DHKeyCheck>:
1005b634:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005b636:	b094      	sub	sp, #80	; 0x50
1005b638:	460d      	mov	r5, r1
1005b63a:	2700      	movs	r7, #0
1005b63c:	a908      	add	r1, sp, #32
1005b63e:	720f      	strb	r7, [r1, #8]
1005b640:	4604      	mov	r4, r0
1005b642:	730f      	strb	r7, [r1, #12]
1005b644:	2210      	movs	r2, #16
1005b646:	4639      	mov	r1, r7
1005b648:	a806      	add	r0, sp, #24
1005b64a:	f7e5 f89e 	bl	1004078a <Osal_MemSet>
1005b64e:	7fe0      	ldrb	r0, [r4, #31]
1005b650:	4e44      	ldr	r6, [pc, #272]	; (1005b764 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x130>)
1005b652:	2802      	cmp	r0, #2
1005b654:	d109      	bne.n	1005b66a <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x36>
1005b656:	6830      	ldr	r0, [r6, #0]
1005b658:	4669      	mov	r1, sp
1005b65a:	6900      	ldr	r0, [r0, #16]
1005b65c:	7608      	strb	r0, [r1, #24]
1005b65e:	0a02      	lsrs	r2, r0, #8
1005b660:	764a      	strb	r2, [r1, #25]
1005b662:	0c02      	lsrs	r2, r0, #16
1005b664:	768a      	strb	r2, [r1, #26]
1005b666:	0e00      	lsrs	r0, r0, #24
1005b668:	76c8      	strb	r0, [r1, #27]
1005b66a:	2d01      	cmp	r5, #1
1005b66c:	d00e      	beq.n	1005b68c <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x58>
1005b66e:	6830      	ldr	r0, [r6, #0]
1005b670:	7e62      	ldrb	r2, [r4, #25]
1005b672:	4601      	mov	r1, r0
1005b674:	3180      	adds	r1, #128	; 0x80
1005b676:	724a      	strb	r2, [r1, #9]
1005b678:	7e22      	ldrb	r2, [r4, #24]
1005b67a:	0792      	lsls	r2, r2, #30
1005b67c:	0fd2      	lsrs	r2, r2, #31
1005b67e:	728a      	strb	r2, [r1, #10]
1005b680:	7a0a      	ldrb	r2, [r1, #8]
1005b682:	72ca      	strb	r2, [r1, #11]
1005b684:	7fe1      	ldrb	r1, [r4, #31]
1005b686:	2903      	cmp	r1, #3
1005b688:	d019      	beq.n	1005b6be <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x8a>
1005b68a:	e01e      	b.n	1005b6ca <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x96>
1005b68c:	6830      	ldr	r0, [r6, #0]
1005b68e:	7e01      	ldrb	r1, [r0, #24]
1005b690:	3080      	adds	r0, #128	; 0x80
1005b692:	7241      	strb	r1, [r0, #9]
1005b694:	7e21      	ldrb	r1, [r4, #24]
1005b696:	07c9      	lsls	r1, r1, #31
1005b698:	0fc9      	lsrs	r1, r1, #31
1005b69a:	7281      	strb	r1, [r0, #10]
1005b69c:	7fe0      	ldrb	r0, [r4, #31]
1005b69e:	2803      	cmp	r0, #3
1005b6a0:	d113      	bne.n	1005b6ca <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x96>
1005b6a2:	4620      	mov	r0, r4
1005b6a4:	f7ff fdc2 	bl	1005b22c <smp_oob_check_is_remote_data_present>
1005b6a8:	2800      	cmp	r0, #0
1005b6aa:	d00e      	beq.n	1005b6ca <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x96>
1005b6ac:	ab0e      	add	r3, sp, #56	; 0x38
1005b6ae:	2201      	movs	r2, #1
1005b6b0:	2100      	movs	r1, #0
1005b6b2:	4620      	mov	r0, r4
1005b6b4:	f7ff fdd8 	bl	1005b268 <smp_oob_get_remote_data_reference>
1005b6b8:	2210      	movs	r2, #16
1005b6ba:	990e      	ldr	r1, [sp, #56]	; 0x38
1005b6bc:	e002      	b.n	1005b6c4 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x90>
1005b6be:	2210      	movs	r2, #16
1005b6c0:	4601      	mov	r1, r0
1005b6c2:	311c      	adds	r1, #28
1005b6c4:	a806      	add	r0, sp, #24
1005b6c6:	f7e5 f85c 	bl	10040782 <Osal_MemCpy>
1005b6ca:	2074      	movs	r0, #116	; 0x74
1005b6cc:	5d02      	ldrb	r2, [r0, r4]
1005b6ce:	4621      	mov	r1, r4
1005b6d0:	4620      	mov	r0, r4
1005b6d2:	07d3      	lsls	r3, r2, #31
1005b6d4:	3154      	adds	r1, #84	; 0x54
1005b6d6:	3064      	adds	r0, #100	; 0x64
1005b6d8:	2b00      	cmp	r3, #0
1005b6da:	d002      	beq.n	1005b6e2 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xae>
1005b6dc:	2d00      	cmp	r5, #0
1005b6de:	d00a      	beq.n	1005b6f6 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xc2>
1005b6e0:	e001      	b.n	1005b6e6 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xb2>
1005b6e2:	2d01      	cmp	r5, #1
1005b6e4:	d007      	beq.n	1005b6f6 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xc2>
1005b6e6:	07d3      	lsls	r3, r2, #31
1005b6e8:	432b      	orrs	r3, r5
1005b6ea:	d007      	beq.n	1005b6fc <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xc8>
1005b6ec:	07d3      	lsls	r3, r2, #31
1005b6ee:	d010      	beq.n	1005b712 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xde>
1005b6f0:	2d01      	cmp	r5, #1
1005b6f2:	d003      	beq.n	1005b6fc <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xc8>
1005b6f4:	e00d      	b.n	1005b712 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xde>
1005b6f6:	910d      	str	r1, [sp, #52]	; 0x34
1005b6f8:	900c      	str	r0, [sp, #48]	; 0x30
1005b6fa:	e001      	b.n	1005b700 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xcc>
1005b6fc:	910c      	str	r1, [sp, #48]	; 0x30
1005b6fe:	900d      	str	r0, [sp, #52]	; 0x34
1005b700:	2d01      	cmp	r5, #1
1005b702:	d008      	beq.n	1005b716 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xe2>
1005b704:	07d0      	lsls	r0, r2, #31
1005b706:	4328      	orrs	r0, r5
1005b708:	d00b      	beq.n	1005b722 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xee>
1005b70a:	07d0      	lsls	r0, r2, #31
1005b70c:	d001      	beq.n	1005b712 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xde>
1005b70e:	2d00      	cmp	r5, #0
1005b710:	d007      	beq.n	1005b722 <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xee>
1005b712:	2747      	movs	r7, #71	; 0x47
1005b714:	e022      	b.n	1005b75c <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0x128>
1005b716:	a811      	add	r0, sp, #68	; 0x44
1005b718:	ab0b      	add	r3, sp, #44	; 0x2c
1005b71a:	aa0f      	add	r2, sp, #60	; 0x3c
1005b71c:	a90a      	add	r1, sp, #40	; 0x28
1005b71e:	9000      	str	r0, [sp, #0]
1005b720:	e004      	b.n	1005b72c <smp____SC_Phase_2AS2_Generate_DHKeyCheck+0xf8>
1005b722:	a80f      	add	r0, sp, #60	; 0x3c
1005b724:	ab0a      	add	r3, sp, #40	; 0x28
1005b726:	aa11      	add	r2, sp, #68	; 0x44
1005b728:	a90b      	add	r1, sp, #44	; 0x2c
1005b72a:	9000      	str	r0, [sp, #0]
1005b72c:	4620      	mov	r0, r4
1005b72e:	f000 f81b 	bl	1005b768 <smp____SC_Phase_2AS2__Set_Addresses>
1005b732:	aa08      	add	r2, sp, #32
1005b734:	7b10      	ldrb	r0, [r2, #12]
1005b736:	aa0f      	add	r2, sp, #60	; 0x3c
1005b738:	9b16      	ldr	r3, [sp, #88]	; 0x58
1005b73a:	9202      	str	r2, [sp, #8]
1005b73c:	a911      	add	r1, sp, #68	; 0x44
1005b73e:	ac03      	add	r4, sp, #12
1005b740:	c40b      	stmia	r4!, {r0, r1, r3}
1005b742:	6830      	ldr	r0, [r6, #0]
1005b744:	aa08      	add	r2, sp, #32
1005b746:	7a12      	ldrb	r2, [r2, #8]
1005b748:	4601      	mov	r1, r0
1005b74a:	3189      	adds	r1, #137	; 0x89
1005b74c:	9201      	str	r2, [sp, #4]
1005b74e:	9100      	str	r1, [sp, #0]
1005b750:	ab06      	add	r3, sp, #24
1005b752:	30d0      	adds	r0, #208	; 0xd0
1005b754:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005b756:	990d      	ldr	r1, [sp, #52]	; 0x34
1005b758:	f7fe fd00 	bl	1005a15c <SMA_SC_Gen_f6_Check_Val>
1005b75c:	4638      	mov	r0, r7
1005b75e:	b017      	add	sp, #92	; 0x5c
1005b760:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005b762:	0000      	.short	0x0000
1005b764:	20000d6c 	.word	0x20000d6c

1005b768 <smp____SC_Phase_2AS2__Set_Addresses>:
1005b768:	b570      	push	{r4, r5, r6, lr}
1005b76a:	4604      	mov	r4, r0
1005b76c:	3060      	adds	r0, #96	; 0x60
1005b76e:	7d40      	ldrb	r0, [r0, #21]
1005b770:	9e04      	ldr	r6, [sp, #16]
1005b772:	461d      	mov	r5, r3
1005b774:	7008      	strb	r0, [r1, #0]
1005b776:	4613      	mov	r3, r2
1005b778:	4621      	mov	r1, r4
1005b77a:	2206      	movs	r2, #6
1005b77c:	3176      	adds	r1, #118	; 0x76
1005b77e:	4618      	mov	r0, r3
1005b780:	f7e4 ffff 	bl	10040782 <Osal_MemCpy>
1005b784:	7860      	ldrb	r0, [r4, #1]
1005b786:	2206      	movs	r2, #6
1005b788:	07c0      	lsls	r0, r0, #31
1005b78a:	0fc0      	lsrs	r0, r0, #31
1005b78c:	7028      	strb	r0, [r5, #0]
1005b78e:	1ca1      	adds	r1, r4, #2
1005b790:	4630      	mov	r0, r6
1005b792:	f7e4 fff6 	bl	10040782 <Osal_MemCpy>
1005b796:	bd70      	pop	{r4, r5, r6, pc}

1005b798 <smp_sc_check_for_ecc_pk_generation_request>:
1005b798:	b510      	push	{r4, lr}
1005b79a:	4c0a      	ldr	r4, [pc, #40]	; (1005b7c4 <smp_sc_check_for_ecc_pk_generation_request+0x2c>)
1005b79c:	6820      	ldr	r0, [r4, #0]
1005b79e:	7e80      	ldrb	r0, [r0, #26]
1005b7a0:	0641      	lsls	r1, r0, #25
1005b7a2:	d50d      	bpl.n	1005b7c0 <smp_sc_check_for_ecc_pk_generation_request+0x28>
1005b7a4:	2190      	movs	r1, #144	; 0x90
1005b7a6:	4208      	tst	r0, r1
1005b7a8:	d10a      	bne.n	1005b7c0 <smp_sc_check_for_ecc_pk_generation_request+0x28>
1005b7aa:	f7f1 fbaf 	bl	1004cf0c <hci_le_read_local_p256_public_key_api>
1005b7ae:	2800      	cmp	r0, #0
1005b7b0:	d106      	bne.n	1005b7c0 <smp_sc_check_for_ecc_pk_generation_request+0x28>
1005b7b2:	6821      	ldr	r1, [r4, #0]
1005b7b4:	22bf      	movs	r2, #191	; 0xbf
1005b7b6:	7e88      	ldrb	r0, [r1, #26]
1005b7b8:	4010      	ands	r0, r2
1005b7ba:	2280      	movs	r2, #128	; 0x80
1005b7bc:	4310      	orrs	r0, r2
1005b7be:	7688      	strb	r0, [r1, #26]
1005b7c0:	bd10      	pop	{r4, pc}
1005b7c2:	0000      	.short	0x0000
1005b7c4:	20000d6c 	.word	0x20000d6c

1005b7c8 <smp_sc_continue_on_exclusive_sc_pairing>:
1005b7c8:	b530      	push	{r4, r5, lr}
1005b7ca:	4604      	mov	r4, r0
1005b7cc:	7ac0      	ldrb	r0, [r0, #11]
1005b7ce:	2500      	movs	r5, #0
1005b7d0:	0700      	lsls	r0, r0, #28
1005b7d2:	d510      	bpl.n	1005b7f6 <smp_sc_continue_on_exclusive_sc_pairing+0x2e>
1005b7d4:	8920      	ldrh	r0, [r4, #8]
1005b7d6:	f000 f86d 	bl	1005b8b4 <smp_sc_is_another_sc_pairing_ongoing>
1005b7da:	2800      	cmp	r0, #0
1005b7dc:	d001      	beq.n	1005b7e2 <smp_sc_continue_on_exclusive_sc_pairing+0x1a>
1005b7de:	2508      	movs	r5, #8
1005b7e0:	e009      	b.n	1005b7f6 <smp_sc_continue_on_exclusive_sc_pairing+0x2e>
1005b7e2:	7ae0      	ldrb	r0, [r4, #11]
1005b7e4:	2101      	movs	r1, #1
1005b7e6:	4308      	orrs	r0, r1
1005b7e8:	72e0      	strb	r0, [r4, #11]
1005b7ea:	4804      	ldr	r0, [pc, #16]	; (1005b7fc <smp_sc_continue_on_exclusive_sc_pairing+0x34>)
1005b7ec:	2204      	movs	r2, #4
1005b7ee:	6800      	ldr	r0, [r0, #0]
1005b7f0:	7e81      	ldrb	r1, [r0, #26]
1005b7f2:	4311      	orrs	r1, r2
1005b7f4:	7681      	strb	r1, [r0, #26]
1005b7f6:	4628      	mov	r0, r5
1005b7f8:	bd30      	pop	{r4, r5, pc}
1005b7fa:	0000      	.short	0x0000
1005b7fc:	20000d6c 	.word	0x20000d6c

1005b800 <smp_sc_force_debug_private_key>:
1005b800:	b510      	push	{r4, lr}
1005b802:	4806      	ldr	r0, [pc, #24]	; (1005b81c <smp_sc_force_debug_private_key+0x1c>)
1005b804:	2379      	movs	r3, #121	; 0x79
1005b806:	6800      	ldr	r0, [r0, #0]
1005b808:	011b      	lsls	r3, r3, #4
1005b80a:	2220      	movs	r2, #32
1005b80c:	4902      	ldr	r1, [pc, #8]	; (1005b818 <smp_sc_force_debug_private_key+0x18>)
1005b80e:	18c0      	adds	r0, r0, r3
1005b810:	f7e4 ffb7 	bl	10040782 <Osal_MemCpy>
1005b814:	bd10      	pop	{r4, pc}
1005b816:	0000      	.short	0x0000
1005b818:	1005ff2d 	.word	0x1005ff2d
1005b81c:	20000d64 	.word	0x20000d64

1005b820 <smp_sc_generate_new_local_oob_data>:
1005b820:	b538      	push	{r3, r4, r5, lr}
1005b822:	4c14      	ldr	r4, [pc, #80]	; (1005b874 <smp_sc_generate_new_local_oob_data+0x54>)
1005b824:	2500      	movs	r5, #0
1005b826:	6822      	ldr	r2, [r4, #0]
1005b828:	2140      	movs	r1, #64	; 0x40
1005b82a:	4628      	mov	r0, r5
1005b82c:	323c      	adds	r2, #60	; 0x3c
1005b82e:	f000 fa8c 	bl	1005bd4a <is_Buffer_All_Set_To>
1005b832:	2800      	cmp	r0, #0
1005b834:	d10a      	bne.n	1005b84c <smp_sc_generate_new_local_oob_data+0x2c>
1005b836:	4810      	ldr	r0, [pc, #64]	; (1005b878 <smp_sc_generate_new_local_oob_data+0x58>)
1005b838:	2179      	movs	r1, #121	; 0x79
1005b83a:	6800      	ldr	r0, [r0, #0]
1005b83c:	0109      	lsls	r1, r1, #4
1005b83e:	1842      	adds	r2, r0, r1
1005b840:	2120      	movs	r1, #32
1005b842:	2000      	movs	r0, #0
1005b844:	f000 fa81 	bl	1005bd4a <is_Buffer_All_Set_To>
1005b848:	2800      	cmp	r0, #0
1005b84a:	d001      	beq.n	1005b850 <smp_sc_generate_new_local_oob_data+0x30>
1005b84c:	2506      	movs	r5, #6
1005b84e:	e00f      	b.n	1005b870 <smp_sc_generate_new_local_oob_data+0x50>
1005b850:	6820      	ldr	r0, [r4, #0]
1005b852:	2110      	movs	r1, #16
1005b854:	301c      	adds	r0, #28
1005b856:	f7f0 ff5f 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
1005b85a:	6821      	ldr	r1, [r4, #0]
1005b85c:	2300      	movs	r3, #0
1005b85e:	4608      	mov	r0, r1
1005b860:	460a      	mov	r2, r1
1005b862:	302c      	adds	r0, #44	; 0x2c
1005b864:	313c      	adds	r1, #60	; 0x3c
1005b866:	9000      	str	r0, [sp, #0]
1005b868:	321c      	adds	r2, #28
1005b86a:	4608      	mov	r0, r1
1005b86c:	f7fe fbdd 	bl	1005a02a <SMA_SC_Gen_f4_Confirm>
1005b870:	4628      	mov	r0, r5
1005b872:	bd38      	pop	{r3, r4, r5, pc}
1005b874:	20000d6c 	.word	0x20000d6c
1005b878:	20000d64 	.word	0x20000d64

1005b87c <smp_sc_init>:
1005b87c:	b510      	push	{r4, lr}
1005b87e:	2801      	cmp	r0, #1
1005b880:	d113      	bne.n	1005b8aa <smp_sc_init+0x2e>
1005b882:	4c0a      	ldr	r4, [pc, #40]	; (1005b8ac <smp_sc_init+0x30>)
1005b884:	2208      	movs	r2, #8
1005b886:	6820      	ldr	r0, [r4, #0]
1005b888:	7e81      	ldrb	r1, [r0, #26]
1005b88a:	4311      	orrs	r1, r2
1005b88c:	7681      	strb	r1, [r0, #26]
1005b88e:	2220      	movs	r2, #32
1005b890:	4907      	ldr	r1, [pc, #28]	; (1005b8b0 <smp_sc_init+0x34>)
1005b892:	303c      	adds	r0, #60	; 0x3c
1005b894:	f7e4 ff75 	bl	10040782 <Osal_MemCpy>
1005b898:	4905      	ldr	r1, [pc, #20]	; (1005b8b0 <smp_sc_init+0x34>)
1005b89a:	6820      	ldr	r0, [r4, #0]
1005b89c:	2220      	movs	r2, #32
1005b89e:	3120      	adds	r1, #32
1005b8a0:	305c      	adds	r0, #92	; 0x5c
1005b8a2:	f7e4 ff6e 	bl	10040782 <Osal_MemCpy>
1005b8a6:	f7ff ffab 	bl	1005b800 <smp_sc_force_debug_private_key>
1005b8aa:	bd10      	pop	{r4, pc}
1005b8ac:	20000d6c 	.word	0x20000d6c
1005b8b0:	1005feed 	.word	0x1005feed

1005b8b4 <smp_sc_is_another_sc_pairing_ongoing>:
1005b8b4:	b570      	push	{r4, r5, r6, lr}
1005b8b6:	4a0d      	ldr	r2, [pc, #52]	; (1005b8ec <smp_sc_is_another_sc_pairing_ongoing+0x38>)
1005b8b8:	4605      	mov	r5, r0
1005b8ba:	6813      	ldr	r3, [r2, #0]
1005b8bc:	4a0c      	ldr	r2, [pc, #48]	; (1005b8f0 <smp_sc_is_another_sc_pairing_ongoing+0x3c>)
1005b8be:	2000      	movs	r0, #0
1005b8c0:	6812      	ldr	r2, [r2, #0]
1005b8c2:	4601      	mov	r1, r0
1005b8c4:	32a0      	adds	r2, #160	; 0xa0
1005b8c6:	7b14      	ldrb	r4, [r2, #12]
1005b8c8:	e00d      	b.n	1005b8e6 <smp_sc_is_another_sc_pairing_ongoing+0x32>
1005b8ca:	227c      	movs	r2, #124	; 0x7c
1005b8cc:	6fde      	ldr	r6, [r3, #124]	; 0x7c
1005b8ce:	434a      	muls	r2, r1
1005b8d0:	18b2      	adds	r2, r6, r2
1005b8d2:	7ad6      	ldrb	r6, [r2, #11]
1005b8d4:	07f6      	lsls	r6, r6, #31
1005b8d6:	d004      	beq.n	1005b8e2 <smp_sc_is_another_sc_pairing_ongoing+0x2e>
1005b8d8:	8912      	ldrh	r2, [r2, #8]
1005b8da:	42aa      	cmp	r2, r5
1005b8dc:	d001      	beq.n	1005b8e2 <smp_sc_is_another_sc_pairing_ongoing+0x2e>
1005b8de:	2001      	movs	r0, #1
1005b8e0:	bd70      	pop	{r4, r5, r6, pc}
1005b8e2:	1c49      	adds	r1, r1, #1
1005b8e4:	b2c9      	uxtb	r1, r1
1005b8e6:	428c      	cmp	r4, r1
1005b8e8:	d8ef      	bhi.n	1005b8ca <smp_sc_is_another_sc_pairing_ongoing+0x16>
1005b8ea:	bd70      	pop	{r4, r5, r6, pc}
1005b8ec:	20000d6c 	.word	0x20000d6c
1005b8f0:	20000d64 	.word	0x20000d64

1005b8f4 <smp_sc_is_debug_key_usage_forced>:
1005b8f4:	4802      	ldr	r0, [pc, #8]	; (1005b900 <smp_sc_is_debug_key_usage_forced+0xc>)
1005b8f6:	6800      	ldr	r0, [r0, #0]
1005b8f8:	7e80      	ldrb	r0, [r0, #26]
1005b8fa:	0700      	lsls	r0, r0, #28
1005b8fc:	0fc0      	lsrs	r0, r0, #31
1005b8fe:	4770      	bx	lr
1005b900:	20000d6c 	.word	0x20000d6c

1005b904 <smp_sc_pairing_oob_confirm_receive_verify>:
1005b904:	b570      	push	{r4, r5, r6, lr}
1005b906:	b088      	sub	sp, #32
1005b908:	4604      	mov	r4, r0
1005b90a:	2500      	movs	r5, #0
1005b90c:	f7ff fc8e 	bl	1005b22c <smp_oob_check_is_remote_data_present>
1005b910:	4e1e      	ldr	r6, [pc, #120]	; (1005b98c <smp_sc_pairing_oob_confirm_receive_verify+0x88>)
1005b912:	2801      	cmp	r0, #1
1005b914:	d123      	bne.n	1005b95e <smp_sc_pairing_oob_confirm_receive_verify+0x5a>
1005b916:	ab05      	add	r3, sp, #20
1005b918:	2201      	movs	r2, #1
1005b91a:	2100      	movs	r1, #0
1005b91c:	4620      	mov	r0, r4
1005b91e:	f7ff fca3 	bl	1005b268 <smp_oob_get_remote_data_reference>
1005b922:	ab06      	add	r3, sp, #24
1005b924:	2202      	movs	r2, #2
1005b926:	2100      	movs	r1, #0
1005b928:	4620      	mov	r0, r4
1005b92a:	f7ff fc9d 	bl	1005b268 <smp_oob_get_remote_data_reference>
1005b92e:	a801      	add	r0, sp, #4
1005b930:	9000      	str	r0, [sp, #0]
1005b932:	6831      	ldr	r1, [r6, #0]
1005b934:	2300      	movs	r3, #0
1005b936:	3190      	adds	r1, #144	; 0x90
1005b938:	9a05      	ldr	r2, [sp, #20]
1005b93a:	4608      	mov	r0, r1
1005b93c:	f7fe fb75 	bl	1005a02a <SMA_SC_Gen_f4_Confirm>
1005b940:	2210      	movs	r2, #16
1005b942:	a901      	add	r1, sp, #4
1005b944:	9806      	ldr	r0, [sp, #24]
1005b946:	f7e4 ff24 	bl	10040792 <Osal_MemCmp>
1005b94a:	2800      	cmp	r0, #0
1005b94c:	d007      	beq.n	1005b95e <smp_sc_pairing_oob_confirm_receive_verify+0x5a>
1005b94e:	2104      	movs	r1, #4
1005b950:	2301      	movs	r3, #1
1005b952:	2200      	movs	r2, #0
1005b954:	4620      	mov	r0, r4
1005b956:	f7ff fd09 	bl	1005b36c <smp_pairing_failed_send>
1005b95a:	4605      	mov	r5, r0
1005b95c:	e010      	b.n	1005b980 <smp_sc_pairing_oob_confirm_receive_verify+0x7c>
1005b95e:	7e20      	ldrb	r0, [r4, #24]
1005b960:	07c1      	lsls	r1, r0, #31
1005b962:	d007      	beq.n	1005b974 <smp_sc_pairing_oob_confirm_receive_verify+0x70>
1005b964:	0780      	lsls	r0, r0, #30
1005b966:	d405      	bmi.n	1005b974 <smp_sc_pairing_oob_confirm_receive_verify+0x70>
1005b968:	6830      	ldr	r0, [r6, #0]
1005b96a:	2210      	movs	r2, #16
1005b96c:	2100      	movs	r1, #0
1005b96e:	301c      	adds	r0, #28
1005b970:	f7e4 ff0b 	bl	1004078a <Osal_MemSet>
1005b974:	2074      	movs	r0, #116	; 0x74
1005b976:	5d00      	ldrb	r0, [r0, r4]
1005b978:	07c0      	lsls	r0, r0, #31
1005b97a:	d004      	beq.n	1005b986 <smp_sc_pairing_oob_confirm_receive_verify+0x82>
1005b97c:	20b6      	movs	r0, #182	; 0xb6
1005b97e:	72a0      	strb	r0, [r4, #10]
1005b980:	4628      	mov	r0, r5
1005b982:	b008      	add	sp, #32
1005b984:	bd70      	pop	{r4, r5, r6, pc}
1005b986:	20a9      	movs	r0, #169	; 0xa9
1005b988:	e7f9      	b.n	1005b97e <smp_sc_pairing_oob_confirm_receive_verify+0x7a>
1005b98a:	0000      	.short	0x0000
1005b98c:	20000d6c 	.word	0x20000d6c

1005b990 <smp_sc_pairing_public_key_receive>:
1005b990:	b570      	push	{r4, r5, r6, lr}
1005b992:	4d27      	ldr	r5, [pc, #156]	; (1005ba30 <smp_sc_pairing_public_key_receive+0xa0>)
1005b994:	460e      	mov	r6, r1
1005b996:	682b      	ldr	r3, [r5, #0]
1005b998:	7e99      	ldrb	r1, [r3, #26]
1005b99a:	0609      	lsls	r1, r1, #24
1005b99c:	d501      	bpl.n	1005b9a2 <smp_sc_pairing_public_key_receive+0x12>
1005b99e:	243a      	movs	r4, #58	; 0x3a
1005b9a0:	e044      	b.n	1005ba2c <smp_sc_pairing_public_key_receive+0x9c>
1005b9a2:	2240      	movs	r2, #64	; 0x40
1005b9a4:	2105      	movs	r1, #5
1005b9a6:	3390      	adds	r3, #144	; 0x90
1005b9a8:	f7f9 f800 	bl	100549ac <PM_Copy_Pckt_Data>
1005b9ac:	6828      	ldr	r0, [r5, #0]
1005b9ae:	2290      	movs	r2, #144	; 0x90
1005b9b0:	7e81      	ldrb	r1, [r0, #26]
1005b9b2:	4211      	tst	r1, r2
1005b9b4:	d102      	bne.n	1005b9bc <smp_sc_pairing_public_key_receive+0x2c>
1005b9b6:	0689      	lsls	r1, r1, #26
1005b9b8:	0f89      	lsrs	r1, r1, #30
1005b9ba:	d001      	beq.n	1005b9c0 <smp_sc_pairing_public_key_receive+0x30>
1005b9bc:	2438      	movs	r4, #56	; 0x38
1005b9be:	e035      	b.n	1005ba2c <smp_sc_pairing_public_key_receive+0x9c>
1005b9c0:	3090      	adds	r0, #144	; 0x90
1005b9c2:	f7f1 fa2f 	bl	1004ce24 <hci_le_generate_dhkey_api>
1005b9c6:	2800      	cmp	r0, #0
1005b9c8:	d005      	beq.n	1005b9d6 <smp_sc_pairing_public_key_receive+0x46>
1005b9ca:	4604      	mov	r4, r0
1005b9cc:	2812      	cmp	r0, #18
1005b9ce:	d022      	beq.n	1005ba16 <smp_sc_pairing_public_key_receive+0x86>
1005b9d0:	2c1f      	cmp	r4, #31
1005b9d2:	d024      	beq.n	1005ba1e <smp_sc_pairing_public_key_receive+0x8e>
1005b9d4:	e02a      	b.n	1005ba2c <smp_sc_pairing_public_key_receive+0x9c>
1005b9d6:	682b      	ldr	r3, [r5, #0]
1005b9d8:	2210      	movs	r2, #16
1005b9da:	7e99      	ldrb	r1, [r3, #26]
1005b9dc:	4604      	mov	r4, r0
1005b9de:	4311      	orrs	r1, r2
1005b9e0:	7699      	strb	r1, [r3, #26]
1005b9e2:	7af0      	ldrb	r0, [r6, #11]
1005b9e4:	21c0      	movs	r1, #192	; 0xc0
1005b9e6:	4308      	orrs	r0, r1
1005b9e8:	72f0      	strb	r0, [r6, #11]
1005b9ea:	4618      	mov	r0, r3
1005b9ec:	4911      	ldr	r1, [pc, #68]	; (1005ba34 <smp_sc_pairing_public_key_receive+0xa4>)
1005b9ee:	2220      	movs	r2, #32
1005b9f0:	3090      	adds	r0, #144	; 0x90
1005b9f2:	f7e4 fece 	bl	10040792 <Osal_MemCmp>
1005b9f6:	2800      	cmp	r0, #0
1005b9f8:	d118      	bne.n	1005ba2c <smp_sc_pairing_public_key_receive+0x9c>
1005b9fa:	490e      	ldr	r1, [pc, #56]	; (1005ba34 <smp_sc_pairing_public_key_receive+0xa4>)
1005b9fc:	6828      	ldr	r0, [r5, #0]
1005b9fe:	3120      	adds	r1, #32
1005ba00:	2220      	movs	r2, #32
1005ba02:	30b0      	adds	r0, #176	; 0xb0
1005ba04:	f7e4 fec5 	bl	10040792 <Osal_MemCmp>
1005ba08:	2800      	cmp	r0, #0
1005ba0a:	d10f      	bne.n	1005ba2c <smp_sc_pairing_public_key_receive+0x9c>
1005ba0c:	7af0      	ldrb	r0, [r6, #11]
1005ba0e:	2104      	movs	r1, #4
1005ba10:	4308      	orrs	r0, r1
1005ba12:	72f0      	strb	r0, [r6, #11]
1005ba14:	e00a      	b.n	1005ba2c <smp_sc_pairing_public_key_receive+0x9c>
1005ba16:	2301      	movs	r3, #1
1005ba18:	2200      	movs	r2, #0
1005ba1a:	210b      	movs	r1, #11
1005ba1c:	e002      	b.n	1005ba24 <smp_sc_pairing_public_key_receive+0x94>
1005ba1e:	2301      	movs	r3, #1
1005ba20:	2200      	movs	r2, #0
1005ba22:	2108      	movs	r1, #8
1005ba24:	4630      	mov	r0, r6
1005ba26:	f7ff fca1 	bl	1005b36c <smp_pairing_failed_send>
1005ba2a:	2400      	movs	r4, #0
1005ba2c:	4620      	mov	r0, r4
1005ba2e:	bd70      	pop	{r4, r5, r6, pc}
1005ba30:	20000d6c 	.word	0x20000d6c
1005ba34:	1005feed 	.word	0x1005feed

1005ba38 <smp_sc_pairing_public_key_send>:
1005ba38:	b570      	push	{r4, r5, r6, lr}
1005ba3a:	4606      	mov	r6, r0
1005ba3c:	8900      	ldrh	r0, [r0, #8]
1005ba3e:	2541      	movs	r5, #65	; 0x41
1005ba40:	0501      	lsls	r1, r0, #20
1005ba42:	0d09      	lsrs	r1, r1, #20
1005ba44:	2220      	movs	r2, #32
1005ba46:	2000      	movs	r0, #0
1005ba48:	f7f8 fff0 	bl	10054a2c <PM_Get_Pckt>
1005ba4c:	0004      	movs	r4, r0
1005ba4e:	d025      	beq.n	1005ba9c <smp_sc_pairing_public_key_send+0x64>
1005ba50:	2100      	movs	r1, #0
1005ba52:	2245      	movs	r2, #69	; 0x45
1005ba54:	68a0      	ldr	r0, [r4, #8]
1005ba56:	f7f9 f863 	bl	10054b20 <PM_Resize_Pckt_Pdu_Size>
1005ba5a:	0005      	movs	r5, r0
1005ba5c:	d11e      	bne.n	1005ba9c <smp_sc_pairing_public_key_send+0x64>
1005ba5e:	2041      	movs	r0, #65	; 0x41
1005ba60:	80e0      	strh	r0, [r4, #6]
1005ba62:	68a0      	ldr	r0, [r4, #8]
1005ba64:	210c      	movs	r1, #12
1005ba66:	7301      	strb	r1, [r0, #12]
1005ba68:	480d      	ldr	r0, [pc, #52]	; (1005baa0 <smp_sc_pairing_public_key_send+0x68>)
1005ba6a:	2240      	movs	r2, #64	; 0x40
1005ba6c:	6803      	ldr	r3, [r0, #0]
1005ba6e:	2105      	movs	r1, #5
1005ba70:	4620      	mov	r0, r4
1005ba72:	333c      	adds	r3, #60	; 0x3c
1005ba74:	f7f9 f88a 	bl	10054b8c <PM_Write_Pckt_Data>
1005ba78:	4631      	mov	r1, r6
1005ba7a:	4620      	mov	r0, r4
1005ba7c:	f7fe fa6a 	bl	10059f54 <smp_send_packet>
1005ba80:	0005      	movs	r5, r0
1005ba82:	d10b      	bne.n	1005ba9c <smp_sc_pairing_public_key_send+0x64>
1005ba84:	7af0      	ldrb	r0, [r6, #11]
1005ba86:	2120      	movs	r1, #32
1005ba88:	4308      	orrs	r0, r1
1005ba8a:	72f0      	strb	r0, [r6, #11]
1005ba8c:	f7ff ff32 	bl	1005b8f4 <smp_sc_is_debug_key_usage_forced>
1005ba90:	2800      	cmp	r0, #0
1005ba92:	d003      	beq.n	1005ba9c <smp_sc_pairing_public_key_send+0x64>
1005ba94:	7af0      	ldrb	r0, [r6, #11]
1005ba96:	2104      	movs	r1, #4
1005ba98:	4308      	orrs	r0, r1
1005ba9a:	72f0      	strb	r0, [r6, #11]
1005ba9c:	4628      	mov	r0, r5
1005ba9e:	bd70      	pop	{r4, r5, r6, pc}
1005baa0:	20000d6c 	.word	0x20000d6c

1005baa4 <smp_sc_phase_2as2_dhkey_check_receive>:
1005baa4:	b530      	push	{r4, r5, lr}
1005baa6:	b089      	sub	sp, #36	; 0x24
1005baa8:	460c      	mov	r4, r1
1005baaa:	466b      	mov	r3, sp
1005baac:	2210      	movs	r2, #16
1005baae:	2105      	movs	r1, #5
1005bab0:	f7f8 ff7c 	bl	100549ac <PM_Copy_Pckt_Data>
1005bab4:	aa04      	add	r2, sp, #16
1005bab6:	2100      	movs	r1, #0
1005bab8:	4620      	mov	r0, r4
1005baba:	f7ff fdbb 	bl	1005b634 <smp____SC_Phase_2AS2_Generate_DHKeyCheck>
1005babe:	0005      	movs	r5, r0
1005bac0:	d106      	bne.n	1005bad0 <smp_sc_phase_2as2_dhkey_check_receive+0x2c>
1005bac2:	2210      	movs	r2, #16
1005bac4:	a904      	add	r1, sp, #16
1005bac6:	4668      	mov	r0, sp
1005bac8:	f7e4 fe63 	bl	10040792 <Osal_MemCmp>
1005bacc:	2800      	cmp	r0, #0
1005bace:	d006      	beq.n	1005bade <smp_sc_phase_2as2_dhkey_check_receive+0x3a>
1005bad0:	2301      	movs	r3, #1
1005bad2:	2200      	movs	r2, #0
1005bad4:	210b      	movs	r1, #11
1005bad6:	4620      	mov	r0, r4
1005bad8:	f7ff fc48 	bl	1005b36c <smp_pairing_failed_send>
1005badc:	e017      	b.n	1005bb0e <smp_sc_phase_2as2_dhkey_check_receive+0x6a>
1005bade:	2074      	movs	r0, #116	; 0x74
1005bae0:	5d00      	ldrb	r0, [r0, r4]
1005bae2:	07c0      	lsls	r0, r0, #31
1005bae4:	d003      	beq.n	1005baee <smp_sc_phase_2as2_dhkey_check_receive+0x4a>
1005bae6:	4620      	mov	r0, r4
1005bae8:	f7ff fd76 	bl	1005b5d8 <smp____SC_Phase_2AS2_DHKeyCheck_Send>
1005baec:	e010      	b.n	1005bb10 <smp_sc_phase_2as2_dhkey_check_receive+0x6c>
1005baee:	7f20      	ldrb	r0, [r4, #28]
1005baf0:	2110      	movs	r1, #16
1005baf2:	1a0a      	subs	r2, r1, r0
1005baf4:	4621      	mov	r1, r4
1005baf6:	312a      	adds	r1, #42	; 0x2a
1005baf8:	1840      	adds	r0, r0, r1
1005bafa:	2100      	movs	r1, #0
1005bafc:	f7e4 fe45 	bl	1004078a <Osal_MemSet>
1005bb00:	7ba0      	ldrb	r0, [r4, #14]
1005bb02:	2102      	movs	r1, #2
1005bb04:	4308      	orrs	r0, r1
1005bb06:	73a0      	strb	r0, [r4, #14]
1005bb08:	4620      	mov	r0, r4
1005bb0a:	f7e6 f80b 	bl	10041b24 <smp_MI_Start_Encryption_ucfg>
1005bb0e:	4605      	mov	r5, r0
1005bb10:	4628      	mov	r0, r5
1005bb12:	b009      	add	sp, #36	; 0x24
1005bb14:	bd30      	pop	{r4, r5, pc}
	...

1005bb18 <smp_sc_phase_2as2_start>:
1005bb18:	b5f0      	push	{r4, r5, r6, r7, lr}
1005bb1a:	4d27      	ldr	r5, [pc, #156]	; (1005bbb8 <smp_sc_phase_2as2_start+0xa0>)
1005bb1c:	4604      	mov	r4, r0
1005bb1e:	6829      	ldr	r1, [r5, #0]
1005bb20:	2000      	movs	r0, #0
1005bb22:	7e8a      	ldrb	r2, [r1, #26]
1005bb24:	b093      	sub	sp, #76	; 0x4c
1005bb26:	0692      	lsls	r2, r2, #26
1005bb28:	0f92      	lsrs	r2, r2, #30
1005bb2a:	2a03      	cmp	r2, #3
1005bb2c:	d138      	bne.n	1005bba0 <smp_sc_phase_2as2_start+0x88>
1005bb2e:	2220      	movs	r2, #32
1005bb30:	a807      	add	r0, sp, #28
1005bb32:	31d0      	adds	r1, #208	; 0xd0
1005bb34:	f7e4 fe25 	bl	10040782 <Osal_MemCpy>
1005bb38:	6828      	ldr	r0, [r5, #0]
1005bb3a:	22cf      	movs	r2, #207	; 0xcf
1005bb3c:	7e81      	ldrb	r1, [r0, #26]
1005bb3e:	4626      	mov	r6, r4
1005bb40:	4011      	ands	r1, r2
1005bb42:	7681      	strb	r1, [r0, #26]
1005bb44:	3660      	adds	r6, #96	; 0x60
1005bb46:	7d30      	ldrb	r0, [r6, #20]
1005bb48:	af11      	add	r7, sp, #68	; 0x44
1005bb4a:	07c0      	lsls	r0, r0, #31
1005bb4c:	d02a      	beq.n	1005bba4 <smp_sc_phase_2as2_start+0x8c>
1005bb4e:	a80f      	add	r0, sp, #60	; 0x3c
1005bb50:	ab05      	add	r3, sp, #20
1005bb52:	463a      	mov	r2, r7
1005bb54:	a906      	add	r1, sp, #24
1005bb56:	9000      	str	r0, [sp, #0]
1005bb58:	4620      	mov	r0, r4
1005bb5a:	f7ff fe05 	bl	1005b768 <smp____SC_Phase_2AS2__Set_Addresses>
1005bb5e:	466a      	mov	r2, sp
1005bb60:	6829      	ldr	r1, [r5, #0]
1005bb62:	7e12      	ldrb	r2, [r2, #24]
1005bb64:	4620      	mov	r0, r4
1005bb66:	31d0      	adds	r1, #208	; 0xd0
1005bb68:	302a      	adds	r0, #42	; 0x2a
1005bb6a:	9103      	str	r1, [sp, #12]
1005bb6c:	9004      	str	r0, [sp, #16]
1005bb6e:	a80f      	add	r0, sp, #60	; 0x3c
1005bb70:	466b      	mov	r3, sp
1005bb72:	c385      	stmia	r3!, {r0, r2, r7}
1005bb74:	466a      	mov	r2, sp
1005bb76:	7d13      	ldrb	r3, [r2, #20]
1005bb78:	4622      	mov	r2, r4
1005bb7a:	4621      	mov	r1, r4
1005bb7c:	3264      	adds	r2, #100	; 0x64
1005bb7e:	3154      	adds	r1, #84	; 0x54
1005bb80:	a807      	add	r0, sp, #28
1005bb82:	f7fe fa7b 	bl	1005a07c <SMA_SC_Gen_f5_Keys>
1005bb86:	682a      	ldr	r2, [r5, #0]
1005bb88:	2101      	movs	r1, #1
1005bb8a:	4620      	mov	r0, r4
1005bb8c:	32e0      	adds	r2, #224	; 0xe0
1005bb8e:	f7ff fd51 	bl	1005b634 <smp____SC_Phase_2AS2_Generate_DHKeyCheck>
1005bb92:	2800      	cmp	r0, #0
1005bb94:	d104      	bne.n	1005bba0 <smp_sc_phase_2as2_start+0x88>
1005bb96:	7d31      	ldrb	r1, [r6, #20]
1005bb98:	07c9      	lsls	r1, r1, #31
1005bb9a:	d008      	beq.n	1005bbae <smp_sc_phase_2as2_start+0x96>
1005bb9c:	21bb      	movs	r1, #187	; 0xbb
1005bb9e:	72a1      	strb	r1, [r4, #10]
1005bba0:	b013      	add	sp, #76	; 0x4c
1005bba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005bba4:	ab06      	add	r3, sp, #24
1005bba6:	aa0f      	add	r2, sp, #60	; 0x3c
1005bba8:	a905      	add	r1, sp, #20
1005bbaa:	9700      	str	r7, [sp, #0]
1005bbac:	e7d4      	b.n	1005bb58 <smp_sc_phase_2as2_start+0x40>
1005bbae:	4620      	mov	r0, r4
1005bbb0:	f7ff fd12 	bl	1005b5d8 <smp____SC_Phase_2AS2_DHKeyCheck_Send>
1005bbb4:	e7f4      	b.n	1005bba0 <smp_sc_phase_2as2_start+0x88>
1005bbb6:	0000      	.short	0x0000
1005bbb8:	20000d6c 	.word	0x20000d6c

1005bbbc <smp_sc_submit_ecc_pk_generation_request>:
1005bbbc:	4804      	ldr	r0, [pc, #16]	; (1005bbd0 <smp_sc_submit_ecc_pk_generation_request+0x14>)
1005bbbe:	6800      	ldr	r0, [r0, #0]
1005bbc0:	7e81      	ldrb	r1, [r0, #26]
1005bbc2:	060a      	lsls	r2, r1, #24
1005bbc4:	d402      	bmi.n	1005bbcc <smp_sc_submit_ecc_pk_generation_request+0x10>
1005bbc6:	2240      	movs	r2, #64	; 0x40
1005bbc8:	4311      	orrs	r1, r2
1005bbca:	7681      	strb	r1, [r0, #26]
1005bbcc:	4770      	bx	lr
1005bbce:	0000      	.short	0x0000
1005bbd0:	20000d6c 	.word	0x20000d6c

1005bbd4 <smp_sc_update_statistics_on_pairing_complete>:
1005bbd4:	b570      	push	{r4, r5, r6, lr}
1005bbd6:	6804      	ldr	r4, [r0, #0]
1005bbd8:	7905      	ldrb	r5, [r0, #4]
1005bbda:	7ae0      	ldrb	r0, [r4, #11]
1005bbdc:	0700      	lsls	r0, r0, #28
1005bbde:	d52f      	bpl.n	1005bc40 <smp_sc_update_statistics_on_pairing_complete+0x6c>
1005bbe0:	8920      	ldrh	r0, [r4, #8]
1005bbe2:	f7ff fe67 	bl	1005b8b4 <smp_sc_is_another_sc_pairing_ongoing>
1005bbe6:	7ae1      	ldrb	r1, [r4, #11]
1005bbe8:	0849      	lsrs	r1, r1, #1
1005bbea:	0049      	lsls	r1, r1, #1
1005bbec:	72e1      	strb	r1, [r4, #11]
1005bbee:	4c15      	ldr	r4, [pc, #84]	; (1005bc44 <smp_sc_update_statistics_on_pairing_complete+0x70>)
1005bbf0:	2800      	cmp	r0, #0
1005bbf2:	d104      	bne.n	1005bbfe <smp_sc_update_statistics_on_pairing_complete+0x2a>
1005bbf4:	6821      	ldr	r1, [r4, #0]
1005bbf6:	23fb      	movs	r3, #251	; 0xfb
1005bbf8:	7e8a      	ldrb	r2, [r1, #26]
1005bbfa:	401a      	ands	r2, r3
1005bbfc:	768a      	strb	r2, [r1, #26]
1005bbfe:	6821      	ldr	r1, [r4, #0]
1005bc00:	2d00      	cmp	r5, #0
1005bc02:	d005      	beq.n	1005bc10 <smp_sc_update_statistics_on_pairing_complete+0x3c>
1005bc04:	7eca      	ldrb	r2, [r1, #27]
1005bc06:	3210      	adds	r2, #16
1005bc08:	76ca      	strb	r2, [r1, #27]
1005bc0a:	2800      	cmp	r0, #0
1005bc0c:	d004      	beq.n	1005bc18 <smp_sc_update_statistics_on_pairing_complete+0x44>
1005bc0e:	e007      	b.n	1005bc20 <smp_sc_update_statistics_on_pairing_complete+0x4c>
1005bc10:	7ec8      	ldrb	r0, [r1, #27]
1005bc12:	1c40      	adds	r0, r0, #1
1005bc14:	76c8      	strb	r0, [r1, #27]
1005bc16:	e003      	b.n	1005bc20 <smp_sc_update_statistics_on_pairing_complete+0x4c>
1005bc18:	7e88      	ldrb	r0, [r1, #26]
1005bc1a:	22cf      	movs	r2, #207	; 0xcf
1005bc1c:	4010      	ands	r0, r2
1005bc1e:	7688      	strb	r0, [r1, #26]
1005bc20:	6820      	ldr	r0, [r4, #0]
1005bc22:	2103      	movs	r1, #3
1005bc24:	7ec0      	ldrb	r0, [r0, #27]
1005bc26:	0905      	lsrs	r5, r0, #4
1005bc28:	0700      	lsls	r0, r0, #28
1005bc2a:	0f00      	lsrs	r0, r0, #28
1005bc2c:	f7e4 fb1c 	bl	10040268 <__aeabi_uidivmod>
1005bc30:	1940      	adds	r0, r0, r5
1005bc32:	2803      	cmp	r0, #3
1005bc34:	d304      	bcc.n	1005bc40 <smp_sc_update_statistics_on_pairing_complete+0x6c>
1005bc36:	f7ff ffc1 	bl	1005bbbc <smp_sc_submit_ecc_pk_generation_request>
1005bc3a:	6821      	ldr	r1, [r4, #0]
1005bc3c:	2000      	movs	r0, #0
1005bc3e:	76c8      	strb	r0, [r1, #27]
1005bc40:	bd70      	pop	{r4, r5, r6, pc}
1005bc42:	0000      	.short	0x0000
1005bc44:	20000d6c 	.word	0x20000d6c

1005bc48 <SMP_sc_force_debug_key_usage>:
1005bc48:	b570      	push	{r4, r5, r6, lr}
1005bc4a:	4605      	mov	r5, r0
1005bc4c:	2400      	movs	r4, #0
1005bc4e:	4620      	mov	r0, r4
1005bc50:	f7ff fe30 	bl	1005b8b4 <smp_sc_is_another_sc_pairing_ongoing>
1005bc54:	2800      	cmp	r0, #0
1005bc56:	d001      	beq.n	1005bc5c <SMP_sc_force_debug_key_usage+0x14>
1005bc58:	2446      	movs	r4, #70	; 0x46
1005bc5a:	e004      	b.n	1005bc66 <SMP_sc_force_debug_key_usage+0x1e>
1005bc5c:	2d01      	cmp	r5, #1
1005bc5e:	d102      	bne.n	1005bc66 <SMP_sc_force_debug_key_usage+0x1e>
1005bc60:	2001      	movs	r0, #1
1005bc62:	f7e5 ffa9 	bl	10041bb8 <smp_sc_init_ucfg>
1005bc66:	4620      	mov	r0, r4
1005bc68:	bd70      	pop	{r4, r5, r6, pc}
	...

1005bc6c <smp_sc_hci_le_generate_dhkey_complete_evt_hndl>:
1005bc6c:	b570      	push	{r4, r5, r6, lr}
1005bc6e:	4c1a      	ldr	r4, [pc, #104]	; (1005bcd8 <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x6c>)
1005bc70:	7802      	ldrb	r2, [r0, #0]
1005bc72:	6823      	ldr	r3, [r4, #0]
1005bc74:	1c41      	adds	r1, r0, #1
1005bc76:	7e98      	ldrb	r0, [r3, #26]
1005bc78:	06c0      	lsls	r0, r0, #27
1005bc7a:	d526      	bpl.n	1005bcca <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x5e>
1005bc7c:	2a00      	cmp	r2, #0
1005bc7e:	d005      	beq.n	1005bc8c <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x20>
1005bc80:	4816      	ldr	r0, [pc, #88]	; (1005bcdc <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x70>)
1005bc82:	2100      	movs	r1, #0
1005bc84:	6800      	ldr	r0, [r0, #0]
1005bc86:	30a0      	adds	r0, #160	; 0xa0
1005bc88:	7b02      	ldrb	r2, [r0, #12]
1005bc8a:	e021      	b.n	1005bcd0 <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x64>
1005bc8c:	4618      	mov	r0, r3
1005bc8e:	2220      	movs	r2, #32
1005bc90:	30d0      	adds	r0, #208	; 0xd0
1005bc92:	f7e4 fd76 	bl	10040782 <Osal_MemCpy>
1005bc96:	6820      	ldr	r0, [r4, #0]
1005bc98:	2220      	movs	r2, #32
1005bc9a:	7e81      	ldrb	r1, [r0, #26]
1005bc9c:	4311      	orrs	r1, r2
1005bc9e:	e013      	b.n	1005bcc8 <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x5c>
1005bca0:	207c      	movs	r0, #124	; 0x7c
1005bca2:	6fdd      	ldr	r5, [r3, #124]	; 0x7c
1005bca4:	4348      	muls	r0, r1
1005bca6:	1828      	adds	r0, r5, r0
1005bca8:	d010      	beq.n	1005bccc <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x60>
1005bcaa:	8905      	ldrh	r5, [r0, #8]
1005bcac:	2d00      	cmp	r5, #0
1005bcae:	d00d      	beq.n	1005bccc <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x60>
1005bcb0:	7ac5      	ldrb	r5, [r0, #11]
1005bcb2:	062d      	lsls	r5, r5, #24
1005bcb4:	d50a      	bpl.n	1005bccc <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x60>
1005bcb6:	2301      	movs	r3, #1
1005bcb8:	2200      	movs	r2, #0
1005bcba:	210b      	movs	r1, #11
1005bcbc:	f7ff fb56 	bl	1005b36c <smp_pairing_failed_send>
1005bcc0:	6820      	ldr	r0, [r4, #0]
1005bcc2:	22cf      	movs	r2, #207	; 0xcf
1005bcc4:	7e81      	ldrb	r1, [r0, #26]
1005bcc6:	4011      	ands	r1, r2
1005bcc8:	7681      	strb	r1, [r0, #26]
1005bcca:	bd70      	pop	{r4, r5, r6, pc}
1005bccc:	1c49      	adds	r1, r1, #1
1005bcce:	b2c9      	uxtb	r1, r1
1005bcd0:	428a      	cmp	r2, r1
1005bcd2:	d8e5      	bhi.n	1005bca0 <smp_sc_hci_le_generate_dhkey_complete_evt_hndl+0x34>
1005bcd4:	bd70      	pop	{r4, r5, r6, pc}
1005bcd6:	0000      	.short	0x0000
1005bcd8:	20000d6c 	.word	0x20000d6c
1005bcdc:	20000d64 	.word	0x20000d64

1005bce0 <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl>:
1005bce0:	b570      	push	{r4, r5, r6, lr}
1005bce2:	4d0d      	ldr	r5, [pc, #52]	; (1005bd18 <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl+0x38>)
1005bce4:	7801      	ldrb	r1, [r0, #0]
1005bce6:	1c44      	adds	r4, r0, #1
1005bce8:	6828      	ldr	r0, [r5, #0]
1005bcea:	7e82      	ldrb	r2, [r0, #26]
1005bcec:	0652      	lsls	r2, r2, #25
1005bcee:	0e52      	lsrs	r2, r2, #25
1005bcf0:	7682      	strb	r2, [r0, #26]
1005bcf2:	2900      	cmp	r1, #0
1005bcf4:	d002      	beq.n	1005bcfc <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl+0x1c>
1005bcf6:	f7ff ff61 	bl	1005bbbc <smp_sc_submit_ecc_pk_generation_request>
1005bcfa:	bd70      	pop	{r4, r5, r6, pc}
1005bcfc:	f7ff fdfa 	bl	1005b8f4 <smp_sc_is_debug_key_usage_forced>
1005bd00:	2800      	cmp	r0, #0
1005bd02:	d002      	beq.n	1005bd0a <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl+0x2a>
1005bd04:	f7ff fd7c 	bl	1005b800 <smp_sc_force_debug_private_key>
1005bd08:	bd70      	pop	{r4, r5, r6, pc}
1005bd0a:	6828      	ldr	r0, [r5, #0]
1005bd0c:	2240      	movs	r2, #64	; 0x40
1005bd0e:	4621      	mov	r1, r4
1005bd10:	303c      	adds	r0, #60	; 0x3c
1005bd12:	f7e4 fd36 	bl	10040782 <Osal_MemCpy>
1005bd16:	bd70      	pop	{r4, r5, r6, pc}
1005bd18:	20000d6c 	.word	0x20000d6c

1005bd1c <Delay_With_NOP_Cycles>:
1005bd1c:	2100      	movs	r1, #0
1005bd1e:	e001      	b.n	1005bd24 <Delay_With_NOP_Cycles+0x8>
1005bd20:	bf00      	nop
1005bd22:	1c49      	adds	r1, r1, #1
1005bd24:	4281      	cmp	r1, r0
1005bd26:	d3fb      	bcc.n	1005bd20 <Delay_With_NOP_Cycles+0x4>
1005bd28:	4770      	bx	lr

1005bd2a <copy_swap_buffer>:
1005bd2a:	b570      	push	{r4, r5, r6, lr}
1005bd2c:	2400      	movs	r4, #0
1005bd2e:	e007      	b.n	1005bd40 <copy_swap_buffer+0x16>
1005bd30:	5d0d      	ldrb	r5, [r1, r4]
1005bd32:	2b00      	cmp	r3, #0
1005bd34:	d007      	beq.n	1005bd46 <copy_swap_buffer+0x1c>
1005bd36:	1b16      	subs	r6, r2, r4
1005bd38:	1836      	adds	r6, r6, r0
1005bd3a:	3e20      	subs	r6, #32
1005bd3c:	77f5      	strb	r5, [r6, #31]
1005bd3e:	1c64      	adds	r4, r4, #1
1005bd40:	4294      	cmp	r4, r2
1005bd42:	d3f5      	bcc.n	1005bd30 <copy_swap_buffer+0x6>
1005bd44:	bd70      	pop	{r4, r5, r6, pc}
1005bd46:	5505      	strb	r5, [r0, r4]
1005bd48:	e7f9      	b.n	1005bd3e <copy_swap_buffer+0x14>

1005bd4a <is_Buffer_All_Set_To>:
1005bd4a:	b530      	push	{r4, r5, lr}
1005bd4c:	4604      	mov	r4, r0
1005bd4e:	2001      	movs	r0, #1
1005bd50:	2300      	movs	r3, #0
1005bd52:	e006      	b.n	1005bd62 <is_Buffer_All_Set_To+0x18>
1005bd54:	5cd5      	ldrb	r5, [r2, r3]
1005bd56:	42a5      	cmp	r5, r4
1005bd58:	d001      	beq.n	1005bd5e <is_Buffer_All_Set_To+0x14>
1005bd5a:	2000      	movs	r0, #0
1005bd5c:	bd30      	pop	{r4, r5, pc}
1005bd5e:	1c5b      	adds	r3, r3, #1
1005bd60:	b2db      	uxtb	r3, r3
1005bd62:	428b      	cmp	r3, r1
1005bd64:	d3f6      	bcc.n	1005bd54 <is_Buffer_All_Set_To+0xa>
1005bd66:	bd30      	pop	{r4, r5, pc}

1005bd68 <Events_Process_Q>:
1005bd68:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005bd6a:	b672      	cpsid	i
1005bd6c:	4d3f      	ldr	r5, [pc, #252]	; (1005be6c <Events_Process_Q+0x104>)
1005bd6e:	2308      	movs	r3, #8
1005bd70:	6828      	ldr	r0, [r5, #0]
1005bd72:	4601      	mov	r1, r0
1005bd74:	3040      	adds	r0, #64	; 0x40
1005bd76:	79c2      	ldrb	r2, [r0, #7]
1005bd78:	431a      	orrs	r2, r3
1005bd7a:	71c2      	strb	r2, [r0, #7]
1005bd7c:	b662      	cpsie	i
1005bd7e:	2000      	movs	r0, #0
1005bd80:	2701      	movs	r7, #1
1005bd82:	466c      	mov	r4, sp
1005bd84:	02ff      	lsls	r7, r7, #11
1005bd86:	0082      	lsls	r2, r0, #2
1005bd88:	1852      	adds	r2, r2, r1
1005bd8a:	19d2      	adds	r2, r2, r7
1005bd8c:	6952      	ldr	r2, [r2, #20]
1005bd8e:	8852      	ldrh	r2, [r2, #2]
1005bd90:	0043      	lsls	r3, r0, #1
1005bd92:	1c40      	adds	r0, r0, #1
1005bd94:	b2c0      	uxtb	r0, r0
1005bd96:	52e2      	strh	r2, [r4, r3]
1005bd98:	2803      	cmp	r0, #3
1005bd9a:	d3f4      	bcc.n	1005bd86 <Events_Process_Q+0x1e>
1005bd9c:	b672      	cpsid	i
1005bd9e:	19c8      	adds	r0, r1, r7
1005bda0:	2100      	movs	r1, #0
1005bda2:	6806      	ldr	r6, [r0, #0]
1005bda4:	6001      	str	r1, [r0, #0]
1005bda6:	b662      	cpsie	i
1005bda8:	07f0      	lsls	r0, r6, #31
1005bdaa:	d002      	beq.n	1005bdb2 <Events_Process_Q+0x4a>
1005bdac:	2000      	movs	r0, #0
1005bdae:	f7e9 f966 	bl	1004507e <hci_hardware_error_event>
1005bdb2:	07b0      	lsls	r0, r6, #30
1005bdb4:	d502      	bpl.n	1005bdbc <Events_Process_Q+0x54>
1005bdb6:	2001      	movs	r0, #1
1005bdb8:	f7e9 f961 	bl	1004507e <hci_hardware_error_event>
1005bdbc:	0770      	lsls	r0, r6, #29
1005bdbe:	d502      	bpl.n	1005bdc6 <Events_Process_Q+0x5e>
1005bdc0:	2002      	movs	r0, #2
1005bdc2:	f7e9 f95c 	bl	1004507e <hci_hardware_error_event>
1005bdc6:	0730      	lsls	r0, r6, #28
1005bdc8:	d502      	bpl.n	1005bdd0 <Events_Process_Q+0x68>
1005bdca:	2003      	movs	r0, #3
1005bdcc:	f7e9 f957 	bl	1004507e <hci_hardware_error_event>
1005bdd0:	2600      	movs	r6, #0
1005bdd2:	e023      	b.n	1005be1c <Events_Process_Q+0xb4>
1005bdd4:	280d      	cmp	r0, #13
1005bdd6:	d21a      	bcs.n	1005be0e <Events_Process_Q+0xa6>
1005bdd8:	1d21      	adds	r1, r4, #4
1005bdda:	4a25      	ldr	r2, [pc, #148]	; (1005be70 <Events_Process_Q+0x108>)
1005bddc:	0080      	lsls	r0, r0, #2
1005bdde:	5812      	ldr	r2, [r2, r0]
1005bde0:	4620      	mov	r0, r4
1005bde2:	4790      	blx	r2
1005bde4:	2800      	cmp	r0, #0
1005bde6:	d012      	beq.n	1005be0e <Events_Process_Q+0xa6>
1005bde8:	b672      	cpsid	i
1005bdea:	6828      	ldr	r0, [r5, #0]
1005bdec:	22f7      	movs	r2, #247	; 0xf7
1005bdee:	3040      	adds	r0, #64	; 0x40
1005bdf0:	79c1      	ldrb	r1, [r0, #7]
1005bdf2:	4011      	ands	r1, r2
1005bdf4:	71c1      	strb	r1, [r0, #7]
1005bdf6:	b662      	cpsie	i
1005bdf8:	e030      	b.n	1005be5c <Events_Process_Q+0xf4>
1005bdfa:	283a      	cmp	r0, #58	; 0x3a
1005bdfc:	d207      	bcs.n	1005be0e <Events_Process_Q+0xa6>
1005bdfe:	491c      	ldr	r1, [pc, #112]	; (1005be70 <Events_Process_Q+0x108>)
1005be00:	1d23      	adds	r3, r4, #4
1005be02:	0080      	lsls	r0, r0, #2
1005be04:	39e8      	subs	r1, #232	; 0xe8
1005be06:	580a      	ldr	r2, [r1, r0]
1005be08:	4619      	mov	r1, r3
1005be0a:	4620      	mov	r0, r4
1005be0c:	4790      	blx	r2
1005be0e:	9802      	ldr	r0, [sp, #8]
1005be10:	6829      	ldr	r1, [r5, #0]
1005be12:	1840      	adds	r0, r0, r1
1005be14:	19c0      	adds	r0, r0, r7
1005be16:	6940      	ldr	r0, [r0, #20]
1005be18:	8821      	ldrh	r1, [r4, #0]
1005be1a:	8001      	strh	r1, [r0, #0]
1005be1c:	0071      	lsls	r1, r6, #1
1005be1e:	4668      	mov	r0, sp
1005be20:	5a41      	ldrh	r1, [r0, r1]
1005be22:	00b0      	lsls	r0, r6, #2
1005be24:	9002      	str	r0, [sp, #8]
1005be26:	682a      	ldr	r2, [r5, #0]
1005be28:	1880      	adds	r0, r0, r2
1005be2a:	19c0      	adds	r0, r0, r7
1005be2c:	6940      	ldr	r0, [r0, #20]
1005be2e:	8802      	ldrh	r2, [r0, #0]
1005be30:	0892      	lsrs	r2, r2, #2
1005be32:	0092      	lsls	r2, r2, #2
1005be34:	1814      	adds	r4, r2, r0
1005be36:	8802      	ldrh	r2, [r0, #0]
1005be38:	3408      	adds	r4, #8
1005be3a:	428a      	cmp	r2, r1
1005be3c:	d00e      	beq.n	1005be5c <Events_Process_Q+0xf4>
1005be3e:	78a2      	ldrb	r2, [r4, #2]
1005be40:	0791      	lsls	r1, r2, #30
1005be42:	d00b      	beq.n	1005be5c <Events_Process_Q+0xf4>
1005be44:	0791      	lsls	r1, r2, #30
1005be46:	0f89      	lsrs	r1, r1, #30
1005be48:	2901      	cmp	r1, #1
1005be4a:	d101      	bne.n	1005be50 <Events_Process_Q+0xe8>
1005be4c:	4604      	mov	r4, r0
1005be4e:	3408      	adds	r4, #8
1005be50:	78a0      	ldrb	r0, [r4, #2]
1005be52:	0880      	lsrs	r0, r0, #2
1005be54:	06c0      	lsls	r0, r0, #27
1005be56:	78e0      	ldrb	r0, [r4, #3]
1005be58:	d5cf      	bpl.n	1005bdfa <Events_Process_Q+0x92>
1005be5a:	e7bb      	b.n	1005bdd4 <Events_Process_Q+0x6c>
1005be5c:	1c76      	adds	r6, r6, #1
1005be5e:	b2f6      	uxtb	r6, r6
1005be60:	2e03      	cmp	r6, #3
1005be62:	d3db      	bcc.n	1005be1c <Events_Process_Q+0xb4>
1005be64:	f7f0 fd98 	bl	1004c998 <hal_radio_activity_state_callback_check>
1005be68:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005be6a:	0000      	.short	0x0000
1005be6c:	20000d64 	.word	0x20000d64
1005be70:	10060038 	.word	0x10060038

1005be74 <Events_Process_init>:
1005be74:	b570      	push	{r4, r5, r6, lr}
1005be76:	f7f0 fda9 	bl	1004c9cc <hal_radio_activity_state_init>
1005be7a:	4c10      	ldr	r4, [pc, #64]	; (1005bebc <Events_Process_init+0x48>)
1005be7c:	2501      	movs	r5, #1
1005be7e:	6820      	ldr	r0, [r4, #0]
1005be80:	02ed      	lsls	r5, r5, #11
1005be82:	1940      	adds	r0, r0, r5
1005be84:	6880      	ldr	r0, [r0, #8]
1005be86:	2140      	movs	r1, #64	; 0x40
1005be88:	f000 fcb3 	bl	1005c7f2 <fifoCtrl_init>
1005be8c:	6821      	ldr	r1, [r4, #0]
1005be8e:	1949      	adds	r1, r1, r5
1005be90:	6148      	str	r0, [r1, #20]
1005be92:	68c8      	ldr	r0, [r1, #12]
1005be94:	2140      	movs	r1, #64	; 0x40
1005be96:	f000 fcac 	bl	1005c7f2 <fifoCtrl_init>
1005be9a:	6821      	ldr	r1, [r4, #0]
1005be9c:	1949      	adds	r1, r1, r5
1005be9e:	6188      	str	r0, [r1, #24]
1005bea0:	6908      	ldr	r0, [r1, #16]
1005bea2:	21ff      	movs	r1, #255	; 0xff
1005bea4:	3181      	adds	r1, #129	; 0x81
1005bea6:	f000 fca4 	bl	1005c7f2 <fifoCtrl_init>
1005beaa:	6821      	ldr	r1, [r4, #0]
1005beac:	2208      	movs	r2, #8
1005beae:	194b      	adds	r3, r1, r5
1005beb0:	61d8      	str	r0, [r3, #28]
1005beb2:	2100      	movs	r1, #0
1005beb4:	4618      	mov	r0, r3
1005beb6:	f7e4 fc68 	bl	1004078a <Osal_MemSet>
1005beba:	bd70      	pop	{r4, r5, r6, pc}
1005bebc:	20000d64 	.word	0x20000d64

1005bec0 <aci_att_write_resp_event>:
1005bec0:	4770      	bx	lr
	...

1005bec4 <aci_event_fifo_push>:
1005bec4:	460a      	mov	r2, r1
1005bec6:	0640      	lsls	r0, r0, #25
1005bec8:	d508      	bpl.n	1005bedc <aci_event_fifo_push+0x18>
1005beca:	78d0      	ldrb	r0, [r2, #3]
1005becc:	283a      	cmp	r0, #58	; 0x3a
1005bece:	d20a      	bcs.n	1005bee6 <aci_event_fifo_push+0x22>
1005bed0:	1d11      	adds	r1, r2, #4
1005bed2:	4b05      	ldr	r3, [pc, #20]	; (1005bee8 <aci_event_fifo_push+0x24>)
1005bed4:	0080      	lsls	r0, r0, #2
1005bed6:	581b      	ldr	r3, [r3, r0]
1005bed8:	4610      	mov	r0, r2
1005beda:	4718      	bx	r3
1005bedc:	7890      	ldrb	r0, [r2, #2]
1005bede:	0880      	lsrs	r0, r0, #2
1005bee0:	0080      	lsls	r0, r0, #2
1005bee2:	1c80      	adds	r0, r0, #2
1005bee4:	7088      	strb	r0, [r1, #2]
1005bee6:	4770      	bx	lr
1005bee8:	1005ff50 	.word	0x1005ff50

1005beec <aci_event_fifo_push_header>:
1005beec:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005beee:	4604      	mov	r4, r0
1005bef0:	2600      	movs	r6, #0
1005bef2:	4f2c      	ldr	r7, [pc, #176]	; (1005bfa4 <aci_event_fifo_push_header+0xb8>)
1005bef4:	b083      	sub	sp, #12
1005bef6:	469c      	mov	ip, r3
1005bef8:	460d      	mov	r5, r1
1005befa:	0608      	lsls	r0, r1, #24
1005befc:	d516      	bpl.n	1005bf2c <aci_event_fifo_push_header+0x40>
1005befe:	b672      	cpsid	i
1005bf00:	ab01      	add	r3, sp, #4
1005bf02:	466a      	mov	r2, sp
1005bf04:	4661      	mov	r1, ip
1005bf06:	4620      	mov	r0, r4
1005bf08:	f000 fc3d 	bl	1005c786 <fifoBuf_getFreeHeader>
1005bf0c:	2800      	cmp	r0, #0
1005bf0e:	d00b      	beq.n	1005bf28 <aci_event_fifo_push_header+0x3c>
1005bf10:	4668      	mov	r0, sp
1005bf12:	8881      	ldrh	r1, [r0, #4]
1005bf14:	9800      	ldr	r0, [sp, #0]
1005bf16:	7882      	ldrb	r2, [r0, #2]
1005bf18:	0892      	lsrs	r2, r2, #2
1005bf1a:	0092      	lsls	r2, r2, #2
1005bf1c:	7082      	strb	r2, [r0, #2]
1005bf1e:	8001      	strh	r1, [r0, #0]
1005bf20:	8061      	strh	r1, [r4, #2]
1005bf22:	2601      	movs	r6, #1
1005bf24:	b662      	cpsie	i
1005bf26:	e015      	b.n	1005bf54 <aci_event_fifo_push_header+0x68>
1005bf28:	b662      	cpsie	i
1005bf2a:	e021      	b.n	1005bf70 <aci_event_fifo_push_header+0x84>
1005bf2c:	ab01      	add	r3, sp, #4
1005bf2e:	466a      	mov	r2, sp
1005bf30:	4661      	mov	r1, ip
1005bf32:	4620      	mov	r0, r4
1005bf34:	f000 fc27 	bl	1005c786 <fifoBuf_getFreeHeader>
1005bf38:	2800      	cmp	r0, #0
1005bf3a:	d019      	beq.n	1005bf70 <aci_event_fifo_push_header+0x84>
1005bf3c:	0668      	lsls	r0, r5, #25
1005bf3e:	d409      	bmi.n	1005bf54 <aci_event_fifo_push_header+0x68>
1005bf40:	4668      	mov	r0, sp
1005bf42:	8881      	ldrh	r1, [r0, #4]
1005bf44:	9800      	ldr	r0, [sp, #0]
1005bf46:	7882      	ldrb	r2, [r0, #2]
1005bf48:	0892      	lsrs	r2, r2, #2
1005bf4a:	0092      	lsls	r2, r2, #2
1005bf4c:	7082      	strb	r2, [r0, #2]
1005bf4e:	8001      	strh	r1, [r0, #0]
1005bf50:	8061      	strh	r1, [r4, #2]
1005bf52:	2601      	movs	r6, #1
1005bf54:	9800      	ldr	r0, [sp, #0]
1005bf56:	00aa      	lsls	r2, r5, #2
1005bf58:	7881      	ldrb	r1, [r0, #2]
1005bf5a:	2340      	movs	r3, #64	; 0x40
1005bf5c:	0789      	lsls	r1, r1, #30
1005bf5e:	0f89      	lsrs	r1, r1, #30
1005bf60:	401a      	ands	r2, r3
1005bf62:	4311      	orrs	r1, r2
1005bf64:	7081      	strb	r1, [r0, #2]
1005bf66:	9905      	ldr	r1, [sp, #20]
1005bf68:	70c1      	strb	r1, [r0, #3]
1005bf6a:	2e00      	cmp	r6, #0
1005bf6c:	d10e      	bne.n	1005bf8c <aci_event_fifo_push_header+0xa0>
1005bf6e:	e015      	b.n	1005bf9c <aci_event_fifo_push_header+0xb0>
1005bf70:	2000      	movs	r0, #0
1005bf72:	9000      	str	r0, [sp, #0]
1005bf74:	b672      	cpsid	i
1005bf76:	06a8      	lsls	r0, r5, #26
1005bf78:	d40f      	bmi.n	1005bf9a <aci_event_fifo_push_header+0xae>
1005bf7a:	2001      	movs	r0, #1
1005bf7c:	6839      	ldr	r1, [r7, #0]
1005bf7e:	02c0      	lsls	r0, r0, #11
1005bf80:	1808      	adds	r0, r1, r0
1005bf82:	6801      	ldr	r1, [r0, #0]
1005bf84:	2208      	movs	r2, #8
1005bf86:	4311      	orrs	r1, r2
1005bf88:	6001      	str	r1, [r0, #0]
1005bf8a:	b662      	cpsie	i
1005bf8c:	b672      	cpsid	i
1005bf8e:	6838      	ldr	r0, [r7, #0]
1005bf90:	22f7      	movs	r2, #247	; 0xf7
1005bf92:	3040      	adds	r0, #64	; 0x40
1005bf94:	79c1      	ldrb	r1, [r0, #7]
1005bf96:	4011      	ands	r1, r2
1005bf98:	71c1      	strb	r1, [r0, #7]
1005bf9a:	b662      	cpsie	i
1005bf9c:	9800      	ldr	r0, [sp, #0]
1005bf9e:	b007      	add	sp, #28
1005bfa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005bfa2:	0000      	.short	0x0000
1005bfa4:	20000d64 	.word	0x20000d64

1005bfa8 <aci_gap_device_found_event>:
1005bfa8:	4770      	bx	lr
	...

1005bfac <cb_aci_att_exchange_mtu_resp_event>:
1005bfac:	b510      	push	{r4, lr}
1005bfae:	4807      	ldr	r0, [pc, #28]	; (1005bfcc <cb_aci_att_exchange_mtu_resp_event+0x20>)
1005bfb0:	2237      	movs	r2, #55	; 0x37
1005bfb2:	6800      	ldr	r0, [r0, #0]
1005bfb4:	0152      	lsls	r2, r2, #5
1005bfb6:	1880      	adds	r0, r0, r2
1005bfb8:	7b00      	ldrb	r0, [r0, #12]
1005bfba:	0740      	lsls	r0, r0, #29
1005bfbc:	d504      	bpl.n	1005bfc8 <cb_aci_att_exchange_mtu_resp_event+0x1c>
1005bfbe:	4608      	mov	r0, r1
1005bfc0:	8849      	ldrh	r1, [r1, #2]
1005bfc2:	8800      	ldrh	r0, [r0, #0]
1005bfc4:	f7e9 fb5c 	bl	10045680 <aci_att_exchange_mtu_resp_event>
1005bfc8:	bd10      	pop	{r4, pc}
1005bfca:	0000      	.short	0x0000
1005bfcc:	20000d64 	.word	0x20000d64

1005bfd0 <cb_aci_att_exec_write_resp_event>:
1005bfd0:	b510      	push	{r4, lr}
1005bfd2:	4806      	ldr	r0, [pc, #24]	; (1005bfec <cb_aci_att_exec_write_resp_event+0x1c>)
1005bfd4:	2237      	movs	r2, #55	; 0x37
1005bfd6:	6800      	ldr	r0, [r0, #0]
1005bfd8:	0152      	lsls	r2, r2, #5
1005bfda:	1880      	adds	r0, r0, r2
1005bfdc:	7b40      	ldrb	r0, [r0, #13]
1005bfde:	06c0      	lsls	r0, r0, #27
1005bfe0:	d502      	bpl.n	1005bfe8 <cb_aci_att_exec_write_resp_event+0x18>
1005bfe2:	8808      	ldrh	r0, [r1, #0]
1005bfe4:	f7e9 fc87 	bl	100458f6 <aci_att_exec_write_resp_event>
1005bfe8:	bd10      	pop	{r4, pc}
1005bfea:	0000      	.short	0x0000
1005bfec:	20000d64 	.word	0x20000d64

1005bff0 <cb_aci_att_find_by_type_value_resp_event>:
1005bff0:	b510      	push	{r4, lr}
1005bff2:	4807      	ldr	r0, [pc, #28]	; (1005c010 <cb_aci_att_find_by_type_value_resp_event+0x20>)
1005bff4:	2237      	movs	r2, #55	; 0x37
1005bff6:	6800      	ldr	r0, [r0, #0]
1005bff8:	0152      	lsls	r2, r2, #5
1005bffa:	1880      	adds	r0, r0, r2
1005bffc:	7b00      	ldrb	r0, [r0, #12]
1005bffe:	06c0      	lsls	r0, r0, #27
1005c000:	d505      	bpl.n	1005c00e <cb_aci_att_find_by_type_value_resp_event+0x1e>
1005c002:	460a      	mov	r2, r1
1005c004:	8810      	ldrh	r0, [r2, #0]
1005c006:	7889      	ldrb	r1, [r1, #2]
1005c008:	1d12      	adds	r2, r2, #4
1005c00a:	f7e9 fb79 	bl	10045700 <aci_att_find_by_type_value_resp_event>
1005c00e:	bd10      	pop	{r4, pc}
1005c010:	20000d64 	.word	0x20000d64

1005c014 <cb_aci_att_find_info_resp_event>:
1005c014:	b510      	push	{r4, lr}
1005c016:	4808      	ldr	r0, [pc, #32]	; (1005c038 <cb_aci_att_find_info_resp_event+0x24>)
1005c018:	2237      	movs	r2, #55	; 0x37
1005c01a:	6800      	ldr	r0, [r0, #0]
1005c01c:	0152      	lsls	r2, r2, #5
1005c01e:	1880      	adds	r0, r0, r2
1005c020:	7b00      	ldrb	r0, [r0, #12]
1005c022:	0700      	lsls	r0, r0, #28
1005c024:	d506      	bpl.n	1005c034 <cb_aci_att_find_info_resp_event+0x20>
1005c026:	460b      	mov	r3, r1
1005c028:	78ca      	ldrb	r2, [r1, #3]
1005c02a:	8818      	ldrh	r0, [r3, #0]
1005c02c:	7889      	ldrb	r1, [r1, #2]
1005c02e:	1d1b      	adds	r3, r3, #4
1005c030:	f7e9 fb44 	bl	100456bc <aci_att_find_info_resp_event>
1005c034:	bd10      	pop	{r4, pc}
1005c036:	0000      	.short	0x0000
1005c038:	20000d64 	.word	0x20000d64

1005c03c <cb_aci_att_prepare_write_resp_event>:
1005c03c:	b508      	push	{r3, lr}
1005c03e:	4809      	ldr	r0, [pc, #36]	; (1005c064 <cb_aci_att_prepare_write_resp_event+0x28>)
1005c040:	2237      	movs	r2, #55	; 0x37
1005c042:	6800      	ldr	r0, [r0, #0]
1005c044:	0152      	lsls	r2, r2, #5
1005c046:	1880      	adds	r0, r0, r2
1005c048:	7b40      	ldrb	r0, [r0, #13]
1005c04a:	0700      	lsls	r0, r0, #28
1005c04c:	d508      	bpl.n	1005c060 <cb_aci_att_prepare_write_resp_event+0x24>
1005c04e:	4608      	mov	r0, r1
1005c050:	1dc9      	adds	r1, r1, #7
1005c052:	9100      	str	r1, [sp, #0]
1005c054:	7983      	ldrb	r3, [r0, #6]
1005c056:	8882      	ldrh	r2, [r0, #4]
1005c058:	8841      	ldrh	r1, [r0, #2]
1005c05a:	8800      	ldrh	r0, [r0, #0]
1005c05c:	f7e9 fc21 	bl	100458a2 <aci_att_prepare_write_resp_event>
1005c060:	bd08      	pop	{r3, pc}
1005c062:	0000      	.short	0x0000
1005c064:	20000d64 	.word	0x20000d64

1005c068 <cb_aci_att_read_blob_resp_event>:
1005c068:	b510      	push	{r4, lr}
1005c06a:	4807      	ldr	r0, [pc, #28]	; (1005c088 <cb_aci_att_read_blob_resp_event+0x20>)
1005c06c:	2237      	movs	r2, #55	; 0x37
1005c06e:	6800      	ldr	r0, [r0, #0]
1005c070:	0152      	lsls	r2, r2, #5
1005c072:	1880      	adds	r0, r0, r2
1005c074:	7b00      	ldrb	r0, [r0, #12]
1005c076:	0600      	lsls	r0, r0, #24
1005c078:	d505      	bpl.n	1005c086 <cb_aci_att_read_blob_resp_event+0x1e>
1005c07a:	460a      	mov	r2, r1
1005c07c:	8810      	ldrh	r0, [r2, #0]
1005c07e:	7889      	ldrb	r1, [r1, #2]
1005c080:	1cd2      	adds	r2, r2, #3
1005c082:	f7e9 fba9 	bl	100457d8 <aci_att_read_blob_resp_event>
1005c086:	bd10      	pop	{r4, pc}
1005c088:	20000d64 	.word	0x20000d64

1005c08c <cb_aci_att_read_by_group_type_resp_event>:
1005c08c:	b510      	push	{r4, lr}
1005c08e:	4808      	ldr	r0, [pc, #32]	; (1005c0b0 <cb_aci_att_read_by_group_type_resp_event+0x24>)
1005c090:	2237      	movs	r2, #55	; 0x37
1005c092:	6800      	ldr	r0, [r0, #0]
1005c094:	0152      	lsls	r2, r2, #5
1005c096:	1880      	adds	r0, r0, r2
1005c098:	7b40      	ldrb	r0, [r0, #13]
1005c09a:	0780      	lsls	r0, r0, #30
1005c09c:	d506      	bpl.n	1005c0ac <cb_aci_att_read_by_group_type_resp_event+0x20>
1005c09e:	460b      	mov	r3, r1
1005c0a0:	78ca      	ldrb	r2, [r1, #3]
1005c0a2:	8818      	ldrh	r0, [r3, #0]
1005c0a4:	7889      	ldrb	r1, [r1, #2]
1005c0a6:	1d1b      	adds	r3, r3, #4
1005c0a8:	f7e9 fbd8 	bl	1004585c <aci_att_read_by_group_type_resp_event>
1005c0ac:	bd10      	pop	{r4, pc}
1005c0ae:	0000      	.short	0x0000
1005c0b0:	20000d64 	.word	0x20000d64

1005c0b4 <cb_aci_att_read_by_type_resp_event>:
1005c0b4:	b510      	push	{r4, lr}
1005c0b6:	4808      	ldr	r0, [pc, #32]	; (1005c0d8 <cb_aci_att_read_by_type_resp_event+0x24>)
1005c0b8:	2237      	movs	r2, #55	; 0x37
1005c0ba:	6800      	ldr	r0, [r0, #0]
1005c0bc:	0152      	lsls	r2, r2, #5
1005c0be:	1880      	adds	r0, r0, r2
1005c0c0:	7b00      	ldrb	r0, [r0, #12]
1005c0c2:	0680      	lsls	r0, r0, #26
1005c0c4:	d506      	bpl.n	1005c0d4 <cb_aci_att_read_by_type_resp_event+0x20>
1005c0c6:	460b      	mov	r3, r1
1005c0c8:	78ca      	ldrb	r2, [r1, #3]
1005c0ca:	8818      	ldrh	r0, [r3, #0]
1005c0cc:	7889      	ldrb	r1, [r1, #2]
1005c0ce:	1d1b      	adds	r3, r3, #4
1005c0d0:	f7e9 fb3e 	bl	10045750 <aci_att_read_by_type_resp_event>
1005c0d4:	bd10      	pop	{r4, pc}
1005c0d6:	0000      	.short	0x0000
1005c0d8:	20000d64 	.word	0x20000d64

1005c0dc <cb_aci_att_read_multiple_resp_event>:
1005c0dc:	b510      	push	{r4, lr}
1005c0de:	4807      	ldr	r0, [pc, #28]	; (1005c0fc <cb_aci_att_read_multiple_resp_event+0x20>)
1005c0e0:	2237      	movs	r2, #55	; 0x37
1005c0e2:	6800      	ldr	r0, [r0, #0]
1005c0e4:	0152      	lsls	r2, r2, #5
1005c0e6:	1880      	adds	r0, r0, r2
1005c0e8:	7b40      	ldrb	r0, [r0, #13]
1005c0ea:	07c0      	lsls	r0, r0, #31
1005c0ec:	d005      	beq.n	1005c0fa <cb_aci_att_read_multiple_resp_event+0x1e>
1005c0ee:	460a      	mov	r2, r1
1005c0f0:	8810      	ldrh	r0, [r2, #0]
1005c0f2:	7889      	ldrb	r1, [r1, #2]
1005c0f4:	1cd2      	adds	r2, r2, #3
1005c0f6:	f7e9 fb90 	bl	1004581a <aci_att_read_multiple_resp_event>
1005c0fa:	bd10      	pop	{r4, pc}
1005c0fc:	20000d64 	.word	0x20000d64

1005c100 <cb_aci_att_read_resp_event>:
1005c100:	b510      	push	{r4, lr}
1005c102:	4807      	ldr	r0, [pc, #28]	; (1005c120 <cb_aci_att_read_resp_event+0x20>)
1005c104:	2237      	movs	r2, #55	; 0x37
1005c106:	6800      	ldr	r0, [r0, #0]
1005c108:	0152      	lsls	r2, r2, #5
1005c10a:	1880      	adds	r0, r0, r2
1005c10c:	7b00      	ldrb	r0, [r0, #12]
1005c10e:	0640      	lsls	r0, r0, #25
1005c110:	d505      	bpl.n	1005c11e <cb_aci_att_read_resp_event+0x1e>
1005c112:	460a      	mov	r2, r1
1005c114:	8810      	ldrh	r0, [r2, #0]
1005c116:	7889      	ldrb	r1, [r1, #2]
1005c118:	1cd2      	adds	r2, r2, #3
1005c11a:	f7e9 fb3c 	bl	10045796 <aci_att_read_resp_event>
1005c11e:	bd10      	pop	{r4, pc}
1005c120:	20000d64 	.word	0x20000d64

1005c124 <cb_aci_att_write_resp_event>:
1005c124:	b510      	push	{r4, lr}
1005c126:	4807      	ldr	r0, [pc, #28]	; (1005c144 <cb_aci_att_write_resp_event+0x20>)
1005c128:	2237      	movs	r2, #55	; 0x37
1005c12a:	6800      	ldr	r0, [r0, #0]
1005c12c:	0152      	lsls	r2, r2, #5
1005c12e:	1880      	adds	r0, r0, r2
1005c130:	7b40      	ldrb	r0, [r0, #13]
1005c132:	0740      	lsls	r0, r0, #29
1005c134:	d505      	bpl.n	1005c142 <cb_aci_att_write_resp_event+0x1e>
1005c136:	460a      	mov	r2, r1
1005c138:	8810      	ldrh	r0, [r2, #0]
1005c13a:	7889      	ldrb	r1, [r1, #2]
1005c13c:	1cd2      	adds	r2, r2, #3
1005c13e:	f7ff febf 	bl	1005bec0 <aci_att_write_resp_event>
1005c142:	bd10      	pop	{r4, pc}
1005c144:	20000d64 	.word	0x20000d64

1005c148 <cb_aci_gap_addr_not_resolved_event>:
1005c148:	b510      	push	{r4, lr}
1005c14a:	4806      	ldr	r0, [pc, #24]	; (1005c164 <cb_aci_gap_addr_not_resolved_event+0x1c>)
1005c14c:	2237      	movs	r2, #55	; 0x37
1005c14e:	6800      	ldr	r0, [r0, #0]
1005c150:	0152      	lsls	r2, r2, #5
1005c152:	1880      	adds	r0, r0, r2
1005c154:	7ac0      	ldrb	r0, [r0, #11]
1005c156:	0700      	lsls	r0, r0, #28
1005c158:	d502      	bpl.n	1005c160 <cb_aci_gap_addr_not_resolved_event+0x18>
1005c15a:	8808      	ldrh	r0, [r1, #0]
1005c15c:	f7e9 f93f 	bl	100453de <aci_gap_addr_not_resolved_event>
1005c160:	bd10      	pop	{r4, pc}
1005c162:	0000      	.short	0x0000
1005c164:	20000d64 	.word	0x20000d64

1005c168 <cb_aci_gap_authorization_req_event>:
1005c168:	b510      	push	{r4, lr}
1005c16a:	4806      	ldr	r0, [pc, #24]	; (1005c184 <cb_aci_gap_authorization_req_event+0x1c>)
1005c16c:	2237      	movs	r2, #55	; 0x37
1005c16e:	6800      	ldr	r0, [r0, #0]
1005c170:	0152      	lsls	r2, r2, #5
1005c172:	1880      	adds	r0, r0, r2
1005c174:	7a80      	ldrb	r0, [r0, #10]
1005c176:	0700      	lsls	r0, r0, #28
1005c178:	d502      	bpl.n	1005c180 <cb_aci_gap_authorization_req_event+0x18>
1005c17a:	8808      	ldrh	r0, [r1, #0]
1005c17c:	f7e9 f8da 	bl	10045334 <aci_gap_authorization_req_event>
1005c180:	bd10      	pop	{r4, pc}
1005c182:	0000      	.short	0x0000
1005c184:	20000d64 	.word	0x20000d64

1005c188 <cb_aci_gap_bond_lost_event>:
1005c188:	b510      	push	{r4, lr}
1005c18a:	4805      	ldr	r0, [pc, #20]	; (1005c1a0 <cb_aci_gap_bond_lost_event+0x18>)
1005c18c:	2137      	movs	r1, #55	; 0x37
1005c18e:	6800      	ldr	r0, [r0, #0]
1005c190:	0149      	lsls	r1, r1, #5
1005c192:	1840      	adds	r0, r0, r1
1005c194:	7a80      	ldrb	r0, [r0, #10]
1005c196:	0680      	lsls	r0, r0, #26
1005c198:	d501      	bpl.n	1005c19e <cb_aci_gap_bond_lost_event+0x16>
1005c19a:	f7e9 f8f3 	bl	10045384 <aci_gap_bond_lost_event>
1005c19e:	bd10      	pop	{r4, pc}
1005c1a0:	20000d64 	.word	0x20000d64

1005c1a4 <cb_aci_gap_device_found_event>:
1005c1a4:	b510      	push	{r4, lr}
1005c1a6:	4806      	ldr	r0, [pc, #24]	; (1005c1c0 <cb_aci_gap_device_found_event+0x1c>)
1005c1a8:	2237      	movs	r2, #55	; 0x37
1005c1aa:	6800      	ldr	r0, [r0, #0]
1005c1ac:	0152      	lsls	r2, r2, #5
1005c1ae:	1880      	adds	r0, r0, r2
1005c1b0:	7a80      	ldrb	r0, [r0, #10]
1005c1b2:	0640      	lsls	r0, r0, #25
1005c1b4:	d503      	bpl.n	1005c1be <cb_aci_gap_device_found_event+0x1a>
1005c1b6:	7808      	ldrb	r0, [r1, #0]
1005c1b8:	1c49      	adds	r1, r1, #1
1005c1ba:	f7ff fef5 	bl	1005bfa8 <aci_gap_device_found_event>
1005c1be:	bd10      	pop	{r4, pc}
1005c1c0:	20000d64 	.word	0x20000d64

1005c1c4 <cb_aci_gap_keypress_notification_event>:
1005c1c4:	b510      	push	{r4, lr}
1005c1c6:	4807      	ldr	r0, [pc, #28]	; (1005c1e4 <cb_aci_gap_keypress_notification_event+0x20>)
1005c1c8:	2237      	movs	r2, #55	; 0x37
1005c1ca:	6800      	ldr	r0, [r0, #0]
1005c1cc:	0152      	lsls	r2, r2, #5
1005c1ce:	1880      	adds	r0, r0, r2
1005c1d0:	7ac0      	ldrb	r0, [r0, #11]
1005c1d2:	0640      	lsls	r0, r0, #25
1005c1d4:	d504      	bpl.n	1005c1e0 <cb_aci_gap_keypress_notification_event+0x1c>
1005c1d6:	4608      	mov	r0, r1
1005c1d8:	7889      	ldrb	r1, [r1, #2]
1005c1da:	8800      	ldrh	r0, [r0, #0]
1005c1dc:	f7e9 f937 	bl	1004544e <aci_gap_keypress_notification_event>
1005c1e0:	bd10      	pop	{r4, pc}
1005c1e2:	0000      	.short	0x0000
1005c1e4:	20000d64 	.word	0x20000d64

1005c1e8 <cb_aci_gap_limited_discoverable_event>:
1005c1e8:	b510      	push	{r4, lr}
1005c1ea:	4805      	ldr	r0, [pc, #20]	; (1005c200 <cb_aci_gap_limited_discoverable_event+0x18>)
1005c1ec:	2137      	movs	r1, #55	; 0x37
1005c1ee:	6800      	ldr	r0, [r0, #0]
1005c1f0:	0149      	lsls	r1, r1, #5
1005c1f2:	1840      	adds	r0, r0, r1
1005c1f4:	7a80      	ldrb	r0, [r0, #10]
1005c1f6:	07c0      	lsls	r0, r0, #31
1005c1f8:	d001      	beq.n	1005c1fe <cb_aci_gap_limited_discoverable_event+0x16>
1005c1fa:	f7e9 f858 	bl	100452ae <aci_gap_limited_discoverable_event>
1005c1fe:	bd10      	pop	{r4, pc}
1005c200:	20000d64 	.word	0x20000d64

1005c204 <cb_aci_gap_numeric_comparison_value_event>:
1005c204:	b510      	push	{r4, lr}
1005c206:	4807      	ldr	r0, [pc, #28]	; (1005c224 <cb_aci_gap_numeric_comparison_value_event+0x20>)
1005c208:	2237      	movs	r2, #55	; 0x37
1005c20a:	6800      	ldr	r0, [r0, #0]
1005c20c:	0152      	lsls	r2, r2, #5
1005c20e:	1880      	adds	r0, r0, r2
1005c210:	7ac0      	ldrb	r0, [r0, #11]
1005c212:	0680      	lsls	r0, r0, #26
1005c214:	d504      	bpl.n	1005c220 <cb_aci_gap_numeric_comparison_value_event+0x1c>
1005c216:	4608      	mov	r0, r1
1005c218:	6849      	ldr	r1, [r1, #4]
1005c21a:	8800      	ldrh	r0, [r0, #0]
1005c21c:	f7e9 f8f6 	bl	1004540c <aci_gap_numeric_comparison_value_event>
1005c220:	bd10      	pop	{r4, pc}
1005c222:	0000      	.short	0x0000
1005c224:	20000d64 	.word	0x20000d64

1005c228 <cb_aci_gap_pairing_complete_event>:
1005c228:	b510      	push	{r4, lr}
1005c22a:	4807      	ldr	r0, [pc, #28]	; (1005c248 <cb_aci_gap_pairing_complete_event+0x20>)
1005c22c:	2237      	movs	r2, #55	; 0x37
1005c22e:	6800      	ldr	r0, [r0, #0]
1005c230:	0152      	lsls	r2, r2, #5
1005c232:	1880      	adds	r0, r0, r2
1005c234:	7a80      	ldrb	r0, [r0, #10]
1005c236:	0780      	lsls	r0, r0, #30
1005c238:	d505      	bpl.n	1005c246 <cb_aci_gap_pairing_complete_event+0x1e>
1005c23a:	4608      	mov	r0, r1
1005c23c:	78ca      	ldrb	r2, [r1, #3]
1005c23e:	7889      	ldrb	r1, [r1, #2]
1005c240:	8800      	ldrh	r0, [r0, #0]
1005c242:	f7e9 f846 	bl	100452d2 <aci_gap_pairing_complete_event>
1005c246:	bd10      	pop	{r4, pc}
1005c248:	20000d64 	.word	0x20000d64

1005c24c <cb_aci_gap_pass_key_req_event>:
1005c24c:	b510      	push	{r4, lr}
1005c24e:	4806      	ldr	r0, [pc, #24]	; (1005c268 <cb_aci_gap_pass_key_req_event+0x1c>)
1005c250:	2237      	movs	r2, #55	; 0x37
1005c252:	6800      	ldr	r0, [r0, #0]
1005c254:	0152      	lsls	r2, r2, #5
1005c256:	1880      	adds	r0, r0, r2
1005c258:	7a80      	ldrb	r0, [r0, #10]
1005c25a:	0740      	lsls	r0, r0, #29
1005c25c:	d502      	bpl.n	1005c264 <cb_aci_gap_pass_key_req_event+0x18>
1005c25e:	8808      	ldrh	r0, [r1, #0]
1005c260:	f7e9 f851 	bl	10045306 <aci_gap_pass_key_req_event>
1005c264:	bd10      	pop	{r4, pc}
1005c266:	0000      	.short	0x0000
1005c268:	20000d64 	.word	0x20000d64

1005c26c <cb_aci_gap_proc_complete_event>:
1005c26c:	b510      	push	{r4, lr}
1005c26e:	4808      	ldr	r0, [pc, #32]	; (1005c290 <cb_aci_gap_proc_complete_event+0x24>)
1005c270:	2237      	movs	r2, #55	; 0x37
1005c272:	6800      	ldr	r0, [r0, #0]
1005c274:	0152      	lsls	r2, r2, #5
1005c276:	1880      	adds	r0, r0, r2
1005c278:	7a80      	ldrb	r0, [r0, #10]
1005c27a:	0600      	lsls	r0, r0, #24
1005c27c:	d506      	bpl.n	1005c28c <cb_aci_gap_proc_complete_event+0x20>
1005c27e:	460b      	mov	r3, r1
1005c280:	788a      	ldrb	r2, [r1, #2]
1005c282:	7818      	ldrb	r0, [r3, #0]
1005c284:	7849      	ldrb	r1, [r1, #1]
1005c286:	1cdb      	adds	r3, r3, #3
1005c288:	f7e9 f88d 	bl	100453a6 <aci_gap_proc_complete_event>
1005c28c:	bd10      	pop	{r4, pc}
1005c28e:	0000      	.short	0x0000
1005c290:	20000d64 	.word	0x20000d64

1005c294 <cb_aci_gap_slave_security_initiated_event>:
1005c294:	b510      	push	{r4, lr}
1005c296:	4805      	ldr	r0, [pc, #20]	; (1005c2ac <cb_aci_gap_slave_security_initiated_event+0x18>)
1005c298:	2137      	movs	r1, #55	; 0x37
1005c29a:	6800      	ldr	r0, [r0, #0]
1005c29c:	0149      	lsls	r1, r1, #5
1005c29e:	1840      	adds	r0, r0, r1
1005c2a0:	7a80      	ldrb	r0, [r0, #10]
1005c2a2:	06c0      	lsls	r0, r0, #27
1005c2a4:	d501      	bpl.n	1005c2aa <cb_aci_gap_slave_security_initiated_event+0x16>
1005c2a6:	f7e9 f85c 	bl	10045362 <aci_gap_slave_security_initiated_event>
1005c2aa:	bd10      	pop	{r4, pc}
1005c2ac:	20000d64 	.word	0x20000d64

1005c2b0 <cb_aci_gatt_attribute_modified_event>:
1005c2b0:	b508      	push	{r3, lr}
1005c2b2:	4809      	ldr	r0, [pc, #36]	; (1005c2d8 <cb_aci_gatt_attribute_modified_event+0x28>)
1005c2b4:	2237      	movs	r2, #55	; 0x37
1005c2b6:	6800      	ldr	r0, [r0, #0]
1005c2b8:	0152      	lsls	r2, r2, #5
1005c2ba:	1880      	adds	r0, r0, r2
1005c2bc:	7b00      	ldrb	r0, [r0, #12]
1005c2be:	07c0      	lsls	r0, r0, #31
1005c2c0:	d008      	beq.n	1005c2d4 <cb_aci_gatt_attribute_modified_event+0x24>
1005c2c2:	4608      	mov	r0, r1
1005c2c4:	3108      	adds	r1, #8
1005c2c6:	9100      	str	r1, [sp, #0]
1005c2c8:	88c3      	ldrh	r3, [r0, #6]
1005c2ca:	8882      	ldrh	r2, [r0, #4]
1005c2cc:	8841      	ldrh	r1, [r0, #2]
1005c2ce:	8800      	ldrh	r0, [r0, #0]
1005c2d0:	f7e9 f962 	bl	10045598 <aci_gatt_attribute_modified_event>
1005c2d4:	bd08      	pop	{r3, pc}
1005c2d6:	0000      	.short	0x0000
1005c2d8:	20000d64 	.word	0x20000d64

1005c2dc <cb_aci_gatt_disc_read_char_by_uuid_resp_event>:
1005c2dc:	b510      	push	{r4, lr}
1005c2de:	4808      	ldr	r0, [pc, #32]	; (1005c300 <cb_aci_gatt_disc_read_char_by_uuid_resp_event+0x24>)
1005c2e0:	2237      	movs	r2, #55	; 0x37
1005c2e2:	6800      	ldr	r0, [r0, #0]
1005c2e4:	0152      	lsls	r2, r2, #5
1005c2e6:	1880      	adds	r0, r0, r2
1005c2e8:	7b80      	ldrb	r0, [r0, #14]
1005c2ea:	0780      	lsls	r0, r0, #30
1005c2ec:	d506      	bpl.n	1005c2fc <cb_aci_gatt_disc_read_char_by_uuid_resp_event+0x20>
1005c2ee:	460b      	mov	r3, r1
1005c2f0:	790a      	ldrb	r2, [r1, #4]
1005c2f2:	8818      	ldrh	r0, [r3, #0]
1005c2f4:	8849      	ldrh	r1, [r1, #2]
1005c2f6:	1d5b      	adds	r3, r3, #5
1005c2f8:	f7e9 fb99 	bl	10045a2e <aci_gatt_disc_read_char_by_uuid_resp_event>
1005c2fc:	bd10      	pop	{r4, pc}
1005c2fe:	0000      	.short	0x0000
1005c300:	20000d64 	.word	0x20000d64

1005c304 <cb_aci_gatt_error_resp_event>:
1005c304:	b510      	push	{r4, lr}
1005c306:	4808      	ldr	r0, [pc, #32]	; (1005c328 <cb_aci_gatt_error_resp_event+0x24>)
1005c308:	2237      	movs	r2, #55	; 0x37
1005c30a:	6800      	ldr	r0, [r0, #0]
1005c30c:	0152      	lsls	r2, r2, #5
1005c30e:	1880      	adds	r0, r0, r2
1005c310:	7b40      	ldrb	r0, [r0, #13]
1005c312:	0600      	lsls	r0, r0, #24
1005c314:	d506      	bpl.n	1005c324 <cb_aci_gatt_error_resp_event+0x20>
1005c316:	4608      	mov	r0, r1
1005c318:	798b      	ldrb	r3, [r1, #6]
1005c31a:	888a      	ldrh	r2, [r1, #4]
1005c31c:	7889      	ldrb	r1, [r1, #2]
1005c31e:	8800      	ldrh	r0, [r0, #0]
1005c320:	f7e9 fb69 	bl	100459f6 <aci_gatt_error_resp_event>
1005c324:	bd10      	pop	{r4, pc}
1005c326:	0000      	.short	0x0000
1005c328:	20000d64 	.word	0x20000d64

1005c32c <cb_aci_gatt_indication_event>:
1005c32c:	b510      	push	{r4, lr}
1005c32e:	4808      	ldr	r0, [pc, #32]	; (1005c350 <cb_aci_gatt_indication_event+0x24>)
1005c330:	2237      	movs	r2, #55	; 0x37
1005c332:	6800      	ldr	r0, [r0, #0]
1005c334:	0152      	lsls	r2, r2, #5
1005c336:	1880      	adds	r0, r0, r2
1005c338:	7b40      	ldrb	r0, [r0, #13]
1005c33a:	0680      	lsls	r0, r0, #26
1005c33c:	d506      	bpl.n	1005c34c <cb_aci_gatt_indication_event+0x20>
1005c33e:	460b      	mov	r3, r1
1005c340:	790a      	ldrb	r2, [r1, #4]
1005c342:	8818      	ldrh	r0, [r3, #0]
1005c344:	8849      	ldrh	r1, [r1, #2]
1005c346:	1d5b      	adds	r3, r3, #5
1005c348:	f7e9 faed 	bl	10045926 <aci_gatt_indication_event>
1005c34c:	bd10      	pop	{r4, pc}
1005c34e:	0000      	.short	0x0000
1005c350:	20000d64 	.word	0x20000d64

1005c354 <cb_aci_gatt_notification_event>:
1005c354:	b510      	push	{r4, lr}
1005c356:	4808      	ldr	r0, [pc, #32]	; (1005c378 <cb_aci_gatt_notification_event+0x24>)
1005c358:	2237      	movs	r2, #55	; 0x37
1005c35a:	6800      	ldr	r0, [r0, #0]
1005c35c:	0152      	lsls	r2, r2, #5
1005c35e:	1880      	adds	r0, r0, r2
1005c360:	7b40      	ldrb	r0, [r0, #13]
1005c362:	0640      	lsls	r0, r0, #25
1005c364:	d506      	bpl.n	1005c374 <cb_aci_gatt_notification_event+0x20>
1005c366:	460b      	mov	r3, r1
1005c368:	790a      	ldrb	r2, [r1, #4]
1005c36a:	8818      	ldrh	r0, [r3, #0]
1005c36c:	8849      	ldrh	r1, [r1, #2]
1005c36e:	1d5b      	adds	r3, r3, #5
1005c370:	f7e9 fb00 	bl	10045974 <aci_gatt_notification_event>
1005c374:	bd10      	pop	{r4, pc}
1005c376:	0000      	.short	0x0000
1005c378:	20000d64 	.word	0x20000d64

1005c37c <cb_aci_gatt_prepare_write_permit_req_event>:
1005c37c:	b508      	push	{r3, lr}
1005c37e:	4608      	mov	r0, r1
1005c380:	1dc9      	adds	r1, r1, #7
1005c382:	9100      	str	r1, [sp, #0]
1005c384:	7983      	ldrb	r3, [r0, #6]
1005c386:	8882      	ldrh	r2, [r0, #4]
1005c388:	8841      	ldrh	r1, [r0, #2]
1005c38a:	8800      	ldrh	r0, [r0, #0]
1005c38c:	f7e9 fc1a 	bl	10045bc4 <aci_gatt_prepare_write_permit_req_event>
1005c390:	bd08      	pop	{r3, pc}
	...

1005c394 <cb_aci_gatt_proc_complete_event>:
1005c394:	b510      	push	{r4, lr}
1005c396:	4807      	ldr	r0, [pc, #28]	; (1005c3b4 <cb_aci_gatt_proc_complete_event+0x20>)
1005c398:	2237      	movs	r2, #55	; 0x37
1005c39a:	6800      	ldr	r0, [r0, #0]
1005c39c:	0152      	lsls	r2, r2, #5
1005c39e:	1880      	adds	r0, r0, r2
1005c3a0:	7b80      	ldrb	r0, [r0, #14]
1005c3a2:	07c0      	lsls	r0, r0, #31
1005c3a4:	d004      	beq.n	1005c3b0 <cb_aci_gatt_proc_complete_event+0x1c>
1005c3a6:	4608      	mov	r0, r1
1005c3a8:	7889      	ldrb	r1, [r1, #2]
1005c3aa:	8800      	ldrh	r0, [r0, #0]
1005c3ac:	f7e9 fb09 	bl	100459c2 <aci_gatt_proc_complete_event>
1005c3b0:	bd10      	pop	{r4, pc}
1005c3b2:	0000      	.short	0x0000
1005c3b4:	20000d64 	.word	0x20000d64

1005c3b8 <cb_aci_gatt_proc_timeout_event>:
1005c3b8:	b510      	push	{r4, lr}
1005c3ba:	4806      	ldr	r0, [pc, #24]	; (1005c3d4 <cb_aci_gatt_proc_timeout_event+0x1c>)
1005c3bc:	2237      	movs	r2, #55	; 0x37
1005c3be:	6800      	ldr	r0, [r0, #0]
1005c3c0:	0152      	lsls	r2, r2, #5
1005c3c2:	1880      	adds	r0, r0, r2
1005c3c4:	7b00      	ldrb	r0, [r0, #12]
1005c3c6:	0780      	lsls	r0, r0, #30
1005c3c8:	d502      	bpl.n	1005c3d0 <cb_aci_gatt_proc_timeout_event+0x18>
1005c3ca:	8808      	ldrh	r0, [r1, #0]
1005c3cc:	f7e9 f940 	bl	10045650 <aci_gatt_proc_timeout_event>
1005c3d0:	bd10      	pop	{r4, pc}
1005c3d2:	0000      	.short	0x0000
1005c3d4:	20000d64 	.word	0x20000d64

1005c3d8 <cb_aci_gatt_read_multi_permit_req_event>:
1005c3d8:	b510      	push	{r4, lr}
1005c3da:	460a      	mov	r2, r1
1005c3dc:	8810      	ldrh	r0, [r2, #0]
1005c3de:	7889      	ldrb	r1, [r1, #2]
1005c3e0:	1d12      	adds	r2, r2, #4
1005c3e2:	f7e9 fb95 	bl	10045b10 <aci_gatt_read_multi_permit_req_event>
1005c3e6:	bd10      	pop	{r4, pc}

1005c3e8 <cb_aci_gatt_read_permit_req_event>:
1005c3e8:	b510      	push	{r4, lr}
1005c3ea:	4608      	mov	r0, r1
1005c3ec:	888a      	ldrh	r2, [r1, #4]
1005c3ee:	8849      	ldrh	r1, [r1, #2]
1005c3f0:	8800      	ldrh	r0, [r0, #0]
1005c3f2:	f7e9 fb6a 	bl	10045aca <aci_gatt_read_permit_req_event>
1005c3f6:	bd10      	pop	{r4, pc}

1005c3f8 <cb_aci_gatt_server_confirmation_event>:
1005c3f8:	b510      	push	{r4, lr}
1005c3fa:	8808      	ldrh	r0, [r1, #0]
1005c3fc:	f7e9 fbca 	bl	10045b94 <aci_gatt_server_confirmation_event>
1005c400:	bd10      	pop	{r4, pc}

1005c402 <cb_aci_gatt_tx_pool_available_event>:
1005c402:	b510      	push	{r4, lr}
1005c404:	4608      	mov	r0, r1
1005c406:	8849      	ldrh	r1, [r1, #2]
1005c408:	8800      	ldrh	r0, [r0, #0]
1005c40a:	f7e9 fba5 	bl	10045b58 <aci_gatt_tx_pool_available_event>
1005c40e:	bd10      	pop	{r4, pc}

1005c410 <cb_aci_gatt_write_permit_req_event>:
1005c410:	b510      	push	{r4, lr}
1005c412:	460b      	mov	r3, r1
1005c414:	790a      	ldrb	r2, [r1, #4]
1005c416:	8818      	ldrh	r0, [r3, #0]
1005c418:	8849      	ldrh	r1, [r1, #2]
1005c41a:	1d5b      	adds	r3, r3, #5
1005c41c:	f7e9 fb2e 	bl	10045a7c <aci_gatt_write_permit_req_event>
1005c420:	bd10      	pop	{r4, pc}

1005c422 <cb_aci_hal_fw_error_event>:
1005c422:	b510      	push	{r4, lr}
1005c424:	460a      	mov	r2, r1
1005c426:	7810      	ldrb	r0, [r2, #0]
1005c428:	7849      	ldrb	r1, [r1, #1]
1005c42a:	1c92      	adds	r2, r2, #2
1005c42c:	f7e8 ff20 	bl	10045270 <aci_hal_fw_error_event>
1005c430:	bd10      	pop	{r4, pc}
	...

1005c434 <cb_aci_hal_scan_req_report_event>:
1005c434:	b510      	push	{r4, lr}
1005c436:	4808      	ldr	r0, [pc, #32]	; (1005c458 <cb_aci_hal_scan_req_report_event+0x24>)
1005c438:	2207      	movs	r2, #7
1005c43a:	6800      	ldr	r0, [r0, #0]
1005c43c:	0212      	lsls	r2, r2, #8
1005c43e:	1880      	adds	r0, r0, r2
1005c440:	7900      	ldrb	r0, [r0, #4]
1005c442:	07c0      	lsls	r0, r0, #31
1005c444:	d006      	beq.n	1005c454 <cb_aci_hal_scan_req_report_event+0x20>
1005c446:	460a      	mov	r2, r1
1005c448:	2000      	movs	r0, #0
1005c44a:	5610      	ldrsb	r0, [r2, r0]
1005c44c:	7849      	ldrb	r1, [r1, #1]
1005c44e:	1c92      	adds	r2, r2, #2
1005c450:	f7e8 fef0 	bl	10045234 <aci_hal_scan_req_report_event>
1005c454:	bd10      	pop	{r4, pc}
1005c456:	0000      	.short	0x0000
1005c458:	20000d64 	.word	0x20000d64

1005c45c <cb_aci_l2cap_command_reject_event>:
1005c45c:	b508      	push	{r3, lr}
1005c45e:	4608      	mov	r0, r1
1005c460:	2100      	movs	r1, #0
1005c462:	9100      	str	r1, [sp, #0]
1005c464:	8882      	ldrh	r2, [r0, #4]
1005c466:	7881      	ldrb	r1, [r0, #2]
1005c468:	8800      	ldrh	r0, [r0, #0]
1005c46a:	2300      	movs	r3, #0
1005c46c:	f7e9 f86e 	bl	1004554c <aci_l2cap_command_reject_event>
1005c470:	bd08      	pop	{r3, pc}
	...

1005c474 <cb_aci_l2cap_connection_update_req_event>:
1005c474:	b50e      	push	{r1, r2, r3, lr}
1005c476:	480b      	ldr	r0, [pc, #44]	; (1005c4a4 <cb_aci_l2cap_connection_update_req_event+0x30>)
1005c478:	2237      	movs	r2, #55	; 0x37
1005c47a:	6800      	ldr	r0, [r0, #0]
1005c47c:	0152      	lsls	r2, r2, #5
1005c47e:	1880      	adds	r0, r0, r2
1005c480:	7ac0      	ldrb	r0, [r0, #11]
1005c482:	07c0      	lsls	r0, r0, #31
1005c484:	d00c      	beq.n	1005c4a0 <cb_aci_l2cap_connection_update_req_event+0x2c>
1005c486:	4608      	mov	r0, r1
1005c488:	898b      	ldrh	r3, [r1, #12]
1005c48a:	894a      	ldrh	r2, [r1, #10]
1005c48c:	8909      	ldrh	r1, [r1, #8]
1005c48e:	9302      	str	r3, [sp, #8]
1005c490:	9201      	str	r2, [sp, #4]
1005c492:	9100      	str	r1, [sp, #0]
1005c494:	88c3      	ldrh	r3, [r0, #6]
1005c496:	8882      	ldrh	r2, [r0, #4]
1005c498:	7881      	ldrb	r1, [r0, #2]
1005c49a:	8800      	ldrh	r0, [r0, #0]
1005c49c:	f7e9 f82f 	bl	100454fe <aci_l2cap_connection_update_req_event>
1005c4a0:	bd0e      	pop	{r1, r2, r3, pc}
1005c4a2:	0000      	.short	0x0000
1005c4a4:	20000d64 	.word	0x20000d64

1005c4a8 <cb_aci_l2cap_connection_update_resp_event>:
1005c4a8:	b510      	push	{r4, lr}
1005c4aa:	4807      	ldr	r0, [pc, #28]	; (1005c4c8 <cb_aci_l2cap_connection_update_resp_event+0x20>)
1005c4ac:	2237      	movs	r2, #55	; 0x37
1005c4ae:	6800      	ldr	r0, [r0, #0]
1005c4b0:	0152      	lsls	r2, r2, #5
1005c4b2:	1880      	adds	r0, r0, r2
1005c4b4:	7ac0      	ldrb	r0, [r0, #11]
1005c4b6:	0780      	lsls	r0, r0, #30
1005c4b8:	d504      	bpl.n	1005c4c4 <cb_aci_l2cap_connection_update_resp_event+0x1c>
1005c4ba:	4608      	mov	r0, r1
1005c4bc:	8849      	ldrh	r1, [r1, #2]
1005c4be:	8800      	ldrh	r0, [r0, #0]
1005c4c0:	f7e8 ffde 	bl	10045480 <aci_l2cap_connection_update_resp_event>
1005c4c4:	bd10      	pop	{r4, pc}
1005c4c6:	0000      	.short	0x0000
1005c4c8:	20000d64 	.word	0x20000d64

1005c4cc <cb_aci_l2cap_proc_timeout_event>:
1005c4cc:	b510      	push	{r4, lr}
1005c4ce:	4807      	ldr	r0, [pc, #28]	; (1005c4ec <cb_aci_l2cap_proc_timeout_event+0x20>)
1005c4d0:	2237      	movs	r2, #55	; 0x37
1005c4d2:	6800      	ldr	r0, [r0, #0]
1005c4d4:	0152      	lsls	r2, r2, #5
1005c4d6:	1880      	adds	r0, r0, r2
1005c4d8:	7ac0      	ldrb	r0, [r0, #11]
1005c4da:	0740      	lsls	r0, r0, #29
1005c4dc:	d504      	bpl.n	1005c4e8 <cb_aci_l2cap_proc_timeout_event+0x1c>
1005c4de:	8808      	ldrh	r0, [r1, #0]
1005c4e0:	2200      	movs	r2, #0
1005c4e2:	4611      	mov	r1, r2
1005c4e4:	f7e8 ffea 	bl	100454bc <aci_l2cap_proc_timeout_event>
1005c4e8:	bd10      	pop	{r4, pc}
1005c4ea:	0000      	.short	0x0000
1005c4ec:	20000d64 	.word	0x20000d64

1005c4f0 <cb_hci_data_buffer_overflow_event>:
1005c4f0:	4770      	bx	lr
	...

1005c4f4 <cb_hci_disconnection_complete_event>:
1005c4f4:	b510      	push	{r4, lr}
1005c4f6:	4807      	ldr	r0, [pc, #28]	; (1005c514 <cb_hci_disconnection_complete_event+0x20>)
1005c4f8:	221b      	movs	r2, #27
1005c4fa:	6800      	ldr	r0, [r0, #0]
1005c4fc:	0192      	lsls	r2, r2, #6
1005c4fe:	1880      	adds	r0, r0, r2
1005c500:	7e80      	ldrb	r0, [r0, #26]
1005c502:	06c0      	lsls	r0, r0, #27
1005c504:	d505      	bpl.n	1005c512 <cb_hci_disconnection_complete_event+0x1e>
1005c506:	4608      	mov	r0, r1
1005c508:	790a      	ldrb	r2, [r1, #4]
1005c50a:	8849      	ldrh	r1, [r1, #2]
1005c50c:	7800      	ldrb	r0, [r0, #0]
1005c50e:	f7e8 fd73 	bl	10044ff8 <hci_disconnection_complete_event>
1005c512:	bd10      	pop	{r4, pc}
1005c514:	20000d64 	.word	0x20000d64

1005c518 <cb_hci_encryption_change_event>:
1005c518:	b510      	push	{r4, lr}
1005c51a:	4807      	ldr	r0, [pc, #28]	; (1005c538 <cb_hci_encryption_change_event+0x20>)
1005c51c:	221b      	movs	r2, #27
1005c51e:	6800      	ldr	r0, [r0, #0]
1005c520:	0192      	lsls	r2, r2, #6
1005c522:	1880      	adds	r0, r0, r2
1005c524:	7e80      	ldrb	r0, [r0, #26]
1005c526:	0600      	lsls	r0, r0, #24
1005c528:	d505      	bpl.n	1005c536 <cb_hci_encryption_change_event+0x1e>
1005c52a:	4608      	mov	r0, r1
1005c52c:	790a      	ldrb	r2, [r1, #4]
1005c52e:	8849      	ldrh	r1, [r1, #2]
1005c530:	7800      	ldrb	r0, [r0, #0]
1005c532:	f7e8 fd73 	bl	1004501c <hci_encryption_change_event>
1005c536:	bd10      	pop	{r4, pc}
1005c538:	20000d64 	.word	0x20000d64

1005c53c <cb_hci_encryption_key_refresh_complete_event>:
1005c53c:	b510      	push	{r4, lr}
1005c53e:	4807      	ldr	r0, [pc, #28]	; (1005c55c <cb_hci_encryption_key_refresh_complete_event+0x20>)
1005c540:	221b      	movs	r2, #27
1005c542:	6800      	ldr	r0, [r0, #0]
1005c544:	0192      	lsls	r2, r2, #6
1005c546:	1880      	adds	r0, r0, r2
1005c548:	7fc0      	ldrb	r0, [r0, #31]
1005c54a:	0600      	lsls	r0, r0, #24
1005c54c:	d504      	bpl.n	1005c558 <cb_hci_encryption_key_refresh_complete_event+0x1c>
1005c54e:	4608      	mov	r0, r1
1005c550:	8849      	ldrh	r1, [r1, #2]
1005c552:	7800      	ldrb	r0, [r0, #0]
1005c554:	f7e8 fdc2 	bl	100450dc <hci_encryption_key_refresh_complete_event>
1005c558:	bd10      	pop	{r4, pc}
1005c55a:	0000      	.short	0x0000
1005c55c:	20000d64 	.word	0x20000d64

1005c560 <cb_hci_le_advertising_report_event>:
1005c560:	b510      	push	{r4, lr}
1005c562:	4807      	ldr	r0, [pc, #28]	; (1005c580 <cb_hci_le_advertising_report_event+0x20>)
1005c564:	6802      	ldr	r2, [r0, #0]
1005c566:	2037      	movs	r0, #55	; 0x37
1005c568:	0140      	lsls	r0, r0, #5
1005c56a:	1810      	adds	r0, r2, r0
1005c56c:	7842      	ldrb	r2, [r0, #1]
1005c56e:	0692      	lsls	r2, r2, #26
1005c570:	d505      	bpl.n	1005c57e <cb_hci_le_advertising_report_event+0x1e>
1005c572:	7880      	ldrb	r0, [r0, #2]
1005c574:	0780      	lsls	r0, r0, #30
1005c576:	d502      	bpl.n	1005c57e <cb_hci_le_advertising_report_event+0x1e>
1005c578:	2001      	movs	r0, #1
1005c57a:	f7e9 fb92 	bl	10045ca2 <hci_le_advertising_report_event>
1005c57e:	bd10      	pop	{r4, pc}
1005c580:	20000d64 	.word	0x20000d64

1005c584 <cb_hci_le_connection_complete_event>:
1005c584:	4608      	mov	r0, r1
1005c586:	b510      	push	{r4, lr}
1005c588:	490e      	ldr	r1, [pc, #56]	; (1005c5c4 <cb_hci_le_connection_complete_event+0x40>)
1005c58a:	b086      	sub	sp, #24
1005c58c:	680a      	ldr	r2, [r1, #0]
1005c58e:	2137      	movs	r1, #55	; 0x37
1005c590:	0149      	lsls	r1, r1, #5
1005c592:	1851      	adds	r1, r2, r1
1005c594:	784a      	ldrb	r2, [r1, #1]
1005c596:	0692      	lsls	r2, r2, #26
1005c598:	d511      	bpl.n	1005c5be <cb_hci_le_connection_complete_event+0x3a>
1005c59a:	7889      	ldrb	r1, [r1, #2]
1005c59c:	07c9      	lsls	r1, r1, #31
1005c59e:	d00e      	beq.n	1005c5be <cb_hci_le_connection_complete_event+0x3a>
1005c5a0:	7c84      	ldrb	r4, [r0, #18]
1005c5a2:	8a03      	ldrh	r3, [r0, #16]
1005c5a4:	89c2      	ldrh	r2, [r0, #14]
1005c5a6:	8981      	ldrh	r1, [r0, #12]
1005c5a8:	9404      	str	r4, [sp, #16]
1005c5aa:	ac01      	add	r4, sp, #4
1005c5ac:	c40e      	stmia	r4!, {r1, r2, r3}
1005c5ae:	1d81      	adds	r1, r0, #6
1005c5b0:	9100      	str	r1, [sp, #0]
1005c5b2:	7943      	ldrb	r3, [r0, #5]
1005c5b4:	7902      	ldrb	r2, [r0, #4]
1005c5b6:	8841      	ldrh	r1, [r0, #2]
1005c5b8:	7800      	ldrb	r0, [r0, #0]
1005c5ba:	f7e9 fb2e 	bl	10045c1a <hci_le_connection_complete_event>
1005c5be:	b006      	add	sp, #24
1005c5c0:	bd10      	pop	{r4, pc}
1005c5c2:	0000      	.short	0x0000
1005c5c4:	20000d64 	.word	0x20000d64

1005c5c8 <cb_hci_le_connection_update_complete_event>:
1005c5c8:	b508      	push	{r3, lr}
1005c5ca:	480a      	ldr	r0, [pc, #40]	; (1005c5f4 <cb_hci_le_connection_update_complete_event+0x2c>)
1005c5cc:	6802      	ldr	r2, [r0, #0]
1005c5ce:	2037      	movs	r0, #55	; 0x37
1005c5d0:	0140      	lsls	r0, r0, #5
1005c5d2:	1810      	adds	r0, r2, r0
1005c5d4:	7842      	ldrb	r2, [r0, #1]
1005c5d6:	0692      	lsls	r2, r2, #26
1005c5d8:	d50b      	bpl.n	1005c5f2 <cb_hci_le_connection_update_complete_event+0x2a>
1005c5da:	7880      	ldrb	r0, [r0, #2]
1005c5dc:	0740      	lsls	r0, r0, #29
1005c5de:	d508      	bpl.n	1005c5f2 <cb_hci_le_connection_update_complete_event+0x2a>
1005c5e0:	4608      	mov	r0, r1
1005c5e2:	8909      	ldrh	r1, [r1, #8]
1005c5e4:	9100      	str	r1, [sp, #0]
1005c5e6:	88c3      	ldrh	r3, [r0, #6]
1005c5e8:	8882      	ldrh	r2, [r0, #4]
1005c5ea:	8841      	ldrh	r1, [r0, #2]
1005c5ec:	7800      	ldrb	r0, [r0, #0]
1005c5ee:	f7e9 fb99 	bl	10045d24 <hci_le_connection_update_complete_event>
1005c5f2:	bd08      	pop	{r3, pc}
1005c5f4:	20000d64 	.word	0x20000d64

1005c5f8 <cb_hci_le_data_length_change_event>:
1005c5f8:	b508      	push	{r3, lr}
1005c5fa:	480a      	ldr	r0, [pc, #40]	; (1005c624 <cb_hci_le_data_length_change_event+0x2c>)
1005c5fc:	6802      	ldr	r2, [r0, #0]
1005c5fe:	2037      	movs	r0, #55	; 0x37
1005c600:	0140      	lsls	r0, r0, #5
1005c602:	1810      	adds	r0, r2, r0
1005c604:	7842      	ldrb	r2, [r0, #1]
1005c606:	0692      	lsls	r2, r2, #26
1005c608:	d50b      	bpl.n	1005c622 <cb_hci_le_data_length_change_event+0x2a>
1005c60a:	7880      	ldrb	r0, [r0, #2]
1005c60c:	0640      	lsls	r0, r0, #25
1005c60e:	d508      	bpl.n	1005c622 <cb_hci_le_data_length_change_event+0x2a>
1005c610:	4608      	mov	r0, r1
1005c612:	8909      	ldrh	r1, [r1, #8]
1005c614:	9100      	str	r1, [sp, #0]
1005c616:	88c3      	ldrh	r3, [r0, #6]
1005c618:	8882      	ldrh	r2, [r0, #4]
1005c61a:	8841      	ldrh	r1, [r0, #2]
1005c61c:	8800      	ldrh	r0, [r0, #0]
1005c61e:	f7e9 fbe2 	bl	10045de6 <hci_le_data_length_change_event>
1005c622:	bd08      	pop	{r3, pc}
1005c624:	20000d64 	.word	0x20000d64

1005c628 <cb_hci_le_direct_advertising_report_event>:
1005c628:	b510      	push	{r4, lr}
1005c62a:	4807      	ldr	r0, [pc, #28]	; (1005c648 <cb_hci_le_direct_advertising_report_event+0x20>)
1005c62c:	6802      	ldr	r2, [r0, #0]
1005c62e:	2037      	movs	r0, #55	; 0x37
1005c630:	0140      	lsls	r0, r0, #5
1005c632:	1810      	adds	r0, r2, r0
1005c634:	7842      	ldrb	r2, [r0, #1]
1005c636:	0692      	lsls	r2, r2, #26
1005c638:	d505      	bpl.n	1005c646 <cb_hci_le_direct_advertising_report_event+0x1e>
1005c63a:	78c0      	ldrb	r0, [r0, #3]
1005c63c:	0740      	lsls	r0, r0, #29
1005c63e:	d502      	bpl.n	1005c646 <cb_hci_le_direct_advertising_report_event+0x1e>
1005c640:	2001      	movs	r0, #1
1005c642:	f7e9 fc69 	bl	10045f18 <hci_le_direct_advertising_report_event>
1005c646:	bd10      	pop	{r4, pc}
1005c648:	20000d64 	.word	0x20000d64

1005c64c <cb_hci_le_enhanced_connection_complete_event>:
1005c64c:	4608      	mov	r0, r1
1005c64e:	b510      	push	{r4, lr}
1005c650:	4910      	ldr	r1, [pc, #64]	; (1005c694 <cb_hci_le_enhanced_connection_complete_event+0x48>)
1005c652:	b088      	sub	sp, #32
1005c654:	680a      	ldr	r2, [r1, #0]
1005c656:	2137      	movs	r1, #55	; 0x37
1005c658:	0149      	lsls	r1, r1, #5
1005c65a:	1851      	adds	r1, r2, r1
1005c65c:	784a      	ldrb	r2, [r1, #1]
1005c65e:	0692      	lsls	r2, r2, #26
1005c660:	d516      	bpl.n	1005c690 <cb_hci_le_enhanced_connection_complete_event+0x44>
1005c662:	78c9      	ldrb	r1, [r1, #3]
1005c664:	0789      	lsls	r1, r1, #30
1005c666:	d513      	bpl.n	1005c690 <cb_hci_le_enhanced_connection_complete_event+0x44>
1005c668:	7f84      	ldrb	r4, [r0, #30]
1005c66a:	8b83      	ldrh	r3, [r0, #28]
1005c66c:	8b42      	ldrh	r2, [r0, #26]
1005c66e:	8b01      	ldrh	r1, [r0, #24]
1005c670:	9406      	str	r4, [sp, #24]
1005c672:	ac03      	add	r4, sp, #12
1005c674:	c40e      	stmia	r4!, {r1, r2, r3}
1005c676:	4601      	mov	r1, r0
1005c678:	3112      	adds	r1, #18
1005c67a:	1f8a      	subs	r2, r1, #6
1005c67c:	1d83      	adds	r3, r0, #6
1005c67e:	9300      	str	r3, [sp, #0]
1005c680:	9201      	str	r2, [sp, #4]
1005c682:	9102      	str	r1, [sp, #8]
1005c684:	7943      	ldrb	r3, [r0, #5]
1005c686:	7902      	ldrb	r2, [r0, #4]
1005c688:	8841      	ldrh	r1, [r0, #2]
1005c68a:	7800      	ldrb	r0, [r0, #0]
1005c68c:	f7e9 fbf4 	bl	10045e78 <hci_le_enhanced_connection_complete_event>
1005c690:	b008      	add	sp, #32
1005c692:	bd10      	pop	{r4, pc}
1005c694:	20000d64 	.word	0x20000d64

1005c698 <cb_hci_le_generate_dhkey_complete_event>:
1005c698:	b510      	push	{r4, lr}
1005c69a:	4808      	ldr	r0, [pc, #32]	; (1005c6bc <cb_hci_le_generate_dhkey_complete_event+0x24>)
1005c69c:	6802      	ldr	r2, [r0, #0]
1005c69e:	2037      	movs	r0, #55	; 0x37
1005c6a0:	0140      	lsls	r0, r0, #5
1005c6a2:	1810      	adds	r0, r2, r0
1005c6a4:	7842      	ldrb	r2, [r0, #1]
1005c6a6:	0692      	lsls	r2, r2, #26
1005c6a8:	d506      	bpl.n	1005c6b8 <cb_hci_le_generate_dhkey_complete_event+0x20>
1005c6aa:	78c0      	ldrb	r0, [r0, #3]
1005c6ac:	07c0      	lsls	r0, r0, #31
1005c6ae:	d003      	beq.n	1005c6b8 <cb_hci_le_generate_dhkey_complete_event+0x20>
1005c6b0:	7808      	ldrb	r0, [r1, #0]
1005c6b2:	1c49      	adds	r1, r1, #1
1005c6b4:	f7e9 fbc8 	bl	10045e48 <hci_le_generate_dhkey_complete_event>
1005c6b8:	bd10      	pop	{r4, pc}
1005c6ba:	0000      	.short	0x0000
1005c6bc:	20000d64 	.word	0x20000d64

1005c6c0 <cb_hci_le_long_term_key_request_event>:
1005c6c0:	b510      	push	{r4, lr}
1005c6c2:	4808      	ldr	r0, [pc, #32]	; (1005c6e4 <cb_hci_le_long_term_key_request_event+0x24>)
1005c6c4:	6802      	ldr	r2, [r0, #0]
1005c6c6:	2037      	movs	r0, #55	; 0x37
1005c6c8:	0140      	lsls	r0, r0, #5
1005c6ca:	1810      	adds	r0, r2, r0
1005c6cc:	7842      	ldrb	r2, [r0, #1]
1005c6ce:	0692      	lsls	r2, r2, #26
1005c6d0:	d507      	bpl.n	1005c6e2 <cb_hci_le_long_term_key_request_event+0x22>
1005c6d2:	7880      	ldrb	r0, [r0, #2]
1005c6d4:	06c0      	lsls	r0, r0, #27
1005c6d6:	d504      	bpl.n	1005c6e2 <cb_hci_le_long_term_key_request_event+0x22>
1005c6d8:	894a      	ldrh	r2, [r1, #10]
1005c6da:	8808      	ldrh	r0, [r1, #0]
1005c6dc:	1c89      	adds	r1, r1, #2
1005c6de:	f7e9 fb68 	bl	10045db2 <hci_le_long_term_key_request_event>
1005c6e2:	bd10      	pop	{r4, pc}
1005c6e4:	20000d64 	.word	0x20000d64

1005c6e8 <cb_hci_le_read_local_p256_public_key_complete_event>:
1005c6e8:	b510      	push	{r4, lr}
1005c6ea:	4808      	ldr	r0, [pc, #32]	; (1005c70c <cb_hci_le_read_local_p256_public_key_complete_event+0x24>)
1005c6ec:	6802      	ldr	r2, [r0, #0]
1005c6ee:	2037      	movs	r0, #55	; 0x37
1005c6f0:	0140      	lsls	r0, r0, #5
1005c6f2:	1810      	adds	r0, r2, r0
1005c6f4:	7842      	ldrb	r2, [r0, #1]
1005c6f6:	0692      	lsls	r2, r2, #26
1005c6f8:	d506      	bpl.n	1005c708 <cb_hci_le_read_local_p256_public_key_complete_event+0x20>
1005c6fa:	7880      	ldrb	r0, [r0, #2]
1005c6fc:	0600      	lsls	r0, r0, #24
1005c6fe:	d503      	bpl.n	1005c708 <cb_hci_le_read_local_p256_public_key_complete_event+0x20>
1005c700:	7808      	ldrb	r0, [r1, #0]
1005c702:	1c49      	adds	r1, r1, #1
1005c704:	f7e9 fb88 	bl	10045e18 <hci_le_read_local_p256_public_key_complete_event>
1005c708:	bd10      	pop	{r4, pc}
1005c70a:	0000      	.short	0x0000
1005c70c:	20000d64 	.word	0x20000d64

1005c710 <cb_hci_le_read_remote_used_features_complete_event>:
1005c710:	b510      	push	{r4, lr}
1005c712:	4809      	ldr	r0, [pc, #36]	; (1005c738 <cb_hci_le_read_remote_used_features_complete_event+0x28>)
1005c714:	6802      	ldr	r2, [r0, #0]
1005c716:	2037      	movs	r0, #55	; 0x37
1005c718:	0140      	lsls	r0, r0, #5
1005c71a:	1810      	adds	r0, r2, r0
1005c71c:	7842      	ldrb	r2, [r0, #1]
1005c71e:	0692      	lsls	r2, r2, #26
1005c720:	d508      	bpl.n	1005c734 <cb_hci_le_read_remote_used_features_complete_event+0x24>
1005c722:	7880      	ldrb	r0, [r0, #2]
1005c724:	0700      	lsls	r0, r0, #28
1005c726:	d505      	bpl.n	1005c734 <cb_hci_le_read_remote_used_features_complete_event+0x24>
1005c728:	460a      	mov	r2, r1
1005c72a:	7810      	ldrb	r0, [r2, #0]
1005c72c:	8849      	ldrh	r1, [r1, #2]
1005c72e:	1d12      	adds	r2, r2, #4
1005c730:	f7e9 fb21 	bl	10045d76 <hci_le_read_remote_used_features_complete_event>
1005c734:	bd10      	pop	{r4, pc}
1005c736:	0000      	.short	0x0000
1005c738:	20000d64 	.word	0x20000d64

1005c73c <cb_hci_number_of_completed_packets_event>:
1005c73c:	b510      	push	{r4, lr}
1005c73e:	2001      	movs	r0, #1
1005c740:	f7e8 fcad 	bl	1004509e <hci_number_of_completed_packets_event>
1005c744:	bd10      	pop	{r4, pc}
	...

1005c748 <cb_hci_read_remote_version_information_complete_event>:
1005c748:	b508      	push	{r3, lr}
1005c74a:	4808      	ldr	r0, [pc, #32]	; (1005c76c <cb_hci_read_remote_version_information_complete_event+0x24>)
1005c74c:	221b      	movs	r2, #27
1005c74e:	6800      	ldr	r0, [r0, #0]
1005c750:	0192      	lsls	r2, r2, #6
1005c752:	1880      	adds	r0, r0, r2
1005c754:	7ec0      	ldrb	r0, [r0, #27]
1005c756:	0700      	lsls	r0, r0, #28
1005c758:	d507      	bpl.n	1005c76a <cb_hci_read_remote_version_information_complete_event+0x22>
1005c75a:	88c8      	ldrh	r0, [r1, #6]
1005c75c:	9000      	str	r0, [sp, #0]
1005c75e:	888b      	ldrh	r3, [r1, #4]
1005c760:	788a      	ldrb	r2, [r1, #2]
1005c762:	8809      	ldrh	r1, [r1, #0]
1005c764:	2000      	movs	r0, #0
1005c766:	f7e8 fc6b 	bl	10045040 <hci_read_remote_version_information_complete_event>
1005c76a:	bd08      	pop	{r3, pc}
1005c76c:	20000d64 	.word	0x20000d64

1005c770 <cb_hci_rx_acl_data_event>:
1005c770:	b508      	push	{r3, lr}
1005c772:	4608      	mov	r0, r1
1005c774:	1d89      	adds	r1, r1, #6
1005c776:	9100      	str	r1, [sp, #0]
1005c778:	8883      	ldrh	r3, [r0, #4]
1005c77a:	78c2      	ldrb	r2, [r0, #3]
1005c77c:	7881      	ldrb	r1, [r0, #2]
1005c77e:	8800      	ldrh	r0, [r0, #0]
1005c780:	f000 f83c 	bl	1005c7fc <hci_rx_acl_data_event>
1005c784:	bd08      	pop	{r3, pc}

1005c786 <fifoBuf_getFreeHeader>:
1005c786:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c788:	8844      	ldrh	r4, [r0, #2]
1005c78a:	1c49      	adds	r1, r1, #1
1005c78c:	b2a4      	uxth	r4, r4
1005c78e:	b2e5      	uxtb	r5, r4
1005c790:	08a4      	lsrs	r4, r4, #2
1005c792:	b209      	sxth	r1, r1
1005c794:	801c      	strh	r4, [r3, #0]
1005c796:	b28e      	uxth	r6, r1
1005c798:	8887      	ldrh	r7, [r0, #4]
1005c79a:	1936      	adds	r6, r6, r4
1005c79c:	42be      	cmp	r6, r7
1005c79e:	d904      	bls.n	1005c7aa <fifoBuf_getFreeHeader+0x24>
1005c7a0:	b2a6      	uxth	r6, r4
1005c7a2:	1b89      	subs	r1, r1, r6
1005c7a4:	1c6d      	adds	r5, r5, #1
1005c7a6:	b209      	sxth	r1, r1
1005c7a8:	b2ed      	uxtb	r5, r5
1005c7aa:	00a4      	lsls	r4, r4, #2
1005c7ac:	1824      	adds	r4, r4, r0
1005c7ae:	3408      	adds	r4, #8
1005c7b0:	6014      	str	r4, [r2, #0]
1005c7b2:	881c      	ldrh	r4, [r3, #0]
1005c7b4:	07ad      	lsls	r5, r5, #30
1005c7b6:	1864      	adds	r4, r4, r1
1005c7b8:	00a4      	lsls	r4, r4, #2
1005c7ba:	0fad      	lsrs	r5, r5, #30
1005c7bc:	432c      	orrs	r4, r5
1005c7be:	b2a4      	uxth	r4, r4
1005c7c0:	801c      	strh	r4, [r3, #0]
1005c7c2:	8803      	ldrh	r3, [r0, #0]
1005c7c4:	1ae3      	subs	r3, r4, r3
1005c7c6:	079c      	lsls	r4, r3, #30
1005c7c8:	0fa4      	lsrs	r4, r4, #30
1005c7ca:	2c01      	cmp	r4, #1
1005c7cc:	d802      	bhi.n	1005c7d4 <fifoBuf_getFreeHeader+0x4e>
1005c7ce:	d103      	bne.n	1005c7d8 <fifoBuf_getFreeHeader+0x52>
1005c7d0:	2b00      	cmp	r3, #0
1005c7d2:	dd01      	ble.n	1005c7d8 <fifoBuf_getFreeHeader+0x52>
1005c7d4:	2300      	movs	r3, #0
1005c7d6:	e00a      	b.n	1005c7ee <fifoBuf_getFreeHeader+0x68>
1005c7d8:	2301      	movs	r3, #1
1005c7da:	2900      	cmp	r1, #0
1005c7dc:	da07      	bge.n	1005c7ee <fifoBuf_getFreeHeader+0x68>
1005c7de:	6811      	ldr	r1, [r2, #0]
1005c7e0:	788c      	ldrb	r4, [r1, #2]
1005c7e2:	08a4      	lsrs	r4, r4, #2
1005c7e4:	00a4      	lsls	r4, r4, #2
1005c7e6:	1c64      	adds	r4, r4, #1
1005c7e8:	708c      	strb	r4, [r1, #2]
1005c7ea:	3008      	adds	r0, #8
1005c7ec:	6010      	str	r0, [r2, #0]
1005c7ee:	4618      	mov	r0, r3
1005c7f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005c7f2 <fifoCtrl_init>:
1005c7f2:	2200      	movs	r2, #0
1005c7f4:	8002      	strh	r2, [r0, #0]
1005c7f6:	8042      	strh	r2, [r0, #2]
1005c7f8:	8081      	strh	r1, [r0, #4]
1005c7fa:	4770      	bx	lr

1005c7fc <hci_rx_acl_data_event>:
1005c7fc:	2000      	movs	r0, #0
1005c7fe:	4770      	bx	lr

1005c800 <int_cb_hci_disconnection_complete_event>:
1005c800:	b570      	push	{r4, r5, r6, lr}
1005c802:	78c5      	ldrb	r5, [r0, #3]
1005c804:	4604      	mov	r4, r0
1005c806:	460e      	mov	r6, r1
1005c808:	4628      	mov	r0, r5
1005c80a:	f7f1 fb50 	bl	1004deae <L2C_Rcv_Event_Handler_ISR>
1005c80e:	4631      	mov	r1, r6
1005c810:	4628      	mov	r0, r5
1005c812:	f7eb f949 	bl	10047aa8 <GAP_LL_Event_Handler_ISR>
1005c816:	2000      	movs	r0, #0
1005c818:	70e0      	strb	r0, [r4, #3]
1005c81a:	78a0      	ldrb	r0, [r4, #2]
1005c81c:	21bf      	movs	r1, #191	; 0xbf
1005c81e:	4008      	ands	r0, r1
1005c820:	70a0      	strb	r0, [r4, #2]
1005c822:	2045      	movs	r0, #69	; 0x45
1005c824:	bd70      	pop	{r4, r5, r6, pc}

1005c826 <int_cb_hci_encryption_change_event>:
1005c826:	b510      	push	{r4, lr}
1005c828:	4604      	mov	r4, r0
1005c82a:	78c0      	ldrb	r0, [r0, #3]
1005c82c:	f7f1 fb3f 	bl	1004deae <L2C_Rcv_Event_Handler_ISR>
1005c830:	2001      	movs	r0, #1
1005c832:	70e0      	strb	r0, [r4, #3]
1005c834:	78a0      	ldrb	r0, [r4, #2]
1005c836:	21bf      	movs	r1, #191	; 0xbf
1005c838:	4008      	ands	r0, r1
1005c83a:	70a0      	strb	r0, [r4, #2]
1005c83c:	2045      	movs	r0, #69	; 0x45
1005c83e:	bd10      	pop	{r4, pc}

1005c840 <int_cb_hci_encryption_key_refresh_complete_event>:
1005c840:	b510      	push	{r4, lr}
1005c842:	4604      	mov	r4, r0
1005c844:	78c0      	ldrb	r0, [r0, #3]
1005c846:	f7f1 fb32 	bl	1004deae <L2C_Rcv_Event_Handler_ISR>
1005c84a:	2002      	movs	r0, #2
1005c84c:	70e0      	strb	r0, [r4, #3]
1005c84e:	78a0      	ldrb	r0, [r4, #2]
1005c850:	21bf      	movs	r1, #191	; 0xbf
1005c852:	4008      	ands	r0, r1
1005c854:	70a0      	strb	r0, [r4, #2]
1005c856:	2045      	movs	r0, #69	; 0x45
1005c858:	bd10      	pop	{r4, pc}

1005c85a <int_cb_hci_le_advertising_report_event>:
1005c85a:	b510      	push	{r4, lr}
1005c85c:	4604      	mov	r4, r0
1005c85e:	78c0      	ldrb	r0, [r0, #3]
1005c860:	f7eb f922 	bl	10047aa8 <GAP_LL_Event_Handler_ISR>
1005c864:	2800      	cmp	r0, #0
1005c866:	d006      	beq.n	1005c876 <int_cb_hci_le_advertising_report_event+0x1c>
1005c868:	2005      	movs	r0, #5
1005c86a:	70e0      	strb	r0, [r4, #3]
1005c86c:	78a0      	ldrb	r0, [r4, #2]
1005c86e:	21bf      	movs	r1, #191	; 0xbf
1005c870:	4008      	ands	r0, r1
1005c872:	70a0      	strb	r0, [r4, #2]
1005c874:	2045      	movs	r0, #69	; 0x45
1005c876:	bd10      	pop	{r4, pc}

1005c878 <int_cb_hci_le_connection_complete_event>:
1005c878:	b570      	push	{r4, r5, r6, lr}
1005c87a:	78c5      	ldrb	r5, [r0, #3]
1005c87c:	4604      	mov	r4, r0
1005c87e:	460e      	mov	r6, r1
1005c880:	4628      	mov	r0, r5
1005c882:	f7f1 fb14 	bl	1004deae <L2C_Rcv_Event_Handler_ISR>
1005c886:	4631      	mov	r1, r6
1005c888:	4628      	mov	r0, r5
1005c88a:	f7eb f90d 	bl	10047aa8 <GAP_LL_Event_Handler_ISR>
1005c88e:	2003      	movs	r0, #3
1005c890:	70e0      	strb	r0, [r4, #3]
1005c892:	78a0      	ldrb	r0, [r4, #2]
1005c894:	21bf      	movs	r1, #191	; 0xbf
1005c896:	4008      	ands	r0, r1
1005c898:	70a0      	strb	r0, [r4, #2]
1005c89a:	2045      	movs	r0, #69	; 0x45
1005c89c:	bd70      	pop	{r4, r5, r6, pc}

1005c89e <int_cb_hci_le_data_length_change_event>:
1005c89e:	2106      	movs	r1, #6
1005c8a0:	70c1      	strb	r1, [r0, #3]
1005c8a2:	7881      	ldrb	r1, [r0, #2]
1005c8a4:	22bf      	movs	r2, #191	; 0xbf
1005c8a6:	4011      	ands	r1, r2
1005c8a8:	7081      	strb	r1, [r0, #2]
1005c8aa:	2045      	movs	r0, #69	; 0x45
1005c8ac:	4770      	bx	lr

1005c8ae <int_cb_hci_le_direct_advertising_report_event>:
1005c8ae:	b510      	push	{r4, lr}
1005c8b0:	4604      	mov	r4, r0
1005c8b2:	78c0      	ldrb	r0, [r0, #3]
1005c8b4:	f7eb f8f8 	bl	10047aa8 <GAP_LL_Event_Handler_ISR>
1005c8b8:	2800      	cmp	r0, #0
1005c8ba:	d006      	beq.n	1005c8ca <int_cb_hci_le_direct_advertising_report_event+0x1c>
1005c8bc:	200a      	movs	r0, #10
1005c8be:	70e0      	strb	r0, [r4, #3]
1005c8c0:	78a0      	ldrb	r0, [r4, #2]
1005c8c2:	21bf      	movs	r1, #191	; 0xbf
1005c8c4:	4008      	ands	r0, r1
1005c8c6:	70a0      	strb	r0, [r4, #2]
1005c8c8:	2045      	movs	r0, #69	; 0x45
1005c8ca:	bd10      	pop	{r4, pc}

1005c8cc <int_cb_hci_le_enhanced_connection_complete_event>:
1005c8cc:	b570      	push	{r4, r5, r6, lr}
1005c8ce:	78c5      	ldrb	r5, [r0, #3]
1005c8d0:	4604      	mov	r4, r0
1005c8d2:	460e      	mov	r6, r1
1005c8d4:	4628      	mov	r0, r5
1005c8d6:	f7f1 faea 	bl	1004deae <L2C_Rcv_Event_Handler_ISR>
1005c8da:	4631      	mov	r1, r6
1005c8dc:	4628      	mov	r0, r5
1005c8de:	f7eb f8e3 	bl	10047aa8 <GAP_LL_Event_Handler_ISR>
1005c8e2:	2009      	movs	r0, #9
1005c8e4:	70e0      	strb	r0, [r4, #3]
1005c8e6:	78a0      	ldrb	r0, [r4, #2]
1005c8e8:	21bf      	movs	r1, #191	; 0xbf
1005c8ea:	4008      	ands	r0, r1
1005c8ec:	70a0      	strb	r0, [r4, #2]
1005c8ee:	2045      	movs	r0, #69	; 0x45
1005c8f0:	bd70      	pop	{r4, r5, r6, pc}

1005c8f2 <int_cb_hci_le_generate_dhkey_complete_event>:
1005c8f2:	b510      	push	{r4, lr}
1005c8f4:	4604      	mov	r4, r0
1005c8f6:	4608      	mov	r0, r1
1005c8f8:	f7e5 f978 	bl	10041bec <smp_sc_hci_le_generate_dhkey_complete_evt_hndl_ucfg>
1005c8fc:	2008      	movs	r0, #8
1005c8fe:	70e0      	strb	r0, [r4, #3]
1005c900:	78a0      	ldrb	r0, [r4, #2]
1005c902:	21bf      	movs	r1, #191	; 0xbf
1005c904:	4008      	ands	r0, r1
1005c906:	70a0      	strb	r0, [r4, #2]
1005c908:	2045      	movs	r0, #69	; 0x45
1005c90a:	bd10      	pop	{r4, pc}

1005c90c <int_cb_hci_le_long_term_key_request_event>:
1005c90c:	b510      	push	{r4, lr}
1005c90e:	78c0      	ldrb	r0, [r0, #3]
1005c910:	f7f1 facd 	bl	1004deae <L2C_Rcv_Event_Handler_ISR>
1005c914:	2000      	movs	r0, #0
1005c916:	bd10      	pop	{r4, pc}

1005c918 <int_cb_hci_le_read_local_p256_public_key_complete_event>:
1005c918:	b510      	push	{r4, lr}
1005c91a:	4604      	mov	r4, r0
1005c91c:	4608      	mov	r0, r1
1005c91e:	f7e5 f961 	bl	10041be4 <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg>
1005c922:	2007      	movs	r0, #7
1005c924:	70e0      	strb	r0, [r4, #3]
1005c926:	78a0      	ldrb	r0, [r4, #2]
1005c928:	21bf      	movs	r1, #191	; 0xbf
1005c92a:	4008      	ands	r0, r1
1005c92c:	70a0      	strb	r0, [r4, #2]
1005c92e:	2045      	movs	r0, #69	; 0x45
1005c930:	bd10      	pop	{r4, pc}
	...

1005c934 <Acl_Init>:
1005c934:	4806      	ldr	r0, [pc, #24]	; (1005c950 <Acl_Init+0x1c>)
1005c936:	2100      	movs	r1, #0
1005c938:	6802      	ldr	r2, [r0, #0]
1005c93a:	2049      	movs	r0, #73	; 0x49
1005c93c:	0140      	lsls	r0, r0, #5
1005c93e:	1810      	adds	r0, r2, r0
1005c940:	7201      	strb	r1, [r0, #8]
1005c942:	7241      	strb	r1, [r0, #9]
1005c944:	2103      	movs	r1, #3
1005c946:	7281      	strb	r1, [r0, #10]
1005c948:	72c1      	strb	r1, [r0, #11]
1005c94a:	2000      	movs	r0, #0
1005c94c:	4770      	bx	lr
1005c94e:	0000      	.short	0x0000
1005c950:	20000d64 	.word	0x20000d64

1005c954 <Acl_Rcv_Pkt_Handler>:
1005c954:	b570      	push	{r4, r5, r6, lr}
1005c956:	4d0d      	ldr	r5, [pc, #52]	; (1005c98c <Acl_Rcv_Pkt_Handler+0x38>)
1005c958:	4604      	mov	r4, r0
1005c95a:	2301      	movs	r3, #1
1005c95c:	6828      	ldr	r0, [r5, #0]
1005c95e:	02d9      	lsls	r1, r3, #11
1005c960:	1840      	adds	r0, r0, r1
1005c962:	2690      	movs	r6, #144	; 0x90
1005c964:	461a      	mov	r2, r3
1005c966:	6940      	ldr	r0, [r0, #20]
1005c968:	4631      	mov	r1, r6
1005c96a:	f7ff fabf 	bl	1005beec <aci_event_fifo_push_header>
1005c96e:	0001      	movs	r1, r0
1005c970:	d003      	beq.n	1005c97a <Acl_Rcv_Pkt_Handler+0x26>
1005c972:	4630      	mov	r0, r6
1005c974:	604c      	str	r4, [r1, #4]
1005c976:	f7ff faa5 	bl	1005bec4 <aci_event_fifo_push>
1005c97a:	2049      	movs	r0, #73	; 0x49
1005c97c:	6829      	ldr	r1, [r5, #0]
1005c97e:	0140      	lsls	r0, r0, #5
1005c980:	1809      	adds	r1, r1, r0
1005c982:	7a08      	ldrb	r0, [r1, #8]
1005c984:	1c40      	adds	r0, r0, #1
1005c986:	7208      	strb	r0, [r1, #8]
1005c988:	bd70      	pop	{r4, r5, r6, pc}
1005c98a:	0000      	.short	0x0000
1005c98c:	20000d64 	.word	0x20000d64

1005c990 <Acl_Transmit_Data>:
1005c990:	b510      	push	{r4, lr}
1005c992:	4604      	mov	r4, r0
1005c994:	2000      	movs	r0, #0
1005c996:	8220      	strh	r0, [r4, #16]
1005c998:	74a0      	strb	r0, [r4, #18]
1005c99a:	68a1      	ldr	r1, [r4, #8]
1005c99c:	61a1      	str	r1, [r4, #24]
1005c99e:	6161      	str	r1, [r4, #20]
1005c9a0:	6020      	str	r0, [r4, #0]
1005c9a2:	4620      	mov	r0, r4
1005c9a4:	f7f9 fe94 	bl	100566d0 <LL_Send_ACL_Data>
1005c9a8:	2845      	cmp	r0, #69	; 0x45
1005c9aa:	d001      	beq.n	1005c9b0 <Acl_Transmit_Data+0x20>
1005c9ac:	2041      	movs	r0, #65	; 0x41
1005c9ae:	bd10      	pop	{r4, pc}
1005c9b0:	88a0      	ldrh	r0, [r4, #4]
1005c9b2:	2103      	movs	r1, #3
1005c9b4:	f7f7 fba2 	bl	100540fc <get_connection_no>
1005c9b8:	4604      	mov	r4, r0
1005c9ba:	f7f7 fc21 	bl	10054200 <is_slave>
1005c9be:	2800      	cmp	r0, #0
1005c9c0:	d013      	beq.n	1005c9ea <Acl_Transmit_Data+0x5a>
1005c9c2:	b672      	cpsid	i
1005c9c4:	480a      	ldr	r0, [pc, #40]	; (1005c9f0 <Acl_Transmit_Data+0x60>)
1005c9c6:	2201      	movs	r2, #1
1005c9c8:	6801      	ldr	r1, [r0, #0]
1005c9ca:	2009      	movs	r0, #9
1005c9cc:	0200      	lsls	r0, r0, #8
1005c9ce:	1809      	adds	r1, r1, r0
1005c9d0:	7848      	ldrb	r0, [r1, #1]
1005c9d2:	40a2      	lsls	r2, r4
1005c9d4:	4310      	orrs	r0, r2
1005c9d6:	7048      	strb	r0, [r1, #1]
1005c9d8:	b662      	cpsie	i
1005c9da:	2000      	movs	r0, #0
1005c9dc:	f7fa ff50 	bl	10057880 <slave_advance>
1005c9e0:	2800      	cmp	r0, #0
1005c9e2:	d002      	beq.n	1005c9ea <Acl_Transmit_Data+0x5a>
1005c9e4:	2000      	movs	r0, #0
1005c9e6:	f000 f917 	bl	1005cc18 <advance_wakeup_timer>
1005c9ea:	2000      	movs	r0, #0
1005c9ec:	bd10      	pop	{r4, pc}
1005c9ee:	0000      	.short	0x0000
1005c9f0:	20000d64 	.word	0x20000d64

1005c9f4 <Acl_Tx_Cmpl_Pkt_Handler>:
1005c9f4:	b570      	push	{r4, r5, r6, lr}
1005c9f6:	7cc1      	ldrb	r1, [r0, #19]
1005c9f8:	4d0e      	ldr	r5, [pc, #56]	; (1005ca34 <Acl_Tx_Cmpl_Pkt_Handler+0x40>)
1005c9fa:	0649      	lsls	r1, r1, #25
1005c9fc:	0e49      	lsrs	r1, r1, #25
1005c9fe:	74c1      	strb	r1, [r0, #19]
1005ca00:	4604      	mov	r4, r0
1005ca02:	2301      	movs	r3, #1
1005ca04:	6828      	ldr	r0, [r5, #0]
1005ca06:	02d9      	lsls	r1, r3, #11
1005ca08:	1840      	adds	r0, r0, r1
1005ca0a:	2690      	movs	r6, #144	; 0x90
1005ca0c:	2200      	movs	r2, #0
1005ca0e:	6940      	ldr	r0, [r0, #20]
1005ca10:	4631      	mov	r1, r6
1005ca12:	f7ff fa6b 	bl	1005beec <aci_event_fifo_push_header>
1005ca16:	0001      	movs	r1, r0
1005ca18:	d003      	beq.n	1005ca22 <Acl_Tx_Cmpl_Pkt_Handler+0x2e>
1005ca1a:	4630      	mov	r0, r6
1005ca1c:	604c      	str	r4, [r1, #4]
1005ca1e:	f7ff fa51 	bl	1005bec4 <aci_event_fifo_push>
1005ca22:	2049      	movs	r0, #73	; 0x49
1005ca24:	6829      	ldr	r1, [r5, #0]
1005ca26:	0140      	lsls	r0, r0, #5
1005ca28:	1809      	adds	r1, r1, r0
1005ca2a:	7a48      	ldrb	r0, [r1, #9]
1005ca2c:	1c40      	adds	r0, r0, #1
1005ca2e:	7248      	strb	r0, [r1, #9]
1005ca30:	bd70      	pop	{r4, r5, r6, pc}
1005ca32:	0000      	.short	0x0000
1005ca34:	20000d64 	.word	0x20000d64

1005ca38 <int_cb_hci_acl_data_ind_event>:
1005ca38:	b510      	push	{r4, lr}
1005ca3a:	78c2      	ldrb	r2, [r0, #3]
1005ca3c:	4c0d      	ldr	r4, [pc, #52]	; (1005ca74 <int_cb_hci_acl_data_ind_event+0x3c>)
1005ca3e:	6808      	ldr	r0, [r1, #0]
1005ca40:	6821      	ldr	r1, [r4, #0]
1005ca42:	31a0      	adds	r1, #160	; 0xa0
1005ca44:	7909      	ldrb	r1, [r1, #4]
1005ca46:	07c9      	lsls	r1, r1, #31
1005ca48:	d005      	beq.n	1005ca56 <int_cb_hci_acl_data_ind_event+0x1e>
1005ca4a:	f7f0 fd4f 	bl	1004d4ec <hci_rx_acl_data>
1005ca4e:	2800      	cmp	r0, #0
1005ca50:	d006      	beq.n	1005ca60 <int_cb_hci_acl_data_ind_event+0x28>
1005ca52:	2043      	movs	r0, #67	; 0x43
1005ca54:	bd10      	pop	{r4, pc}
1005ca56:	4601      	mov	r1, r0
1005ca58:	4610      	mov	r0, r2
1005ca5a:	f7f1 fa19 	bl	1004de90 <L2C_Rcv_Event_Handler>
1005ca5e:	e7f6      	b.n	1005ca4e <int_cb_hci_acl_data_ind_event+0x16>
1005ca60:	b672      	cpsid	i
1005ca62:	2149      	movs	r1, #73	; 0x49
1005ca64:	6822      	ldr	r2, [r4, #0]
1005ca66:	0149      	lsls	r1, r1, #5
1005ca68:	1852      	adds	r2, r2, r1
1005ca6a:	7a11      	ldrb	r1, [r2, #8]
1005ca6c:	1e49      	subs	r1, r1, #1
1005ca6e:	7211      	strb	r1, [r2, #8]
1005ca70:	b662      	cpsie	i
1005ca72:	bd10      	pop	{r4, pc}
1005ca74:	20000d64 	.word	0x20000d64

1005ca78 <int_cb_hci_acl_data_tx_cmpl_event>:
1005ca78:	b570      	push	{r4, r5, r6, lr}
1005ca7a:	4603      	mov	r3, r0
1005ca7c:	2243      	movs	r2, #67	; 0x43
1005ca7e:	78dc      	ldrb	r4, [r3, #3]
1005ca80:	2600      	movs	r6, #0
1005ca82:	6808      	ldr	r0, [r1, #0]
1005ca84:	e010      	b.n	1005caa8 <int_cb_hci_acl_data_tx_cmpl_event+0x30>
1005ca86:	6805      	ldr	r5, [r0, #0]
1005ca88:	6006      	str	r6, [r0, #0]
1005ca8a:	7cc1      	ldrb	r1, [r0, #19]
1005ca8c:	07c9      	lsls	r1, r1, #31
1005ca8e:	d002      	beq.n	1005ca96 <int_cb_hci_acl_data_tx_cmpl_event+0x1e>
1005ca90:	f7f0 fd76 	bl	1004d580 <hci_tx_acl_data_done>
1005ca94:	e003      	b.n	1005ca9e <int_cb_hci_acl_data_tx_cmpl_event+0x26>
1005ca96:	4601      	mov	r1, r0
1005ca98:	4620      	mov	r0, r4
1005ca9a:	f7f1 f9f9 	bl	1004de90 <L2C_Rcv_Event_Handler>
1005ca9e:	0002      	movs	r2, r0
1005caa0:	d001      	beq.n	1005caa6 <int_cb_hci_acl_data_tx_cmpl_event+0x2e>
1005caa2:	2243      	movs	r2, #67	; 0x43
1005caa4:	e00e      	b.n	1005cac4 <int_cb_hci_acl_data_tx_cmpl_event+0x4c>
1005caa6:	4628      	mov	r0, r5
1005caa8:	2800      	cmp	r0, #0
1005caaa:	d1ec      	bne.n	1005ca86 <int_cb_hci_acl_data_tx_cmpl_event+0xe>
1005caac:	2a00      	cmp	r2, #0
1005caae:	d109      	bne.n	1005cac4 <int_cb_hci_acl_data_tx_cmpl_event+0x4c>
1005cab0:	b672      	cpsid	i
1005cab2:	4805      	ldr	r0, [pc, #20]	; (1005cac8 <int_cb_hci_acl_data_tx_cmpl_event+0x50>)
1005cab4:	6801      	ldr	r1, [r0, #0]
1005cab6:	2049      	movs	r0, #73	; 0x49
1005cab8:	0140      	lsls	r0, r0, #5
1005caba:	1809      	adds	r1, r1, r0
1005cabc:	7a48      	ldrb	r0, [r1, #9]
1005cabe:	1e40      	subs	r0, r0, #1
1005cac0:	7248      	strb	r0, [r1, #9]
1005cac2:	b662      	cpsie	i
1005cac4:	4610      	mov	r0, r2
1005cac6:	bd70      	pop	{r4, r5, r6, pc}
1005cac8:	20000d64 	.word	0x20000d64

1005cacc <isr_Acl_Data_Indication_Queue_Full>:
1005cacc:	4806      	ldr	r0, [pc, #24]	; (1005cae8 <isr_Acl_Data_Indication_Queue_Full+0x1c>)
1005cace:	6801      	ldr	r1, [r0, #0]
1005cad0:	2049      	movs	r0, #73	; 0x49
1005cad2:	0140      	lsls	r0, r0, #5
1005cad4:	1808      	adds	r0, r1, r0
1005cad6:	7a01      	ldrb	r1, [r0, #8]
1005cad8:	7a80      	ldrb	r0, [r0, #10]
1005cada:	4281      	cmp	r1, r0
1005cadc:	d901      	bls.n	1005cae2 <isr_Acl_Data_Indication_Queue_Full+0x16>
1005cade:	2001      	movs	r0, #1
1005cae0:	4770      	bx	lr
1005cae2:	2000      	movs	r0, #0
1005cae4:	4770      	bx	lr
1005cae6:	0000      	.short	0x0000
1005cae8:	20000d64 	.word	0x20000d64

1005caec <isr_Acl_Data_TX_Cmpl_Queue_Full>:
1005caec:	4806      	ldr	r0, [pc, #24]	; (1005cb08 <isr_Acl_Data_TX_Cmpl_Queue_Full+0x1c>)
1005caee:	6801      	ldr	r1, [r0, #0]
1005caf0:	2049      	movs	r0, #73	; 0x49
1005caf2:	0140      	lsls	r0, r0, #5
1005caf4:	1808      	adds	r0, r1, r0
1005caf6:	7a41      	ldrb	r1, [r0, #9]
1005caf8:	7ac0      	ldrb	r0, [r0, #11]
1005cafa:	4281      	cmp	r1, r0
1005cafc:	d901      	bls.n	1005cb02 <isr_Acl_Data_TX_Cmpl_Queue_Full+0x16>
1005cafe:	2001      	movs	r0, #1
1005cb00:	4770      	bx	lr
1005cb02:	2000      	movs	r0, #0
1005cb04:	4770      	bx	lr
1005cb06:	0000      	.short	0x0000
1005cb08:	20000d64 	.word	0x20000d64

1005cb0c <acl_list_first>:
1005cb0c:	6800      	ldr	r0, [r0, #0]
1005cb0e:	4770      	bx	lr

1005cb10 <acl_list_full_on_packt>:
1005cb10:	b510      	push	{r4, lr}
1005cb12:	4604      	mov	r4, r0
1005cb14:	7a00      	ldrb	r0, [r0, #8]
1005cb16:	28ff      	cmp	r0, #255	; 0xff
1005cb18:	d00b      	beq.n	1005cb32 <acl_list_full_on_packt+0x22>
1005cb1a:	4608      	mov	r0, r1
1005cb1c:	f7f7 ff80 	bl	10054a20 <PM_Get_Mem_Buff_Count>
1005cb20:	7ae1      	ldrb	r1, [r4, #11]
1005cb22:	7a62      	ldrb	r2, [r4, #9]
1005cb24:	1889      	adds	r1, r1, r2
1005cb26:	1840      	adds	r0, r0, r1
1005cb28:	7a21      	ldrb	r1, [r4, #8]
1005cb2a:	4288      	cmp	r0, r1
1005cb2c:	d901      	bls.n	1005cb32 <acl_list_full_on_packt+0x22>
1005cb2e:	2001      	movs	r0, #1
1005cb30:	bd10      	pop	{r4, pc}
1005cb32:	2000      	movs	r0, #0
1005cb34:	bd10      	pop	{r4, pc}

1005cb36 <acl_list_init>:
1005cb36:	2300      	movs	r3, #0
1005cb38:	6003      	str	r3, [r0, #0]
1005cb3a:	6043      	str	r3, [r0, #4]
1005cb3c:	7241      	strb	r1, [r0, #9]
1005cb3e:	7202      	strb	r2, [r0, #8]
1005cb40:	72c3      	strb	r3, [r0, #11]
1005cb42:	7283      	strb	r3, [r0, #10]
1005cb44:	4770      	bx	lr

1005cb46 <acl_list_insert_head>:
1005cb46:	b510      	push	{r4, lr}
1005cb48:	4604      	mov	r4, r0
1005cb4a:	6800      	ldr	r0, [r0, #0]
1005cb4c:	6008      	str	r0, [r1, #0]
1005cb4e:	6820      	ldr	r0, [r4, #0]
1005cb50:	2800      	cmp	r0, #0
1005cb52:	d100      	bne.n	1005cb56 <acl_list_insert_head+0x10>
1005cb54:	6061      	str	r1, [r4, #4]
1005cb56:	4608      	mov	r0, r1
1005cb58:	6021      	str	r1, [r4, #0]
1005cb5a:	f7f7 ff61 	bl	10054a20 <PM_Get_Mem_Buff_Count>
1005cb5e:	7ae1      	ldrb	r1, [r4, #11]
1005cb60:	1840      	adds	r0, r0, r1
1005cb62:	72e0      	strb	r0, [r4, #11]
1005cb64:	7aa0      	ldrb	r0, [r4, #10]
1005cb66:	1c40      	adds	r0, r0, #1
1005cb68:	72a0      	strb	r0, [r4, #10]
1005cb6a:	bd10      	pop	{r4, pc}

1005cb6c <acl_list_insert_tail>:
1005cb6c:	b510      	push	{r4, lr}
1005cb6e:	4604      	mov	r4, r0
1005cb70:	2000      	movs	r0, #0
1005cb72:	6008      	str	r0, [r1, #0]
1005cb74:	6820      	ldr	r0, [r4, #0]
1005cb76:	2800      	cmp	r0, #0
1005cb78:	d00c      	beq.n	1005cb94 <acl_list_insert_tail+0x28>
1005cb7a:	6860      	ldr	r0, [r4, #4]
1005cb7c:	6001      	str	r1, [r0, #0]
1005cb7e:	4608      	mov	r0, r1
1005cb80:	6061      	str	r1, [r4, #4]
1005cb82:	f7f7 ff4d 	bl	10054a20 <PM_Get_Mem_Buff_Count>
1005cb86:	7ae1      	ldrb	r1, [r4, #11]
1005cb88:	1840      	adds	r0, r0, r1
1005cb8a:	72e0      	strb	r0, [r4, #11]
1005cb8c:	7aa0      	ldrb	r0, [r4, #10]
1005cb8e:	1c40      	adds	r0, r0, #1
1005cb90:	72a0      	strb	r0, [r4, #10]
1005cb92:	bd10      	pop	{r4, pc}
1005cb94:	6021      	str	r1, [r4, #0]
1005cb96:	e7f2      	b.n	1005cb7e <acl_list_insert_tail+0x12>

1005cb98 <acl_list_is_empty>:
1005cb98:	6800      	ldr	r0, [r0, #0]
1005cb9a:	2800      	cmp	r0, #0
1005cb9c:	d001      	beq.n	1005cba2 <acl_list_is_empty+0xa>
1005cb9e:	2000      	movs	r0, #0
1005cba0:	4770      	bx	lr
1005cba2:	2001      	movs	r0, #1
1005cba4:	4770      	bx	lr

1005cba6 <acl_list_remove>:
1005cba6:	b510      	push	{r4, lr}
1005cba8:	4604      	mov	r4, r0
1005cbaa:	6800      	ldr	r0, [r0, #0]
1005cbac:	4288      	cmp	r0, r1
1005cbae:	d109      	bne.n	1005cbc4 <acl_list_remove+0x1e>
1005cbb0:	6802      	ldr	r2, [r0, #0]
1005cbb2:	6022      	str	r2, [r4, #0]
1005cbb4:	2200      	movs	r2, #0
1005cbb6:	6002      	str	r2, [r0, #0]
1005cbb8:	6820      	ldr	r0, [r4, #0]
1005cbba:	2800      	cmp	r0, #0
1005cbbc:	d10b      	bne.n	1005cbd6 <acl_list_remove+0x30>
1005cbbe:	6062      	str	r2, [r4, #4]
1005cbc0:	e009      	b.n	1005cbd6 <acl_list_remove+0x30>
1005cbc2:	4610      	mov	r0, r2
1005cbc4:	6802      	ldr	r2, [r0, #0]
1005cbc6:	428a      	cmp	r2, r1
1005cbc8:	d1fb      	bne.n	1005cbc2 <acl_list_remove+0x1c>
1005cbca:	680a      	ldr	r2, [r1, #0]
1005cbcc:	6002      	str	r2, [r0, #0]
1005cbce:	6862      	ldr	r2, [r4, #4]
1005cbd0:	428a      	cmp	r2, r1
1005cbd2:	d100      	bne.n	1005cbd6 <acl_list_remove+0x30>
1005cbd4:	6060      	str	r0, [r4, #4]
1005cbd6:	4608      	mov	r0, r1
1005cbd8:	f7f7 ff22 	bl	10054a20 <PM_Get_Mem_Buff_Count>
1005cbdc:	7ae1      	ldrb	r1, [r4, #11]
1005cbde:	1a08      	subs	r0, r1, r0
1005cbe0:	72e0      	strb	r0, [r4, #11]
1005cbe2:	7aa0      	ldrb	r0, [r4, #10]
1005cbe4:	1e40      	subs	r0, r0, #1
1005cbe6:	72a0      	strb	r0, [r4, #10]
1005cbe8:	bd10      	pop	{r4, pc}

1005cbea <acl_list_remove_head>:
1005cbea:	b510      	push	{r4, lr}
1005cbec:	4604      	mov	r4, r0
1005cbee:	6800      	ldr	r0, [r0, #0]
1005cbf0:	6008      	str	r0, [r1, #0]
1005cbf2:	6820      	ldr	r0, [r4, #0]
1005cbf4:	6802      	ldr	r2, [r0, #0]
1005cbf6:	6022      	str	r2, [r4, #0]
1005cbf8:	2200      	movs	r2, #0
1005cbfa:	6002      	str	r2, [r0, #0]
1005cbfc:	6820      	ldr	r0, [r4, #0]
1005cbfe:	2800      	cmp	r0, #0
1005cc00:	d100      	bne.n	1005cc04 <acl_list_remove_head+0x1a>
1005cc02:	6062      	str	r2, [r4, #4]
1005cc04:	6808      	ldr	r0, [r1, #0]
1005cc06:	f7f7 ff0b 	bl	10054a20 <PM_Get_Mem_Buff_Count>
1005cc0a:	7ae1      	ldrb	r1, [r4, #11]
1005cc0c:	1a08      	subs	r0, r1, r0
1005cc0e:	72e0      	strb	r0, [r4, #11]
1005cc10:	7aa0      	ldrb	r0, [r4, #10]
1005cc12:	1e40      	subs	r0, r0, #1
1005cc14:	72a0      	strb	r0, [r4, #10]
1005cc16:	bd10      	pop	{r4, pc}

1005cc18 <advance_wakeup_timer>:
1005cc18:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1005cc1a:	4ff7      	ldr	r7, [pc, #988]	; (1005cff8 <advance_wakeup_timer+0x3e0>)
1005cc1c:	207b      	movs	r0, #123	; 0x7b
1005cc1e:	6839      	ldr	r1, [r7, #0]
1005cc20:	0100      	lsls	r0, r0, #4
1005cc22:	180d      	adds	r5, r1, r0
1005cc24:	4608      	mov	r0, r1
1005cc26:	b096      	sub	sp, #88	; 0x58
1005cc28:	3068      	adds	r0, #104	; 0x68
1005cc2a:	9012      	str	r0, [sp, #72]	; 0x48
1005cc2c:	2009      	movs	r0, #9
1005cc2e:	0200      	lsls	r0, r0, #8
1005cc30:	1808      	adds	r0, r1, r0
1005cc32:	6b00      	ldr	r0, [r0, #48]	; 0x30
1005cc34:	9013      	str	r0, [sp, #76]	; 0x4c
1005cc36:	2041      	movs	r0, #65	; 0x41
1005cc38:	0140      	lsls	r0, r0, #5
1005cc3a:	180e      	adds	r6, r1, r0
1005cc3c:	2009      	movs	r0, #9
1005cc3e:	06c0      	lsls	r0, r0, #27
1005cc40:	6900      	ldr	r0, [r0, #16]
1005cc42:	9007      	str	r0, [sp, #28]
1005cc44:	2000      	movs	r0, #0
1005cc46:	9003      	str	r0, [sp, #12]
1005cc48:	2408      	movs	r4, #8
1005cc4a:	48ec      	ldr	r0, [pc, #944]	; (1005cffc <advance_wakeup_timer+0x3e4>)
1005cc4c:	f7fa fc86 	bl	1005755c <machine_time_trans>
1005cc50:	9002      	str	r0, [sp, #8]
1005cc52:	2000      	movs	r0, #0
1005cc54:	9014      	str	r0, [sp, #80]	; 0x50
1005cc56:	b672      	cpsid	i
1005cc58:	6838      	ldr	r0, [r7, #0]
1005cc5a:	22f7      	movs	r2, #247	; 0xf7
1005cc5c:	3040      	adds	r0, #64	; 0x40
1005cc5e:	79c1      	ldrb	r1, [r0, #7]
1005cc60:	4011      	ands	r1, r2
1005cc62:	71c1      	strb	r1, [r0, #7]
1005cc64:	9812      	ldr	r0, [sp, #72]	; 0x48
1005cc66:	2101      	movs	r1, #1
1005cc68:	7101      	strb	r1, [r0, #4]
1005cc6a:	9812      	ldr	r0, [sp, #72]	; 0x48
1005cc6c:	6801      	ldr	r1, [r0, #0]
1005cc6e:	074a      	lsls	r2, r1, #29
1005cc70:	0f52      	lsrs	r2, r2, #29
1005cc72:	7142      	strb	r2, [r0, #5]
1005cc74:	08c9      	lsrs	r1, r1, #3
1005cc76:	9812      	ldr	r0, [sp, #72]	; 0x48
1005cc78:	00c9      	lsls	r1, r1, #3
1005cc7a:	6001      	str	r1, [r0, #0]
1005cc7c:	b662      	cpsie	i
1005cc7e:	9816      	ldr	r0, [sp, #88]	; 0x58
1005cc80:	2800      	cmp	r0, #0
1005cc82:	d001      	beq.n	1005cc88 <advance_wakeup_timer+0x70>
1005cc84:	9807      	ldr	r0, [sp, #28]
1005cc86:	e00d      	b.n	1005cca4 <advance_wakeup_timer+0x8c>
1005cc88:	2064      	movs	r0, #100	; 0x64
1005cc8a:	f7fa fc67 	bl	1005755c <machine_time_trans>
1005cc8e:	9907      	ldr	r1, [sp, #28]
1005cc90:	1842      	adds	r2, r0, r1
1005cc92:	48db      	ldr	r0, [pc, #876]	; (1005d000 <advance_wakeup_timer+0x3e8>)
1005cc94:	7a41      	ldrb	r1, [r0, #9]
1005cc96:	48d8      	ldr	r0, [pc, #864]	; (1005cff8 <advance_wakeup_timer+0x3e0>)
1005cc98:	6800      	ldr	r0, [r0, #0]
1005cc9a:	6a80      	ldr	r0, [r0, #40]	; 0x28
1005cc9c:	1808      	adds	r0, r1, r0
1005cc9e:	1810      	adds	r0, r2, r0
1005cca0:	0200      	lsls	r0, r0, #8
1005cca2:	0a00      	lsrs	r0, r0, #8
1005cca4:	f7f6 ffa6 	bl	10053bf4 <advance_slave_timing_MultiSlave>
1005cca8:	6b68      	ldr	r0, [r5, #52]	; 0x34
1005ccaa:	9004      	str	r0, [sp, #16]
1005ccac:	203a      	movs	r0, #58	; 0x3a
1005ccae:	5d40      	ldrb	r0, [r0, r5]
1005ccb0:	900e      	str	r0, [sp, #56]	; 0x38
1005ccb2:	2808      	cmp	r0, #8
1005ccb4:	d242      	bcs.n	1005cd3c <advance_wakeup_timer+0x124>
1005ccb6:	2001      	movs	r0, #1
1005ccb8:	9003      	str	r0, [sp, #12]
1005ccba:	980e      	ldr	r0, [sp, #56]	; 0x38
1005ccbc:	2158      	movs	r1, #88	; 0x58
1005ccbe:	4348      	muls	r0, r1
1005ccc0:	9913      	ldr	r1, [sp, #76]	; 0x4c
1005ccc2:	1840      	adds	r0, r0, r1
1005ccc4:	9005      	str	r0, [sp, #20]
1005ccc6:	48cf      	ldr	r0, [pc, #828]	; (1005d004 <advance_wakeup_timer+0x3ec>)
1005ccc8:	6a87      	ldr	r7, [r0, #40]	; 0x28
1005ccca:	48cd      	ldr	r0, [pc, #820]	; (1005d000 <advance_wakeup_timer+0x3e8>)
1005cccc:	7a40      	ldrb	r0, [r0, #9]
1005ccce:	00c0      	lsls	r0, r0, #3
1005ccd0:	f7fa fca6 	bl	10057620 <system_time_trans>
1005ccd4:	4601      	mov	r1, r0
1005ccd6:	9805      	ldr	r0, [sp, #20]
1005ccd8:	8f00      	ldrh	r0, [r0, #56]	; 0x38
1005ccda:	0240      	lsls	r0, r0, #9
1005ccdc:	1808      	adds	r0, r1, r0
1005ccde:	49c7      	ldr	r1, [pc, #796]	; (1005cffc <advance_wakeup_timer+0x3e4>)
1005cce0:	4249      	negs	r1, r1
1005cce2:	1840      	adds	r0, r0, r1
1005cce4:	4287      	cmp	r7, r0
1005cce6:	d200      	bcs.n	1005ccea <advance_wakeup_timer+0xd2>
1005cce8:	4638      	mov	r0, r7
1005ccea:	6570      	str	r0, [r6, #84]	; 0x54
1005ccec:	20b8      	movs	r0, #184	; 0xb8
1005ccee:	5981      	ldr	r1, [r0, r6]
1005ccf0:	790a      	ldrb	r2, [r1, #4]
1005ccf2:	7948      	ldrb	r0, [r1, #5]
1005ccf4:	7989      	ldrb	r1, [r1, #6]
1005ccf6:	0200      	lsls	r0, r0, #8
1005ccf8:	4310      	orrs	r0, r2
1005ccfa:	0789      	lsls	r1, r1, #30
1005ccfc:	0b89      	lsrs	r1, r1, #14
1005ccfe:	4301      	orrs	r1, r0
1005cd00:	9805      	ldr	r0, [sp, #20]
1005cd02:	31ff      	adds	r1, #255	; 0xff
1005cd04:	3040      	adds	r0, #64	; 0x40
1005cd06:	8a02      	ldrh	r2, [r0, #16]
1005cd08:	8a40      	ldrh	r0, [r0, #18]
1005cd0a:	31c3      	adds	r1, #195	; 0xc3
1005cd0c:	1810      	adds	r0, r2, r0
1005cd0e:	1840      	adds	r0, r0, r1
1005cd10:	f7fa fdb2 	bl	10057878 <microseconds_to_machine_time>
1005cd14:	4607      	mov	r7, r0
1005cd16:	205f      	movs	r0, #95	; 0x5f
1005cd18:	0100      	lsls	r0, r0, #4
1005cd1a:	f7fa fc1f 	bl	1005755c <machine_time_trans>
1005cd1e:	42b8      	cmp	r0, r7
1005cd20:	d904      	bls.n	1005cd2c <advance_wakeup_timer+0x114>
1005cd22:	205f      	movs	r0, #95	; 0x5f
1005cd24:	0100      	lsls	r0, r0, #4
1005cd26:	f7fa fc19 	bl	1005755c <machine_time_trans>
1005cd2a:	e000      	b.n	1005cd2e <advance_wakeup_timer+0x116>
1005cd2c:	4638      	mov	r0, r7
1005cd2e:	9904      	ldr	r1, [sp, #16]
1005cd30:	1809      	adds	r1, r1, r0
1005cd32:	48b3      	ldr	r0, [pc, #716]	; (1005d000 <advance_wakeup_timer+0x3e8>)
1005cd34:	7a40      	ldrb	r0, [r0, #9]
1005cd36:	00c0      	lsls	r0, r0, #3
1005cd38:	1808      	adds	r0, r1, r0
1005cd3a:	9014      	str	r0, [sp, #80]	; 0x50
1005cd3c:	6d70      	ldr	r0, [r6, #84]	; 0x54
1005cd3e:	f7fa fc0d 	bl	1005755c <machine_time_trans>
1005cd42:	9904      	ldr	r1, [sp, #16]
1005cd44:	1840      	adds	r0, r0, r1
1005cd46:	9001      	str	r0, [sp, #4]
1005cd48:	2000      	movs	r0, #0
1005cd4a:	4607      	mov	r7, r0
1005cd4c:	9006      	str	r0, [sp, #24]
1005cd4e:	7d28      	ldrb	r0, [r5, #20]
1005cd50:	2800      	cmp	r0, #0
1005cd52:	d109      	bne.n	1005cd68 <advance_wakeup_timer+0x150>
1005cd54:	980e      	ldr	r0, [sp, #56]	; 0x38
1005cd56:	2808      	cmp	r0, #8
1005cd58:	d306      	bcc.n	1005cd68 <advance_wakeup_timer+0x150>
1005cd5a:	49a9      	ldr	r1, [pc, #676]	; (1005d000 <advance_wakeup_timer+0x3e8>)
1005cd5c:	2000      	movs	r0, #0
1005cd5e:	8008      	strh	r0, [r1, #0]
1005cd60:	2109      	movs	r1, #9
1005cd62:	06c9      	lsls	r1, r1, #27
1005cd64:	6048      	str	r0, [r1, #4]
1005cd66:	e165      	b.n	1005d034 <advance_wakeup_timer+0x41c>
1005cd68:	6868      	ldr	r0, [r5, #4]
1005cd6a:	9008      	str	r0, [sp, #32]
1005cd6c:	6c68      	ldr	r0, [r5, #68]	; 0x44
1005cd6e:	900a      	str	r0, [sp, #40]	; 0x28
1005cd70:	6829      	ldr	r1, [r5, #0]
1005cd72:	9807      	ldr	r0, [sp, #28]
1005cd74:	1a40      	subs	r0, r0, r1
1005cd76:	0200      	lsls	r0, r0, #8
1005cd78:	1204      	asrs	r4, r0, #8
1005cd7a:	48a1      	ldr	r0, [pc, #644]	; (1005d000 <advance_wakeup_timer+0x3e8>)
1005cd7c:	8800      	ldrh	r0, [r0, #0]
1005cd7e:	0740      	lsls	r0, r0, #29
1005cd80:	0f40      	lsrs	r0, r0, #29
1005cd82:	f7f7 fa3d 	bl	10054200 <is_slave>
1005cd86:	2800      	cmp	r0, #0
1005cd88:	d001      	beq.n	1005cd8e <advance_wakeup_timer+0x176>
1005cd8a:	2000      	movs	r0, #0
1005cd8c:	e007      	b.n	1005cd9e <advance_wakeup_timer+0x186>
1005cd8e:	2c00      	cmp	r4, #0
1005cd90:	dbfb      	blt.n	1005cd8a <advance_wakeup_timer+0x172>
1005cd92:	4620      	mov	r0, r4
1005cd94:	f7fa fc44 	bl	10057620 <system_time_trans>
1005cd98:	990a      	ldr	r1, [sp, #40]	; 0x28
1005cd9a:	4288      	cmp	r0, r1
1005cd9c:	da00      	bge.n	1005cda0 <advance_wakeup_timer+0x188>
1005cd9e:	900a      	str	r0, [sp, #40]	; 0x28
1005cda0:	2001      	movs	r0, #1
1005cda2:	0780      	lsls	r0, r0, #30
1005cda4:	2408      	movs	r4, #8
1005cda6:	900c      	str	r0, [sp, #48]	; 0x30
1005cda8:	2000      	movs	r0, #0
1005cdaa:	900f      	str	r0, [sp, #60]	; 0x3c
1005cdac:	7d29      	ldrb	r1, [r5, #20]
1005cdae:	e03a      	b.n	1005ce26 <advance_wakeup_timer+0x20e>
1005cdb0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1005cdb2:	4290      	cmp	r0, r2
1005cdb4:	d034      	beq.n	1005ce20 <advance_wakeup_timer+0x208>
1005cdb6:	4a90      	ldr	r2, [pc, #576]	; (1005cff8 <advance_wakeup_timer+0x3e0>)
1005cdb8:	6812      	ldr	r2, [r2, #0]
1005cdba:	3220      	adds	r2, #32
1005cdbc:	7d92      	ldrb	r2, [r2, #22]
1005cdbe:	0712      	lsls	r2, r2, #28
1005cdc0:	0f12      	lsrs	r2, r2, #28
1005cdc2:	4282      	cmp	r2, r0
1005cdc4:	d02c      	beq.n	1005ce20 <advance_wakeup_timer+0x208>
1005cdc6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
1005cdc8:	0042      	lsls	r2, r0, #1
1005cdca:	9306      	str	r3, [sp, #24]
1005cdcc:	9207      	str	r2, [sp, #28]
1005cdce:	5a9f      	ldrh	r7, [r3, r2]
1005cdd0:	9705      	str	r7, [sp, #20]
1005cdd2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
1005cdd4:	5a9a      	ldrh	r2, [r3, r2]
1005cdd6:	9b08      	ldr	r3, [sp, #32]
1005cdd8:	0192      	lsls	r2, r2, #6
1005cdda:	437b      	muls	r3, r7
1005cddc:	18d3      	adds	r3, r2, r3
1005cdde:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1005cde0:	469c      	mov	ip, r3
1005cde2:	4293      	cmp	r3, r2
1005cde4:	da12      	bge.n	1005ce0c <advance_wakeup_timer+0x1f4>
1005cde6:	07ca      	lsls	r2, r1, #31
1005cde8:	d010      	beq.n	1005ce0c <advance_wakeup_timer+0x1f4>
1005cdea:	6b2a      	ldr	r2, [r5, #48]	; 0x30
1005cdec:	9b07      	ldr	r3, [sp, #28]
1005cdee:	9f08      	ldr	r7, [sp, #32]
1005cdf0:	5ad2      	ldrh	r2, [r2, r3]
1005cdf2:	1c52      	adds	r2, r2, #1
1005cdf4:	b293      	uxth	r3, r2
1005cdf6:	461a      	mov	r2, r3
1005cdf8:	437a      	muls	r2, r7
1005cdfa:	9f05      	ldr	r7, [sp, #20]
1005cdfc:	4494      	add	ip, r2
1005cdfe:	18fa      	adds	r2, r7, r3
1005ce00:	b292      	uxth	r2, r2
1005ce02:	4613      	mov	r3, r2
1005ce04:	9205      	str	r2, [sp, #20]
1005ce06:	9f07      	ldr	r7, [sp, #28]
1005ce08:	9a06      	ldr	r2, [sp, #24]
1005ce0a:	53d3      	strh	r3, [r2, r7]
1005ce0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005ce0e:	4663      	mov	r3, ip
1005ce10:	4594      	cmp	ip, r2
1005ce12:	d205      	bcs.n	1005ce20 <advance_wakeup_timer+0x208>
1005ce14:	07ca      	lsls	r2, r1, #31
1005ce16:	d003      	beq.n	1005ce20 <advance_wakeup_timer+0x208>
1005ce18:	9a05      	ldr	r2, [sp, #20]
1005ce1a:	930c      	str	r3, [sp, #48]	; 0x30
1005ce1c:	4604      	mov	r4, r0
1005ce1e:	920f      	str	r2, [sp, #60]	; 0x3c
1005ce20:	0849      	lsrs	r1, r1, #1
1005ce22:	1c40      	adds	r0, r0, #1
1005ce24:	b2c0      	uxtb	r0, r0
1005ce26:	2900      	cmp	r1, #0
1005ce28:	d1c2      	bne.n	1005cdb0 <advance_wakeup_timer+0x198>
1005ce2a:	980c      	ldr	r0, [sp, #48]	; 0x30
1005ce2c:	f7fa fb96 	bl	1005755c <machine_time_trans>
1005ce30:	6829      	ldr	r1, [r5, #0]
1005ce32:	1847      	adds	r7, r0, r1
1005ce34:	6aa8      	ldr	r0, [r5, #40]	; 0x28
1005ce36:	0061      	lsls	r1, r4, #1
1005ce38:	5a40      	ldrh	r0, [r0, r1]
1005ce3a:	0180      	lsls	r0, r0, #6
1005ce3c:	f7fa fb8e 	bl	1005755c <machine_time_trans>
1005ce40:	19c0      	adds	r0, r0, r7
1005ce42:	9006      	str	r0, [sp, #24]
1005ce44:	486e      	ldr	r0, [pc, #440]	; (1005d000 <advance_wakeup_timer+0x3e8>)
1005ce46:	7a40      	ldrb	r0, [r0, #9]
1005ce48:	2258      	movs	r2, #88	; 0x58
1005ce4a:	00c1      	lsls	r1, r0, #3
1005ce4c:	486a      	ldr	r0, [pc, #424]	; (1005cff8 <advance_wakeup_timer+0x3e0>)
1005ce4e:	6800      	ldr	r0, [r0, #0]
1005ce50:	5c12      	ldrb	r2, [r2, r0]
1005ce52:	2a00      	cmp	r2, #0
1005ce54:	4a6c      	ldr	r2, [pc, #432]	; (1005d008 <advance_wakeup_timer+0x3f0>)
1005ce56:	6912      	ldr	r2, [r2, #16]
1005ce58:	d00c      	beq.n	1005ce74 <advance_wakeup_timer+0x25c>
1005ce5a:	1abb      	subs	r3, r7, r2
1005ce5c:	9a02      	ldr	r2, [sp, #8]
1005ce5e:	0052      	lsls	r2, r2, #1
1005ce60:	1a9b      	subs	r3, r3, r2
1005ce62:	9a16      	ldr	r2, [sp, #88]	; 0x58
1005ce64:	2a00      	cmp	r2, #0
1005ce66:	d001      	beq.n	1005ce6c <advance_wakeup_timer+0x254>
1005ce68:	2000      	movs	r0, #0
1005ce6a:	e001      	b.n	1005ce70 <advance_wakeup_timer+0x258>
1005ce6c:	6a80      	ldr	r0, [r0, #40]	; 0x28
1005ce6e:	1840      	adds	r0, r0, r1
1005ce70:	1a18      	subs	r0, r3, r0
1005ce72:	e00b      	b.n	1005ce8c <advance_wakeup_timer+0x274>
1005ce74:	1abb      	subs	r3, r7, r2
1005ce76:	9a02      	ldr	r2, [sp, #8]
1005ce78:	0852      	lsrs	r2, r2, #1
1005ce7a:	1a9a      	subs	r2, r3, r2
1005ce7c:	9b16      	ldr	r3, [sp, #88]	; 0x58
1005ce7e:	2b00      	cmp	r3, #0
1005ce80:	d001      	beq.n	1005ce86 <advance_wakeup_timer+0x26e>
1005ce82:	2000      	movs	r0, #0
1005ce84:	e001      	b.n	1005ce8a <advance_wakeup_timer+0x272>
1005ce86:	6a80      	ldr	r0, [r0, #40]	; 0x28
1005ce88:	1840      	adds	r0, r0, r1
1005ce8a:	1a10      	subs	r0, r2, r0
1005ce8c:	0200      	lsls	r0, r0, #8
1005ce8e:	0a00      	lsrs	r0, r0, #8
1005ce90:	2101      	movs	r1, #1
1005ce92:	05c9      	lsls	r1, r1, #23
1005ce94:	9005      	str	r0, [sp, #20]
1005ce96:	4288      	cmp	r0, r1
1005ce98:	d309      	bcc.n	1005ceae <advance_wakeup_timer+0x296>
1005ce9a:	2c08      	cmp	r4, #8
1005ce9c:	d07e      	beq.n	1005cf9c <advance_wakeup_timer+0x384>
1005ce9e:	4620      	mov	r0, r4
1005cea0:	f7f8 fea2 	bl	10055be8 <cancel_master>
1005cea4:	4955      	ldr	r1, [pc, #340]	; (1005cffc <advance_wakeup_timer+0x3e4>)
1005cea6:	980c      	ldr	r0, [sp, #48]	; 0x30
1005cea8:	1840      	adds	r0, r0, r1
1005ceaa:	900a      	str	r0, [sp, #40]	; 0x28
1005ceac:	6468      	str	r0, [r5, #68]	; 0x44
1005ceae:	2101      	movs	r1, #1
1005ceb0:	9805      	ldr	r0, [sp, #20]
1005ceb2:	05c9      	lsls	r1, r1, #23
1005ceb4:	4288      	cmp	r0, r1
1005ceb6:	d300      	bcc.n	1005ceba <advance_wakeup_timer+0x2a2>
1005ceb8:	e772      	b.n	1005cda0 <advance_wakeup_timer+0x188>
1005ceba:	2c08      	cmp	r4, #8
1005cebc:	d06e      	beq.n	1005cf9c <advance_wakeup_timer+0x384>
1005cebe:	980f      	ldr	r0, [sp, #60]	; 0x3c
1005cec0:	2800      	cmp	r0, #0
1005cec2:	d02d      	beq.n	1005cf20 <advance_wakeup_timer+0x308>
1005cec4:	9908      	ldr	r1, [sp, #32]
1005cec6:	4348      	muls	r0, r1
1005cec8:	9005      	str	r0, [sp, #20]
1005ceca:	f7fa fb47 	bl	1005755c <machine_time_trans>
1005cece:	6829      	ldr	r1, [r5, #0]
1005ced0:	1840      	adds	r0, r0, r1
1005ced2:	0200      	lsls	r0, r0, #8
1005ced4:	0a00      	lsrs	r0, r0, #8
1005ced6:	6028      	str	r0, [r5, #0]
1005ced8:	6c69      	ldr	r1, [r5, #68]	; 0x44
1005ceda:	9805      	ldr	r0, [sp, #20]
1005cedc:	1a08      	subs	r0, r1, r0
1005cede:	6468      	str	r0, [r5, #68]	; 0x44
1005cee0:	990c      	ldr	r1, [sp, #48]	; 0x30
1005cee2:	9805      	ldr	r0, [sp, #20]
1005cee4:	1a08      	subs	r0, r1, r0
1005cee6:	2100      	movs	r1, #0
1005cee8:	900c      	str	r0, [sp, #48]	; 0x30
1005ceea:	e013      	b.n	1005cf14 <advance_wakeup_timer+0x2fc>
1005ceec:	6aea      	ldr	r2, [r5, #44]	; 0x2c
1005ceee:	0048      	lsls	r0, r1, #1
1005cef0:	9005      	str	r0, [sp, #20]
1005cef2:	4694      	mov	ip, r2
1005cef4:	5a10      	ldrh	r0, [r2, r0]
1005cef6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1005cef8:	1a80      	subs	r0, r0, r2
1005cefa:	e004      	b.n	1005cf06 <advance_wakeup_timer+0x2ee>
1005cefc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
1005cefe:	9a05      	ldr	r2, [sp, #20]
1005cf00:	1c40      	adds	r0, r0, #1
1005cf02:	5a9a      	ldrh	r2, [r3, r2]
1005cf04:	1810      	adds	r0, r2, r0
1005cf06:	2800      	cmp	r0, #0
1005cf08:	dbf8      	blt.n	1005cefc <advance_wakeup_timer+0x2e4>
1005cf0a:	9b05      	ldr	r3, [sp, #20]
1005cf0c:	4662      	mov	r2, ip
1005cf0e:	1c49      	adds	r1, r1, #1
1005cf10:	52d0      	strh	r0, [r2, r3]
1005cf12:	b2c9      	uxtb	r1, r1
1005cf14:	4838      	ldr	r0, [pc, #224]	; (1005cff8 <advance_wakeup_timer+0x3e0>)
1005cf16:	6800      	ldr	r0, [r0, #0]
1005cf18:	30a0      	adds	r0, #160	; 0xa0
1005cf1a:	7b00      	ldrb	r0, [r0, #12]
1005cf1c:	4288      	cmp	r0, r1
1005cf1e:	d8e5      	bhi.n	1005ceec <advance_wakeup_timer+0x2d4>
1005cf20:	980e      	ldr	r0, [sp, #56]	; 0x38
1005cf22:	2808      	cmp	r0, #8
1005cf24:	d276      	bcs.n	1005d014 <advance_wakeup_timer+0x3fc>
1005cf26:	9804      	ldr	r0, [sp, #16]
1005cf28:	1bc0      	subs	r0, r0, r7
1005cf2a:	0201      	lsls	r1, r0, #8
1005cf2c:	2001      	movs	r0, #1
1005cf2e:	0a09      	lsrs	r1, r1, #8
1005cf30:	05c0      	lsls	r0, r0, #23
1005cf32:	4281      	cmp	r1, r0
1005cf34:	d322      	bcc.n	1005cf7c <advance_wakeup_timer+0x364>
1005cf36:	9802      	ldr	r0, [sp, #8]
1005cf38:	1a3a      	subs	r2, r7, r0
1005cf3a:	9814      	ldr	r0, [sp, #80]	; 0x50
1005cf3c:	1a10      	subs	r0, r2, r0
1005cf3e:	0201      	lsls	r1, r0, #8
1005cf40:	2001      	movs	r0, #1
1005cf42:	0a09      	lsrs	r1, r1, #8
1005cf44:	05c0      	lsls	r0, r0, #23
1005cf46:	4281      	cmp	r1, r0
1005cf48:	d301      	bcc.n	1005cf4e <advance_wakeup_timer+0x336>
1005cf4a:	9814      	ldr	r0, [sp, #80]	; 0x50
1005cf4c:	e00d      	b.n	1005cf6a <advance_wakeup_timer+0x352>
1005cf4e:	9901      	ldr	r1, [sp, #4]
1005cf50:	1a51      	subs	r1, r2, r1
1005cf52:	0209      	lsls	r1, r1, #8
1005cf54:	0a09      	lsrs	r1, r1, #8
1005cf56:	4281      	cmp	r1, r0
1005cf58:	d308      	bcc.n	1005cf6c <advance_wakeup_timer+0x354>
1005cf5a:	2001      	movs	r0, #1
1005cf5c:	0240      	lsls	r0, r0, #9
1005cf5e:	f7fa fafd 	bl	1005755c <machine_time_trans>
1005cf62:	9902      	ldr	r1, [sp, #8]
1005cf64:	0049      	lsls	r1, r1, #1
1005cf66:	1a79      	subs	r1, r7, r1
1005cf68:	1a08      	subs	r0, r1, r0
1005cf6a:	9001      	str	r0, [sp, #4]
1005cf6c:	9901      	ldr	r1, [sp, #4]
1005cf6e:	9804      	ldr	r0, [sp, #16]
1005cf70:	1a08      	subs	r0, r1, r0
1005cf72:	0200      	lsls	r0, r0, #8
1005cf74:	0a00      	lsrs	r0, r0, #8
1005cf76:	f7fa fb53 	bl	10057620 <system_time_trans>
1005cf7a:	6570      	str	r0, [r6, #84]	; 0x54
1005cf7c:	9902      	ldr	r1, [sp, #8]
1005cf7e:	9801      	ldr	r0, [sp, #4]
1005cf80:	1840      	adds	r0, r0, r1
1005cf82:	1bc0      	subs	r0, r0, r7
1005cf84:	0201      	lsls	r1, r0, #8
1005cf86:	2001      	movs	r0, #1
1005cf88:	0a09      	lsrs	r1, r1, #8
1005cf8a:	05c0      	lsls	r0, r0, #23
1005cf8c:	4281      	cmp	r1, r0
1005cf8e:	d255      	bcs.n	1005d03c <advance_wakeup_timer+0x424>
1005cf90:	9902      	ldr	r1, [sp, #8]
1005cf92:	004a      	lsls	r2, r1, #1
1005cf94:	9906      	ldr	r1, [sp, #24]
1005cf96:	1852      	adds	r2, r2, r1
1005cf98:	9904      	ldr	r1, [sp, #16]
1005cf9a:	e000      	b.n	1005cf9e <advance_wakeup_timer+0x386>
1005cf9c:	e04a      	b.n	1005d034 <advance_wakeup_timer+0x41c>
1005cf9e:	1a51      	subs	r1, r2, r1
1005cfa0:	0209      	lsls	r1, r1, #8
1005cfa2:	0a09      	lsrs	r1, r1, #8
1005cfa4:	4281      	cmp	r1, r0
1005cfa6:	d235      	bcs.n	1005d014 <advance_wakeup_timer+0x3fc>
1005cfa8:	980e      	ldr	r0, [sp, #56]	; 0x38
1005cfaa:	2158      	movs	r1, #88	; 0x58
1005cfac:	4348      	muls	r0, r1
1005cfae:	9913      	ldr	r1, [sp, #76]	; 0x4c
1005cfb0:	1842      	adds	r2, r0, r1
1005cfb2:	2058      	movs	r0, #88	; 0x58
1005cfb4:	4621      	mov	r1, r4
1005cfb6:	4341      	muls	r1, r0
1005cfb8:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005cfba:	7bd3      	ldrb	r3, [r2, #15]
1005cfbc:	1808      	adds	r0, r1, r0
1005cfbe:	7bc1      	ldrb	r1, [r0, #15]
1005cfc0:	4299      	cmp	r1, r3
1005cfc2:	d301      	bcc.n	1005cfc8 <advance_wakeup_timer+0x3b0>
1005cfc4:	2110      	movs	r1, #16
1005cfc6:	e000      	b.n	1005cfca <advance_wakeup_timer+0x3b2>
1005cfc8:	2100      	movs	r1, #0
1005cfca:	06c9      	lsls	r1, r1, #27
1005cfcc:	d41e      	bmi.n	1005d00c <advance_wakeup_timer+0x3f4>
1005cfce:	7981      	ldrb	r1, [r0, #6]
1005cfd0:	07ca      	lsls	r2, r1, #31
1005cfd2:	d002      	beq.n	1005cfda <advance_wakeup_timer+0x3c2>
1005cfd4:	2172      	movs	r1, #114	; 0x72
1005cfd6:	5b89      	ldrh	r1, [r1, r6]
1005cfd8:	e003      	b.n	1005cfe2 <advance_wakeup_timer+0x3ca>
1005cfda:	0789      	lsls	r1, r1, #30
1005cfdc:	d507      	bpl.n	1005cfee <advance_wakeup_timer+0x3d6>
1005cfde:	2176      	movs	r1, #118	; 0x76
1005cfe0:	5b89      	ldrh	r1, [r1, r6]
1005cfe2:	8902      	ldrh	r2, [r0, #8]
1005cfe4:	1a89      	subs	r1, r1, r2
1005cfe6:	1e49      	subs	r1, r1, #1
1005cfe8:	0409      	lsls	r1, r1, #16
1005cfea:	0c09      	lsrs	r1, r1, #16
1005cfec:	d012      	beq.n	1005d014 <advance_wakeup_timer+0x3fc>
1005cfee:	7940      	ldrb	r0, [r0, #5]
1005cff0:	0600      	lsls	r0, r0, #24
1005cff2:	d40f      	bmi.n	1005d014 <advance_wakeup_timer+0x3fc>
1005cff4:	e022      	b.n	1005d03c <advance_wakeup_timer+0x424>
1005cff6:	e00d      	b.n	1005d014 <advance_wakeup_timer+0x3fc>
1005cff8:	20000d64 	.word	0x20000d64
1005cffc:	00000266 	.word	0x00000266
1005d000:	200000c0 	.word	0x200000c0
1005d004:	200002dc 	.word	0x200002dc
1005d008:	48000000 	.word	0x48000000
1005d00c:	7950      	ldrb	r0, [r2, #5]
1005d00e:	2190      	movs	r1, #144	; 0x90
1005d010:	4208      	tst	r0, r1
1005d012:	d113      	bne.n	1005d03c <advance_wakeup_timer+0x424>
1005d014:	2c08      	cmp	r4, #8
1005d016:	d015      	beq.n	1005d044 <advance_wakeup_timer+0x42c>
1005d018:	499e      	ldr	r1, [pc, #632]	; (1005d294 <advance_wakeup_timer+0x67c>)
1005d01a:	980c      	ldr	r0, [sp, #48]	; 0x30
1005d01c:	1840      	adds	r0, r0, r1
1005d01e:	6468      	str	r0, [r5, #68]	; 0x44
1005d020:	2058      	movs	r0, #88	; 0x58
1005d022:	9913      	ldr	r1, [sp, #76]	; 0x4c
1005d024:	4360      	muls	r0, r4
1005d026:	1840      	adds	r0, r0, r1
1005d028:	7880      	ldrb	r0, [r0, #2]
1005d02a:	0740      	lsls	r0, r0, #29
1005d02c:	0f40      	lsrs	r0, r0, #29
1005d02e:	2801      	cmp	r0, #1
1005d030:	d03f      	beq.n	1005d0b2 <advance_wakeup_timer+0x49a>
1005d032:	e007      	b.n	1005d044 <advance_wakeup_timer+0x42c>
1005d034:	9803      	ldr	r0, [sp, #12]
1005d036:	2800      	cmp	r0, #0
1005d038:	d004      	beq.n	1005d044 <advance_wakeup_timer+0x42c>
1005d03a:	d003      	beq.n	1005d044 <advance_wakeup_timer+0x42c>
1005d03c:	9f04      	ldr	r7, [sp, #16]
1005d03e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
1005d040:	9801      	ldr	r0, [sp, #4]
1005d042:	9006      	str	r0, [sp, #24]
1005d044:	0238      	lsls	r0, r7, #8
1005d046:	0a00      	lsrs	r0, r0, #8
1005d048:	9000      	str	r0, [sp, #0]
1005d04a:	9806      	ldr	r0, [sp, #24]
1005d04c:	0201      	lsls	r1, r0, #8
1005d04e:	0a09      	lsrs	r1, r1, #8
1005d050:	2001      	movs	r0, #1
1005d052:	0280      	lsls	r0, r0, #10
1005d054:	9106      	str	r1, [sp, #24]
1005d056:	f7fa fa81 	bl	1005755c <machine_time_trans>
1005d05a:	9003      	str	r0, [sp, #12]
1005d05c:	2001      	movs	r0, #1
1005d05e:	0240      	lsls	r0, r0, #9
1005d060:	f7fa fa7c 	bl	1005755c <machine_time_trans>
1005d064:	4607      	mov	r7, r0
1005d066:	9906      	ldr	r1, [sp, #24]
1005d068:	9800      	ldr	r0, [sp, #0]
1005d06a:	1a08      	subs	r0, r1, r0
1005d06c:	0200      	lsls	r0, r0, #8
1005d06e:	1200      	asrs	r0, r0, #8
1005d070:	2800      	cmp	r0, #0
1005d072:	dd09      	ble.n	1005d088 <advance_wakeup_timer+0x470>
1005d074:	9903      	ldr	r1, [sp, #12]
1005d076:	0a00      	lsrs	r0, r0, #8
1005d078:	4288      	cmp	r0, r1
1005d07a:	d900      	bls.n	1005d07e <advance_wakeup_timer+0x466>
1005d07c:	4601      	mov	r1, r0
1005d07e:	9103      	str	r1, [sp, #12]
1005d080:	42b8      	cmp	r0, r7
1005d082:	d800      	bhi.n	1005d086 <advance_wakeup_timer+0x46e>
1005d084:	4638      	mov	r0, r7
1005d086:	4607      	mov	r7, r0
1005d088:	2c08      	cmp	r4, #8
1005d08a:	d07d      	beq.n	1005d188 <advance_wakeup_timer+0x570>
1005d08c:	4882      	ldr	r0, [pc, #520]	; (1005d298 <advance_wakeup_timer+0x680>)
1005d08e:	8800      	ldrh	r0, [r0, #0]
1005d090:	0740      	lsls	r0, r0, #29
1005d092:	0f40      	lsrs	r0, r0, #29
1005d094:	42a0      	cmp	r0, r4
1005d096:	d04f      	beq.n	1005d138 <advance_wakeup_timer+0x520>
1005d098:	2058      	movs	r0, #88	; 0x58
1005d09a:	9913      	ldr	r1, [sp, #76]	; 0x4c
1005d09c:	4360      	muls	r0, r4
1005d09e:	1840      	adds	r0, r0, r1
1005d0a0:	9005      	str	r0, [sp, #20]
1005d0a2:	7880      	ldrb	r0, [r0, #2]
1005d0a4:	0740      	lsls	r0, r0, #29
1005d0a6:	0f40      	lsrs	r0, r0, #29
1005d0a8:	2805      	cmp	r0, #5
1005d0aa:	d012      	beq.n	1005d0d2 <advance_wakeup_timer+0x4ba>
1005d0ac:	2802      	cmp	r0, #2
1005d0ae:	d010      	beq.n	1005d0d2 <advance_wakeup_timer+0x4ba>
1005d0b0:	e042      	b.n	1005d138 <advance_wakeup_timer+0x520>
1005d0b2:	4631      	mov	r1, r6
1005d0b4:	3180      	adds	r1, #128	; 0x80
1005d0b6:	2003      	movs	r0, #3
1005d0b8:	688a      	ldr	r2, [r1, #8]
1005d0ba:	0240      	lsls	r0, r0, #9
1005d0bc:	4282      	cmp	r2, r0
1005d0be:	d0c1      	beq.n	1005d044 <advance_wakeup_timer+0x42c>
1005d0c0:	68c9      	ldr	r1, [r1, #12]
1005d0c2:	4281      	cmp	r1, r0
1005d0c4:	d0be      	beq.n	1005d044 <advance_wakeup_timer+0x42c>
1005d0c6:	f7ef fc21 	bl	1004c90c <Hal_Get_Random_Number>
1005d0ca:	0540      	lsls	r0, r0, #21
1005d0cc:	0d40      	lsrs	r0, r0, #21
1005d0ce:	19c7      	adds	r7, r0, r7
1005d0d0:	e7b8      	b.n	1005d044 <advance_wakeup_timer+0x42c>
1005d0d2:	9805      	ldr	r0, [sp, #20]
1005d0d4:	01a1      	lsls	r1, r4, #6
1005d0d6:	6a00      	ldr	r0, [r0, #32]
1005d0d8:	9002      	str	r0, [sp, #8]
1005d0da:	486f      	ldr	r0, [pc, #444]	; (1005d298 <advance_wakeup_timer+0x680>)
1005d0dc:	1808      	adds	r0, r1, r0
1005d0de:	8b81      	ldrh	r1, [r0, #28]
1005d0e0:	9805      	ldr	r0, [sp, #20]
1005d0e2:	b280      	uxth	r0, r0
1005d0e4:	4281      	cmp	r1, r0
1005d0e6:	d027      	beq.n	1005d138 <advance_wakeup_timer+0x520>
1005d0e8:	9802      	ldr	r0, [sp, #8]
1005d0ea:	2800      	cmp	r0, #0
1005d0ec:	d024      	beq.n	1005d138 <advance_wakeup_timer+0x520>
1005d0ee:	9902      	ldr	r1, [sp, #8]
1005d0f0:	9805      	ldr	r0, [sp, #20]
1005d0f2:	f7f1 faa9 	bl	1004e648 <copy_tx_data_packet>
1005d0f6:	4969      	ldr	r1, [pc, #420]	; (1005d29c <advance_wakeup_timer+0x684>)
1005d0f8:	9802      	ldr	r0, [sp, #8]
1005d0fa:	680a      	ldr	r2, [r1, #0]
1005d0fc:	7c00      	ldrb	r0, [r0, #16]
1005d0fe:	2109      	movs	r1, #9
1005d100:	0209      	lsls	r1, r1, #8
1005d102:	06c0      	lsls	r0, r0, #27
1005d104:	1851      	adds	r1, r2, r1
1005d106:	0ec0      	lsrs	r0, r0, #27
1005d108:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
1005d10a:	1c80      	adds	r0, r0, #2
1005d10c:	1840      	adds	r0, r0, r1
1005d10e:	9002      	str	r0, [sp, #8]
1005d110:	9805      	ldr	r0, [sp, #20]
1005d112:	2121      	movs	r1, #33	; 0x21
1005d114:	6900      	ldr	r0, [r0, #16]
1005d116:	0189      	lsls	r1, r1, #6
1005d118:	4208      	tst	r0, r1
1005d11a:	d00d      	beq.n	1005d138 <advance_wakeup_timer+0x520>
1005d11c:	f7e4 fd36 	bl	10041b8c <data_length_extension_csr_ucfg>
1005d120:	2801      	cmp	r0, #1
1005d122:	d03b      	beq.n	1005d19c <advance_wakeup_timer+0x584>
1005d124:	201f      	movs	r0, #31
1005d126:	9902      	ldr	r1, [sp, #8]
1005d128:	7849      	ldrb	r1, [r1, #1]
1005d12a:	4208      	tst	r0, r1
1005d12c:	d004      	beq.n	1005d138 <advance_wakeup_timer+0x520>
1005d12e:	9802      	ldr	r0, [sp, #8]
1005d130:	7840      	ldrb	r0, [r0, #1]
1005d132:	9902      	ldr	r1, [sp, #8]
1005d134:	1d00      	adds	r0, r0, #4
1005d136:	7048      	strb	r0, [r1, #1]
1005d138:	4858      	ldr	r0, [pc, #352]	; (1005d29c <advance_wakeup_timer+0x684>)
1005d13a:	4957      	ldr	r1, [pc, #348]	; (1005d298 <advance_wakeup_timer+0x680>)
1005d13c:	6800      	ldr	r0, [r0, #0]
1005d13e:	3020      	adds	r0, #32
1005d140:	7484      	strb	r4, [r0, #18]
1005d142:	2048      	movs	r0, #72	; 0x48
1005d144:	4320      	orrs	r0, r4
1005d146:	8008      	strh	r0, [r1, #0]
1005d148:	4633      	mov	r3, r6
1005d14a:	3380      	adds	r3, #128	; 0x80
1005d14c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
1005d14e:	7a90      	ldrb	r0, [r2, #10]
1005d150:	06c1      	lsls	r1, r0, #27
1005d152:	0ec9      	lsrs	r1, r1, #27
1005d154:	0160      	lsls	r0, r4, #5
1005d156:	4301      	orrs	r1, r0
1005d158:	7291      	strb	r1, [r2, #10]
1005d15a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
1005d15c:	7a91      	ldrb	r1, [r2, #10]
1005d15e:	06c9      	lsls	r1, r1, #27
1005d160:	0ec9      	lsrs	r1, r1, #27
1005d162:	4301      	orrs	r1, r0
1005d164:	7291      	strb	r1, [r2, #10]
1005d166:	9800      	ldr	r0, [sp, #0]
1005d168:	6530      	str	r0, [r6, #80]	; 0x50
1005d16a:	f001 fca5 	bl	1005eab8 <LL_Sleep_Req>
1005d16e:	2801      	cmp	r0, #1
1005d170:	d016      	beq.n	1005d1a0 <advance_wakeup_timer+0x588>
1005d172:	484a      	ldr	r0, [pc, #296]	; (1005d29c <advance_wakeup_timer+0x684>)
1005d174:	6800      	ldr	r0, [r0, #0]
1005d176:	3020      	adds	r0, #32
1005d178:	7d01      	ldrb	r1, [r0, #20]
1005d17a:	4847      	ldr	r0, [pc, #284]	; (1005d298 <advance_wakeup_timer+0x680>)
1005d17c:	7a40      	ldrb	r0, [r0, #9]
1005d17e:	1a08      	subs	r0, r1, r0
1005d180:	6d31      	ldr	r1, [r6, #80]	; 0x50
1005d182:	00c0      	lsls	r0, r0, #3
1005d184:	1808      	adds	r0, r1, r0
1005d186:	e000      	b.n	1005d18a <advance_wakeup_timer+0x572>
1005d188:	e03a      	b.n	1005d200 <advance_wakeup_timer+0x5e8>
1005d18a:	0200      	lsls	r0, r0, #8
1005d18c:	2101      	movs	r1, #1
1005d18e:	0a00      	lsrs	r0, r0, #8
1005d190:	0649      	lsls	r1, r1, #25
1005d192:	1841      	adds	r1, r0, r1
1005d194:	2009      	movs	r0, #9
1005d196:	06c0      	lsls	r0, r0, #27
1005d198:	6041      	str	r1, [r0, #4]
1005d19a:	e00e      	b.n	1005d1ba <advance_wakeup_timer+0x5a2>
1005d19c:	20ff      	movs	r0, #255	; 0xff
1005d19e:	e7c2      	b.n	1005d126 <advance_wakeup_timer+0x50e>
1005d1a0:	2101      	movs	r1, #1
1005d1a2:	6d30      	ldr	r0, [r6, #80]	; 0x50
1005d1a4:	0609      	lsls	r1, r1, #24
1005d1a6:	1841      	adds	r1, r0, r1
1005d1a8:	2009      	movs	r0, #9
1005d1aa:	06c0      	lsls	r0, r0, #27
1005d1ac:	6041      	str	r1, [r0, #4]
1005d1ae:	483b      	ldr	r0, [pc, #236]	; (1005d29c <advance_wakeup_timer+0x684>)
1005d1b0:	6800      	ldr	r0, [r0, #0]
1005d1b2:	3020      	adds	r0, #32
1005d1b4:	7d01      	ldrb	r1, [r0, #20]
1005d1b6:	4838      	ldr	r0, [pc, #224]	; (1005d298 <advance_wakeup_timer+0x680>)
1005d1b8:	7241      	strb	r1, [r0, #9]
1005d1ba:	2c08      	cmp	r4, #8
1005d1bc:	d224      	bcs.n	1005d208 <advance_wakeup_timer+0x5f0>
1005d1be:	2058      	movs	r0, #88	; 0x58
1005d1c0:	4344      	muls	r4, r0
1005d1c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005d1c4:	1824      	adds	r4, r4, r0
1005d1c6:	b672      	cpsid	i
1005d1c8:	9812      	ldr	r0, [sp, #72]	; 0x48
1005d1ca:	78a1      	ldrb	r1, [r4, #2]
1005d1cc:	6800      	ldr	r0, [r0, #0]
1005d1ce:	0749      	lsls	r1, r1, #29
1005d1d0:	08c0      	lsrs	r0, r0, #3
1005d1d2:	00c0      	lsls	r0, r0, #3
1005d1d4:	0f49      	lsrs	r1, r1, #29
1005d1d6:	4308      	orrs	r0, r1
1005d1d8:	4931      	ldr	r1, [pc, #196]	; (1005d2a0 <advance_wakeup_timer+0x688>)
1005d1da:	4008      	ands	r0, r1
1005d1dc:	9900      	ldr	r1, [sp, #0]
1005d1de:	00c9      	lsls	r1, r1, #3
1005d1e0:	4308      	orrs	r0, r1
1005d1e2:	9912      	ldr	r1, [sp, #72]	; 0x48
1005d1e4:	6008      	str	r0, [r1, #0]
1005d1e6:	b662      	cpsie	i
1005d1e8:	78a0      	ldrb	r0, [r4, #2]
1005d1ea:	0740      	lsls	r0, r0, #29
1005d1ec:	0f40      	lsrs	r0, r0, #29
1005d1ee:	2803      	cmp	r0, #3
1005d1f0:	d00f      	beq.n	1005d212 <advance_wakeup_timer+0x5fa>
1005d1f2:	f7e4 fccb 	bl	10041b8c <data_length_extension_csr_ucfg>
1005d1f6:	2801      	cmp	r0, #1
1005d1f8:	d00f      	beq.n	1005d21a <advance_wakeup_timer+0x602>
1005d1fa:	9806      	ldr	r0, [sp, #24]
1005d1fc:	1bc0      	subs	r0, r0, r7
1005d1fe:	e019      	b.n	1005d234 <advance_wakeup_timer+0x61c>
1005d200:	2000      	movs	r0, #0
1005d202:	2109      	movs	r1, #9
1005d204:	06c9      	lsls	r1, r1, #27
1005d206:	6048      	str	r0, [r1, #4]
1005d208:	4923      	ldr	r1, [pc, #140]	; (1005d298 <advance_wakeup_timer+0x680>)
1005d20a:	2000      	movs	r0, #0
1005d20c:	8008      	strh	r0, [r1, #0]
1005d20e:	b017      	add	sp, #92	; 0x5c
1005d210:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005d212:	9903      	ldr	r1, [sp, #12]
1005d214:	9806      	ldr	r0, [sp, #24]
1005d216:	1a40      	subs	r0, r0, r1
1005d218:	e00c      	b.n	1005d234 <advance_wakeup_timer+0x61c>
1005d21a:	3440      	adds	r4, #64	; 0x40
1005d21c:	8a20      	ldrh	r0, [r4, #16]
1005d21e:	8a61      	ldrh	r1, [r4, #18]
1005d220:	1840      	adds	r0, r0, r1
1005d222:	30ff      	adds	r0, #255	; 0xff
1005d224:	30c3      	adds	r0, #195	; 0xc3
1005d226:	f7fa fb27 	bl	10057878 <microseconds_to_machine_time>
1005d22a:	4287      	cmp	r7, r0
1005d22c:	d900      	bls.n	1005d230 <advance_wakeup_timer+0x618>
1005d22e:	4638      	mov	r0, r7
1005d230:	9906      	ldr	r1, [sp, #24]
1005d232:	1a08      	subs	r0, r1, r0
1005d234:	0200      	lsls	r0, r0, #8
1005d236:	0a00      	lsrs	r0, r0, #8
1005d238:	63e8      	str	r0, [r5, #60]	; 0x3c
1005d23a:	8ba8      	ldrh	r0, [r5, #28]
1005d23c:	0180      	lsls	r0, r0, #6
1005d23e:	f7fa f98d 	bl	1005755c <machine_time_trans>
1005d242:	6829      	ldr	r1, [r5, #0]
1005d244:	2600      	movs	r6, #0
1005d246:	1844      	adds	r4, r0, r1
1005d248:	4812      	ldr	r0, [pc, #72]	; (1005d294 <advance_wakeup_timer+0x67c>)
1005d24a:	3831      	subs	r0, #49	; 0x31
1005d24c:	f7fa f986 	bl	1005755c <machine_time_trans>
1005d250:	1a20      	subs	r0, r4, r0
1005d252:	0200      	lsls	r0, r0, #8
1005d254:	0a00      	lsrs	r0, r0, #8
1005d256:	6428      	str	r0, [r5, #64]	; 0x40
1005d258:	4c10      	ldr	r4, [pc, #64]	; (1005d29c <advance_wakeup_timer+0x684>)
1005d25a:	842e      	strh	r6, [r5, #32]
1005d25c:	6820      	ldr	r0, [r4, #0]
1005d25e:	3040      	adds	r0, #64	; 0x40
1005d260:	7e40      	ldrb	r0, [r0, #25]
1005d262:	2800      	cmp	r0, #0
1005d264:	d007      	beq.n	1005d276 <advance_wakeup_timer+0x65e>
1005d266:	f7f9 fc43 	bl	10056af0 <LL_Update_Advertising_Buffers>
1005d26a:	6820      	ldr	r0, [r4, #0]
1005d26c:	3040      	adds	r0, #64	; 0x40
1005d26e:	7e41      	ldrb	r1, [r0, #25]
1005d270:	0849      	lsrs	r1, r1, #1
1005d272:	0049      	lsls	r1, r1, #1
1005d274:	7641      	strb	r1, [r0, #25]
1005d276:	6820      	ldr	r0, [r4, #0]
1005d278:	3040      	adds	r0, #64	; 0x40
1005d27a:	7e40      	ldrb	r0, [r0, #25]
1005d27c:	2800      	cmp	r0, #0
1005d27e:	d0c6      	beq.n	1005d20e <advance_wakeup_timer+0x5f6>
1005d280:	f7f9 fc5a 	bl	10056b38 <LL_Update_Scanning_Initiating_Buffers>
1005d284:	6820      	ldr	r0, [r4, #0]
1005d286:	3040      	adds	r0, #64	; 0x40
1005d288:	7e41      	ldrb	r1, [r0, #25]
1005d28a:	22fd      	movs	r2, #253	; 0xfd
1005d28c:	4011      	ands	r1, r2
1005d28e:	7641      	strb	r1, [r0, #25]
1005d290:	e7bd      	b.n	1005d20e <advance_wakeup_timer+0x5f6>
1005d292:	0000      	.short	0x0000
1005d294:	00000266 	.word	0x00000266
1005d298:	200000c0 	.word	0x200000c0
1005d29c:	20000d64 	.word	0x20000d64
1005d2a0:	f8000007 	.word	0xf8000007

1005d2a4 <AES128ECB_Wrapper>:
1005d2a4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005d2a6:	460f      	mov	r7, r1
1005d2a8:	b0b5      	sub	sp, #212	; 0xd4
1005d2aa:	4615      	mov	r5, r2
1005d2ac:	2100      	movs	r1, #0
1005d2ae:	aa30      	add	r2, sp, #192	; 0xc0
1005d2b0:	230f      	movs	r3, #15
1005d2b2:	5c44      	ldrb	r4, [r0, r1]
1005d2b4:	1a5e      	subs	r6, r3, r1
1005d2b6:	1c49      	adds	r1, r1, #1
1005d2b8:	5594      	strb	r4, [r2, r6]
1005d2ba:	2910      	cmp	r1, #16
1005d2bc:	dbf9      	blt.n	1005d2b2 <AES128ECB_Wrapper+0xe>
1005d2be:	2210      	movs	r2, #16
1005d2c0:	4669      	mov	r1, sp
1005d2c2:	a830      	add	r0, sp, #192	; 0xc0
1005d2c4:	f002 fa06 	bl	1005f6d4 <AES_keyschedule_enc>
1005d2c8:	2600      	movs	r6, #0
1005d2ca:	00b4      	lsls	r4, r6, #2
1005d2cc:	19e0      	adds	r0, r4, r7
1005d2ce:	1c40      	adds	r0, r0, #1
1005d2d0:	f7e3 f8ba 	bl	10040448 <__aeabi_uread4>
1005d2d4:	5d39      	ldrb	r1, [r7, r4]
1005d2d6:	0200      	lsls	r0, r0, #8
1005d2d8:	4308      	orrs	r0, r1
1005d2da:	2103      	movs	r1, #3
1005d2dc:	1b89      	subs	r1, r1, r6
1005d2de:	0089      	lsls	r1, r1, #2
1005d2e0:	ac2c      	add	r4, sp, #176	; 0xb0
1005d2e2:	1c76      	adds	r6, r6, #1
1005d2e4:	5060      	str	r0, [r4, r1]
1005d2e6:	2e04      	cmp	r6, #4
1005d2e8:	dbef      	blt.n	1005d2ca <AES128ECB_Wrapper+0x26>
1005d2ea:	4621      	mov	r1, r4
1005d2ec:	2310      	movs	r3, #16
1005d2ee:	466a      	mov	r2, sp
1005d2f0:	4608      	mov	r0, r1
1005d2f2:	f002 f8b9 	bl	1005f468 <AES_general_SW_enc>
1005d2f6:	2000      	movs	r0, #0
1005d2f8:	2603      	movs	r6, #3
1005d2fa:	1a31      	subs	r1, r6, r0
1005d2fc:	0089      	lsls	r1, r1, #2
1005d2fe:	5c63      	ldrb	r3, [r4, r1]
1005d300:	0082      	lsls	r2, r0, #2
1005d302:	54ab      	strb	r3, [r5, r2]
1005d304:	5a63      	ldrh	r3, [r4, r1]
1005d306:	1952      	adds	r2, r2, r5
1005d308:	0a1b      	lsrs	r3, r3, #8
1005d30a:	7053      	strb	r3, [r2, #1]
1005d30c:	5863      	ldr	r3, [r4, r1]
1005d30e:	1c40      	adds	r0, r0, #1
1005d310:	0c1b      	lsrs	r3, r3, #16
1005d312:	7093      	strb	r3, [r2, #2]
1005d314:	5861      	ldr	r1, [r4, r1]
1005d316:	0e09      	lsrs	r1, r1, #24
1005d318:	70d1      	strb	r1, [r2, #3]
1005d31a:	2804      	cmp	r0, #4
1005d31c:	dbed      	blt.n	1005d2fa <AES128ECB_Wrapper+0x56>
1005d31e:	b035      	add	sp, #212	; 0xd4
1005d320:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005d322 <AES_CMAC_Encrypt>:
1005d322:	b570      	push	{r4, r5, r6, lr}
1005d324:	b0ba      	sub	sp, #232	; 0xe8
1005d326:	4605      	mov	r5, r0
1005d328:	2000      	movs	r0, #0
1005d32a:	460c      	mov	r4, r1
1005d32c:	9000      	str	r0, [sp, #0]
1005d32e:	2020      	movs	r0, #32
1005d330:	4669      	mov	r1, sp
1005d332:	7208      	strb	r0, [r1, #8]
1005d334:	2010      	movs	r0, #16
1005d336:	900a      	str	r0, [sp, #40]	; 0x28
1005d338:	9038      	str	r0, [sp, #224]	; 0xe0
1005d33a:	461e      	mov	r6, r3
1005d33c:	9203      	str	r2, [sp, #12]
1005d33e:	a801      	add	r0, sp, #4
1005d340:	f002 f878 	bl	1005f434 <AES_CMAC_Encrypt_Init>
1005d344:	4622      	mov	r2, r4
1005d346:	4629      	mov	r1, r5
1005d348:	a801      	add	r0, sp, #4
1005d34a:	f001 fefb 	bl	1005f144 <AES_CMAC_Encrypt_Append>
1005d34e:	466a      	mov	r2, sp
1005d350:	4631      	mov	r1, r6
1005d352:	a801      	add	r0, sp, #4
1005d354:	f002 f838 	bl	1005f3c8 <AES_CMAC_Encrypt_Finish>
1005d358:	b03a      	add	sp, #232	; 0xe8
1005d35a:	bd70      	pop	{r4, r5, r6, pc}

1005d35c <ATT_fill_error_resp>:
1005d35c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
1005d35e:	4605      	mov	r5, r0
1005d360:	6898      	ldr	r0, [r3, #8]
1005d362:	2201      	movs	r2, #1
1005d364:	7302      	strb	r2, [r0, #12]
1005d366:	689a      	ldr	r2, [r3, #8]
1005d368:	461c      	mov	r4, r3
1005d36a:	7351      	strb	r1, [r2, #13]
1005d36c:	6898      	ldr	r0, [r3, #8]
1005d36e:	2202      	movs	r2, #2
1005d370:	a902      	add	r1, sp, #8
1005d372:	300e      	adds	r0, #14
1005d374:	f7e3 fa05 	bl	10040782 <Osal_MemCpy>
1005d378:	68a1      	ldr	r1, [r4, #8]
1005d37a:	2005      	movs	r0, #5
1005d37c:	740d      	strb	r5, [r1, #16]
1005d37e:	80e0      	strh	r0, [r4, #6]
1005d380:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

1005d382 <ATT_fill_type_val_entry>:
1005d382:	b570      	push	{r4, r5, r6, lr}
1005d384:	4606      	mov	r6, r0
1005d386:	8808      	ldrh	r0, [r1, #0]
1005d388:	461d      	mov	r5, r3
1005d38a:	460c      	mov	r4, r1
1005d38c:	1d00      	adds	r0, r0, #4
1005d38e:	b281      	uxth	r1, r0
1005d390:	4613      	mov	r3, r2
1005d392:	2202      	movs	r2, #2
1005d394:	4630      	mov	r0, r6
1005d396:	f7f7 fbf9 	bl	10054b8c <PM_Write_Pckt_Data>
1005d39a:	8821      	ldrh	r1, [r4, #0]
1005d39c:	462b      	mov	r3, r5
1005d39e:	1c89      	adds	r1, r1, #2
1005d3a0:	8021      	strh	r1, [r4, #0]
1005d3a2:	1d09      	adds	r1, r1, #4
1005d3a4:	b289      	uxth	r1, r1
1005d3a6:	2202      	movs	r2, #2
1005d3a8:	4630      	mov	r0, r6
1005d3aa:	f7f7 fbef 	bl	10054b8c <PM_Write_Pckt_Data>
1005d3ae:	8820      	ldrh	r0, [r4, #0]
1005d3b0:	1c80      	adds	r0, r0, #2
1005d3b2:	8020      	strh	r0, [r4, #0]
1005d3b4:	bd70      	pop	{r4, r5, r6, pc}

1005d3b6 <ATT_validate_prepare_req>:
1005d3b6:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005d3b8:	2400      	movs	r4, #0
1005d3ba:	460e      	mov	r6, r1
1005d3bc:	4627      	mov	r7, r4
1005d3be:	6805      	ldr	r5, [r0, #0]
1005d3c0:	e045      	b.n	1005d44e <ATT_validate_prepare_req+0x98>
1005d3c2:	6828      	ldr	r0, [r5, #0]
1005d3c4:	9002      	str	r0, [sp, #8]
1005d3c6:	68a9      	ldr	r1, [r5, #8]
1005d3c8:	2202      	movs	r2, #2
1005d3ca:	4630      	mov	r0, r6
1005d3cc:	310d      	adds	r1, #13
1005d3ce:	f7e3 f9d8 	bl	10040782 <Osal_MemCpy>
1005d3d2:	8830      	ldrh	r0, [r6, #0]
1005d3d4:	42b8      	cmp	r0, r7
1005d3d6:	d009      	beq.n	1005d3ec <ATT_validate_prepare_req+0x36>
1005d3d8:	b287      	uxth	r7, r0
1005d3da:	4638      	mov	r0, r7
1005d3dc:	f7ed fdf0 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005d3e0:	4601      	mov	r1, r0
1005d3e2:	aa01      	add	r2, sp, #4
1005d3e4:	4638      	mov	r0, r7
1005d3e6:	f7ee fe3f 	bl	1004c068 <Gatt_search_handle>
1005d3ea:	9c01      	ldr	r4, [sp, #4]
1005d3ec:	68a9      	ldr	r1, [r5, #8]
1005d3ee:	2202      	movs	r2, #2
1005d3f0:	4668      	mov	r0, sp
1005d3f2:	310f      	adds	r1, #15
1005d3f4:	f7e3 f9c5 	bl	10040782 <Osal_MemCpy>
1005d3f8:	88e8      	ldrh	r0, [r5, #6]
1005d3fa:	1f40      	subs	r0, r0, #5
1005d3fc:	b281      	uxth	r1, r0
1005d3fe:	2022      	movs	r0, #34	; 0x22
1005d400:	5d00      	ldrb	r0, [r0, r4]
1005d402:	2800      	cmp	r0, #0
1005d404:	d006      	beq.n	1005d414 <ATT_validate_prepare_req+0x5e>
1005d406:	2801      	cmp	r0, #1
1005d408:	d00b      	beq.n	1005d422 <ATT_validate_prepare_req+0x6c>
1005d40a:	2800      	cmp	r0, #0
1005d40c:	d011      	beq.n	1005d432 <ATT_validate_prepare_req+0x7c>
1005d40e:	2801      	cmp	r0, #1
1005d410:	d014      	beq.n	1005d43c <ATT_validate_prepare_req+0x86>
1005d412:	e01b      	b.n	1005d44c <ATT_validate_prepare_req+0x96>
1005d414:	8be0      	ldrh	r0, [r4, #30]
1005d416:	466a      	mov	r2, sp
1005d418:	8812      	ldrh	r2, [r2, #0]
1005d41a:	1e40      	subs	r0, r0, #1
1005d41c:	4290      	cmp	r0, r2
1005d41e:	d306      	bcc.n	1005d42e <ATT_validate_prepare_req+0x78>
1005d420:	e007      	b.n	1005d432 <ATT_validate_prepare_req+0x7c>
1005d422:	8c20      	ldrh	r0, [r4, #32]
1005d424:	466a      	mov	r2, sp
1005d426:	8812      	ldrh	r2, [r2, #0]
1005d428:	1e40      	subs	r0, r0, #1
1005d42a:	4290      	cmp	r0, r2
1005d42c:	d206      	bcs.n	1005d43c <ATT_validate_prepare_req+0x86>
1005d42e:	2007      	movs	r0, #7
1005d430:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005d432:	4668      	mov	r0, sp
1005d434:	8800      	ldrh	r0, [r0, #0]
1005d436:	1808      	adds	r0, r1, r0
1005d438:	8be1      	ldrh	r1, [r4, #30]
1005d43a:	e003      	b.n	1005d444 <ATT_validate_prepare_req+0x8e>
1005d43c:	4668      	mov	r0, sp
1005d43e:	8800      	ldrh	r0, [r0, #0]
1005d440:	1808      	adds	r0, r1, r0
1005d442:	8c21      	ldrh	r1, [r4, #32]
1005d444:	4288      	cmp	r0, r1
1005d446:	d901      	bls.n	1005d44c <ATT_validate_prepare_req+0x96>
1005d448:	200d      	movs	r0, #13
1005d44a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005d44c:	9d02      	ldr	r5, [sp, #8]
1005d44e:	2d00      	cmp	r5, #0
1005d450:	d1b7      	bne.n	1005d3c2 <ATT_validate_prepare_req+0xc>
1005d452:	2000      	movs	r0, #0
1005d454:	8030      	strh	r0, [r6, #0]
1005d456:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005d458 <Att_Check_Perms>:
1005d458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005d45a:	4616      	mov	r6, r2
1005d45c:	460d      	mov	r5, r1
1005d45e:	4607      	mov	r7, r0
1005d460:	2400      	movs	r4, #0
1005d462:	f7fd fa47 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005d466:	2800      	cmp	r0, #0
1005d468:	d006      	beq.n	1005d478 <Att_Check_Perms+0x20>
1005d46a:	4632      	mov	r2, r6
1005d46c:	4629      	mov	r1, r5
1005d46e:	4638      	mov	r0, r7
1005d470:	f000 f830 	bl	1005d4d4 <Check_Permission>
1005d474:	4604      	mov	r4, r0
1005d476:	e004      	b.n	1005d482 <Att_Check_Perms+0x2a>
1005d478:	3520      	adds	r5, #32
1005d47a:	7968      	ldrb	r0, [r5, #5]
1005d47c:	2800      	cmp	r0, #0
1005d47e:	d002      	beq.n	1005d486 <Att_Check_Perms+0x2e>
1005d480:	240e      	movs	r4, #14
1005d482:	4620      	mov	r0, r4
1005d484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005d486:	7928      	ldrb	r0, [r5, #4]
1005d488:	07c1      	lsls	r1, r0, #31
1005d48a:	d101      	bne.n	1005d490 <Att_Check_Perms+0x38>
1005d48c:	2e01      	cmp	r6, #1
1005d48e:	d009      	beq.n	1005d4a4 <Att_Check_Perms+0x4c>
1005d490:	0781      	lsls	r1, r0, #30
1005d492:	d401      	bmi.n	1005d498 <Att_Check_Perms+0x40>
1005d494:	2e02      	cmp	r6, #2
1005d496:	d003      	beq.n	1005d4a0 <Att_Check_Perms+0x48>
1005d498:	0740      	lsls	r0, r0, #29
1005d49a:	d4f2      	bmi.n	1005d482 <Att_Check_Perms+0x2a>
1005d49c:	2e04      	cmp	r6, #4
1005d49e:	d1f0      	bne.n	1005d482 <Att_Check_Perms+0x2a>
1005d4a0:	2403      	movs	r4, #3
1005d4a2:	e7ee      	b.n	1005d482 <Att_Check_Perms+0x2a>
1005d4a4:	2402      	movs	r4, #2
1005d4a6:	e7ec      	b.n	1005d482 <Att_Check_Perms+0x2a>

1005d4a8 <CheckSecForSignedWrite>:
1005d4a8:	b570      	push	{r4, r5, r6, lr}
1005d4aa:	4615      	mov	r5, r2
1005d4ac:	4606      	mov	r6, r0
1005d4ae:	f7ff ffd3 	bl	1005d458 <Att_Check_Perms>
1005d4b2:	4604      	mov	r4, r0
1005d4b4:	2d08      	cmp	r5, #8
1005d4b6:	d10b      	bne.n	1005d4d0 <CheckSecForSignedWrite+0x28>
1005d4b8:	2c05      	cmp	r4, #5
1005d4ba:	d109      	bne.n	1005d4d0 <CheckSecForSignedWrite+0x28>
1005d4bc:	4630      	mov	r0, r6
1005d4be:	f7fd fa19 	bl	1005a8f4 <SMP_get_remote_device_list_item>
1005d4c2:	2800      	cmp	r0, #0
1005d4c4:	d004      	beq.n	1005d4d0 <CheckSecForSignedWrite+0x28>
1005d4c6:	8900      	ldrh	r0, [r0, #8]
1005d4c8:	0440      	lsls	r0, r0, #17
1005d4ca:	0f80      	lsrs	r0, r0, #30
1005d4cc:	d000      	beq.n	1005d4d0 <CheckSecForSignedWrite+0x28>
1005d4ce:	2400      	movs	r4, #0
1005d4d0:	4620      	mov	r0, r4
1005d4d2:	bd70      	pop	{r4, r5, r6, pc}

1005d4d4 <Check_Permission>:
1005d4d4:	b570      	push	{r4, r5, r6, lr}
1005d4d6:	4615      	mov	r5, r2
1005d4d8:	460c      	mov	r4, r1
1005d4da:	4606      	mov	r6, r0
1005d4dc:	f7fd f9f2 	bl	1005a8c4 <SMP_get_link_status>
1005d4e0:	3420      	adds	r4, #32
1005d4e2:	7961      	ldrb	r1, [r4, #5]
1005d4e4:	2d01      	cmp	r5, #1
1005d4e6:	d009      	beq.n	1005d4fc <Check_Permission+0x28>
1005d4e8:	070a      	lsls	r2, r1, #28
1005d4ea:	d502      	bpl.n	1005d4f2 <Check_Permission+0x1e>
1005d4ec:	0742      	lsls	r2, r0, #29
1005d4ee:	0f92      	lsrs	r2, r2, #30
1005d4f0:	d00f      	beq.n	1005d512 <Check_Permission+0x3e>
1005d4f2:	06ca      	lsls	r2, r1, #27
1005d4f4:	d525      	bpl.n	1005d542 <Check_Permission+0x6e>
1005d4f6:	0702      	lsls	r2, r0, #28
1005d4f8:	d509      	bpl.n	1005d50e <Check_Permission+0x3a>
1005d4fa:	e022      	b.n	1005d542 <Check_Permission+0x6e>
1005d4fc:	07ca      	lsls	r2, r1, #31
1005d4fe:	d002      	beq.n	1005d506 <Check_Permission+0x32>
1005d500:	0742      	lsls	r2, r0, #29
1005d502:	0f92      	lsrs	r2, r2, #30
1005d504:	d005      	beq.n	1005d512 <Check_Permission+0x3e>
1005d506:	078a      	lsls	r2, r1, #30
1005d508:	d505      	bpl.n	1005d516 <Check_Permission+0x42>
1005d50a:	0702      	lsls	r2, r0, #28
1005d50c:	d403      	bmi.n	1005d516 <Check_Permission+0x42>
1005d50e:	2008      	movs	r0, #8
1005d510:	bd70      	pop	{r4, r5, r6, pc}
1005d512:	2005      	movs	r0, #5
1005d514:	bd70      	pop	{r4, r5, r6, pc}
1005d516:	0749      	lsls	r1, r1, #29
1005d518:	d507      	bpl.n	1005d52a <Check_Permission+0x56>
1005d51a:	07c0      	lsls	r0, r0, #31
1005d51c:	d009      	beq.n	1005d532 <Check_Permission+0x5e>
1005d51e:	79e1      	ldrb	r1, [r4, #7]
1005d520:	4630      	mov	r0, r6
1005d522:	f7fd f943 	bl	1005a7ac <SMP_check_encryption_key_size>
1005d526:	285f      	cmp	r0, #95	; 0x5f
1005d528:	d005      	beq.n	1005d536 <Check_Permission+0x62>
1005d52a:	7920      	ldrb	r0, [r4, #4]
1005d52c:	07c0      	lsls	r0, r0, #31
1005d52e:	d004      	beq.n	1005d53a <Check_Permission+0x66>
1005d530:	e005      	b.n	1005d53e <Check_Permission+0x6a>
1005d532:	200f      	movs	r0, #15
1005d534:	bd70      	pop	{r4, r5, r6, pc}
1005d536:	200c      	movs	r0, #12
1005d538:	bd70      	pop	{r4, r5, r6, pc}
1005d53a:	2002      	movs	r0, #2
1005d53c:	bd70      	pop	{r4, r5, r6, pc}
1005d53e:	2000      	movs	r0, #0
1005d540:	bd70      	pop	{r4, r5, r6, pc}
1005d542:	0689      	lsls	r1, r1, #26
1005d544:	d507      	bpl.n	1005d556 <Check_Permission+0x82>
1005d546:	07c0      	lsls	r0, r0, #31
1005d548:	d0f3      	beq.n	1005d532 <Check_Permission+0x5e>
1005d54a:	79e1      	ldrb	r1, [r4, #7]
1005d54c:	4630      	mov	r0, r6
1005d54e:	f7fd f92d 	bl	1005a7ac <SMP_check_encryption_key_size>
1005d552:	285f      	cmp	r0, #95	; 0x5f
1005d554:	d0ef      	beq.n	1005d536 <Check_Permission+0x62>
1005d556:	7920      	ldrb	r0, [r4, #4]
1005d558:	0781      	lsls	r1, r0, #30
1005d55a:	d401      	bmi.n	1005d560 <Check_Permission+0x8c>
1005d55c:	2d02      	cmp	r5, #2
1005d55e:	d007      	beq.n	1005d570 <Check_Permission+0x9c>
1005d560:	0741      	lsls	r1, r0, #29
1005d562:	d401      	bmi.n	1005d568 <Check_Permission+0x94>
1005d564:	2d04      	cmp	r5, #4
1005d566:	d003      	beq.n	1005d570 <Check_Permission+0x9c>
1005d568:	0700      	lsls	r0, r0, #28
1005d56a:	d4e8      	bmi.n	1005d53e <Check_Permission+0x6a>
1005d56c:	2d08      	cmp	r5, #8
1005d56e:	d1e6      	bne.n	1005d53e <Check_Permission+0x6a>
1005d570:	2003      	movs	r0, #3
1005d572:	bd70      	pop	{r4, r5, r6, pc}

1005d574 <Exchg_Mtu_Resp>:
1005d574:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005d576:	4606      	mov	r6, r0
1005d578:	4829      	ldr	r0, [pc, #164]	; (1005d620 <Exchg_Mtu_Resp+0xac>)
1005d57a:	4614      	mov	r4, r2
1005d57c:	6800      	ldr	r0, [r0, #0]
1005d57e:	4a29      	ldr	r2, [pc, #164]	; (1005d624 <Exchg_Mtu_Resp+0xb0>)
1005d580:	1885      	adds	r5, r0, r2
1005d582:	88c8      	ldrh	r0, [r1, #6]
1005d584:	2803      	cmp	r0, #3
1005d586:	d006      	beq.n	1005d596 <Exchg_Mtu_Resp+0x22>
1005d588:	4623      	mov	r3, r4
1005d58a:	2200      	movs	r2, #0
1005d58c:	2102      	movs	r1, #2
1005d58e:	2004      	movs	r0, #4
1005d590:	f7ff fee4 	bl	1005d35c <ATT_fill_error_resp>
1005d594:	e042      	b.n	1005d61c <Exchg_Mtu_Resp+0xa8>
1005d596:	6889      	ldr	r1, [r1, #8]
1005d598:	2202      	movs	r2, #2
1005d59a:	4668      	mov	r0, sp
1005d59c:	310d      	adds	r1, #13
1005d59e:	f7e3 f8f0 	bl	10040782 <Osal_MemCpy>
1005d5a2:	6932      	ldr	r2, [r6, #16]
1005d5a4:	0590      	lsls	r0, r2, #22
1005d5a6:	d42e      	bmi.n	1005d606 <Exchg_Mtu_Resp+0x92>
1005d5a8:	4668      	mov	r0, sp
1005d5aa:	8801      	ldrh	r1, [r0, #0]
1005d5ac:	2917      	cmp	r1, #23
1005d5ae:	d303      	bcc.n	1005d5b8 <Exchg_Mtu_Resp+0x44>
1005d5b0:	205c      	movs	r0, #92	; 0x5c
1005d5b2:	5b40      	ldrh	r0, [r0, r5]
1005d5b4:	2817      	cmp	r0, #23
1005d5b6:	d201      	bcs.n	1005d5bc <Exchg_Mtu_Resp+0x48>
1005d5b8:	2017      	movs	r0, #23
1005d5ba:	e002      	b.n	1005d5c2 <Exchg_Mtu_Resp+0x4e>
1005d5bc:	4281      	cmp	r1, r0
1005d5be:	d200      	bcs.n	1005d5c2 <Exchg_Mtu_Resp+0x4e>
1005d5c0:	4608      	mov	r0, r1
1005d5c2:	8070      	strh	r0, [r6, #2]
1005d5c4:	2001      	movs	r0, #1
1005d5c6:	0240      	lsls	r0, r0, #9
1005d5c8:	4302      	orrs	r2, r0
1005d5ca:	2002      	movs	r0, #2
1005d5cc:	6132      	str	r2, [r6, #16]
1005d5ce:	9001      	str	r0, [sp, #4]
1005d5d0:	4813      	ldr	r0, [pc, #76]	; (1005d620 <Exchg_Mtu_Resp+0xac>)
1005d5d2:	2137      	movs	r1, #55	; 0x37
1005d5d4:	6800      	ldr	r0, [r0, #0]
1005d5d6:	0149      	lsls	r1, r1, #5
1005d5d8:	1841      	adds	r1, r0, r1
1005d5da:	8837      	ldrh	r7, [r6, #0]
1005d5dc:	7b09      	ldrb	r1, [r1, #12]
1005d5de:	8876      	ldrh	r6, [r6, #2]
1005d5e0:	2301      	movs	r3, #1
1005d5e2:	0749      	lsls	r1, r1, #29
1005d5e4:	d50f      	bpl.n	1005d606 <Exchg_Mtu_Resp+0x92>
1005d5e6:	02d9      	lsls	r1, r3, #11
1005d5e8:	3008      	adds	r0, #8
1005d5ea:	1840      	adds	r0, r0, r1
1005d5ec:	2224      	movs	r2, #36	; 0x24
1005d5ee:	6940      	ldr	r0, [r0, #20]
1005d5f0:	2102      	movs	r1, #2
1005d5f2:	f7fe fc7b 	bl	1005beec <aci_event_fifo_push_header>
1005d5f6:	2800      	cmp	r0, #0
1005d5f8:	d005      	beq.n	1005d606 <Exchg_Mtu_Resp+0x92>
1005d5fa:	8087      	strh	r7, [r0, #4]
1005d5fc:	80c6      	strh	r6, [r0, #6]
1005d5fe:	4601      	mov	r1, r0
1005d600:	9801      	ldr	r0, [sp, #4]
1005d602:	f7fe fc5f 	bl	1005bec4 <aci_event_fifo_push>
1005d606:	68a0      	ldr	r0, [r4, #8]
1005d608:	2603      	movs	r6, #3
1005d60a:	7306      	strb	r6, [r0, #12]
1005d60c:	68a0      	ldr	r0, [r4, #8]
1005d60e:	4629      	mov	r1, r5
1005d610:	2202      	movs	r2, #2
1005d612:	315c      	adds	r1, #92	; 0x5c
1005d614:	300d      	adds	r0, #13
1005d616:	f7e3 f8b4 	bl	10040782 <Osal_MemCpy>
1005d61a:	80e6      	strh	r6, [r4, #6]
1005d61c:	2000      	movs	r0, #0
1005d61e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005d620:	20000d64 	.word	0x20000d64
1005d624:	0000072c 	.word	0x0000072c

1005d628 <Exec_Write_Resp>:
1005d628:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005d62a:	b090      	sub	sp, #64	; 0x40
1005d62c:	2000      	movs	r0, #0
1005d62e:	466a      	mov	r2, sp
1005d630:	900d      	str	r0, [sp, #52]	; 0x34
1005d632:	8290      	strh	r0, [r2, #20]
1005d634:	4a6a      	ldr	r2, [pc, #424]	; (1005d7e0 <Exec_Write_Resp+0x1b8>)
1005d636:	4b6b      	ldr	r3, [pc, #428]	; (1005d7e4 <Exec_Write_Resp+0x1bc>)
1005d638:	6812      	ldr	r2, [r2, #0]
1005d63a:	4604      	mov	r4, r0
1005d63c:	18d2      	adds	r2, r2, r3
1005d63e:	88cb      	ldrh	r3, [r1, #6]
1005d640:	2b02      	cmp	r3, #2
1005d642:	d008      	beq.n	1005d656 <Exec_Write_Resp+0x2e>
1005d644:	2200      	movs	r2, #0
1005d646:	2118      	movs	r1, #24
1005d648:	2004      	movs	r0, #4
1005d64a:	9b12      	ldr	r3, [sp, #72]	; 0x48
1005d64c:	f7ff fe86 	bl	1005d35c <ATT_fill_error_resp>
1005d650:	2000      	movs	r0, #0
1005d652:	b013      	add	sp, #76	; 0x4c
1005d654:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005d656:	688b      	ldr	r3, [r1, #8]
1005d658:	2000      	movs	r0, #0
1005d65a:	7b5e      	ldrb	r6, [r3, #13]
1005d65c:	900a      	str	r0, [sp, #40]	; 0x28
1005d65e:	900b      	str	r0, [sp, #44]	; 0x2c
1005d660:	8888      	ldrh	r0, [r1, #4]
1005d662:	3230      	adds	r2, #48	; 0x30
1005d664:	9201      	str	r2, [sp, #4]
1005d666:	9009      	str	r0, [sp, #36]	; 0x24
1005d668:	2700      	movs	r7, #0
1005d66a:	9801      	ldr	r0, [sp, #4]
1005d66c:	f7ff fa4e 	bl	1005cb0c <acl_list_first>
1005d670:	4605      	mov	r5, r0
1005d672:	e020      	b.n	1005d6b6 <Exec_Write_Resp+0x8e>
1005d674:	6828      	ldr	r0, [r5, #0]
1005d676:	9008      	str	r0, [sp, #32]
1005d678:	88a9      	ldrh	r1, [r5, #4]
1005d67a:	9809      	ldr	r0, [sp, #36]	; 0x24
1005d67c:	4281      	cmp	r1, r0
1005d67e:	d119      	bne.n	1005d6b4 <Exec_Write_Resp+0x8c>
1005d680:	68a9      	ldr	r1, [r5, #8]
1005d682:	2202      	movs	r2, #2
1005d684:	a807      	add	r0, sp, #28
1005d686:	310d      	adds	r1, #13
1005d688:	f7e3 f87b 	bl	10040782 <Osal_MemCpy>
1005d68c:	2f00      	cmp	r7, #0
1005d68e:	d101      	bne.n	1005d694 <Exec_Write_Resp+0x6c>
1005d690:	4668      	mov	r0, sp
1005d692:	8b87      	ldrh	r7, [r0, #28]
1005d694:	4668      	mov	r0, sp
1005d696:	8b80      	ldrh	r0, [r0, #28]
1005d698:	4287      	cmp	r7, r0
1005d69a:	d10b      	bne.n	1005d6b4 <Exec_Write_Resp+0x8c>
1005d69c:	4629      	mov	r1, r5
1005d69e:	9801      	ldr	r0, [sp, #4]
1005d6a0:	f7ff fa81 	bl	1005cba6 <acl_list_remove>
1005d6a4:	2000      	movs	r0, #0
1005d6a6:	6028      	str	r0, [r5, #0]
1005d6a8:	980a      	ldr	r0, [sp, #40]	; 0x28
1005d6aa:	2800      	cmp	r0, #0
1005d6ac:	d011      	beq.n	1005d6d2 <Exec_Write_Resp+0xaa>
1005d6ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
1005d6b0:	6005      	str	r5, [r0, #0]
1005d6b2:	950b      	str	r5, [sp, #44]	; 0x2c
1005d6b4:	9d08      	ldr	r5, [sp, #32]
1005d6b6:	2d00      	cmp	r5, #0
1005d6b8:	d1dc      	bne.n	1005d674 <Exec_Write_Resp+0x4c>
1005d6ba:	2f00      	cmp	r7, #0
1005d6bc:	d1d4      	bne.n	1005d668 <Exec_Write_Resp+0x40>
1005d6be:	9812      	ldr	r0, [sp, #72]	; 0x48
1005d6c0:	2119      	movs	r1, #25
1005d6c2:	6880      	ldr	r0, [r0, #8]
1005d6c4:	7301      	strb	r1, [r0, #12]
1005d6c6:	2101      	movs	r1, #1
1005d6c8:	9812      	ldr	r0, [sp, #72]	; 0x48
1005d6ca:	2e01      	cmp	r6, #1
1005d6cc:	80c1      	strh	r1, [r0, #6]
1005d6ce:	d002      	beq.n	1005d6d6 <Exec_Write_Resp+0xae>
1005d6d0:	e081      	b.n	1005d7d6 <Exec_Write_Resp+0x1ae>
1005d6d2:	950a      	str	r5, [sp, #40]	; 0x28
1005d6d4:	e7ed      	b.n	1005d6b2 <Exec_Write_Resp+0x8a>
1005d6d6:	a902      	add	r1, sp, #8
1005d6d8:	a80a      	add	r0, sp, #40	; 0x28
1005d6da:	f7ff fe6c 	bl	1005d3b6 <ATT_validate_prepare_req>
1005d6de:	2800      	cmp	r0, #0
1005d6e0:	d079      	beq.n	1005d7d6 <Exec_Write_Resp+0x1ae>
1005d6e2:	4669      	mov	r1, sp
1005d6e4:	890a      	ldrh	r2, [r1, #8]
1005d6e6:	2118      	movs	r1, #24
1005d6e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
1005d6ea:	f7ff fe37 	bl	1005d35c <ATT_fill_error_resp>
1005d6ee:	2600      	movs	r6, #0
1005d6f0:	e071      	b.n	1005d7d6 <Exec_Write_Resp+0x1ae>
1005d6f2:	6881      	ldr	r1, [r0, #8]
1005d6f4:	4605      	mov	r5, r0
1005d6f6:	2202      	movs	r2, #2
1005d6f8:	a802      	add	r0, sp, #8
1005d6fa:	310d      	adds	r1, #13
1005d6fc:	f7e3 f841 	bl	10040782 <Osal_MemCpy>
1005d700:	2e01      	cmp	r6, #1
1005d702:	d166      	bne.n	1005d7d2 <Exec_Write_Resp+0x1aa>
1005d704:	4668      	mov	r0, sp
1005d706:	8900      	ldrh	r0, [r0, #8]
1005d708:	f7ed fc5a 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005d70c:	4601      	mov	r1, r0
1005d70e:	4668      	mov	r0, sp
1005d710:	aa0e      	add	r2, sp, #56	; 0x38
1005d712:	8900      	ldrh	r0, [r0, #8]
1005d714:	f7ee fca8 	bl	1004c068 <Gatt_search_handle>
1005d718:	9c0e      	ldr	r4, [sp, #56]	; 0x38
1005d71a:	9910      	ldr	r1, [sp, #64]	; 0x40
1005d71c:	4620      	mov	r0, r4
1005d71e:	f7ec fde3 	bl	1004a2e8 <Find_Attr_Index>
1005d722:	900d      	str	r0, [sp, #52]	; 0x34
1005d724:	e055      	b.n	1005d7d2 <Exec_Write_Resp+0x1aa>
1005d726:	682f      	ldr	r7, [r5, #0]
1005d728:	2e01      	cmp	r6, #1
1005d72a:	d13f      	bne.n	1005d7ac <Exec_Write_Resp+0x184>
1005d72c:	2f00      	cmp	r7, #0
1005d72e:	d006      	beq.n	1005d73e <Exec_Write_Resp+0x116>
1005d730:	68b9      	ldr	r1, [r7, #8]
1005d732:	2202      	movs	r2, #2
1005d734:	a805      	add	r0, sp, #20
1005d736:	310d      	adds	r1, #13
1005d738:	f7e3 f823 	bl	10040782 <Osal_MemCpy>
1005d73c:	e002      	b.n	1005d744 <Exec_Write_Resp+0x11c>
1005d73e:	2000      	movs	r0, #0
1005d740:	4669      	mov	r1, sp
1005d742:	8288      	strh	r0, [r1, #20]
1005d744:	68a9      	ldr	r1, [r5, #8]
1005d746:	2202      	movs	r2, #2
1005d748:	a804      	add	r0, sp, #16
1005d74a:	310f      	adds	r1, #15
1005d74c:	f7e3 f819 	bl	10040782 <Osal_MemCpy>
1005d750:	88e8      	ldrh	r0, [r5, #6]
1005d752:	990d      	ldr	r1, [sp, #52]	; 0x34
1005d754:	1f40      	subs	r0, r0, #5
1005d756:	b280      	uxth	r0, r0
1005d758:	9000      	str	r0, [sp, #0]
1005d75a:	8c20      	ldrh	r0, [r4, #32]
1005d75c:	69a2      	ldr	r2, [r4, #24]
1005d75e:	4348      	muls	r0, r1
1005d760:	4669      	mov	r1, sp
1005d762:	1810      	adds	r0, r2, r0
1005d764:	8a09      	ldrh	r1, [r1, #16]
1005d766:	9a00      	ldr	r2, [sp, #0]
1005d768:	1843      	adds	r3, r0, r1
1005d76a:	2109      	movs	r1, #9
1005d76c:	4628      	mov	r0, r5
1005d76e:	f7f7 f91d 	bl	100549ac <PM_Copy_Pckt_Data>
1005d772:	2022      	movs	r0, #34	; 0x22
1005d774:	5d00      	ldrb	r0, [r0, r4]
1005d776:	2801      	cmp	r0, #1
1005d778:	d104      	bne.n	1005d784 <Exec_Write_Resp+0x15c>
1005d77a:	4668      	mov	r0, sp
1005d77c:	8a01      	ldrh	r1, [r0, #16]
1005d77e:	9800      	ldr	r0, [sp, #0]
1005d780:	1808      	adds	r0, r1, r0
1005d782:	83e0      	strh	r0, [r4, #30]
1005d784:	4668      	mov	r0, sp
1005d786:	8901      	ldrh	r1, [r0, #8]
1005d788:	8a80      	ldrh	r0, [r0, #20]
1005d78a:	4281      	cmp	r1, r0
1005d78c:	d00e      	beq.n	1005d7ac <Exec_Write_Resp+0x184>
1005d78e:	8c20      	ldrh	r0, [r4, #32]
1005d790:	990d      	ldr	r1, [sp, #52]	; 0x34
1005d792:	69a2      	ldr	r2, [r4, #24]
1005d794:	4348      	muls	r0, r1
1005d796:	1810      	adds	r0, r2, r0
1005d798:	2100      	movs	r1, #0
1005d79a:	9001      	str	r0, [sp, #4]
1005d79c:	9100      	str	r1, [sp, #0]
1005d79e:	9810      	ldr	r0, [sp, #64]	; 0x40
1005d7a0:	8be3      	ldrh	r3, [r4, #30]
1005d7a2:	8801      	ldrh	r1, [r0, #0]
1005d7a4:	8ba2      	ldrh	r2, [r4, #28]
1005d7a6:	2002      	movs	r0, #2
1005d7a8:	f001 f85e 	bl	1005e868 <aci_gatt_attribute_modified_event_push>
1005d7ac:	990a      	ldr	r1, [sp, #40]	; 0x28
1005d7ae:	6808      	ldr	r0, [r1, #0]
1005d7b0:	900a      	str	r0, [sp, #40]	; 0x28
1005d7b2:	2000      	movs	r0, #0
1005d7b4:	6008      	str	r0, [r1, #0]
1005d7b6:	990a      	ldr	r1, [sp, #40]	; 0x28
1005d7b8:	2900      	cmp	r1, #0
1005d7ba:	d100      	bne.n	1005d7be <Exec_Write_Resp+0x196>
1005d7bc:	900b      	str	r0, [sp, #44]	; 0x2c
1005d7be:	2101      	movs	r1, #1
1005d7c0:	4628      	mov	r0, r5
1005d7c2:	f7f7 f98f 	bl	10054ae4 <PM_Release_Acl_Pckt>
1005d7c6:	4669      	mov	r1, sp
1005d7c8:	8908      	ldrh	r0, [r1, #8]
1005d7ca:	8a89      	ldrh	r1, [r1, #20]
1005d7cc:	4288      	cmp	r0, r1
1005d7ce:	d102      	bne.n	1005d7d6 <Exec_Write_Resp+0x1ae>
1005d7d0:	463d      	mov	r5, r7
1005d7d2:	2d00      	cmp	r5, #0
1005d7d4:	d1a7      	bne.n	1005d726 <Exec_Write_Resp+0xfe>
1005d7d6:	980a      	ldr	r0, [sp, #40]	; 0x28
1005d7d8:	2800      	cmp	r0, #0
1005d7da:	d18a      	bne.n	1005d6f2 <Exec_Write_Resp+0xca>
1005d7dc:	e739      	b.n	1005d652 <Exec_Write_Resp+0x2a>
1005d7de:	0000      	.short	0x0000
1005d7e0:	20000d64 	.word	0x20000d64
1005d7e4:	0000072c 	.word	0x0000072c

1005d7e8 <Find_By_Type_Val_Resp>:
1005d7e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005d7ea:	4878      	ldr	r0, [pc, #480]	; (1005d9cc <Find_By_Type_Val_Resp+0x1e4>)
1005d7ec:	460f      	mov	r7, r1
1005d7ee:	6800      	ldr	r0, [r0, #0]
1005d7f0:	4977      	ldr	r1, [pc, #476]	; (1005d9d0 <Find_By_Type_Val_Resp+0x1e8>)
1005d7f2:	b088      	sub	sp, #32
1005d7f4:	1844      	adds	r4, r0, r1
1005d7f6:	88f8      	ldrh	r0, [r7, #6]
1005d7f8:	2807      	cmp	r0, #7
1005d7fa:	d204      	bcs.n	1005d806 <Find_By_Type_Val_Resp+0x1e>
1005d7fc:	2200      	movs	r2, #0
1005d7fe:	2106      	movs	r1, #6
1005d800:	2004      	movs	r0, #4
1005d802:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1005d804:	e02a      	b.n	1005d85c <Find_By_Type_Val_Resp+0x74>
1005d806:	68b9      	ldr	r1, [r7, #8]
1005d808:	2202      	movs	r2, #2
1005d80a:	4668      	mov	r0, sp
1005d80c:	310d      	adds	r1, #13
1005d80e:	f7e2 ffb8 	bl	10040782 <Osal_MemCpy>
1005d812:	68b9      	ldr	r1, [r7, #8]
1005d814:	2202      	movs	r2, #2
1005d816:	a801      	add	r0, sp, #4
1005d818:	310f      	adds	r1, #15
1005d81a:	f7e2 ffb2 	bl	10040782 <Osal_MemCpy>
1005d81e:	68b9      	ldr	r1, [r7, #8]
1005d820:	2202      	movs	r2, #2
1005d822:	a804      	add	r0, sp, #16
1005d824:	3111      	adds	r1, #17
1005d826:	f7e2 ffac 	bl	10040782 <Osal_MemCpy>
1005d82a:	88f8      	ldrh	r0, [r7, #6]
1005d82c:	1fc0      	subs	r0, r0, #7
1005d82e:	b280      	uxth	r0, r0
1005d830:	9003      	str	r0, [sp, #12]
1005d832:	4668      	mov	r0, sp
1005d834:	8802      	ldrh	r2, [r0, #0]
1005d836:	8880      	ldrh	r0, [r0, #4]
1005d838:	4282      	cmp	r2, r0
1005d83a:	d80c      	bhi.n	1005d856 <Find_By_Type_Val_Resp+0x6e>
1005d83c:	2a00      	cmp	r2, #0
1005d83e:	d00a      	beq.n	1005d856 <Find_By_Type_Val_Resp+0x6e>
1005d840:	9808      	ldr	r0, [sp, #32]
1005d842:	2100      	movs	r1, #0
1005d844:	8842      	ldrh	r2, [r0, #2]
1005d846:	980a      	ldr	r0, [sp, #40]	; 0x28
1005d848:	f000 f9ba 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005d84c:	2800      	cmp	r0, #0
1005d84e:	d008      	beq.n	1005d862 <Find_By_Type_Val_Resp+0x7a>
1005d850:	2045      	movs	r0, #69	; 0x45
1005d852:	b00b      	add	sp, #44	; 0x2c
1005d854:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005d856:	2106      	movs	r1, #6
1005d858:	2001      	movs	r0, #1
1005d85a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1005d85c:	f7ff fd7e 	bl	1005d35c <ATT_fill_error_resp>
1005d860:	e0ab      	b.n	1005d9ba <Find_By_Type_Val_Resp+0x1d2>
1005d862:	980a      	ldr	r0, [sp, #40]	; 0x28
1005d864:	2107      	movs	r1, #7
1005d866:	6880      	ldr	r0, [r0, #8]
1005d868:	3408      	adds	r4, #8
1005d86a:	7301      	strb	r1, [r0, #12]
1005d86c:	2101      	movs	r1, #1
1005d86e:	4668      	mov	r0, sp
1005d870:	8101      	strh	r1, [r0, #8]
1005d872:	9405      	str	r4, [sp, #20]
1005d874:	8800      	ldrh	r0, [r0, #0]
1005d876:	f7ed fba3 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005d87a:	0005      	movs	r5, r0
1005d87c:	d07c      	beq.n	1005d978 <Find_By_Type_Val_Resp+0x190>
1005d87e:	e086      	b.n	1005d98e <Find_By_Type_Val_Resp+0x1a6>
1005d880:	4668      	mov	r0, sp
1005d882:	8a00      	ldrh	r0, [r0, #16]
1005d884:	2205      	movs	r2, #5
1005d886:	02d2      	lsls	r2, r2, #11
1005d888:	4290      	cmp	r0, r2
1005d88a:	d002      	beq.n	1005d892 <Find_By_Type_Val_Resp+0xaa>
1005d88c:	1c52      	adds	r2, r2, #1
1005d88e:	4290      	cmp	r0, r2
1005d890:	d126      	bne.n	1005d8e0 <Find_By_Type_Val_Resp+0xf8>
1005d892:	4668      	mov	r0, sp
1005d894:	8800      	ldrh	r0, [r0, #0]
1005d896:	4281      	cmp	r1, r0
1005d898:	d378      	bcc.n	1005d98c <Find_By_Type_Val_Resp+0x1a4>
1005d89a:	4629      	mov	r1, r5
1005d89c:	220b      	movs	r2, #11
1005d89e:	3108      	adds	r1, #8
1005d8a0:	4638      	mov	r0, r7
1005d8a2:	9b03      	ldr	r3, [sp, #12]
1005d8a4:	f7f7 f918 	bl	10054ad8 <PM_Pckt_Cmp>
1005d8a8:	4669      	mov	r1, sp
1005d8aa:	8d6a      	ldrh	r2, [r5, #42]	; 0x2a
1005d8ac:	8a09      	ldrh	r1, [r1, #16]
1005d8ae:	428a      	cmp	r2, r1
1005d8b0:	d16c      	bne.n	1005d98c <Find_By_Type_Val_Resp+0x1a4>
1005d8b2:	9903      	ldr	r1, [sp, #12]
1005d8b4:	2902      	cmp	r1, #2
1005d8b6:	d001      	beq.n	1005d8bc <Find_By_Type_Val_Resp+0xd4>
1005d8b8:	2910      	cmp	r1, #16
1005d8ba:	d167      	bne.n	1005d98c <Find_By_Type_Val_Resp+0x1a4>
1005d8bc:	2800      	cmp	r0, #0
1005d8be:	d165      	bne.n	1005d98c <Find_By_Type_Val_Resp+0x1a4>
1005d8c0:	462a      	mov	r2, r5
1005d8c2:	4628      	mov	r0, r5
1005d8c4:	6a29      	ldr	r1, [r5, #32]
1005d8c6:	3228      	adds	r2, #40	; 0x28
1005d8c8:	3020      	adds	r0, #32
1005d8ca:	4281      	cmp	r1, r0
1005d8cc:	d002      	beq.n	1005d8d4 <Find_By_Type_Val_Resp+0xec>
1005d8ce:	6a6b      	ldr	r3, [r5, #36]	; 0x24
1005d8d0:	331c      	adds	r3, #28
1005d8d2:	e000      	b.n	1005d8d6 <Find_By_Type_Val_Resp+0xee>
1005d8d4:	4613      	mov	r3, r2
1005d8d6:	a902      	add	r1, sp, #8
1005d8d8:	980a      	ldr	r0, [sp, #40]	; 0x28
1005d8da:	f7ff fd52 	bl	1005d382 <ATT_fill_type_val_entry>
1005d8de:	e055      	b.n	1005d98c <Find_By_Type_Val_Resp+0x1a4>
1005d8e0:	462e      	mov	r6, r5
1005d8e2:	6a2c      	ldr	r4, [r5, #32]
1005d8e4:	3620      	adds	r6, #32
1005d8e6:	42b4      	cmp	r4, r6
1005d8e8:	d14e      	bne.n	1005d988 <Find_By_Type_Val_Resp+0x1a0>
1005d8ea:	e04f      	b.n	1005d98c <Find_By_Type_Val_Resp+0x1a4>
1005d8ec:	4669      	mov	r1, sp
1005d8ee:	8ba0      	ldrh	r0, [r4, #28]
1005d8f0:	8809      	ldrh	r1, [r1, #0]
1005d8f2:	4288      	cmp	r0, r1
1005d8f4:	d347      	bcc.n	1005d986 <Find_By_Type_Val_Resp+0x19e>
1005d8f6:	4669      	mov	r1, sp
1005d8f8:	8889      	ldrh	r1, [r1, #4]
1005d8fa:	4288      	cmp	r0, r1
1005d8fc:	d857      	bhi.n	1005d9ae <Find_By_Type_Val_Resp+0x1c6>
1005d8fe:	2023      	movs	r0, #35	; 0x23
1005d900:	5d00      	ldrb	r0, [r0, r4]
1005d902:	2801      	cmp	r0, #1
1005d904:	d13f      	bne.n	1005d986 <Find_By_Type_Val_Resp+0x19e>
1005d906:	4620      	mov	r0, r4
1005d908:	9908      	ldr	r1, [sp, #32]
1005d90a:	f7ec fced 	bl	1004a2e8 <Find_Attr_Index>
1005d90e:	8c21      	ldrh	r1, [r4, #32]
1005d910:	69a2      	ldr	r2, [r4, #24]
1005d912:	4341      	muls	r1, r0
1005d914:	1851      	adds	r1, r2, r1
1005d916:	220b      	movs	r2, #11
1005d918:	4638      	mov	r0, r7
1005d91a:	9b03      	ldr	r3, [sp, #12]
1005d91c:	f7f7 f8dc 	bl	10054ad8 <PM_Pckt_Cmp>
1005d920:	9006      	str	r0, [sp, #24]
1005d922:	9808      	ldr	r0, [sp, #32]
1005d924:	2201      	movs	r2, #1
1005d926:	8800      	ldrh	r0, [r0, #0]
1005d928:	4621      	mov	r1, r4
1005d92a:	0500      	lsls	r0, r0, #20
1005d92c:	0d00      	lsrs	r0, r0, #20
1005d92e:	f7ff fd93 	bl	1005d458 <Att_Check_Perms>
1005d932:	4601      	mov	r1, r0
1005d934:	466a      	mov	r2, sp
1005d936:	8920      	ldrh	r0, [r4, #8]
1005d938:	8a12      	ldrh	r2, [r2, #16]
1005d93a:	4290      	cmp	r0, r2
1005d93c:	d123      	bne.n	1005d986 <Find_By_Type_Val_Resp+0x19e>
1005d93e:	2900      	cmp	r1, #0
1005d940:	d121      	bne.n	1005d986 <Find_By_Type_Val_Resp+0x19e>
1005d942:	8be2      	ldrh	r2, [r4, #30]
1005d944:	9903      	ldr	r1, [sp, #12]
1005d946:	428a      	cmp	r2, r1
1005d948:	d11d      	bne.n	1005d986 <Find_By_Type_Val_Resp+0x19e>
1005d94a:	9906      	ldr	r1, [sp, #24]
1005d94c:	2900      	cmp	r1, #0
1005d94e:	d11a      	bne.n	1005d986 <Find_By_Type_Val_Resp+0x19e>
1005d950:	9908      	ldr	r1, [sp, #32]
1005d952:	466a      	mov	r2, sp
1005d954:	8849      	ldrh	r1, [r1, #2]
1005d956:	8912      	ldrh	r2, [r2, #8]
1005d958:	1a89      	subs	r1, r1, r2
1005d95a:	2904      	cmp	r1, #4
1005d95c:	d327      	bcc.n	1005d9ae <Find_By_Type_Val_Resp+0x1c6>
1005d95e:	4622      	mov	r2, r4
1005d960:	491c      	ldr	r1, [pc, #112]	; (1005d9d4 <Find_By_Type_Val_Resp+0x1ec>)
1005d962:	321c      	adds	r2, #28
1005d964:	4288      	cmp	r0, r1
1005d966:	d108      	bne.n	1005d97a <Find_By_Type_Val_Resp+0x192>
1005d968:	6820      	ldr	r0, [r4, #0]
1005d96a:	42b0      	cmp	r0, r6
1005d96c:	d005      	beq.n	1005d97a <Find_By_Type_Val_Resp+0x192>
1005d96e:	8900      	ldrh	r0, [r0, #8]
1005d970:	4288      	cmp	r0, r1
1005d972:	d002      	beq.n	1005d97a <Find_By_Type_Val_Resp+0x192>
1005d974:	6824      	ldr	r4, [r4, #0]
1005d976:	e7f7      	b.n	1005d968 <Find_By_Type_Val_Resp+0x180>
1005d978:	e019      	b.n	1005d9ae <Find_By_Type_Val_Resp+0x1c6>
1005d97a:	4623      	mov	r3, r4
1005d97c:	331c      	adds	r3, #28
1005d97e:	a902      	add	r1, sp, #8
1005d980:	980a      	ldr	r0, [sp, #40]	; 0x28
1005d982:	f7ff fcfe 	bl	1005d382 <ATT_fill_type_val_entry>
1005d986:	6824      	ldr	r4, [r4, #0]
1005d988:	42b4      	cmp	r4, r6
1005d98a:	d1af      	bne.n	1005d8ec <Find_By_Type_Val_Resp+0x104>
1005d98c:	682d      	ldr	r5, [r5, #0]
1005d98e:	9805      	ldr	r0, [sp, #20]
1005d990:	4285      	cmp	r5, r0
1005d992:	d00c      	beq.n	1005d9ae <Find_By_Type_Val_Resp+0x1c6>
1005d994:	4668      	mov	r0, sp
1005d996:	8d29      	ldrh	r1, [r5, #40]	; 0x28
1005d998:	8880      	ldrh	r0, [r0, #4]
1005d99a:	4281      	cmp	r1, r0
1005d99c:	d807      	bhi.n	1005d9ae <Find_By_Type_Val_Resp+0x1c6>
1005d99e:	9808      	ldr	r0, [sp, #32]
1005d9a0:	466a      	mov	r2, sp
1005d9a2:	8840      	ldrh	r0, [r0, #2]
1005d9a4:	8912      	ldrh	r2, [r2, #8]
1005d9a6:	1a80      	subs	r0, r0, r2
1005d9a8:	2804      	cmp	r0, #4
1005d9aa:	d300      	bcc.n	1005d9ae <Find_By_Type_Val_Resp+0x1c6>
1005d9ac:	e768      	b.n	1005d880 <Find_By_Type_Val_Resp+0x98>
1005d9ae:	4668      	mov	r0, sp
1005d9b0:	8900      	ldrh	r0, [r0, #8]
1005d9b2:	2801      	cmp	r0, #1
1005d9b4:	d903      	bls.n	1005d9be <Find_By_Type_Val_Resp+0x1d6>
1005d9b6:	990a      	ldr	r1, [sp, #40]	; 0x28
1005d9b8:	80c8      	strh	r0, [r1, #6]
1005d9ba:	2000      	movs	r0, #0
1005d9bc:	e749      	b.n	1005d852 <Find_By_Type_Val_Resp+0x6a>
1005d9be:	4668      	mov	r0, sp
1005d9c0:	8802      	ldrh	r2, [r0, #0]
1005d9c2:	2106      	movs	r1, #6
1005d9c4:	200a      	movs	r0, #10
1005d9c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1005d9c8:	e748      	b.n	1005d85c <Find_By_Type_Val_Resp+0x74>
1005d9ca:	0000      	.short	0x0000
1005d9cc:	20000d64 	.word	0x20000d64
1005d9d0:	0000072c 	.word	0x0000072c
1005d9d4:	00002803 	.word	0x00002803

1005d9d8 <Find_Info_Resp>:
1005d9d8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005d9da:	b089      	sub	sp, #36	; 0x24
1005d9dc:	2400      	movs	r4, #0
1005d9de:	4605      	mov	r5, r0
1005d9e0:	9407      	str	r4, [sp, #28]
1005d9e2:	88d0      	ldrh	r0, [r2, #6]
1005d9e4:	4616      	mov	r6, r2
1005d9e6:	2805      	cmp	r0, #5
1005d9e8:	d004      	beq.n	1005d9f4 <Find_Info_Resp+0x1c>
1005d9ea:	2200      	movs	r2, #0
1005d9ec:	2104      	movs	r1, #4
1005d9ee:	4608      	mov	r0, r1
1005d9f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1005d9f2:	e020      	b.n	1005da36 <Find_Info_Resp+0x5e>
1005d9f4:	68b1      	ldr	r1, [r6, #8]
1005d9f6:	2202      	movs	r2, #2
1005d9f8:	a808      	add	r0, sp, #32
1005d9fa:	310d      	adds	r1, #13
1005d9fc:	f7e2 fec1 	bl	10040782 <Osal_MemCpy>
1005da00:	68b1      	ldr	r1, [r6, #8]
1005da02:	2202      	movs	r2, #2
1005da04:	4668      	mov	r0, sp
1005da06:	310f      	adds	r1, #15
1005da08:	f7e2 febb 	bl	10040782 <Osal_MemCpy>
1005da0c:	4668      	mov	r0, sp
1005da0e:	8c02      	ldrh	r2, [r0, #32]
1005da10:	8800      	ldrh	r0, [r0, #0]
1005da12:	4282      	cmp	r2, r0
1005da14:	d80c      	bhi.n	1005da30 <Find_Info_Resp+0x58>
1005da16:	2a00      	cmp	r2, #0
1005da18:	d00a      	beq.n	1005da30 <Find_Info_Resp+0x58>
1005da1a:	980a      	ldr	r0, [sp, #40]	; 0x28
1005da1c:	2100      	movs	r1, #0
1005da1e:	8842      	ldrh	r2, [r0, #2]
1005da20:	980c      	ldr	r0, [sp, #48]	; 0x30
1005da22:	f000 f8cd 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005da26:	2800      	cmp	r0, #0
1005da28:	d008      	beq.n	1005da3c <Find_Info_Resp+0x64>
1005da2a:	2045      	movs	r0, #69	; 0x45
1005da2c:	b00d      	add	sp, #52	; 0x34
1005da2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005da30:	2104      	movs	r1, #4
1005da32:	2001      	movs	r0, #1
1005da34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1005da36:	f7ff fc91 	bl	1005d35c <ATT_fill_error_resp>
1005da3a:	e0b9      	b.n	1005dbb0 <Find_Info_Resp+0x1d8>
1005da3c:	4668      	mov	r0, sp
1005da3e:	8c00      	ldrh	r0, [r0, #32]
1005da40:	f7ed fabe 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005da44:	0006      	movs	r6, r0
1005da46:	d076      	beq.n	1005db36 <Find_Info_Resp+0x15e>
1005da48:	3508      	adds	r5, #8
1005da4a:	9504      	str	r5, [sp, #16]
1005da4c:	9804      	ldr	r0, [sp, #16]
1005da4e:	4286      	cmp	r6, r0
1005da50:	d072      	beq.n	1005db38 <Find_Info_Resp+0x160>
1005da52:	4669      	mov	r1, sp
1005da54:	8d30      	ldrh	r0, [r6, #40]	; 0x28
1005da56:	8c09      	ldrh	r1, [r1, #32]
1005da58:	4288      	cmp	r0, r1
1005da5a:	d330      	bcc.n	1005dabe <Find_Info_Resp+0xe6>
1005da5c:	4669      	mov	r1, sp
1005da5e:	8809      	ldrh	r1, [r1, #0]
1005da60:	4288      	cmp	r0, r1
1005da62:	d82c      	bhi.n	1005dabe <Find_Info_Resp+0xe6>
1005da64:	2c00      	cmp	r4, #0
1005da66:	d10a      	bne.n	1005da7e <Find_Info_Resp+0xa6>
1005da68:	2101      	movs	r1, #1
1005da6a:	9107      	str	r1, [sp, #28]
1005da6c:	980c      	ldr	r0, [sp, #48]	; 0x30
1005da6e:	2105      	movs	r1, #5
1005da70:	6880      	ldr	r0, [r0, #8]
1005da72:	2402      	movs	r4, #2
1005da74:	7301      	strb	r1, [r0, #12]
1005da76:	980c      	ldr	r0, [sp, #48]	; 0x30
1005da78:	9907      	ldr	r1, [sp, #28]
1005da7a:	6880      	ldr	r0, [r0, #8]
1005da7c:	7341      	strb	r1, [r0, #13]
1005da7e:	980a      	ldr	r0, [sp, #40]	; 0x28
1005da80:	8840      	ldrh	r0, [r0, #2]
1005da82:	1b00      	subs	r0, r0, r4
1005da84:	2804      	cmp	r0, #4
1005da86:	d357      	bcc.n	1005db38 <Find_Info_Resp+0x160>
1005da88:	9807      	ldr	r0, [sp, #28]
1005da8a:	2801      	cmp	r0, #1
1005da8c:	d154      	bne.n	1005db38 <Find_Info_Resp+0x160>
1005da8e:	1d20      	adds	r0, r4, #4
1005da90:	b281      	uxth	r1, r0
1005da92:	4633      	mov	r3, r6
1005da94:	3328      	adds	r3, #40	; 0x28
1005da96:	2202      	movs	r2, #2
1005da98:	980c      	ldr	r0, [sp, #48]	; 0x30
1005da9a:	f7f7 f877 	bl	10054b8c <PM_Write_Pckt_Data>
1005da9e:	1da0      	adds	r0, r4, #6
1005daa0:	b281      	uxth	r1, r0
1005daa2:	4633      	mov	r3, r6
1005daa4:	332a      	adds	r3, #42	; 0x2a
1005daa6:	2202      	movs	r2, #2
1005daa8:	1ca4      	adds	r4, r4, #2
1005daaa:	980c      	ldr	r0, [sp, #48]	; 0x30
1005daac:	f7f7 f86e 	bl	10054b8c <PM_Write_Pckt_Data>
1005dab0:	4669      	mov	r1, sp
1005dab2:	1ca4      	adds	r4, r4, #2
1005dab4:	8d30      	ldrh	r0, [r6, #40]	; 0x28
1005dab6:	8809      	ldrh	r1, [r1, #0]
1005dab8:	b2a4      	uxth	r4, r4
1005daba:	4288      	cmp	r0, r1
1005dabc:	d074      	beq.n	1005dba8 <Find_Info_Resp+0x1d0>
1005dabe:	4637      	mov	r7, r6
1005dac0:	6a35      	ldr	r5, [r6, #32]
1005dac2:	3720      	adds	r7, #32
1005dac4:	42bd      	cmp	r5, r7
1005dac6:	d0c1      	beq.n	1005da4c <Find_Info_Resp+0x74>
1005dac8:	e060      	b.n	1005db8c <Find_Info_Resp+0x1b4>
1005daca:	4669      	mov	r1, sp
1005dacc:	8ba8      	ldrh	r0, [r5, #28]
1005dace:	8c09      	ldrh	r1, [r1, #32]
1005dad0:	4288      	cmp	r0, r1
1005dad2:	d35a      	bcc.n	1005db8a <Find_Info_Resp+0x1b2>
1005dad4:	4669      	mov	r1, sp
1005dad6:	8809      	ldrh	r1, [r1, #0]
1005dad8:	4288      	cmp	r0, r1
1005dada:	d865      	bhi.n	1005dba8 <Find_Info_Resp+0x1d0>
1005dadc:	2c00      	cmp	r4, #0
1005dade:	d036      	beq.n	1005db4e <Find_Info_Resp+0x176>
1005dae0:	2023      	movs	r0, #35	; 0x23
1005dae2:	5d41      	ldrb	r1, [r0, r5]
1005dae4:	9807      	ldr	r0, [sp, #28]
1005dae6:	4281      	cmp	r1, r0
1005dae8:	d160      	bne.n	1005dbac <Find_Info_Resp+0x1d4>
1005daea:	980a      	ldr	r0, [sp, #40]	; 0x28
1005daec:	8840      	ldrh	r0, [r0, #2]
1005daee:	1b00      	subs	r0, r0, r4
1005daf0:	2804      	cmp	r0, #4
1005daf2:	d302      	bcc.n	1005dafa <Find_Info_Resp+0x122>
1005daf4:	9907      	ldr	r1, [sp, #28]
1005daf6:	2901      	cmp	r1, #1
1005daf8:	d004      	beq.n	1005db04 <Find_Info_Resp+0x12c>
1005dafa:	2812      	cmp	r0, #18
1005dafc:	d356      	bcc.n	1005dbac <Find_Info_Resp+0x1d4>
1005dafe:	9807      	ldr	r0, [sp, #28]
1005db00:	2802      	cmp	r0, #2
1005db02:	d153      	bne.n	1005dbac <Find_Info_Resp+0x1d4>
1005db04:	1d20      	adds	r0, r4, #4
1005db06:	b281      	uxth	r1, r0
1005db08:	462b      	mov	r3, r5
1005db0a:	331c      	adds	r3, #28
1005db0c:	2202      	movs	r2, #2
1005db0e:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db10:	f7f7 f83c 	bl	10054b8c <PM_Write_Pckt_Data>
1005db14:	1ca4      	adds	r4, r4, #2
1005db16:	9807      	ldr	r0, [sp, #28]
1005db18:	b2a4      	uxth	r4, r4
1005db1a:	2801      	cmp	r0, #1
1005db1c:	d00d      	beq.n	1005db3a <Find_Info_Resp+0x162>
1005db1e:	1d20      	adds	r0, r4, #4
1005db20:	b281      	uxth	r1, r0
1005db22:	462b      	mov	r3, r5
1005db24:	3308      	adds	r3, #8
1005db26:	2210      	movs	r2, #16
1005db28:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db2a:	f7f7 f82f 	bl	10054b8c <PM_Write_Pckt_Data>
1005db2e:	4620      	mov	r0, r4
1005db30:	3010      	adds	r0, #16
1005db32:	b284      	uxth	r4, r0
1005db34:	e029      	b.n	1005db8a <Find_Info_Resp+0x1b2>
1005db36:	e03d      	b.n	1005dbb4 <Find_Info_Resp+0x1dc>
1005db38:	e036      	b.n	1005dba8 <Find_Info_Resp+0x1d0>
1005db3a:	1d20      	adds	r0, r4, #4
1005db3c:	b281      	uxth	r1, r0
1005db3e:	462b      	mov	r3, r5
1005db40:	3308      	adds	r3, #8
1005db42:	2202      	movs	r2, #2
1005db44:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db46:	f7f7 f821 	bl	10054b8c <PM_Write_Pckt_Data>
1005db4a:	1ca0      	adds	r0, r4, #2
1005db4c:	e7f1      	b.n	1005db32 <Find_Info_Resp+0x15a>
1005db4e:	2023      	movs	r0, #35	; 0x23
1005db50:	5d41      	ldrb	r1, [r0, r5]
1005db52:	9107      	str	r1, [sp, #28]
1005db54:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db56:	2105      	movs	r1, #5
1005db58:	6880      	ldr	r0, [r0, #8]
1005db5a:	2202      	movs	r2, #2
1005db5c:	7301      	strb	r1, [r0, #12]
1005db5e:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db60:	9907      	ldr	r1, [sp, #28]
1005db62:	6880      	ldr	r0, [r0, #8]
1005db64:	7341      	strb	r1, [r0, #13]
1005db66:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db68:	4629      	mov	r1, r5
1005db6a:	6880      	ldr	r0, [r0, #8]
1005db6c:	311c      	adds	r1, #28
1005db6e:	300e      	adds	r0, #14
1005db70:	f7e2 fe07 	bl	10040782 <Osal_MemCpy>
1005db74:	9907      	ldr	r1, [sp, #28]
1005db76:	2901      	cmp	r1, #1
1005db78:	d00c      	beq.n	1005db94 <Find_Info_Resp+0x1bc>
1005db7a:	462b      	mov	r3, r5
1005db7c:	3308      	adds	r3, #8
1005db7e:	2210      	movs	r2, #16
1005db80:	2108      	movs	r1, #8
1005db82:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db84:	f7f7 f802 	bl	10054b8c <PM_Write_Pckt_Data>
1005db88:	2414      	movs	r4, #20
1005db8a:	682d      	ldr	r5, [r5, #0]
1005db8c:	42bd      	cmp	r5, r7
1005db8e:	d19c      	bne.n	1005daca <Find_Info_Resp+0xf2>
1005db90:	6836      	ldr	r6, [r6, #0]
1005db92:	e75b      	b.n	1005da4c <Find_Info_Resp+0x74>
1005db94:	980c      	ldr	r0, [sp, #48]	; 0x30
1005db96:	4629      	mov	r1, r5
1005db98:	6880      	ldr	r0, [r0, #8]
1005db9a:	2202      	movs	r2, #2
1005db9c:	3108      	adds	r1, #8
1005db9e:	3010      	adds	r0, #16
1005dba0:	f7e2 fdef 	bl	10040782 <Osal_MemCpy>
1005dba4:	2406      	movs	r4, #6
1005dba6:	e7f0      	b.n	1005db8a <Find_Info_Resp+0x1b2>
1005dba8:	2c00      	cmp	r4, #0
1005dbaa:	d003      	beq.n	1005dbb4 <Find_Info_Resp+0x1dc>
1005dbac:	980c      	ldr	r0, [sp, #48]	; 0x30
1005dbae:	80c4      	strh	r4, [r0, #6]
1005dbb0:	2000      	movs	r0, #0
1005dbb2:	e73b      	b.n	1005da2c <Find_Info_Resp+0x54>
1005dbb4:	4668      	mov	r0, sp
1005dbb6:	8c02      	ldrh	r2, [r0, #32]
1005dbb8:	2104      	movs	r1, #4
1005dbba:	200a      	movs	r0, #10
1005dbbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1005dbbe:	e73a      	b.n	1005da36 <Find_Info_Resp+0x5e>

1005dbc0 <Pm_Resize_Host_Acl_Pckt>:
1005dbc0:	b510      	push	{r4, lr}
1005dbc2:	1d12      	adds	r2, r2, #4
1005dbc4:	6880      	ldr	r0, [r0, #8]
1005dbc6:	b292      	uxth	r2, r2
1005dbc8:	f7f6 ffaa 	bl	10054b20 <PM_Resize_Pckt_Pdu_Size>
1005dbcc:	bd10      	pop	{r4, pc}
	...

1005dbd0 <Prepare_Write_Resp>:
1005dbd0:	b5f0      	push	{r4, r5, r6, r7, lr}
1005dbd2:	4606      	mov	r6, r0
1005dbd4:	485a      	ldr	r0, [pc, #360]	; (1005dd40 <Prepare_Write_Resp+0x170>)
1005dbd6:	460c      	mov	r4, r1
1005dbd8:	6800      	ldr	r0, [r0, #0]
1005dbda:	495a      	ldr	r1, [pc, #360]	; (1005dd44 <Prepare_Write_Resp+0x174>)
1005dbdc:	b08d      	sub	sp, #52	; 0x34
1005dbde:	1847      	adds	r7, r0, r1
1005dbe0:	88e0      	ldrh	r0, [r4, #6]
1005dbe2:	4615      	mov	r5, r2
1005dbe4:	2805      	cmp	r0, #5
1005dbe6:	d204      	bcs.n	1005dbf2 <Prepare_Write_Resp+0x22>
1005dbe8:	4613      	mov	r3, r2
1005dbea:	2200      	movs	r2, #0
1005dbec:	2116      	movs	r1, #22
1005dbee:	2004      	movs	r0, #4
1005dbf0:	e0a2      	b.n	1005dd38 <Prepare_Write_Resp+0x168>
1005dbf2:	68a1      	ldr	r1, [r4, #8]
1005dbf4:	2202      	movs	r2, #2
1005dbf6:	a808      	add	r0, sp, #32
1005dbf8:	310d      	adds	r1, #13
1005dbfa:	f7e2 fdc2 	bl	10040782 <Osal_MemCpy>
1005dbfe:	4668      	mov	r0, sp
1005dc00:	8c00      	ldrh	r0, [r0, #32]
1005dc02:	2800      	cmp	r0, #0
1005dc04:	d073      	beq.n	1005dcee <Prepare_Write_Resp+0x11e>
1005dc06:	f7ed f9db 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005dc0a:	0001      	movs	r1, r0
1005dc0c:	d06f      	beq.n	1005dcee <Prepare_Write_Resp+0x11e>
1005dc0e:	4668      	mov	r0, sp
1005dc10:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005dc12:	8c00      	ldrh	r0, [r0, #32]
1005dc14:	4282      	cmp	r2, r0
1005dc16:	d104      	bne.n	1005dc22 <Prepare_Write_Resp+0x52>
1005dc18:	4602      	mov	r2, r0
1005dc1a:	2116      	movs	r1, #22
1005dc1c:	462b      	mov	r3, r5
1005dc1e:	2003      	movs	r0, #3
1005dc20:	e08a      	b.n	1005dd38 <Prepare_Write_Resp+0x168>
1005dc22:	aa01      	add	r2, sp, #4
1005dc24:	f7ee fa20 	bl	1004c068 <Gatt_search_handle>
1005dc28:	2800      	cmp	r0, #0
1005dc2a:	d160      	bne.n	1005dcee <Prepare_Write_Resp+0x11e>
1005dc2c:	8830      	ldrh	r0, [r6, #0]
1005dc2e:	2202      	movs	r2, #2
1005dc30:	0500      	lsls	r0, r0, #20
1005dc32:	0d00      	lsrs	r0, r0, #20
1005dc34:	9901      	ldr	r1, [sp, #4]
1005dc36:	f7ff fc0f 	bl	1005d458 <Att_Check_Perms>
1005dc3a:	2800      	cmp	r0, #0
1005dc3c:	d004      	beq.n	1005dc48 <Prepare_Write_Resp+0x78>
1005dc3e:	4669      	mov	r1, sp
1005dc40:	8c0a      	ldrh	r2, [r1, #32]
1005dc42:	462b      	mov	r3, r5
1005dc44:	2116      	movs	r1, #22
1005dc46:	e077      	b.n	1005dd38 <Prepare_Write_Resp+0x168>
1005dc48:	4638      	mov	r0, r7
1005dc4a:	3030      	adds	r0, #48	; 0x30
1005dc4c:	4621      	mov	r1, r4
1005dc4e:	9000      	str	r0, [sp, #0]
1005dc50:	f7fe ff5e 	bl	1005cb10 <acl_list_full_on_packt>
1005dc54:	2801      	cmp	r0, #1
1005dc56:	d044      	beq.n	1005dce2 <Prepare_Write_Resp+0x112>
1005dc58:	9801      	ldr	r0, [sp, #4]
1005dc5a:	3020      	adds	r0, #32
1005dc5c:	7980      	ldrb	r0, [r0, #6]
1005dc5e:	0780      	lsls	r0, r0, #30
1005dc60:	d546      	bpl.n	1005dcf0 <Prepare_Write_Resp+0x120>
1005dc62:	6930      	ldr	r0, [r6, #16]
1005dc64:	0381      	lsls	r1, r0, #14
1005dc66:	d443      	bmi.n	1005dcf0 <Prepare_Write_Resp+0x120>
1005dc68:	01c0      	lsls	r0, r0, #7
1005dc6a:	d441      	bmi.n	1005dcf0 <Prepare_Write_Resp+0x120>
1005dc6c:	68a1      	ldr	r1, [r4, #8]
1005dc6e:	2202      	movs	r2, #2
1005dc70:	a809      	add	r0, sp, #36	; 0x24
1005dc72:	310f      	adds	r1, #15
1005dc74:	f7e2 fd85 	bl	10040782 <Osal_MemCpy>
1005dc78:	2101      	movs	r1, #1
1005dc7a:	6930      	ldr	r0, [r6, #16]
1005dc7c:	0449      	lsls	r1, r1, #17
1005dc7e:	4308      	orrs	r0, r1
1005dc80:	6130      	str	r0, [r6, #16]
1005dc82:	2002      	movs	r0, #2
1005dc84:	9007      	str	r0, [sp, #28]
1005dc86:	8830      	ldrh	r0, [r6, #0]
1005dc88:	9006      	str	r0, [sp, #24]
1005dc8a:	9801      	ldr	r0, [sp, #4]
1005dc8c:	2103      	movs	r1, #3
1005dc8e:	8b87      	ldrh	r7, [r0, #28]
1005dc90:	4668      	mov	r0, sp
1005dc92:	8c86      	ldrh	r6, [r0, #36]	; 0x24
1005dc94:	79a0      	ldrb	r0, [r4, #6]
1005dc96:	940a      	str	r4, [sp, #40]	; 0x28
1005dc98:	1f40      	subs	r0, r0, #5
1005dc9a:	b2c5      	uxtb	r5, r0
1005dc9c:	1de8      	adds	r0, r5, #7
1005dc9e:	4308      	orrs	r0, r1
1005dca0:	1c40      	adds	r0, r0, #1
1005dca2:	0883      	lsrs	r3, r0, #2
1005dca4:	4826      	ldr	r0, [pc, #152]	; (1005dd40 <Prepare_Write_Resp+0x170>)
1005dca6:	2102      	movs	r1, #2
1005dca8:	6800      	ldr	r0, [r0, #0]
1005dcaa:	028c      	lsls	r4, r1, #10
1005dcac:	3008      	adds	r0, #8
1005dcae:	1900      	adds	r0, r0, r4
1005dcb0:	2235      	movs	r2, #53	; 0x35
1005dcb2:	6940      	ldr	r0, [r0, #20]
1005dcb4:	f7fe f91a 	bl	1005beec <aci_event_fifo_push_header>
1005dcb8:	0004      	movs	r4, r0
1005dcba:	d00f      	beq.n	1005dcdc <Prepare_Write_Resp+0x10c>
1005dcbc:	9806      	ldr	r0, [sp, #24]
1005dcbe:	80a0      	strh	r0, [r4, #4]
1005dcc0:	80e7      	strh	r7, [r4, #6]
1005dcc2:	8126      	strh	r6, [r4, #8]
1005dcc4:	72a5      	strb	r5, [r4, #10]
1005dcc6:	4623      	mov	r3, r4
1005dcc8:	462a      	mov	r2, r5
1005dcca:	2109      	movs	r1, #9
1005dccc:	330b      	adds	r3, #11
1005dcce:	980a      	ldr	r0, [sp, #40]	; 0x28
1005dcd0:	f7f6 fe6c 	bl	100549ac <PM_Copy_Pckt_Data>
1005dcd4:	4621      	mov	r1, r4
1005dcd6:	9807      	ldr	r0, [sp, #28]
1005dcd8:	f7fe f8f4 	bl	1005bec4 <aci_event_fifo_push>
1005dcdc:	2069      	movs	r0, #105	; 0x69
1005dcde:	b00d      	add	sp, #52	; 0x34
1005dce0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005dce2:	4668      	mov	r0, sp
1005dce4:	8c02      	ldrh	r2, [r0, #32]
1005dce6:	2116      	movs	r1, #22
1005dce8:	462b      	mov	r3, r5
1005dcea:	2009      	movs	r0, #9
1005dcec:	e024      	b.n	1005dd38 <Prepare_Write_Resp+0x168>
1005dcee:	e01e      	b.n	1005dd2e <Prepare_Write_Resp+0x15e>
1005dcf0:	88e2      	ldrh	r2, [r4, #6]
1005dcf2:	2100      	movs	r1, #0
1005dcf4:	4628      	mov	r0, r5
1005dcf6:	f7ff ff63 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005dcfa:	2800      	cmp	r0, #0
1005dcfc:	d001      	beq.n	1005dd02 <Prepare_Write_Resp+0x132>
1005dcfe:	2045      	movs	r0, #69	; 0x45
1005dd00:	e7ed      	b.n	1005dcde <Prepare_Write_Resp+0x10e>
1005dd02:	4638      	mov	r0, r7
1005dd04:	4621      	mov	r1, r4
1005dd06:	3024      	adds	r0, #36	; 0x24
1005dd08:	f7fe ff4d 	bl	1005cba6 <acl_list_remove>
1005dd0c:	4621      	mov	r1, r4
1005dd0e:	4628      	mov	r0, r5
1005dd10:	f7f6 fe10 	bl	10054934 <PM_Clone_Pckt>
1005dd14:	4621      	mov	r1, r4
1005dd16:	9800      	ldr	r0, [sp, #0]
1005dd18:	f7fe ff28 	bl	1005cb6c <acl_list_insert_tail>
1005dd1c:	68a8      	ldr	r0, [r5, #8]
1005dd1e:	2117      	movs	r1, #23
1005dd20:	7301      	strb	r1, [r0, #12]
1005dd22:	88e8      	ldrh	r0, [r5, #6]
1005dd24:	2800      	cmp	r0, #0
1005dd26:	d002      	beq.n	1005dd2e <Prepare_Write_Resp+0x15e>
1005dd28:	80e8      	strh	r0, [r5, #6]
1005dd2a:	2067      	movs	r0, #103	; 0x67
1005dd2c:	e7d7      	b.n	1005dcde <Prepare_Write_Resp+0x10e>
1005dd2e:	4668      	mov	r0, sp
1005dd30:	8c02      	ldrh	r2, [r0, #32]
1005dd32:	462b      	mov	r3, r5
1005dd34:	2116      	movs	r1, #22
1005dd36:	2001      	movs	r0, #1
1005dd38:	f7ff fb10 	bl	1005d35c <ATT_fill_error_resp>
1005dd3c:	2000      	movs	r0, #0
1005dd3e:	e7ce      	b.n	1005dcde <Prepare_Write_Resp+0x10e>
1005dd40:	20000d64 	.word	0x20000d64
1005dd44:	0000072c 	.word	0x0000072c

1005dd48 <Read_Blob_Resp>:
1005dd48:	b570      	push	{r4, r5, r6, lr}
1005dd4a:	4605      	mov	r5, r0
1005dd4c:	88c8      	ldrh	r0, [r1, #6]
1005dd4e:	b088      	sub	sp, #32
1005dd50:	460c      	mov	r4, r1
1005dd52:	4616      	mov	r6, r2
1005dd54:	2805      	cmp	r0, #5
1005dd56:	d004      	beq.n	1005dd62 <Read_Blob_Resp+0x1a>
1005dd58:	4613      	mov	r3, r2
1005dd5a:	2200      	movs	r2, #0
1005dd5c:	210c      	movs	r1, #12
1005dd5e:	2004      	movs	r0, #4
1005dd60:	e01f      	b.n	1005dda2 <Read_Blob_Resp+0x5a>
1005dd62:	68a1      	ldr	r1, [r4, #8]
1005dd64:	2202      	movs	r2, #2
1005dd66:	a804      	add	r0, sp, #16
1005dd68:	310d      	adds	r1, #13
1005dd6a:	f7e2 fd0a 	bl	10040782 <Osal_MemCpy>
1005dd6e:	4668      	mov	r0, sp
1005dd70:	8a02      	ldrh	r2, [r0, #16]
1005dd72:	2a00      	cmp	r2, #0
1005dd74:	d013      	beq.n	1005dd9e <Read_Blob_Resp+0x56>
1005dd76:	68a1      	ldr	r1, [r4, #8]
1005dd78:	2202      	movs	r2, #2
1005dd7a:	a802      	add	r0, sp, #8
1005dd7c:	310f      	adds	r1, #15
1005dd7e:	f7e2 fd00 	bl	10040782 <Osal_MemCpy>
1005dd82:	4668      	mov	r0, sp
1005dd84:	8a00      	ldrh	r0, [r0, #16]
1005dd86:	f7ed f91b 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005dd8a:	0001      	movs	r1, r0
1005dd8c:	d076      	beq.n	1005de7c <Read_Blob_Resp+0x134>
1005dd8e:	4668      	mov	r0, sp
1005dd90:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005dd92:	8a00      	ldrh	r0, [r0, #16]
1005dd94:	4282      	cmp	r2, r0
1005dd96:	d107      	bne.n	1005dda8 <Read_Blob_Resp+0x60>
1005dd98:	4633      	mov	r3, r6
1005dd9a:	4602      	mov	r2, r0
1005dd9c:	e020      	b.n	1005dde0 <Read_Blob_Resp+0x98>
1005dd9e:	4633      	mov	r3, r6
1005dda0:	e06f      	b.n	1005de82 <Read_Blob_Resp+0x13a>
1005dda2:	f7ff fadb 	bl	1005d35c <ATT_fill_error_resp>
1005dda6:	e066      	b.n	1005de76 <Read_Blob_Resp+0x12e>
1005dda8:	466a      	mov	r2, sp
1005ddaa:	f7ee f95d 	bl	1004c068 <Gatt_search_handle>
1005ddae:	2800      	cmp	r0, #0
1005ddb0:	d164      	bne.n	1005de7c <Read_Blob_Resp+0x134>
1005ddb2:	8828      	ldrh	r0, [r5, #0]
1005ddb4:	2201      	movs	r2, #1
1005ddb6:	0500      	lsls	r0, r0, #20
1005ddb8:	0d00      	lsrs	r0, r0, #20
1005ddba:	9900      	ldr	r1, [sp, #0]
1005ddbc:	f7ff fb4c 	bl	1005d458 <Att_Check_Perms>
1005ddc0:	2800      	cmp	r0, #0
1005ddc2:	d004      	beq.n	1005ddce <Read_Blob_Resp+0x86>
1005ddc4:	4669      	mov	r1, sp
1005ddc6:	8a0a      	ldrh	r2, [r1, #16]
1005ddc8:	4633      	mov	r3, r6
1005ddca:	210c      	movs	r1, #12
1005ddcc:	e7e9      	b.n	1005dda2 <Read_Blob_Resp+0x5a>
1005ddce:	9800      	ldr	r0, [sp, #0]
1005ddd0:	886a      	ldrh	r2, [r5, #2]
1005ddd2:	8bc1      	ldrh	r1, [r0, #30]
1005ddd4:	1ed3      	subs	r3, r2, #3
1005ddd6:	4299      	cmp	r1, r3
1005ddd8:	d805      	bhi.n	1005dde6 <Read_Blob_Resp+0x9e>
1005ddda:	4668      	mov	r0, sp
1005dddc:	8a02      	ldrh	r2, [r0, #16]
1005ddde:	4633      	mov	r3, r6
1005dde0:	210c      	movs	r1, #12
1005dde2:	200b      	movs	r0, #11
1005dde4:	e7dd      	b.n	1005dda2 <Read_Blob_Resp+0x5a>
1005dde6:	466b      	mov	r3, sp
1005dde8:	891b      	ldrh	r3, [r3, #8]
1005ddea:	4299      	cmp	r1, r3
1005ddec:	d205      	bcs.n	1005ddfa <Read_Blob_Resp+0xb2>
1005ddee:	4668      	mov	r0, sp
1005ddf0:	8a02      	ldrh	r2, [r0, #16]
1005ddf2:	210c      	movs	r1, #12
1005ddf4:	4633      	mov	r3, r6
1005ddf6:	2007      	movs	r0, #7
1005ddf8:	e7d3      	b.n	1005dda2 <Read_Blob_Resp+0x5a>
1005ddfa:	2126      	movs	r1, #38	; 0x26
1005ddfc:	5c09      	ldrb	r1, [r1, r0]
1005ddfe:	0749      	lsls	r1, r1, #29
1005de00:	d50e      	bpl.n	1005de20 <Read_Blob_Resp+0xd8>
1005de02:	6929      	ldr	r1, [r5, #16]
1005de04:	030c      	lsls	r4, r1, #12
1005de06:	d40b      	bmi.n	1005de20 <Read_Blob_Resp+0xd8>
1005de08:	2201      	movs	r2, #1
1005de0a:	04d2      	lsls	r2, r2, #19
1005de0c:	4311      	orrs	r1, r2
1005de0e:	6129      	str	r1, [r5, #16]
1005de10:	8b82      	ldrh	r2, [r0, #28]
1005de12:	8829      	ldrh	r1, [r5, #0]
1005de14:	2002      	movs	r0, #2
1005de16:	f000 fd97 	bl	1005e948 <aci_gatt_read_permit_req_event_push>
1005de1a:	2069      	movs	r0, #105	; 0x69
1005de1c:	b008      	add	sp, #32
1005de1e:	bd70      	pop	{r4, r5, r6, pc}
1005de20:	2100      	movs	r1, #0
1005de22:	4630      	mov	r0, r6
1005de24:	f7ff fecc 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005de28:	2800      	cmp	r0, #0
1005de2a:	d001      	beq.n	1005de30 <Read_Blob_Resp+0xe8>
1005de2c:	2045      	movs	r0, #69	; 0x45
1005de2e:	e7f5      	b.n	1005de1c <Read_Blob_Resp+0xd4>
1005de30:	68b0      	ldr	r0, [r6, #8]
1005de32:	210d      	movs	r1, #13
1005de34:	7301      	strb	r1, [r0, #12]
1005de36:	4629      	mov	r1, r5
1005de38:	9800      	ldr	r0, [sp, #0]
1005de3a:	f7ec fa55 	bl	1004a2e8 <Find_Attr_Index>
1005de3e:	4601      	mov	r1, r0
1005de40:	9800      	ldr	r0, [sp, #0]
1005de42:	466a      	mov	r2, sp
1005de44:	8bc3      	ldrh	r3, [r0, #30]
1005de46:	8912      	ldrh	r2, [r2, #8]
1005de48:	1a9b      	subs	r3, r3, r2
1005de4a:	b29c      	uxth	r4, r3
1005de4c:	886b      	ldrh	r3, [r5, #2]
1005de4e:	1e5b      	subs	r3, r3, #1
1005de50:	b29b      	uxth	r3, r3
1005de52:	429c      	cmp	r4, r3
1005de54:	d300      	bcc.n	1005de58 <Read_Blob_Resp+0x110>
1005de56:	461c      	mov	r4, r3
1005de58:	6983      	ldr	r3, [r0, #24]
1005de5a:	8c00      	ldrh	r0, [r0, #32]
1005de5c:	4348      	muls	r0, r1
1005de5e:	1818      	adds	r0, r3, r0
1005de60:	1883      	adds	r3, r0, r2
1005de62:	2105      	movs	r1, #5
1005de64:	4622      	mov	r2, r4
1005de66:	4630      	mov	r0, r6
1005de68:	f7f6 fe90 	bl	10054b8c <PM_Write_Pckt_Data>
1005de6c:	1c64      	adds	r4, r4, #1
1005de6e:	0420      	lsls	r0, r4, #16
1005de70:	0c00      	lsrs	r0, r0, #16
1005de72:	d003      	beq.n	1005de7c <Read_Blob_Resp+0x134>
1005de74:	80f0      	strh	r0, [r6, #6]
1005de76:	2000      	movs	r0, #0
1005de78:	e7d0      	b.n	1005de1c <Read_Blob_Resp+0xd4>
1005de7a:	e7ff      	b.n	1005de7c <Read_Blob_Resp+0x134>
1005de7c:	4668      	mov	r0, sp
1005de7e:	8a02      	ldrh	r2, [r0, #16]
1005de80:	4633      	mov	r3, r6
1005de82:	210c      	movs	r1, #12
1005de84:	2001      	movs	r0, #1
1005de86:	e78c      	b.n	1005dda2 <Read_Blob_Resp+0x5a>

1005de88 <Read_By_Grp_Type_Resp>:
1005de88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005de8a:	2000      	movs	r0, #0
1005de8c:	b092      	sub	sp, #72	; 0x48
1005de8e:	4605      	mov	r5, r0
1005de90:	9008      	str	r0, [sp, #32]
1005de92:	4873      	ldr	r0, [pc, #460]	; (1005e060 <Read_By_Grp_Type_Resp+0x1d8>)
1005de94:	460c      	mov	r4, r1
1005de96:	6800      	ldr	r0, [r0, #0]
1005de98:	4972      	ldr	r1, [pc, #456]	; (1005e064 <Read_By_Grp_Type_Resp+0x1dc>)
1005de9a:	4616      	mov	r6, r2
1005de9c:	1847      	adds	r7, r0, r1
1005de9e:	88e0      	ldrh	r0, [r4, #6]
1005dea0:	2807      	cmp	r0, #7
1005dea2:	d006      	beq.n	1005deb2 <Read_By_Grp_Type_Resp+0x2a>
1005dea4:	2815      	cmp	r0, #21
1005dea6:	d004      	beq.n	1005deb2 <Read_By_Grp_Type_Resp+0x2a>
1005dea8:	4613      	mov	r3, r2
1005deaa:	2200      	movs	r2, #0
1005deac:	2110      	movs	r1, #16
1005deae:	2004      	movs	r0, #4
1005deb0:	e045      	b.n	1005df3e <Read_By_Grp_Type_Resp+0xb6>
1005deb2:	68a1      	ldr	r1, [r4, #8]
1005deb4:	2202      	movs	r2, #2
1005deb6:	a805      	add	r0, sp, #20
1005deb8:	310d      	adds	r1, #13
1005deba:	f7e2 fc62 	bl	10040782 <Osal_MemCpy>
1005debe:	68a1      	ldr	r1, [r4, #8]
1005dec0:	2202      	movs	r2, #2
1005dec2:	a806      	add	r0, sp, #24
1005dec4:	310f      	adds	r1, #15
1005dec6:	f7e2 fc5c 	bl	10040782 <Osal_MemCpy>
1005deca:	4668      	mov	r0, sp
1005decc:	8a82      	ldrh	r2, [r0, #20]
1005dece:	8b00      	ldrh	r0, [r0, #24]
1005ded0:	4282      	cmp	r2, r0
1005ded2:	d831      	bhi.n	1005df38 <Read_By_Grp_Type_Resp+0xb0>
1005ded4:	2a00      	cmp	r2, #0
1005ded6:	d02f      	beq.n	1005df38 <Read_By_Grp_Type_Resp+0xb0>
1005ded8:	2210      	movs	r2, #16
1005deda:	4963      	ldr	r1, [pc, #396]	; (1005e068 <Read_By_Grp_Type_Resp+0x1e0>)
1005dedc:	a80d      	add	r0, sp, #52	; 0x34
1005dede:	f7e2 fc50 	bl	10040782 <Osal_MemCpy>
1005dee2:	88e1      	ldrh	r1, [r4, #6]
1005dee4:	a80c      	add	r0, sp, #48	; 0x30
1005dee6:	9001      	str	r0, [sp, #4]
1005dee8:	2907      	cmp	r1, #7
1005deea:	d02b      	beq.n	1005df44 <Read_By_Grp_Type_Resp+0xbc>
1005deec:	4603      	mov	r3, r0
1005deee:	2210      	movs	r2, #16
1005def0:	2109      	movs	r1, #9
1005def2:	4620      	mov	r0, r4
1005def4:	f7f6 fd5a 	bl	100549ac <PM_Copy_Pckt_Data>
1005def8:	2202      	movs	r2, #2
1005defa:	a807      	add	r0, sp, #28
1005defc:	3708      	adds	r7, #8
1005defe:	9901      	ldr	r1, [sp, #4]
1005df00:	f7e2 fc3f 	bl	10040782 <Osal_MemCpy>
1005df04:	4668      	mov	r0, sp
1005df06:	8b80      	ldrh	r0, [r0, #28]
1005df08:	2105      	movs	r1, #5
1005df0a:	02c9      	lsls	r1, r1, #11
1005df0c:	4288      	cmp	r0, r1
1005df0e:	d002      	beq.n	1005df16 <Read_By_Grp_Type_Resp+0x8e>
1005df10:	1c49      	adds	r1, r1, #1
1005df12:	4288      	cmp	r0, r1
1005df14:	d17e      	bne.n	1005e014 <Read_By_Grp_Type_Resp+0x18c>
1005df16:	4668      	mov	r0, sp
1005df18:	8a80      	ldrh	r0, [r0, #20]
1005df1a:	f7ed f83b 	bl	1004af94 <Gatt_Find_Srv_From_Handle>
1005df1e:	0004      	movs	r4, r0
1005df20:	d079      	beq.n	1005e016 <Read_By_Grp_Type_Resp+0x18e>
1005df22:	9812      	ldr	r0, [sp, #72]	; 0x48
1005df24:	2100      	movs	r1, #0
1005df26:	8842      	ldrh	r2, [r0, #2]
1005df28:	4630      	mov	r0, r6
1005df2a:	f7ff fe49 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005df2e:	2800      	cmp	r0, #0
1005df30:	d07e      	beq.n	1005e030 <Read_By_Grp_Type_Resp+0x1a8>
1005df32:	2045      	movs	r0, #69	; 0x45
1005df34:	b015      	add	sp, #84	; 0x54
1005df36:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005df38:	4633      	mov	r3, r6
1005df3a:	2110      	movs	r1, #16
1005df3c:	2001      	movs	r0, #1
1005df3e:	f7ff fa0d 	bl	1005d35c <ATT_fill_error_resp>
1005df42:	e07f      	b.n	1005e044 <Read_By_Grp_Type_Resp+0x1bc>
1005df44:	2210      	movs	r2, #16
1005df46:	4948      	ldr	r1, [pc, #288]	; (1005e068 <Read_By_Grp_Type_Resp+0x1e0>)
1005df48:	a809      	add	r0, sp, #36	; 0x24
1005df4a:	f7e2 fc1a 	bl	10040782 <Osal_MemCpy>
1005df4e:	68a1      	ldr	r1, [r4, #8]
1005df50:	2202      	movs	r2, #2
1005df52:	3111      	adds	r1, #17
1005df54:	9801      	ldr	r0, [sp, #4]
1005df56:	f7e2 fc14 	bl	10040782 <Osal_MemCpy>
1005df5a:	e7cd      	b.n	1005def8 <Read_By_Grp_Type_Resp+0x70>
1005df5c:	4669      	mov	r1, sp
1005df5e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
1005df60:	8b89      	ldrh	r1, [r1, #28]
1005df62:	4288      	cmp	r0, r1
1005df64:	d163      	bne.n	1005e02e <Read_By_Grp_Type_Resp+0x1a6>
1005df66:	2d00      	cmp	r5, #0
1005df68:	d10c      	bne.n	1005df84 <Read_By_Grp_Type_Resp+0xfc>
1005df6a:	68b0      	ldr	r0, [r6, #8]
1005df6c:	2111      	movs	r1, #17
1005df6e:	7301      	strb	r1, [r0, #12]
1005df70:	202c      	movs	r0, #44	; 0x2c
1005df72:	5d00      	ldrb	r0, [r0, r4]
1005df74:	2801      	cmp	r0, #1
1005df76:	d010      	beq.n	1005df9a <Read_By_Grp_Type_Resp+0x112>
1005df78:	2014      	movs	r0, #20
1005df7a:	9008      	str	r0, [sp, #32]
1005df7c:	68b0      	ldr	r0, [r6, #8]
1005df7e:	9908      	ldr	r1, [sp, #32]
1005df80:	7341      	strb	r1, [r0, #13]
1005df82:	2502      	movs	r5, #2
1005df84:	9812      	ldr	r0, [sp, #72]	; 0x48
1005df86:	8840      	ldrh	r0, [r0, #2]
1005df88:	1b40      	subs	r0, r0, r5
1005df8a:	2804      	cmp	r0, #4
1005df8c:	d357      	bcc.n	1005e03e <Read_By_Grp_Type_Resp+0x1b6>
1005df8e:	9808      	ldr	r0, [sp, #32]
1005df90:	2806      	cmp	r0, #6
1005df92:	d004      	beq.n	1005df9e <Read_By_Grp_Type_Resp+0x116>
1005df94:	2814      	cmp	r0, #20
1005df96:	d007      	beq.n	1005dfa8 <Read_By_Grp_Type_Resp+0x120>
1005df98:	e051      	b.n	1005e03e <Read_By_Grp_Type_Resp+0x1b6>
1005df9a:	2006      	movs	r0, #6
1005df9c:	e7ed      	b.n	1005df7a <Read_By_Grp_Type_Resp+0xf2>
1005df9e:	202c      	movs	r0, #44	; 0x2c
1005dfa0:	5d00      	ldrb	r0, [r0, r4]
1005dfa2:	2801      	cmp	r0, #1
1005dfa4:	d004      	beq.n	1005dfb0 <Read_By_Grp_Type_Resp+0x128>
1005dfa6:	e04a      	b.n	1005e03e <Read_By_Grp_Type_Resp+0x1b6>
1005dfa8:	202c      	movs	r0, #44	; 0x2c
1005dfaa:	5d00      	ldrb	r0, [r0, r4]
1005dfac:	2802      	cmp	r0, #2
1005dfae:	d146      	bne.n	1005e03e <Read_By_Grp_Type_Resp+0x1b6>
1005dfb0:	1d28      	adds	r0, r5, #4
1005dfb2:	4623      	mov	r3, r4
1005dfb4:	b281      	uxth	r1, r0
1005dfb6:	3328      	adds	r3, #40	; 0x28
1005dfb8:	2202      	movs	r2, #2
1005dfba:	4630      	mov	r0, r6
1005dfbc:	9304      	str	r3, [sp, #16]
1005dfbe:	f7f6 fde5 	bl	10054b8c <PM_Write_Pckt_Data>
1005dfc2:	1cad      	adds	r5, r5, #2
1005dfc4:	4620      	mov	r0, r4
1005dfc6:	6a21      	ldr	r1, [r4, #32]
1005dfc8:	3020      	adds	r0, #32
1005dfca:	b2ad      	uxth	r5, r5
1005dfcc:	4281      	cmp	r1, r0
1005dfce:	d006      	beq.n	1005dfde <Read_By_Grp_Type_Resp+0x156>
1005dfd0:	1d28      	adds	r0, r5, #4
1005dfd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
1005dfd4:	b281      	uxth	r1, r0
1005dfd6:	2202      	movs	r2, #2
1005dfd8:	4630      	mov	r0, r6
1005dfda:	331c      	adds	r3, #28
1005dfdc:	e004      	b.n	1005dfe8 <Read_By_Grp_Type_Resp+0x160>
1005dfde:	1d28      	adds	r0, r5, #4
1005dfe0:	b281      	uxth	r1, r0
1005dfe2:	2202      	movs	r2, #2
1005dfe4:	4630      	mov	r0, r6
1005dfe6:	9b04      	ldr	r3, [sp, #16]
1005dfe8:	f7f6 fdd0 	bl	10054b8c <PM_Write_Pckt_Data>
1005dfec:	9808      	ldr	r0, [sp, #32]
1005dfee:	1cad      	adds	r5, r5, #2
1005dff0:	1f00      	subs	r0, r0, #4
1005dff2:	b281      	uxth	r1, r0
1005dff4:	9812      	ldr	r0, [sp, #72]	; 0x48
1005dff6:	b2ad      	uxth	r5, r5
1005dff8:	8840      	ldrh	r0, [r0, #2]
1005dffa:	1b40      	subs	r0, r0, r5
1005dffc:	b280      	uxth	r0, r0
1005dffe:	4281      	cmp	r1, r0
1005e000:	d200      	bcs.n	1005e004 <Read_By_Grp_Type_Resp+0x17c>
1005e002:	4608      	mov	r0, r1
1005e004:	9003      	str	r0, [sp, #12]
1005e006:	1d28      	adds	r0, r5, #4
1005e008:	b281      	uxth	r1, r0
1005e00a:	4623      	mov	r3, r4
1005e00c:	3308      	adds	r3, #8
1005e00e:	4630      	mov	r0, r6
1005e010:	9a03      	ldr	r2, [sp, #12]
1005e012:	e002      	b.n	1005e01a <Read_By_Grp_Type_Resp+0x192>
1005e014:	e018      	b.n	1005e048 <Read_By_Grp_Type_Resp+0x1c0>
1005e016:	e01d      	b.n	1005e054 <Read_By_Grp_Type_Resp+0x1cc>
1005e018:	e00a      	b.n	1005e030 <Read_By_Grp_Type_Resp+0x1a8>
1005e01a:	f7f6 fdb7 	bl	10054b8c <PM_Write_Pckt_Data>
1005e01e:	9803      	ldr	r0, [sp, #12]
1005e020:	1828      	adds	r0, r5, r0
1005e022:	b285      	uxth	r5, r0
1005e024:	9812      	ldr	r0, [sp, #72]	; 0x48
1005e026:	8840      	ldrh	r0, [r0, #2]
1005e028:	1b40      	subs	r0, r0, r5
1005e02a:	2804      	cmp	r0, #4
1005e02c:	d307      	bcc.n	1005e03e <Read_By_Grp_Type_Resp+0x1b6>
1005e02e:	6824      	ldr	r4, [r4, #0]
1005e030:	42bc      	cmp	r4, r7
1005e032:	d004      	beq.n	1005e03e <Read_By_Grp_Type_Resp+0x1b6>
1005e034:	4669      	mov	r1, sp
1005e036:	8d20      	ldrh	r0, [r4, #40]	; 0x28
1005e038:	8b09      	ldrh	r1, [r1, #24]
1005e03a:	4288      	cmp	r0, r1
1005e03c:	d98e      	bls.n	1005df5c <Read_By_Grp_Type_Resp+0xd4>
1005e03e:	2d00      	cmp	r5, #0
1005e040:	d008      	beq.n	1005e054 <Read_By_Grp_Type_Resp+0x1cc>
1005e042:	80f5      	strh	r5, [r6, #6]
1005e044:	2000      	movs	r0, #0
1005e046:	e775      	b.n	1005df34 <Read_By_Grp_Type_Resp+0xac>
1005e048:	4668      	mov	r0, sp
1005e04a:	8a82      	ldrh	r2, [r0, #20]
1005e04c:	2110      	movs	r1, #16
1005e04e:	4633      	mov	r3, r6
1005e050:	4608      	mov	r0, r1
1005e052:	e774      	b.n	1005df3e <Read_By_Grp_Type_Resp+0xb6>
1005e054:	4668      	mov	r0, sp
1005e056:	8a82      	ldrh	r2, [r0, #20]
1005e058:	2110      	movs	r1, #16
1005e05a:	4633      	mov	r3, r6
1005e05c:	200a      	movs	r0, #10
1005e05e:	e76e      	b.n	1005df3e <Read_By_Grp_Type_Resp+0xb6>
1005e060:	20000d64 	.word	0x20000d64
1005e064:	0000072c 	.word	0x0000072c
1005e068:	1006006c 	.word	0x1006006c

1005e06c <Read_By_Type_Resp>:
1005e06c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005e06e:	b0ff      	sub	sp, #508	; 0x1fc
1005e070:	b093      	sub	sp, #76	; 0x4c
1005e072:	4607      	mov	r7, r0
1005e074:	460c      	mov	r4, r1
1005e076:	2000      	movs	r0, #0
1005e078:	a980      	add	r1, sp, #512	; 0x200
1005e07a:	9003      	str	r0, [sp, #12]
1005e07c:	8388      	strh	r0, [r1, #28]
1005e07e:	48ad      	ldr	r0, [pc, #692]	; (1005e334 <Read_By_Type_Resp+0x2c8>)
1005e080:	49ad      	ldr	r1, [pc, #692]	; (1005e338 <Read_By_Type_Resp+0x2cc>)
1005e082:	6800      	ldr	r0, [r0, #0]
1005e084:	2602      	movs	r6, #2
1005e086:	1845      	adds	r5, r0, r1
1005e088:	88e0      	ldrh	r0, [r4, #6]
1005e08a:	2807      	cmp	r0, #7
1005e08c:	d006      	beq.n	1005e09c <Read_By_Type_Resp+0x30>
1005e08e:	2815      	cmp	r0, #21
1005e090:	d004      	beq.n	1005e09c <Read_By_Type_Resp+0x30>
1005e092:	2200      	movs	r2, #0
1005e094:	2108      	movs	r1, #8
1005e096:	2004      	movs	r0, #4
1005e098:	9b94      	ldr	r3, [sp, #592]	; 0x250
1005e09a:	e04c      	b.n	1005e136 <Read_By_Type_Resp+0xca>
1005e09c:	68a1      	ldr	r1, [r4, #8]
1005e09e:	2202      	movs	r2, #2
1005e0a0:	a885      	add	r0, sp, #532	; 0x214
1005e0a2:	310d      	adds	r1, #13
1005e0a4:	f7e2 fb6d 	bl	10040782 <Osal_MemCpy>
1005e0a8:	68a1      	ldr	r1, [r4, #8]
1005e0aa:	2202      	movs	r2, #2
1005e0ac:	a886      	add	r0, sp, #536	; 0x218
1005e0ae:	310f      	adds	r1, #15
1005e0b0:	f7e2 fb67 	bl	10040782 <Osal_MemCpy>
1005e0b4:	a880      	add	r0, sp, #512	; 0x200
1005e0b6:	8a82      	ldrh	r2, [r0, #20]
1005e0b8:	8b00      	ldrh	r0, [r0, #24]
1005e0ba:	4282      	cmp	r2, r0
1005e0bc:	d838      	bhi.n	1005e130 <Read_By_Type_Resp+0xc4>
1005e0be:	2a00      	cmp	r2, #0
1005e0c0:	d036      	beq.n	1005e130 <Read_By_Type_Resp+0xc4>
1005e0c2:	2210      	movs	r2, #16
1005e0c4:	499d      	ldr	r1, [pc, #628]	; (1005e33c <Read_By_Type_Resp+0x2d0>)
1005e0c6:	a88d      	add	r0, sp, #564	; 0x234
1005e0c8:	f7e2 fb5b 	bl	10040782 <Osal_MemCpy>
1005e0cc:	88e0      	ldrh	r0, [r4, #6]
1005e0ce:	2807      	cmp	r0, #7
1005e0d0:	d034      	beq.n	1005e13c <Read_By_Type_Resp+0xd0>
1005e0d2:	ab89      	add	r3, sp, #548	; 0x224
1005e0d4:	2210      	movs	r2, #16
1005e0d6:	2109      	movs	r1, #9
1005e0d8:	4620      	mov	r0, r4
1005e0da:	f7f6 fc67 	bl	100549ac <PM_Copy_Pckt_Data>
1005e0de:	6938      	ldr	r0, [r7, #16]
1005e0e0:	0300      	lsls	r0, r0, #12
1005e0e2:	d437      	bmi.n	1005e154 <Read_By_Type_Resp+0xe8>
1005e0e4:	8839      	ldrh	r1, [r7, #0]
1005e0e6:	4668      	mov	r0, sp
1005e0e8:	7401      	strb	r1, [r0, #16]
1005e0ea:	0a09      	lsrs	r1, r1, #8
1005e0ec:	7441      	strb	r1, [r0, #17]
1005e0ee:	a980      	add	r1, sp, #512	; 0x200
1005e0f0:	8b0a      	ldrh	r2, [r1, #24]
1005e0f2:	8a89      	ldrh	r1, [r1, #20]
1005e0f4:	a889      	add	r0, sp, #548	; 0x224
1005e0f6:	466c      	mov	r4, sp
1005e0f8:	c407      	stmia	r4!, {r0, r1, r2}
1005e0fa:	ac04      	add	r4, sp, #16
1005e0fc:	ab8d      	add	r3, sp, #564	; 0x234
1005e0fe:	aa87      	add	r2, sp, #540	; 0x21c
1005e100:	4628      	mov	r0, r5
1005e102:	1ca1      	adds	r1, r4, #2
1005e104:	f7f6 fd99 	bl	10054c3a <Accu_UuidTypes_Requiring_Auth>
1005e108:	a880      	add	r0, sp, #512	; 0x200
1005e10a:	8b80      	ldrh	r0, [r0, #28]
1005e10c:	2800      	cmp	r0, #0
1005e10e:	d021      	beq.n	1005e154 <Read_By_Type_Resp+0xe8>
1005e110:	2101      	movs	r1, #1
1005e112:	693a      	ldr	r2, [r7, #16]
1005e114:	04c9      	lsls	r1, r1, #19
1005e116:	430a      	orrs	r2, r1
1005e118:	613a      	str	r2, [r7, #16]
1005e11a:	0640      	lsls	r0, r0, #25
1005e11c:	0e02      	lsrs	r2, r0, #24
1005e11e:	8839      	ldrh	r1, [r7, #0]
1005e120:	1ca3      	adds	r3, r4, #2
1005e122:	2002      	movs	r0, #2
1005e124:	f000 fbdc 	bl	1005e8e0 <aci_gatt_read_multi_permit_req_event_push>
1005e128:	2069      	movs	r0, #105	; 0x69
1005e12a:	b07f      	add	sp, #508	; 0x1fc
1005e12c:	b016      	add	sp, #88	; 0x58
1005e12e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e130:	2108      	movs	r1, #8
1005e132:	2001      	movs	r0, #1
1005e134:	9b94      	ldr	r3, [sp, #592]	; 0x250
1005e136:	f7ff f911 	bl	1005d35c <ATT_fill_error_resp>
1005e13a:	e0f2      	b.n	1005e322 <Read_By_Type_Resp+0x2b6>
1005e13c:	2210      	movs	r2, #16
1005e13e:	497f      	ldr	r1, [pc, #508]	; (1005e33c <Read_By_Type_Resp+0x2d0>)
1005e140:	a889      	add	r0, sp, #548	; 0x224
1005e142:	f7e2 fb1e 	bl	10040782 <Osal_MemCpy>
1005e146:	68a1      	ldr	r1, [r4, #8]
1005e148:	2202      	movs	r2, #2
1005e14a:	a88c      	add	r0, sp, #560	; 0x230
1005e14c:	3111      	adds	r1, #17
1005e14e:	f7e2 fb18 	bl	10040782 <Osal_MemCpy>
1005e152:	e7c4      	b.n	1005e0de <Read_By_Type_Resp+0x72>
1005e154:	887a      	ldrh	r2, [r7, #2]
1005e156:	2100      	movs	r1, #0
1005e158:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e15a:	f7ff fd31 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005e15e:	2800      	cmp	r0, #0
1005e160:	d001      	beq.n	1005e166 <Read_By_Type_Resp+0xfa>
1005e162:	2045      	movs	r0, #69	; 0x45
1005e164:	e7e1      	b.n	1005e12a <Read_By_Type_Resp+0xbe>
1005e166:	3508      	adds	r5, #8
1005e168:	a880      	add	r0, sp, #512	; 0x200
1005e16a:	9588      	str	r5, [sp, #544]	; 0x220
1005e16c:	8a80      	ldrh	r0, [r0, #20]
1005e16e:	f7ec ff27 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005e172:	0005      	movs	r5, r0
1005e174:	a890      	add	r0, sp, #576	; 0x240
1005e176:	9001      	str	r0, [sp, #4]
1005e178:	d074      	beq.n	1005e264 <Read_By_Type_Resp+0x1f8>
1005e17a:	e0b8      	b.n	1005e2ee <Read_By_Type_Resp+0x282>
1005e17c:	4629      	mov	r1, r5
1005e17e:	2202      	movs	r2, #2
1005e180:	312a      	adds	r1, #42	; 0x2a
1005e182:	9801      	ldr	r0, [sp, #4]
1005e184:	f7e2 fafd 	bl	10040782 <Osal_MemCpy>
1005e188:	2210      	movs	r2, #16
1005e18a:	a989      	add	r1, sp, #548	; 0x224
1005e18c:	a88d      	add	r0, sp, #564	; 0x234
1005e18e:	f7e2 fb00 	bl	10040792 <Osal_MemCmp>
1005e192:	2800      	cmp	r0, #0
1005e194:	d006      	beq.n	1005e1a4 <Read_By_Type_Resp+0x138>
1005e196:	4628      	mov	r0, r5
1005e198:	3020      	adds	r0, #32
1005e19a:	9000      	str	r0, [sp, #0]
1005e19c:	6a2c      	ldr	r4, [r5, #32]
1005e19e:	4284      	cmp	r4, r0
1005e1a0:	d17e      	bne.n	1005e2a0 <Read_By_Type_Resp+0x234>
1005e1a2:	e0a3      	b.n	1005e2ec <Read_By_Type_Resp+0x280>
1005e1a4:	9803      	ldr	r0, [sp, #12]
1005e1a6:	2800      	cmp	r0, #0
1005e1a8:	d004      	beq.n	1005e1b4 <Read_By_Type_Resp+0x148>
1005e1aa:	2804      	cmp	r0, #4
1005e1ac:	d010      	beq.n	1005e1d0 <Read_By_Type_Resp+0x164>
1005e1ae:	2812      	cmp	r0, #18
1005e1b0:	d006      	beq.n	1005e1c0 <Read_By_Type_Resp+0x154>
1005e1b2:	e0aa      	b.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e1b4:	202c      	movs	r0, #44	; 0x2c
1005e1b6:	5d40      	ldrb	r0, [r0, r5]
1005e1b8:	2801      	cmp	r0, #1
1005e1ba:	d006      	beq.n	1005e1ca <Read_By_Type_Resp+0x15e>
1005e1bc:	2012      	movs	r0, #18
1005e1be:	9003      	str	r0, [sp, #12]
1005e1c0:	202c      	movs	r0, #44	; 0x2c
1005e1c2:	5d40      	ldrb	r0, [r0, r5]
1005e1c4:	2802      	cmp	r0, #2
1005e1c6:	d007      	beq.n	1005e1d8 <Read_By_Type_Resp+0x16c>
1005e1c8:	e09f      	b.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e1ca:	2004      	movs	r0, #4
1005e1cc:	9003      	str	r0, [sp, #12]
1005e1ce:	e003      	b.n	1005e1d8 <Read_By_Type_Resp+0x16c>
1005e1d0:	202c      	movs	r0, #44	; 0x2c
1005e1d2:	5d40      	ldrb	r0, [r0, r5]
1005e1d4:	2801      	cmp	r0, #1
1005e1d6:	d17d      	bne.n	1005e2d4 <Read_By_Type_Resp+0x268>
1005e1d8:	1d30      	adds	r0, r6, #4
1005e1da:	b281      	uxth	r1, r0
1005e1dc:	462b      	mov	r3, r5
1005e1de:	3328      	adds	r3, #40	; 0x28
1005e1e0:	2202      	movs	r2, #2
1005e1e2:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e1e4:	f7f6 fcd2 	bl	10054b8c <PM_Write_Pckt_Data>
1005e1e8:	9803      	ldr	r0, [sp, #12]
1005e1ea:	462b      	mov	r3, r5
1005e1ec:	1e80      	subs	r0, r0, #2
1005e1ee:	b282      	uxth	r2, r0
1005e1f0:	1db0      	adds	r0, r6, #6
1005e1f2:	b281      	uxth	r1, r0
1005e1f4:	3308      	adds	r3, #8
1005e1f6:	1cb6      	adds	r6, r6, #2
1005e1f8:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e1fa:	f7f6 fcc7 	bl	10054b8c <PM_Write_Pckt_Data>
1005e1fe:	9803      	ldr	r0, [sp, #12]
1005e200:	1830      	adds	r0, r6, r0
1005e202:	1e80      	subs	r0, r0, #2
1005e204:	b286      	uxth	r6, r0
1005e206:	e071      	b.n	1005e2ec <Read_By_Type_Resp+0x280>
1005e208:	a980      	add	r1, sp, #512	; 0x200
1005e20a:	8ba0      	ldrh	r0, [r4, #28]
1005e20c:	8a89      	ldrh	r1, [r1, #20]
1005e20e:	4288      	cmp	r0, r1
1005e210:	d368      	bcc.n	1005e2e4 <Read_By_Type_Resp+0x278>
1005e212:	a980      	add	r1, sp, #512	; 0x200
1005e214:	8b09      	ldrh	r1, [r1, #24]
1005e216:	4288      	cmp	r0, r1
1005e218:	d877      	bhi.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e21a:	2023      	movs	r0, #35	; 0x23
1005e21c:	5d00      	ldrb	r0, [r0, r4]
1005e21e:	2801      	cmp	r0, #1
1005e220:	d008      	beq.n	1005e234 <Read_By_Type_Resp+0x1c8>
1005e222:	4620      	mov	r0, r4
1005e224:	3008      	adds	r0, #8
1005e226:	2210      	movs	r2, #16
1005e228:	a989      	add	r1, sp, #548	; 0x224
1005e22a:	f7e2 fab2 	bl	10040792 <Osal_MemCmp>
1005e22e:	2800      	cmp	r0, #0
1005e230:	d008      	beq.n	1005e244 <Read_By_Type_Resp+0x1d8>
1005e232:	e057      	b.n	1005e2e4 <Read_By_Type_Resp+0x278>
1005e234:	4621      	mov	r1, r4
1005e236:	2202      	movs	r2, #2
1005e238:	3108      	adds	r1, #8
1005e23a:	9801      	ldr	r0, [sp, #4]
1005e23c:	f7e2 faa1 	bl	10040782 <Osal_MemCpy>
1005e240:	a88d      	add	r0, sp, #564	; 0x234
1005e242:	e7f0      	b.n	1005e226 <Read_By_Type_Resp+0x1ba>
1005e244:	8838      	ldrh	r0, [r7, #0]
1005e246:	2201      	movs	r2, #1
1005e248:	0500      	lsls	r0, r0, #20
1005e24a:	0d00      	lsrs	r0, r0, #20
1005e24c:	4621      	mov	r1, r4
1005e24e:	f7ff f903 	bl	1005d458 <Att_Check_Perms>
1005e252:	9903      	ldr	r1, [sp, #12]
1005e254:	2900      	cmp	r1, #0
1005e256:	d115      	bne.n	1005e284 <Read_By_Type_Resp+0x218>
1005e258:	2800      	cmp	r0, #0
1005e25a:	d004      	beq.n	1005e266 <Read_By_Type_Resp+0x1fa>
1005e25c:	8ba2      	ldrh	r2, [r4, #28]
1005e25e:	2108      	movs	r1, #8
1005e260:	9b94      	ldr	r3, [sp, #592]	; 0x250
1005e262:	e768      	b.n	1005e136 <Read_By_Type_Resp+0xca>
1005e264:	e05f      	b.n	1005e326 <Read_By_Type_Resp+0x2ba>
1005e266:	8be1      	ldrh	r1, [r4, #30]
1005e268:	29fd      	cmp	r1, #253	; 0xfd
1005e26a:	d901      	bls.n	1005e270 <Read_By_Type_Resp+0x204>
1005e26c:	21ff      	movs	r1, #255	; 0xff
1005e26e:	e001      	b.n	1005e274 <Read_By_Type_Resp+0x208>
1005e270:	1c89      	adds	r1, r1, #2
1005e272:	b2c9      	uxtb	r1, r1
1005e274:	9103      	str	r1, [sp, #12]
1005e276:	8879      	ldrh	r1, [r7, #2]
1005e278:	9a03      	ldr	r2, [sp, #12]
1005e27a:	1e89      	subs	r1, r1, #2
1005e27c:	4291      	cmp	r1, r2
1005e27e:	d201      	bcs.n	1005e284 <Read_By_Type_Resp+0x218>
1005e280:	b2c9      	uxtb	r1, r1
1005e282:	9103      	str	r1, [sp, #12]
1005e284:	8879      	ldrh	r1, [r7, #2]
1005e286:	1b8a      	subs	r2, r1, r6
1005e288:	9903      	ldr	r1, [sp, #12]
1005e28a:	428a      	cmp	r2, r1
1005e28c:	db3d      	blt.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e28e:	2800      	cmp	r0, #0
1005e290:	d13b      	bne.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e292:	9803      	ldr	r0, [sp, #12]
1005e294:	8be1      	ldrh	r1, [r4, #30]
1005e296:	1e80      	subs	r0, r0, #2
1005e298:	9002      	str	r0, [sp, #8]
1005e29a:	4281      	cmp	r1, r0
1005e29c:	d135      	bne.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e29e:	e000      	b.n	1005e2a2 <Read_By_Type_Resp+0x236>
1005e2a0:	e021      	b.n	1005e2e6 <Read_By_Type_Resp+0x27a>
1005e2a2:	1d30      	adds	r0, r6, #4
1005e2a4:	b281      	uxth	r1, r0
1005e2a6:	4623      	mov	r3, r4
1005e2a8:	331c      	adds	r3, #28
1005e2aa:	2202      	movs	r2, #2
1005e2ac:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e2ae:	f7f6 fc6d 	bl	10054b8c <PM_Write_Pckt_Data>
1005e2b2:	4639      	mov	r1, r7
1005e2b4:	4620      	mov	r0, r4
1005e2b6:	f7ec f817 	bl	1004a2e8 <Find_Attr_Index>
1005e2ba:	8c21      	ldrh	r1, [r4, #32]
1005e2bc:	69a2      	ldr	r2, [r4, #24]
1005e2be:	4341      	muls	r1, r0
1005e2c0:	9802      	ldr	r0, [sp, #8]
1005e2c2:	1853      	adds	r3, r2, r1
1005e2c4:	b282      	uxth	r2, r0
1005e2c6:	1db0      	adds	r0, r6, #6
1005e2c8:	b281      	uxth	r1, r0
1005e2ca:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e2cc:	f7f6 fc5e 	bl	10054b8c <PM_Write_Pckt_Data>
1005e2d0:	9803      	ldr	r0, [sp, #12]
1005e2d2:	e000      	b.n	1005e2d6 <Read_By_Type_Resp+0x26a>
1005e2d4:	e019      	b.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e2d6:	1830      	adds	r0, r6, r0
1005e2d8:	b286      	uxth	r6, r0
1005e2da:	8878      	ldrh	r0, [r7, #2]
1005e2dc:	1b81      	subs	r1, r0, r6
1005e2de:	9803      	ldr	r0, [sp, #12]
1005e2e0:	4281      	cmp	r1, r0
1005e2e2:	db12      	blt.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e2e4:	6824      	ldr	r4, [r4, #0]
1005e2e6:	9800      	ldr	r0, [sp, #0]
1005e2e8:	4284      	cmp	r4, r0
1005e2ea:	d18d      	bne.n	1005e208 <Read_By_Type_Resp+0x19c>
1005e2ec:	682d      	ldr	r5, [r5, #0]
1005e2ee:	9888      	ldr	r0, [sp, #544]	; 0x220
1005e2f0:	4285      	cmp	r5, r0
1005e2f2:	d00a      	beq.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e2f4:	a980      	add	r1, sp, #512	; 0x200
1005e2f6:	8d28      	ldrh	r0, [r5, #40]	; 0x28
1005e2f8:	8b09      	ldrh	r1, [r1, #24]
1005e2fa:	4288      	cmp	r0, r1
1005e2fc:	d805      	bhi.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e2fe:	8878      	ldrh	r0, [r7, #2]
1005e300:	9903      	ldr	r1, [sp, #12]
1005e302:	1b80      	subs	r0, r0, r6
1005e304:	4288      	cmp	r0, r1
1005e306:	db00      	blt.n	1005e30a <Read_By_Type_Resp+0x29e>
1005e308:	e738      	b.n	1005e17c <Read_By_Type_Resp+0x110>
1005e30a:	2e02      	cmp	r6, #2
1005e30c:	d90b      	bls.n	1005e326 <Read_By_Type_Resp+0x2ba>
1005e30e:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e310:	2109      	movs	r1, #9
1005e312:	6880      	ldr	r0, [r0, #8]
1005e314:	7301      	strb	r1, [r0, #12]
1005e316:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e318:	9903      	ldr	r1, [sp, #12]
1005e31a:	6880      	ldr	r0, [r0, #8]
1005e31c:	7341      	strb	r1, [r0, #13]
1005e31e:	9894      	ldr	r0, [sp, #592]	; 0x250
1005e320:	80c6      	strh	r6, [r0, #6]
1005e322:	2000      	movs	r0, #0
1005e324:	e701      	b.n	1005e12a <Read_By_Type_Resp+0xbe>
1005e326:	a880      	add	r0, sp, #512	; 0x200
1005e328:	8a82      	ldrh	r2, [r0, #20]
1005e32a:	2108      	movs	r1, #8
1005e32c:	200a      	movs	r0, #10
1005e32e:	9b94      	ldr	r3, [sp, #592]	; 0x250
1005e330:	e701      	b.n	1005e136 <Read_By_Type_Resp+0xca>
1005e332:	0000      	.short	0x0000
1005e334:	20000d64 	.word	0x20000d64
1005e338:	0000072c 	.word	0x0000072c
1005e33c:	1006006c 	.word	0x1006006c

1005e340 <Read_Multi_Resp>:
1005e340:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005e342:	b0ff      	sub	sp, #508	; 0x1fc
1005e344:	b085      	sub	sp, #20
1005e346:	4605      	mov	r5, r0
1005e348:	2400      	movs	r4, #0
1005e34a:	4669      	mov	r1, sp
1005e34c:	818c      	strh	r4, [r1, #12]
1005e34e:	485f      	ldr	r0, [pc, #380]	; (1005e4cc <Read_Multi_Resp+0x18c>)
1005e350:	495f      	ldr	r1, [pc, #380]	; (1005e4d0 <Read_Multi_Resp+0x190>)
1005e352:	6800      	ldr	r0, [r0, #0]
1005e354:	1846      	adds	r6, r0, r1
1005e356:	9885      	ldr	r0, [sp, #532]	; 0x214
1005e358:	88c0      	ldrh	r0, [r0, #6]
1005e35a:	1e41      	subs	r1, r0, #1
1005e35c:	2904      	cmp	r1, #4
1005e35e:	d302      	bcc.n	1005e366 <Read_Multi_Resp+0x26>
1005e360:	43c0      	mvns	r0, r0
1005e362:	07c0      	lsls	r0, r0, #31
1005e364:	d004      	beq.n	1005e370 <Read_Multi_Resp+0x30>
1005e366:	2200      	movs	r2, #0
1005e368:	210e      	movs	r1, #14
1005e36a:	2004      	movs	r0, #4
1005e36c:	9b86      	ldr	r3, [sp, #536]	; 0x218
1005e36e:	e044      	b.n	1005e3fa <Read_Multi_Resp+0xba>
1005e370:	6928      	ldr	r0, [r5, #16]
1005e372:	0300      	lsls	r0, r0, #12
1005e374:	d41b      	bmi.n	1005e3ae <Read_Multi_Resp+0x6e>
1005e376:	a803      	add	r0, sp, #12
1005e378:	9000      	str	r0, [sp, #0]
1005e37a:	ab04      	add	r3, sp, #16
1005e37c:	4630      	mov	r0, r6
1005e37e:	9a86      	ldr	r2, [sp, #536]	; 0x218
1005e380:	9985      	ldr	r1, [sp, #532]	; 0x214
1005e382:	f7f6 fc23 	bl	10054bcc <Accu_Handles_Requiring_Auth>
1005e386:	4668      	mov	r0, sp
1005e388:	8980      	ldrh	r0, [r0, #12]
1005e38a:	2800      	cmp	r0, #0
1005e38c:	d00f      	beq.n	1005e3ae <Read_Multi_Resp+0x6e>
1005e38e:	2201      	movs	r2, #1
1005e390:	6929      	ldr	r1, [r5, #16]
1005e392:	04d2      	lsls	r2, r2, #19
1005e394:	4311      	orrs	r1, r2
1005e396:	0640      	lsls	r0, r0, #25
1005e398:	0e02      	lsrs	r2, r0, #24
1005e39a:	6129      	str	r1, [r5, #16]
1005e39c:	8829      	ldrh	r1, [r5, #0]
1005e39e:	ab04      	add	r3, sp, #16
1005e3a0:	2002      	movs	r0, #2
1005e3a2:	f000 fa9d 	bl	1005e8e0 <aci_gatt_read_multi_permit_req_event_push>
1005e3a6:	2069      	movs	r0, #105	; 0x69
1005e3a8:	b07f      	add	sp, #508	; 0x1fc
1005e3aa:	b008      	add	sp, #32
1005e3ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e3ae:	886a      	ldrh	r2, [r5, #2]
1005e3b0:	2100      	movs	r1, #0
1005e3b2:	9886      	ldr	r0, [sp, #536]	; 0x218
1005e3b4:	f7ff fc04 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005e3b8:	2800      	cmp	r0, #0
1005e3ba:	d001      	beq.n	1005e3c0 <Read_Multi_Resp+0x80>
1005e3bc:	2045      	movs	r0, #69	; 0x45
1005e3be:	e7f3      	b.n	1005e3a8 <Read_Multi_Resp+0x68>
1005e3c0:	9885      	ldr	r0, [sp, #532]	; 0x214
1005e3c2:	88c0      	ldrh	r0, [r0, #6]
1005e3c4:	1e40      	subs	r0, r0, #1
1005e3c6:	b287      	uxth	r7, r0
1005e3c8:	2601      	movs	r6, #1
1005e3ca:	e077      	b.n	1005e4bc <Read_Multi_Resp+0x17c>
1005e3cc:	1d30      	adds	r0, r6, #4
1005e3ce:	b281      	uxth	r1, r0
1005e3d0:	ab01      	add	r3, sp, #4
1005e3d2:	2202      	movs	r2, #2
1005e3d4:	9885      	ldr	r0, [sp, #532]	; 0x214
1005e3d6:	f7f6 fae9 	bl	100549ac <PM_Copy_Pckt_Data>
1005e3da:	4668      	mov	r0, sp
1005e3dc:	8880      	ldrh	r0, [r0, #4]
1005e3de:	2800      	cmp	r0, #0
1005e3e0:	d032      	beq.n	1005e448 <Read_Multi_Resp+0x108>
1005e3e2:	f7ec fded 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005e3e6:	0001      	movs	r1, r0
1005e3e8:	d02e      	beq.n	1005e448 <Read_Multi_Resp+0x108>
1005e3ea:	4668      	mov	r0, sp
1005e3ec:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005e3ee:	8880      	ldrh	r0, [r0, #4]
1005e3f0:	4282      	cmp	r2, r0
1005e3f2:	d124      	bne.n	1005e43e <Read_Multi_Resp+0xfe>
1005e3f4:	2c00      	cmp	r4, #0
1005e3f6:	d003      	beq.n	1005e400 <Read_Multi_Resp+0xc0>
1005e3f8:	e007      	b.n	1005e40a <Read_Multi_Resp+0xca>
1005e3fa:	f7fe ffaf 	bl	1005d35c <ATT_fill_error_resp>
1005e3fe:	e063      	b.n	1005e4c8 <Read_Multi_Resp+0x188>
1005e400:	9886      	ldr	r0, [sp, #536]	; 0x218
1005e402:	220f      	movs	r2, #15
1005e404:	6880      	ldr	r0, [r0, #8]
1005e406:	2401      	movs	r4, #1
1005e408:	7302      	strb	r2, [r0, #12]
1005e40a:	8868      	ldrh	r0, [r5, #2]
1005e40c:	42a0      	cmp	r0, r4
1005e40e:	d053      	beq.n	1005e4b8 <Read_Multi_Resp+0x178>
1005e410:	222c      	movs	r2, #44	; 0x2c
1005e412:	5c52      	ldrb	r2, [r2, r1]
1005e414:	2a01      	cmp	r2, #1
1005e416:	d005      	beq.n	1005e424 <Read_Multi_Resp+0xe4>
1005e418:	1b00      	subs	r0, r0, r4
1005e41a:	b280      	uxth	r0, r0
1005e41c:	2810      	cmp	r0, #16
1005e41e:	d306      	bcc.n	1005e42e <Read_Multi_Resp+0xee>
1005e420:	2010      	movs	r0, #16
1005e422:	e004      	b.n	1005e42e <Read_Multi_Resp+0xee>
1005e424:	1b00      	subs	r0, r0, r4
1005e426:	b280      	uxth	r0, r0
1005e428:	2802      	cmp	r0, #2
1005e42a:	d300      	bcc.n	1005e42e <Read_Multi_Resp+0xee>
1005e42c:	2002      	movs	r0, #2
1005e42e:	9000      	str	r0, [sp, #0]
1005e430:	1d20      	adds	r0, r4, #4
1005e432:	460b      	mov	r3, r1
1005e434:	b280      	uxth	r0, r0
1005e436:	3308      	adds	r3, #8
1005e438:	4601      	mov	r1, r0
1005e43a:	9a00      	ldr	r2, [sp, #0]
1005e43c:	e036      	b.n	1005e4ac <Read_Multi_Resp+0x16c>
1005e43e:	aa02      	add	r2, sp, #8
1005e440:	f7ed fe12 	bl	1004c068 <Gatt_search_handle>
1005e444:	2800      	cmp	r0, #0
1005e446:	d005      	beq.n	1005e454 <Read_Multi_Resp+0x114>
1005e448:	4668      	mov	r0, sp
1005e44a:	8882      	ldrh	r2, [r0, #4]
1005e44c:	210e      	movs	r1, #14
1005e44e:	2001      	movs	r0, #1
1005e450:	9b86      	ldr	r3, [sp, #536]	; 0x218
1005e452:	e7d2      	b.n	1005e3fa <Read_Multi_Resp+0xba>
1005e454:	8828      	ldrh	r0, [r5, #0]
1005e456:	2201      	movs	r2, #1
1005e458:	0500      	lsls	r0, r0, #20
1005e45a:	0d00      	lsrs	r0, r0, #20
1005e45c:	9902      	ldr	r1, [sp, #8]
1005e45e:	f7fe fffb 	bl	1005d458 <Att_Check_Perms>
1005e462:	2800      	cmp	r0, #0
1005e464:	d004      	beq.n	1005e470 <Read_Multi_Resp+0x130>
1005e466:	4669      	mov	r1, sp
1005e468:	888a      	ldrh	r2, [r1, #4]
1005e46a:	210e      	movs	r1, #14
1005e46c:	9b86      	ldr	r3, [sp, #536]	; 0x218
1005e46e:	e7c4      	b.n	1005e3fa <Read_Multi_Resp+0xba>
1005e470:	2c00      	cmp	r4, #0
1005e472:	d104      	bne.n	1005e47e <Read_Multi_Resp+0x13e>
1005e474:	9886      	ldr	r0, [sp, #536]	; 0x218
1005e476:	210f      	movs	r1, #15
1005e478:	6880      	ldr	r0, [r0, #8]
1005e47a:	2401      	movs	r4, #1
1005e47c:	7301      	strb	r1, [r0, #12]
1005e47e:	8868      	ldrh	r0, [r5, #2]
1005e480:	42a0      	cmp	r0, r4
1005e482:	d019      	beq.n	1005e4b8 <Read_Multi_Resp+0x178>
1005e484:	9a02      	ldr	r2, [sp, #8]
1005e486:	1b00      	subs	r0, r0, r4
1005e488:	8bd1      	ldrh	r1, [r2, #30]
1005e48a:	b280      	uxth	r0, r0
1005e48c:	4288      	cmp	r0, r1
1005e48e:	d300      	bcc.n	1005e492 <Read_Multi_Resp+0x152>
1005e490:	4608      	mov	r0, r1
1005e492:	9000      	str	r0, [sp, #0]
1005e494:	4629      	mov	r1, r5
1005e496:	4610      	mov	r0, r2
1005e498:	f7eb ff26 	bl	1004a2e8 <Find_Attr_Index>
1005e49c:	9902      	ldr	r1, [sp, #8]
1005e49e:	698a      	ldr	r2, [r1, #24]
1005e4a0:	8c09      	ldrh	r1, [r1, #32]
1005e4a2:	4341      	muls	r1, r0
1005e4a4:	1853      	adds	r3, r2, r1
1005e4a6:	1d20      	adds	r0, r4, #4
1005e4a8:	9a00      	ldr	r2, [sp, #0]
1005e4aa:	b281      	uxth	r1, r0
1005e4ac:	9886      	ldr	r0, [sp, #536]	; 0x218
1005e4ae:	f7f6 fb6d 	bl	10054b8c <PM_Write_Pckt_Data>
1005e4b2:	9800      	ldr	r0, [sp, #0]
1005e4b4:	1820      	adds	r0, r4, r0
1005e4b6:	b284      	uxth	r4, r0
1005e4b8:	1cb6      	adds	r6, r6, #2
1005e4ba:	b2b6      	uxth	r6, r6
1005e4bc:	42be      	cmp	r6, r7
1005e4be:	d385      	bcc.n	1005e3cc <Read_Multi_Resp+0x8c>
1005e4c0:	2c00      	cmp	r4, #0
1005e4c2:	d001      	beq.n	1005e4c8 <Read_Multi_Resp+0x188>
1005e4c4:	9886      	ldr	r0, [sp, #536]	; 0x218
1005e4c6:	80c4      	strh	r4, [r0, #6]
1005e4c8:	2000      	movs	r0, #0
1005e4ca:	e76d      	b.n	1005e3a8 <Read_Multi_Resp+0x68>
1005e4cc:	20000d64 	.word	0x20000d64
1005e4d0:	0000072c 	.word	0x0000072c

1005e4d4 <Read_Resp>:
1005e4d4:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005e4d6:	4604      	mov	r4, r0
1005e4d8:	2000      	movs	r0, #0
1005e4da:	9002      	str	r0, [sp, #8]
1005e4dc:	88c8      	ldrh	r0, [r1, #6]
1005e4de:	4615      	mov	r5, r2
1005e4e0:	2803      	cmp	r0, #3
1005e4e2:	d004      	beq.n	1005e4ee <Read_Resp+0x1a>
1005e4e4:	4613      	mov	r3, r2
1005e4e6:	2200      	movs	r2, #0
1005e4e8:	210a      	movs	r1, #10
1005e4ea:	2004      	movs	r0, #4
1005e4ec:	e026      	b.n	1005e53c <Read_Resp+0x68>
1005e4ee:	6889      	ldr	r1, [r1, #8]
1005e4f0:	2202      	movs	r2, #2
1005e4f2:	4668      	mov	r0, sp
1005e4f4:	310d      	adds	r1, #13
1005e4f6:	f7e2 f944 	bl	10040782 <Osal_MemCpy>
1005e4fa:	4668      	mov	r0, sp
1005e4fc:	8800      	ldrh	r0, [r0, #0]
1005e4fe:	2800      	cmp	r0, #0
1005e500:	d019      	beq.n	1005e536 <Read_Resp+0x62>
1005e502:	f7ec fd5d 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005e506:	0001      	movs	r1, r0
1005e508:	d073      	beq.n	1005e5f2 <Read_Resp+0x11e>
1005e50a:	4668      	mov	r0, sp
1005e50c:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005e50e:	8800      	ldrh	r0, [r0, #0]
1005e510:	270b      	movs	r7, #11
1005e512:	2605      	movs	r6, #5
1005e514:	4282      	cmp	r2, r0
1005e516:	d11d      	bne.n	1005e554 <Read_Resp+0x80>
1005e518:	68a8      	ldr	r0, [r5, #8]
1005e51a:	7307      	strb	r7, [r0, #12]
1005e51c:	202c      	movs	r0, #44	; 0x2c
1005e51e:	5c40      	ldrb	r0, [r0, r1]
1005e520:	2801      	cmp	r0, #1
1005e522:	d00e      	beq.n	1005e542 <Read_Resp+0x6e>
1005e524:	460b      	mov	r3, r1
1005e526:	3308      	adds	r3, #8
1005e528:	2210      	movs	r2, #16
1005e52a:	4631      	mov	r1, r6
1005e52c:	4628      	mov	r0, r5
1005e52e:	f7f6 fb2d 	bl	10054b8c <PM_Write_Pckt_Data>
1005e532:	2011      	movs	r0, #17
1005e534:	e059      	b.n	1005e5ea <Read_Resp+0x116>
1005e536:	462b      	mov	r3, r5
1005e538:	4602      	mov	r2, r0
1005e53a:	e05d      	b.n	1005e5f8 <Read_Resp+0x124>
1005e53c:	f7fe ff0e 	bl	1005d35c <ATT_fill_error_resp>
1005e540:	e054      	b.n	1005e5ec <Read_Resp+0x118>
1005e542:	460b      	mov	r3, r1
1005e544:	3308      	adds	r3, #8
1005e546:	2202      	movs	r2, #2
1005e548:	4631      	mov	r1, r6
1005e54a:	4628      	mov	r0, r5
1005e54c:	f7f6 fb1e 	bl	10054b8c <PM_Write_Pckt_Data>
1005e550:	2003      	movs	r0, #3
1005e552:	e04a      	b.n	1005e5ea <Read_Resp+0x116>
1005e554:	aa01      	add	r2, sp, #4
1005e556:	f7ed fd87 	bl	1004c068 <Gatt_search_handle>
1005e55a:	2800      	cmp	r0, #0
1005e55c:	d149      	bne.n	1005e5f2 <Read_Resp+0x11e>
1005e55e:	8820      	ldrh	r0, [r4, #0]
1005e560:	2201      	movs	r2, #1
1005e562:	0500      	lsls	r0, r0, #20
1005e564:	0d00      	lsrs	r0, r0, #20
1005e566:	9901      	ldr	r1, [sp, #4]
1005e568:	f7fe ff76 	bl	1005d458 <Att_Check_Perms>
1005e56c:	2800      	cmp	r0, #0
1005e56e:	d004      	beq.n	1005e57a <Read_Resp+0xa6>
1005e570:	4669      	mov	r1, sp
1005e572:	880a      	ldrh	r2, [r1, #0]
1005e574:	462b      	mov	r3, r5
1005e576:	210a      	movs	r1, #10
1005e578:	e7e0      	b.n	1005e53c <Read_Resp+0x68>
1005e57a:	9901      	ldr	r1, [sp, #4]
1005e57c:	2026      	movs	r0, #38	; 0x26
1005e57e:	5c40      	ldrb	r0, [r0, r1]
1005e580:	0740      	lsls	r0, r0, #29
1005e582:	d50e      	bpl.n	1005e5a2 <Read_Resp+0xce>
1005e584:	6920      	ldr	r0, [r4, #16]
1005e586:	0302      	lsls	r2, r0, #12
1005e588:	d40b      	bmi.n	1005e5a2 <Read_Resp+0xce>
1005e58a:	2201      	movs	r2, #1
1005e58c:	04d2      	lsls	r2, r2, #19
1005e58e:	4310      	orrs	r0, r2
1005e590:	6120      	str	r0, [r4, #16]
1005e592:	8b8a      	ldrh	r2, [r1, #28]
1005e594:	8821      	ldrh	r1, [r4, #0]
1005e596:	2002      	movs	r0, #2
1005e598:	9b02      	ldr	r3, [sp, #8]
1005e59a:	f000 f9d5 	bl	1005e948 <aci_gatt_read_permit_req_event_push>
1005e59e:	2069      	movs	r0, #105	; 0x69
1005e5a0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005e5a2:	8862      	ldrh	r2, [r4, #2]
1005e5a4:	2100      	movs	r1, #0
1005e5a6:	4628      	mov	r0, r5
1005e5a8:	f7ff fb0a 	bl	1005dbc0 <Pm_Resize_Host_Acl_Pckt>
1005e5ac:	2800      	cmp	r0, #0
1005e5ae:	d001      	beq.n	1005e5b4 <Read_Resp+0xe0>
1005e5b0:	2045      	movs	r0, #69	; 0x45
1005e5b2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005e5b4:	68a8      	ldr	r0, [r5, #8]
1005e5b6:	4621      	mov	r1, r4
1005e5b8:	7307      	strb	r7, [r0, #12]
1005e5ba:	9801      	ldr	r0, [sp, #4]
1005e5bc:	f7eb fe94 	bl	1004a2e8 <Find_Attr_Index>
1005e5c0:	8861      	ldrh	r1, [r4, #2]
1005e5c2:	1e49      	subs	r1, r1, #1
1005e5c4:	b28a      	uxth	r2, r1
1005e5c6:	9901      	ldr	r1, [sp, #4]
1005e5c8:	8bcc      	ldrh	r4, [r1, #30]
1005e5ca:	42a2      	cmp	r2, r4
1005e5cc:	d200      	bcs.n	1005e5d0 <Read_Resp+0xfc>
1005e5ce:	4614      	mov	r4, r2
1005e5d0:	698a      	ldr	r2, [r1, #24]
1005e5d2:	8c09      	ldrh	r1, [r1, #32]
1005e5d4:	4341      	muls	r1, r0
1005e5d6:	1853      	adds	r3, r2, r1
1005e5d8:	4631      	mov	r1, r6
1005e5da:	4622      	mov	r2, r4
1005e5dc:	4628      	mov	r0, r5
1005e5de:	f7f6 fad5 	bl	10054b8c <PM_Write_Pckt_Data>
1005e5e2:	1c64      	adds	r4, r4, #1
1005e5e4:	0420      	lsls	r0, r4, #16
1005e5e6:	0c00      	lsrs	r0, r0, #16
1005e5e8:	d003      	beq.n	1005e5f2 <Read_Resp+0x11e>
1005e5ea:	80e8      	strh	r0, [r5, #6]
1005e5ec:	2000      	movs	r0, #0
1005e5ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005e5f0:	e7ff      	b.n	1005e5f2 <Read_Resp+0x11e>
1005e5f2:	4668      	mov	r0, sp
1005e5f4:	8802      	ldrh	r2, [r0, #0]
1005e5f6:	462b      	mov	r3, r5
1005e5f8:	210a      	movs	r1, #10
1005e5fa:	2001      	movs	r0, #1
1005e5fc:	e79e      	b.n	1005e53c <Read_Resp+0x68>

1005e5fe <Write_Cmd>:
1005e5fe:	b5f0      	push	{r4, r5, r6, r7, lr}
1005e600:	4604      	mov	r4, r0
1005e602:	6888      	ldr	r0, [r1, #8]
1005e604:	460f      	mov	r7, r1
1005e606:	4601      	mov	r1, r0
1005e608:	7b00      	ldrb	r0, [r0, #12]
1005e60a:	3108      	adds	r1, #8
1005e60c:	b085      	sub	sp, #20
1005e60e:	2852      	cmp	r0, #82	; 0x52
1005e610:	d010      	beq.n	1005e634 <Write_Cmd+0x36>
1005e612:	250f      	movs	r5, #15
1005e614:	2608      	movs	r6, #8
1005e616:	88f8      	ldrh	r0, [r7, #6]
1005e618:	42a8      	cmp	r0, r5
1005e61a:	d35c      	bcc.n	1005e6d6 <Write_Cmd+0xd8>
1005e61c:	2202      	movs	r2, #2
1005e61e:	a803      	add	r0, sp, #12
1005e620:	1d49      	adds	r1, r1, #5
1005e622:	f7e2 f8ae 	bl	10040782 <Osal_MemCpy>
1005e626:	4668      	mov	r0, sp
1005e628:	8980      	ldrh	r0, [r0, #12]
1005e62a:	2800      	cmp	r0, #0
1005e62c:	d053      	beq.n	1005e6d6 <Write_Cmd+0xd8>
1005e62e:	2e08      	cmp	r6, #8
1005e630:	d003      	beq.n	1005e63a <Write_Cmd+0x3c>
1005e632:	e00d      	b.n	1005e650 <Write_Cmd+0x52>
1005e634:	2503      	movs	r5, #3
1005e636:	2604      	movs	r6, #4
1005e638:	e7ed      	b.n	1005e616 <Write_Cmd+0x18>
1005e63a:	6920      	ldr	r0, [r4, #16]
1005e63c:	0140      	lsls	r0, r0, #5
1005e63e:	d407      	bmi.n	1005e650 <Write_Cmd+0x52>
1005e640:	8820      	ldrh	r0, [r4, #0]
1005e642:	4639      	mov	r1, r7
1005e644:	0500      	lsls	r0, r0, #20
1005e646:	0d00      	lsrs	r0, r0, #20
1005e648:	f7fc fb82 	bl	1005ad50 <SMP_validate_signed_packet>
1005e64c:	2800      	cmp	r0, #0
1005e64e:	d142      	bne.n	1005e6d6 <Write_Cmd+0xd8>
1005e650:	2101      	movs	r1, #1
1005e652:	6920      	ldr	r0, [r4, #16]
1005e654:	0689      	lsls	r1, r1, #26
1005e656:	4388      	bics	r0, r1
1005e658:	6120      	str	r0, [r4, #16]
1005e65a:	4668      	mov	r0, sp
1005e65c:	8980      	ldrh	r0, [r0, #12]
1005e65e:	f7ec fcaf 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005e662:	0001      	movs	r1, r0
1005e664:	d037      	beq.n	1005e6d6 <Write_Cmd+0xd8>
1005e666:	4668      	mov	r0, sp
1005e668:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005e66a:	8980      	ldrh	r0, [r0, #12]
1005e66c:	4282      	cmp	r2, r0
1005e66e:	d032      	beq.n	1005e6d6 <Write_Cmd+0xd8>
1005e670:	aa02      	add	r2, sp, #8
1005e672:	f7ed fcf9 	bl	1004c068 <Gatt_search_handle>
1005e676:	2800      	cmp	r0, #0
1005e678:	d12d      	bne.n	1005e6d6 <Write_Cmd+0xd8>
1005e67a:	8820      	ldrh	r0, [r4, #0]
1005e67c:	4632      	mov	r2, r6
1005e67e:	0500      	lsls	r0, r0, #20
1005e680:	0d00      	lsrs	r0, r0, #20
1005e682:	9902      	ldr	r1, [sp, #8]
1005e684:	f7fe ff10 	bl	1005d4a8 <CheckSecForSignedWrite>
1005e688:	2800      	cmp	r0, #0
1005e68a:	d124      	bne.n	1005e6d6 <Write_Cmd+0xd8>
1005e68c:	88f8      	ldrh	r0, [r7, #6]
1005e68e:	1b40      	subs	r0, r0, r5
1005e690:	b285      	uxth	r5, r0
1005e692:	9802      	ldr	r0, [sp, #8]
1005e694:	4601      	mov	r1, r0
1005e696:	3120      	adds	r1, #32
1005e698:	460a      	mov	r2, r1
1005e69a:	7889      	ldrb	r1, [r1, #2]
1005e69c:	2900      	cmp	r1, #0
1005e69e:	d002      	beq.n	1005e6a6 <Write_Cmd+0xa8>
1005e6a0:	2901      	cmp	r1, #1
1005e6a2:	d002      	beq.n	1005e6aa <Write_Cmd+0xac>
1005e6a4:	e004      	b.n	1005e6b0 <Write_Cmd+0xb2>
1005e6a6:	8bc1      	ldrh	r1, [r0, #30]
1005e6a8:	e000      	b.n	1005e6ac <Write_Cmd+0xae>
1005e6aa:	8c01      	ldrh	r1, [r0, #32]
1005e6ac:	42a9      	cmp	r1, r5
1005e6ae:	d312      	bcc.n	1005e6d6 <Write_Cmd+0xd8>
1005e6b0:	7991      	ldrb	r1, [r2, #6]
1005e6b2:	0789      	lsls	r1, r1, #30
1005e6b4:	d511      	bpl.n	1005e6da <Write_Cmd+0xdc>
1005e6b6:	6921      	ldr	r1, [r4, #16]
1005e6b8:	034a      	lsls	r2, r1, #13
1005e6ba:	d40e      	bmi.n	1005e6da <Write_Cmd+0xdc>
1005e6bc:	2201      	movs	r2, #1
1005e6be:	0492      	lsls	r2, r2, #18
1005e6c0:	4311      	orrs	r1, r2
1005e6c2:	6121      	str	r1, [r4, #16]
1005e6c4:	b2e9      	uxtb	r1, r5
1005e6c6:	9701      	str	r7, [sp, #4]
1005e6c8:	9100      	str	r1, [sp, #0]
1005e6ca:	8b82      	ldrh	r2, [r0, #28]
1005e6cc:	8821      	ldrh	r1, [r4, #0]
1005e6ce:	2303      	movs	r3, #3
1005e6d0:	2002      	movs	r0, #2
1005e6d2:	f000 f961 	bl	1005e998 <aci_gatt_write_permit_req_event_push>
1005e6d6:	b005      	add	sp, #20
1005e6d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e6da:	4621      	mov	r1, r4
1005e6dc:	f7eb fe04 	bl	1004a2e8 <Find_Attr_Index>
1005e6e0:	4606      	mov	r6, r0
1005e6e2:	9802      	ldr	r0, [sp, #8]
1005e6e4:	462a      	mov	r2, r5
1005e6e6:	6981      	ldr	r1, [r0, #24]
1005e6e8:	8c00      	ldrh	r0, [r0, #32]
1005e6ea:	4370      	muls	r0, r6
1005e6ec:	180b      	adds	r3, r1, r0
1005e6ee:	2107      	movs	r1, #7
1005e6f0:	4638      	mov	r0, r7
1005e6f2:	f7f6 f95b 	bl	100549ac <PM_Copy_Pckt_Data>
1005e6f6:	9802      	ldr	r0, [sp, #8]
1005e6f8:	4601      	mov	r1, r0
1005e6fa:	3120      	adds	r1, #32
1005e6fc:	788a      	ldrb	r2, [r1, #2]
1005e6fe:	2a01      	cmp	r2, #1
1005e700:	d100      	bne.n	1005e704 <Write_Cmd+0x106>
1005e702:	83c5      	strh	r5, [r0, #30]
1005e704:	7989      	ldrb	r1, [r1, #6]
1005e706:	07c9      	lsls	r1, r1, #31
1005e708:	d0e5      	beq.n	1005e6d6 <Write_Cmd+0xd8>
1005e70a:	8c01      	ldrh	r1, [r0, #32]
1005e70c:	6982      	ldr	r2, [r0, #24]
1005e70e:	4371      	muls	r1, r6
1005e710:	1851      	adds	r1, r2, r1
1005e712:	2200      	movs	r2, #0
1005e714:	9200      	str	r2, [sp, #0]
1005e716:	9101      	str	r1, [sp, #4]
1005e718:	8bc3      	ldrh	r3, [r0, #30]
1005e71a:	8b82      	ldrh	r2, [r0, #28]
1005e71c:	8820      	ldrh	r0, [r4, #0]
1005e71e:	0501      	lsls	r1, r0, #20
1005e720:	0d09      	lsrs	r1, r1, #20
1005e722:	2002      	movs	r0, #2
1005e724:	f000 f8a0 	bl	1005e868 <aci_gatt_attribute_modified_event_push>
1005e728:	e7d5      	b.n	1005e6d6 <Write_Cmd+0xd8>

1005e72a <Write_Resp>:
1005e72a:	b5f0      	push	{r4, r5, r6, r7, lr}
1005e72c:	4604      	mov	r4, r0
1005e72e:	88c8      	ldrh	r0, [r1, #6]
1005e730:	b087      	sub	sp, #28
1005e732:	460f      	mov	r7, r1
1005e734:	4616      	mov	r6, r2
1005e736:	2803      	cmp	r0, #3
1005e738:	d204      	bcs.n	1005e744 <Write_Resp+0x1a>
1005e73a:	4613      	mov	r3, r2
1005e73c:	2200      	movs	r2, #0
1005e73e:	2112      	movs	r1, #18
1005e740:	2004      	movs	r0, #4
1005e742:	e016      	b.n	1005e772 <Write_Resp+0x48>
1005e744:	68b9      	ldr	r1, [r7, #8]
1005e746:	2202      	movs	r2, #2
1005e748:	a805      	add	r0, sp, #20
1005e74a:	310d      	adds	r1, #13
1005e74c:	f7e2 f819 	bl	10040782 <Osal_MemCpy>
1005e750:	4668      	mov	r0, sp
1005e752:	8a80      	ldrh	r0, [r0, #20]
1005e754:	2800      	cmp	r0, #0
1005e756:	d014      	beq.n	1005e782 <Write_Resp+0x58>
1005e758:	f7ec fc32 	bl	1004afc0 <Gatt_Find_Srv_Owner_Of_Handle>
1005e75c:	0001      	movs	r1, r0
1005e75e:	d010      	beq.n	1005e782 <Write_Resp+0x58>
1005e760:	4668      	mov	r0, sp
1005e762:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005e764:	8a80      	ldrh	r0, [r0, #20]
1005e766:	4282      	cmp	r2, r0
1005e768:	d106      	bne.n	1005e778 <Write_Resp+0x4e>
1005e76a:	4602      	mov	r2, r0
1005e76c:	4633      	mov	r3, r6
1005e76e:	2112      	movs	r1, #18
1005e770:	2003      	movs	r0, #3
1005e772:	f7fe fdf3 	bl	1005d35c <ATT_fill_error_resp>
1005e776:	e074      	b.n	1005e862 <Write_Resp+0x138>
1005e778:	aa02      	add	r2, sp, #8
1005e77a:	f7ed fc75 	bl	1004c068 <Gatt_search_handle>
1005e77e:	2800      	cmp	r0, #0
1005e780:	d005      	beq.n	1005e78e <Write_Resp+0x64>
1005e782:	4668      	mov	r0, sp
1005e784:	8a82      	ldrh	r2, [r0, #20]
1005e786:	2112      	movs	r1, #18
1005e788:	4633      	mov	r3, r6
1005e78a:	2001      	movs	r0, #1
1005e78c:	e7f1      	b.n	1005e772 <Write_Resp+0x48>
1005e78e:	8820      	ldrh	r0, [r4, #0]
1005e790:	2202      	movs	r2, #2
1005e792:	0500      	lsls	r0, r0, #20
1005e794:	0d00      	lsrs	r0, r0, #20
1005e796:	9902      	ldr	r1, [sp, #8]
1005e798:	f7fe fe5e 	bl	1005d458 <Att_Check_Perms>
1005e79c:	2800      	cmp	r0, #0
1005e79e:	d004      	beq.n	1005e7aa <Write_Resp+0x80>
1005e7a0:	4669      	mov	r1, sp
1005e7a2:	8a8a      	ldrh	r2, [r1, #20]
1005e7a4:	4633      	mov	r3, r6
1005e7a6:	2112      	movs	r1, #18
1005e7a8:	e7e3      	b.n	1005e772 <Write_Resp+0x48>
1005e7aa:	88f8      	ldrh	r0, [r7, #6]
1005e7ac:	1ec0      	subs	r0, r0, #3
1005e7ae:	b285      	uxth	r5, r0
1005e7b0:	9802      	ldr	r0, [sp, #8]
1005e7b2:	4601      	mov	r1, r0
1005e7b4:	3120      	adds	r1, #32
1005e7b6:	788a      	ldrb	r2, [r1, #2]
1005e7b8:	2a00      	cmp	r2, #0
1005e7ba:	d002      	beq.n	1005e7c2 <Write_Resp+0x98>
1005e7bc:	2a01      	cmp	r2, #1
1005e7be:	d002      	beq.n	1005e7c6 <Write_Resp+0x9c>
1005e7c0:	e00a      	b.n	1005e7d8 <Write_Resp+0xae>
1005e7c2:	8bc2      	ldrh	r2, [r0, #30]
1005e7c4:	e000      	b.n	1005e7c8 <Write_Resp+0x9e>
1005e7c6:	8c02      	ldrh	r2, [r0, #32]
1005e7c8:	42aa      	cmp	r2, r5
1005e7ca:	d205      	bcs.n	1005e7d8 <Write_Resp+0xae>
1005e7cc:	4668      	mov	r0, sp
1005e7ce:	8a82      	ldrh	r2, [r0, #20]
1005e7d0:	2112      	movs	r1, #18
1005e7d2:	4633      	mov	r3, r6
1005e7d4:	200d      	movs	r0, #13
1005e7d6:	e7cc      	b.n	1005e772 <Write_Resp+0x48>
1005e7d8:	7989      	ldrb	r1, [r1, #6]
1005e7da:	0789      	lsls	r1, r1, #30
1005e7dc:	d514      	bpl.n	1005e808 <Write_Resp+0xde>
1005e7de:	6921      	ldr	r1, [r4, #16]
1005e7e0:	038a      	lsls	r2, r1, #14
1005e7e2:	d411      	bmi.n	1005e808 <Write_Resp+0xde>
1005e7e4:	01ca      	lsls	r2, r1, #7
1005e7e6:	d40f      	bmi.n	1005e808 <Write_Resp+0xde>
1005e7e8:	2201      	movs	r2, #1
1005e7ea:	0452      	lsls	r2, r2, #17
1005e7ec:	4311      	orrs	r1, r2
1005e7ee:	6121      	str	r1, [r4, #16]
1005e7f0:	b2e9      	uxtb	r1, r5
1005e7f2:	9701      	str	r7, [sp, #4]
1005e7f4:	9100      	str	r1, [sp, #0]
1005e7f6:	8b82      	ldrh	r2, [r0, #28]
1005e7f8:	8821      	ldrh	r1, [r4, #0]
1005e7fa:	2303      	movs	r3, #3
1005e7fc:	2002      	movs	r0, #2
1005e7fe:	f000 f8cb 	bl	1005e998 <aci_gatt_write_permit_req_event_push>
1005e802:	2069      	movs	r0, #105	; 0x69
1005e804:	b007      	add	sp, #28
1005e806:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e808:	4621      	mov	r1, r4
1005e80a:	f7eb fd6d 	bl	1004a2e8 <Find_Attr_Index>
1005e80e:	9001      	str	r0, [sp, #4]
1005e810:	9802      	ldr	r0, [sp, #8]
1005e812:	8c02      	ldrh	r2, [r0, #32]
1005e814:	6981      	ldr	r1, [r0, #24]
1005e816:	9801      	ldr	r0, [sp, #4]
1005e818:	4342      	muls	r2, r0
1005e81a:	188b      	adds	r3, r1, r2
1005e81c:	462a      	mov	r2, r5
1005e81e:	2107      	movs	r1, #7
1005e820:	4638      	mov	r0, r7
1005e822:	f7f6 f8c3 	bl	100549ac <PM_Copy_Pckt_Data>
1005e826:	9802      	ldr	r0, [sp, #8]
1005e828:	4601      	mov	r1, r0
1005e82a:	3120      	adds	r1, #32
1005e82c:	460a      	mov	r2, r1
1005e82e:	7889      	ldrb	r1, [r1, #2]
1005e830:	2901      	cmp	r1, #1
1005e832:	d100      	bne.n	1005e836 <Write_Resp+0x10c>
1005e834:	83c5      	strh	r5, [r0, #30]
1005e836:	68b1      	ldr	r1, [r6, #8]
1005e838:	2313      	movs	r3, #19
1005e83a:	730b      	strb	r3, [r1, #12]
1005e83c:	7991      	ldrb	r1, [r2, #6]
1005e83e:	2501      	movs	r5, #1
1005e840:	07c9      	lsls	r1, r1, #31
1005e842:	d00d      	beq.n	1005e860 <Write_Resp+0x136>
1005e844:	8c01      	ldrh	r1, [r0, #32]
1005e846:	9a01      	ldr	r2, [sp, #4]
1005e848:	6983      	ldr	r3, [r0, #24]
1005e84a:	4351      	muls	r1, r2
1005e84c:	1859      	adds	r1, r3, r1
1005e84e:	2200      	movs	r2, #0
1005e850:	9200      	str	r2, [sp, #0]
1005e852:	9101      	str	r1, [sp, #4]
1005e854:	8bc3      	ldrh	r3, [r0, #30]
1005e856:	8b82      	ldrh	r2, [r0, #28]
1005e858:	8821      	ldrh	r1, [r4, #0]
1005e85a:	2002      	movs	r0, #2
1005e85c:	f000 f804 	bl	1005e868 <aci_gatt_attribute_modified_event_push>
1005e860:	80f5      	strh	r5, [r6, #6]
1005e862:	2000      	movs	r0, #0
1005e864:	e7ce      	b.n	1005e804 <Write_Resp+0xda>
	...

1005e868 <aci_gatt_attribute_modified_event_push>:
1005e868:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005e86a:	460f      	mov	r7, r1
1005e86c:	4606      	mov	r6, r0
1005e86e:	1dd8      	adds	r0, r3, #7
1005e870:	2103      	movs	r1, #3
1005e872:	4308      	orrs	r0, r1
1005e874:	461d      	mov	r5, r3
1005e876:	1c40      	adds	r0, r0, #1
1005e878:	0883      	lsrs	r3, r0, #2
1005e87a:	4818      	ldr	r0, [pc, #96]	; (1005e8dc <aci_gatt_attribute_modified_event_push+0x74>)
1005e87c:	b081      	sub	sp, #4
1005e87e:	6800      	ldr	r0, [r0, #0]
1005e880:	06f1      	lsls	r1, r6, #27
1005e882:	d503      	bpl.n	1005e88c <aci_gatt_attribute_modified_event_push+0x24>
1005e884:	2225      	movs	r2, #37	; 0x25
1005e886:	21bf      	movs	r1, #191	; 0xbf
1005e888:	400e      	ands	r6, r1
1005e88a:	e006      	b.n	1005e89a <aci_gatt_attribute_modified_event_push+0x32>
1005e88c:	2137      	movs	r1, #55	; 0x37
1005e88e:	0149      	lsls	r1, r1, #5
1005e890:	1841      	adds	r1, r0, r1
1005e892:	7b09      	ldrb	r1, [r1, #12]
1005e894:	07c9      	lsls	r1, r1, #31
1005e896:	d01c      	beq.n	1005e8d2 <aci_gatt_attribute_modified_event_push+0x6a>
1005e898:	2222      	movs	r2, #34	; 0x22
1005e89a:	0731      	lsls	r1, r6, #28
1005e89c:	0e89      	lsrs	r1, r1, #26
1005e89e:	1808      	adds	r0, r1, r0
1005e8a0:	2101      	movs	r1, #1
1005e8a2:	02c9      	lsls	r1, r1, #11
1005e8a4:	1840      	adds	r0, r0, r1
1005e8a6:	6940      	ldr	r0, [r0, #20]
1005e8a8:	4631      	mov	r1, r6
1005e8aa:	f7fd fb1f 	bl	1005beec <aci_event_fifo_push_header>
1005e8ae:	0004      	movs	r4, r0
1005e8b0:	d012      	beq.n	1005e8d8 <aci_gatt_attribute_modified_event_push+0x70>
1005e8b2:	80a7      	strh	r7, [r4, #4]
1005e8b4:	9903      	ldr	r1, [sp, #12]
1005e8b6:	80e1      	strh	r1, [r4, #6]
1005e8b8:	990a      	ldr	r1, [sp, #40]	; 0x28
1005e8ba:	8121      	strh	r1, [r4, #8]
1005e8bc:	4620      	mov	r0, r4
1005e8be:	8165      	strh	r5, [r4, #10]
1005e8c0:	300c      	adds	r0, #12
1005e8c2:	462a      	mov	r2, r5
1005e8c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
1005e8c6:	f7e1 ff5c 	bl	10040782 <Osal_MemCpy>
1005e8ca:	4621      	mov	r1, r4
1005e8cc:	4630      	mov	r0, r6
1005e8ce:	f7fd faf9 	bl	1005bec4 <aci_event_fifo_push>
1005e8d2:	2000      	movs	r0, #0
1005e8d4:	b005      	add	sp, #20
1005e8d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e8d8:	2007      	movs	r0, #7
1005e8da:	e7fb      	b.n	1005e8d4 <aci_gatt_attribute_modified_event_push+0x6c>
1005e8dc:	20000d64 	.word	0x20000d64

1005e8e0 <aci_gatt_read_multi_permit_req_event_push>:
1005e8e0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005e8e2:	460f      	mov	r7, r1
1005e8e4:	4605      	mov	r5, r0
1005e8e6:	1cd0      	adds	r0, r2, #3
1005e8e8:	2103      	movs	r1, #3
1005e8ea:	4308      	orrs	r0, r1
1005e8ec:	1c40      	adds	r0, r0, #1
1005e8ee:	0883      	lsrs	r3, r0, #2
1005e8f0:	b081      	sub	sp, #4
1005e8f2:	4616      	mov	r6, r2
1005e8f4:	06e8      	lsls	r0, r5, #27
1005e8f6:	d503      	bpl.n	1005e900 <aci_gatt_read_multi_permit_req_event_push+0x20>
1005e8f8:	223a      	movs	r2, #58	; 0x3a
1005e8fa:	20bf      	movs	r0, #191	; 0xbf
1005e8fc:	4005      	ands	r5, r0
1005e8fe:	e000      	b.n	1005e902 <aci_gatt_read_multi_permit_req_event_push+0x22>
1005e900:	2237      	movs	r2, #55	; 0x37
1005e902:	4910      	ldr	r1, [pc, #64]	; (1005e944 <aci_gatt_read_multi_permit_req_event_push+0x64>)
1005e904:	0728      	lsls	r0, r5, #28
1005e906:	6809      	ldr	r1, [r1, #0]
1005e908:	0e80      	lsrs	r0, r0, #26
1005e90a:	1840      	adds	r0, r0, r1
1005e90c:	2101      	movs	r1, #1
1005e90e:	02c9      	lsls	r1, r1, #11
1005e910:	1840      	adds	r0, r0, r1
1005e912:	6940      	ldr	r0, [r0, #20]
1005e914:	4629      	mov	r1, r5
1005e916:	f7fd fae9 	bl	1005beec <aci_event_fifo_push_header>
1005e91a:	0004      	movs	r4, r0
1005e91c:	d00f      	beq.n	1005e93e <aci_gatt_read_multi_permit_req_event_push+0x5e>
1005e91e:	80a7      	strh	r7, [r4, #4]
1005e920:	0871      	lsrs	r1, r6, #1
1005e922:	71a1      	strb	r1, [r4, #6]
1005e924:	4620      	mov	r0, r4
1005e926:	4632      	mov	r2, r6
1005e928:	3008      	adds	r0, #8
1005e92a:	9904      	ldr	r1, [sp, #16]
1005e92c:	f7e1 ff29 	bl	10040782 <Osal_MemCpy>
1005e930:	4621      	mov	r1, r4
1005e932:	4628      	mov	r0, r5
1005e934:	f7fd fac6 	bl	1005bec4 <aci_event_fifo_push>
1005e938:	2000      	movs	r0, #0
1005e93a:	b005      	add	sp, #20
1005e93c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e93e:	2007      	movs	r0, #7
1005e940:	e7fb      	b.n	1005e93a <aci_gatt_read_multi_permit_req_event_push+0x5a>
1005e942:	0000      	.short	0x0000
1005e944:	20000d64 	.word	0x20000d64

1005e948 <aci_gatt_read_permit_req_event_push>:
1005e948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005e94a:	461d      	mov	r5, r3
1005e94c:	4604      	mov	r4, r0
1005e94e:	2302      	movs	r3, #2
1005e950:	4616      	mov	r6, r2
1005e952:	460f      	mov	r7, r1
1005e954:	06c0      	lsls	r0, r0, #27
1005e956:	d503      	bpl.n	1005e960 <aci_gatt_read_permit_req_event_push+0x18>
1005e958:	2239      	movs	r2, #57	; 0x39
1005e95a:	20bf      	movs	r0, #191	; 0xbf
1005e95c:	4004      	ands	r4, r0
1005e95e:	e000      	b.n	1005e962 <aci_gatt_read_permit_req_event_push+0x1a>
1005e960:	2236      	movs	r2, #54	; 0x36
1005e962:	490c      	ldr	r1, [pc, #48]	; (1005e994 <aci_gatt_read_permit_req_event_push+0x4c>)
1005e964:	0720      	lsls	r0, r4, #28
1005e966:	6809      	ldr	r1, [r1, #0]
1005e968:	0e80      	lsrs	r0, r0, #26
1005e96a:	1840      	adds	r0, r0, r1
1005e96c:	2101      	movs	r1, #1
1005e96e:	02c9      	lsls	r1, r1, #11
1005e970:	1840      	adds	r0, r0, r1
1005e972:	6940      	ldr	r0, [r0, #20]
1005e974:	4621      	mov	r1, r4
1005e976:	f7fd fab9 	bl	1005beec <aci_event_fifo_push_header>
1005e97a:	0001      	movs	r1, r0
1005e97c:	d007      	beq.n	1005e98e <aci_gatt_read_permit_req_event_push+0x46>
1005e97e:	808f      	strh	r7, [r1, #4]
1005e980:	80ce      	strh	r6, [r1, #6]
1005e982:	810d      	strh	r5, [r1, #8]
1005e984:	4620      	mov	r0, r4
1005e986:	f7fd fa9d 	bl	1005bec4 <aci_event_fifo_push>
1005e98a:	2000      	movs	r0, #0
1005e98c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005e98e:	2007      	movs	r0, #7
1005e990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005e992:	0000      	.short	0x0000
1005e994:	20000d64 	.word	0x20000d64

1005e998 <aci_gatt_write_permit_req_event_push>:
1005e998:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005e99a:	b081      	sub	sp, #4
1005e99c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1005e99e:	4605      	mov	r5, r0
1005e9a0:	2103      	movs	r1, #3
1005e9a2:	1d70      	adds	r0, r6, #5
1005e9a4:	4308      	orrs	r0, r1
1005e9a6:	1c40      	adds	r0, r0, #1
1005e9a8:	0883      	lsrs	r3, r0, #2
1005e9aa:	4617      	mov	r7, r2
1005e9ac:	06e8      	lsls	r0, r5, #27
1005e9ae:	d503      	bpl.n	1005e9b8 <aci_gatt_write_permit_req_event_push+0x20>
1005e9b0:	2237      	movs	r2, #55	; 0x37
1005e9b2:	20bf      	movs	r0, #191	; 0xbf
1005e9b4:	4005      	ands	r5, r0
1005e9b6:	e000      	b.n	1005e9ba <aci_gatt_write_permit_req_event_push+0x22>
1005e9b8:	2234      	movs	r2, #52	; 0x34
1005e9ba:	4911      	ldr	r1, [pc, #68]	; (1005ea00 <aci_gatt_write_permit_req_event_push+0x68>)
1005e9bc:	0728      	lsls	r0, r5, #28
1005e9be:	6809      	ldr	r1, [r1, #0]
1005e9c0:	0e80      	lsrs	r0, r0, #26
1005e9c2:	1840      	adds	r0, r0, r1
1005e9c4:	2101      	movs	r1, #1
1005e9c6:	02c9      	lsls	r1, r1, #11
1005e9c8:	1840      	adds	r0, r0, r1
1005e9ca:	6940      	ldr	r0, [r0, #20]
1005e9cc:	4629      	mov	r1, r5
1005e9ce:	f7fd fa8d 	bl	1005beec <aci_event_fifo_push_header>
1005e9d2:	0004      	movs	r4, r0
1005e9d4:	d012      	beq.n	1005e9fc <aci_gatt_write_permit_req_event_push+0x64>
1005e9d6:	9802      	ldr	r0, [sp, #8]
1005e9d8:	80a0      	strh	r0, [r4, #4]
1005e9da:	80e7      	strh	r7, [r4, #6]
1005e9dc:	7226      	strb	r6, [r4, #8]
1005e9de:	9904      	ldr	r1, [sp, #16]
1005e9e0:	4623      	mov	r3, r4
1005e9e2:	4632      	mov	r2, r6
1005e9e4:	1d09      	adds	r1, r1, #4
1005e9e6:	3309      	adds	r3, #9
1005e9e8:	980b      	ldr	r0, [sp, #44]	; 0x2c
1005e9ea:	f7f5 ffdf 	bl	100549ac <PM_Copy_Pckt_Data>
1005e9ee:	4621      	mov	r1, r4
1005e9f0:	4628      	mov	r0, r5
1005e9f2:	f7fd fa67 	bl	1005bec4 <aci_event_fifo_push>
1005e9f6:	2000      	movs	r0, #0
1005e9f8:	b005      	add	sp, #20
1005e9fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e9fc:	2007      	movs	r0, #7
1005e9fe:	e7fb      	b.n	1005e9f8 <aci_gatt_write_permit_req_event_push+0x60>
1005ea00:	20000d64 	.word	0x20000d64

1005ea04 <BlueNRG_Stack_Perform_Deep_Sleep_Check>:
1005ea04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005ea06:	4d29      	ldr	r5, [pc, #164]	; (1005eaac <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa8>)
1005ea08:	2000      	movs	r0, #0
1005ea0a:	6829      	ldr	r1, [r5, #0]
1005ea0c:	460a      	mov	r2, r1
1005ea0e:	3240      	adds	r2, #64	; 0x40
1005ea10:	7813      	ldrb	r3, [r2, #0]
1005ea12:	79d2      	ldrb	r2, [r2, #7]
1005ea14:	4393      	bics	r3, r2
1005ea16:	d147      	bne.n	1005eaa8 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
1005ea18:	6e4a      	ldr	r2, [r1, #100]	; 0x64
1005ea1a:	0e12      	lsrs	r2, r2, #24
1005ea1c:	d144      	bne.n	1005eaa8 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
1005ea1e:	223e      	movs	r2, #62	; 0x3e
1005ea20:	5c52      	ldrb	r2, [r2, r1]
1005ea22:	2a00      	cmp	r2, #0
1005ea24:	d140      	bne.n	1005eaa8 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
1005ea26:	1e43      	subs	r3, r0, #1
1005ea28:	4821      	ldr	r0, [pc, #132]	; (1005eab0 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xac>)
1005ea2a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
1005ea2c:	7a46      	ldrb	r6, [r0, #9]
1005ea2e:	461a      	mov	r2, r3
1005ea30:	2400      	movs	r4, #0
1005ea32:	00f6      	lsls	r6, r6, #3
1005ea34:	19ad      	adds	r5, r5, r6
1005ea36:	2609      	movs	r6, #9
1005ea38:	06f6      	lsls	r6, r6, #27
1005ea3a:	6937      	ldr	r7, [r6, #16]
1005ea3c:	8800      	ldrh	r0, [r0, #0]
1005ea3e:	197d      	adds	r5, r7, r5
1005ea40:	0707      	lsls	r7, r0, #28
1005ea42:	2001      	movs	r0, #1
1005ea44:	2f00      	cmp	r7, #0
1005ea46:	da06      	bge.n	1005ea56 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x52>
1005ea48:	02c3      	lsls	r3, r0, #11
1005ea4a:	18cb      	adds	r3, r1, r3
1005ea4c:	6f1c      	ldr	r4, [r3, #112]	; 0x70
1005ea4e:	1b63      	subs	r3, r4, r5
1005ea50:	021b      	lsls	r3, r3, #8
1005ea52:	121b      	asrs	r3, r3, #8
1005ea54:	d428      	bmi.n	1005eaa8 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
1005ea56:	2707      	movs	r7, #7
1005ea58:	023f      	lsls	r7, r7, #8
1005ea5a:	19c9      	adds	r1, r1, r7
1005ea5c:	6a49      	ldr	r1, [r1, #36]	; 0x24
1005ea5e:	01cf      	lsls	r7, r1, #7
1005ea60:	d503      	bpl.n	1005ea6a <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x66>
1005ea62:	1b4a      	subs	r2, r1, r5
1005ea64:	0212      	lsls	r2, r2, #8
1005ea66:	1212      	asrs	r2, r2, #8
1005ea68:	d41e      	bmi.n	1005eaa8 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
1005ea6a:	2501      	movs	r5, #1
1005ea6c:	072d      	lsls	r5, r5, #28
1005ea6e:	2b00      	cmp	r3, #0
1005ea70:	da06      	bge.n	1005ea80 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x7c>
1005ea72:	2a00      	cmp	r2, #0
1005ea74:	da0a      	bge.n	1005ea8c <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x88>
1005ea76:	6075      	str	r5, [r6, #4]
1005ea78:	480e      	ldr	r0, [pc, #56]	; (1005eab4 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xb0>)
1005ea7a:	6085      	str	r5, [r0, #8]
1005ea7c:	2003      	movs	r0, #3
1005ea7e:	e00a      	b.n	1005ea96 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x92>
1005ea80:	2011      	movs	r0, #17
1005ea82:	0600      	lsls	r0, r0, #24
1005ea84:	4304      	orrs	r4, r0
1005ea86:	6074      	str	r4, [r6, #4]
1005ea88:	2a00      	cmp	r2, #0
1005ea8a:	db03      	blt.n	1005ea94 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x90>
1005ea8c:	4329      	orrs	r1, r5
1005ea8e:	4608      	mov	r0, r1
1005ea90:	f7ee fe22 	bl	1004d6d8 <Set_Host_Timer_value>
1005ea94:	2002      	movs	r0, #2
1005ea96:	4905      	ldr	r1, [pc, #20]	; (1005eaac <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa8>)
1005ea98:	6809      	ldr	r1, [r1, #0]
1005ea9a:	3140      	adds	r1, #64	; 0x40
1005ea9c:	784a      	ldrb	r2, [r1, #1]
1005ea9e:	2a00      	cmp	r2, #0
1005eaa0:	d002      	beq.n	1005eaa8 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
1005eaa2:	2000      	movs	r0, #0
1005eaa4:	7048      	strb	r0, [r1, #1]
1005eaa6:	2003      	movs	r0, #3
1005eaa8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005eaaa:	0000      	.short	0x0000
1005eaac:	20000d64 	.word	0x20000d64
1005eab0:	200000c0 	.word	0x200000c0
1005eab4:	48000040 	.word	0x48000040

1005eab8 <LL_Sleep_Req>:
1005eab8:	b430      	push	{r4, r5}
1005eaba:	4813      	ldr	r0, [pc, #76]	; (1005eb08 <LL_Sleep_Req+0x50>)
1005eabc:	2209      	movs	r2, #9
1005eabe:	6803      	ldr	r3, [r0, #0]
1005eac0:	2001      	movs	r0, #1
1005eac2:	02c0      	lsls	r0, r0, #11
1005eac4:	1818      	adds	r0, r3, r0
1005eac6:	06d2      	lsls	r2, r2, #27
1005eac8:	6f00      	ldr	r0, [r0, #112]	; 0x70
1005eaca:	6911      	ldr	r1, [r2, #16]
1005eacc:	4c0f      	ldr	r4, [pc, #60]	; (1005eb0c <LL_Sleep_Req+0x54>)
1005eace:	1a41      	subs	r1, r0, r1
1005ead0:	0209      	lsls	r1, r1, #8
1005ead2:	8825      	ldrh	r5, [r4, #0]
1005ead4:	0a09      	lsrs	r1, r1, #8
1005ead6:	072d      	lsls	r5, r5, #28
1005ead8:	d402      	bmi.n	1005eae0 <LL_Sleep_Req+0x28>
1005eada:	bc30      	pop	{r4, r5}
1005eadc:	2001      	movs	r0, #1
1005eade:	4770      	bx	lr
1005eae0:	7a64      	ldrb	r4, [r4, #9]
1005eae2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
1005eae4:	00e4      	lsls	r4, r4, #3
1005eae6:	18e3      	adds	r3, r4, r3
1005eae8:	428b      	cmp	r3, r1
1005eaea:	d209      	bcs.n	1005eb00 <LL_Sleep_Req+0x48>
1005eaec:	2301      	movs	r3, #1
1005eaee:	05db      	lsls	r3, r3, #23
1005eaf0:	4299      	cmp	r1, r3
1005eaf2:	d205      	bcs.n	1005eb00 <LL_Sleep_Req+0x48>
1005eaf4:	0059      	lsls	r1, r3, #1
1005eaf6:	4308      	orrs	r0, r1
1005eaf8:	6050      	str	r0, [r2, #4]
1005eafa:	bc30      	pop	{r4, r5}
1005eafc:	2001      	movs	r0, #1
1005eafe:	4770      	bx	lr
1005eb00:	bc30      	pop	{r4, r5}
1005eb02:	2000      	movs	r0, #0
1005eb04:	4770      	bx	lr
1005eb06:	0000      	.short	0x0000
1005eb08:	20000d64 	.word	0x20000d64
1005eb0c:	200000c0 	.word	0x200000c0

1005eb10 <IDD_Initialize_Device_IDs>:
1005eb10:	b5f0      	push	{r4, r5, r6, r7, lr}
1005eb12:	4c45      	ldr	r4, [pc, #276]	; (1005ec28 <IDD_Initialize_Device_IDs+0x118>)
1005eb14:	2509      	movs	r5, #9
1005eb16:	6826      	ldr	r6, [r4, #0]
1005eb18:	022d      	lsls	r5, r5, #8
1005eb1a:	1970      	adds	r0, r6, r5
1005eb1c:	6e00      	ldr	r0, [r0, #96]	; 0x60
1005eb1e:	2700      	movs	r7, #0
1005eb20:	6b41      	ldr	r1, [r0, #52]	; 0x34
1005eb22:	4842      	ldr	r0, [pc, #264]	; (1005ec2c <IDD_Initialize_Device_IDs+0x11c>)
1005eb24:	36ae      	adds	r6, #174	; 0xae
1005eb26:	b08d      	sub	sp, #52	; 0x34
1005eb28:	4281      	cmp	r1, r0
1005eb2a:	d042      	beq.n	1005ebb2 <IDD_Initialize_Device_IDs+0xa2>
1005eb2c:	2106      	movs	r1, #6
1005eb2e:	4668      	mov	r0, sp
1005eb30:	f7ed fdf2 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
1005eb34:	4669      	mov	r1, sp
1005eb36:	7948      	ldrb	r0, [r1, #5]
1005eb38:	21c0      	movs	r1, #192	; 0xc0
1005eb3a:	4308      	orrs	r0, r1
1005eb3c:	4669      	mov	r1, sp
1005eb3e:	7148      	strb	r0, [r1, #5]
1005eb40:	6820      	ldr	r0, [r4, #0]
1005eb42:	2206      	movs	r2, #6
1005eb44:	1940      	adds	r0, r0, r5
1005eb46:	6e00      	ldr	r0, [r0, #96]	; 0x60
1005eb48:	3024      	adds	r0, #36	; 0x24
1005eb4a:	f7ed fdbb 	bl	1004c6c4 <HAL_Flash_Store_Data>
1005eb4e:	4607      	mov	r7, r0
1005eb50:	2110      	movs	r1, #16
1005eb52:	a805      	add	r0, sp, #20
1005eb54:	f7ed fde0 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
1005eb58:	6820      	ldr	r0, [r4, #0]
1005eb5a:	2210      	movs	r2, #16
1005eb5c:	1940      	adds	r0, r0, r5
1005eb5e:	6e00      	ldr	r0, [r0, #96]	; 0x60
1005eb60:	a905      	add	r1, sp, #20
1005eb62:	1d00      	adds	r0, r0, #4
1005eb64:	f7ed fdae 	bl	1004c6c4 <HAL_Flash_Store_Data>
1005eb68:	4307      	orrs	r7, r0
1005eb6a:	2110      	movs	r1, #16
1005eb6c:	a809      	add	r0, sp, #36	; 0x24
1005eb6e:	f7ed fdd3 	bl	1004c718 <HAL_Generate_Random_Bytes_To>
1005eb72:	6820      	ldr	r0, [r4, #0]
1005eb74:	2210      	movs	r2, #16
1005eb76:	1940      	adds	r0, r0, r5
1005eb78:	6e00      	ldr	r0, [r0, #96]	; 0x60
1005eb7a:	a909      	add	r1, sp, #36	; 0x24
1005eb7c:	3014      	adds	r0, #20
1005eb7e:	f7ed fda1 	bl	1004c6c4 <HAL_Flash_Store_Data>
1005eb82:	4601      	mov	r1, r0
1005eb84:	4339      	orrs	r1, r7
1005eb86:	d113      	bne.n	1005ebb0 <IDD_Initialize_Device_IDs+0xa0>
1005eb88:	6820      	ldr	r0, [r4, #0]
1005eb8a:	4929      	ldr	r1, [pc, #164]	; (1005ec30 <IDD_Initialize_Device_IDs+0x120>)
1005eb8c:	1940      	adds	r0, r0, r5
1005eb8e:	6e00      	ldr	r0, [r0, #96]	; 0x60
1005eb90:	4f26      	ldr	r7, [pc, #152]	; (1005ec2c <IDD_Initialize_Device_IDs+0x11c>)
1005eb92:	1840      	adds	r0, r0, r1
1005eb94:	0880      	lsrs	r0, r0, #2
1005eb96:	0081      	lsls	r1, r0, #2
1005eb98:	4826      	ldr	r0, [pc, #152]	; (1005ec34 <IDD_Initialize_Device_IDs+0x124>)
1005eb9a:	1808      	adds	r0, r1, r0
1005eb9c:	4639      	mov	r1, r7
1005eb9e:	9004      	str	r0, [sp, #16]
1005eba0:	f7e2 fb30 	bl	10041204 <FLASH_ProgramWord>
1005eba4:	9804      	ldr	r0, [sp, #16]
1005eba6:	6800      	ldr	r0, [r0, #0]
1005eba8:	42b8      	cmp	r0, r7
1005ebaa:	d101      	bne.n	1005ebb0 <IDD_Initialize_Device_IDs+0xa0>
1005ebac:	2700      	movs	r7, #0
1005ebae:	e000      	b.n	1005ebb2 <IDD_Initialize_Device_IDs+0xa2>
1005ebb0:	27fb      	movs	r7, #251	; 0xfb
1005ebb2:	6822      	ldr	r2, [r4, #0]
1005ebb4:	1950      	adds	r0, r2, r5
1005ebb6:	6e00      	ldr	r0, [r0, #96]	; 0x60
1005ebb8:	32a6      	adds	r2, #166	; 0xa6
1005ebba:	3024      	adds	r0, #36	; 0x24
1005ebbc:	9001      	str	r0, [sp, #4]
1005ebbe:	2006      	movs	r0, #6
1005ebc0:	4601      	mov	r1, r0
1005ebc2:	9000      	str	r0, [sp, #0]
1005ebc4:	2000      	movs	r0, #0
1005ebc6:	f7fd f8c0 	bl	1005bd4a <is_Buffer_All_Set_To>
1005ebca:	2800      	cmp	r0, #0
1005ebcc:	d102      	bne.n	1005ebd4 <IDD_Initialize_Device_IDs+0xc4>
1005ebce:	6820      	ldr	r0, [r4, #0]
1005ebd0:	30a6      	adds	r0, #166	; 0xa6
1005ebd2:	9001      	str	r0, [sp, #4]
1005ebd4:	1d70      	adds	r0, r6, #5
1005ebd6:	9a00      	ldr	r2, [sp, #0]
1005ebd8:	9901      	ldr	r1, [sp, #4]
1005ebda:	f7e1 fdd2 	bl	10040782 <Osal_MemCpy>
1005ebde:	6822      	ldr	r2, [r4, #0]
1005ebe0:	2610      	movs	r6, #16
1005ebe2:	4631      	mov	r1, r6
1005ebe4:	2000      	movs	r0, #0
1005ebe6:	3280      	adds	r2, #128	; 0x80
1005ebe8:	f7fd f8af 	bl	1005bd4a <is_Buffer_All_Set_To>
1005ebec:	2800      	cmp	r0, #0
1005ebee:	d007      	beq.n	1005ec00 <IDD_Initialize_Device_IDs+0xf0>
1005ebf0:	6820      	ldr	r0, [r4, #0]
1005ebf2:	4632      	mov	r2, r6
1005ebf4:	1941      	adds	r1, r0, r5
1005ebf6:	6e09      	ldr	r1, [r1, #96]	; 0x60
1005ebf8:	3080      	adds	r0, #128	; 0x80
1005ebfa:	1d09      	adds	r1, r1, #4
1005ebfc:	f7e1 fdc1 	bl	10040782 <Osal_MemCpy>
1005ec00:	6822      	ldr	r2, [r4, #0]
1005ec02:	4631      	mov	r1, r6
1005ec04:	2000      	movs	r0, #0
1005ec06:	3290      	adds	r2, #144	; 0x90
1005ec08:	f7fd f89f 	bl	1005bd4a <is_Buffer_All_Set_To>
1005ec0c:	2800      	cmp	r0, #0
1005ec0e:	d007      	beq.n	1005ec20 <IDD_Initialize_Device_IDs+0x110>
1005ec10:	6820      	ldr	r0, [r4, #0]
1005ec12:	4632      	mov	r2, r6
1005ec14:	1941      	adds	r1, r0, r5
1005ec16:	6e09      	ldr	r1, [r1, #96]	; 0x60
1005ec18:	3090      	adds	r0, #144	; 0x90
1005ec1a:	3114      	adds	r1, #20
1005ec1c:	f7e1 fdb1 	bl	10040782 <Osal_MemCpy>
1005ec20:	4638      	mov	r0, r7
1005ec22:	b00d      	add	sp, #52	; 0x34
1005ec24:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005ec26:	0000      	.short	0x0000
1005ec28:	20000d64 	.word	0x20000d64
1005ec2c:	aaaaaaaa 	.word	0xaaaaaaaa
1005ec30:	effc0034 	.word	0xeffc0034
1005ec34:	10040000 	.word	0x10040000

1005ec38 <isr_postproc>:
1005ec38:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005ec3a:	7950      	ldrb	r0, [r2, #5]
1005ec3c:	6915      	ldr	r5, [r2, #16]
1005ec3e:	0780      	lsls	r0, r0, #30
1005ec40:	6b56      	ldr	r6, [r2, #52]	; 0x34
1005ec42:	461f      	mov	r7, r3
1005ec44:	4614      	mov	r4, r2
1005ec46:	0f80      	lsrs	r0, r0, #30
1005ec48:	d10d      	bne.n	1005ec66 <isr_postproc+0x2e>
1005ec4a:	05a8      	lsls	r0, r5, #22
1005ec4c:	d50c      	bpl.n	1005ec68 <isr_postproc+0x30>
1005ec4e:	2001      	movs	r0, #1
1005ec50:	0240      	lsls	r0, r0, #9
1005ec52:	4385      	bics	r5, r0
1005ec54:	0100      	lsls	r0, r0, #4
1005ec56:	4305      	orrs	r5, r0
1005ec58:	486c      	ldr	r0, [pc, #432]	; (1005ee0c <isr_postproc+0x1d4>)
1005ec5a:	6030      	str	r0, [r6, #0]
1005ec5c:	7960      	ldrb	r0, [r4, #5]
1005ec5e:	2101      	movs	r1, #1
1005ec60:	4308      	orrs	r0, r1
1005ec62:	7160      	strb	r0, [r4, #5]
1005ec64:	6115      	str	r5, [r2, #16]
1005ec66:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ec68:	0628      	lsls	r0, r5, #24
1005ec6a:	d509      	bpl.n	1005ec80 <isr_postproc+0x48>
1005ec6c:	2051      	movs	r0, #81	; 0x51
1005ec6e:	01c0      	lsls	r0, r0, #7
1005ec70:	4385      	bics	r5, r0
1005ec72:	04e8      	lsls	r0, r5, #19
1005ec74:	d401      	bmi.n	1005ec7a <isr_postproc+0x42>
1005ec76:	2040      	movs	r0, #64	; 0x40
1005ec78:	4305      	orrs	r5, r0
1005ec7a:	4865      	ldr	r0, [pc, #404]	; (1005ee10 <isr_postproc+0x1d8>)
1005ec7c:	6125      	str	r5, [r4, #16]
1005ec7e:	e098      	b.n	1005edb2 <isr_postproc+0x17a>
1005ec80:	04e8      	lsls	r0, r5, #19
1005ec82:	d539      	bpl.n	1005ecf8 <isr_postproc+0xc0>
1005ec84:	f7ed fe5f 	bl	1004c946 <Hal_Get_Random_Number32>
1005ec88:	9000      	str	r0, [sp, #0]
1005ec8a:	f7ed fe5c 	bl	1004c946 <Hal_Get_Random_Number32>
1005ec8e:	9001      	str	r0, [sp, #4]
1005ec90:	f7ed fe59 	bl	1004c946 <Hal_Get_Random_Number32>
1005ec94:	9002      	str	r0, [sp, #8]
1005ec96:	2001      	movs	r0, #1
1005ec98:	0300      	lsls	r0, r0, #12
1005ec9a:	4385      	bics	r5, r0
1005ec9c:	2003      	movs	r0, #3
1005ec9e:	0280      	lsls	r0, r0, #10
1005eca0:	4305      	orrs	r5, r0
1005eca2:	6125      	str	r5, [r4, #16]
1005eca4:	7960      	ldrb	r0, [r4, #5]
1005eca6:	2101      	movs	r1, #1
1005eca8:	4308      	orrs	r0, r1
1005ecaa:	7160      	strb	r0, [r4, #5]
1005ecac:	6b60      	ldr	r0, [r4, #52]	; 0x34
1005ecae:	4639      	mov	r1, r7
1005ecb0:	312e      	adds	r1, #46	; 0x2e
1005ecb2:	2210      	movs	r2, #16
1005ecb4:	300c      	adds	r0, #12
1005ecb6:	f7ed fe65 	bl	1004c984 <char_copy>
1005ecba:	3726      	adds	r7, #38	; 0x26
1005ecbc:	9802      	ldr	r0, [sp, #8]
1005ecbe:	7038      	strb	r0, [r7, #0]
1005ecc0:	0a01      	lsrs	r1, r0, #8
1005ecc2:	7079      	strb	r1, [r7, #1]
1005ecc4:	0c01      	lsrs	r1, r0, #16
1005ecc6:	70b9      	strb	r1, [r7, #2]
1005ecc8:	0e00      	lsrs	r0, r0, #24
1005ecca:	70f8      	strb	r0, [r7, #3]
1005eccc:	4851      	ldr	r0, [pc, #324]	; (1005ee14 <isr_postproc+0x1dc>)
1005ecce:	6030      	str	r0, [r6, #0]
1005ecd0:	6b61      	ldr	r1, [r4, #52]	; 0x34
1005ecd2:	2208      	movs	r2, #8
1005ecd4:	1d08      	adds	r0, r1, #4
1005ecd6:	1cc9      	adds	r1, r1, #3
1005ecd8:	f7ed fe54 	bl	1004c984 <char_copy>
1005ecdc:	6b61      	ldr	r1, [r4, #52]	; 0x34
1005ecde:	2202      	movs	r2, #2
1005ece0:	4608      	mov	r0, r1
1005ece2:	301c      	adds	r0, #28
1005ece4:	310b      	adds	r1, #11
1005ece6:	f7ed fe4d 	bl	1004c984 <char_copy>
1005ecea:	6b61      	ldr	r1, [r4, #52]	; 0x34
1005ecec:	220c      	movs	r2, #12
1005ecee:	4668      	mov	r0, sp
1005ecf0:	310d      	adds	r1, #13
1005ecf2:	f7ed fe47 	bl	1004c984 <char_copy>
1005ecf6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ecf8:	0268      	lsls	r0, r5, #9
1005ecfa:	d535      	bpl.n	1005ed68 <isr_postproc+0x130>
1005ecfc:	f7ed fe23 	bl	1004c946 <Hal_Get_Random_Number32>
1005ed00:	9001      	str	r0, [sp, #4]
1005ed02:	f7ed fe20 	bl	1004c946 <Hal_Get_Random_Number32>
1005ed06:	9000      	str	r0, [sp, #0]
1005ed08:	f7ed fe1d 	bl	1004c946 <Hal_Get_Random_Number32>
1005ed0c:	4601      	mov	r1, r0
1005ed0e:	aa01      	add	r2, sp, #4
1005ed10:	2000      	movs	r0, #0
1005ed12:	183d      	adds	r5, r7, r0
1005ed14:	7813      	ldrb	r3, [r2, #0]
1005ed16:	3520      	adds	r5, #32
1005ed18:	72ab      	strb	r3, [r5, #10]
1005ed1a:	1c40      	adds	r0, r0, #1
1005ed1c:	b2c0      	uxtb	r0, r0
1005ed1e:	1c52      	adds	r2, r2, #1
1005ed20:	2804      	cmp	r0, #4
1005ed22:	d3f6      	bcc.n	1005ed12 <isr_postproc+0xda>
1005ed24:	9800      	ldr	r0, [sp, #0]
1005ed26:	4a3c      	ldr	r2, [pc, #240]	; (1005ee18 <isr_postproc+0x1e0>)
1005ed28:	0600      	lsls	r0, r0, #24
1005ed2a:	1880      	adds	r0, r0, r2
1005ed2c:	6030      	str	r0, [r6, #0]
1005ed2e:	9800      	ldr	r0, [sp, #0]
1005ed30:	060a      	lsls	r2, r1, #24
1005ed32:	0a00      	lsrs	r0, r0, #8
1005ed34:	4310      	orrs	r0, r2
1005ed36:	6070      	str	r0, [r6, #4]
1005ed38:	9801      	ldr	r0, [sp, #4]
1005ed3a:	0a0a      	lsrs	r2, r1, #8
1005ed3c:	0603      	lsls	r3, r0, #24
1005ed3e:	431a      	orrs	r2, r3
1005ed40:	0a00      	lsrs	r0, r0, #8
1005ed42:	60b2      	str	r2, [r6, #8]
1005ed44:	60f0      	str	r0, [r6, #12]
1005ed46:	4835      	ldr	r0, [pc, #212]	; (1005ee1c <isr_postproc+0x1e4>)
1005ed48:	9a00      	ldr	r2, [sp, #0]
1005ed4a:	6803      	ldr	r3, [r0, #0]
1005ed4c:	2009      	movs	r0, #9
1005ed4e:	0200      	lsls	r0, r0, #8
1005ed50:	1818      	adds	r0, r3, r0
1005ed52:	66c2      	str	r2, [r0, #108]	; 0x6c
1005ed54:	6701      	str	r1, [r0, #112]	; 0x70
1005ed56:	7960      	ldrb	r0, [r4, #5]
1005ed58:	2101      	movs	r1, #1
1005ed5a:	4308      	orrs	r0, r1
1005ed5c:	7160      	strb	r0, [r4, #5]
1005ed5e:	6920      	ldr	r0, [r4, #16]
1005ed60:	0589      	lsls	r1, r1, #22
1005ed62:	4388      	bics	r0, r1
1005ed64:	6120      	str	r0, [r4, #16]
1005ed66:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ed68:	0568      	lsls	r0, r5, #21
1005ed6a:	d4fc      	bmi.n	1005ed66 <isr_postproc+0x12e>
1005ed6c:	0768      	lsls	r0, r5, #29
1005ed6e:	d516      	bpl.n	1005ed9e <isr_postproc+0x166>
1005ed70:	4621      	mov	r1, r4
1005ed72:	3120      	adds	r1, #32
1005ed74:	7c48      	ldrb	r0, [r1, #17]
1005ed76:	2800      	cmp	r0, #0
1005ed78:	d10d      	bne.n	1005ed96 <isr_postproc+0x15e>
1005ed7a:	4829      	ldr	r0, [pc, #164]	; (1005ee20 <isr_postproc+0x1e8>)
1005ed7c:	6030      	str	r0, [r6, #0]
1005ed7e:	4827      	ldr	r0, [pc, #156]	; (1005ee1c <isr_postproc+0x1e4>)
1005ed80:	6800      	ldr	r0, [r0, #0]
1005ed82:	3080      	adds	r0, #128	; 0x80
1005ed84:	8c40      	ldrh	r0, [r0, #34]	; 0x22
1005ed86:	0400      	lsls	r0, r0, #16
1005ed88:	3030      	adds	r0, #48	; 0x30
1005ed8a:	6070      	str	r0, [r6, #4]
1005ed8c:	7962      	ldrb	r2, [r4, #5]
1005ed8e:	2001      	movs	r0, #1
1005ed90:	4302      	orrs	r2, r0
1005ed92:	7162      	strb	r2, [r4, #5]
1005ed94:	7448      	strb	r0, [r1, #17]
1005ed96:	2004      	movs	r0, #4
1005ed98:	4385      	bics	r5, r0
1005ed9a:	6125      	str	r5, [r4, #16]
1005ed9c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ed9e:	0728      	lsls	r0, r5, #28
1005eda0:	2708      	movs	r7, #8
1005eda2:	2800      	cmp	r0, #0
1005eda4:	da0b      	bge.n	1005edbe <isr_postproc+0x186>
1005eda6:	79e0      	ldrb	r0, [r4, #7]
1005eda8:	43bd      	bics	r5, r7
1005edaa:	491e      	ldr	r1, [pc, #120]	; (1005ee24 <isr_postproc+0x1ec>)
1005edac:	0600      	lsls	r0, r0, #24
1005edae:	1840      	adds	r0, r0, r1
1005edb0:	6125      	str	r5, [r4, #16]
1005edb2:	6030      	str	r0, [r6, #0]
1005edb4:	7960      	ldrb	r0, [r4, #5]
1005edb6:	2101      	movs	r1, #1
1005edb8:	4308      	orrs	r0, r1
1005edba:	7150      	strb	r0, [r2, #5]
1005edbc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005edbe:	06e8      	lsls	r0, r5, #27
1005edc0:	d510      	bpl.n	1005ede4 <isr_postproc+0x1ac>
1005edc2:	2010      	movs	r0, #16
1005edc4:	4385      	bics	r5, r0
1005edc6:	6125      	str	r5, [r4, #16]
1005edc8:	f7e2 fee0 	bl	10041b8c <data_length_extension_csr_ucfg>
1005edcc:	4916      	ldr	r1, [pc, #88]	; (1005ee28 <isr_postproc+0x1f0>)
1005edce:	0740      	lsls	r0, r0, #29
1005edd0:	1840      	adds	r0, r0, r1
1005edd2:	6030      	str	r0, [r6, #0]
1005edd4:	2000      	movs	r0, #0
1005edd6:	6070      	str	r0, [r6, #4]
1005edd8:	60b0      	str	r0, [r6, #8]
1005edda:	7960      	ldrb	r0, [r4, #5]
1005eddc:	2101      	movs	r1, #1
1005edde:	4308      	orrs	r0, r1
1005ede0:	7160      	strb	r0, [r4, #5]
1005ede2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ede4:	0368      	lsls	r0, r5, #13
1005ede6:	d5fc      	bpl.n	1005ede2 <isr_postproc+0x1aa>
1005ede8:	4610      	mov	r0, r2
1005edea:	f7e2 fec7 	bl	10041b7c <LL_Data_Length_Change_Event_ucfg>
1005edee:	2800      	cmp	r0, #0
1005edf0:	d004      	beq.n	1005edfc <isr_postproc+0x1c4>
1005edf2:	4620      	mov	r0, r4
1005edf4:	3040      	adds	r0, #64	; 0x40
1005edf6:	7d01      	ldrb	r1, [r0, #20]
1005edf8:	4339      	orrs	r1, r7
1005edfa:	7501      	strb	r1, [r0, #20]
1005edfc:	2001      	movs	r0, #1
1005edfe:	0480      	lsls	r0, r0, #18
1005ee00:	4385      	bics	r5, r0
1005ee02:	6125      	str	r5, [r4, #16]
1005ee04:	8960      	ldrh	r0, [r4, #10]
1005ee06:	f7e2 febd 	bl	10041b84 <LL_Send_Length_Resp_ucfg>
1005ee0a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ee0c:	00060103 	.word	0x00060103
1005ee10:	000b0103 	.word	0x000b0103
1005ee14:	00031703 	.word	0x00031703
1005ee18:	00040d13 	.word	0x00040d13
1005ee1c:	20000d64 	.word	0x20000d64
1005ee20:	0b0c0603 	.word	0x0b0c0603
1005ee24:	00070203 	.word	0x00070203
1005ee28:	09090903 	.word	0x09090903

1005ee2c <LL_receive_data>:
1005ee2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005ee2e:	461d      	mov	r5, r3
1005ee30:	4614      	mov	r4, r2
1005ee32:	4606      	mov	r6, r0
1005ee34:	2700      	movs	r7, #0
1005ee36:	f7e2 fea9 	bl	10041b8c <data_length_extension_csr_ucfg>
1005ee3a:	2801      	cmp	r0, #1
1005ee3c:	d00c      	beq.n	1005ee58 <LL_receive_data+0x2c>
1005ee3e:	201f      	movs	r0, #31
1005ee40:	7871      	ldrb	r1, [r6, #1]
1005ee42:	4008      	ands	r0, r1
1005ee44:	0006      	movs	r6, r0
1005ee46:	d036      	beq.n	1005eeb6 <LL_receive_data+0x8a>
1005ee48:	2000      	movs	r0, #0
1005ee4a:	61e8      	str	r0, [r5, #28]
1005ee4c:	f7fd fe3e 	bl	1005cacc <isr_Acl_Data_Indication_Queue_Full>
1005ee50:	2800      	cmp	r0, #0
1005ee52:	d003      	beq.n	1005ee5c <LL_receive_data+0x30>
1005ee54:	69e8      	ldr	r0, [r5, #28]
1005ee56:	e007      	b.n	1005ee68 <LL_receive_data+0x3c>
1005ee58:	20ff      	movs	r0, #255	; 0xff
1005ee5a:	e7f1      	b.n	1005ee40 <LL_receive_data+0x14>
1005ee5c:	8969      	ldrh	r1, [r5, #10]
1005ee5e:	4632      	mov	r2, r6
1005ee60:	2001      	movs	r0, #1
1005ee62:	f7f5 fde3 	bl	10054a2c <PM_Get_Pckt>
1005ee66:	61e8      	str	r0, [r5, #28]
1005ee68:	2800      	cmp	r0, #0
1005ee6a:	d001      	beq.n	1005ee70 <LL_receive_data+0x44>
1005ee6c:	2710      	movs	r7, #16
1005ee6e:	e022      	b.n	1005eeb6 <LL_receive_data+0x8a>
1005ee70:	7de0      	ldrb	r0, [r4, #23]
1005ee72:	2180      	movs	r1, #128	; 0x80
1005ee74:	4048      	eors	r0, r1
1005ee76:	75e0      	strb	r0, [r4, #23]
1005ee78:	4910      	ldr	r1, [pc, #64]	; (1005eebc <LL_receive_data+0x90>)
1005ee7a:	6928      	ldr	r0, [r5, #16]
1005ee7c:	4208      	tst	r0, r1
1005ee7e:	d01a      	beq.n	1005eeb6 <LL_receive_data+0x8a>
1005ee80:	7960      	ldrb	r0, [r4, #5]
1005ee82:	1e40      	subs	r0, r0, #1
1005ee84:	7160      	strb	r0, [r4, #5]
1005ee86:	7960      	ldrb	r0, [r4, #5]
1005ee88:	28ff      	cmp	r0, #255	; 0xff
1005ee8a:	d114      	bne.n	1005eeb6 <LL_receive_data+0x8a>
1005ee8c:	79a0      	ldrb	r0, [r4, #6]
1005ee8e:	1e40      	subs	r0, r0, #1
1005ee90:	71a0      	strb	r0, [r4, #6]
1005ee92:	79a0      	ldrb	r0, [r4, #6]
1005ee94:	28ff      	cmp	r0, #255	; 0xff
1005ee96:	d10e      	bne.n	1005eeb6 <LL_receive_data+0x8a>
1005ee98:	79e0      	ldrb	r0, [r4, #7]
1005ee9a:	1e40      	subs	r0, r0, #1
1005ee9c:	71e0      	strb	r0, [r4, #7]
1005ee9e:	79e0      	ldrb	r0, [r4, #7]
1005eea0:	28ff      	cmp	r0, #255	; 0xff
1005eea2:	d108      	bne.n	1005eeb6 <LL_receive_data+0x8a>
1005eea4:	7a20      	ldrb	r0, [r4, #8]
1005eea6:	1e40      	subs	r0, r0, #1
1005eea8:	7220      	strb	r0, [r4, #8]
1005eeaa:	7a20      	ldrb	r0, [r4, #8]
1005eeac:	28ff      	cmp	r0, #255	; 0xff
1005eeae:	d102      	bne.n	1005eeb6 <LL_receive_data+0x8a>
1005eeb0:	7a60      	ldrb	r0, [r4, #9]
1005eeb2:	1e40      	subs	r0, r0, #1
1005eeb4:	7260      	strb	r0, [r4, #9]
1005eeb6:	4638      	mov	r0, r7
1005eeb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005eeba:	0000      	.short	0x0000
1005eebc:	00002820 	.word	0x00002820

1005eec0 <cancel_slave>:
1005eec0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005eec2:	4603      	mov	r3, r0
1005eec4:	482d      	ldr	r0, [pc, #180]	; (1005ef7c <cancel_slave+0xbc>)
1005eec6:	273f      	movs	r7, #63	; 0x3f
1005eec8:	6802      	ldr	r2, [r0, #0]
1005eeca:	2009      	movs	r0, #9
1005eecc:	0200      	lsls	r0, r0, #8
1005eece:	1810      	adds	r0, r2, r0
1005eed0:	6b01      	ldr	r1, [r0, #48]	; 0x30
1005eed2:	2058      	movs	r0, #88	; 0x58
1005eed4:	4358      	muls	r0, r3
1005eed6:	180c      	adds	r4, r1, r0
1005eed8:	2041      	movs	r0, #65	; 0x41
1005eeda:	0140      	lsls	r0, r0, #5
1005eedc:	1810      	adds	r0, r2, r0
1005eede:	4611      	mov	r1, r2
1005eee0:	4e27      	ldr	r6, [pc, #156]	; (1005ef80 <cancel_slave+0xc0>)
1005eee2:	017f      	lsls	r7, r7, #5
1005eee4:	019d      	lsls	r5, r3, #6
1005eee6:	19d2      	adds	r2, r2, r7
1005eee8:	19ae      	adds	r6, r5, r6
1005eeea:	7a92      	ldrb	r2, [r2, #10]
1005eeec:	31c0      	adds	r1, #192	; 0xc0
1005eeee:	2500      	movs	r5, #0
1005eef0:	429a      	cmp	r2, r3
1005eef2:	d10c      	bne.n	1005ef0e <cancel_slave+0x4e>
1005eef4:	4602      	mov	r2, r0
1005eef6:	3240      	adds	r2, #64	; 0x40
1005eef8:	4617      	mov	r7, r2
1005eefa:	8e92      	ldrh	r2, [r2, #52]	; 0x34
1005eefc:	8f3f      	ldrh	r7, [r7, #56]	; 0x38
1005eefe:	9700      	str	r7, [sp, #0]
1005ef00:	2784      	movs	r7, #132	; 0x84
1005ef02:	583f      	ldr	r7, [r7, r0]
1005ef04:	2301      	movs	r3, #1
1005ef06:	9701      	str	r7, [sp, #4]
1005ef08:	277b      	movs	r7, #123	; 0x7b
1005ef0a:	5c3f      	ldrb	r7, [r7, r0]
1005ef0c:	e007      	b.n	1005ef1e <cancel_slave+0x5e>
1005ef0e:	8c8a      	ldrh	r2, [r1, #36]	; 0x24
1005ef10:	8ccf      	ldrh	r7, [r1, #38]	; 0x26
1005ef12:	9700      	str	r7, [sp, #0]
1005ef14:	6acf      	ldr	r7, [r1, #44]	; 0x2c
1005ef16:	2300      	movs	r3, #0
1005ef18:	9701      	str	r7, [sp, #4]
1005ef1a:	2728      	movs	r7, #40	; 0x28
1005ef1c:	5c7f      	ldrb	r7, [r7, r1]
1005ef1e:	9702      	str	r7, [sp, #8]
1005ef20:	79a7      	ldrb	r7, [r4, #6]
1005ef22:	07ff      	lsls	r7, r7, #31
1005ef24:	d008      	beq.n	1005ef38 <cancel_slave+0x78>
1005ef26:	8927      	ldrh	r7, [r4, #8]
1005ef28:	1bd2      	subs	r2, r2, r7
1005ef2a:	0412      	lsls	r2, r2, #16
1005ef2c:	0c12      	lsrs	r2, r2, #16
1005ef2e:	d103      	bne.n	1005ef38 <cancel_slave+0x78>
1005ef30:	4622      	mov	r2, r4
1005ef32:	f7f6 fd85 	bl	10055a40 <LL_update_proc>
1005ef36:	4605      	mov	r5, r0
1005ef38:	79a0      	ldrb	r0, [r4, #6]
1005ef3a:	0781      	lsls	r1, r0, #30
1005ef3c:	d510      	bpl.n	1005ef60 <cancel_slave+0xa0>
1005ef3e:	8922      	ldrh	r2, [r4, #8]
1005ef40:	9900      	ldr	r1, [sp, #0]
1005ef42:	1a89      	subs	r1, r1, r2
1005ef44:	1c49      	adds	r1, r1, #1
1005ef46:	0409      	lsls	r1, r1, #16
1005ef48:	0c09      	lsrs	r1, r1, #16
1005ef4a:	d109      	bne.n	1005ef60 <cancel_slave+0xa0>
1005ef4c:	21fd      	movs	r1, #253	; 0xfd
1005ef4e:	4008      	ands	r0, r1
1005ef50:	ab01      	add	r3, sp, #4
1005ef52:	71a0      	strb	r0, [r4, #6]
1005ef54:	4631      	mov	r1, r6
1005ef56:	2205      	movs	r2, #5
1005ef58:	3121      	adds	r1, #33	; 0x21
1005ef5a:	4618      	mov	r0, r3
1005ef5c:	f7ed fd12 	bl	1004c984 <char_copy>
1005ef60:	2d00      	cmp	r5, #0
1005ef62:	d00a      	beq.n	1005ef7a <cancel_slave+0xba>
1005ef64:	4805      	ldr	r0, [pc, #20]	; (1005ef7c <cancel_slave+0xbc>)
1005ef66:	9600      	str	r6, [sp, #0]
1005ef68:	6801      	ldr	r1, [r0, #0]
1005ef6a:	2041      	movs	r0, #65	; 0x41
1005ef6c:	0140      	lsls	r0, r0, #5
1005ef6e:	1809      	adds	r1, r1, r0
1005ef70:	462b      	mov	r3, r5
1005ef72:	4622      	mov	r2, r4
1005ef74:	2000      	movs	r0, #0
1005ef76:	f7f3 fc27 	bl	100527c8 <isr_event_handler>
1005ef7a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ef7c:	20000d64 	.word	0x20000d64
1005ef80:	200000cc 	.word	0x200000cc

1005ef84 <go_to_connect_master>:
1005ef84:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ef86:	460d      	mov	r5, r1
1005ef88:	b089      	sub	sp, #36	; 0x24
1005ef8a:	2700      	movs	r7, #0
1005ef8c:	2109      	movs	r1, #9
1005ef8e:	06c9      	lsls	r1, r1, #27
1005ef90:	9e0e      	ldr	r6, [sp, #56]	; 0x38
1005ef92:	4614      	mov	r4, r2
1005ef94:	604f      	str	r7, [r1, #4]
1005ef96:	7b82      	ldrb	r2, [r0, #14]
1005ef98:	7bc1      	ldrb	r1, [r0, #15]
1005ef9a:	4694      	mov	ip, r2
1005ef9c:	020b      	lsls	r3, r1, #8
1005ef9e:	7c01      	ldrb	r1, [r0, #16]
1005efa0:	040a      	lsls	r2, r1, #16
1005efa2:	7c41      	ldrb	r1, [r0, #17]
1005efa4:	0609      	lsls	r1, r1, #24
1005efa6:	4311      	orrs	r1, r2
1005efa8:	4319      	orrs	r1, r3
1005efaa:	4662      	mov	r2, ip
1005efac:	4311      	orrs	r1, r2
1005efae:	9103      	str	r1, [sp, #12]
1005efb0:	7c82      	ldrb	r2, [r0, #18]
1005efb2:	7cc1      	ldrb	r1, [r0, #19]
1005efb4:	020b      	lsls	r3, r1, #8
1005efb6:	7d01      	ldrb	r1, [r0, #20]
1005efb8:	0409      	lsls	r1, r1, #16
1005efba:	4319      	orrs	r1, r3
1005efbc:	4311      	orrs	r1, r2
1005efbe:	9104      	str	r1, [sp, #16]
1005efc0:	7e02      	ldrb	r2, [r0, #24]
1005efc2:	7e41      	ldrb	r1, [r0, #25]
1005efc4:	0209      	lsls	r1, r1, #8
1005efc6:	4311      	orrs	r1, r2
1005efc8:	9105      	str	r1, [sp, #20]
1005efca:	7e82      	ldrb	r2, [r0, #26]
1005efcc:	7ec1      	ldrb	r1, [r0, #27]
1005efce:	0209      	lsls	r1, r1, #8
1005efd0:	4311      	orrs	r1, r2
1005efd2:	9107      	str	r1, [sp, #28]
1005efd4:	7f02      	ldrb	r2, [r0, #28]
1005efd6:	7f41      	ldrb	r1, [r0, #29]
1005efd8:	0209      	lsls	r1, r1, #8
1005efda:	4311      	orrs	r1, r2
1005efdc:	9100      	str	r1, [sp, #0]
1005efde:	4601      	mov	r1, r0
1005efe0:	311e      	adds	r1, #30
1005efe2:	9101      	str	r1, [sp, #4]
1005efe4:	3020      	adds	r0, #32
1005efe6:	78c0      	ldrb	r0, [r0, #3]
1005efe8:	4631      	mov	r1, r6
1005efea:	06c0      	lsls	r0, r0, #27
1005efec:	0ec0      	lsrs	r0, r0, #27
1005efee:	3121      	adds	r1, #33	; 0x21
1005eff0:	9006      	str	r0, [sp, #24]
1005eff2:	2205      	movs	r2, #5
1005eff4:	9102      	str	r1, [sp, #8]
1005eff6:	9801      	ldr	r0, [sp, #4]
1005eff8:	f7ed fcc4 	bl	1004c984 <char_copy>
1005effc:	2022      	movs	r0, #34	; 0x22
1005effe:	5547      	strb	r7, [r0, r5]
1005f000:	2031      	movs	r0, #49	; 0x31
1005f002:	5507      	strb	r7, [r0, r4]
1005f004:	73e7      	strb	r7, [r4, #15]
1005f006:	2002      	movs	r0, #2
1005f008:	70e0      	strb	r0, [r4, #3]
1005f00a:	9905      	ldr	r1, [sp, #20]
1005f00c:	220c      	movs	r2, #12
1005f00e:	4351      	muls	r1, r2
1005f010:	6161      	str	r1, [r4, #20]
1005f012:	9900      	ldr	r1, [sp, #0]
1005f014:	22ff      	movs	r2, #255	; 0xff
1005f016:	0109      	lsls	r1, r1, #4
1005f018:	61a1      	str	r1, [r4, #24]
1005f01a:	7120      	strb	r0, [r4, #4]
1005f01c:	8127      	strh	r7, [r4, #8]
1005f01e:	9907      	ldr	r1, [sp, #28]
1005f020:	81a1      	strh	r1, [r4, #12]
1005f022:	9905      	ldr	r1, [sp, #20]
1005f024:	8721      	strh	r1, [r4, #56]	; 0x38
1005f026:	71a7      	strb	r7, [r4, #6]
1005f028:	4620      	mov	r0, r4
1005f02a:	3040      	adds	r0, #64	; 0x40
1005f02c:	6127      	str	r7, [r4, #16]
1005f02e:	7507      	strb	r7, [r0, #20]
1005f030:	211b      	movs	r1, #27
1005f032:	8761      	strh	r1, [r4, #58]	; 0x3a
1005f034:	3249      	adds	r2, #73	; 0x49
1005f036:	462b      	mov	r3, r5
1005f038:	8102      	strh	r2, [r0, #8]
1005f03a:	33c0      	adds	r3, #192	; 0xc0
1005f03c:	8a1f      	ldrh	r7, [r3, #16]
1005f03e:	2f1b      	cmp	r7, #27
1005f040:	d102      	bne.n	1005f048 <go_to_connect_master+0xc4>
1005f042:	8a5f      	ldrh	r7, [r3, #18]
1005f044:	4297      	cmp	r7, r2
1005f046:	d001      	beq.n	1005f04c <go_to_connect_master+0xc8>
1005f048:	2710      	movs	r7, #16
1005f04a:	7507      	strb	r7, [r0, #20]
1005f04c:	8b1f      	ldrh	r7, [r3, #24]
1005f04e:	87a7      	strh	r7, [r4, #60]	; 0x3c
1005f050:	87e1      	strh	r1, [r4, #62]	; 0x3e
1005f052:	8001      	strh	r1, [r0, #0]
1005f054:	8041      	strh	r1, [r0, #2]
1005f056:	8081      	strh	r1, [r0, #4]
1005f058:	80c1      	strh	r1, [r0, #6]
1005f05a:	8b59      	ldrh	r1, [r3, #26]
1005f05c:	8141      	strh	r1, [r0, #10]
1005f05e:	8182      	strh	r2, [r0, #12]
1005f060:	81c2      	strh	r2, [r0, #14]
1005f062:	8202      	strh	r2, [r0, #16]
1005f064:	8242      	strh	r2, [r0, #18]
1005f066:	2001      	movs	r0, #1
1005f068:	8020      	strh	r0, [r4, #0]
1005f06a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
1005f06c:	8000      	strh	r0, [r0, #0]
1005f06e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
1005f070:	8044      	strh	r4, [r0, #2]
1005f072:	8c28      	ldrh	r0, [r5, #32]
1005f074:	492f      	ldr	r1, [pc, #188]	; (1005f134 <go_to_connect_master+0x1b0>)
1005f076:	1c40      	adds	r0, r0, #1
1005f078:	b280      	uxth	r0, r0
1005f07a:	4288      	cmp	r0, r1
1005f07c:	d902      	bls.n	1005f084 <go_to_connect_master+0x100>
1005f07e:	4249      	negs	r1, r1
1005f080:	1840      	adds	r0, r0, r1
1005f082:	b280      	uxth	r0, r0
1005f084:	8160      	strh	r0, [r4, #10]
1005f086:	8428      	strh	r0, [r5, #32]
1005f088:	6aa0      	ldr	r0, [r4, #40]	; 0x28
1005f08a:	27c7      	movs	r7, #199	; 0xc7
1005f08c:	72c7      	strb	r7, [r0, #11]
1005f08e:	2205      	movs	r2, #5
1005f090:	9902      	ldr	r1, [sp, #8]
1005f092:	9801      	ldr	r0, [sp, #4]
1005f094:	f7ed fc76 	bl	1004c984 <char_copy>
1005f098:	2000      	movs	r0, #0
1005f09a:	72f0      	strb	r0, [r6, #11]
1005f09c:	8d21      	ldrh	r1, [r4, #40]	; 0x28
1005f09e:	8231      	strh	r1, [r6, #16]
1005f0a0:	75f0      	strb	r0, [r6, #23]
1005f0a2:	9803      	ldr	r0, [sp, #12]
1005f0a4:	61b0      	str	r0, [r6, #24]
1005f0a6:	9804      	ldr	r0, [sp, #16]
1005f0a8:	61f0      	str	r0, [r6, #28]
1005f0aa:	2120      	movs	r1, #32
1005f0ac:	9806      	ldr	r0, [sp, #24]
1005f0ae:	5588      	strb	r0, [r1, r6]
1005f0b0:	f7e2 fd6c 	bl	10041b8c <data_length_extension_csr_ucfg>
1005f0b4:	2180      	movs	r1, #128	; 0x80
1005f0b6:	2801      	cmp	r0, #1
1005f0b8:	d100      	bne.n	1005f0bc <go_to_connect_master+0x138>
1005f0ba:	75b1      	strb	r1, [r6, #22]
1005f0bc:	2042      	movs	r0, #66	; 0x42
1005f0be:	9003      	str	r0, [sp, #12]
1005f0c0:	3580      	adds	r5, #128	; 0x80
1005f0c2:	9002      	str	r0, [sp, #8]
1005f0c4:	6b68      	ldr	r0, [r5, #52]	; 0x34
1005f0c6:	8000      	strh	r0, [r0, #0]
1005f0c8:	6b68      	ldr	r0, [r5, #52]	; 0x34
1005f0ca:	72c7      	strb	r7, [r0, #11]
1005f0cc:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
1005f0ce:	8270      	strh	r0, [r6, #18]
1005f0d0:	20c0      	movs	r0, #192	; 0xc0
1005f0d2:	7160      	strb	r0, [r4, #5]
1005f0d4:	72b1      	strb	r1, [r6, #10]
1005f0d6:	78a0      	ldrb	r0, [r4, #2]
1005f0d8:	4e17      	ldr	r6, [pc, #92]	; (1005f138 <go_to_connect_master+0x1b4>)
1005f0da:	08c0      	lsrs	r0, r0, #3
1005f0dc:	00c0      	lsls	r0, r0, #3
1005f0de:	1d40      	adds	r0, r0, #5
1005f0e0:	70a0      	strb	r0, [r4, #2]
1005f0e2:	4816      	ldr	r0, [pc, #88]	; (1005f13c <go_to_connect_master+0x1b8>)
1005f0e4:	8800      	ldrh	r0, [r0, #0]
1005f0e6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
1005f0e8:	0140      	lsls	r0, r0, #5
1005f0ea:	3019      	adds	r0, #25
1005f0ec:	7288      	strb	r0, [r1, #10]
1005f0ee:	6b69      	ldr	r1, [r5, #52]	; 0x34
1005f0f0:	200a      	movs	r0, #10
1005f0f2:	7288      	strb	r0, [r1, #10]
1005f0f4:	f7f5 fb4c 	bl	10054790 <timebase_start_connect>
1005f0f8:	6b69      	ldr	r1, [r5, #52]	; 0x34
1005f0fa:	2203      	movs	r2, #3
1005f0fc:	1dc9      	adds	r1, r1, #7
1005f0fe:	9803      	ldr	r0, [sp, #12]
1005f100:	f7ed fc92 	bl	1004ca28 <set_string>
1005f104:	6b69      	ldr	r1, [r5, #52]	; 0x34
1005f106:	2203      	movs	r2, #3
1005f108:	4630      	mov	r0, r6
1005f10a:	1d09      	adds	r1, r1, #4
1005f10c:	f7ed fc8c 	bl	1004ca28 <set_string>
1005f110:	2001      	movs	r0, #1
1005f112:	f7fd fd81 	bl	1005cc18 <advance_wakeup_timer>
1005f116:	6aa1      	ldr	r1, [r4, #40]	; 0x28
1005f118:	2203      	movs	r2, #3
1005f11a:	1dc9      	adds	r1, r1, #7
1005f11c:	9802      	ldr	r0, [sp, #8]
1005f11e:	f7ed fc83 	bl	1004ca28 <set_string>
1005f122:	6aa1      	ldr	r1, [r4, #40]	; 0x28
1005f124:	2203      	movs	r2, #3
1005f126:	4806      	ldr	r0, [pc, #24]	; (1005f140 <go_to_connect_master+0x1bc>)
1005f128:	1d09      	adds	r1, r1, #4
1005f12a:	f7ed fc7d 	bl	1004ca28 <set_string>
1005f12e:	b009      	add	sp, #36	; 0x24
1005f130:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f132:	0000      	.short	0x0000
1005f134:	00000eff 	.word	0x00000eff
1005f138:	00b0012c 	.word	0x00b0012c
1005f13c:	200000c0 	.word	0x200000c0
1005f140:	003000fa 	.word	0x003000fa

1005f144 <AES_CMAC_Encrypt_Append>:
1005f144:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005f146:	b092      	sub	sp, #72	; 0x48
1005f148:	460f      	mov	r7, r1
1005f14a:	0004      	movs	r4, r0
1005f14c:	d004      	beq.n	1005f158 <AES_CMAC_Encrypt_Append+0x14>
1005f14e:	2f00      	cmp	r7, #0
1005f150:	d106      	bne.n	1005f160 <AES_CMAC_Encrypt_Append+0x1c>
1005f152:	9814      	ldr	r0, [sp, #80]	; 0x50
1005f154:	2800      	cmp	r0, #0
1005f156:	dd03      	ble.n	1005f160 <AES_CMAC_Encrypt_Append+0x1c>
1005f158:	2061      	movs	r0, #97	; 0x61
1005f15a:	0140      	lsls	r0, r0, #5
1005f15c:	b015      	add	sp, #84	; 0x54
1005f15e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f160:	9814      	ldr	r0, [sp, #80]	; 0x50
1005f162:	2800      	cmp	r0, #0
1005f164:	db04      	blt.n	1005f170 <AES_CMAC_Encrypt_Append+0x2c>
1005f166:	2810      	cmp	r0, #16
1005f168:	da04      	bge.n	1005f174 <AES_CMAC_Encrypt_Append+0x30>
1005f16a:	7920      	ldrb	r0, [r4, #4]
1005f16c:	0680      	lsls	r0, r0, #26
1005f16e:	d401      	bmi.n	1005f174 <AES_CMAC_Encrypt_Append+0x30>
1005f170:	4894      	ldr	r0, [pc, #592]	; (1005f3c4 <AES_CMAC_Encrypt_Append+0x280>)
1005f172:	e7f3      	b.n	1005f15c <AES_CMAC_Encrypt_Append+0x18>
1005f174:	7920      	ldrb	r0, [r4, #4]
1005f176:	0741      	lsls	r1, r0, #29
1005f178:	d401      	bmi.n	1005f17e <AES_CMAC_Encrypt_Append+0x3a>
1005f17a:	0781      	lsls	r1, r0, #30
1005f17c:	d502      	bpl.n	1005f184 <AES_CMAC_Encrypt_Append+0x40>
1005f17e:	4891      	ldr	r0, [pc, #580]	; (1005f3c4 <AES_CMAC_Encrypt_Append+0x280>)
1005f180:	1c40      	adds	r0, r0, #1
1005f182:	e7eb      	b.n	1005f15c <AES_CMAC_Encrypt_Append+0x18>
1005f184:	2140      	movs	r1, #64	; 0x40
1005f186:	4308      	orrs	r0, r1
1005f188:	7120      	strb	r0, [r4, #4]
1005f18a:	4620      	mov	r0, r4
1005f18c:	3014      	adds	r0, #20
1005f18e:	2500      	movs	r5, #0
1005f190:	900f      	str	r0, [sp, #60]	; 0x3c
1005f192:	3014      	adds	r0, #20
1005f194:	9001      	str	r0, [sp, #4]
1005f196:	e01e      	b.n	1005f1d6 <AES_CMAC_Encrypt_Append+0x92>
1005f198:	2600      	movs	r6, #0
1005f19a:	00b0      	lsls	r0, r6, #2
1005f19c:	9004      	str	r0, [sp, #16]
1005f19e:	1940      	adds	r0, r0, r5
1005f1a0:	19c0      	adds	r0, r0, r7
1005f1a2:	9003      	str	r0, [sp, #12]
1005f1a4:	f7e1 f950 	bl	10040448 <__aeabi_uread4>
1005f1a8:	ba00      	rev	r0, r0
1005f1aa:	0a01      	lsrs	r1, r0, #8
1005f1ac:	9803      	ldr	r0, [sp, #12]
1005f1ae:	0209      	lsls	r1, r1, #8
1005f1b0:	78c0      	ldrb	r0, [r0, #3]
1005f1b2:	aa07      	add	r2, sp, #28
1005f1b4:	4301      	orrs	r1, r0
1005f1b6:	9804      	ldr	r0, [sp, #16]
1005f1b8:	1c76      	adds	r6, r6, #1
1005f1ba:	1900      	adds	r0, r0, r4
1005f1bc:	6940      	ldr	r0, [r0, #20]
1005f1be:	4041      	eors	r1, r0
1005f1c0:	9804      	ldr	r0, [sp, #16]
1005f1c2:	2e04      	cmp	r6, #4
1005f1c4:	5011      	str	r1, [r2, r0]
1005f1c6:	dbe8      	blt.n	1005f19a <AES_CMAC_Encrypt_Append+0x56>
1005f1c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
1005f1ca:	a807      	add	r0, sp, #28
1005f1cc:	9a01      	ldr	r2, [sp, #4]
1005f1ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
1005f1d0:	f000 fa7c 	bl	1005f6cc <AES_general_enc>
1005f1d4:	9d05      	ldr	r5, [sp, #20]
1005f1d6:	4628      	mov	r0, r5
1005f1d8:	3010      	adds	r0, #16
1005f1da:	9005      	str	r0, [sp, #20]
1005f1dc:	9914      	ldr	r1, [sp, #80]	; 0x50
1005f1de:	4288      	cmp	r0, r1
1005f1e0:	dbda      	blt.n	1005f198 <AES_CMAC_Encrypt_Append+0x54>
1005f1e2:	7920      	ldrb	r0, [r4, #4]
1005f1e4:	0680      	lsls	r0, r0, #26
1005f1e6:	d420      	bmi.n	1005f22a <AES_CMAC_Encrypt_Append+0xe6>
1005f1e8:	2900      	cmp	r1, #0
1005f1ea:	dd1e      	ble.n	1005f22a <AES_CMAC_Encrypt_Append+0xe6>
1005f1ec:	2600      	movs	r6, #0
1005f1ee:	00b0      	lsls	r0, r6, #2
1005f1f0:	9004      	str	r0, [sp, #16]
1005f1f2:	1940      	adds	r0, r0, r5
1005f1f4:	19c0      	adds	r0, r0, r7
1005f1f6:	9003      	str	r0, [sp, #12]
1005f1f8:	f7e1 f926 	bl	10040448 <__aeabi_uread4>
1005f1fc:	ba00      	rev	r0, r0
1005f1fe:	0a01      	lsrs	r1, r0, #8
1005f200:	9803      	ldr	r0, [sp, #12]
1005f202:	0209      	lsls	r1, r1, #8
1005f204:	78c0      	ldrb	r0, [r0, #3]
1005f206:	aa07      	add	r2, sp, #28
1005f208:	4301      	orrs	r1, r0
1005f20a:	9804      	ldr	r0, [sp, #16]
1005f20c:	1c76      	adds	r6, r6, #1
1005f20e:	1900      	adds	r0, r0, r4
1005f210:	6940      	ldr	r0, [r0, #20]
1005f212:	4041      	eors	r1, r0
1005f214:	9804      	ldr	r0, [sp, #16]
1005f216:	2e04      	cmp	r6, #4
1005f218:	5011      	str	r1, [r2, r0]
1005f21a:	dbe8      	blt.n	1005f1ee <AES_CMAC_Encrypt_Append+0xaa>
1005f21c:	6a63      	ldr	r3, [r4, #36]	; 0x24
1005f21e:	a807      	add	r0, sp, #28
1005f220:	9a01      	ldr	r2, [sp, #4]
1005f222:	990f      	ldr	r1, [sp, #60]	; 0x3c
1005f224:	f000 fa52 	bl	1005f6cc <AES_general_enc>
1005f228:	e0ca      	b.n	1005f3c0 <AES_CMAC_Encrypt_Append+0x27c>
1005f22a:	2000      	movs	r0, #0
1005f22c:	900b      	str	r0, [sp, #44]	; 0x2c
1005f22e:	900c      	str	r0, [sp, #48]	; 0x30
1005f230:	900d      	str	r0, [sp, #52]	; 0x34
1005f232:	900e      	str	r0, [sp, #56]	; 0x38
1005f234:	a90b      	add	r1, sp, #44	; 0x2c
1005f236:	6a63      	ldr	r3, [r4, #36]	; 0x24
1005f238:	4608      	mov	r0, r1
1005f23a:	9a01      	ldr	r2, [sp, #4]
1005f23c:	f000 fa46 	bl	1005f6cc <AES_general_enc>
1005f240:	980b      	ldr	r0, [sp, #44]	; 0x2c
1005f242:	2187      	movs	r1, #135	; 0x87
1005f244:	0fc0      	lsrs	r0, r0, #31
1005f246:	4348      	muls	r0, r1
1005f248:	990b      	ldr	r1, [sp, #44]	; 0x2c
1005f24a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005f24c:	0049      	lsls	r1, r1, #1
1005f24e:	0fd2      	lsrs	r2, r2, #31
1005f250:	4311      	orrs	r1, r2
1005f252:	910b      	str	r1, [sp, #44]	; 0x2c
1005f254:	990c      	ldr	r1, [sp, #48]	; 0x30
1005f256:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1005f258:	0049      	lsls	r1, r1, #1
1005f25a:	0fd2      	lsrs	r2, r2, #31
1005f25c:	4311      	orrs	r1, r2
1005f25e:	910c      	str	r1, [sp, #48]	; 0x30
1005f260:	990d      	ldr	r1, [sp, #52]	; 0x34
1005f262:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1005f264:	0049      	lsls	r1, r1, #1
1005f266:	0fd2      	lsrs	r2, r2, #31
1005f268:	4311      	orrs	r1, r2
1005f26a:	910d      	str	r1, [sp, #52]	; 0x34
1005f26c:	990e      	ldr	r1, [sp, #56]	; 0x38
1005f26e:	9a14      	ldr	r2, [sp, #80]	; 0x50
1005f270:	0049      	lsls	r1, r1, #1
1005f272:	4041      	eors	r1, r0
1005f274:	4628      	mov	r0, r5
1005f276:	3010      	adds	r0, #16
1005f278:	910e      	str	r1, [sp, #56]	; 0x38
1005f27a:	4290      	cmp	r0, r2
1005f27c:	d11c      	bne.n	1005f2b8 <AES_CMAC_Encrypt_Append+0x174>
1005f27e:	2600      	movs	r6, #0
1005f280:	00b0      	lsls	r0, r6, #2
1005f282:	9002      	str	r0, [sp, #8]
1005f284:	1940      	adds	r0, r0, r5
1005f286:	19c0      	adds	r0, r0, r7
1005f288:	9004      	str	r0, [sp, #16]
1005f28a:	f7e1 f8dd 	bl	10040448 <__aeabi_uread4>
1005f28e:	ba00      	rev	r0, r0
1005f290:	0a01      	lsrs	r1, r0, #8
1005f292:	9804      	ldr	r0, [sp, #16]
1005f294:	0209      	lsls	r1, r1, #8
1005f296:	78c0      	ldrb	r0, [r0, #3]
1005f298:	ab0b      	add	r3, sp, #44	; 0x2c
1005f29a:	4301      	orrs	r1, r0
1005f29c:	9802      	ldr	r0, [sp, #8]
1005f29e:	1c76      	adds	r6, r6, #1
1005f2a0:	1900      	adds	r0, r0, r4
1005f2a2:	6942      	ldr	r2, [r0, #20]
1005f2a4:	9802      	ldr	r0, [sp, #8]
1005f2a6:	5818      	ldr	r0, [r3, r0]
1005f2a8:	4042      	eors	r2, r0
1005f2aa:	4051      	eors	r1, r2
1005f2ac:	9802      	ldr	r0, [sp, #8]
1005f2ae:	aa07      	add	r2, sp, #28
1005f2b0:	5011      	str	r1, [r2, r0]
1005f2b2:	2e04      	cmp	r6, #4
1005f2b4:	dbe4      	blt.n	1005f280 <AES_CMAC_Encrypt_Append+0x13c>
1005f2b6:	e079      	b.n	1005f3ac <AES_CMAC_Encrypt_Append+0x268>
1005f2b8:	980b      	ldr	r0, [sp, #44]	; 0x2c
1005f2ba:	2287      	movs	r2, #135	; 0x87
1005f2bc:	0fc0      	lsrs	r0, r0, #31
1005f2be:	4350      	muls	r0, r2
1005f2c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1005f2c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1005f2c4:	0052      	lsls	r2, r2, #1
1005f2c6:	0fdb      	lsrs	r3, r3, #31
1005f2c8:	431a      	orrs	r2, r3
1005f2ca:	920b      	str	r2, [sp, #44]	; 0x2c
1005f2cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005f2ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1005f2d0:	0052      	lsls	r2, r2, #1
1005f2d2:	0fdb      	lsrs	r3, r3, #31
1005f2d4:	431a      	orrs	r2, r3
1005f2d6:	920c      	str	r2, [sp, #48]	; 0x30
1005f2d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1005f2da:	0fcb      	lsrs	r3, r1, #31
1005f2dc:	0052      	lsls	r2, r2, #1
1005f2de:	431a      	orrs	r2, r3
1005f2e0:	920d      	str	r2, [sp, #52]	; 0x34
1005f2e2:	004a      	lsls	r2, r1, #1
1005f2e4:	4042      	eors	r2, r0
1005f2e6:	9814      	ldr	r0, [sp, #80]	; 0x50
1005f2e8:	920e      	str	r2, [sp, #56]	; 0x38
1005f2ea:	1b40      	subs	r0, r0, r5
1005f2ec:	9003      	str	r0, [sp, #12]
1005f2ee:	17c0      	asrs	r0, r0, #31
1005f2f0:	0f82      	lsrs	r2, r0, #30
1005f2f2:	9803      	ldr	r0, [sp, #12]
1005f2f4:	2600      	movs	r6, #0
1005f2f6:	1810      	adds	r0, r2, r0
1005f2f8:	1080      	asrs	r0, r0, #2
1005f2fa:	9002      	str	r0, [sp, #8]
1005f2fc:	e019      	b.n	1005f332 <AES_CMAC_Encrypt_Append+0x1ee>
1005f2fe:	00b0      	lsls	r0, r6, #2
1005f300:	9010      	str	r0, [sp, #64]	; 0x40
1005f302:	1940      	adds	r0, r0, r5
1005f304:	19c0      	adds	r0, r0, r7
1005f306:	9004      	str	r0, [sp, #16]
1005f308:	f7e1 f89e 	bl	10040448 <__aeabi_uread4>
1005f30c:	ba00      	rev	r0, r0
1005f30e:	0a01      	lsrs	r1, r0, #8
1005f310:	9804      	ldr	r0, [sp, #16]
1005f312:	0209      	lsls	r1, r1, #8
1005f314:	78c0      	ldrb	r0, [r0, #3]
1005f316:	ab0b      	add	r3, sp, #44	; 0x2c
1005f318:	4301      	orrs	r1, r0
1005f31a:	9810      	ldr	r0, [sp, #64]	; 0x40
1005f31c:	1900      	adds	r0, r0, r4
1005f31e:	6942      	ldr	r2, [r0, #20]
1005f320:	9810      	ldr	r0, [sp, #64]	; 0x40
1005f322:	5818      	ldr	r0, [r3, r0]
1005f324:	4042      	eors	r2, r0
1005f326:	4051      	eors	r1, r2
1005f328:	9810      	ldr	r0, [sp, #64]	; 0x40
1005f32a:	aa07      	add	r2, sp, #28
1005f32c:	5011      	str	r1, [r2, r0]
1005f32e:	9802      	ldr	r0, [sp, #8]
1005f330:	1c76      	adds	r6, r6, #1
1005f332:	42b0      	cmp	r0, r6
1005f334:	dce3      	bgt.n	1005f2fe <AES_CMAC_Encrypt_Append+0x1ba>
1005f336:	00b0      	lsls	r0, r6, #2
1005f338:	1901      	adds	r1, r0, r4
1005f33a:	aa0b      	add	r2, sp, #44	; 0x2c
1005f33c:	6949      	ldr	r1, [r1, #20]
1005f33e:	5812      	ldr	r2, [r2, r0]
1005f340:	4051      	eors	r1, r2
1005f342:	aa07      	add	r2, sp, #28
1005f344:	5011      	str	r1, [r2, r0]
1005f346:	9b03      	ldr	r3, [sp, #12]
1005f348:	2100      	movs	r1, #0
1005f34a:	1a1b      	subs	r3, r3, r0
1005f34c:	1942      	adds	r2, r0, r5
1005f34e:	469c      	mov	ip, r3
1005f350:	4696      	mov	lr, r2
1005f352:	e00b      	b.n	1005f36c <AES_CMAC_Encrypt_Append+0x228>
1005f354:	4672      	mov	r2, lr
1005f356:	1852      	adds	r2, r2, r1
1005f358:	5cba      	ldrb	r2, [r7, r2]
1005f35a:	00cd      	lsls	r5, r1, #3
1005f35c:	2318      	movs	r3, #24
1005f35e:	1b5b      	subs	r3, r3, r5
1005f360:	409a      	lsls	r2, r3
1005f362:	ab07      	add	r3, sp, #28
1005f364:	581d      	ldr	r5, [r3, r0]
1005f366:	406a      	eors	r2, r5
1005f368:	501a      	str	r2, [r3, r0]
1005f36a:	1c49      	adds	r1, r1, #1
1005f36c:	458c      	cmp	ip, r1
1005f36e:	dcf1      	bgt.n	1005f354 <AES_CMAC_Encrypt_Append+0x210>
1005f370:	2900      	cmp	r1, #0
1005f372:	d009      	beq.n	1005f388 <AES_CMAC_Encrypt_Append+0x244>
1005f374:	00cd      	lsls	r5, r1, #3
1005f376:	2118      	movs	r1, #24
1005f378:	aa07      	add	r2, sp, #28
1005f37a:	1b4d      	subs	r5, r1, r5
1005f37c:	5813      	ldr	r3, [r2, r0]
1005f37e:	2180      	movs	r1, #128	; 0x80
1005f380:	40a9      	lsls	r1, r5
1005f382:	404b      	eors	r3, r1
1005f384:	5013      	str	r3, [r2, r0]
1005f386:	e005      	b.n	1005f394 <AES_CMAC_Encrypt_Append+0x250>
1005f388:	a907      	add	r1, sp, #28
1005f38a:	580a      	ldr	r2, [r1, r0]
1005f38c:	2301      	movs	r3, #1
1005f38e:	07db      	lsls	r3, r3, #31
1005f390:	405a      	eors	r2, r3
1005f392:	500a      	str	r2, [r1, r0]
1005f394:	a907      	add	r1, sp, #28
1005f396:	aa0b      	add	r2, sp, #44	; 0x2c
1005f398:	e005      	b.n	1005f3a6 <AES_CMAC_Encrypt_Append+0x262>
1005f39a:	00b0      	lsls	r0, r6, #2
1005f39c:	1903      	adds	r3, r0, r4
1005f39e:	695b      	ldr	r3, [r3, #20]
1005f3a0:	5815      	ldr	r5, [r2, r0]
1005f3a2:	406b      	eors	r3, r5
1005f3a4:	500b      	str	r3, [r1, r0]
1005f3a6:	1c76      	adds	r6, r6, #1
1005f3a8:	2e04      	cmp	r6, #4
1005f3aa:	dbf6      	blt.n	1005f39a <AES_CMAC_Encrypt_Append+0x256>
1005f3ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
1005f3ae:	a807      	add	r0, sp, #28
1005f3b0:	9a01      	ldr	r2, [sp, #4]
1005f3b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
1005f3b4:	f000 f98a 	bl	1005f6cc <AES_general_enc>
1005f3b8:	7920      	ldrb	r0, [r4, #4]
1005f3ba:	2104      	movs	r1, #4
1005f3bc:	4308      	orrs	r0, r1
1005f3be:	7120      	strb	r0, [r4, #4]
1005f3c0:	2000      	movs	r0, #0
1005f3c2:	e6cb      	b.n	1005f15c <AES_CMAC_Encrypt_Append+0x18>
1005f3c4:	00000c1d 	.word	0x00000c1d

1005f3c8 <AES_CMAC_Encrypt_Finish>:
1005f3c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005f3ca:	4616      	mov	r6, r2
1005f3cc:	460f      	mov	r7, r1
1005f3ce:	0004      	movs	r4, r0
1005f3d0:	d009      	beq.n	1005f3e6 <AES_CMAC_Encrypt_Finish+0x1e>
1005f3d2:	2e00      	cmp	r6, #0
1005f3d4:	d007      	beq.n	1005f3e6 <AES_CMAC_Encrypt_Finish+0x1e>
1005f3d6:	4625      	mov	r5, r4
1005f3d8:	3580      	adds	r5, #128	; 0x80
1005f3da:	6de8      	ldr	r0, [r5, #92]	; 0x5c
1005f3dc:	1e40      	subs	r0, r0, #1
1005f3de:	2810      	cmp	r0, #16
1005f3e0:	d304      	bcc.n	1005f3ec <AES_CMAC_Encrypt_Finish+0x24>
1005f3e2:	4813      	ldr	r0, [pc, #76]	; (1005f430 <AES_CMAC_Encrypt_Finish+0x68>)
1005f3e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005f3e6:	2061      	movs	r0, #97	; 0x61
1005f3e8:	0140      	lsls	r0, r0, #5
1005f3ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005f3ec:	7920      	ldrb	r0, [r4, #4]
1005f3ee:	0640      	lsls	r0, r0, #25
1005f3f0:	d404      	bmi.n	1005f3fc <AES_CMAC_Encrypt_Finish+0x34>
1005f3f2:	2200      	movs	r2, #0
1005f3f4:	4611      	mov	r1, r2
1005f3f6:	4620      	mov	r0, r4
1005f3f8:	f7ff fea4 	bl	1005f144 <AES_CMAC_Encrypt_Append>
1005f3fc:	7920      	ldrb	r0, [r4, #4]
1005f3fe:	2102      	movs	r1, #2
1005f400:	4308      	orrs	r0, r1
1005f402:	7120      	strb	r0, [r4, #4]
1005f404:	2000      	movs	r0, #0
1005f406:	2118      	movs	r1, #24
1005f408:	e00c      	b.n	1005f424 <AES_CMAC_Encrypt_Finish+0x5c>
1005f40a:	17c2      	asrs	r2, r0, #31
1005f40c:	0f92      	lsrs	r2, r2, #30
1005f40e:	1812      	adds	r2, r2, r0
1005f410:	0892      	lsrs	r2, r2, #2
1005f412:	0092      	lsls	r2, r2, #2
1005f414:	1912      	adds	r2, r2, r4
1005f416:	0783      	lsls	r3, r0, #30
1005f418:	6952      	ldr	r2, [r2, #20]
1005f41a:	0edb      	lsrs	r3, r3, #27
1005f41c:	1acb      	subs	r3, r1, r3
1005f41e:	40da      	lsrs	r2, r3
1005f420:	543a      	strb	r2, [r7, r0]
1005f422:	1c40      	adds	r0, r0, #1
1005f424:	6dea      	ldr	r2, [r5, #92]	; 0x5c
1005f426:	4282      	cmp	r2, r0
1005f428:	dcef      	bgt.n	1005f40a <AES_CMAC_Encrypt_Finish+0x42>
1005f42a:	2000      	movs	r0, #0
1005f42c:	6032      	str	r2, [r6, #0]
1005f42e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005f430:	00000c1f 	.word	0x00000c1f

1005f434 <AES_CMAC_Encrypt_Init>:
1005f434:	b510      	push	{r4, lr}
1005f436:	0004      	movs	r4, r0
1005f438:	d007      	beq.n	1005f44a <AES_CMAC_Encrypt_Init+0x16>
1005f43a:	2302      	movs	r3, #2
1005f43c:	2200      	movs	r2, #0
1005f43e:	68a1      	ldr	r1, [r4, #8]
1005f440:	f000 fa0c 	bl	1005f85c <AESstdInit>
1005f444:	0001      	movs	r1, r0
1005f446:	d003      	beq.n	1005f450 <AES_CMAC_Encrypt_Init+0x1c>
1005f448:	e00c      	b.n	1005f464 <AES_CMAC_Encrypt_Init+0x30>
1005f44a:	2061      	movs	r0, #97	; 0x61
1005f44c:	0140      	lsls	r0, r0, #5
1005f44e:	bd10      	pop	{r4, pc}
1005f450:	2010      	movs	r0, #16
1005f452:	6120      	str	r0, [r4, #16]
1005f454:	2000      	movs	r0, #0
1005f456:	4602      	mov	r2, r0
1005f458:	0083      	lsls	r3, r0, #2
1005f45a:	191b      	adds	r3, r3, r4
1005f45c:	1c40      	adds	r0, r0, #1
1005f45e:	615a      	str	r2, [r3, #20]
1005f460:	2804      	cmp	r0, #4
1005f462:	dbf9      	blt.n	1005f458 <AES_CMAC_Encrypt_Init+0x24>
1005f464:	4608      	mov	r0, r1
1005f466:	bd10      	pop	{r4, pc}

1005f468 <AES_general_SW_enc>:
1005f468:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005f46a:	08d9      	lsrs	r1, r3, #3
1005f46c:	0049      	lsls	r1, r1, #1
1005f46e:	b083      	sub	sp, #12
1005f470:	1d89      	adds	r1, r1, #6
1005f472:	9102      	str	r1, [sp, #8]
1005f474:	6803      	ldr	r3, [r0, #0]
1005f476:	6811      	ldr	r1, [r2, #0]
1005f478:	6854      	ldr	r4, [r2, #4]
1005f47a:	404b      	eors	r3, r1
1005f47c:	6841      	ldr	r1, [r0, #4]
1005f47e:	6895      	ldr	r5, [r2, #8]
1005f480:	4061      	eors	r1, r4
1005f482:	6884      	ldr	r4, [r0, #8]
1005f484:	68c0      	ldr	r0, [r0, #12]
1005f486:	406c      	eors	r4, r5
1005f488:	46a4      	mov	ip, r4
1005f48a:	68d4      	ldr	r4, [r2, #12]
1005f48c:	0e1e      	lsrs	r6, r3, #24
1005f48e:	4060      	eors	r0, r4
1005f490:	4c8b      	ldr	r4, [pc, #556]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f492:	b2c5      	uxtb	r5, r0
1005f494:	5da6      	ldrb	r6, [r4, r6]
1005f496:	5d65      	ldrb	r5, [r4, r5]
1005f498:	0636      	lsls	r6, r6, #24
1005f49a:	4335      	orrs	r5, r6
1005f49c:	4667      	mov	r7, ip
1005f49e:	020e      	lsls	r6, r1, #8
1005f4a0:	043f      	lsls	r7, r7, #16
1005f4a2:	0e36      	lsrs	r6, r6, #24
1005f4a4:	0e3f      	lsrs	r7, r7, #24
1005f4a6:	5da6      	ldrb	r6, [r4, r6]
1005f4a8:	5de7      	ldrb	r7, [r4, r7]
1005f4aa:	0436      	lsls	r6, r6, #16
1005f4ac:	023f      	lsls	r7, r7, #8
1005f4ae:	433e      	orrs	r6, r7
1005f4b0:	4335      	orrs	r5, r6
1005f4b2:	46ae      	mov	lr, r5
1005f4b4:	0e0f      	lsrs	r7, r1, #24
1005f4b6:	b2dd      	uxtb	r5, r3
1005f4b8:	5de7      	ldrb	r7, [r4, r7]
1005f4ba:	5d66      	ldrb	r6, [r4, r5]
1005f4bc:	063f      	lsls	r7, r7, #24
1005f4be:	433e      	orrs	r6, r7
1005f4c0:	4665      	mov	r5, ip
1005f4c2:	022f      	lsls	r7, r5, #8
1005f4c4:	0405      	lsls	r5, r0, #16
1005f4c6:	0e3f      	lsrs	r7, r7, #24
1005f4c8:	0e2d      	lsrs	r5, r5, #24
1005f4ca:	5de7      	ldrb	r7, [r4, r7]
1005f4cc:	5d65      	ldrb	r5, [r4, r5]
1005f4ce:	043f      	lsls	r7, r7, #16
1005f4d0:	022d      	lsls	r5, r5, #8
1005f4d2:	432f      	orrs	r7, r5
1005f4d4:	433e      	orrs	r6, r7
1005f4d6:	b2cd      	uxtb	r5, r1
1005f4d8:	9600      	str	r6, [sp, #0]
1005f4da:	5d66      	ldrb	r6, [r4, r5]
1005f4dc:	4665      	mov	r5, ip
1005f4de:	0e2f      	lsrs	r7, r5, #24
1005f4e0:	5de7      	ldrb	r7, [r4, r7]
1005f4e2:	041d      	lsls	r5, r3, #16
1005f4e4:	063f      	lsls	r7, r7, #24
1005f4e6:	433e      	orrs	r6, r7
1005f4e8:	0207      	lsls	r7, r0, #8
1005f4ea:	0e3f      	lsrs	r7, r7, #24
1005f4ec:	0e2d      	lsrs	r5, r5, #24
1005f4ee:	5de7      	ldrb	r7, [r4, r7]
1005f4f0:	5d65      	ldrb	r5, [r4, r5]
1005f4f2:	043f      	lsls	r7, r7, #16
1005f4f4:	022d      	lsls	r5, r5, #8
1005f4f6:	432f      	orrs	r7, r5
1005f4f8:	433e      	orrs	r6, r7
1005f4fa:	9601      	str	r6, [sp, #4]
1005f4fc:	4665      	mov	r5, ip
1005f4fe:	b2ed      	uxtb	r5, r5
1005f500:	0e07      	lsrs	r7, r0, #24
1005f502:	5d66      	ldrb	r6, [r4, r5]
1005f504:	5de7      	ldrb	r7, [r4, r7]
1005f506:	040d      	lsls	r5, r1, #16
1005f508:	063f      	lsls	r7, r7, #24
1005f50a:	433e      	orrs	r6, r7
1005f50c:	021f      	lsls	r7, r3, #8
1005f50e:	0e3f      	lsrs	r7, r7, #24
1005f510:	5de7      	ldrb	r7, [r4, r7]
1005f512:	0e2d      	lsrs	r5, r5, #24
1005f514:	5d64      	ldrb	r4, [r4, r5]
1005f516:	043f      	lsls	r7, r7, #16
1005f518:	0224      	lsls	r4, r4, #8
1005f51a:	4327      	orrs	r7, r4
1005f51c:	9c02      	ldr	r4, [sp, #8]
1005f51e:	433e      	orrs	r6, r7
1005f520:	1e64      	subs	r4, r4, #1
1005f522:	3210      	adds	r2, #16
1005f524:	9402      	str	r4, [sp, #8]
1005f526:	2c00      	cmp	r4, #0
1005f528:	dd63      	ble.n	1005f5f2 <AES_general_SW_enc+0x18a>
1005f52a:	4c66      	ldr	r4, [pc, #408]	; (1005f6c4 <AES_general_SW_enc+0x25c>)
1005f52c:	4670      	mov	r0, lr
1005f52e:	4020      	ands	r0, r4
1005f530:	0043      	lsls	r3, r0, #1
1005f532:	4670      	mov	r0, lr
1005f534:	4964      	ldr	r1, [pc, #400]	; (1005f6c8 <AES_general_SW_enc+0x260>)
1005f536:	09c0      	lsrs	r0, r0, #7
1005f538:	4008      	ands	r0, r1
1005f53a:	211b      	movs	r1, #27
1005f53c:	4348      	muls	r0, r1
1005f53e:	4043      	eors	r3, r0
1005f540:	4670      	mov	r0, lr
1005f542:	4058      	eors	r0, r3
1005f544:	2118      	movs	r1, #24
1005f546:	41c8      	rors	r0, r1
1005f548:	4043      	eors	r3, r0
1005f54a:	4670      	mov	r0, lr
1005f54c:	2110      	movs	r1, #16
1005f54e:	41c8      	rors	r0, r1
1005f550:	4043      	eors	r3, r0
1005f552:	4670      	mov	r0, lr
1005f554:	2108      	movs	r1, #8
1005f556:	41c8      	rors	r0, r1
1005f558:	4043      	eors	r3, r0
1005f55a:	6810      	ldr	r0, [r2, #0]
1005f55c:	4d5a      	ldr	r5, [pc, #360]	; (1005f6c8 <AES_general_SW_enc+0x260>)
1005f55e:	4043      	eors	r3, r0
1005f560:	9800      	ldr	r0, [sp, #0]
1005f562:	4f59      	ldr	r7, [pc, #356]	; (1005f6c8 <AES_general_SW_enc+0x260>)
1005f564:	4020      	ands	r0, r4
1005f566:	0041      	lsls	r1, r0, #1
1005f568:	9800      	ldr	r0, [sp, #0]
1005f56a:	09c0      	lsrs	r0, r0, #7
1005f56c:	4028      	ands	r0, r5
1005f56e:	251b      	movs	r5, #27
1005f570:	4368      	muls	r0, r5
1005f572:	4041      	eors	r1, r0
1005f574:	9800      	ldr	r0, [sp, #0]
1005f576:	2518      	movs	r5, #24
1005f578:	4048      	eors	r0, r1
1005f57a:	41e8      	rors	r0, r5
1005f57c:	4041      	eors	r1, r0
1005f57e:	9800      	ldr	r0, [sp, #0]
1005f580:	2510      	movs	r5, #16
1005f582:	41e8      	rors	r0, r5
1005f584:	4041      	eors	r1, r0
1005f586:	9800      	ldr	r0, [sp, #0]
1005f588:	2508      	movs	r5, #8
1005f58a:	41e8      	rors	r0, r5
1005f58c:	4041      	eors	r1, r0
1005f58e:	6850      	ldr	r0, [r2, #4]
1005f590:	9d01      	ldr	r5, [sp, #4]
1005f592:	4041      	eors	r1, r0
1005f594:	9801      	ldr	r0, [sp, #4]
1005f596:	09ed      	lsrs	r5, r5, #7
1005f598:	4020      	ands	r0, r4
1005f59a:	403d      	ands	r5, r7
1005f59c:	0040      	lsls	r0, r0, #1
1005f59e:	271b      	movs	r7, #27
1005f5a0:	437d      	muls	r5, r7
1005f5a2:	4068      	eors	r0, r5
1005f5a4:	9f01      	ldr	r7, [sp, #4]
1005f5a6:	4605      	mov	r5, r0
1005f5a8:	407d      	eors	r5, r7
1005f5aa:	2718      	movs	r7, #24
1005f5ac:	41fd      	rors	r5, r7
1005f5ae:	4068      	eors	r0, r5
1005f5b0:	9d01      	ldr	r5, [sp, #4]
1005f5b2:	2710      	movs	r7, #16
1005f5b4:	41fd      	rors	r5, r7
1005f5b6:	4068      	eors	r0, r5
1005f5b8:	9d01      	ldr	r5, [sp, #4]
1005f5ba:	2708      	movs	r7, #8
1005f5bc:	41fd      	rors	r5, r7
1005f5be:	4068      	eors	r0, r5
1005f5c0:	6895      	ldr	r5, [r2, #8]
1005f5c2:	4068      	eors	r0, r5
1005f5c4:	4684      	mov	ip, r0
1005f5c6:	4630      	mov	r0, r6
1005f5c8:	4020      	ands	r0, r4
1005f5ca:	4d3f      	ldr	r5, [pc, #252]	; (1005f6c8 <AES_general_SW_enc+0x260>)
1005f5cc:	09f4      	lsrs	r4, r6, #7
1005f5ce:	402c      	ands	r4, r5
1005f5d0:	0040      	lsls	r0, r0, #1
1005f5d2:	251b      	movs	r5, #27
1005f5d4:	436c      	muls	r4, r5
1005f5d6:	4060      	eors	r0, r4
1005f5d8:	4604      	mov	r4, r0
1005f5da:	4074      	eors	r4, r6
1005f5dc:	2518      	movs	r5, #24
1005f5de:	41ec      	rors	r4, r5
1005f5e0:	4060      	eors	r0, r4
1005f5e2:	2410      	movs	r4, #16
1005f5e4:	4635      	mov	r5, r6
1005f5e6:	41e5      	rors	r5, r4
1005f5e8:	2408      	movs	r4, #8
1005f5ea:	4068      	eors	r0, r5
1005f5ec:	41e6      	rors	r6, r4
1005f5ee:	4070      	eors	r0, r6
1005f5f0:	e74b      	b.n	1005f48a <AES_general_SW_enc+0x22>
1005f5f2:	4c33      	ldr	r4, [pc, #204]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f5f4:	b2c5      	uxtb	r5, r0
1005f5f6:	5d66      	ldrb	r6, [r4, r5]
1005f5f8:	0e1d      	lsrs	r5, r3, #24
1005f5fa:	5d64      	ldrb	r4, [r4, r5]
1005f5fc:	0624      	lsls	r4, r4, #24
1005f5fe:	4326      	orrs	r6, r4
1005f600:	020c      	lsls	r4, r1, #8
1005f602:	0e25      	lsrs	r5, r4, #24
1005f604:	4c2e      	ldr	r4, [pc, #184]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f606:	5d64      	ldrb	r4, [r4, r5]
1005f608:	4665      	mov	r5, ip
1005f60a:	042d      	lsls	r5, r5, #16
1005f60c:	0e2f      	lsrs	r7, r5, #24
1005f60e:	4d2c      	ldr	r5, [pc, #176]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f610:	0424      	lsls	r4, r4, #16
1005f612:	5ded      	ldrb	r5, [r5, r7]
1005f614:	022d      	lsls	r5, r5, #8
1005f616:	432c      	orrs	r4, r5
1005f618:	4326      	orrs	r6, r4
1005f61a:	4c29      	ldr	r4, [pc, #164]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f61c:	9600      	str	r6, [sp, #0]
1005f61e:	b2dd      	uxtb	r5, r3
1005f620:	5d65      	ldrb	r5, [r4, r5]
1005f622:	0e0e      	lsrs	r6, r1, #24
1005f624:	5da4      	ldrb	r4, [r4, r6]
1005f626:	0624      	lsls	r4, r4, #24
1005f628:	4325      	orrs	r5, r4
1005f62a:	4664      	mov	r4, ip
1005f62c:	0224      	lsls	r4, r4, #8
1005f62e:	0e26      	lsrs	r6, r4, #24
1005f630:	4c23      	ldr	r4, [pc, #140]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f632:	5da4      	ldrb	r4, [r4, r6]
1005f634:	0406      	lsls	r6, r0, #16
1005f636:	0e37      	lsrs	r7, r6, #24
1005f638:	4e21      	ldr	r6, [pc, #132]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f63a:	0424      	lsls	r4, r4, #16
1005f63c:	5df6      	ldrb	r6, [r6, r7]
1005f63e:	0236      	lsls	r6, r6, #8
1005f640:	4334      	orrs	r4, r6
1005f642:	4325      	orrs	r5, r4
1005f644:	46ae      	mov	lr, r5
1005f646:	4c1e      	ldr	r4, [pc, #120]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f648:	b2cd      	uxtb	r5, r1
1005f64a:	5d64      	ldrb	r4, [r4, r5]
1005f64c:	4665      	mov	r5, ip
1005f64e:	4e1c      	ldr	r6, [pc, #112]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f650:	0e2f      	lsrs	r7, r5, #24
1005f652:	5df5      	ldrb	r5, [r6, r7]
1005f654:	062d      	lsls	r5, r5, #24
1005f656:	432c      	orrs	r4, r5
1005f658:	0205      	lsls	r5, r0, #8
1005f65a:	0e2f      	lsrs	r7, r5, #24
1005f65c:	5df5      	ldrb	r5, [r6, r7]
1005f65e:	041f      	lsls	r7, r3, #16
1005f660:	042e      	lsls	r6, r5, #16
1005f662:	0e3d      	lsrs	r5, r7, #24
1005f664:	4f16      	ldr	r7, [pc, #88]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f666:	5d7f      	ldrb	r7, [r7, r5]
1005f668:	4665      	mov	r5, ip
1005f66a:	023f      	lsls	r7, r7, #8
1005f66c:	433e      	orrs	r6, r7
1005f66e:	4334      	orrs	r4, r6
1005f670:	b2ee      	uxtb	r6, r5
1005f672:	4d13      	ldr	r5, [pc, #76]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f674:	5daf      	ldrb	r7, [r5, r6]
1005f676:	0e05      	lsrs	r5, r0, #24
1005f678:	4811      	ldr	r0, [pc, #68]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f67a:	5d40      	ldrb	r0, [r0, r5]
1005f67c:	0600      	lsls	r0, r0, #24
1005f67e:	4307      	orrs	r7, r0
1005f680:	0218      	lsls	r0, r3, #8
1005f682:	0e03      	lsrs	r3, r0, #24
1005f684:	480e      	ldr	r0, [pc, #56]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f686:	5cc0      	ldrb	r0, [r0, r3]
1005f688:	0409      	lsls	r1, r1, #16
1005f68a:	0e0b      	lsrs	r3, r1, #24
1005f68c:	490c      	ldr	r1, [pc, #48]	; (1005f6c0 <AES_general_SW_enc+0x258>)
1005f68e:	0400      	lsls	r0, r0, #16
1005f690:	5cc9      	ldrb	r1, [r1, r3]
1005f692:	6893      	ldr	r3, [r2, #8]
1005f694:	0209      	lsls	r1, r1, #8
1005f696:	4308      	orrs	r0, r1
1005f698:	4307      	orrs	r7, r0
1005f69a:	6810      	ldr	r0, [r2, #0]
1005f69c:	9e00      	ldr	r6, [sp, #0]
1005f69e:	4063      	eors	r3, r4
1005f6a0:	6851      	ldr	r1, [r2, #4]
1005f6a2:	9c04      	ldr	r4, [sp, #16]
1005f6a4:	4070      	eors	r0, r6
1005f6a6:	68d2      	ldr	r2, [r2, #12]
1005f6a8:	6020      	str	r0, [r4, #0]
1005f6aa:	4675      	mov	r5, lr
1005f6ac:	9804      	ldr	r0, [sp, #16]
1005f6ae:	4069      	eors	r1, r5
1005f6b0:	6041      	str	r1, [r0, #4]
1005f6b2:	9804      	ldr	r0, [sp, #16]
1005f6b4:	407a      	eors	r2, r7
1005f6b6:	6083      	str	r3, [r0, #8]
1005f6b8:	9804      	ldr	r0, [sp, #16]
1005f6ba:	60c2      	str	r2, [r0, #12]
1005f6bc:	b007      	add	sp, #28
1005f6be:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f6c0:	1006007c 	.word	0x1006007c
1005f6c4:	7f7f7f7f 	.word	0x7f7f7f7f
1005f6c8:	01010101 	.word	0x01010101

1005f6cc <AES_general_enc>:
1005f6cc:	b500      	push	{lr}
1005f6ce:	f7ff fecb 	bl	1005f468 <AES_general_SW_enc>
1005f6d2:	bd00      	pop	{pc}

1005f6d4 <AES_keyschedule_enc>:
1005f6d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005f6d6:	9802      	ldr	r0, [sp, #8]
1005f6d8:	0886      	lsrs	r6, r0, #2
1005f6da:	2400      	movs	r4, #0
1005f6dc:	e00d      	b.n	1005f6fa <AES_keyschedule_enc+0x26>
1005f6de:	9800      	ldr	r0, [sp, #0]
1005f6e0:	00a7      	lsls	r7, r4, #2
1005f6e2:	183d      	adds	r5, r7, r0
1005f6e4:	4628      	mov	r0, r5
1005f6e6:	f7e0 feaf 	bl	10040448 <__aeabi_uread4>
1005f6ea:	ba00      	rev	r0, r0
1005f6ec:	0a00      	lsrs	r0, r0, #8
1005f6ee:	78e9      	ldrb	r1, [r5, #3]
1005f6f0:	0200      	lsls	r0, r0, #8
1005f6f2:	4308      	orrs	r0, r1
1005f6f4:	9901      	ldr	r1, [sp, #4]
1005f6f6:	1c64      	adds	r4, r4, #1
1005f6f8:	51c8      	str	r0, [r1, r7]
1005f6fa:	42b4      	cmp	r4, r6
1005f6fc:	dbef      	blt.n	1005f6de <AES_keyschedule_enc+0xa>
1005f6fe:	9901      	ldr	r1, [sp, #4]
1005f700:	9a02      	ldr	r2, [sp, #8]
1005f702:	4608      	mov	r0, r1
1005f704:	f000 f802 	bl	1005f70c <AES_keyschedule_enc_LL>
1005f708:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

1005f70c <AES_keyschedule_enc_LL>:
1005f70c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005f70e:	0892      	lsrs	r2, r2, #2
1005f710:	2300      	movs	r3, #0
1005f712:	e003      	b.n	1005f71c <AES_keyschedule_enc_LL+0x10>
1005f714:	009c      	lsls	r4, r3, #2
1005f716:	5905      	ldr	r5, [r0, r4]
1005f718:	510d      	str	r5, [r1, r4]
1005f71a:	1c5b      	adds	r3, r3, #1
1005f71c:	4293      	cmp	r3, r2
1005f71e:	dbf9      	blt.n	1005f714 <AES_keyschedule_enc_LL+0x8>
1005f720:	4f4d      	ldr	r7, [pc, #308]	; (1005f858 <AES_keyschedule_enc_LL+0x14c>)
1005f722:	1ff8      	subs	r0, r7, #7
1005f724:	38f9      	subs	r0, #249	; 0xf9
1005f726:	2a04      	cmp	r2, #4
1005f728:	d048      	beq.n	1005f7bc <AES_keyschedule_enc_LL+0xb0>
1005f72a:	2a06      	cmp	r2, #6
1005f72c:	d06d      	beq.n	1005f80a <AES_keyschedule_enc_LL+0xfe>
1005f72e:	2a08      	cmp	r2, #8
1005f730:	d143      	bne.n	1005f7ba <AES_keyschedule_enc_LL+0xae>
1005f732:	2300      	movs	r3, #0
1005f734:	69ca      	ldr	r2, [r1, #28]
1005f736:	0215      	lsls	r5, r2, #8
1005f738:	0e2d      	lsrs	r5, r5, #24
1005f73a:	0e14      	lsrs	r4, r2, #24
1005f73c:	5d45      	ldrb	r5, [r0, r5]
1005f73e:	5d04      	ldrb	r4, [r0, r4]
1005f740:	062d      	lsls	r5, r5, #24
1005f742:	432c      	orrs	r4, r5
1005f744:	0415      	lsls	r5, r2, #16
1005f746:	0e2d      	lsrs	r5, r5, #24
1005f748:	b2d2      	uxtb	r2, r2
1005f74a:	5d45      	ldrb	r5, [r0, r5]
1005f74c:	5c82      	ldrb	r2, [r0, r2]
1005f74e:	042d      	lsls	r5, r5, #16
1005f750:	0212      	lsls	r2, r2, #8
1005f752:	4315      	orrs	r5, r2
1005f754:	432c      	orrs	r4, r5
1005f756:	009d      	lsls	r5, r3, #2
1005f758:	597d      	ldr	r5, [r7, r5]
1005f75a:	680a      	ldr	r2, [r1, #0]
1005f75c:	406a      	eors	r2, r5
1005f75e:	4054      	eors	r4, r2
1005f760:	2201      	movs	r2, #1
1005f762:	1c5b      	adds	r3, r3, #1
1005f764:	620c      	str	r4, [r1, #32]
1005f766:	0094      	lsls	r4, r2, #2
1005f768:	1865      	adds	r5, r4, r1
1005f76a:	590c      	ldr	r4, [r1, r4]
1005f76c:	69ee      	ldr	r6, [r5, #28]
1005f76e:	1c52      	adds	r2, r2, #1
1005f770:	4066      	eors	r6, r4
1005f772:	622e      	str	r6, [r5, #32]
1005f774:	2a04      	cmp	r2, #4
1005f776:	dbf6      	blt.n	1005f766 <AES_keyschedule_enc_LL+0x5a>
1005f778:	6aca      	ldr	r2, [r1, #44]	; 0x2c
1005f77a:	0e15      	lsrs	r5, r2, #24
1005f77c:	b2d4      	uxtb	r4, r2
1005f77e:	5d45      	ldrb	r5, [r0, r5]
1005f780:	5d04      	ldrb	r4, [r0, r4]
1005f782:	062d      	lsls	r5, r5, #24
1005f784:	432c      	orrs	r4, r5
1005f786:	0215      	lsls	r5, r2, #8
1005f788:	0e2d      	lsrs	r5, r5, #24
1005f78a:	0412      	lsls	r2, r2, #16
1005f78c:	5d45      	ldrb	r5, [r0, r5]
1005f78e:	0e12      	lsrs	r2, r2, #24
1005f790:	5c82      	ldrb	r2, [r0, r2]
1005f792:	042d      	lsls	r5, r5, #16
1005f794:	0212      	lsls	r2, r2, #8
1005f796:	4315      	orrs	r5, r2
1005f798:	690a      	ldr	r2, [r1, #16]
1005f79a:	432c      	orrs	r4, r5
1005f79c:	4054      	eors	r4, r2
1005f79e:	2205      	movs	r2, #5
1005f7a0:	630c      	str	r4, [r1, #48]	; 0x30
1005f7a2:	0094      	lsls	r4, r2, #2
1005f7a4:	1865      	adds	r5, r4, r1
1005f7a6:	590c      	ldr	r4, [r1, r4]
1005f7a8:	69ee      	ldr	r6, [r5, #28]
1005f7aa:	1c52      	adds	r2, r2, #1
1005f7ac:	4066      	eors	r6, r4
1005f7ae:	622e      	str	r6, [r5, #32]
1005f7b0:	2a08      	cmp	r2, #8
1005f7b2:	dbf6      	blt.n	1005f7a2 <AES_keyschedule_enc_LL+0x96>
1005f7b4:	3120      	adds	r1, #32
1005f7b6:	2b07      	cmp	r3, #7
1005f7b8:	ddbc      	ble.n	1005f734 <AES_keyschedule_enc_LL+0x28>
1005f7ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f7bc:	2200      	movs	r2, #0
1005f7be:	68cb      	ldr	r3, [r1, #12]
1005f7c0:	021d      	lsls	r5, r3, #8
1005f7c2:	0e2d      	lsrs	r5, r5, #24
1005f7c4:	0e1c      	lsrs	r4, r3, #24
1005f7c6:	5d45      	ldrb	r5, [r0, r5]
1005f7c8:	5d04      	ldrb	r4, [r0, r4]
1005f7ca:	062d      	lsls	r5, r5, #24
1005f7cc:	432c      	orrs	r4, r5
1005f7ce:	041d      	lsls	r5, r3, #16
1005f7d0:	0e2d      	lsrs	r5, r5, #24
1005f7d2:	b2db      	uxtb	r3, r3
1005f7d4:	5d45      	ldrb	r5, [r0, r5]
1005f7d6:	5cc3      	ldrb	r3, [r0, r3]
1005f7d8:	042d      	lsls	r5, r5, #16
1005f7da:	021b      	lsls	r3, r3, #8
1005f7dc:	431d      	orrs	r5, r3
1005f7de:	432c      	orrs	r4, r5
1005f7e0:	0095      	lsls	r5, r2, #2
1005f7e2:	597d      	ldr	r5, [r7, r5]
1005f7e4:	680b      	ldr	r3, [r1, #0]
1005f7e6:	406b      	eors	r3, r5
1005f7e8:	405c      	eors	r4, r3
1005f7ea:	2301      	movs	r3, #1
1005f7ec:	1c52      	adds	r2, r2, #1
1005f7ee:	610c      	str	r4, [r1, #16]
1005f7f0:	009c      	lsls	r4, r3, #2
1005f7f2:	1865      	adds	r5, r4, r1
1005f7f4:	590c      	ldr	r4, [r1, r4]
1005f7f6:	68ee      	ldr	r6, [r5, #12]
1005f7f8:	1c5b      	adds	r3, r3, #1
1005f7fa:	4066      	eors	r6, r4
1005f7fc:	612e      	str	r6, [r5, #16]
1005f7fe:	2b04      	cmp	r3, #4
1005f800:	dbf6      	blt.n	1005f7f0 <AES_keyschedule_enc_LL+0xe4>
1005f802:	3110      	adds	r1, #16
1005f804:	2a09      	cmp	r2, #9
1005f806:	ddda      	ble.n	1005f7be <AES_keyschedule_enc_LL+0xb2>
1005f808:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f80a:	2200      	movs	r2, #0
1005f80c:	68cb      	ldr	r3, [r1, #12]
1005f80e:	021d      	lsls	r5, r3, #8
1005f810:	0e2d      	lsrs	r5, r5, #24
1005f812:	0e1c      	lsrs	r4, r3, #24
1005f814:	5d45      	ldrb	r5, [r0, r5]
1005f816:	5d04      	ldrb	r4, [r0, r4]
1005f818:	062d      	lsls	r5, r5, #24
1005f81a:	432c      	orrs	r4, r5
1005f81c:	041d      	lsls	r5, r3, #16
1005f81e:	0e2d      	lsrs	r5, r5, #24
1005f820:	b2db      	uxtb	r3, r3
1005f822:	5d45      	ldrb	r5, [r0, r5]
1005f824:	5cc3      	ldrb	r3, [r0, r3]
1005f826:	042d      	lsls	r5, r5, #16
1005f828:	021b      	lsls	r3, r3, #8
1005f82a:	431d      	orrs	r5, r3
1005f82c:	432c      	orrs	r4, r5
1005f82e:	0095      	lsls	r5, r2, #2
1005f830:	597d      	ldr	r5, [r7, r5]
1005f832:	680b      	ldr	r3, [r1, #0]
1005f834:	406b      	eors	r3, r5
1005f836:	405c      	eors	r4, r3
1005f838:	2301      	movs	r3, #1
1005f83a:	1c52      	adds	r2, r2, #1
1005f83c:	610c      	str	r4, [r1, #16]
1005f83e:	009c      	lsls	r4, r3, #2
1005f840:	1865      	adds	r5, r4, r1
1005f842:	590c      	ldr	r4, [r1, r4]
1005f844:	68ee      	ldr	r6, [r5, #12]
1005f846:	1c5b      	adds	r3, r3, #1
1005f848:	4066      	eors	r6, r4
1005f84a:	612e      	str	r6, [r5, #16]
1005f84c:	2b04      	cmp	r3, #4
1005f84e:	dbf6      	blt.n	1005f83e <AES_keyschedule_enc_LL+0x132>
1005f850:	3118      	adds	r1, #24
1005f852:	2a09      	cmp	r2, #9
1005f854:	ddda      	ble.n	1005f80c <AES_keyschedule_enc_LL+0x100>
1005f856:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f858:	1006017c 	.word	0x1006017c

1005f85c <AESstdInit>:
1005f85c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005f85e:	469e      	mov	lr, r3
1005f860:	468c      	mov	ip, r1
1005f862:	2800      	cmp	r0, #0
1005f864:	d007      	beq.n	1005f876 <AESstdInit+0x1a>
1005f866:	2900      	cmp	r1, #0
1005f868:	d005      	beq.n	1005f876 <AESstdInit+0x1a>
1005f86a:	0759      	lsls	r1, r3, #29
1005f86c:	0f8c      	lsrs	r4, r1, #30
1005f86e:	2a00      	cmp	r2, #0
1005f870:	d104      	bne.n	1005f87c <AESstdInit+0x20>
1005f872:	2c01      	cmp	r4, #1
1005f874:	d002      	beq.n	1005f87c <AESstdInit+0x20>
1005f876:	2061      	movs	r0, #97	; 0x61
1005f878:	0140      	lsls	r0, r0, #5
1005f87a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005f87c:	6a41      	ldr	r1, [r0, #36]	; 0x24
1005f87e:	2910      	cmp	r1, #16
1005f880:	d003      	beq.n	1005f88a <AESstdInit+0x2e>
1005f882:	2918      	cmp	r1, #24
1005f884:	d001      	beq.n	1005f88a <AESstdInit+0x2e>
1005f886:	2920      	cmp	r1, #32
1005f888:	d105      	bne.n	1005f896 <AESstdInit+0x3a>
1005f88a:	2c01      	cmp	r4, #1
1005f88c:	d005      	beq.n	1005f89a <AESstdInit+0x3e>
1005f88e:	6901      	ldr	r1, [r0, #16]
1005f890:	1e49      	subs	r1, r1, #1
1005f892:	2910      	cmp	r1, #16
1005f894:	d301      	bcc.n	1005f89a <AESstdInit+0x3e>
1005f896:	481e      	ldr	r0, [pc, #120]	; (1005f910 <AESstdInit+0xb4>)
1005f898:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005f89a:	60c2      	str	r2, [r0, #12]
1005f89c:	7901      	ldrb	r1, [r0, #4]
1005f89e:	23f9      	movs	r3, #249	; 0xf9
1005f8a0:	4019      	ands	r1, r3
1005f8a2:	7101      	strb	r1, [r0, #4]
1005f8a4:	2c01      	cmp	r4, #1
1005f8a6:	d020      	beq.n	1005f8ea <AESstdInit+0x8e>
1005f8a8:	2100      	movs	r1, #0
1005f8aa:	460b      	mov	r3, r1
1005f8ac:	008d      	lsls	r5, r1, #2
1005f8ae:	182d      	adds	r5, r5, r0
1005f8b0:	1c49      	adds	r1, r1, #1
1005f8b2:	616b      	str	r3, [r5, #20]
1005f8b4:	2904      	cmp	r1, #4
1005f8b6:	dbf9      	blt.n	1005f8ac <AESstdInit+0x50>
1005f8b8:	2100      	movs	r1, #0
1005f8ba:	2718      	movs	r7, #24
1005f8bc:	e012      	b.n	1005f8e4 <AESstdInit+0x88>
1005f8be:	17cb      	asrs	r3, r1, #31
1005f8c0:	0f9b      	lsrs	r3, r3, #30
1005f8c2:	185b      	adds	r3, r3, r1
1005f8c4:	089b      	lsrs	r3, r3, #2
1005f8c6:	009b      	lsls	r3, r3, #2
1005f8c8:	181d      	adds	r5, r3, r0
1005f8ca:	462b      	mov	r3, r5
1005f8cc:	3314      	adds	r3, #20
1005f8ce:	9300      	str	r3, [sp, #0]
1005f8d0:	078b      	lsls	r3, r1, #30
1005f8d2:	5c56      	ldrb	r6, [r2, r1]
1005f8d4:	0edb      	lsrs	r3, r3, #27
1005f8d6:	1afb      	subs	r3, r7, r3
1005f8d8:	696d      	ldr	r5, [r5, #20]
1005f8da:	409e      	lsls	r6, r3
1005f8dc:	4335      	orrs	r5, r6
1005f8de:	9b00      	ldr	r3, [sp, #0]
1005f8e0:	1c49      	adds	r1, r1, #1
1005f8e2:	601d      	str	r5, [r3, #0]
1005f8e4:	6903      	ldr	r3, [r0, #16]
1005f8e6:	428b      	cmp	r3, r1
1005f8e8:	dce9      	bgt.n	1005f8be <AESstdInit+0x62>
1005f8ea:	7901      	ldrb	r1, [r0, #4]
1005f8ec:	07c9      	lsls	r1, r1, #31
1005f8ee:	d10c      	bne.n	1005f90a <AESstdInit+0xae>
1005f8f0:	4661      	mov	r1, ip
1005f8f2:	6081      	str	r1, [r0, #8]
1005f8f4:	4671      	mov	r1, lr
1005f8f6:	07c9      	lsls	r1, r1, #31
1005f8f8:	d001      	beq.n	1005f8fe <AESstdInit+0xa2>
1005f8fa:	2c03      	cmp	r4, #3
1005f8fc:	d105      	bne.n	1005f90a <AESstdInit+0xae>
1005f8fe:	4601      	mov	r1, r0
1005f900:	6a42      	ldr	r2, [r0, #36]	; 0x24
1005f902:	3128      	adds	r1, #40	; 0x28
1005f904:	4660      	mov	r0, ip
1005f906:	f7ff fee5 	bl	1005f6d4 <AES_keyschedule_enc>
1005f90a:	2000      	movs	r0, #0
1005f90c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005f90e:	0000      	.short	0x0000
1005f910:	00000c1f 	.word	0x00000c1f
1005f914:	ffffffff 	.word	0xffffffff
1005f918:	ffffffff 	.word	0xffffffff
1005f91c:	ffffffff 	.word	0xffffffff
	...
1005f92c:	00000001 	.word	0x00000001
1005f930:	ffffffff 	.word	0xffffffff
1005f934:	fc632551 	.word	0xfc632551
1005f938:	f3b9cac2 	.word	0xf3b9cac2
1005f93c:	a7179e84 	.word	0xa7179e84
1005f940:	bce6faad 	.word	0xbce6faad
1005f944:	ffffffff 	.word	0xffffffff
1005f948:	ffffffff 	.word	0xffffffff
1005f94c:	00000000 	.word	0x00000000
1005f950:	ffffffff 	.word	0xffffffff
1005f954:	02003f02 	.word	0x02003f02
1005f958:	3c02303e 	.word	0x3c02303e
1005f95c:	4c3b0220 	.word	0x4c3b0220
1005f960:	02403a02 	.word	0x02403a02
1005f964:	3402b239 	.word	0x3402b239
1005f968:	0b35025b 	.word	0x0b35025b
1005f96c:	00000000 	.word	0x00000000

1005f970 <hci_command_table>:
1005f970:	00000406 10042f2f 0000041d 10042f63     ....//......c/..
1005f980:	00000c01 10042f95 00000c03 10042fc1     ...../......./..
1005f990:	00000c2d 100422e1 00001001 10042333     -...."......3#..
1005f9a0:	00001002 10042feb 00001003 10043027     ...../......'0..
1005f9b0:	00001009 1004305f 00001405 100423d1     ...._0.......#..
1005f9c0:	00002001 10043097 00002002 10042421     . ...0... ..!$..
1005f9d0:	00002003 100430c3 00002005 100430fb     . ...0... ...0..
1005f9e0:	00002006 10043129 00002007 10042467     . ..)1... ..g$..
1005f9f0:	00002008 10043181 00002009 100431b1     . ...1... ...1..
1005fa00:	0000200a 100431e1 0000200b 1004320f     . ...1... ...2..
1005fa10:	0000200c 10043255 0000200d 10043285     . ..U2... ...2..
1005fa20:	0000200e 10043319 0000200f 1004249f     . ...3... ...$..
1005fa30:	00002010 10043341 00002011 1004336b     . ..A3... ..k3..
1005fa40:	00002012 1004339b 00002013 100433cb     . ...3... ...3..
1005fa50:	00002014 1004343b 00002015 10043469     . ..;4... ..i4..
1005fa60:	00002016 100434b9 00002017 100434ed     . ...4... ...4..
1005fa70:	00002018 1004352b 00002019 10043563     . ..+5... ..c5..
1005fa80:	0000201a 100435a5 0000201b 100435eb     . ...5... ...5..
1005fa90:	0000201c 1004362f 0000201d 10043667     . ../6... ..g6..
1005faa0:	0000201e 10043695 0000201f 100424d7     . ...6... ...$..
1005fab0:	00002022 100436c7 00002023 10042513     " ...6..# ...%..
1005fac0:	00002024 1004371b 00002025 10043757     $ ...7..% ..W7..
1005fad0:	00002026 10043781 00002027 100437af     & ...7..' ...7..
1005fae0:	00002028 100437e7 00002029 10043817     ( ...7..) ...8..
1005faf0:	0000202a 1004255d 0000202b 10043841     * ..]%..+ ..A8..
1005fb00:	0000202c 1004387f 0000202d 100438bd     , ...8..- ...8..
1005fb10:	0000202e 100438eb 0000202f 10042595     . ...8../ ...%..
1005fb20:	0000fc00 100425fd 0000fc01 10042639     .....%......9&..
1005fb30:	0000fc0c 1004391f 0000fc0d 10042745     .....9......E'..
1005fb40:	0000fc0f 10043951 0000fc14 100427a3     ....Q9.......'..
1005fb50:	0000fc15 10043981 0000fc16 100439b1     .....9.......9..
1005fb60:	0000fc17 100439db 0000fc18 10043a25     .....9......%:..
1005fb70:	0000fc19 100427f1 0000fc1a 10043a59     .....'......Y:..
1005fb80:	0000fc20 10043a9b 0000fc2b 10043ac5      ....:..+....:..
1005fb90:	0000fc81 10043aff 0000fc82 10042861     .....:......a(..
1005fba0:	0000fc83 100428f3 0000fc84 10043b29     .....(......);..
1005fbb0:	0000fc85 10043b73 0000fc86 10043ba1     ....s;.......;..
1005fbc0:	0000fc87 10043c01 0000fc88 10043c37     .....<......7<..
1005fbd0:	0000fc89 10043c7f 0000fc8a 10042985     .....<.......)..
1005fbe0:	0000fc8b 10043cb5 0000fc8c 10043ce5     .....<.......<..
1005fbf0:	0000fc8d 10043d25 0000fc8e 10043d59     ....%=......Y=..
1005fc00:	0000fc8f 10043d89 0000fc90 100429eb     .....=.......)..
1005fc10:	0000fc91 10043db7 0000fc92 10043deb     .....=.......=..
1005fc20:	0000fc93 10043e15 0000fc94 10043e4b     .....>......K>..
1005fc30:	0000fc95 10043e75 0000fc96 10043ea9     ....u>.......>..
1005fc40:	0000fc97 10043ee9 0000fc98 10043f29     .....>......)?..
1005fc50:	0000fc99 10043faf 0000fc9a 10044067     .....?......g@..
1005fc60:	0000fc9b 100440b1 0000fc9c 10044137     .....@......7A..
1005fc70:	0000fc9d 100441bd 0000fc9e 100441eb     .....A.......A..
1005fc80:	0000fc9f 1004425b 0000fca0 10044291     ....[B.......B..
1005fc90:	0000fca1 10042a39 0000fca2 100442cd     ....9*.......B..
1005fca0:	0000fca3 10042ad3 0000fca4 10044317     .....*.......C..
1005fcb0:	0000fca5 10044347 0000fca6 1004437d     ....GC......}C..
1005fcc0:	0000fca7 10042b53 0000fca8 100443b3     ....S+.......C..
1005fcd0:	0000fca9 10042bc7 0000fcaa 100443f1     .....+.......C..
1005fce0:	0000fd01 10044421 0000fd02 10042c35     ....!D......5,..
1005fcf0:	0000fd03 10042ca9 0000fd04 10042d2f     .....,....../-..
1005fd00:	0000fd05 10042dcd 0000fd06 10044449     .....-......ID..
1005fd10:	0000fd07 1004448f 0000fd08 100444c9     .....D.......D..
1005fd20:	0000fd09 100444fd 0000fd0a 10044539     .....D......9E..
1005fd30:	0000fd0b 1004457b 0000fd0c 100445af     ....{E.......E..
1005fd40:	0000fd0d 100445f3 0000fd0e 1004464b     .....E......KF..
1005fd50:	0000fd0f 100446b5 0000fd10 1004471d     .....F.......G..
1005fd60:	0000fd11 10044769 0000fd12 1004479f     ....iG.......G..
1005fd70:	0000fd13 100447d3 0000fd14 10044827     .....G......'H..
1005fd80:	0000fd15 1004486b 0000fd16 100448af     ....kH.......H..
1005fd90:	0000fd17 10044919 0000fd18 1004495d     .....I......]I..
1005fda0:	0000fd19 10044999 0000fd1a 10044a03     .....I.......J..
1005fdb0:	0000fd1b 10044a47 0000fd1c 10044a9d     ....GJ.......J..
1005fdc0:	0000fd1d 10044add 0000fd1e 10044b29     .....J......)K..
1005fdd0:	0000fd1f 10044b75 0000fd20 10044bc1     ....uK.. ....K..
1005fde0:	0000fd21 10044c05 0000fd22 10044c45     !....L.."...EL..
1005fdf0:	0000fd23 10044c81 0000fd24 10044cc1     #....L..$....L..
1005fe00:	0000fd25 10044d01 0000fd26 10044d35     %....M..&...5M..
1005fe10:	0000fd27 10044d81 0000fd28 10044db5     '....M..(....M..
1005fe20:	0000fd29 10044df3 0000fd2a 10042e95     )....M..*.......
1005fe30:	0000fd2c 10044e4b 0000fd2d 10044eb5     ,...KN..-....N..
1005fe40:	0000fd2e 10044eeb 0000fd81 10044f29     .....N......)O..
1005fe50:	0000fd82 10044f81 1702080c 0201010d     .....O..........
1005fe60:	01010909 ff090206 ffffffff ffff0909     ................
1005fe70:	0000ffff d898c296 f4a13945 2deb33a0     ........E9...3.-
1005fe80:	77037d81 63a440f2 f8bce6e5 e12c4247     .}.w.@.c....GB,.
1005fe90:	6b17d1f2 37bf51f5 cbb64068 6b315ece     ...k.Q.7h@...^1k
1005fea0:	2bce3357 7c0f9e16 8ee7eb4a fe1a7f9b     W3.+...|J.......
1005feb0:	4fe342e2 0107020d 0069009e 0035004f     .B.O......i.O.5.
1005fec0:	00150020 01020101 02000102 02020001      ...............
1005fed0:	01020102 01010101 01020002 83886c00     .............l..
1005fee0:	a5f5aa91 0b376038 83605adb 359de6be     ....8`7..Z`....5
1005fef0:	0301480e f4fddbcc f49111ac f9a5b9ef     .H..............
1005ff00:	2c83a7e9 97be2c5e b003d2f2 89d28b20     ...,^,...... ...
1005ff10:	1c8ed015 ed302474 6345c28f 52155c76     ....t$0...Ecv\.R
1005ff20:	329abf5a 2aeb6d63 809c4965 3c1abddc     Z..2cm.*eI.....<
1005ff30:	99b8a6cd 40b79958 ff607beb 103f504a     ....X..@.{`.JP?.
1005ff40:	c9b3e3d2 c55f3874 49f6d4a3 0000003f     ....t8_....I?...

1005ff50 <evnt_callback_pfunc>:
1005ff50:	1005c4f5 1005c519 1005c53d 1005c585     ........=.......
1005ff60:	1005c6c1 1005c561 1005c5f9 1005c6e9     ....a...........
1005ff70:	1005c699 1005c64d 1005c629 1005c4f1     ....M...).......
1005ff80:	1005c749 1005c5c9 1005c711 1005c435     I...........5...
1005ff90:	1005c73d 1005c771 1005c1e9 1005c229     =...q.......)...
1005ffa0:	1005c24d 1005c169 1005c295 1005c189     M...i...........
1005ffb0:	1005c1a5 1005c26d 1005c149 1005c205     ....m...I.......
1005ffc0:	1005c1c5 1005c4a9 1005c4cd 1005c475     ............u...
1005ffd0:	1005c45d 1005c423 1005c2b1 1005c3b9     ]...#...........
1005ffe0:	1005bfad 1005c015 1005bff1 1005c0b5     ................
1005fff0:	1005c101 1005c069 1005c0dd 1005c08d     ....i...........
10060000:	1005c125 1005c03d 1005bfd1 1005c32d     %...=.......-...
10060010:	1005c355 1005c395 1005c305 1005c2dd     U...............
10060020:	1005c411 1005c37d 1005c3e9 1005c3d9     ....}...........
10060030:	1005c403 1005c3f9                       ........

10060038 <int_evnt_callback_pfunc>:
10060038:	1005ca79 1005ca39 1005c801 1005c827     y...9.......'...
10060048:	1005c841 1005c879 1005c90d 1005c85b     A...y.......[...
10060058:	1005c89f 1005c919 1005c8f3 1005c8cd     ................
10060068:	1005c8af                                ....

1006006c <bleBaseUuid>:
1006006c:	5f9b34fb 80000080 00001000 00000000     .4._............

1006007c <Sbox>:
1006007c:	7b777c63 c56f6bf2 2b670130 76abd7fe     c|w{.ko.0.g+...v
1006008c:	7dc982ca f04759fa afa2d4ad c072a49c     ...}.YG.......r.
1006009c:	2693fdb7 ccf73f36 f1e5a534 1531d871     ...&6?..4...q.1.
100600ac:	c323c704 9a059618 e2801207 75b227eb     ..#..........'.u
100600bc:	1a2c8309 a05a6e1b b3d63b52 842fe329     ..,..nZ.R;..)./.
100600cc:	ed00d153 5bb1fc20 39becb6a cf584c4a     S... ..[j..9JLX.
100600dc:	fbaaefd0 85334d43 7f02f945 a89f3c50     ....CM3.E...P<..
100600ec:	8f40a351 f5389d92 21dab6bc d2f3ff10     Q.@...8....!....
100600fc:	ec130ccd 1744975f 3d7ea7c4 73195d64     ...._.D...~=d].s
1006010c:	dc4f8160 88902a22 14b8ee46 db0b5ede     `.O."*..F....^..
1006011c:	0a3a32e0 5c240649 62acd3c2 79e49591     .2:.I.$\...b...y
1006012c:	6d37c8e7 a94ed58d eaf4566c 08ae7a65     ..7m..N.lV..ez..
1006013c:	2e2578ba c6b4a61c 1f74dde8 8a8bbd4b     .x%.......t.K...
1006014c:	66b53e70 0ef60348 b9573561 9e1dc186     p>.fH...a5W.....
1006015c:	1198f8e1 948ed969 e9871e9b df2855ce     ....i........U(.
1006016c:	0d89a18c 6842e6bf 0f2d9941 16bb54b0     ......BhA.-..T..

1006017c <rcon>:
1006017c:	01000000 02000000 04000000 08000000     ................
1006018c:	10000000 20000000 40000000 80000000     ....... ...@....
1006019c:	1b000000 36000000                       .......6
